Compiled from "BooleanNode.java"
public class com.fasterxml.jackson.databind.node.BooleanNode extends com.fasterxml.jackson.databind.node.ValueNode {
  public static final com.fasterxml.jackson.databind.node.BooleanNode TRUE;

  public static final com.fasterxml.jackson.databind.node.BooleanNode FALSE;

  private final boolean _value;

  private com.fasterxml.jackson.databind.node.BooleanNode(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/databind/node/ValueNode."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field _value:Z
       9: return

  public static com.fasterxml.jackson.databind.node.BooleanNode getTrue();
    Code:
       0: getstatic     #3                  // Field TRUE:Lcom/fasterxml/jackson/databind/node/BooleanNode;
       3: areturn

  public static com.fasterxml.jackson.databind.node.BooleanNode getFalse();
    Code:
       0: getstatic     #4                  // Field FALSE:Lcom/fasterxml/jackson/databind/node/BooleanNode;
       3: areturn

  public static com.fasterxml.jackson.databind.node.BooleanNode valueOf(boolean);
    Code:
       0: iload_0
       1: ifeq          10
       4: getstatic     #3                  // Field TRUE:Lcom/fasterxml/jackson/databind/node/BooleanNode;
       7: goto          13
      10: getstatic     #4                  // Field FALSE:Lcom/fasterxml/jackson/databind/node/BooleanNode;
      13: areturn

  public com.fasterxml.jackson.databind.node.JsonNodeType getNodeType();
    Code:
       0: getstatic     #5                  // Field com/fasterxml/jackson/databind/node/JsonNodeType.BOOLEAN:Lcom/fasterxml/jackson/databind/node/JsonNodeType;
       3: areturn

  public com.fasterxml.jackson.core.JsonToken asToken();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Z
       4: ifeq          13
       7: getstatic     #6                  // Field com/fasterxml/jackson/core/JsonToken.VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;
      10: goto          16
      13: getstatic     #7                  // Field com/fasterxml/jackson/core/JsonToken.VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;
      16: areturn

  public boolean booleanValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Z
       4: ireturn

  public java.lang.String asText();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Z
       4: ifeq          12
       7: ldc           #8                  // String true
       9: goto          14
      12: ldc           #9                  // String false
      14: areturn

  public boolean asBoolean();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Z
       4: ireturn

  public boolean asBoolean(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Z
       4: ireturn

  public int asInt(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Z
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public long asLong(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Z
       4: ifeq          11
       7: lconst_1
       8: goto          12
      11: lconst_0
      12: lreturn

  public double asDouble(double);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Z
       4: ifeq          11
       7: dconst_1
       8: goto          12
      11: dconst_0
      12: dreturn

  public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field _value:Z
       5: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V
       8: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Z
       4: ifeq          11
       7: iconst_3
       8: goto          12
      11: iconst_1
      12: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #11                 // class com/fasterxml/jackson/databind/node/BooleanNode
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: getfield      #2                  // Field _value:Z
      26: aload_1
      27: checkcast     #11                 // class com/fasterxml/jackson/databind/node/BooleanNode
      30: getfield      #2                  // Field _value:Z
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  static {};
    Code:
       0: new           #11                 // class com/fasterxml/jackson/databind/node/BooleanNode
       3: dup
       4: iconst_1
       5: invokespecial #12                 // Method "<init>":(Z)V
       8: putstatic     #3                  // Field TRUE:Lcom/fasterxml/jackson/databind/node/BooleanNode;
      11: new           #11                 // class com/fasterxml/jackson/databind/node/BooleanNode
      14: dup
      15: iconst_0
      16: invokespecial #12                 // Method "<init>":(Z)V
      19: putstatic     #4                  // Field FALSE:Lcom/fasterxml/jackson/databind/node/BooleanNode;
      22: return
}
