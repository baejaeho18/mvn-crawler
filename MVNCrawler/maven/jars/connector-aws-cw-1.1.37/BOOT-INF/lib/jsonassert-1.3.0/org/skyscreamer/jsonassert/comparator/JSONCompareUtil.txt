Compiled from "JSONCompareUtil.java"
public final class org.skyscreamer.jsonassert.comparator.JSONCompareUtil {
  private static java.lang.Integer INTEGER_ONE;

  private org.skyscreamer.jsonassert.comparator.JSONCompareUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Map<java.lang.Object, org.json.JSONObject> arrayOfJsonObjectToMap(org.json.JSONArray, java.lang.String) throws org.json.JSONException;
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_0
      12: invokevirtual #4                  // Method org/json/JSONArray.length:()I
      15: if_icmpge     53
      18: aload_0
      19: iload_3
      20: invokevirtual #5                  // Method org/json/JSONArray.get:(I)Ljava/lang/Object;
      23: checkcast     #6                  // class org/json/JSONObject
      26: astore        4
      28: aload         4
      30: aload_1
      31: invokevirtual #7                  // Method org/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      34: astore        5
      36: aload_2
      37: aload         5
      39: aload         4
      41: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: iinc          3, 1
      50: goto          10
      53: aload_2
      54: areturn

  public static java.lang.String findUniqueKey(org.json.JSONArray) throws org.json.JSONException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #5                  // Method org/json/JSONArray.get:(I)Ljava/lang/Object;
       5: checkcast     #6                  // class org/json/JSONObject
       8: astore_1
       9: aload_1
      10: invokestatic  #9                  // Method getKeys:(Lorg/json/JSONObject;)Ljava/util/Set;
      13: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          51
      28: aload_2
      29: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #13                 // class java/lang/String
      37: astore_3
      38: aload_3
      39: aload_0
      40: invokestatic  #14                 // Method isUsableAsUniqueKey:(Ljava/lang/String;Lorg/json/JSONArray;)Z
      43: ifeq          48
      46: aload_3
      47: areturn
      48: goto          19
      51: aconst_null
      52: areturn

  public static boolean isUsableAsUniqueKey(java.lang.String, org.json.JSONArray) throws org.json.JSONException;
    Code:
       0: new           #15                 // class java/util/HashSet
       3: dup
       4: invokespecial #16                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_1
      12: invokevirtual #4                  // Method org/json/JSONArray.length:()I
      15: if_icmpge     106
      18: aload_1
      19: iload_3
      20: invokevirtual #5                  // Method org/json/JSONArray.get:(I)Ljava/lang/Object;
      23: astore        4
      25: aload         4
      27: instanceof    #6                  // class org/json/JSONObject
      30: ifeq          98
      33: aload         4
      35: checkcast     #6                  // class org/json/JSONObject
      38: astore        5
      40: aload         5
      42: aload_0
      43: invokevirtual #17                 // Method org/json/JSONObject.has:(Ljava/lang/String;)Z
      46: ifeq          93
      49: aload         5
      51: aload_0
      52: invokevirtual #7                  // Method org/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      55: astore        6
      57: aload         6
      59: invokestatic  #18                 // Method isSimpleValue:(Ljava/lang/Object;)Z
      62: ifeq          88
      65: aload_2
      66: aload         6
      68: invokeinterface #19,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      73: ifne          88
      76: aload_2
      77: aload         6
      79: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      84: pop
      85: goto          90
      88: iconst_0
      89: ireturn
      90: goto          95
      93: iconst_0
      94: ireturn
      95: goto          100
      98: iconst_0
      99: ireturn
     100: iinc          3, 1
     103: goto          10
     106: iconst_1
     107: ireturn

  public static java.util.List<java.lang.Object> jsonArrayToList(org.json.JSONArray) throws org.json.JSONException;
    Code:
       0: new           #21                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #4                  // Method org/json/JSONArray.length:()I
       8: invokespecial #22                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: invokevirtual #4                  // Method org/json/JSONArray.length:()I
      19: if_icmpge     40
      22: aload_1
      23: aload_0
      24: iload_2
      25: invokevirtual #5                  // Method org/json/JSONArray.get:(I)Ljava/lang/Object;
      28: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: iinc          2, 1
      37: goto          14
      40: aload_1
      41: areturn

  public static boolean allSimpleValues(org.json.JSONArray) throws org.json.JSONException;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokevirtual #4                  // Method org/json/JSONArray.length:()I
       7: if_icmpge     29
      10: aload_0
      11: iload_1
      12: invokevirtual #5                  // Method org/json/JSONArray.get:(I)Ljava/lang/Object;
      15: invokestatic  #18                 // Method isSimpleValue:(Ljava/lang/Object;)Z
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: iinc          1, 1
      26: goto          2
      29: iconst_1
      30: ireturn

  public static boolean isSimpleValue(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #6                  // class org/json/JSONObject
       4: ifne          18
       7: aload_0
       8: instanceof    #24                 // class org/json/JSONArray
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public static boolean allJSONObjects(org.json.JSONArray) throws org.json.JSONException;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokevirtual #4                  // Method org/json/JSONArray.length:()I
       7: if_icmpge     29
      10: aload_0
      11: iload_1
      12: invokevirtual #5                  // Method org/json/JSONArray.get:(I)Ljava/lang/Object;
      15: instanceof    #6                  // class org/json/JSONObject
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: iinc          1, 1
      26: goto          2
      29: iconst_1
      30: ireturn

  public static boolean allJSONArrays(org.json.JSONArray) throws org.json.JSONException;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokevirtual #4                  // Method org/json/JSONArray.length:()I
       7: if_icmpge     29
      10: aload_0
      11: iload_1
      12: invokevirtual #5                  // Method org/json/JSONArray.get:(I)Ljava/lang/Object;
      15: instanceof    #24                 // class org/json/JSONArray
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: iinc          1, 1
      26: goto          2
      29: iconst_1
      30: ireturn

  public static java.util.Set<java.lang.String> getKeys(org.json.JSONObject);
    Code:
       0: new           #25                 // class java/util/TreeSet
       3: dup
       4: invokespecial #26                 // Method java/util/TreeSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #27                 // Method org/json/JSONObject.keys:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          41
      22: aload_1
      23: aload_2
      24: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #13                 // class java/lang/String
      32: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      37: pop
      38: goto          13
      41: aload_1
      42: areturn

  public static java.lang.String qualify(java.lang.String, java.lang.String);
    Code:
       0: ldc           #28                 // String
       2: aload_0
       3: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          13
       9: aload_1
      10: goto          36
      13: new           #30                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_0
      21: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #33                 // String .
      26: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  public static java.lang.String formatUniqueKey(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #35                 // String [
      13: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #36                 // String =
      22: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #38                 // String ]
      31: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public static <T> java.util.Map<T, java.lang.Integer> getCardinalityMap(java.util.Collection<T>);
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          90
      24: aload_2
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #41                 // class java/lang/Integer
      41: checkcast     #41                 // class java/lang/Integer
      44: astore        4
      46: aload         4
      48: ifnonnull     65
      51: aload_1
      52: aload_3
      53: getstatic     #42                 // Field INTEGER_ONE:Ljava/lang/Integer;
      56: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: goto          87
      65: aload_1
      66: aload_3
      67: new           #41                 // class java/lang/Integer
      70: dup
      71: aload         4
      73: invokevirtual #43                 // Method java/lang/Integer.intValue:()I
      76: iconst_1
      77: iadd
      78: invokespecial #44                 // Method java/lang/Integer."<init>":(I)V
      81: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: goto          15
      90: aload_1
      91: areturn

  static {};
    Code:
       0: new           #41                 // class java/lang/Integer
       3: dup
       4: iconst_1
       5: invokespecial #44                 // Method java/lang/Integer."<init>":(I)V
       8: putstatic     #42                 // Field INTEGER_ONE:Ljava/lang/Integer;
      11: return
}
