Compiled from "JSONUtil.java"
public class net.minidev.json.JSONUtil$JsonSmartFieldFilter implements net.minidev.asm.FieldFilter {
  public net.minidev.json.JSONUtil$JsonSmartFieldFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean canUse(java.lang.reflect.Field);
    Code:
       0: aload_1
       1: ldc_w         #2                  // class net/minidev/json/annotate/JsonIgnore
       4: invokevirtual #3                  // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       7: checkcast     #2                  // class net/minidev/json/annotate/JsonIgnore
      10: astore_2
      11: aload_2
      12: ifnull        26
      15: aload_2
      16: invokeinterface #4,  1            // InterfaceMethod net/minidev/json/annotate/JsonIgnore.value:()Z
      21: ifeq          26
      24: iconst_0
      25: ireturn
      26: iconst_1
      27: ireturn

  public boolean canUse(java.lang.reflect.Field, java.lang.reflect.Method);
    Code:
       0: aload_2
       1: ldc_w         #2                  // class net/minidev/json/annotate/JsonIgnore
       4: invokevirtual #5                  // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       7: checkcast     #2                  // class net/minidev/json/annotate/JsonIgnore
      10: astore_3
      11: aload_3
      12: ifnull        26
      15: aload_3
      16: invokeinterface #4,  1            // InterfaceMethod net/minidev/json/annotate/JsonIgnore.value:()Z
      21: ifeq          26
      24: iconst_0
      25: ireturn
      26: iconst_1
      27: ireturn

  public boolean canRead(java.lang.reflect.Field);
    Code:
       0: iconst_1
       1: ireturn

  public boolean canWrite(java.lang.reflect.Field);
    Code:
       0: iconst_1
       1: ireturn
}
