Compiled from "JSONValue.java"
public class net.minidev.json.JSONValue {
  public static net.minidev.json.JSONStyle COMPRESSION;

  public static final net.minidev.json.reader.JsonWriter defaultWriter;

  public static final net.minidev.json.writer.JsonReader defaultReader;

  public net.minidev.json.JSONValue();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.Object parse(java.io.InputStream);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: invokevirtual #5                  // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/InputStream;)Ljava/lang/Object;
      14: areturn
      15: astore_1
      16: aconst_null
      17: areturn
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public static java.lang.Object parse(byte[]);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: invokevirtual #7                  // Method net/minidev/json/parser/JSONParser.parse:([B)Ljava/lang/Object;
      14: areturn
      15: astore_1
      16: aconst_null
      17: areturn
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public static <T> T parse(java.io.InputStream, java.lang.Class<T>);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      16: aload_1
      17: invokevirtual #9                  // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      20: invokevirtual #10                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/InputStream;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      23: areturn
      24: astore_2
      25: aload_2
      26: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      29: aconst_null
      30: areturn
    Exception table:
       from    to  target type
           0    23    24   Class java/lang/Exception

  public static java.lang.Object parse(java.io.Reader);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: invokevirtual #12                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/Reader;)Ljava/lang/Object;
      14: areturn
      15: astore_1
      16: aconst_null
      17: areturn
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public static <T> T parse(byte[], java.lang.Class<T>);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      16: aload_1
      17: invokevirtual #9                  // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      20: invokevirtual #13                 // Method net/minidev/json/parser/JSONParser.parse:([BLnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      23: areturn
      24: astore_2
      25: aload_2
      26: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      29: aconst_null
      30: areturn
    Exception table:
       from    to  target type
           0    23    24   Class java/lang/Exception

  public static <T> T parse(java.io.Reader, java.lang.Class<T>);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      16: aload_1
      17: invokevirtual #9                  // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      20: invokevirtual #14                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      23: areturn
      24: astore_2
      25: aload_2
      26: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      29: aconst_null
      30: areturn
    Exception table:
       from    to  target type
           0    23    24   Class java/lang/Exception

  public static <T> T parse(java.io.Reader, T);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: new           #15                 // class net/minidev/json/writer/UpdaterMapper
      16: dup
      17: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      20: aload_1
      21: invokespecial #16                 // Method net/minidev/json/writer/UpdaterMapper."<init>":(Lnet/minidev/json/writer/JsonReader;Ljava/lang/Object;)V
      24: invokevirtual #14                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      27: areturn
      28: astore_2
      29: aload_2
      30: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      33: aconst_null
      34: areturn
    Exception table:
       from    to  target type
           0    27    28   Class java/lang/Exception

  protected static <T> T parse(java.io.Reader, net.minidev.json.writer.JsonReaderI<T>);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: aload_1
      14: invokevirtual #14                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      17: areturn
      18: astore_2
      19: aload_2
      20: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      23: aconst_null
      24: areturn
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/Exception

  public static <T> T parse(java.lang.String, java.lang.Class<T>);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      16: aload_1
      17: invokevirtual #9                  // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      20: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      23: areturn
      24: astore_2
      25: aload_2
      26: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      29: aconst_null
      30: areturn
    Exception table:
       from    to  target type
           0    23    24   Class java/lang/Exception

  public static <T> T parse(java.io.InputStream, T);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: new           #15                 // class net/minidev/json/writer/UpdaterMapper
      16: dup
      17: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      20: aload_1
      21: invokespecial #16                 // Method net/minidev/json/writer/UpdaterMapper."<init>":(Lnet/minidev/json/writer/JsonReader;Ljava/lang/Object;)V
      24: invokevirtual #10                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/InputStream;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      27: areturn
      28: astore_2
      29: aload_2
      30: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      33: aconst_null
      34: areturn
    Exception table:
       from    to  target type
           0    27    28   Class java/lang/Exception

  public static <T> T parse(java.lang.String, T);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: new           #15                 // class net/minidev/json/writer/UpdaterMapper
      16: dup
      17: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      20: aload_1
      21: invokespecial #16                 // Method net/minidev/json/writer/UpdaterMapper."<init>":(Lnet/minidev/json/writer/JsonReader;Ljava/lang/Object;)V
      24: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      27: areturn
      28: astore_2
      29: aload_2
      30: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      33: aconst_null
      34: areturn
    Exception table:
       from    to  target type
           0    27    28   Class java/lang/Exception

  protected static <T> T parse(byte[], net.minidev.json.writer.JsonReaderI<T>);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: aload_1
      14: invokevirtual #13                 // Method net/minidev/json/parser/JSONParser.parse:([BLnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      17: areturn
      18: astore_2
      19: aconst_null
      20: areturn
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/Exception

  protected static <T> T parse(java.lang.String, net.minidev.json.writer.JsonReaderI<T>);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: aload_1
      14: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      17: areturn
      18: astore_2
      19: aload_2
      20: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      23: aconst_null
      24: areturn
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/Exception

  public static java.lang.Object parse(java.lang.String);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: invokevirtual #18                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;)Ljava/lang/Object;
      14: areturn
      15: astore_1
      16: aconst_null
      17: areturn
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public static java.lang.Object parseKeepingOrder(java.io.Reader);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      14: getfield      #19                 // Field net/minidev/json/writer/JsonReader.DEFAULT_ORDERED:Lnet/minidev/json/writer/JsonReaderI;
      17: invokevirtual #14                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      20: areturn
      21: astore_1
      22: aconst_null
      23: areturn
    Exception table:
       from    to  target type
           0    20    21   Class java/lang/Exception

  public static java.lang.Object parseKeepingOrder(java.lang.String);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      14: getfield      #19                 // Field net/minidev/json/writer/JsonReader.DEFAULT_ORDERED:Lnet/minidev/json/writer/JsonReaderI;
      17: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      20: areturn
      21: astore_1
      22: aconst_null
      23: areturn
    Exception table:
       from    to  target type
           0    20    21   Class java/lang/Exception

  public static java.lang.String compress(java.lang.String, net.minidev.json.JSONStyle);
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: new           #2                  // class net/minidev/json/parser/JSONParser
      11: dup
      12: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
      15: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      18: aload_0
      19: new           #22                 // class net/minidev/json/writer/CompessorMapper
      22: dup
      23: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      26: aload_2
      27: aload_1
      28: invokespecial #23                 // Method net/minidev/json/writer/CompessorMapper."<init>":(Lnet/minidev/json/writer/JsonReader;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
      31: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      34: pop
      35: aload_2
      36: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
      40: astore_2
      41: aload_2
      42: invokevirtual #11                 // Method java/lang/Exception.printStackTrace:()V
      45: aload_0
      46: areturn
    Exception table:
       from    to  target type
           0    39    40   Class java/lang/Exception

  public static java.lang.String compress(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #25                 // Field net/minidev/json/JSONStyle.MAX_COMPRESS:Lnet/minidev/json/JSONStyle;
       4: invokestatic  #26                 // Method compress:(Ljava/lang/String;Lnet/minidev/json/JSONStyle;)Ljava/lang/String;
       7: areturn

  public static java.lang.String uncompress(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #27                 // Field net/minidev/json/JSONStyle.NO_COMPRESS:Lnet/minidev/json/JSONStyle;
       4: invokestatic  #26                 // Method compress:(Ljava/lang/String;Lnet/minidev/json/JSONStyle;)Ljava/lang/String;
       7: areturn

  public static java.lang.Object parseWithException(byte[]) throws java.io.IOException, net.minidev.json.parser.ParseException;
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      14: getfield      #28                 // Field net/minidev/json/writer/JsonReader.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      17: invokevirtual #13                 // Method net/minidev/json/parser/JSONParser.parse:([BLnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      20: areturn

  public static java.lang.Object parseWithException(java.io.InputStream) throws java.io.IOException, net.minidev.json.parser.ParseException;
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      14: getfield      #28                 // Field net/minidev/json/writer/JsonReader.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      17: invokevirtual #10                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/InputStream;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      20: areturn

  public static java.lang.Object parseWithException(java.io.Reader) throws java.io.IOException, net.minidev.json.parser.ParseException;
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      14: getfield      #28                 // Field net/minidev/json/writer/JsonReader.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      17: invokevirtual #14                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      20: areturn

  public static java.lang.Object parseWithException(java.lang.String) throws net.minidev.json.parser.ParseException;
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      14: getfield      #28                 // Field net/minidev/json/writer/JsonReader.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      17: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      20: areturn

  public static <T> T parseWithException(java.lang.String, java.lang.Class<T>) throws net.minidev.json.parser.ParseException;
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      16: aload_1
      17: invokevirtual #9                  // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      20: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      23: areturn

  public static java.lang.Object parseStrict(java.io.Reader) throws java.io.IOException, net.minidev.json.parser.ParseException;
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: sipush        656
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      14: getfield      #28                 // Field net/minidev/json/writer/JsonReader.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      17: invokevirtual #14                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      20: areturn

  public static java.lang.Object parseStrict(java.lang.String) throws net.minidev.json.parser.ParseException;
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: sipush        656
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      14: getfield      #28                 // Field net/minidev/json/writer/JsonReader.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      17: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      20: areturn

  public static boolean isValidJsonStrict(java.io.Reader) throws java.io.IOException;
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: sipush        656
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #29                 // Field net/minidev/json/writer/FakeMapper.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      14: invokevirtual #14                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      17: pop
      18: iconst_1
      19: ireturn
      20: astore_1
      21: iconst_0
      22: ireturn
    Exception table:
       from    to  target type
           0    19    20   Class net/minidev/json/parser/ParseException

  public static boolean isValidJsonStrict(java.lang.String);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: sipush        656
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #29                 // Field net/minidev/json/writer/FakeMapper.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      14: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      17: pop
      18: iconst_1
      19: ireturn
      20: astore_1
      21: iconst_0
      22: ireturn
    Exception table:
       from    to  target type
           0    19    20   Class net/minidev/json/parser/ParseException

  public static boolean isValidJson(java.io.Reader) throws java.io.IOException;
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #29                 // Field net/minidev/json/writer/FakeMapper.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      14: invokevirtual #14                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      17: pop
      18: iconst_1
      19: ireturn
      20: astore_1
      21: iconst_0
      22: ireturn
    Exception table:
       from    to  target type
           0    19    20   Class net/minidev/json/parser/ParseException

  public static boolean isValidJson(java.lang.String);
    Code:
       0: new           #2                  // class net/minidev/json/parser/JSONParser
       3: dup
       4: getstatic     #3                  // Field net/minidev/json/parser/JSONParser.DEFAULT_PERMISSIVE_MODE:I
       7: invokespecial #4                  // Method net/minidev/json/parser/JSONParser."<init>":(I)V
      10: aload_0
      11: getstatic     #29                 // Field net/minidev/json/writer/FakeMapper.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
      14: invokevirtual #17                 // Method net/minidev/json/parser/JSONParser.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      17: pop
      18: iconst_1
      19: ireturn
      20: astore_1
      21: iconst_0
      22: ireturn
    Exception table:
       from    to  target type
           0    19    20   Class net/minidev/json/parser/ParseException

  public static void writeJSONString(java.lang.Object, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #31                 // Field COMPRESSION:Lnet/minidev/json/JSONStyle;
       5: invokestatic  #32                 // Method writeJSONString:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
       8: return

  public static <T> void remapField(java.lang.Class<T>, java.lang.String, java.lang.String);
    Code:
       0: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #33                 // Method net/minidev/json/writer/JsonReader.remapField:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
       9: getstatic     #34                 // Field defaultWriter:Lnet/minidev/json/reader/JsonWriter;
      12: aload_0
      13: aload_2
      14: aload_1
      15: invokevirtual #35                 // Method net/minidev/json/reader/JsonWriter.remapField:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
      18: return

  public static <T> void registerWriter(java.lang.Class<?>, net.minidev.json.reader.JsonWriterI<T>);
    Code:
       0: getstatic     #34                 // Field defaultWriter:Lnet/minidev/json/reader/JsonWriter;
       3: aload_1
       4: iconst_1
       5: anewarray     #36                 // class java/lang/Class
       8: dup
       9: iconst_0
      10: aload_0
      11: aastore
      12: invokevirtual #37                 // Method net/minidev/json/reader/JsonWriter.registerWriter:(Lnet/minidev/json/reader/JsonWriterI;[Ljava/lang/Class;)V
      15: return

  public static <T> void registerReader(java.lang.Class<T>, net.minidev.json.writer.JsonReaderI<T>);
    Code:
       0: getstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
       3: aload_0
       4: aload_1
       5: invokevirtual #38                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
       8: return

  public static void writeJSONString(java.lang.Object, java.lang.Appendable, net.minidev.json.JSONStyle) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: aload_1
       5: ldc           #39                 // String null
       7: invokeinterface #40,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      12: pop
      13: return
      14: aload_0
      15: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: astore_3
      19: getstatic     #34                 // Field defaultWriter:Lnet/minidev/json/reader/JsonWriter;
      22: aload_3
      23: invokevirtual #42                 // Method net/minidev/json/reader/JsonWriter.getWrite:(Ljava/lang/Class;)Lnet/minidev/json/reader/JsonWriterI;
      26: astore        4
      28: aload         4
      30: ifnonnull     86
      33: aload_3
      34: invokevirtual #43                 // Method java/lang/Class.isArray:()Z
      37: ifeq          48
      40: getstatic     #44                 // Field net/minidev/json/reader/JsonWriter.arrayWriter:Lnet/minidev/json/reader/JsonWriterI;
      43: astore        4
      45: goto          70
      48: getstatic     #34                 // Field defaultWriter:Lnet/minidev/json/reader/JsonWriter;
      51: aload_0
      52: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      55: invokevirtual #45                 // Method net/minidev/json/reader/JsonWriter.getWriterByInterface:(Ljava/lang/Class;)Lnet/minidev/json/reader/JsonWriterI;
      58: astore        4
      60: aload         4
      62: ifnonnull     70
      65: getstatic     #46                 // Field net/minidev/json/reader/JsonWriter.beansWriterASM:Lnet/minidev/json/reader/JsonWriterI;
      68: astore        4
      70: getstatic     #34                 // Field defaultWriter:Lnet/minidev/json/reader/JsonWriter;
      73: aload         4
      75: iconst_1
      76: anewarray     #36                 // class java/lang/Class
      79: dup
      80: iconst_0
      81: aload_3
      82: aastore
      83: invokevirtual #37                 // Method net/minidev/json/reader/JsonWriter.registerWriter:(Lnet/minidev/json/reader/JsonWriterI;[Ljava/lang/Class;)V
      86: aload         4
      88: aload_0
      89: aload_1
      90: aload_2
      91: invokeinterface #47,  4           // InterfaceMethod net/minidev/json/reader/JsonWriterI.writeJSONString:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
      96: return

  public static java.lang.String toJSONString(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #31                 // Field COMPRESSION:Lnet/minidev/json/JSONStyle;
       4: invokestatic  #48                 // Method toJSONString:(Ljava/lang/Object;Lnet/minidev/json/JSONStyle;)Ljava/lang/String;
       7: areturn

  public static java.lang.String toJSONString(java.lang.Object, net.minidev.json.JSONStyle);
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: aload_1
      11: invokestatic  #32                 // Method writeJSONString:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
      14: goto          18
      17: astore_3
      18: aload_2
      19: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
    Exception table:
       from    to  target type
           8    14    17   Class java/io/IOException

  public static java.lang.String escape(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #31                 // Field COMPRESSION:Lnet/minidev/json/JSONStyle;
       4: invokestatic  #50                 // Method escape:(Ljava/lang/String;Lnet/minidev/json/JSONStyle;)Ljava/lang/String;
       7: areturn

  public static java.lang.String escape(java.lang.String, net.minidev.json.JSONStyle);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #20                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      13: astore_2
      14: aload_1
      15: aload_0
      16: aload_2
      17: invokevirtual #51                 // Method net/minidev/json/JSONStyle.escape:(Ljava/lang/String;Ljava/lang/Appendable;)V
      20: aload_2
      21: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  public static void escape(java.lang.String, java.lang.Appendable);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #31                 // Field COMPRESSION:Lnet/minidev/json/JSONStyle;
       5: invokestatic  #52                 // Method escape:(Ljava/lang/String;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
       8: return

  public static void escape(java.lang.String, java.lang.Appendable, net.minidev.json.JSONStyle);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_2
       6: aload_0
       7: aload_1
       8: invokevirtual #51                 // Method net/minidev/json/JSONStyle.escape:(Ljava/lang/String;Ljava/lang/Appendable;)V
      11: return

  static {};
    Code:
       0: getstatic     #27                 // Field net/minidev/json/JSONStyle.NO_COMPRESS:Lnet/minidev/json/JSONStyle;
       3: putstatic     #31                 // Field COMPRESSION:Lnet/minidev/json/JSONStyle;
       6: new           #53                 // class net/minidev/json/reader/JsonWriter
       9: dup
      10: invokespecial #54                 // Method net/minidev/json/reader/JsonWriter."<init>":()V
      13: putstatic     #34                 // Field defaultWriter:Lnet/minidev/json/reader/JsonWriter;
      16: new           #55                 // class net/minidev/json/writer/JsonReader
      19: dup
      20: invokespecial #56                 // Method net/minidev/json/writer/JsonReader."<init>":()V
      23: putstatic     #8                  // Field defaultReader:Lnet/minidev/json/writer/JsonReader;
      26: return
}
