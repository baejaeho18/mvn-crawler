Compiled from "UpdaterMapper.java"
public class net.minidev.json.writer.UpdaterMapper<T> extends net.minidev.json.writer.JsonReaderI<T> {
  final T obj;

  final net.minidev.json.writer.JsonReaderI<?> mapper;

  public net.minidev.json.writer.UpdaterMapper(net.minidev.json.writer.JsonReader, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/minidev/json/writer/JsonReaderI."<init>":(Lnet/minidev/json/writer/JsonReader;)V
       5: aload_2
       6: ifnonnull     19
       9: new           #2                  // class java/lang/NullPointerException
      12: dup
      13: ldc           #3                  // String can not update null Object
      15: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field obj:Ljava/lang/Object;
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: invokevirtual #7                  // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      33: putfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
      36: return

  public net.minidev.json.writer.UpdaterMapper(net.minidev.json.writer.JsonReader, T, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/minidev/json/writer/JsonReaderI."<init>":(Lnet/minidev/json/writer/JsonReader;)V
       5: aload_2
       6: ifnonnull     19
       9: new           #2                  // class java/lang/NullPointerException
      12: dup
      13: ldc           #3                  // String can not update null Object
      15: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field obj:Ljava/lang/Object;
      24: aload_0
      25: aload_1
      26: aload_3
      27: invokevirtual #9                  // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/reflect/Type;)Lnet/minidev/json/writer/JsonReaderI;
      30: putfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
      33: return

  public net.minidev.json.writer.JsonReaderI<?> startObject(java.lang.String) throws net.minidev.json.parser.ParseException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
       4: aload_0
       5: getfield      #5                  // Field obj:Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #10                 // Method net/minidev/json/writer/JsonReaderI.getValue:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: astore_2
      13: aload_2
      14: ifnonnull     26
      17: aload_0
      18: getfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
      21: aload_1
      22: invokevirtual #11                 // Method net/minidev/json/writer/JsonReaderI.startObject:(Ljava/lang/String;)Lnet/minidev/json/writer/JsonReaderI;
      25: areturn
      26: new           #12                 // class net/minidev/json/writer/UpdaterMapper
      29: dup
      30: aload_0
      31: getfield      #13                 // Field base:Lnet/minidev/json/writer/JsonReader;
      34: aload_2
      35: aload_0
      36: getfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
      39: aload_1
      40: invokevirtual #14                 // Method net/minidev/json/writer/JsonReaderI.getType:(Ljava/lang/String;)Ljava/lang/reflect/Type;
      43: invokespecial #15                 // Method "<init>":(Lnet/minidev/json/writer/JsonReader;Ljava/lang/Object;Ljava/lang/reflect/Type;)V
      46: areturn

  public net.minidev.json.writer.JsonReaderI<?> startArray(java.lang.String) throws net.minidev.json.parser.ParseException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
       4: aload_1
       5: invokevirtual #16                 // Method net/minidev/json/writer/JsonReaderI.startArray:(Ljava/lang/String;)Lnet/minidev/json/writer/JsonReaderI;
       8: areturn

  public void setValue(java.lang.Object, java.lang.String, java.lang.Object) throws net.minidev.json.parser.ParseException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #17                 // Method net/minidev/json/writer/JsonReaderI.setValue:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public void addValue(java.lang.Object, java.lang.Object) throws net.minidev.json.parser.ParseException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
       4: aload_1
       5: aload_2
       6: invokevirtual #18                 // Method net/minidev/json/writer/JsonReaderI.addValue:(Ljava/lang/Object;Ljava/lang/Object;)V
       9: return

  public java.lang.Object createObject();
    Code:
       0: aload_0
       1: getfield      #5                  // Field obj:Ljava/lang/Object;
       4: ifnull        12
       7: aload_0
       8: getfield      #5                  // Field obj:Ljava/lang/Object;
      11: areturn
      12: aload_0
      13: getfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
      16: invokevirtual #19                 // Method net/minidev/json/writer/JsonReaderI.createObject:()Ljava/lang/Object;
      19: areturn

  public java.lang.Object createArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field obj:Ljava/lang/Object;
       4: ifnull        12
       7: aload_0
       8: getfield      #5                  // Field obj:Ljava/lang/Object;
      11: areturn
      12: aload_0
      13: getfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
      16: invokevirtual #20                 // Method net/minidev/json/writer/JsonReaderI.createArray:()Ljava/lang/Object;
      19: areturn

  public T convert(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field obj:Ljava/lang/Object;
       4: ifnull        12
       7: aload_0
       8: getfield      #5                  // Field obj:Ljava/lang/Object;
      11: areturn
      12: aload_0
      13: getfield      #8                  // Field mapper:Lnet/minidev/json/writer/JsonReaderI;
      16: aload_1
      17: invokevirtual #21                 // Method net/minidev/json/writer/JsonReaderI.convert:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn
}
