Compiled from "ViewResolverRegistry.java"
public class org.springframework.web.servlet.config.annotation.ViewResolverRegistry {
  private org.springframework.web.servlet.view.ContentNegotiatingViewResolver contentNegotiatingResolver;

  private final java.util.List<org.springframework.web.servlet.ViewResolver> viewResolvers;

  private java.lang.Integer order;

  private org.springframework.web.accept.ContentNegotiationManager contentNegotiationManager;

  private org.springframework.context.ApplicationContext applicationContext;

  public org.springframework.web.servlet.config.annotation.ViewResolverRegistry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: iconst_4
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #4                  // Field viewResolvers:Ljava/util/List;
      16: return

  protected void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
       5: return

  protected void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public boolean hasRegistrations();
    Code:
       0: aload_0
       1: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
       4: ifnonnull     19
       7: aload_0
       8: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      11: invokeinterface #8,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void enableContentNegotiation(org.springframework.web.servlet.View...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method initContentNegotiatingViewResolver:([Lorg/springframework/web/servlet/View;)V
       5: return

  public void enableContentNegotiation(boolean, org.springframework.web.servlet.View...);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #9                  // Method initContentNegotiatingViewResolver:([Lorg/springframework/web/servlet/View;)V
       5: aload_0
       6: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
       9: iload_1
      10: invokevirtual #10                 // Method org/springframework/web/servlet/view/ContentNegotiatingViewResolver.setUseNotAcceptableStatusCode:(Z)V
      13: return

  private void initContentNegotiatingViewResolver(org.springframework.web.servlet.View[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field order:Ljava/lang/Integer;
       5: ifnull        18
       8: aload_0
       9: getfield      #11                 // Field order:Ljava/lang/Integer;
      12: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      15: goto          20
      18: ldc           #14                 // int -2147483648
      20: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: putfield      #11                 // Field order:Ljava/lang/Integer;
      26: aload_0
      27: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
      30: ifnull        90
      33: aload_1
      34: invokestatic  #16                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      37: ifne          134
      40: aload_0
      41: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
      44: invokevirtual #17                 // Method org/springframework/web/servlet/view/ContentNegotiatingViewResolver.getDefaultViews:()Ljava/util/List;
      47: invokestatic  #18                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      50: ifne          134
      53: new           #2                  // class java/util/ArrayList
      56: dup
      57: aload_0
      58: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
      61: invokevirtual #17                 // Method org/springframework/web/servlet/view/ContentNegotiatingViewResolver.getDefaultViews:()Ljava/util/List;
      64: invokespecial #19                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      67: astore_2
      68: aload_2
      69: aload_1
      70: invokestatic  #20                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      73: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      78: pop
      79: aload_0
      80: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
      83: aload_2
      84: invokevirtual #22                 // Method org/springframework/web/servlet/view/ContentNegotiatingViewResolver.setDefaultViews:(Ljava/util/List;)V
      87: goto          134
      90: aload_0
      91: new           #23                 // class org/springframework/web/servlet/view/ContentNegotiatingViewResolver
      94: dup
      95: invokespecial #24                 // Method org/springframework/web/servlet/view/ContentNegotiatingViewResolver."<init>":()V
      98: putfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
     101: aload_0
     102: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
     105: aload_1
     106: invokestatic  #20                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     109: invokevirtual #22                 // Method org/springframework/web/servlet/view/ContentNegotiatingViewResolver.setDefaultViews:(Ljava/util/List;)V
     112: aload_0
     113: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
     116: aload_0
     117: getfield      #4                  // Field viewResolvers:Ljava/util/List;
     120: invokevirtual #25                 // Method org/springframework/web/servlet/view/ContentNegotiatingViewResolver.setViewResolvers:(Ljava/util/List;)V
     123: aload_0
     124: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
     127: aload_0
     128: getfield      #5                  // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
     131: invokevirtual #26                 // Method org/springframework/web/servlet/view/ContentNegotiatingViewResolver.setContentNegotiationManager:(Lorg/springframework/web/accept/ContentNegotiationManager;)V
     134: return

  public org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration jsp();
    Code:
       0: aload_0
       1: ldc           #27                 // String /WEB-INF/
       3: ldc           #28                 // String .jsp
       5: invokevirtual #29                 // Method jsp:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/config/annotation/UrlBasedViewResolverRegistration;
       8: areturn

  public org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration jsp(java.lang.String, java.lang.String);
    Code:
       0: new           #30                 // class org/springframework/web/servlet/view/InternalResourceViewResolver
       3: dup
       4: invokespecial #31                 // Method org/springframework/web/servlet/view/InternalResourceViewResolver."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #32                 // Method org/springframework/web/servlet/view/InternalResourceViewResolver.setPrefix:(Ljava/lang/String;)V
      13: aload_3
      14: aload_2
      15: invokevirtual #33                 // Method org/springframework/web/servlet/view/InternalResourceViewResolver.setSuffix:(Ljava/lang/String;)V
      18: aload_0
      19: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      22: aload_3
      23: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: new           #35                 // class org/springframework/web/servlet/config/annotation/UrlBasedViewResolverRegistration
      32: dup
      33: aload_3
      34: invokespecial #36                 // Method org/springframework/web/servlet/config/annotation/UrlBasedViewResolverRegistration."<init>":(Lorg/springframework/web/servlet/view/UrlBasedViewResolver;)V
      37: areturn

  public org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration tiles();
    Code:
       0: aload_0
       1: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: ifnull        26
       7: aload_0
       8: ldc           #37                 // class org/springframework/web/servlet/view/tiles3/TilesConfigurer
      10: invokevirtual #38                 // Method hasBeanOfType:(Ljava/lang/Class;)Z
      13: ifne          26
      16: new           #39                 // class org/springframework/beans/factory/BeanInitializationException
      19: dup
      20: ldc           #40                 // String In addition to a Tiles view resolver there must also be a single TilesConfigurer bean in this web application context (or its parent).
      22: invokespecial #41                 // Method org/springframework/beans/factory/BeanInitializationException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: new           #42                 // class org/springframework/web/servlet/config/annotation/ViewResolverRegistry$TilesRegistration
      29: dup
      30: invokespecial #43                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$TilesRegistration."<init>":()V
      33: astore_1
      34: aload_0
      35: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      38: aload_1
      39: invokevirtual #44                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$TilesRegistration.getViewResolver:()Lorg/springframework/web/servlet/view/UrlBasedViewResolver;
      42: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_1
      49: areturn

  public org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration freeMarker();
    Code:
       0: aload_0
       1: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: ifnull        26
       7: aload_0
       8: ldc           #45                 // class org/springframework/web/servlet/view/freemarker/FreeMarkerConfigurer
      10: invokevirtual #38                 // Method hasBeanOfType:(Ljava/lang/Class;)Z
      13: ifne          26
      16: new           #39                 // class org/springframework/beans/factory/BeanInitializationException
      19: dup
      20: ldc           #46                 // String In addition to a FreeMarker view resolver there must also be a single FreeMarkerConfig bean in this web application context (or its parent): FreeMarkerConfigurer is the usual implementation. This bean may be given any name.
      22: invokespecial #41                 // Method org/springframework/beans/factory/BeanInitializationException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: new           #47                 // class org/springframework/web/servlet/config/annotation/ViewResolverRegistry$FreeMarkerRegistration
      29: dup
      30: invokespecial #48                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$FreeMarkerRegistration."<init>":()V
      33: astore_1
      34: aload_0
      35: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      38: aload_1
      39: invokevirtual #49                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$FreeMarkerRegistration.getViewResolver:()Lorg/springframework/web/servlet/view/UrlBasedViewResolver;
      42: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_1
      49: areturn

  public org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration velocity();
    Code:
       0: aload_0
       1: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: ifnull        26
       7: aload_0
       8: ldc           #50                 // class org/springframework/web/servlet/view/velocity/VelocityConfigurer
      10: invokevirtual #38                 // Method hasBeanOfType:(Ljava/lang/Class;)Z
      13: ifne          26
      16: new           #39                 // class org/springframework/beans/factory/BeanInitializationException
      19: dup
      20: ldc           #51                 // String In addition to a Velocity view resolver there must also be a single VelocityConfig bean in this web application context (or its parent): VelocityConfigurer is the usual implementation. This bean may be given any name.
      22: invokespecial #41                 // Method org/springframework/beans/factory/BeanInitializationException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: new           #52                 // class org/springframework/web/servlet/config/annotation/ViewResolverRegistry$VelocityRegistration
      29: dup
      30: invokespecial #53                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$VelocityRegistration."<init>":()V
      33: astore_1
      34: aload_0
      35: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      38: aload_1
      39: invokevirtual #54                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$VelocityRegistration.getViewResolver:()Lorg/springframework/web/servlet/view/UrlBasedViewResolver;
      42: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_1
      49: areturn

  public org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration groovy();
    Code:
       0: aload_0
       1: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: ifnull        26
       7: aload_0
       8: ldc           #55                 // class org/springframework/web/servlet/view/groovy/GroovyMarkupConfigurer
      10: invokevirtual #38                 // Method hasBeanOfType:(Ljava/lang/Class;)Z
      13: ifne          26
      16: new           #39                 // class org/springframework/beans/factory/BeanInitializationException
      19: dup
      20: ldc           #56                 // String In addition to a Groovy markup view resolver there must also be a single GroovyMarkupConfig bean in this web application context (or its parent): GroovyMarkupConfigurer is the usual implementation. This bean may be given any name.
      22: invokespecial #41                 // Method org/springframework/beans/factory/BeanInitializationException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: new           #57                 // class org/springframework/web/servlet/config/annotation/ViewResolverRegistry$GroovyMarkupRegistration
      29: dup
      30: invokespecial #58                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$GroovyMarkupRegistration."<init>":()V
      33: astore_1
      34: aload_0
      35: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      38: aload_1
      39: invokevirtual #59                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$GroovyMarkupRegistration.getViewResolver:()Lorg/springframework/web/servlet/view/UrlBasedViewResolver;
      42: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_1
      49: areturn

  public org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration scriptTemplate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: ifnull        26
       7: aload_0
       8: ldc           #60                 // class org/springframework/web/servlet/view/script/ScriptTemplateConfigurer
      10: invokevirtual #38                 // Method hasBeanOfType:(Ljava/lang/Class;)Z
      13: ifne          26
      16: new           #39                 // class org/springframework/beans/factory/BeanInitializationException
      19: dup
      20: ldc           #61                 // String In addition to a script template view resolver there must also be a single ScriptTemplateConfig bean in this web application context (or its parent): ScriptTemplateConfigurer is the usual implementation. This bean may be given any name.
      22: invokespecial #41                 // Method org/springframework/beans/factory/BeanInitializationException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: new           #62                 // class org/springframework/web/servlet/config/annotation/ViewResolverRegistry$ScriptRegistration
      29: dup
      30: invokespecial #63                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$ScriptRegistration."<init>":()V
      33: astore_1
      34: aload_0
      35: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      38: aload_1
      39: invokevirtual #64                 // Method org/springframework/web/servlet/config/annotation/ViewResolverRegistry$ScriptRegistration.getViewResolver:()Lorg/springframework/web/servlet/view/UrlBasedViewResolver;
      42: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_1
      49: areturn

  public void beanName();
    Code:
       0: new           #65                 // class org/springframework/web/servlet/view/BeanNameViewResolver
       3: dup
       4: invokespecial #66                 // Method org/springframework/web/servlet/view/BeanNameViewResolver."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      12: aload_1
      13: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: return

  public void viewResolver(org.springframework.web.servlet.ViewResolver);
    Code:
       0: aload_1
       1: instanceof    #23                 // class org/springframework/web/servlet/view/ContentNegotiatingViewResolver
       4: ifeq          17
       7: new           #39                 // class org/springframework/beans/factory/BeanInitializationException
      10: dup
      11: ldc           #67                 // String addViewResolver cannot be used to configure a ContentNegotiatingViewResolver. Please use the method enableContentNegotiation instead.
      13: invokespecial #41                 // Method org/springframework/beans/factory/BeanInitializationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      21: aload_1
      22: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: return

  public void order(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #11                 // Field order:Ljava/lang/Integer;
       8: return

  protected boolean hasBeanOfType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: aload_1
       5: iconst_0
       6: iconst_0
       7: invokestatic  #68                 // Method org/springframework/beans/factory/BeanFactoryUtils.beanNamesForTypeIncludingAncestors:(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;ZZ)[Ljava/lang/String;
      10: invokestatic  #16                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected int getOrder();
    Code:
       0: aload_0
       1: getfield      #11                 // Field order:Ljava/lang/Integer;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field order:Ljava/lang/Integer;
      11: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      14: goto          19
      17: ldc           #69                 // int 2147483647
      19: ireturn

  protected java.util.List<org.springframework.web.servlet.ViewResolver> getViewResolvers();
    Code:
       0: aload_0
       1: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
       4: ifnull        15
       7: aload_0
       8: getfield      #7                  // Field contentNegotiatingResolver:Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
      11: invokestatic  #70                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      14: areturn
      15: aload_0
      16: getfield      #4                  // Field viewResolvers:Ljava/util/List;
      19: areturn
}
