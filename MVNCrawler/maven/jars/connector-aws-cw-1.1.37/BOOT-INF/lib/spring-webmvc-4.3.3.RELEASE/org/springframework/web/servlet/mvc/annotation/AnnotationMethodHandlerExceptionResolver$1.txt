Compiled from "AnnotationMethodHandlerExceptionResolver.java"
class org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver$1 implements org.springframework.util.ReflectionUtils$MethodCallback {
  final java.lang.Class val$handlerType;

  final java.lang.Class val$thrownExceptionType;

  final java.util.Map val$matchedHandlers;

  final org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver this$0;

  org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver$1(org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver, java.lang.Class, java.lang.Class, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$handlerType:Ljava/lang/Class;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$thrownExceptionType:Ljava/lang/Class;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$matchedHandlers:Ljava/util/Map;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Object."<init>":()V
      25: return

  public void doWith(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field val$handlerType:Ljava/lang/Class;
       5: invokestatic  #6                  // Method org/springframework/util/ClassUtils.getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;
       8: astore_1
       9: aload_0
      10: getfield      #1                  // Field this$0:Lorg/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver;
      13: aload_1
      14: invokevirtual #7                  // Method org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.getHandledExceptions:(Ljava/lang/reflect/Method;)Ljava/util/List;
      17: astore_2
      18: aload_2
      19: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          167
      34: aload_3
      35: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #11                 // class java/lang/Class
      43: astore        4
      45: aload         4
      47: aload_0
      48: getfield      #3                  // Field val$thrownExceptionType:Ljava/lang/Class;
      51: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      54: ifeq          164
      57: aload_0
      58: getfield      #4                  // Field val$matchedHandlers:Ljava/util/Map;
      61: aload         4
      63: invokeinterface #13,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      68: ifne          87
      71: aload_0
      72: getfield      #4                  // Field val$matchedHandlers:Ljava/util/Map;
      75: aload         4
      77: aload_1
      78: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: goto          164
      87: aload_0
      88: getfield      #4                  // Field val$matchedHandlers:Ljava/util/Map;
      91: aload         4
      93: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #16                 // class java/lang/reflect/Method
     101: astore        5
     103: aload         5
     105: aload_1
     106: invokevirtual #17                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
     109: ifne          164
     112: new           #18                 // class java/lang/IllegalStateException
     115: dup
     116: new           #19                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #21                 // String Ambiguous exception handler mapped for
     125: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload         4
     130: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     133: ldc           #24                 // String ]: {
     135: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload         5
     140: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     143: ldc           #25                 // String ,
     145: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload_1
     149: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     152: ldc           #26                 // String }.
     154: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     163: athrow
     164: goto          25
     167: return
}
