Compiled from "AbstractMessageConverterMethodArgumentResolver.java"
class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver$EmptyBodyCheckingHttpInputMessage implements org.springframework.http.HttpInputMessage {
  private final org.springframework.http.HttpHeaders headers;

  private final java.io.InputStream body;

  private final org.springframework.http.HttpMethod method;

  public org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver$EmptyBodyCheckingHttpInputMessage(org.springframework.http.HttpInputMessage) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod org/springframework/http/HttpInputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      11: putfield      #3                  // Field headers:Lorg/springframework/http/HttpHeaders;
      14: aload_1
      15: invokeinterface #4,  1            // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      20: astore_2
      21: aload_2
      22: ifnonnull     33
      25: aload_0
      26: aconst_null
      27: putfield      #5                  // Field body:Ljava/io/InputStream;
      30: goto          109
      33: aload_2
      34: invokevirtual #6                  // Method java/io/InputStream.markSupported:()Z
      37: ifeq          69
      40: aload_2
      41: iconst_1
      42: invokevirtual #7                  // Method java/io/InputStream.mark:(I)V
      45: aload_0
      46: aload_2
      47: invokevirtual #8                  // Method java/io/InputStream.read:()I
      50: iconst_m1
      51: if_icmpeq     58
      54: aload_2
      55: goto          59
      58: aconst_null
      59: putfield      #5                  // Field body:Ljava/io/InputStream;
      62: aload_2
      63: invokevirtual #9                  // Method java/io/InputStream.reset:()V
      66: goto          109
      69: new           #10                 // class java/io/PushbackInputStream
      72: dup
      73: aload_2
      74: invokespecial #11                 // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;)V
      77: astore_3
      78: aload_3
      79: invokevirtual #12                 // Method java/io/PushbackInputStream.read:()I
      82: istore        4
      84: iload         4
      86: iconst_m1
      87: if_icmpne     98
      90: aload_0
      91: aconst_null
      92: putfield      #5                  // Field body:Ljava/io/InputStream;
      95: goto          109
      98: aload_0
      99: aload_3
     100: putfield      #5                  // Field body:Ljava/io/InputStream;
     103: aload_3
     104: iload         4
     106: invokevirtual #13                 // Method java/io/PushbackInputStream.unread:(I)V
     109: aload_0
     110: aload_1
     111: checkcast     #14                 // class org/springframework/http/HttpRequest
     114: invokeinterface #15,  1           // InterfaceMethod org/springframework/http/HttpRequest.getMethod:()Lorg/springframework/http/HttpMethod;
     119: putfield      #16                 // Field method:Lorg/springframework/http/HttpMethod;
     122: return

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #3                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: areturn

  public java.io.InputStream getBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field body:Ljava/io/InputStream;
       4: areturn

  public org.springframework.http.HttpMethod getMethod();
    Code:
       0: aload_0
       1: getfield      #16                 // Field method:Lorg/springframework/http/HttpMethod;
       4: areturn
}
