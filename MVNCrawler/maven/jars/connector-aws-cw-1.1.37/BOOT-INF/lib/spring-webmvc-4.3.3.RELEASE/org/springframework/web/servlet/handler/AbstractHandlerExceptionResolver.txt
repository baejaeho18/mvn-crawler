Compiled from "AbstractHandlerExceptionResolver.java"
public abstract class org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver implements org.springframework.web.servlet.HandlerExceptionResolver,org.springframework.core.Ordered {
  private static final java.lang.String HEADER_CACHE_CONTROL;

  protected final org.apache.commons.logging.Log logger;

  private int order;

  private java.util.Set<?> mappedHandlers;

  private java.lang.Class<?>[] mappedHandlerClasses;

  private org.apache.commons.logging.Log warnLogger;

  private boolean preventResponseCaching;

  public org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #6                  // int 2147483647
      18: putfield      #7                  // Field order:I
      21: aload_0
      22: iconst_0
      23: putfield      #8                  // Field preventResponseCaching:Z
      26: return

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field order:I
       5: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field order:I
       4: ireturn

  public void setMappedHandlers(java.util.Set<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field mappedHandlers:Ljava/util/Set;
       5: return

  public void setMappedHandlerClasses(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field mappedHandlerClasses:[Ljava/lang/Class;
       5: return

  public void setWarnLogCategory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;
       5: putfield      #12                 // Field warnLogger:Lorg/apache/commons/logging/Log;
       8: return

  public void setPreventResponseCaching(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field preventResponseCaching:Z
       5: return

  public org.springframework.web.servlet.ModelAndView resolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #13                 // Method shouldApplyTo:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;)Z
       6: ifeq          92
       9: aload_0
      10: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      13: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      18: ifeq          59
      21: aload_0
      22: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      25: new           #15                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #17                 // String Resolving exception from handler [
      34: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_3
      38: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #20                 // String ]:
      43: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload         4
      48: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      59: aload_0
      60: aload         4
      62: aload_2
      63: invokevirtual #23                 // Method prepareResponse:(Ljava/lang/Exception;Ljavax/servlet/http/HttpServletResponse;)V
      66: aload_0
      67: aload_1
      68: aload_2
      69: aload_3
      70: aload         4
      72: invokevirtual #24                 // Method doResolveException:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)Lorg/springframework/web/servlet/ModelAndView;
      75: astore        5
      77: aload         5
      79: ifnull        89
      82: aload_0
      83: aload         4
      85: aload_1
      86: invokevirtual #25                 // Method logException:(Ljava/lang/Exception;Ljavax/servlet/http/HttpServletRequest;)V
      89: aload         5
      91: areturn
      92: aconst_null
      93: areturn

  protected boolean shouldApplyTo(javax.servlet.http.HttpServletRequest, java.lang.Object);
    Code:
       0: aload_2
       1: ifnull        75
       4: aload_0
       5: getfield      #9                  // Field mappedHandlers:Ljava/util/Set;
       8: ifnull        26
      11: aload_0
      12: getfield      #9                  // Field mappedHandlers:Ljava/util/Set;
      15: aload_2
      16: invokeinterface #26,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: aload_0
      27: getfield      #10                 // Field mappedHandlerClasses:[Ljava/lang/Class;
      30: ifnull        75
      33: aload_0
      34: getfield      #10                 // Field mappedHandlerClasses:[Ljava/lang/Class;
      37: astore_3
      38: aload_3
      39: arraylength
      40: istore        4
      42: iconst_0
      43: istore        5
      45: iload         5
      47: iload         4
      49: if_icmpge     75
      52: aload_3
      53: iload         5
      55: aaload
      56: astore        6
      58: aload         6
      60: aload_2
      61: invokevirtual #27                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      64: ifeq          69
      67: iconst_1
      68: ireturn
      69: iinc          5, 1
      72: goto          45
      75: aload_0
      76: getfield      #9                  // Field mappedHandlers:Ljava/util/Set;
      79: ifnonnull     93
      82: aload_0
      83: getfield      #10                 // Field mappedHandlerClasses:[Ljava/lang/Class;
      86: ifnonnull     93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn

  protected void logException(java.lang.Exception, javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getfield      #12                 // Field warnLogger:Lorg/apache/commons/logging/Log;
       4: ifnull        34
       7: aload_0
       8: getfield      #12                 // Field warnLogger:Lorg/apache/commons/logging/Log;
      11: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      16: ifeq          34
      19: aload_0
      20: getfield      #12                 // Field warnLogger:Lorg/apache/commons/logging/Log;
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokevirtual #29                 // Method buildLogMessage:(Ljava/lang/Exception;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      29: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      34: return

  protected java.lang.String buildLogMessage(java.lang.Exception, javax.servlet.http.HttpServletRequest);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #31                 // String Resolved exception caused by Handler execution:
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  protected void prepareResponse(java.lang.Exception, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: getfield      #8                  // Field preventResponseCaching:Z
       4: ifeq          12
       7: aload_0
       8: aload_2
       9: invokevirtual #32                 // Method preventCaching:(Ljavax/servlet/http/HttpServletResponse;)V
      12: return

  protected void preventCaching(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: ldc           #34                 // String Cache-Control
       3: ldc           #35                 // String no-store
       5: invokeinterface #36,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  protected abstract org.springframework.web.servlet.ModelAndView doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception);
}
