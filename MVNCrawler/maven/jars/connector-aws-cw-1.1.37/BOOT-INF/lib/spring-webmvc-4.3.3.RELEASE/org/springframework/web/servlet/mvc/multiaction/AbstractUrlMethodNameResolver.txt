Compiled from "AbstractUrlMethodNameResolver.java"
public abstract class org.springframework.web.servlet.mvc.multiaction.AbstractUrlMethodNameResolver implements org.springframework.web.servlet.mvc.multiaction.MethodNameResolver {
  protected final org.apache.commons.logging.Log logger;

  private org.springframework.web.util.UrlPathHelper urlPathHelper;

  public org.springframework.web.servlet.mvc.multiaction.AbstractUrlMethodNameResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class org/springframework/web/util/UrlPathHelper
      19: dup
      20: invokespecial #6                  // Method org/springframework/web/util/UrlPathHelper."<init>":()V
      23: putfield      #7                  // Field urlPathHelper:Lorg/springframework/web/util/UrlPathHelper;
      26: return

  public void setAlwaysUseFullPath(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field urlPathHelper:Lorg/springframework/web/util/UrlPathHelper;
       4: iload_1
       5: invokevirtual #8                  // Method org/springframework/web/util/UrlPathHelper.setAlwaysUseFullPath:(Z)V
       8: return

  public void setUrlDecode(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field urlPathHelper:Lorg/springframework/web/util/UrlPathHelper;
       4: iload_1
       5: invokevirtual #9                  // Method org/springframework/web/util/UrlPathHelper.setUrlDecode:(Z)V
       8: return

  public void setUrlPathHelper(org.springframework.web.util.UrlPathHelper);
    Code:
       0: aload_1
       1: ldc           #10                 // String UrlPathHelper must not be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field urlPathHelper:Lorg/springframework/web/util/UrlPathHelper;
      11: return

  public final java.lang.String getHandlerMethodName(javax.servlet.http.HttpServletRequest) throws org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field urlPathHelper:Lorg/springframework/web/util/UrlPathHelper;
       4: aload_1
       5: invokevirtual #12                 // Method org/springframework/web/util/UrlPathHelper.getLookupPathForRequest:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #13                 // Method getHandlerMethodNameForUrlPath:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_3
      15: aload_3
      16: ifnonnull     40
      19: new           #14                 // class org/springframework/web/servlet/mvc/multiaction/NoSuchRequestHandlingMethodException
      22: dup
      23: aload_2
      24: aload_1
      25: invokeinterface #15,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
      30: aload_1
      31: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameterMap:()Ljava/util/Map;
      36: invokespecial #17                 // Method org/springframework/web/servlet/mvc/multiaction/NoSuchRequestHandlingMethodException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      39: athrow
      40: aload_0
      41: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      44: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      49: ifeq          89
      52: aload_0
      53: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      56: new           #19                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #21                 // String Returning handler method name \'
      65: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_3
      69: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #23                 // String \' for lookup path:
      74: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_2
      78: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      89: aload_3
      90: areturn

  protected abstract java.lang.String getHandlerMethodNameForUrlPath(java.lang.String);
}
