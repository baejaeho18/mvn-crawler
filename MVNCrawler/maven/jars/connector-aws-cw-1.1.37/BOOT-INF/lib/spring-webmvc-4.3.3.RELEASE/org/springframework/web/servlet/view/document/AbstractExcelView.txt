Compiled from "AbstractExcelView.java"
public abstract class org.springframework.web.servlet.view.document.AbstractExcelView extends org.springframework.web.servlet.view.AbstractView {
  private static final java.lang.String CONTENT_TYPE;

  private static final java.lang.String EXTENSION;

  private java.lang.String url;

  public org.springframework.web.servlet.view.document.AbstractExcelView();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/view/AbstractView."<init>":()V
       4: aload_0
       5: ldc           #3                  // String application/vnd.ms-excel
       7: invokevirtual #4                  // Method setContentType:(Ljava/lang/String;)V
      10: return

  public void setUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field url:Ljava/lang/String;
       5: return

  protected boolean generatesDownloadContent();
    Code:
       0: iconst_1
       1: ireturn

  protected final void renderMergedOutputModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field url:Ljava/lang/String;
       4: ifnull        21
       7: aload_0
       8: aload_0
       9: getfield      #5                  // Field url:Ljava/lang/String;
      12: aload_2
      13: invokevirtual #6                  // Method getTemplateSource:(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/apache/poi/hssf/usermodel/HSSFWorkbook;
      16: astore        4
      18: goto          41
      21: new           #7                  // class org/apache/poi/hssf/usermodel/HSSFWorkbook
      24: dup
      25: invokespecial #8                  // Method org/apache/poi/hssf/usermodel/HSSFWorkbook."<init>":()V
      28: astore        4
      30: aload_0
      31: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      34: ldc           #10                 // String Created Excel Workbook from scratch
      36: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: aload         4
      45: aload_2
      46: aload_3
      47: invokevirtual #12                 // Method buildExcelDocument:(Ljava/util/Map;Lorg/apache/poi/hssf/usermodel/HSSFWorkbook;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      50: aload_3
      51: aload_0
      52: invokevirtual #13                 // Method getContentType:()Ljava/lang/String;
      55: invokeinterface #14,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
      60: aload_3
      61: invokeinterface #15,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getOutputStream:()Ljavax/servlet/ServletOutputStream;
      66: astore        5
      68: aload         4
      70: aload         5
      72: invokevirtual #16                 // Method org/apache/poi/hssf/usermodel/HSSFWorkbook.write:(Ljava/io/OutputStream;)V
      75: aload         5
      77: invokevirtual #17                 // Method javax/servlet/ServletOutputStream.flush:()V
      80: return

  protected org.apache.poi.hssf.usermodel.HSSFWorkbook getTemplateSource(java.lang.String, javax.servlet.http.HttpServletRequest) throws java.lang.Exception;
    Code:
       0: new           #18                 // class org/springframework/core/io/support/LocalizedResourceHelper
       3: dup
       4: aload_0
       5: invokevirtual #19                 // Method getApplicationContext:()Lorg/springframework/context/ApplicationContext;
       8: invokespecial #20                 // Method org/springframework/core/io/support/LocalizedResourceHelper."<init>":(Lorg/springframework/core/io/ResourceLoader;)V
      11: astore_3
      12: aload_2
      13: invokestatic  #21                 // Method org/springframework/web/servlet/support/RequestContextUtils.getLocale:(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Locale;
      16: astore        4
      18: aload_3
      19: aload_1
      20: ldc           #22                 // String .xls
      22: aload         4
      24: invokevirtual #23                 // Method org/springframework/core/io/support/LocalizedResourceHelper.findLocalizedResource:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/core/io/Resource;
      27: astore        5
      29: aload_0
      30: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      33: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      38: ifeq          70
      41: aload_0
      42: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      45: new           #25                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #27                 // String Loading Excel workbook from
      54: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload         5
      59: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      62: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      70: new           #7                  // class org/apache/poi/hssf/usermodel/HSSFWorkbook
      73: dup
      74: aload         5
      76: invokeinterface #31,  1           // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
      81: invokespecial #32                 // Method org/apache/poi/hssf/usermodel/HSSFWorkbook."<init>":(Ljava/io/InputStream;)V
      84: areturn

  protected abstract void buildExcelDocument(java.util.Map<java.lang.String, java.lang.Object>, org.apache.poi.hssf.usermodel.HSSFWorkbook, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;

  protected org.apache.poi.hssf.usermodel.HSSFCell getCell(org.apache.poi.hssf.usermodel.HSSFSheet, int, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #33                 // Method org/apache/poi/hssf/usermodel/HSSFSheet.getRow:(I)Lorg/apache/poi/hssf/usermodel/HSSFRow;
       5: astore        4
       7: aload         4
       9: ifnonnull     19
      12: aload_1
      13: iload_2
      14: invokevirtual #34                 // Method org/apache/poi/hssf/usermodel/HSSFSheet.createRow:(I)Lorg/apache/poi/hssf/usermodel/HSSFRow;
      17: astore        4
      19: aload         4
      21: iload_3
      22: invokevirtual #35                 // Method org/apache/poi/hssf/usermodel/HSSFRow.getCell:(I)Lorg/apache/poi/hssf/usermodel/HSSFCell;
      25: astore        5
      27: aload         5
      29: ifnonnull     40
      32: aload         4
      34: iload_3
      35: invokevirtual #36                 // Method org/apache/poi/hssf/usermodel/HSSFRow.createCell:(I)Lorg/apache/poi/hssf/usermodel/HSSFCell;
      38: astore        5
      40: aload         5
      42: areturn

  protected void setText(org.apache.poi.hssf.usermodel.HSSFCell, java.lang.String);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #38                 // Method org/apache/poi/hssf/usermodel/HSSFCell.setCellType:(I)V
       5: aload_1
       6: aload_2
       7: invokevirtual #39                 // Method org/apache/poi/hssf/usermodel/HSSFCell.setCellValue:(Ljava/lang/String;)V
      10: return
}
