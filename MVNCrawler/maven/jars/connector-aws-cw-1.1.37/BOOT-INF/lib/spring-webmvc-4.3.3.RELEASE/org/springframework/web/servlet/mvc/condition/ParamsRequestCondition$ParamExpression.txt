Compiled from "ParamsRequestCondition.java"
class org.springframework.web.servlet.mvc.condition.ParamsRequestCondition$ParamExpression extends org.springframework.web.servlet.mvc.condition.AbstractNameValueExpression<java.lang.String> {
  org.springframework.web.servlet.mvc.condition.ParamsRequestCondition$ParamExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/web/servlet/mvc/condition/AbstractNameValueExpression."<init>":(Ljava/lang/String;)V
       5: return

  protected boolean isCaseSensitiveName();
    Code:
       0: iconst_1
       1: ireturn

  protected java.lang.String parseValue(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  protected boolean matchName(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field name:Ljava/lang/String;
       5: invokestatic  #3                  // Method org/springframework/web/util/WebUtils.hasSubmitParameter:(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Z
       8: ireturn

  protected boolean matchValue(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: checkcast     #5                  // class java/lang/String
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field name:Ljava/lang/String;
      12: invokeinterface #6,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      17: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ireturn

  protected java.lang.Object parseValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method parseValue:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn
}
