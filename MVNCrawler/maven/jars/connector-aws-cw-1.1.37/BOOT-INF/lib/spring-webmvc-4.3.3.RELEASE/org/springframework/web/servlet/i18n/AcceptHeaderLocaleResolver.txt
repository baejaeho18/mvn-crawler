Compiled from "AcceptHeaderLocaleResolver.java"
public class org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver implements org.springframework.web.servlet.LocaleResolver {
  private final java.util.List<java.util.Locale> supportedLocales;

  private java.util.Locale defaultLocale;

  public org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: iconst_4
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #4                  // Field supportedLocales:Ljava/util/List;
      16: return

  public void setSupportedLocales(java.util.List<java.util.Locale>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field supportedLocales:Ljava/util/List;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/List.clear:()V
       9: aload_1
      10: ifnull        24
      13: aload_0
      14: getfield      #4                  // Field supportedLocales:Ljava/util/List;
      17: aload_1
      18: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      23: pop
      24: return

  public java.util.List<java.util.Locale> getSupportedLocales();
    Code:
       0: aload_0
       1: getfield      #4                  // Field supportedLocales:Ljava/util/List;
       4: areturn

  public void setDefaultLocale(java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field defaultLocale:Ljava/util/Locale;
       5: return

  public java.util.Locale getDefaultLocale();
    Code:
       0: aload_0
       1: getfield      #7                  // Field defaultLocale:Ljava/util/Locale;
       4: areturn

  public java.util.Locale resolveLocale(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getDefaultLocale:()Ljava/util/Locale;
       4: astore_2
       5: aload_2
       6: ifnull        22
       9: aload_1
      10: ldc           #9                  // String Accept-Language
      12: invokeinterface #10,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      17: ifnonnull     22
      20: aload_2
      21: areturn
      22: aload_1
      23: invokeinterface #11,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocale:()Ljava/util/Locale;
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokespecial #12                 // Method isSupportedLocale:(Ljava/util/Locale;)Z
      34: ifne          44
      37: aload_0
      38: aload_1
      39: aload_3
      40: invokespecial #13                 // Method findSupportedLocale:(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Locale;)Ljava/util/Locale;
      43: astore_3
      44: aload_3
      45: areturn

  private boolean isSupportedLocale(java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getSupportedLocales:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifne          24
      14: aload_2
      15: aload_1
      16: invokeinterface #16,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private java.util.Locale findSupportedLocale(javax.servlet.http.HttpServletRequest, java.util.Locale);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocales:()Ljava/util/Enumeration;
       6: astore_3
       7: aload_3
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      13: ifeq          47
      16: aload_3
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      22: checkcast     #20                 // class java/util/Locale
      25: astore        4
      27: aload_0
      28: invokevirtual #14                 // Method getSupportedLocales:()Ljava/util/List;
      31: aload         4
      33: invokeinterface #16,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      38: ifeq          44
      41: aload         4
      43: areturn
      44: goto          7
      47: aload_2
      48: areturn

  public void setLocale(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Locale);
    Code:
       0: new           #21                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #22                 // String Cannot change HTTP accept header - use a different locale resolution strategy
       6: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
