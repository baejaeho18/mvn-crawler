Compiled from "RedirectView.java"
public class org.springframework.web.servlet.view.RedirectView extends org.springframework.web.servlet.view.AbstractUrlBasedView implements org.springframework.web.servlet.SmartView {
  private static final java.util.regex.Pattern URI_TEMPLATE_VARIABLE_PATTERN;

  private boolean contextRelative;

  private boolean http10Compatible;

  private boolean exposeModelAttributes;

  private java.lang.String encodingScheme;

  private org.springframework.http.HttpStatus statusCode;

  private boolean expandUriTemplateVariables;

  private boolean propagateQueryParams;

  private java.lang.String[] hosts;

  public org.springframework.web.servlet.view.RedirectView();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field contextRelative:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field http10Compatible:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field exposeModelAttributes:Z
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field expandUriTemplateVariables:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field propagateQueryParams:Z
      29: aload_0
      30: iconst_0
      31: invokevirtual #7                  // Method setExposePathVariables:(Z)V
      34: return

  public org.springframework.web.servlet.view.RedirectView(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field contextRelative:Z
      10: aload_0
      11: iconst_1
      12: putfield      #3                  // Field http10Compatible:Z
      15: aload_0
      16: iconst_1
      17: putfield      #4                  // Field exposeModelAttributes:Z
      20: aload_0
      21: iconst_1
      22: putfield      #5                  // Field expandUriTemplateVariables:Z
      25: aload_0
      26: iconst_0
      27: putfield      #6                  // Field propagateQueryParams:Z
      30: aload_0
      31: iconst_0
      32: invokevirtual #7                  // Method setExposePathVariables:(Z)V
      35: return

  public org.springframework.web.servlet.view.RedirectView(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field contextRelative:Z
      10: aload_0
      11: iconst_1
      12: putfield      #3                  // Field http10Compatible:Z
      15: aload_0
      16: iconst_1
      17: putfield      #4                  // Field exposeModelAttributes:Z
      20: aload_0
      21: iconst_1
      22: putfield      #5                  // Field expandUriTemplateVariables:Z
      25: aload_0
      26: iconst_0
      27: putfield      #6                  // Field propagateQueryParams:Z
      30: aload_0
      31: iload_2
      32: putfield      #2                  // Field contextRelative:Z
      35: aload_0
      36: iconst_0
      37: invokevirtual #7                  // Method setExposePathVariables:(Z)V
      40: return

  public org.springframework.web.servlet.view.RedirectView(java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field contextRelative:Z
      10: aload_0
      11: iconst_1
      12: putfield      #3                  // Field http10Compatible:Z
      15: aload_0
      16: iconst_1
      17: putfield      #4                  // Field exposeModelAttributes:Z
      20: aload_0
      21: iconst_1
      22: putfield      #5                  // Field expandUriTemplateVariables:Z
      25: aload_0
      26: iconst_0
      27: putfield      #6                  // Field propagateQueryParams:Z
      30: aload_0
      31: iload_2
      32: putfield      #2                  // Field contextRelative:Z
      35: aload_0
      36: iload_3
      37: putfield      #3                  // Field http10Compatible:Z
      40: aload_0
      41: iconst_0
      42: invokevirtual #7                  // Method setExposePathVariables:(Z)V
      45: return

  public org.springframework.web.servlet.view.RedirectView(java.lang.String, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field contextRelative:Z
      10: aload_0
      11: iconst_1
      12: putfield      #3                  // Field http10Compatible:Z
      15: aload_0
      16: iconst_1
      17: putfield      #4                  // Field exposeModelAttributes:Z
      20: aload_0
      21: iconst_1
      22: putfield      #5                  // Field expandUriTemplateVariables:Z
      25: aload_0
      26: iconst_0
      27: putfield      #6                  // Field propagateQueryParams:Z
      30: aload_0
      31: iload_2
      32: putfield      #2                  // Field contextRelative:Z
      35: aload_0
      36: iload_3
      37: putfield      #3                  // Field http10Compatible:Z
      40: aload_0
      41: iload         4
      43: putfield      #4                  // Field exposeModelAttributes:Z
      46: aload_0
      47: iconst_0
      48: invokevirtual #7                  // Method setExposePathVariables:(Z)V
      51: return

  public void setContextRelative(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field contextRelative:Z
       5: return

  public void setHttp10Compatible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field http10Compatible:Z
       5: return

  public void setExposeModelAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field exposeModelAttributes:Z
       5: return

  public void setEncodingScheme(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field encodingScheme:Ljava/lang/String;
       5: return

  public void setStatusCode(org.springframework.http.HttpStatus);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field statusCode:Lorg/springframework/http/HttpStatus;
       5: return

  public void setExpandUriTemplateVariables(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field expandUriTemplateVariables:Z
       5: return

  public void setPropagateQueryParams(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field propagateQueryParams:Z
       5: return

  public boolean isPropagateQueryProperties();
    Code:
       0: aload_0
       1: getfield      #6                  // Field propagateQueryParams:Z
       4: ireturn

  public void setHosts(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field hosts:[Ljava/lang/String;
       5: return

  public java.lang.String[] getHosts();
    Code:
       0: aload_0
       1: getfield      #11                 // Field hosts:[Ljava/lang/String;
       4: areturn

  public boolean isRedirectView();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean isContextRequired();
    Code:
       0: iconst_0
       1: ireturn

  protected void renderMergedOutputModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #12                 // Method createTargetUrl:(Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
       6: astore        4
       8: aload_0
       9: aload         4
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokevirtual #13                 // Method updateTargetUrl:(Ljava/lang/String;Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/String;
      17: astore        4
      19: aload_2
      20: invokestatic  #14                 // Method org/springframework/web/servlet/support/RequestContextUtils.getOutputFlashMap:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/FlashMap;
      23: astore        5
      25: aload         5
      27: invokestatic  #15                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
      30: ifne          96
      33: aload         4
      35: invokestatic  #16                 // Method org/springframework/web/util/UriComponentsBuilder.fromUriString:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      38: invokevirtual #17                 // Method org/springframework/web/util/UriComponentsBuilder.build:()Lorg/springframework/web/util/UriComponents;
      41: astore        6
      43: aload         5
      45: aload         6
      47: invokevirtual #18                 // Method org/springframework/web/util/UriComponents.getPath:()Ljava/lang/String;
      50: invokevirtual #19                 // Method org/springframework/web/servlet/FlashMap.setTargetRequestPath:(Ljava/lang/String;)V
      53: aload         5
      55: aload         6
      57: invokevirtual #20                 // Method org/springframework/web/util/UriComponents.getQueryParams:()Lorg/springframework/util/MultiValueMap;
      60: invokevirtual #21                 // Method org/springframework/web/servlet/FlashMap.addTargetRequestParams:(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/servlet/FlashMap;
      63: pop
      64: aload_2
      65: invokestatic  #22                 // Method org/springframework/web/servlet/support/RequestContextUtils.getFlashMapManager:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/FlashMapManager;
      68: astore        7
      70: aload         7
      72: ifnonnull     85
      75: new           #23                 // class java/lang/IllegalStateException
      78: dup
      79: ldc           #24                 // String FlashMapManager not found despite output FlashMap having been set
      81: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload         7
      87: aload         5
      89: aload_2
      90: aload_3
      91: invokeinterface #26,  4           // InterfaceMethod org/springframework/web/servlet/FlashMapManager.saveOutputFlashMap:(Lorg/springframework/web/servlet/FlashMap;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      96: aload_0
      97: aload_2
      98: aload_3
      99: aload         4
     101: aload_0
     102: getfield      #3                  // Field http10Compatible:Z
     105: invokevirtual #27                 // Method sendRedirect:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Z)V
     108: return

  protected final java.lang.String createTargetUrl(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest) throws java.io.UnsupportedEncodingException;
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #2                  // Field contextRelative:Z
      12: ifeq          38
      15: aload_0
      16: invokevirtual #30                 // Method getUrl:()Ljava/lang/String;
      19: ldc           #31                 // String /
      21: invokevirtual #32                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      24: ifeq          38
      27: aload_3
      28: aload_2
      29: invokeinterface #33,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContextPath:()Ljava/lang/String;
      34: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_3
      39: aload_0
      40: invokevirtual #30                 // Method getUrl:()Ljava/lang/String;
      43: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_0
      48: getfield      #9                  // Field encodingScheme:Ljava/lang/String;
      51: astore        4
      53: aload         4
      55: ifnonnull     66
      58: aload_2
      59: invokeinterface #35,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCharacterEncoding:()Ljava/lang/String;
      64: astore        4
      66: aload         4
      68: ifnonnull     75
      71: ldc           #37                 // String ISO-8859-1
      73: astore        4
      75: aload_0
      76: getfield      #5                  // Field expandUriTemplateVariables:Z
      79: ifeq          110
      82: aload_3
      83: invokestatic  #38                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/CharSequence;)Z
      86: ifeq          110
      89: aload_0
      90: aload_2
      91: invokespecial #39                 // Method getCurrentRequestUriVariables:(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;
      94: astore        5
      96: aload_0
      97: aload_3
      98: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: aload_1
     102: aload         5
     104: aload         4
     106: invokevirtual #41                 // Method replaceUriTemplateVariables:(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: astore_3
     110: aload_0
     111: invokevirtual #42                 // Method isPropagateQueryProperties:()Z
     114: ifeq          123
     117: aload_0
     118: aload_3
     119: aload_2
     120: invokevirtual #43                 // Method appendCurrentQueryParams:(Ljava/lang/StringBuilder;Ljavax/servlet/http/HttpServletRequest;)V
     123: aload_0
     124: getfield      #4                  // Field exposeModelAttributes:Z
     127: ifeq          138
     130: aload_0
     131: aload_3
     132: aload_1
     133: aload         4
     135: invokevirtual #44                 // Method appendQueryProperties:(Ljava/lang/StringBuilder;Ljava/util/Map;Ljava/lang/String;)V
     138: aload_3
     139: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: areturn

  protected java.lang.StringBuilder replaceUriTemplateVariables(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        5
       9: getstatic     #45                 // Field URI_TEMPLATE_VARIABLE_PATTERN:Ljava/util/regex/Pattern;
      12: aload_1
      13: invokevirtual #46                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      16: astore        6
      18: iconst_0
      19: istore        7
      21: aload         6
      23: invokevirtual #47                 // Method java/util/regex/Matcher.find:()Z
      26: ifeq          150
      29: aload         6
      31: iconst_1
      32: invokevirtual #48                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      35: astore        8
      37: aload_2
      38: aload         8
      40: invokeinterface #49,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      45: ifeq          59
      48: aload_2
      49: aload         8
      51: invokeinterface #50,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      56: goto          67
      59: aload_3
      60: aload         8
      62: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: astore        9
      69: aload         9
      71: ifnonnull     107
      74: new           #52                 // class java/lang/IllegalArgumentException
      77: dup
      78: new           #28                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #53                 // String Model has no value for key \'
      87: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload         8
      92: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: ldc           #54                 // String \'
      97: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #55                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: aload         5
     109: aload_1
     110: iload         7
     112: aload         6
     114: invokevirtual #56                 // Method java/util/regex/Matcher.start:()I
     117: invokevirtual #57                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     120: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: pop
     124: aload         5
     126: aload         9
     128: invokevirtual #58                 // Method java/lang/Object.toString:()Ljava/lang/String;
     131: aload         4
     133: invokestatic  #59                 // Method org/springframework/web/util/UriUtils.encodePathSegment:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     136: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: pop
     140: aload         6
     142: invokevirtual #60                 // Method java/util/regex/Matcher.end:()I
     145: istore        7
     147: goto          21
     150: aload         5
     152: aload_1
     153: iload         7
     155: aload_1
     156: invokevirtual #61                 // Method java/lang/String.length:()I
     159: invokevirtual #57                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     162: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: pop
     166: aload         5
     168: areturn

  private java.util.Map<java.lang.String, java.lang.String> getCurrentRequestUriVariables(javax.servlet.http.HttpServletRequest);
    Code:
       0: getstatic     #62                 // Field org/springframework/web/servlet/HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE:Ljava/lang/String;
       3: astore_2
       4: aload_1
       5: aload_2
       6: invokeinterface #63,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #64                 // class java/util/Map
      14: astore_3
      15: aload_3
      16: ifnull        23
      19: aload_3
      20: goto          26
      23: invokestatic  #65                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      26: areturn

  protected void appendCurrentQueryParams(java.lang.StringBuilder, javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_2
       1: invokeinterface #66,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: invokestatic  #67                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      11: ifeq          99
      14: aconst_null
      15: astore        4
      17: aload_1
      18: ldc           #68                 // String #
      20: invokevirtual #69                 // Method java/lang/StringBuilder.indexOf:(Ljava/lang/String;)I
      23: istore        5
      25: iload         5
      27: iconst_m1
      28: if_icmple     50
      31: aload_1
      32: iload         5
      34: invokevirtual #70                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
      37: astore        4
      39: aload_1
      40: iload         5
      42: aload_1
      43: invokevirtual #71                 // Method java/lang/StringBuilder.length:()I
      46: invokevirtual #72                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      49: pop
      50: aload_1
      51: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: bipush        63
      56: invokevirtual #73                 // Method java/lang/String.indexOf:(I)I
      59: ifge          76
      62: aload_1
      63: bipush        63
      65: invokevirtual #74                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      68: aload_3
      69: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: goto          87
      76: aload_1
      77: bipush        38
      79: invokevirtual #74                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: aload_3
      83: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: pop
      87: aload         4
      89: ifnull        99
      92: aload_1
      93: aload         4
      95: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: return

  protected void appendQueryProperties(java.lang.StringBuilder, java.util.Map<java.lang.String, java.lang.Object>, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: ldc           #68                 // String #
       6: invokevirtual #69                 // Method java/lang/StringBuilder.indexOf:(Ljava/lang/String;)I
       9: istore        5
      11: iload         5
      13: iconst_m1
      14: if_icmple     36
      17: aload_1
      18: iload         5
      20: invokevirtual #70                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
      23: astore        4
      25: aload_1
      26: iload         5
      28: aload_1
      29: invokevirtual #71                 // Method java/lang/StringBuilder.length:()I
      32: invokevirtual #72                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: bipush        63
      42: invokevirtual #73                 // Method java/lang/String.indexOf:(I)I
      45: ifge          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: istore        6
      55: aload_0
      56: aload_2
      57: invokevirtual #75                 // Method queryProperties:(Ljava/util/Map;)Ljava/util/Map;
      60: invokeinterface #76,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      65: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      70: astore        7
      72: aload         7
      74: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          278
      82: aload         7
      84: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #80                 // class java/util/Map$Entry
      92: astore        8
      94: aload         8
      96: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     101: astore        9
     103: aload         9
     105: ifnull        137
     108: aload         9
     110: invokevirtual #82                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     113: invokevirtual #83                 // Method java/lang/Class.isArray:()Z
     116: ifeq          137
     119: aload         9
     121: invokestatic  #84                 // Method org/springframework/util/ObjectUtils.toObjectArray:(Ljava/lang/Object;)[Ljava/lang/Object;
     124: invokestatic  #85                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     127: invokeinterface #86,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     132: astore        10
     134: goto          172
     137: aload         9
     139: instanceof    #87                 // class java/util/Collection
     142: ifeq          160
     145: aload         9
     147: checkcast     #87                 // class java/util/Collection
     150: invokeinterface #88,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     155: astore        10
     157: goto          172
     160: aload         9
     162: invokestatic  #89                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
     165: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     170: astore        10
     172: aload         10
     174: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     179: ifeq          275
     182: aload         10
     184: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     189: astore        11
     191: iload         6
     193: ifeq          209
     196: aload_1
     197: bipush        63
     199: invokevirtual #74                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     202: pop
     203: iconst_0
     204: istore        6
     206: goto          216
     209: aload_1
     210: bipush        38
     212: invokevirtual #74                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     215: pop
     216: aload_0
     217: aload         8
     219: invokeinterface #90,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     224: checkcast     #91                 // class java/lang/String
     227: aload_3
     228: invokevirtual #92                 // Method urlEncode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     231: astore        12
     233: aload         11
     235: ifnull        251
     238: aload_0
     239: aload         11
     241: invokevirtual #58                 // Method java/lang/Object.toString:()Ljava/lang/String;
     244: aload_3
     245: invokevirtual #92                 // Method urlEncode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     248: goto          253
     251: ldc           #93                 // String
     253: astore        13
     255: aload_1
     256: aload         12
     258: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: bipush        61
     263: invokevirtual #74                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     266: aload         13
     268: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: pop
     272: goto          172
     275: goto          72
     278: aload         4
     280: ifnull        290
     283: aload_1
     284: aload         4
     286: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: pop
     290: return

  protected java.util.Map<java.lang.String, java.lang.Object> queryProperties(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #94                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #95                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #76,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          88
      29: aload_3
      30: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #80                 // class java/util/Map$Entry
      38: astore        4
      40: aload_0
      41: aload         4
      43: invokeinterface #90,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: checkcast     #91                 // class java/lang/String
      51: aload         4
      53: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: invokevirtual #96                 // Method isEligibleProperty:(Ljava/lang/String;Ljava/lang/Object;)Z
      61: ifeq          85
      64: aload_2
      65: aload         4
      67: invokeinterface #90,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      72: aload         4
      74: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      79: invokeinterface #97,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: goto          20
      88: aload_2
      89: areturn

  protected boolean isEligibleProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_2
       8: invokevirtual #98                 // Method isEligibleValue:(Ljava/lang/Object;)Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: aload_2
      17: invokevirtual #82                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #83                 // Method java/lang/Class.isArray:()Z
      23: ifeq          73
      26: aload_2
      27: invokestatic  #99                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      30: istore_3
      31: iload_3
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: iconst_0
      38: istore        4
      40: iload         4
      42: iload_3
      43: if_icmpge     71
      46: aload_2
      47: iload         4
      49: invokestatic  #100                // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      52: astore        5
      54: aload_0
      55: aload         5
      57: invokevirtual #98                 // Method isEligibleValue:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: iinc          4, 1
      68: goto          40
      71: iconst_1
      72: ireturn
      73: aload_2
      74: instanceof    #87                 // class java/util/Collection
      77: ifeq          139
      80: aload_2
      81: checkcast     #87                 // class java/util/Collection
      84: astore_3
      85: aload_3
      86: invokeinterface #101,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
      91: ifeq          96
      94: iconst_0
      95: ireturn
      96: aload_3
      97: invokeinterface #88,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     102: astore        4
     104: aload         4
     106: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     111: ifeq          137
     114: aload         4
     116: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: astore        5
     123: aload_0
     124: aload         5
     126: invokevirtual #98                 // Method isEligibleValue:(Ljava/lang/Object;)Z
     129: ifne          134
     132: iconst_0
     133: ireturn
     134: goto          104
     137: iconst_1
     138: ireturn
     139: iconst_0
     140: ireturn

  protected boolean isEligibleValue(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_1
       5: invokevirtual #82                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokestatic  #102                // Method org/springframework/beans/BeanUtils.isSimpleValueType:(Ljava/lang/Class;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected java.lang.String urlEncode(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_1
       5: aload_2
       6: invokestatic  #103                // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: goto          13
      12: aconst_null
      13: areturn

  protected java.lang.String updateTargetUrl(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: invokevirtual #104                // Method getWebApplicationContext:()Lorg/springframework/web/context/WebApplicationContext;
       4: astore        5
       6: aload         5
       8: ifnonnull     21
      11: aload_3
      12: aload_0
      13: invokevirtual #105                // Method getServletContext:()Ljavax/servlet/ServletContext;
      16: invokestatic  #106                // Method org/springframework/web/servlet/support/RequestContextUtils.findWebApplicationContext:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
      19: astore        5
      21: aload         5
      23: ifnull        64
      26: aload         5
      28: ldc           #108                // String requestDataValueProcessor
      30: invokeinterface #109,  2          // InterfaceMethod org/springframework/web/context/WebApplicationContext.containsBean:(Ljava/lang/String;)Z
      35: ifeq          64
      38: aload         5
      40: ldc           #108                // String requestDataValueProcessor
      42: ldc           #110                // class org/springframework/web/servlet/support/RequestDataValueProcessor
      44: invokeinterface #111,  3          // InterfaceMethod org/springframework/web/context/WebApplicationContext.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      49: checkcast     #110                // class org/springframework/web/servlet/support/RequestDataValueProcessor
      52: astore        6
      54: aload         6
      56: aload_3
      57: aload_1
      58: invokeinterface #112,  3          // InterfaceMethod org/springframework/web/servlet/support/RequestDataValueProcessor.processUrl:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
      63: areturn
      64: aload_1
      65: areturn

  protected void sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #113                // Method isRemoteHost:(Ljava/lang/String;)Z
       5: ifeq          12
       8: aload_3
       9: goto          19
      12: aload_2
      13: aload_3
      14: invokeinterface #114,  2          // InterfaceMethod javax/servlet/http/HttpServletResponse.encodeRedirectURL:(Ljava/lang/String;)Ljava/lang/String;
      19: astore        5
      21: iload         4
      23: ifeq          113
      26: aload_1
      27: getstatic     #115                // Field org/springframework/web/servlet/View.RESPONSE_STATUS_ATTRIBUTE:Ljava/lang/String;
      30: invokeinterface #63,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      35: checkcast     #116                // class org/springframework/http/HttpStatus
      38: astore        6
      40: aload_0
      41: getfield      #10                 // Field statusCode:Lorg/springframework/http/HttpStatus;
      44: ifnull        73
      47: aload_2
      48: aload_0
      49: getfield      #10                 // Field statusCode:Lorg/springframework/http/HttpStatus;
      52: invokevirtual #117                // Method org/springframework/http/HttpStatus.value:()I
      55: invokeinterface #118,  2          // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      60: aload_2
      61: ldc           #119                // String Location
      63: aload         5
      65: invokeinterface #120,  3          // InterfaceMethod javax/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      70: goto          110
      73: aload         6
      75: ifnull        102
      78: aload_2
      79: aload         6
      81: invokevirtual #117                // Method org/springframework/http/HttpStatus.value:()I
      84: invokeinterface #118,  2          // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      89: aload_2
      90: ldc           #119                // String Location
      92: aload         5
      94: invokeinterface #120,  3          // InterfaceMethod javax/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      99: goto          110
     102: aload_2
     103: aload         5
     105: invokeinterface #121,  2          // InterfaceMethod javax/servlet/http/HttpServletResponse.sendRedirect:(Ljava/lang/String;)V
     110: goto          143
     113: aload_0
     114: aload_1
     115: aload_2
     116: aload_3
     117: invokevirtual #122                // Method getHttp11StatusCode:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)Lorg/springframework/http/HttpStatus;
     120: astore        6
     122: aload_2
     123: aload         6
     125: invokevirtual #117                // Method org/springframework/http/HttpStatus.value:()I
     128: invokeinterface #118,  2          // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
     133: aload_2
     134: ldc           #119                // String Location
     136: aload         5
     138: invokeinterface #120,  3          // InterfaceMethod javax/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
     143: return

  protected boolean isRemoteHost(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #123                // Method getHosts:()[Ljava/lang/String;
       4: invokestatic  #124                // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
       7: ifeq          12
      10: iconst_0
      11: ireturn
      12: aload_1
      13: invokestatic  #16                 // Method org/springframework/web/util/UriComponentsBuilder.fromUriString:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      16: invokevirtual #17                 // Method org/springframework/web/util/UriComponentsBuilder.build:()Lorg/springframework/web/util/UriComponents;
      19: invokevirtual #125                // Method org/springframework/web/util/UriComponents.getHost:()Ljava/lang/String;
      22: astore_2
      23: aload_2
      24: invokestatic  #126                // Method org/springframework/util/StringUtils.isEmpty:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #123                // Method getHosts:()[Ljava/lang/String;
      36: astore_3
      37: aload_3
      38: arraylength
      39: istore        4
      41: iconst_0
      42: istore        5
      44: iload         5
      46: iload         4
      48: if_icmpge     74
      51: aload_3
      52: iload         5
      54: aaload
      55: astore        6
      57: aload_2
      58: aload         6
      60: invokevirtual #127                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          68
      66: iconst_0
      67: ireturn
      68: iinc          5, 1
      71: goto          44
      74: iconst_1
      75: ireturn

  protected org.springframework.http.HttpStatus getHttp11StatusCode(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field statusCode:Lorg/springframework/http/HttpStatus;
       4: ifnull        12
       7: aload_0
       8: getfield      #10                 // Field statusCode:Lorg/springframework/http/HttpStatus;
      11: areturn
      12: aload_1
      13: getstatic     #115                // Field org/springframework/web/servlet/View.RESPONSE_STATUS_ATTRIBUTE:Ljava/lang/String;
      16: invokeinterface #63,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      21: checkcast     #116                // class org/springframework/http/HttpStatus
      24: astore        4
      26: aload         4
      28: ifnull        34
      31: aload         4
      33: areturn
      34: getstatic     #128                // Field org/springframework/http/HttpStatus.SEE_OTHER:Lorg/springframework/http/HttpStatus;
      37: areturn

  static {};
    Code:
       0: ldc           #129                // String \\{([^/]+?)\\}
       2: invokestatic  #130                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #45                 // Field URI_TEMPLATE_VARIABLE_PATTERN:Ljava/util/regex/Pattern;
       8: return
}
