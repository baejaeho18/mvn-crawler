Compiled from "WorkspaceDirectory.java"
public class com.amazonaws.services.workspaces.model.WorkspaceDirectory implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String directoryId;

  private java.lang.String alias;

  private java.lang.String directoryName;

  private java.lang.String registrationCode;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> subnetIds;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> dnsIpAddresses;

  private java.lang.String customerUserName;

  private java.lang.String iamRoleId;

  private java.lang.String directoryType;

  private java.lang.String workspaceSecurityGroupId;

  private java.lang.String state;

  private com.amazonaws.services.workspaces.model.DefaultWorkspaceCreationProperties workspaceCreationProperties;

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setDirectoryId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field directoryId:Ljava/lang/String;
       5: return

  public java.lang.String getDirectoryId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field directoryId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withDirectoryId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setDirectoryId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setAlias(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field alias:Ljava/lang/String;
       5: return

  public java.lang.String getAlias();
    Code:
       0: aload_0
       1: getfield      #4                  // Field alias:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withAlias(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setAlias:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setDirectoryName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field directoryName:Ljava/lang/String;
       5: return

  public java.lang.String getDirectoryName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field directoryName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withDirectoryName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setDirectoryName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRegistrationCode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field registrationCode:Ljava/lang/String;
       5: return

  public java.lang.String getRegistrationCode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field registrationCode:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withRegistrationCode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setRegistrationCode:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getSubnetIds();
    Code:
       0: aload_0
       1: getfield      #10                 // Field subnetIds:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #10                 // Field subnetIds:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #10                 // Field subnetIds:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setSubnetIds(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #10                 // Field subnetIds:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #10                 // Field subnetIds:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withSubnetIds(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #10                 // Field subnetIds:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #15                 // Method setSubnetIds:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #10                 // Field subnetIds:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withSubnetIds(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setSubnetIds:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getDnsIpAddresses();
    Code:
       0: aload_0
       1: getfield      #17                 // Field dnsIpAddresses:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #17                 // Field dnsIpAddresses:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #17                 // Field dnsIpAddresses:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setDnsIpAddresses(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #17                 // Field dnsIpAddresses:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #17                 // Field dnsIpAddresses:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withDnsIpAddresses(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #17                 // Field dnsIpAddresses:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #18                 // Method setDnsIpAddresses:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #17                 // Field dnsIpAddresses:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withDnsIpAddresses(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method setDnsIpAddresses:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setCustomerUserName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field customerUserName:Ljava/lang/String;
       5: return

  public java.lang.String getCustomerUserName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field customerUserName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withCustomerUserName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setCustomerUserName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setIamRoleId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field iamRoleId:Ljava/lang/String;
       5: return

  public java.lang.String getIamRoleId();
    Code:
       0: aload_0
       1: getfield      #21                 // Field iamRoleId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withIamRoleId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method setIamRoleId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setDirectoryType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field directoryType:Ljava/lang/String;
       5: return

  public java.lang.String getDirectoryType();
    Code:
       0: aload_0
       1: getfield      #23                 // Field directoryType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withDirectoryType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setDirectoryType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setDirectoryType(com.amazonaws.services.workspaces.model.WorkspaceDirectoryType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method com/amazonaws/services/workspaces/model/WorkspaceDirectoryType.toString:()Ljava/lang/String;
       5: putfield      #23                 // Field directoryType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withDirectoryType(com.amazonaws.services.workspaces.model.WorkspaceDirectoryType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setDirectoryType:(Lcom/amazonaws/services/workspaces/model/WorkspaceDirectoryType;)V
       5: aload_0
       6: areturn

  public void setWorkspaceSecurityGroupId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field workspaceSecurityGroupId:Ljava/lang/String;
       5: return

  public java.lang.String getWorkspaceSecurityGroupId();
    Code:
       0: aload_0
       1: getfield      #27                 // Field workspaceSecurityGroupId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withWorkspaceSecurityGroupId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setWorkspaceSecurityGroupId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setState(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field state:Ljava/lang/String;
       5: return

  public java.lang.String getState();
    Code:
       0: aload_0
       1: getfield      #29                 // Field state:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withState(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setState:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setState(com.amazonaws.services.workspaces.model.WorkspaceDirectoryState);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method com/amazonaws/services/workspaces/model/WorkspaceDirectoryState.toString:()Ljava/lang/String;
       5: putfield      #29                 // Field state:Ljava/lang/String;
       8: return

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withState(com.amazonaws.services.workspaces.model.WorkspaceDirectoryState);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method setState:(Lcom/amazonaws/services/workspaces/model/WorkspaceDirectoryState;)V
       5: aload_0
       6: areturn

  public void setWorkspaceCreationProperties(com.amazonaws.services.workspaces.model.DefaultWorkspaceCreationProperties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field workspaceCreationProperties:Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
       5: return

  public com.amazonaws.services.workspaces.model.DefaultWorkspaceCreationProperties getWorkspaceCreationProperties();
    Code:
       0: aload_0
       1: getfield      #33                 // Field workspaceCreationProperties:Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
       4: areturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory withWorkspaceCreationProperties(com.amazonaws.services.workspaces.model.DefaultWorkspaceCreationProperties);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method setWorkspaceCreationProperties:(Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #35                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #37                 // String {
      11: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #39                 // Method getDirectoryId:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #35                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #40                 // String DirectoryId:
      32: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #39                 // Method getDirectoryId:()Ljava/lang/String;
      39: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #41                 // String ,
      44: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #43                 // Method getAlias:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #35                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #44                 // String Alias:
      71: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #43                 // Method getAlias:()Ljava/lang/String;
      78: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #41                 // String ,
      83: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #45                 // Method getDirectoryName:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #35                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #46                 // String DirectoryName:
     110: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #45                 // Method getDirectoryName:()Ljava/lang/String;
     117: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #41                 // String ,
     122: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #47                 // Method getRegistrationCode:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #35                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #48                 // String RegistrationCode:
     149: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #47                 // Method getRegistrationCode:()Ljava/lang/String;
     156: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #41                 // String ,
     161: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #49                 // Method getSubnetIds:()Ljava/util/List;
     175: ifnull        210
     178: aload_1
     179: new           #35                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #50                 // String SubnetIds:
     188: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #49                 // Method getSubnetIds:()Ljava/util/List;
     195: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     198: ldc           #41                 // String ,
     200: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #52                 // Method getDnsIpAddresses:()Ljava/util/List;
     214: ifnull        249
     217: aload_1
     218: new           #35                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #53                 // String DnsIpAddresses:
     227: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #52                 // Method getDnsIpAddresses:()Ljava/util/List;
     234: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #41                 // String ,
     239: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #54                 // Method getCustomerUserName:()Ljava/lang/String;
     253: ifnull        288
     256: aload_1
     257: new           #35                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #55                 // String CustomerUserName:
     266: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #54                 // Method getCustomerUserName:()Ljava/lang/String;
     273: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #41                 // String ,
     278: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #56                 // Method getIamRoleId:()Ljava/lang/String;
     292: ifnull        327
     295: aload_1
     296: new           #35                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #57                 // String IamRoleId:
     305: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #56                 // Method getIamRoleId:()Ljava/lang/String;
     312: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: ldc           #41                 // String ,
     317: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #58                 // Method getDirectoryType:()Ljava/lang/String;
     331: ifnull        366
     334: aload_1
     335: new           #35                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #59                 // String DirectoryType:
     344: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #58                 // Method getDirectoryType:()Ljava/lang/String;
     351: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: ldc           #41                 // String ,
     356: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #60                 // Method getWorkspaceSecurityGroupId:()Ljava/lang/String;
     370: ifnull        405
     373: aload_1
     374: new           #35                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #61                 // String WorkspaceSecurityGroupId:
     383: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #60                 // Method getWorkspaceSecurityGroupId:()Ljava/lang/String;
     390: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: ldc           #41                 // String ,
     395: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #62                 // Method getState:()Ljava/lang/String;
     409: ifnull        444
     412: aload_1
     413: new           #35                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #63                 // String State:
     422: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #62                 // Method getState:()Ljava/lang/String;
     429: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     432: ldc           #41                 // String ,
     434: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #64                 // Method getWorkspaceCreationProperties:()Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
     448: ifnull        478
     451: aload_1
     452: new           #35                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #65                 // String WorkspaceCreationProperties:
     461: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #64                 // Method getWorkspaceCreationProperties:()Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
     468: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     471: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     474: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     477: pop
     478: aload_1
     479: ldc           #66                 // String }
     481: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     484: pop
     485: aload_1
     486: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     489: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #67                 // class com/amazonaws/services/workspaces/model/WorkspaceDirectory
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #67                 // class com/amazonaws/services/workspaces/model/WorkspaceDirectory
      26: astore_2
      27: aload_2
      28: invokevirtual #39                 // Method getDirectoryId:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #39                 // Method getDirectoryId:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #39                 // Method getDirectoryId:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #39                 // Method getDirectoryId:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #39                 // Method getDirectoryId:()Ljava/lang/String;
      72: invokevirtual #68                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #43                 // Method getAlias:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #43                 // Method getAlias:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #43                 // Method getAlias:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #43                 // Method getAlias:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #43                 // Method getAlias:()Ljava/lang/String;
     125: invokevirtual #68                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #45                 // Method getDirectoryName:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #45                 // Method getDirectoryName:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #45                 // Method getDirectoryName:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #45                 // Method getDirectoryName:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #45                 // Method getDirectoryName:()Ljava/lang/String;
     178: invokevirtual #68                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #47                 // Method getRegistrationCode:()Ljava/lang/String;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #47                 // Method getRegistrationCode:()Ljava/lang/String;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #47                 // Method getRegistrationCode:()Ljava/lang/String;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #47                 // Method getRegistrationCode:()Ljava/lang/String;
     227: aload_0
     228: invokevirtual #47                 // Method getRegistrationCode:()Ljava/lang/String;
     231: invokevirtual #68                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #49                 // Method getSubnetIds:()Ljava/util/List;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #49                 // Method getSubnetIds:()Ljava/util/List;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #49                 // Method getSubnetIds:()Ljava/util/List;
     273: ifnull        294
     276: aload_2
     277: invokevirtual #49                 // Method getSubnetIds:()Ljava/util/List;
     280: aload_0
     281: invokevirtual #49                 // Method getSubnetIds:()Ljava/util/List;
     284: invokeinterface #69,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     289: ifne          294
     292: iconst_0
     293: ireturn
     294: aload_2
     295: invokevirtual #52                 // Method getDnsIpAddresses:()Ljava/util/List;
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: aload_0
     307: invokevirtual #52                 // Method getDnsIpAddresses:()Ljava/util/List;
     310: ifnonnull     317
     313: iconst_1
     314: goto          318
     317: iconst_0
     318: ixor
     319: ifeq          324
     322: iconst_0
     323: ireturn
     324: aload_2
     325: invokevirtual #52                 // Method getDnsIpAddresses:()Ljava/util/List;
     328: ifnull        349
     331: aload_2
     332: invokevirtual #52                 // Method getDnsIpAddresses:()Ljava/util/List;
     335: aload_0
     336: invokevirtual #52                 // Method getDnsIpAddresses:()Ljava/util/List;
     339: invokeinterface #69,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     344: ifne          349
     347: iconst_0
     348: ireturn
     349: aload_2
     350: invokevirtual #54                 // Method getCustomerUserName:()Ljava/lang/String;
     353: ifnonnull     360
     356: iconst_1
     357: goto          361
     360: iconst_0
     361: aload_0
     362: invokevirtual #54                 // Method getCustomerUserName:()Ljava/lang/String;
     365: ifnonnull     372
     368: iconst_1
     369: goto          373
     372: iconst_0
     373: ixor
     374: ifeq          379
     377: iconst_0
     378: ireturn
     379: aload_2
     380: invokevirtual #54                 // Method getCustomerUserName:()Ljava/lang/String;
     383: ifnull        402
     386: aload_2
     387: invokevirtual #54                 // Method getCustomerUserName:()Ljava/lang/String;
     390: aload_0
     391: invokevirtual #54                 // Method getCustomerUserName:()Ljava/lang/String;
     394: invokevirtual #68                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     397: ifne          402
     400: iconst_0
     401: ireturn
     402: aload_2
     403: invokevirtual #56                 // Method getIamRoleId:()Ljava/lang/String;
     406: ifnonnull     413
     409: iconst_1
     410: goto          414
     413: iconst_0
     414: aload_0
     415: invokevirtual #56                 // Method getIamRoleId:()Ljava/lang/String;
     418: ifnonnull     425
     421: iconst_1
     422: goto          426
     425: iconst_0
     426: ixor
     427: ifeq          432
     430: iconst_0
     431: ireturn
     432: aload_2
     433: invokevirtual #56                 // Method getIamRoleId:()Ljava/lang/String;
     436: ifnull        455
     439: aload_2
     440: invokevirtual #56                 // Method getIamRoleId:()Ljava/lang/String;
     443: aload_0
     444: invokevirtual #56                 // Method getIamRoleId:()Ljava/lang/String;
     447: invokevirtual #68                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     450: ifne          455
     453: iconst_0
     454: ireturn
     455: aload_2
     456: invokevirtual #58                 // Method getDirectoryType:()Ljava/lang/String;
     459: ifnonnull     466
     462: iconst_1
     463: goto          467
     466: iconst_0
     467: aload_0
     468: invokevirtual #58                 // Method getDirectoryType:()Ljava/lang/String;
     471: ifnonnull     478
     474: iconst_1
     475: goto          479
     478: iconst_0
     479: ixor
     480: ifeq          485
     483: iconst_0
     484: ireturn
     485: aload_2
     486: invokevirtual #58                 // Method getDirectoryType:()Ljava/lang/String;
     489: ifnull        508
     492: aload_2
     493: invokevirtual #58                 // Method getDirectoryType:()Ljava/lang/String;
     496: aload_0
     497: invokevirtual #58                 // Method getDirectoryType:()Ljava/lang/String;
     500: invokevirtual #68                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     503: ifne          508
     506: iconst_0
     507: ireturn
     508: aload_2
     509: invokevirtual #60                 // Method getWorkspaceSecurityGroupId:()Ljava/lang/String;
     512: ifnonnull     519
     515: iconst_1
     516: goto          520
     519: iconst_0
     520: aload_0
     521: invokevirtual #60                 // Method getWorkspaceSecurityGroupId:()Ljava/lang/String;
     524: ifnonnull     531
     527: iconst_1
     528: goto          532
     531: iconst_0
     532: ixor
     533: ifeq          538
     536: iconst_0
     537: ireturn
     538: aload_2
     539: invokevirtual #60                 // Method getWorkspaceSecurityGroupId:()Ljava/lang/String;
     542: ifnull        561
     545: aload_2
     546: invokevirtual #60                 // Method getWorkspaceSecurityGroupId:()Ljava/lang/String;
     549: aload_0
     550: invokevirtual #60                 // Method getWorkspaceSecurityGroupId:()Ljava/lang/String;
     553: invokevirtual #68                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     556: ifne          561
     559: iconst_0
     560: ireturn
     561: aload_2
     562: invokevirtual #62                 // Method getState:()Ljava/lang/String;
     565: ifnonnull     572
     568: iconst_1
     569: goto          573
     572: iconst_0
     573: aload_0
     574: invokevirtual #62                 // Method getState:()Ljava/lang/String;
     577: ifnonnull     584
     580: iconst_1
     581: goto          585
     584: iconst_0
     585: ixor
     586: ifeq          591
     589: iconst_0
     590: ireturn
     591: aload_2
     592: invokevirtual #62                 // Method getState:()Ljava/lang/String;
     595: ifnull        614
     598: aload_2
     599: invokevirtual #62                 // Method getState:()Ljava/lang/String;
     602: aload_0
     603: invokevirtual #62                 // Method getState:()Ljava/lang/String;
     606: invokevirtual #68                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     609: ifne          614
     612: iconst_0
     613: ireturn
     614: aload_2
     615: invokevirtual #64                 // Method getWorkspaceCreationProperties:()Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
     618: ifnonnull     625
     621: iconst_1
     622: goto          626
     625: iconst_0
     626: aload_0
     627: invokevirtual #64                 // Method getWorkspaceCreationProperties:()Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
     630: ifnonnull     637
     633: iconst_1
     634: goto          638
     637: iconst_0
     638: ixor
     639: ifeq          644
     642: iconst_0
     643: ireturn
     644: aload_2
     645: invokevirtual #64                 // Method getWorkspaceCreationProperties:()Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
     648: ifnull        667
     651: aload_2
     652: invokevirtual #64                 // Method getWorkspaceCreationProperties:()Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
     655: aload_0
     656: invokevirtual #64                 // Method getWorkspaceCreationProperties:()Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
     659: invokevirtual #70                 // Method com/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties.equals:(Ljava/lang/Object;)Z
     662: ifne          667
     665: iconst_0
     666: ireturn
     667: iconst_1
     668: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #39                 // Method getDirectoryId:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #39                 // Method getDirectoryId:()Ljava/lang/String;
      24: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #43                 // Method getAlias:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #43                 // Method getAlias:()Ljava/lang/String;
      48: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #45                 // Method getDirectoryName:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #45                 // Method getDirectoryName:()Ljava/lang/String;
      72: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #47                 // Method getRegistrationCode:()Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #47                 // Method getRegistrationCode:()Ljava/lang/String;
      96: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #49                 // Method getSubnetIds:()Ljava/util/List;
     109: ifnonnull     116
     112: iconst_0
     113: goto          125
     116: aload_0
     117: invokevirtual #49                 // Method getSubnetIds:()Ljava/util/List;
     120: invokeinterface #72,  1           // InterfaceMethod java/util/List.hashCode:()I
     125: iadd
     126: istore_2
     127: bipush        31
     129: iload_2
     130: imul
     131: aload_0
     132: invokevirtual #52                 // Method getDnsIpAddresses:()Ljava/util/List;
     135: ifnonnull     142
     138: iconst_0
     139: goto          151
     142: aload_0
     143: invokevirtual #52                 // Method getDnsIpAddresses:()Ljava/util/List;
     146: invokeinterface #72,  1           // InterfaceMethod java/util/List.hashCode:()I
     151: iadd
     152: istore_2
     153: bipush        31
     155: iload_2
     156: imul
     157: aload_0
     158: invokevirtual #54                 // Method getCustomerUserName:()Ljava/lang/String;
     161: ifnonnull     168
     164: iconst_0
     165: goto          175
     168: aload_0
     169: invokevirtual #54                 // Method getCustomerUserName:()Ljava/lang/String;
     172: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     175: iadd
     176: istore_2
     177: bipush        31
     179: iload_2
     180: imul
     181: aload_0
     182: invokevirtual #56                 // Method getIamRoleId:()Ljava/lang/String;
     185: ifnonnull     192
     188: iconst_0
     189: goto          199
     192: aload_0
     193: invokevirtual #56                 // Method getIamRoleId:()Ljava/lang/String;
     196: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     199: iadd
     200: istore_2
     201: bipush        31
     203: iload_2
     204: imul
     205: aload_0
     206: invokevirtual #58                 // Method getDirectoryType:()Ljava/lang/String;
     209: ifnonnull     216
     212: iconst_0
     213: goto          223
     216: aload_0
     217: invokevirtual #58                 // Method getDirectoryType:()Ljava/lang/String;
     220: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     223: iadd
     224: istore_2
     225: bipush        31
     227: iload_2
     228: imul
     229: aload_0
     230: invokevirtual #60                 // Method getWorkspaceSecurityGroupId:()Ljava/lang/String;
     233: ifnonnull     240
     236: iconst_0
     237: goto          247
     240: aload_0
     241: invokevirtual #60                 // Method getWorkspaceSecurityGroupId:()Ljava/lang/String;
     244: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     247: iadd
     248: istore_2
     249: bipush        31
     251: iload_2
     252: imul
     253: aload_0
     254: invokevirtual #62                 // Method getState:()Ljava/lang/String;
     257: ifnonnull     264
     260: iconst_0
     261: goto          271
     264: aload_0
     265: invokevirtual #62                 // Method getState:()Ljava/lang/String;
     268: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     271: iadd
     272: istore_2
     273: bipush        31
     275: iload_2
     276: imul
     277: aload_0
     278: invokevirtual #64                 // Method getWorkspaceCreationProperties:()Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
     281: ifnonnull     288
     284: iconst_0
     285: goto          295
     288: aload_0
     289: invokevirtual #64                 // Method getWorkspaceCreationProperties:()Lcom/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties;
     292: invokevirtual #73                 // Method com/amazonaws/services/workspaces/model/DefaultWorkspaceCreationProperties.hashCode:()I
     295: iadd
     296: istore_2
     297: iload_2
     298: ireturn

  public com.amazonaws.services.workspaces.model.WorkspaceDirectory clone();
    Code:
       0: aload_0
       1: invokespecial #74                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #67                 // class com/amazonaws/services/workspaces/model/WorkspaceDirectory
       7: areturn
       8: astore_1
       9: new           #76                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #77                 // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method clone:()Lcom/amazonaws/services/workspaces/model/WorkspaceDirectory;
       4: areturn
}
