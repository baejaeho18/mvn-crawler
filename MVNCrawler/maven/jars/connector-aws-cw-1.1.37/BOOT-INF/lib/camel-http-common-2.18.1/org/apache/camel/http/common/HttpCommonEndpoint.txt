Compiled from "HttpCommonEndpoint.java"
public abstract class org.apache.camel.http.common.HttpCommonEndpoint extends org.apache.camel.impl.DefaultEndpoint implements org.apache.camel.spi.HeaderFilterStrategyAware {
  org.apache.camel.http.common.HttpCommonComponent component;

  java.net.URI httpUri;

  org.apache.camel.spi.HeaderFilterStrategy headerFilterStrategy;

  org.apache.camel.http.common.HttpBinding httpBinding;

  boolean throwExceptionOnFailure;

  boolean bridgeEndpoint;

  boolean preserveHostHeader;

  boolean matchOnUriPrefix;

  boolean chunked;

  boolean disableStreamCache;

  java.lang.String proxyHost;

  int proxyPort;

  java.lang.String authMethodPriority;

  boolean transferException;

  boolean connectionClose;

  boolean traceEnabled;

  boolean optionsEnabled;

  java.lang.String httpMethodRestrict;

  java.lang.Integer responseBufferSize;

  boolean ignoreResponseBody;

  boolean copyHeaders;

  boolean eagerCheckContentAvailable;

  boolean mapHttpMessageBody;

  boolean mapHttpMessageHeaders;

  boolean mapHttpMessageFormUrlEncodedBody;

  private java.lang.String okStatusCodeRange;

  private org.apache.camel.http.common.UrlRewrite urlRewrite;

  private boolean async;

  public org.apache.camel.http.common.HttpCommonEndpoint();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/camel/impl/DefaultEndpoint."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/camel/http/common/HttpHeaderFilterStrategy
       8: dup
       9: invokespecial #3                  // Method org/apache/camel/http/common/HttpHeaderFilterStrategy."<init>":()V
      12: putfield      #4                  // Field headerFilterStrategy:Lorg/apache/camel/spi/HeaderFilterStrategy;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field throwExceptionOnFailure:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field chunked:Z
      25: aload_0
      26: iconst_1
      27: putfield      #7                  // Field copyHeaders:Z
      30: aload_0
      31: iconst_1
      32: putfield      #8                  // Field mapHttpMessageBody:Z
      35: aload_0
      36: iconst_1
      37: putfield      #9                  // Field mapHttpMessageHeaders:Z
      40: aload_0
      41: iconst_1
      42: putfield      #10                 // Field mapHttpMessageFormUrlEncodedBody:Z
      45: aload_0
      46: ldc           #11                 // String 200-299
      48: putfield      #12                 // Field okStatusCodeRange:Ljava/lang/String;
      51: return

  public org.apache.camel.http.common.HttpCommonEndpoint(java.lang.String, org.apache.camel.http.common.HttpCommonComponent, java.net.URI) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method org/apache/camel/impl/DefaultEndpoint."<init>":(Ljava/lang/String;Lorg/apache/camel/Component;)V
       6: aload_0
       7: new           #2                  // class org/apache/camel/http/common/HttpHeaderFilterStrategy
      10: dup
      11: invokespecial #3                  // Method org/apache/camel/http/common/HttpHeaderFilterStrategy."<init>":()V
      14: putfield      #4                  // Field headerFilterStrategy:Lorg/apache/camel/spi/HeaderFilterStrategy;
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field throwExceptionOnFailure:Z
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field chunked:Z
      27: aload_0
      28: iconst_1
      29: putfield      #7                  // Field copyHeaders:Z
      32: aload_0
      33: iconst_1
      34: putfield      #8                  // Field mapHttpMessageBody:Z
      37: aload_0
      38: iconst_1
      39: putfield      #9                  // Field mapHttpMessageHeaders:Z
      42: aload_0
      43: iconst_1
      44: putfield      #10                 // Field mapHttpMessageFormUrlEncodedBody:Z
      47: aload_0
      48: ldc           #11                 // String 200-299
      50: putfield      #12                 // Field okStatusCodeRange:Ljava/lang/String;
      53: aload_0
      54: aload_2
      55: putfield      #14                 // Field component:Lorg/apache/camel/http/common/HttpCommonComponent;
      58: aload_0
      59: aload_3
      60: putfield      #15                 // Field httpUri:Ljava/net/URI;
      63: return

  public void connect(org.apache.camel.http.common.HttpConsumer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #14                 // Field component:Lorg/apache/camel/http/common/HttpCommonComponent;
       4: aload_1
       5: invokevirtual #16                 // Method org/apache/camel/http/common/HttpCommonComponent.connect:(Lorg/apache/camel/http/common/HttpConsumer;)V
       8: return

  public void disconnect(org.apache.camel.http.common.HttpConsumer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #14                 // Field component:Lorg/apache/camel/http/common/HttpCommonComponent;
       4: aload_1
       5: invokevirtual #17                 // Method org/apache/camel/http/common/HttpCommonComponent.disconnect:(Lorg/apache/camel/http/common/HttpConsumer;)V
       8: return

  public org.apache.camel.http.common.HttpCommonComponent getComponent();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/apache/camel/impl/DefaultEndpoint.getComponent:()Lorg/apache/camel/Component;
       4: checkcast     #19                 // class org/apache/camel/http/common/HttpCommonComponent
       7: areturn

  public boolean isLenientProperties();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public org.apache.camel.http.common.HttpBinding getBinding();
    Code:
       0: aload_0
       1: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
       4: areturn

  public void setBinding(org.apache.camel.http.common.HttpBinding);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method setHttpBinding:(Lorg/apache/camel/http/common/HttpBinding;)V
       5: return

  public org.apache.camel.http.common.HttpBinding getHttpBinding();
    Code:
       0: aload_0
       1: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
       4: ifnonnull     119
       7: aload_0
       8: new           #22                 // class org/apache/camel/http/common/DefaultHttpBinding
      11: dup
      12: invokespecial #23                 // Method org/apache/camel/http/common/DefaultHttpBinding."<init>":()V
      15: putfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
      18: aload_0
      19: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
      22: aload_0
      23: invokevirtual #24                 // Method getHeaderFilterStrategy:()Lorg/apache/camel/spi/HeaderFilterStrategy;
      26: invokeinterface #25,  2           // InterfaceMethod org/apache/camel/http/common/HttpBinding.setHeaderFilterStrategy:(Lorg/apache/camel/spi/HeaderFilterStrategy;)V
      31: aload_0
      32: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
      35: aload_0
      36: invokevirtual #26                 // Method isTransferException:()Z
      39: invokeinterface #27,  2           // InterfaceMethod org/apache/camel/http/common/HttpBinding.setTransferException:(Z)V
      44: aload_0
      45: invokevirtual #28                 // Method getComponent:()Lorg/apache/camel/http/common/HttpCommonComponent;
      48: ifnull        67
      51: aload_0
      52: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
      55: aload_0
      56: invokevirtual #28                 // Method getComponent:()Lorg/apache/camel/http/common/HttpCommonComponent;
      59: invokevirtual #29                 // Method org/apache/camel/http/common/HttpCommonComponent.isAllowJavaSerializedObject:()Z
      62: invokeinterface #30,  2           // InterfaceMethod org/apache/camel/http/common/HttpBinding.setAllowJavaSerializedObject:(Z)V
      67: aload_0
      68: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
      71: aload_0
      72: invokevirtual #31                 // Method isEagerCheckContentAvailable:()Z
      75: invokeinterface #32,  2           // InterfaceMethod org/apache/camel/http/common/HttpBinding.setEagerCheckContentAvailable:(Z)V
      80: aload_0
      81: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
      84: aload_0
      85: invokevirtual #33                 // Method isMapHttpMessageBody:()Z
      88: invokeinterface #34,  2           // InterfaceMethod org/apache/camel/http/common/HttpBinding.setMapHttpMessageBody:(Z)V
      93: aload_0
      94: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
      97: aload_0
      98: invokevirtual #35                 // Method isMapHttpMessageHeaders:()Z
     101: invokeinterface #36,  2           // InterfaceMethod org/apache/camel/http/common/HttpBinding.setMapHttpMessageHeaders:(Z)V
     106: aload_0
     107: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
     110: aload_0
     111: invokevirtual #37                 // Method isMapHttpMessageFormUrlEncodedBody:()Z
     114: invokeinterface #38,  2           // InterfaceMethod org/apache/camel/http/common/HttpBinding.setMapHttpMessageFormUrlEncodedBody:(Z)V
     119: aload_0
     120: getfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
     123: areturn

  public void setHttpBinding(org.apache.camel.http.common.HttpBinding);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field httpBinding:Lorg/apache/camel/http/common/HttpBinding;
       5: return

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpUri:Ljava/net/URI;
       4: invokevirtual #39                 // Method java/net/URI.getPath:()Ljava/lang/String;
       7: invokevirtual #40                 // Method java/lang/String.length:()I
      10: ifne          18
      13: ldc           #41                 // String /
      15: goto          25
      18: aload_0
      19: getfield      #15                 // Field httpUri:Ljava/net/URI;
      22: invokevirtual #39                 // Method java/net/URI.getPath:()Ljava/lang/String;
      25: areturn

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpUri:Ljava/net/URI;
       4: invokevirtual #42                 // Method java/net/URI.getPort:()I
       7: iconst_m1
       8: if_icmpne     30
      11: ldc           #43                 // String https
      13: aload_0
      14: invokevirtual #44                 // Method getProtocol:()Ljava/lang/String;
      17: invokevirtual #45                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          27
      23: sipush        443
      26: ireturn
      27: bipush        80
      29: ireturn
      30: aload_0
      31: getfield      #15                 // Field httpUri:Ljava/net/URI;
      34: invokevirtual #42                 // Method java/net/URI.getPort:()I
      37: ireturn

  public java.lang.String getProtocol();
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpUri:Ljava/net/URI;
       4: invokevirtual #46                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       7: areturn

  public java.net.URI getHttpUri();
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpUri:Ljava/net/URI;
       4: areturn

  public void setHttpUri(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field httpUri:Ljava/net/URI;
       5: return

  public org.apache.camel.spi.HeaderFilterStrategy getHeaderFilterStrategy();
    Code:
       0: aload_0
       1: getfield      #4                  // Field headerFilterStrategy:Lorg/apache/camel/spi/HeaderFilterStrategy;
       4: areturn

  public void setHeaderFilterStrategy(org.apache.camel.spi.HeaderFilterStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field headerFilterStrategy:Lorg/apache/camel/spi/HeaderFilterStrategy;
       5: return

  public boolean isThrowExceptionOnFailure();
    Code:
       0: aload_0
       1: getfield      #5                  // Field throwExceptionOnFailure:Z
       4: ireturn

  public void setThrowExceptionOnFailure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field throwExceptionOnFailure:Z
       5: return

  public boolean isBridgeEndpoint();
    Code:
       0: aload_0
       1: getfield      #47                 // Field bridgeEndpoint:Z
       4: ireturn

  public void setBridgeEndpoint(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field bridgeEndpoint:Z
       5: return

  public boolean isPreserveHostHeader();
    Code:
       0: aload_0
       1: getfield      #48                 // Field preserveHostHeader:Z
       4: ireturn

  public void setPreserveHostHeader(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #48                 // Field preserveHostHeader:Z
       5: return

  public boolean isMatchOnUriPrefix();
    Code:
       0: aload_0
       1: getfield      #49                 // Field matchOnUriPrefix:Z
       4: ireturn

  public void setMatchOnUriPrefix(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #49                 // Field matchOnUriPrefix:Z
       5: return

  public boolean isDisableStreamCache();
    Code:
       0: aload_0
       1: getfield      #50                 // Field disableStreamCache:Z
       4: ireturn

  public void setDisableStreamCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field disableStreamCache:Z
       5: return

  public boolean isChunked();
    Code:
       0: aload_0
       1: getfield      #6                  // Field chunked:Z
       4: ireturn

  public void setChunked(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field chunked:Z
       5: return

  public java.lang.String getProxyHost();
    Code:
       0: aload_0
       1: getfield      #51                 // Field proxyHost:Ljava/lang/String;
       4: areturn

  public void setProxyHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field proxyHost:Ljava/lang/String;
       5: return

  public int getProxyPort();
    Code:
       0: aload_0
       1: getfield      #52                 // Field proxyPort:I
       4: ireturn

  public void setProxyPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #52                 // Field proxyPort:I
       5: return

  public java.lang.String getAuthMethodPriority();
    Code:
       0: aload_0
       1: getfield      #53                 // Field authMethodPriority:Ljava/lang/String;
       4: areturn

  public void setAuthMethodPriority(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field authMethodPriority:Ljava/lang/String;
       5: return

  public boolean isTransferException();
    Code:
       0: aload_0
       1: getfield      #54                 // Field transferException:Z
       4: ireturn

  public boolean isConnectionClose();
    Code:
       0: aload_0
       1: getfield      #55                 // Field connectionClose:Z
       4: ireturn

  public void setConnectionClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #55                 // Field connectionClose:Z
       5: return

  public void setTransferException(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #54                 // Field transferException:Z
       5: return

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: getfield      #56                 // Field traceEnabled:Z
       4: ireturn

  public void setTraceEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #56                 // Field traceEnabled:Z
       5: return

  public boolean isOptionsEnabled();
    Code:
       0: aload_0
       1: getfield      #57                 // Field optionsEnabled:Z
       4: ireturn

  public void setOptionsEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field optionsEnabled:Z
       5: return

  public java.lang.String getHttpMethodRestrict();
    Code:
       0: aload_0
       1: getfield      #58                 // Field httpMethodRestrict:Ljava/lang/String;
       4: areturn

  public void setHttpMethodRestrict(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field httpMethodRestrict:Ljava/lang/String;
       5: return

  public org.apache.camel.http.common.UrlRewrite getUrlRewrite();
    Code:
       0: aload_0
       1: getfield      #59                 // Field urlRewrite:Lorg/apache/camel/http/common/UrlRewrite;
       4: areturn

  public void setUrlRewrite(org.apache.camel.http.common.UrlRewrite);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field urlRewrite:Lorg/apache/camel/http/common/UrlRewrite;
       5: return

  public java.lang.Integer getResponseBufferSize();
    Code:
       0: aload_0
       1: getfield      #60                 // Field responseBufferSize:Ljava/lang/Integer;
       4: areturn

  public void setResponseBufferSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field responseBufferSize:Ljava/lang/Integer;
       5: return

  public boolean isIgnoreResponseBody();
    Code:
       0: aload_0
       1: getfield      #61                 // Field ignoreResponseBody:Z
       4: ireturn

  public void setIgnoreResponseBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #61                 // Field ignoreResponseBody:Z
       5: return

  public boolean isCopyHeaders();
    Code:
       0: aload_0
       1: getfield      #7                  // Field copyHeaders:Z
       4: ireturn

  public void setCopyHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field copyHeaders:Z
       5: return

  public boolean isEagerCheckContentAvailable();
    Code:
       0: aload_0
       1: getfield      #62                 // Field eagerCheckContentAvailable:Z
       4: ireturn

  public void setEagerCheckContentAvailable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #62                 // Field eagerCheckContentAvailable:Z
       5: return

  public java.lang.String getOkStatusCodeRange();
    Code:
       0: aload_0
       1: getfield      #12                 // Field okStatusCodeRange:Ljava/lang/String;
       4: areturn

  public void setOkStatusCodeRange(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field okStatusCodeRange:Ljava/lang/String;
       5: return

  public boolean isMapHttpMessageBody();
    Code:
       0: aload_0
       1: getfield      #8                  // Field mapHttpMessageBody:Z
       4: ireturn

  public void setMapHttpMessageBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field mapHttpMessageBody:Z
       5: return

  public boolean isMapHttpMessageHeaders();
    Code:
       0: aload_0
       1: getfield      #9                  // Field mapHttpMessageHeaders:Z
       4: ireturn

  public void setMapHttpMessageHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field mapHttpMessageHeaders:Z
       5: return

  public boolean isMapHttpMessageFormUrlEncodedBody();
    Code:
       0: aload_0
       1: getfield      #10                 // Field mapHttpMessageFormUrlEncodedBody:Z
       4: ireturn

  public void setMapHttpMessageFormUrlEncodedBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field mapHttpMessageFormUrlEncodedBody:Z
       5: return

  public boolean isAsync();
    Code:
       0: aload_0
       1: getfield      #63                 // Field async:Z
       4: ireturn

  public void setAsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #63                 // Field async:Z
       5: return

  public org.apache.camel.Component getComponent();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getComponent:()Lorg/apache/camel/http/common/HttpCommonComponent;
       4: areturn
}
