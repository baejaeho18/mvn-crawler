Compiled from "XMLWriter.java"
public class com.amazonaws.util.XMLWriter {
  private static final java.lang.String PROLOG;

  private final java.io.Writer writer;

  private final java.lang.String xmlns;

  private java.util.Stack<java.lang.String> elementStack;

  private boolean rootElement;

  public com.amazonaws.util.XMLWriter(java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljava/io/Writer;Ljava/lang/String;)V
       6: return

  public com.amazonaws.util.XMLWriter(java.io.Writer, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/Stack
       8: dup
       9: invokespecial #4                  // Method java/util/Stack."<init>":()V
      12: putfield      #5                  // Field elementStack:Ljava/util/Stack;
      15: aload_0
      16: iconst_1
      17: putfield      #6                  // Field rootElement:Z
      20: aload_0
      21: aload_1
      22: putfield      #7                  // Field writer:Ljava/io/Writer;
      25: aload_0
      26: aload_2
      27: putfield      #8                  // Field xmlns:Ljava/lang/String;
      30: aload_0
      31: ldc           #10                 // String <?xml version=\"1.0\" encoding=\"UTF-8\"?>
      33: invokespecial #11                 // Method append:(Ljava/lang/String;)V
      36: return

  public com.amazonaws.util.XMLWriter startElement(java.lang.String);
    Code:
       0: aload_0
       1: new           #12                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #14                 // String <
      10: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: invokespecial #11                 // Method append:(Ljava/lang/String;)V
      23: aload_0
      24: getfield      #6                  // Field rootElement:Z
      27: ifeq          73
      30: aload_0
      31: getfield      #8                  // Field xmlns:Ljava/lang/String;
      34: ifnull        73
      37: aload_0
      38: new           #12                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #17                 // String  xmlns=\"
      47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #8                  // Field xmlns:Ljava/lang/String;
      54: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #18                 // String \"
      59: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #11                 // Method append:(Ljava/lang/String;)V
      68: aload_0
      69: iconst_0
      70: putfield      #6                  // Field rootElement:Z
      73: aload_0
      74: ldc           #19                 // String >
      76: invokespecial #11                 // Method append:(Ljava/lang/String;)V
      79: aload_0
      80: getfield      #5                  // Field elementStack:Ljava/util/Stack;
      83: aload_1
      84: invokevirtual #20                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: aload_0
      89: areturn

  public com.amazonaws.util.XMLWriter endElement();
    Code:
       0: aload_0
       1: getfield      #5                  // Field elementStack:Ljava/util/Stack;
       4: invokevirtual #21                 // Method java/util/Stack.pop:()Ljava/lang/Object;
       7: checkcast     #22                 // class java/lang/String
      10: astore_1
      11: aload_0
      12: new           #12                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #23                 // String </
      21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #19                 // String >
      30: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #11                 // Method append:(Ljava/lang/String;)V
      39: aload_0
      40: areturn

  public com.amazonaws.util.XMLWriter value(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #24                 // Method escapeXMLEntities:(Ljava/lang/String;)Ljava/lang/String;
       6: invokespecial #11                 // Method append:(Ljava/lang/String;)V
       9: aload_0
      10: areturn

  public com.amazonaws.util.XMLWriter value(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokestatic  #25                 // Method com/amazonaws/util/BinaryUtils.copyBytesFrom:(Ljava/nio/ByteBuffer;)[B
       6: invokestatic  #26                 // Method com/amazonaws/util/Base64.encodeAsString:([B)Ljava/lang/String;
       9: invokespecial #24                 // Method escapeXMLEntities:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #11                 // Method append:(Ljava/lang/String;)V
      15: aload_0
      16: areturn

  public com.amazonaws.util.XMLWriter value(java.util.Date);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokestatic  #27                 // Method com/amazonaws/util/StringUtils.fromDate:(Ljava/util/Date;)Ljava/lang/String;
       6: invokespecial #24                 // Method escapeXMLEntities:(Ljava/lang/String;)Ljava/lang/String;
       9: invokespecial #11                 // Method append:(Ljava/lang/String;)V
      12: aload_0
      13: areturn

  public com.amazonaws.util.XMLWriter value(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
       6: invokespecial #24                 // Method escapeXMLEntities:(Ljava/lang/String;)Ljava/lang/String;
       9: invokespecial #11                 // Method append:(Ljava/lang/String;)V
      12: aload_0
      13: areturn

  private void append(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field writer:Ljava/io/Writer;
       4: aload_1
       5: invokevirtual #29                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       8: pop
       9: goto          24
      12: astore_2
      13: new           #31                 // class com/amazonaws/AmazonClientException
      16: dup
      17: ldc           #32                 // String Unable to write XML document
      19: aload_2
      20: invokespecial #33                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: athrow
      24: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException

  private java.lang.String escapeXMLEntities(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #34                 // String &
       3: invokevirtual #35                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifeq          54
       9: aload_1
      10: ldc           #36                 // String &quot;
      12: ldc           #18                 // String \"
      14: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      17: astore_1
      18: aload_1
      19: ldc           #38                 // String &apos;
      21: ldc           #39                 // String \'
      23: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      26: astore_1
      27: aload_1
      28: ldc           #40                 // String &lt;
      30: ldc           #14                 // String <
      32: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      35: astore_1
      36: aload_1
      37: ldc           #41                 // String &gt;
      39: ldc           #19                 // String >
      41: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      44: astore_1
      45: aload_1
      46: ldc           #42                 // String &amp;
      48: ldc           #34                 // String &
      50: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      53: astore_1
      54: aload_1
      55: ldc           #34                 // String &
      57: ldc           #42                 // String &amp;
      59: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      62: astore_1
      63: aload_1
      64: ldc           #18                 // String \"
      66: ldc           #36                 // String &quot;
      68: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      71: astore_1
      72: aload_1
      73: ldc           #39                 // String \'
      75: ldc           #38                 // String &apos;
      77: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      80: astore_1
      81: aload_1
      82: ldc           #14                 // String <
      84: ldc           #40                 // String &lt;
      86: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      89: astore_1
      90: aload_1
      91: ldc           #19                 // String >
      93: ldc           #41                 // String &gt;
      95: invokevirtual #37                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      98: astore_1
      99: aload_1
     100: areturn
}
