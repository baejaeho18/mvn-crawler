Compiled from "ProfilesConfigFileWriter.java"
class com.amazonaws.auth.profile.ProfilesConfigFileWriter$ProfilesConfigFileWriterHelper extends com.amazonaws.auth.profile.internal.AbstractProfilesConfigFileScanner {
  private final java.io.Writer writer;

  private final java.util.Map<java.lang.String, com.amazonaws.auth.profile.internal.Profile> newProfiles;

  private final java.util.Set<java.lang.String> deletedProfiles;

  private final java.lang.StringBuilder buffer;

  private final java.util.Map<java.lang.String, java.util.Set<java.lang.String>> existingProfileProperties;

  public com.amazonaws.auth.profile.ProfilesConfigFileWriter$ProfilesConfigFileWriterHelper(java.io.Writer, java.util.Map<java.lang.String, com.amazonaws.auth.profile.internal.Profile>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/auth/profile/internal/AbstractProfilesConfigFileScanner."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field newProfiles:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/HashSet
      19: dup
      20: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      23: putfield      #7                  // Field deletedProfiles:Ljava/util/Set;
      26: aload_0
      27: new           #8                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      34: putfield      #10                 // Field buffer:Ljava/lang/StringBuilder;
      37: aload_0
      38: new           #11                 // class java/util/HashMap
      41: dup
      42: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      45: putfield      #13                 // Field existingProfileProperties:Ljava/util/Map;
      48: aload_0
      49: aload_1
      50: putfield      #14                 // Field writer:Ljava/io/Writer;
      53: aload_2
      54: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      59: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      64: astore_3
      65: aload_3
      66: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          146
      74: aload_3
      75: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      80: checkcast     #19                 // class java/util/Map$Entry
      83: astore        4
      85: aload         4
      87: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      92: checkcast     #21                 // class java/lang/String
      95: astore        5
      97: aload         4
      99: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     104: checkcast     #23                 // class com/amazonaws/auth/profile/internal/Profile
     107: astore        6
     109: aload         6
     111: ifnonnull     129
     114: aload_0
     115: getfield      #7                  // Field deletedProfiles:Ljava/util/Set;
     118: aload         5
     120: invokeinterface #24,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     125: pop
     126: goto          143
     129: aload_0
     130: getfield      #4                  // Field newProfiles:Ljava/util/Map;
     133: aload         5
     135: aload         6
     137: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     142: pop
     143: goto          65
     146: return

  public void writeWithoutExistingContent();
    Code:
       0: aload_0
       1: getfield      #10                 // Field buffer:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #26                 // Method java/lang/StringBuilder.setLength:(I)V
       8: aload_0
       9: getfield      #13                 // Field existingProfileProperties:Ljava/util/Map;
      12: invokeinterface #27,  1           // InterfaceMethod java/util/Map.clear:()V
      17: aload_0
      18: new           #28                 // class java/util/Scanner
      21: dup
      22: ldc           #29                 // String
      24: invokespecial #30                 // Method java/util/Scanner."<init>":(Ljava/lang/String;)V
      27: invokevirtual #31                 // Method run:(Ljava/util/Scanner;)V
      30: return

  public void writeWithExistingContent(java.util.Scanner);
    Code:
       0: aload_0
       1: getfield      #10                 // Field buffer:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #26                 // Method java/lang/StringBuilder.setLength:(I)V
       8: aload_0
       9: getfield      #13                 // Field existingProfileProperties:Ljava/util/Map;
      12: invokeinterface #27,  1           // InterfaceMethod java/util/Map.clear:()V
      17: aload_0
      18: aload_1
      19: invokevirtual #31                 // Method run:(Ljava/util/Scanner;)V
      22: return

  protected void onEmptyOrCommentLine(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_0
       5: getfield      #7                  // Field deletedProfiles:Ljava/util/Set;
       8: aload_1
       9: invokeinterface #32,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      14: ifne          22
      17: aload_0
      18: aload_2
      19: invokespecial #33                 // Method buffer:(Ljava/lang/String;)V
      22: return

  protected void onProfileStartingLine(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field existingProfileProperties:Ljava/util/Map;
       4: aload_1
       5: new           #5                  // class java/util/HashSet
       8: dup
       9: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      12: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: aload_0
      19: invokespecial #34                 // Method flush:()V
      22: aload_0
      23: getfield      #7                  // Field deletedProfiles:Ljava/util/Set;
      26: aload_1
      27: invokeinterface #32,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      32: ifeq          36
      35: return
      36: aload_0
      37: getfield      #4                  // Field newProfiles:Ljava/util/Map;
      40: aload_1
      41: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: ifnull        99
      49: aload_0
      50: getfield      #4                  // Field newProfiles:Ljava/util/Map;
      53: aload_1
      54: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #23                 // class com/amazonaws/auth/profile/internal/Profile
      62: invokevirtual #36                 // Method com/amazonaws/auth/profile/internal/Profile.getProfileName:()Ljava/lang/String;
      65: astore_3
      66: aload_3
      67: aload_1
      68: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      71: ifne          99
      74: new           #8                  // class java/lang/StringBuilder
      77: dup
      78: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #38                 // String [
      83: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_3
      87: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #40                 // String ]
      92: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: astore_2
      99: aload_0
     100: aload_2
     101: invokespecial #42                 // Method writeLine:(Ljava/lang/String;)V
     104: return

  protected void onProfileEndingLine(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field newProfiles:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class com/amazonaws/auth/profile/internal/Profile
      13: astore_2
      14: aload_2
      15: ifnull        111
      18: aload_2
      19: invokevirtual #43                 // Method com/amazonaws/auth/profile/internal/Profile.getProperties:()Ljava/util/Map;
      22: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      27: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore_3
      33: aload_3
      34: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          111
      42: aload_3
      43: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #19                 // class java/util/Map$Entry
      51: astore        4
      53: aload         4
      55: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      60: checkcast     #21                 // class java/lang/String
      63: astore        5
      65: aload         4
      67: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      72: checkcast     #21                 // class java/lang/String
      75: astore        6
      77: aload_0
      78: getfield      #13                 // Field existingProfileProperties:Ljava/util/Map;
      81: aload_1
      82: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #44                 // class java/util/Set
      90: aload         5
      92: invokeinterface #32,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      97: ifne          108
     100: aload_0
     101: aload         5
     103: aload         6
     105: invokespecial #45                 // Method writeProperty:(Ljava/lang/String;Ljava/lang/String;)V
     108: goto          33
     111: aload_0
     112: invokespecial #34                 // Method flush:()V
     115: return

  protected void onProfileProperty(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field existingProfileProperties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnonnull     31
      13: aload_0
      14: getfield      #13                 // Field existingProfileProperties:Ljava/util/Map;
      17: aload_1
      18: new           #5                  // class java/util/HashSet
      21: dup
      22: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      25: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: getfield      #13                 // Field existingProfileProperties:Ljava/util/Map;
      35: aload_1
      36: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #44                 // class java/util/Set
      44: aload_2
      45: invokeinterface #24,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      50: pop
      51: aload_0
      52: getfield      #7                  // Field deletedProfiles:Ljava/util/Set;
      55: aload_1
      56: invokeinterface #32,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      61: ifeq          65
      64: return
      65: iload         4
      67: ifne          77
      70: aload_0
      71: aload         5
      73: invokespecial #42                 // Method writeLine:(Ljava/lang/String;)V
      76: return
      77: aload_0
      78: invokespecial #34                 // Method flush:()V
      81: aload_0
      82: getfield      #4                  // Field newProfiles:Ljava/util/Map;
      85: aload_1
      86: invokeinterface #46,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      91: ifeq          128
      94: aload_0
      95: getfield      #4                  // Field newProfiles:Ljava/util/Map;
      98: aload_1
      99: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #23                 // class com/amazonaws/auth/profile/internal/Profile
     107: aload_2
     108: invokevirtual #47                 // Method com/amazonaws/auth/profile/internal/Profile.getPropertyValue:(Ljava/lang/String;)Ljava/lang/String;
     111: astore        6
     113: aload         6
     115: ifnull        125
     118: aload_0
     119: aload_2
     120: aload         6
     122: invokespecial #45                 // Method writeProperty:(Ljava/lang/String;Ljava/lang/String;)V
     125: goto          134
     128: aload_0
     129: aload         5
     131: invokespecial #42                 // Method writeLine:(Ljava/lang/String;)V
     134: return

  protected void onEndOfFile();
    Code:
       0: aload_0
       1: getfield      #4                  // Field newProfiles:Ljava/util/Map;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          83
      24: aload_1
      25: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #19                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #21                 // class java/lang/String
      43: astore_3
      44: aload_2
      45: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: checkcast     #23                 // class com/amazonaws/auth/profile/internal/Profile
      53: astore        4
      55: aload_0
      56: getfield      #13                 // Field existingProfileProperties:Ljava/util/Map;
      59: aload_3
      60: invokeinterface #46,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      65: ifne          80
      68: aload_0
      69: aload         4
      71: invokespecial #48                 // Method writeProfile:(Lcom/amazonaws/auth/profile/internal/Profile;)V
      74: aload_0
      75: ldc           #29                 // String
      77: invokespecial #42                 // Method writeLine:(Ljava/lang/String;)V
      80: goto          15
      83: aload_0
      84: getfield      #14                 // Field writer:Ljava/io/Writer;
      87: invokevirtual #49                 // Method java/io/Writer.flush:()V
      90: goto          105
      93: astore_1
      94: new           #51                 // class com/amazonaws/AmazonClientException
      97: dup
      98: ldc           #52                 // String Unable to write to the target file to persist the profile credentials.
     100: aload_1
     101: invokespecial #53                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     104: athrow
     105: return
    Exception table:
       from    to  target type
          83    90    93   Class java/io/IOException

  protected boolean isSupportedProperty(java.lang.String);
    Code:
       0: ldc           #55                 // String aws_access_key_id
       2: aload_1
       3: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          63
       9: ldc           #56                 // String aws_secret_access_key
      11: aload_1
      12: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          63
      18: ldc           #57                 // String aws_session_token
      20: aload_1
      21: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifne          63
      27: ldc           #58                 // String external_id
      29: aload_1
      30: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifne          63
      36: ldc           #59                 // String role_arn
      38: aload_1
      39: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifne          63
      45: ldc           #60                 // String role_session_name
      47: aload_1
      48: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifne          63
      54: ldc           #61                 // String source_profile
      56: aload_1
      57: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  private void writeProfile(com.amazonaws.auth.profile.internal.Profile);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method com/amazonaws/auth/profile/internal/Profile.getProfileName:()Ljava/lang/String;
       5: invokespecial #62                 // Method writeProfileName:(Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #43                 // Method com/amazonaws/auth/profile/internal/Profile.getProperties:()Ljava/util/Map;
      12: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          67
      32: aload_2
      33: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #19                 // class java/util/Map$Entry
      41: astore_3
      42: aload_0
      43: aload_3
      44: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: checkcast     #21                 // class java/lang/String
      52: aload_3
      53: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: checkcast     #21                 // class java/lang/String
      61: invokespecial #45                 // Method writeProperty:(Ljava/lang/String;Ljava/lang/String;)V
      64: goto          23
      67: return

  private void writeProfileName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #63                 // String [%s]
       3: iconst_1
       4: anewarray     #64                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      14: invokespecial #42                 // Method writeLine:(Ljava/lang/String;)V
      17: return

  private void writeProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #66                 // String %s=%s
       3: iconst_2
       4: anewarray     #64                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_2
      14: aastore
      15: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      18: invokespecial #42                 // Method writeLine:(Ljava/lang/String;)V
      21: return

  private void writeLine(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #67                 // String %s%n
       3: iconst_1
       4: anewarray     #64                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      14: invokespecial #68                 // Method append:(Ljava/lang/String;)V
      17: return

  private void append(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field writer:Ljava/io/Writer;
       4: aload_1
       5: invokevirtual #69                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       8: pop
       9: goto          24
      12: astore_2
      13: new           #51                 // class com/amazonaws/AmazonClientException
      16: dup
      17: ldc           #52                 // String Unable to write to the target file to persist the profile credentials.
      19: aload_2
      20: invokespecial #53                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: athrow
      24: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException

  private void flush();
    Code:
       0: aload_0
       1: getfield      #10                 // Field buffer:Ljava/lang/StringBuilder;
       4: invokevirtual #70                 // Method java/lang/StringBuilder.length:()I
       7: ifeq          29
      10: aload_0
      11: aload_0
      12: getfield      #10                 // Field buffer:Ljava/lang/StringBuilder;
      15: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      18: invokespecial #68                 // Method append:(Ljava/lang/String;)V
      21: aload_0
      22: getfield      #10                 // Field buffer:Ljava/lang/StringBuilder;
      25: iconst_0
      26: invokevirtual #26                 // Method java/lang/StringBuilder.setLength:(I)V
      29: return

  private void buffer(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field buffer:Ljava/lang/StringBuilder;
       4: ldc           #67                 // String %s%n
       6: iconst_1
       7: anewarray     #64                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: pop
      21: return
}
