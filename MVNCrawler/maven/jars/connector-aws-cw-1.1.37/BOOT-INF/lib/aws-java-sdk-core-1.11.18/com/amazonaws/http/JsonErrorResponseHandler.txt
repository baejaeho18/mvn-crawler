Compiled from "JsonErrorResponseHandler.java"
public class com.amazonaws.http.JsonErrorResponseHandler implements com.amazonaws.http.HttpResponseHandler<com.amazonaws.AmazonServiceException> {
  private static final org.apache.commons.logging.Log LOG;

  private final java.util.List<com.amazonaws.transform.JsonErrorUnmarshaller> unmarshallers;

  private final com.amazonaws.internal.http.JsonErrorCodeParser errorCodeParser;

  private final com.amazonaws.internal.http.JsonErrorMessageParser errorMessageParser;

  private final com.fasterxml.jackson.core.JsonFactory jsonFactory;

  public com.amazonaws.http.JsonErrorResponseHandler(java.util.List<com.amazonaws.transform.JsonErrorUnmarshaller>, com.amazonaws.internal.http.JsonErrorCodeParser, com.amazonaws.internal.http.JsonErrorMessageParser, com.fasterxml.jackson.core.JsonFactory);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field unmarshallers:Ljava/util/List;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field errorCodeParser:Lcom/amazonaws/internal/http/JsonErrorCodeParser;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field errorMessageParser:Lcom/amazonaws/internal/http/JsonErrorMessageParser;
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field jsonFactory:Lcom/fasterxml/jackson/core/JsonFactory;
      25: return

  public boolean needsConnectionLeftOpen();
    Code:
       0: iconst_0
       1: ireturn

  public com.amazonaws.AmazonServiceException handle(com.amazonaws.http.HttpResponse) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field jsonFactory:Lcom/fasterxml/jackson/core/JsonFactory;
       5: invokestatic  #7                  // Method com/amazonaws/http/JsonErrorResponseHandler$JsonContent.createJsonContent:(Lcom/amazonaws/http/HttpResponse;Lcom/fasterxml/jackson/core/JsonFactory;)Lcom/amazonaws/http/JsonErrorResponseHandler$JsonContent;
       8: astore_2
       9: aload_0
      10: getfield      #4                  // Field errorCodeParser:Lcom/amazonaws/internal/http/JsonErrorCodeParser;
      13: aload_1
      14: invokevirtual #8                  // Method com/amazonaws/http/HttpResponse.getHeaders:()Ljava/util/Map;
      17: aload_2
      18: getfield      #9                  // Field com/amazonaws/http/JsonErrorResponseHandler$JsonContent.jsonNode:Lcom/fasterxml/jackson/databind/JsonNode;
      21: invokevirtual #10                 // Method com/amazonaws/internal/http/JsonErrorCodeParser.parseErrorCode:(Ljava/util/Map;Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/lang/String;
      24: astore_3
      25: aload_0
      26: aload_3
      27: aload_2
      28: invokespecial #11                 // Method createException:(Ljava/lang/String;Lcom/amazonaws/http/JsonErrorResponseHandler$JsonContent;)Lcom/amazonaws/AmazonServiceException;
      31: astore        4
      33: aload         4
      35: invokevirtual #12                 // Method com/amazonaws/AmazonServiceException.getErrorMessage:()Ljava/lang/String;
      38: ifnonnull     57
      41: aload         4
      43: aload_0
      44: getfield      #5                  // Field errorMessageParser:Lcom/amazonaws/internal/http/JsonErrorMessageParser;
      47: aload_2
      48: getfield      #9                  // Field com/amazonaws/http/JsonErrorResponseHandler$JsonContent.jsonNode:Lcom/fasterxml/jackson/databind/JsonNode;
      51: invokevirtual #13                 // Method com/amazonaws/internal/http/JsonErrorMessageParser.parseErrorMessage:(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/lang/String;
      54: invokevirtual #14                 // Method com/amazonaws/AmazonServiceException.setErrorMessage:(Ljava/lang/String;)V
      57: aload         4
      59: aload_3
      60: invokevirtual #15                 // Method com/amazonaws/AmazonServiceException.setErrorCode:(Ljava/lang/String;)V
      63: aload         4
      65: aload_1
      66: invokevirtual #16                 // Method com/amazonaws/http/HttpResponse.getRequest:()Lcom/amazonaws/Request;
      69: invokeinterface #17,  1           // InterfaceMethod com/amazonaws/Request.getServiceName:()Ljava/lang/String;
      74: invokevirtual #18                 // Method com/amazonaws/AmazonServiceException.setServiceName:(Ljava/lang/String;)V
      77: aload         4
      79: aload_1
      80: invokevirtual #19                 // Method com/amazonaws/http/HttpResponse.getStatusCode:()I
      83: invokevirtual #20                 // Method com/amazonaws/AmazonServiceException.setStatusCode:(I)V
      86: aload         4
      88: aload_0
      89: aload_1
      90: invokevirtual #19                 // Method com/amazonaws/http/HttpResponse.getStatusCode:()I
      93: invokespecial #21                 // Method getErrorTypeFromStatusCode:(I)Lcom/amazonaws/AmazonServiceException$ErrorType;
      96: invokevirtual #22                 // Method com/amazonaws/AmazonServiceException.setErrorType:(Lcom/amazonaws/AmazonServiceException$ErrorType;)V
      99: aload         4
     101: aload_2
     102: getfield      #23                 // Field com/amazonaws/http/JsonErrorResponseHandler$JsonContent.rawContent:[B
     105: invokevirtual #24                 // Method com/amazonaws/AmazonServiceException.setRawResponse:([B)V
     108: aload_0
     109: aload_1
     110: invokevirtual #8                  // Method com/amazonaws/http/HttpResponse.getHeaders:()Ljava/util/Map;
     113: invokespecial #25                 // Method getRequestIdFromHeaders:(Ljava/util/Map;)Ljava/lang/String;
     116: astore        5
     118: aload         5
     120: ifnull        130
     123: aload         4
     125: aload         5
     127: invokevirtual #26                 // Method com/amazonaws/AmazonServiceException.setRequestId:(Ljava/lang/String;)V
     130: aload         4
     132: aload_1
     133: invokevirtual #8                  // Method com/amazonaws/http/HttpResponse.getHeaders:()Ljava/util/Map;
     136: invokevirtual #27                 // Method com/amazonaws/AmazonServiceException.setHttpHeaders:(Ljava/util/Map;)V
     139: aload         4
     141: areturn

  private com.amazonaws.AmazonServiceException createException(java.lang.String, com.amazonaws.http.JsonErrorResponseHandler$JsonContent);
    Code:
       0: aload_2
       1: invokevirtual #28                 // Method com/amazonaws/http/JsonErrorResponseHandler$JsonContent.isJsonValid:()Z
       4: ifne          17
       7: new           #29                 // class com/amazonaws/AmazonServiceException
      10: dup
      11: ldc           #30                 // String Unable to parse HTTP response content
      13: invokespecial #31                 // Method com/amazonaws/AmazonServiceException."<init>":(Ljava/lang/String;)V
      16: areturn
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokespecial #32                 // Method unmarshallException:(Ljava/lang/String;Lcom/amazonaws/http/JsonErrorResponseHandler$JsonContent;)Lcom/amazonaws/AmazonServiceException;
      23: astore_3
      24: aload_3
      25: ifnonnull     38
      28: new           #29                 // class com/amazonaws/AmazonServiceException
      31: dup
      32: ldc           #33                 // String Unable to unmarshall exception response with the unmarshallers provided
      34: invokespecial #31                 // Method com/amazonaws/AmazonServiceException."<init>":(Ljava/lang/String;)V
      37: astore_3
      38: aload_3
      39: areturn

  private com.amazonaws.AmazonServiceException unmarshallException(java.lang.String, com.amazonaws.http.JsonErrorResponseHandler$JsonContent);
    Code:
       0: aload_0
       1: getfield      #3                  // Field unmarshallers:Ljava/util/List;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          68
      19: aload_3
      20: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #37                 // class com/amazonaws/transform/JsonErrorUnmarshaller
      28: astore        4
      30: aload         4
      32: aload_1
      33: invokevirtual #38                 // Method com/amazonaws/transform/JsonErrorUnmarshaller.matchErrorCode:(Ljava/lang/String;)Z
      36: ifeq          65
      39: aload         4
      41: aload_2
      42: getfield      #9                  // Field com/amazonaws/http/JsonErrorResponseHandler$JsonContent.jsonNode:Lcom/fasterxml/jackson/databind/JsonNode;
      45: invokevirtual #39                 // Method com/amazonaws/transform/JsonErrorUnmarshaller.unmarshall:(Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/amazonaws/AmazonServiceException;
      48: areturn
      49: astore        5
      51: getstatic     #1                  // Field LOG:Lorg/apache/commons/logging/Log;
      54: ldc           #41                 // String Unable to unmarshall exception content
      56: aload         5
      58: invokeinterface #42,  3           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      63: aconst_null
      64: areturn
      65: goto          10
      68: aconst_null
      69: areturn
    Exception table:
       from    to  target type
          39    48    49   Class java/lang/Exception

  private com.amazonaws.AmazonServiceException$ErrorType getErrorTypeFromStatusCode(int);
    Code:
       0: iload_1
       1: sipush        500
       4: if_icmpge     13
       7: getstatic     #43                 // Field com/amazonaws/AmazonServiceException$ErrorType.Client:Lcom/amazonaws/AmazonServiceException$ErrorType;
      10: goto          16
      13: getstatic     #44                 // Field com/amazonaws/AmazonServiceException$ErrorType.Service:Lcom/amazonaws/AmazonServiceException$ErrorType;
      16: areturn

  private java.lang.String getRequestIdFromHeaders(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #45,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #46,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          61
      21: aload_2
      22: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #47                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      37: checkcast     #49                 // class java/lang/String
      40: ldc           #51                 // String x-amzn-RequestId
      42: invokevirtual #52                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      45: ifeq          58
      48: aload_3
      49: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      54: checkcast     #49                 // class java/lang/String
      57: areturn
      58: goto          12
      61: aconst_null
      62: areturn

  public java.lang.Object handle(com.amazonaws.http.HttpResponse) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method handle:(Lcom/amazonaws/http/HttpResponse;)Lcom/amazonaws/AmazonServiceException;
       5: areturn

  static org.apache.commons.logging.Log access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/apache/commons/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #55                 // class com/amazonaws/http/JsonErrorResponseHandler
       2: invokestatic  #56                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #1                  // Field LOG:Lorg/apache/commons/logging/Log;
       8: return
}
