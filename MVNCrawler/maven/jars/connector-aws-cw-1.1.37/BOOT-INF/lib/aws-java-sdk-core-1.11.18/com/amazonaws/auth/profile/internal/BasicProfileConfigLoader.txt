Compiled from "BasicProfileConfigLoader.java"
public class com.amazonaws.auth.profile.internal.BasicProfileConfigLoader {
  private static final org.apache.commons.logging.Log LOG;

  public static final com.amazonaws.auth.profile.internal.BasicProfileConfigLoader INSTANCE;

  private com.amazonaws.auth.profile.internal.BasicProfileConfigLoader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.amazonaws.auth.profile.internal.AllProfiles loadProfiles(java.io.File);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String Unable to load AWS profiles: specified file is null.
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #5                  // Method java/io/File.exists:()Z
      18: ifeq          28
      21: aload_1
      22: invokevirtual #6                  // Method java/io/File.isFile:()Z
      25: ifne          58
      28: new           #2                  // class java/lang/IllegalArgumentException
      31: dup
      32: new           #7                  // class java/lang/StringBuilder
      35: dup
      36: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #9                  // String AWS credential profiles file not found in the given path:
      41: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #11                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      48: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aconst_null
      59: astore_2
      60: new           #13                 // class java/io/FileInputStream
      63: dup
      64: aload_1
      65: invokespecial #14                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      68: astore_2
      69: aload_0
      70: aload_2
      71: invokespecial #15                 // Method loadProfiles:(Ljava/io/InputStream;)Lcom/amazonaws/auth/profile/internal/AllProfiles;
      74: astore_3
      75: aload_2
      76: ifnull        88
      79: aload_2
      80: invokevirtual #16                 // Method java/io/FileInputStream.close:()V
      83: goto          88
      86: astore        4
      88: aload_3
      89: areturn
      90: astore_3
      91: new           #18                 // class com/amazonaws/AmazonClientException
      94: dup
      95: new           #7                  // class java/lang/StringBuilder
      98: dup
      99: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #19                 // String Unable to load AWS credential profiles file at:
     104: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_1
     108: invokevirtual #11                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     111: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: aload_3
     118: invokespecial #20                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     121: athrow
     122: astore        5
     124: aload_2
     125: ifnull        137
     128: aload_2
     129: invokevirtual #16                 // Method java/io/FileInputStream.close:()V
     132: goto          137
     135: astore        6
     137: aload         5
     139: athrow
    Exception table:
       from    to  target type
          79    83    86   Class java/io/IOException
          60    75    90   Class java/io/IOException
          60    75   122   any
         128   132   135   Class java/io/IOException
          90   124   122   any

  private com.amazonaws.auth.profile.internal.AllProfiles loadProfiles(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #21                 // class com/amazonaws/auth/profile/internal/BasicProfileConfigLoader$ProfilesConfigFileLoaderHelper
       3: dup
       4: aconst_null
       5: invokespecial #22                 // Method com/amazonaws/auth/profile/internal/BasicProfileConfigLoader$ProfilesConfigFileLoaderHelper."<init>":(Lcom/amazonaws/auth/profile/internal/BasicProfileConfigLoader$1;)V
       8: astore_2
       9: aload_2
      10: new           #23                 // class java/util/Scanner
      13: dup
      14: aload_1
      15: getstatic     #24                 // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      18: invokevirtual #25                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      21: invokespecial #26                 // Method java/util/Scanner."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      24: invokevirtual #27                 // Method com/amazonaws/auth/profile/internal/BasicProfileConfigLoader$ProfilesConfigFileLoaderHelper.parseProfileProperties:(Ljava/util/Scanner;)Ljava/util/Map;
      27: astore_3
      28: new           #28                 // class java/util/LinkedHashMap
      31: dup
      32: invokespecial #29                 // Method java/util/LinkedHashMap."<init>":()V
      35: astore        4
      37: aload_3
      38: invokeinterface #30,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      43: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      48: astore        5
      50: aload         5
      52: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          148
      60: aload         5
      62: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #34                 // class java/util/Map$Entry
      70: astore        6
      72: aload         6
      74: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      79: checkcast     #36                 // class java/lang/String
      82: astore        7
      84: aload         6
      86: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      91: checkcast     #38                 // class java/util/Map
      94: astore        8
      96: aload         7
      98: ldc           #39                 // String profile
     100: invokevirtual #40                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     103: ifeq          116
     106: getstatic     #41                 // Field LOG:Lorg/apache/commons/logging/Log;
     109: ldc           #42                 // String The legacy profile format requires the \'profile \' prefix before the profile name. The latest code does not require such prefix, and will consider it as part of the profile name. Please remove the prefix if you are seeing this warning.
     111: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     116: aload_0
     117: aload         7
     119: ldc           #44                 // String Unable to load properties from profile: Profile name is empty.
     121: invokespecial #45                 // Method assertParameterNotEmpty:(Ljava/lang/String;Ljava/lang/String;)V
     124: aload         4
     126: aload         7
     128: new           #46                 // class com/amazonaws/auth/profile/internal/BasicProfile
     131: dup
     132: aload         7
     134: aload         8
     136: invokespecial #47                 // Method com/amazonaws/auth/profile/internal/BasicProfile."<init>":(Ljava/lang/String;Ljava/util/Map;)V
     139: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     144: pop
     145: goto          50
     148: new           #49                 // class com/amazonaws/auth/profile/internal/AllProfiles
     151: dup
     152: aload         4
     154: invokespecial #50                 // Method com/amazonaws/auth/profile/internal/AllProfiles."<init>":(Ljava/util/Map;)V
     157: areturn

  private void assertParameterNotEmpty(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #51                 // Method com/amazonaws/util/StringUtils.isNullOrEmpty:(Ljava/lang/String;)Z
       4: ifeq          16
       7: new           #18                 // class com/amazonaws/AmazonClientException
      10: dup
      11: aload_2
      12: invokespecial #52                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: return

  static {};
    Code:
       0: ldc           #53                 // class com/amazonaws/auth/profile/internal/BasicProfileConfigLoader
       2: invokestatic  #54                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #41                 // Field LOG:Lorg/apache/commons/logging/Log;
       8: new           #53                 // class com/amazonaws/auth/profile/internal/BasicProfileConfigLoader
      11: dup
      12: invokespecial #55                 // Method "<init>":()V
      15: putstatic     #56                 // Field INSTANCE:Lcom/amazonaws/auth/profile/internal/BasicProfileConfigLoader;
      18: return
}
