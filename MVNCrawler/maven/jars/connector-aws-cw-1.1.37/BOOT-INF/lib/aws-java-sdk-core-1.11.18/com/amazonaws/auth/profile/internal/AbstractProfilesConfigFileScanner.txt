Compiled from "AbstractProfilesConfigFileScanner.java"
public abstract class com.amazonaws.auth.profile.internal.AbstractProfilesConfigFileScanner {
  public com.amazonaws.auth.profile.internal.AbstractProfilesConfigFileScanner();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected abstract void onEmptyOrCommentLine(java.lang.String, java.lang.String);

  protected abstract void onProfileStartingLine(java.lang.String, java.lang.String);

  protected abstract void onProfileEndingLine(java.lang.String);

  protected abstract void onEndOfFile();

  protected abstract void onProfileProperty(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String);

  protected boolean isSupportedProperty(java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  protected void run(java.util.Scanner);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: invokevirtual #2                  // Method java/util/Scanner.hasNextLine:()Z
       6: ifeq          167
       9: aload_1
      10: invokevirtual #3                  // Method java/util/Scanner.nextLine:()Ljava/lang/String;
      13: invokevirtual #4                  // Method java/lang/String.trim:()Ljava/lang/String;
      16: astore_3
      17: aload_3
      18: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
      21: ifne          33
      24: aload_3
      25: ldc           #6                  // String #
      27: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      30: ifeq          42
      33: aload_0
      34: aload_2
      35: aload_3
      36: invokevirtual #8                  // Method onEmptyOrCommentLine:(Ljava/lang/String;Ljava/lang/String;)V
      39: goto          2
      42: aload_3
      43: invokestatic  #9                  // Method parseProfileName:(Ljava/lang/String;)Ljava/lang/String;
      46: astore        4
      48: aload         4
      50: ifnull        57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: istore        5
      60: iload         5
      62: ifeq          87
      65: aload_2
      66: ifnull        74
      69: aload_0
      70: aload_2
      71: invokevirtual #10                 // Method onProfileEndingLine:(Ljava/lang/String;)V
      74: aload_0
      75: aload         4
      77: aload_3
      78: invokevirtual #11                 // Method onProfileStartingLine:(Ljava/lang/String;Ljava/lang/String;)V
      81: aload         4
      83: astore_2
      84: goto          164
      87: aload_3
      88: invokestatic  #12                 // Method parsePropertyLine:(Ljava/lang/String;)Ljava/util/Map$Entry;
      91: astore        6
      93: aload_2
      94: ifnonnull     124
      97: new           #13                 // class java/lang/IllegalArgumentException
     100: dup
     101: new           #14                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #16                 // String Property is defined without a preceding profile name. Current line:
     110: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_3
     114: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: aload_0
     125: aload_2
     126: aload         6
     128: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     133: checkcast     #21                 // class java/lang/String
     136: aload         6
     138: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     143: checkcast     #21                 // class java/lang/String
     146: aload_0
     147: aload         6
     149: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     154: checkcast     #21                 // class java/lang/String
     157: invokevirtual #23                 // Method isSupportedProperty:(Ljava/lang/String;)Z
     160: aload_3
     161: invokevirtual #24                 // Method onProfileProperty:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
     164: goto          2
     167: aload_2
     168: ifnull        176
     171: aload_0
     172: aload_2
     173: invokevirtual #10                 // Method onProfileEndingLine:(Ljava/lang/String;)V
     176: aload_0
     177: invokevirtual #25                 // Method onEndOfFile:()V
     180: aload_1
     181: invokevirtual #26                 // Method java/util/Scanner.close:()V
     184: goto          196
     187: astore        7
     189: aload_1
     190: invokevirtual #26                 // Method java/util/Scanner.close:()V
     193: aload         7
     195: athrow
     196: return
    Exception table:
       from    to  target type
           2   180   187   any
         187   189   187   any

  private static java.lang.String parseProfileName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #27                 // String [
       3: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          35
       9: aload_0
      10: ldc           #28                 // String ]
      12: invokevirtual #29                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      15: ifeq          35
      18: aload_0
      19: iconst_1
      20: aload_0
      21: invokevirtual #30                 // Method java/lang/String.length:()I
      24: iconst_1
      25: isub
      26: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      29: astore_1
      30: aload_1
      31: invokevirtual #4                  // Method java/lang/String.trim:()Ljava/lang/String;
      34: areturn
      35: aconst_null
      36: areturn

  private static java.util.Map$Entry<java.lang.String, java.lang.String> parsePropertyLine(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #32                 // String =
       3: iconst_2
       4: invokevirtual #33                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: arraylength
      10: iconst_2
      11: if_icmpeq     46
      14: new           #13                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #14                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #34                 // String Invalid property format: no \'=\' character is found in the line [
      27: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #35                 // String ].
      36: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_1
      47: iconst_0
      48: aaload
      49: invokevirtual #4                  // Method java/lang/String.trim:()Ljava/lang/String;
      52: astore_2
      53: aload_1
      54: iconst_1
      55: aaload
      56: invokevirtual #4                  // Method java/lang/String.trim:()Ljava/lang/String;
      59: astore_3
      60: new           #36                 // class java/util/AbstractMap$SimpleImmutableEntry
      63: dup
      64: aload_2
      65: aload_3
      66: invokespecial #37                 // Method java/util/AbstractMap$SimpleImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      69: areturn
}
