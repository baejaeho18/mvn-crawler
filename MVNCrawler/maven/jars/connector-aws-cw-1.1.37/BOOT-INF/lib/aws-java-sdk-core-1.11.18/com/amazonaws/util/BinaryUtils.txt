Compiled from "BinaryUtils.java"
public class com.amazonaws.util.BinaryUtils {
  public com.amazonaws.util.BinaryUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String toHex(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/amazonaws/util/Base16Lower.encodeAsString:([B)Ljava/lang/String;
       4: areturn

  public static byte[] fromHex(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/amazonaws/util/Base16Lower.decode:(Ljava/lang/String;)[B
       4: areturn

  public static java.lang.String toBase64(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/amazonaws/util/Base64.encodeAsString:([B)Ljava/lang/String;
       4: areturn

  public static byte[] fromBase64(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_0
       9: invokestatic  #5                  // Method com/amazonaws/util/Base64.decode:(Ljava/lang/String;)[B
      12: areturn

  public static java.io.ByteArrayInputStream toStream(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     15
       4: new           #6                  // class java/io/ByteArrayInputStream
       7: dup
       8: iconst_0
       9: newarray       byte
      11: invokespecial #7                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      14: areturn
      15: new           #6                  // class java/io/ByteArrayInputStream
      18: dup
      19: aload_0
      20: invokestatic  #8                  // Method copyBytesFrom:(Ljava/nio/ByteBuffer;)[B
      23: invokespecial #7                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      26: areturn

  public static byte[] copyAllBytesFrom(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #9                  // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          34
      13: aload_0
      14: invokevirtual #10                 // Method java/nio/ByteBuffer.array:()[B
      17: aload_0
      18: invokevirtual #11                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: aload_0
      22: invokevirtual #11                 // Method java/nio/ByteBuffer.arrayOffset:()I
      25: aload_0
      26: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      29: iadd
      30: invokestatic  #13                 // Method java/util/Arrays.copyOfRange:([BII)[B
      33: areturn
      34: aload_0
      35: invokevirtual #14                 // Method java/nio/ByteBuffer.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;
      38: astore_1
      39: aload_1
      40: invokevirtual #15                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      43: pop
      44: aload_1
      45: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      48: newarray       byte
      50: astore_2
      51: aload_1
      52: aload_2
      53: invokevirtual #17                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      56: pop
      57: aload_2
      58: areturn

  public static byte[] copyBytesFrom(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #9                  // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          39
      13: aload_0
      14: invokevirtual #10                 // Method java/nio/ByteBuffer.array:()[B
      17: aload_0
      18: invokevirtual #11                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: aload_0
      22: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
      25: iadd
      26: aload_0
      27: invokevirtual #11                 // Method java/nio/ByteBuffer.arrayOffset:()I
      30: aload_0
      31: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      34: iadd
      35: invokestatic  #13                 // Method java/util/Arrays.copyOfRange:([BII)[B
      38: areturn
      39: aload_0
      40: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      43: newarray       byte
      45: astore_1
      46: aload_0
      47: invokevirtual #14                 // Method java/nio/ByteBuffer.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;
      50: aload_1
      51: invokevirtual #17                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      54: pop
      55: aload_1
      56: areturn
}
