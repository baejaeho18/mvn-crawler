Compiled from "AbstractAWSSigner.java"
public abstract class com.amazonaws.auth.AbstractAWSSigner implements com.amazonaws.auth.Signer {
  public static final java.lang.String EMPTY_STRING_SHA256_HEX;

  public com.amazonaws.auth.AbstractAWSSigner();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected java.lang.String signAndBase64Encode(java.lang.String, java.lang.String, com.amazonaws.auth.SigningAlgorithm) throws com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
       5: invokevirtual #3                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: aload_2
       9: aload_3
      10: invokevirtual #4                  // Method signAndBase64Encode:([BLjava/lang/String;Lcom/amazonaws/auth/SigningAlgorithm;)Ljava/lang/String;
      13: areturn

  protected java.lang.String signAndBase64Encode(byte[], java.lang.String, com.amazonaws.auth.SigningAlgorithm) throws com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #2                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
       6: invokevirtual #3                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       9: aload_3
      10: invokevirtual #5                  // Method sign:([B[BLcom/amazonaws/auth/SigningAlgorithm;)[B
      13: astore        4
      15: aload         4
      17: invokestatic  #6                  // Method com/amazonaws/util/Base64.encodeAsString:([B)Ljava/lang/String;
      20: areturn
      21: astore        4
      23: new           #8                  // class com/amazonaws/AmazonClientException
      26: dup
      27: new           #9                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #11                 // String Unable to calculate a request signature:
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload         4
      41: invokevirtual #13                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: aload         4
      52: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
    Exception table:
       from    to  target type
           0    20    21   Class java/lang/Exception

  public byte[] sign(java.lang.String, byte[], com.amazonaws.auth.SigningAlgorithm) throws com.amazonaws.AmazonClientException;
    Code:
       0: aload_1
       1: getstatic     #2                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
       4: invokevirtual #3                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       7: astore        4
       9: aload_0
      10: aload         4
      12: aload_2
      13: aload_3
      14: invokevirtual #5                  // Method sign:([B[BLcom/amazonaws/auth/SigningAlgorithm;)[B
      17: areturn
      18: astore        4
      20: new           #8                  // class com/amazonaws/AmazonClientException
      23: dup
      24: new           #9                  // class java/lang/StringBuilder
      27: dup
      28: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #11                 // String Unable to calculate a request signature:
      33: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload         4
      38: invokevirtual #13                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      41: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: aload         4
      49: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      52: athrow
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/Exception

  public byte[] signWithMac(java.lang.String, javax.crypto.Mac);
    Code:
       0: aload_2
       1: aload_1
       2: getstatic     #2                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
       5: invokevirtual #3                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: invokevirtual #16                 // Method javax/crypto/Mac.doFinal:([B)[B
      11: areturn
      12: astore_3
      13: new           #8                  // class com/amazonaws/AmazonClientException
      16: dup
      17: new           #9                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #11                 // String Unable to calculate a request signature:
      26: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_3
      30: invokevirtual #13                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      33: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: aload_3
      40: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/Exception

  protected byte[] sign(byte[], byte[], com.amazonaws.auth.SigningAlgorithm) throws com.amazonaws.AmazonClientException;
    Code:
       0: aload_3
       1: invokevirtual #17                 // Method com/amazonaws/auth/SigningAlgorithm.toString:()Ljava/lang/String;
       4: invokestatic  #18                 // Method javax/crypto/Mac.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;
       7: astore        4
       9: aload         4
      11: new           #19                 // class javax/crypto/spec/SecretKeySpec
      14: dup
      15: aload_2
      16: aload_3
      17: invokevirtual #17                 // Method com/amazonaws/auth/SigningAlgorithm.toString:()Ljava/lang/String;
      20: invokespecial #20                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      23: invokevirtual #21                 // Method javax/crypto/Mac.init:(Ljava/security/Key;)V
      26: aload         4
      28: aload_1
      29: invokevirtual #16                 // Method javax/crypto/Mac.doFinal:([B)[B
      32: areturn
      33: astore        4
      35: new           #8                  // class com/amazonaws/AmazonClientException
      38: dup
      39: new           #9                  // class java/lang/StringBuilder
      42: dup
      43: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #11                 // String Unable to calculate a request signature:
      48: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload         4
      53: invokevirtual #13                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      56: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: aload         4
      64: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: athrow
    Exception table:
       from    to  target type
           0    32    33   Class java/lang/Exception

  public byte[] hash(java.lang.String) throws com.amazonaws.AmazonClientException;
    Code:
       0: aload_1
       1: invokestatic  #22                 // Method doHash:(Ljava/lang/String;)[B
       4: areturn

  private static byte[] doHash(java.lang.String) throws com.amazonaws.AmazonClientException;
    Code:
       0: ldc           #23                 // String SHA-256
       2: invokestatic  #24                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       5: astore_1
       6: aload_1
       7: aload_0
       8: getstatic     #2                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      11: invokevirtual #3                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      14: invokevirtual #25                 // Method java/security/MessageDigest.update:([B)V
      17: aload_1
      18: invokevirtual #26                 // Method java/security/MessageDigest.digest:()[B
      21: areturn
      22: astore_1
      23: new           #8                  // class com/amazonaws/AmazonClientException
      26: dup
      27: new           #9                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #27                 // String Unable to compute hash while signing request:
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #13                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      43: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: aload_1
      50: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: athrow
    Exception table:
       from    to  target type
           0    21    22   Class java/lang/Exception

  protected byte[] hash(java.io.InputStream) throws com.amazonaws.AmazonClientException;
    Code:
       0: ldc           #23                 // String SHA-256
       2: invokestatic  #24                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       5: astore_2
       6: new           #28                 // class com/amazonaws/internal/SdkDigestInputStream
       9: dup
      10: aload_1
      11: aload_2
      12: invokespecial #29                 // Method com/amazonaws/internal/SdkDigestInputStream."<init>":(Ljava/io/InputStream;Ljava/security/MessageDigest;)V
      15: astore_3
      16: sipush        1024
      19: newarray       byte
      21: astore        4
      23: aload_3
      24: aload         4
      26: invokevirtual #30                 // Method java/security/DigestInputStream.read:([B)I
      29: iconst_m1
      30: if_icmple     36
      33: goto          23
      36: aload_3
      37: invokevirtual #31                 // Method java/security/DigestInputStream.getMessageDigest:()Ljava/security/MessageDigest;
      40: invokevirtual #26                 // Method java/security/MessageDigest.digest:()[B
      43: areturn
      44: astore_2
      45: new           #8                  // class com/amazonaws/AmazonClientException
      48: dup
      49: new           #9                  // class java/lang/StringBuilder
      52: dup
      53: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #27                 // String Unable to compute hash while signing request:
      58: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #13                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      65: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: aload_2
      72: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: athrow
    Exception table:
       from    to  target type
           0    43    44   Class java/lang/Exception

  public byte[] hash(byte[]) throws com.amazonaws.AmazonClientException;
    Code:
       0: ldc           #23                 // String SHA-256
       2: invokestatic  #24                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       5: astore_2
       6: aload_2
       7: aload_1
       8: invokevirtual #25                 // Method java/security/MessageDigest.update:([B)V
      11: aload_2
      12: invokevirtual #26                 // Method java/security/MessageDigest.digest:()[B
      15: areturn
      16: astore_2
      17: new           #8                  // class com/amazonaws/AmazonClientException
      20: dup
      21: new           #9                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #27                 // String Unable to compute hash while signing request:
      30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #13                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      37: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: aload_2
      44: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/Exception

  protected java.lang.String getCanonicalizedQueryString(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: new           #32                 // class java/util/TreeMap
       3: dup
       4: invokespecial #33                 // Method java/util/TreeMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #34,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          151
      29: aload_3
      30: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #38                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #40                 // class java/lang/String
      50: iconst_0
      51: invokestatic  #41                 // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      54: astore        5
      56: aload         4
      58: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: checkcast     #43                 // class java/util/List
      66: astore        6
      68: new           #44                 // class java/util/ArrayList
      71: dup
      72: aload         6
      74: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      79: invokespecial #46                 // Method java/util/ArrayList."<init>":(I)V
      82: astore        7
      84: aload         6
      86: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      91: astore        8
      93: aload         8
      95: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          132
     103: aload         8
     105: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: checkcast     #40                 // class java/lang/String
     113: astore        9
     115: aload         7
     117: aload         9
     119: iconst_0
     120: invokestatic  #41                 // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
     123: invokeinterface #48,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     128: pop
     129: goto          93
     132: aload         7
     134: invokestatic  #49                 // Method java/util/Collections.sort:(Ljava/util/List;)V
     137: aload_2
     138: aload         5
     140: aload         7
     142: invokeinterface #50,  3           // InterfaceMethod java/util/SortedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     147: pop
     148: goto          20
     151: new           #9                  // class java/lang/StringBuilder
     154: dup
     155: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     158: astore_3
     159: aload_2
     160: invokeinterface #51,  1           // InterfaceMethod java/util/SortedMap.entrySet:()Ljava/util/Set;
     165: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     170: astore        4
     172: aload         4
     174: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     179: ifeq          278
     182: aload         4
     184: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     189: checkcast     #38                 // class java/util/Map$Entry
     192: astore        5
     194: aload         5
     196: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     201: checkcast     #43                 // class java/util/List
     204: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     209: astore        6
     211: aload         6
     213: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     218: ifeq          275
     221: aload         6
     223: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     228: checkcast     #40                 // class java/lang/String
     231: astore        7
     233: aload_3
     234: invokevirtual #52                 // Method java/lang/StringBuilder.length:()I
     237: ifle          247
     240: aload_3
     241: ldc           #53                 // String &
     243: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: pop
     247: aload_3
     248: aload         5
     250: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     255: checkcast     #40                 // class java/lang/String
     258: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: ldc           #54                 // String =
     263: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     266: aload         7
     268: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: pop
     272: goto          211
     275: goto          172
     278: aload_3
     279: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     282: areturn

  protected java.lang.String getCanonicalizedQueryString(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/amazonaws/util/SdkHttpUtils.usePayloadForQueryParameters:(Lcom/amazonaws/SignableRequest;)Z
       4: ifeq          10
       7: ldc           #56                 // String
       9: areturn
      10: aload_0
      11: aload_1
      12: invokeinterface #57,  1           // InterfaceMethod com/amazonaws/SignableRequest.getParameters:()Ljava/util/Map;
      17: invokevirtual #58                 // Method getCanonicalizedQueryString:(Ljava/util/Map;)Ljava/lang/String;
      20: areturn

  protected byte[] getBinaryRequestPayload(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/amazonaws/util/SdkHttpUtils.usePayloadForQueryParameters:(Lcom/amazonaws/SignableRequest;)Z
       4: ifeq          28
       7: aload_1
       8: invokestatic  #59                 // Method com/amazonaws/util/SdkHttpUtils.encodeParameters:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: iconst_0
      17: newarray       byte
      19: areturn
      20: aload_2
      21: getstatic     #2                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      24: invokevirtual #3                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      27: areturn
      28: aload_0
      29: aload_1
      30: invokevirtual #60                 // Method getBinaryRequestPayloadWithoutQueryParams:(Lcom/amazonaws/SignableRequest;)[B
      33: areturn

  protected java.lang.String getRequestPayload(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #61                 // Method getBinaryRequestPayload:(Lcom/amazonaws/SignableRequest;)[B
       6: invokevirtual #62                 // Method newString:([B)Ljava/lang/String;
       9: areturn

  protected java.lang.String getRequestPayloadWithoutQueryParams(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #60                 // Method getBinaryRequestPayloadWithoutQueryParams:(Lcom/amazonaws/SignableRequest;)[B
       6: invokevirtual #62                 // Method newString:([B)Ljava/lang/String;
       9: areturn

  protected byte[] getBinaryRequestPayloadWithoutQueryParams(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method getBinaryRequestPayloadStreamWithoutQueryParams:(Lcom/amazonaws/SignableRequest;)Ljava/io/InputStream;
       5: astore_2
       6: aload_1
       7: invokeinterface #64,  1           // InterfaceMethod com/amazonaws/SignableRequest.getReadLimitInfo:()Lcom/amazonaws/ReadLimitInfo;
      12: astore_3
      13: aload_2
      14: aload_3
      15: ifnonnull     22
      18: iconst_m1
      19: goto          28
      22: aload_3
      23: invokeinterface #65,  1           // InterfaceMethod com/amazonaws/ReadLimitInfo.getReadLimit:()I
      28: invokevirtual #66                 // Method java/io/InputStream.mark:(I)V
      31: new           #67                 // class java/io/ByteArrayOutputStream
      34: dup
      35: invokespecial #68                 // Method java/io/ByteArrayOutputStream."<init>":()V
      38: astore        4
      40: sipush        5120
      43: newarray       byte
      45: astore        5
      47: aload_2
      48: aload         5
      50: invokevirtual #69                 // Method java/io/InputStream.read:([B)I
      53: istore        6
      55: iload         6
      57: iconst_m1
      58: if_icmpne     64
      61: goto          77
      64: aload         4
      66: aload         5
      68: iconst_0
      69: iload         6
      71: invokevirtual #70                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      74: goto          47
      77: aload         4
      79: invokevirtual #71                 // Method java/io/ByteArrayOutputStream.close:()V
      82: aload_2
      83: invokevirtual #72                 // Method java/io/InputStream.reset:()V
      86: aload         4
      88: invokevirtual #73                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      91: areturn
      92: astore_3
      93: new           #8                  // class com/amazonaws/AmazonClientException
      96: dup
      97: new           #9                  // class java/lang/StringBuilder
     100: dup
     101: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #74                 // String Unable to read request payload to sign request:
     106: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_3
     110: invokevirtual #13                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     113: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: aload_3
     120: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     123: athrow
    Exception table:
       from    to  target type
           6    91    92   Class java/lang/Exception

  protected java.io.InputStream getBinaryRequestPayloadStream(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/amazonaws/util/SdkHttpUtils.usePayloadForQueryParameters:(Lcom/amazonaws/SignableRequest;)Z
       4: ifeq          42
       7: aload_1
       8: invokestatic  #59                 // Method com/amazonaws/util/SdkHttpUtils.encodeParameters:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
      11: astore_2
      12: aload_2
      13: ifnonnull     27
      16: new           #75                 // class java/io/ByteArrayInputStream
      19: dup
      20: iconst_0
      21: newarray       byte
      23: invokespecial #76                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      26: areturn
      27: new           #75                 // class java/io/ByteArrayInputStream
      30: dup
      31: aload_2
      32: getstatic     #2                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      35: invokevirtual #3                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      38: invokespecial #76                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      41: areturn
      42: aload_0
      43: aload_1
      44: invokevirtual #63                 // Method getBinaryRequestPayloadStreamWithoutQueryParams:(Lcom/amazonaws/SignableRequest;)Ljava/io/InputStream;
      47: areturn

  protected java.io.InputStream getBinaryRequestPayloadStreamWithoutQueryParams(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_1
       1: invokeinterface #77,  1           // InterfaceMethod com/amazonaws/SignableRequest.getContentUnwrapped:()Ljava/io/InputStream;
       6: astore_2
       7: aload_2
       8: ifnonnull     22
      11: new           #75                 // class java/io/ByteArrayInputStream
      14: dup
      15: iconst_0
      16: newarray       byte
      18: invokespecial #76                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      21: areturn
      22: aload_2
      23: invokevirtual #78                 // Method java/io/InputStream.markSupported:()Z
      26: ifne          39
      29: new           #8                  // class com/amazonaws/AmazonClientException
      32: dup
      33: ldc           #79                 // String Unable to read request payload to sign request.
      35: invokespecial #80                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_2
      40: areturn
      41: astore_2
      42: aload_2
      43: athrow
      44: astore_2
      45: new           #8                  // class com/amazonaws/AmazonClientException
      48: dup
      49: new           #9                  // class java/lang/StringBuilder
      52: dup
      53: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #74                 // String Unable to read request payload to sign request:
      58: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #13                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      65: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: aload_2
      72: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: athrow
    Exception table:
       from    to  target type
           0    21    41   Class com/amazonaws/AmazonClientException
          22    40    41   Class com/amazonaws/AmazonClientException
           0    21    44   Class java/lang/Exception
          22    40    44   Class java/lang/Exception

  protected java.lang.String getCanonicalizedResourcePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #81                 // Method getCanonicalizedResourcePath:(Ljava/lang/String;Z)Ljava/lang/String;
       6: areturn

  protected java.lang.String getCanonicalizedResourcePath(java.lang.String, boolean);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #82                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          14
      11: ldc           #83                 // String /
      13: areturn
      14: iload_2
      15: ifeq          26
      18: aload_1
      19: iconst_1
      20: invokestatic  #41                 // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      23: goto          27
      26: aload_1
      27: astore_3
      28: aload_3
      29: ldc           #83                 // String /
      31: invokevirtual #84                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      34: ifeq          39
      37: aload_3
      38: areturn
      39: ldc           #83                 // String /
      41: aload_3
      42: invokevirtual #85                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      45: areturn

  protected java.lang.String getCanonicalizedEndpoint(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #86                 // Method java/net/URI.getHost:()Ljava/lang/String;
       4: invokestatic  #87                 // Method com/amazonaws/util/StringUtils.lowerCase:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_2
       8: aload_1
       9: invokestatic  #88                 // Method com/amazonaws/util/SdkHttpUtils.isUsingNonDefaultPort:(Ljava/net/URI;)Z
      12: ifeq          42
      15: new           #9                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      22: aload_2
      23: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #89                 // String :
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #90                 // Method java/net/URI.getPort:()I
      35: invokevirtual #91                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: astore_2
      42: aload_2
      43: areturn

  protected com.amazonaws.auth.AWSCredentials sanitizeCredentials(com.amazonaws.auth.AWSCredentials);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aconst_null
       5: astore        4
       7: aload_1
       8: dup
       9: astore        5
      11: monitorenter
      12: aload_1
      13: invokeinterface #92,  1           // InterfaceMethod com/amazonaws/auth/AWSCredentials.getAWSAccessKeyId:()Ljava/lang/String;
      18: astore_2
      19: aload_1
      20: invokeinterface #93,  1           // InterfaceMethod com/amazonaws/auth/AWSCredentials.getAWSSecretKey:()Ljava/lang/String;
      25: astore_3
      26: aload_1
      27: instanceof    #94                 // class com/amazonaws/auth/AWSSessionCredentials
      30: ifeq          44
      33: aload_1
      34: checkcast     #94                 // class com/amazonaws/auth/AWSSessionCredentials
      37: invokeinterface #95,  1           // InterfaceMethod com/amazonaws/auth/AWSSessionCredentials.getSessionToken:()Ljava/lang/String;
      42: astore        4
      44: aload         5
      46: monitorexit
      47: goto          58
      50: astore        6
      52: aload         5
      54: monitorexit
      55: aload         6
      57: athrow
      58: aload_3
      59: ifnull        67
      62: aload_3
      63: invokevirtual #96                 // Method java/lang/String.trim:()Ljava/lang/String;
      66: astore_3
      67: aload_2
      68: ifnull        76
      71: aload_2
      72: invokevirtual #96                 // Method java/lang/String.trim:()Ljava/lang/String;
      75: astore_2
      76: aload         4
      78: ifnull        88
      81: aload         4
      83: invokevirtual #96                 // Method java/lang/String.trim:()Ljava/lang/String;
      86: astore        4
      88: aload_1
      89: instanceof    #94                 // class com/amazonaws/auth/AWSSessionCredentials
      92: ifeq          107
      95: new           #97                 // class com/amazonaws/auth/BasicSessionCredentials
      98: dup
      99: aload_2
     100: aload_3
     101: aload         4
     103: invokespecial #98                 // Method com/amazonaws/auth/BasicSessionCredentials."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     106: areturn
     107: new           #99                 // class com/amazonaws/auth/BasicAWSCredentials
     110: dup
     111: aload_2
     112: aload_3
     113: invokespecial #100                // Method com/amazonaws/auth/BasicAWSCredentials."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     116: areturn
    Exception table:
       from    to  target type
          12    47    50   any
          50    55    50   any

  protected java.lang.String newString(byte[]);
    Code:
       0: new           #40                 // class java/lang/String
       3: dup
       4: aload_1
       5: getstatic     #2                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
       8: invokespecial #101                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      11: areturn

  protected java.util.Date getSignatureDate(int);
    Code:
       0: new           #102                // class java/util/Date
       3: dup
       4: invokestatic  #103                // Method java/lang/System.currentTimeMillis:()J
       7: iload_1
       8: sipush        1000
      11: imul
      12: i2l
      13: lsub
      14: invokespecial #104                // Method java/util/Date."<init>":(J)V
      17: areturn

  protected int getTimeOffset(com.amazonaws.SignableRequest<?>);
    Code:
       0: invokestatic  #105                // Method com/amazonaws/SDKGlobalTime.getGlobalTimeOffset:()I
       3: istore_2
       4: iload_2
       5: ifne          17
       8: aload_1
       9: invokeinterface #106,  1          // InterfaceMethod com/amazonaws/SignableRequest.getTimeOffset:()I
      14: goto          18
      17: iload_2
      18: ireturn

  protected abstract void addSessionCredentials(com.amazonaws.SignableRequest<?>, com.amazonaws.auth.AWSSessionCredentials);

  static {};
    Code:
       0: ldc           #56                 // String
       2: invokestatic  #22                 // Method doHash:(Ljava/lang/String;)[B
       5: invokestatic  #107                // Method com/amazonaws/util/BinaryUtils.toHex:([B)Ljava/lang/String;
       8: putstatic     #108                // Field EMPTY_STRING_SHA256_HEX:Ljava/lang/String;
      11: return
}
