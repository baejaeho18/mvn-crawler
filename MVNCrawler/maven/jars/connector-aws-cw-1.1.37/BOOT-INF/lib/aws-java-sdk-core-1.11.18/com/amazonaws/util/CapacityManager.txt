Compiled from "CapacityManager.java"
public class com.amazonaws.util.CapacityManager {
  private volatile int availableCapacity;

  private final int maxCapacity;

  private final java.lang.Object lock;

  public com.amazonaws.util.CapacityManager(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #1                  // Method java/lang/Object."<init>":()V
      12: putfield      #3                  // Field lock:Ljava/lang/Object;
      15: aload_0
      16: iload_1
      17: putfield      #4                  // Field maxCapacity:I
      20: aload_0
      21: iload_1
      22: putfield      #5                  // Field availableCapacity:I
      25: return

  public boolean acquire();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #6                  // Method acquire:(I)Z
       5: ireturn

  public boolean acquire(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String capacity to acquire cannot be negative
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field availableCapacity:I
      18: ifge          23
      21: iconst_1
      22: ireturn
      23: aload_0
      24: getfield      #3                  // Field lock:Ljava/lang/Object;
      27: dup
      28: astore_2
      29: monitorenter
      30: aload_0
      31: getfield      #5                  // Field availableCapacity:I
      34: iload_1
      35: isub
      36: iflt          53
      39: aload_0
      40: dup
      41: getfield      #5                  // Field availableCapacity:I
      44: iload_1
      45: isub
      46: putfield      #5                  // Field availableCapacity:I
      49: iconst_1
      50: aload_2
      51: monitorexit
      52: ireturn
      53: iconst_0
      54: aload_2
      55: monitorexit
      56: ireturn
      57: astore_3
      58: aload_2
      59: monitorexit
      60: aload_3
      61: athrow
    Exception table:
       from    to  target type
          30    52    57   any
          53    56    57   any
          57    60    57   any

  public void release();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #10                 // Method release:(I)V
       5: return

  public void release(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #11                 // String capacity to release cannot be negative
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field availableCapacity:I
      18: iflt          66
      21: aload_0
      22: getfield      #5                  // Field availableCapacity:I
      25: aload_0
      26: getfield      #4                  // Field maxCapacity:I
      29: if_icmpeq     66
      32: aload_0
      33: getfield      #3                  // Field lock:Ljava/lang/Object;
      36: dup
      37: astore_2
      38: monitorenter
      39: aload_0
      40: aload_0
      41: getfield      #5                  // Field availableCapacity:I
      44: iload_1
      45: iadd
      46: aload_0
      47: getfield      #4                  // Field maxCapacity:I
      50: invokestatic  #12                 // Method java/lang/Math.min:(II)I
      53: putfield      #5                  // Field availableCapacity:I
      56: aload_2
      57: monitorexit
      58: goto          66
      61: astore_3
      62: aload_2
      63: monitorexit
      64: aload_3
      65: athrow
      66: return
    Exception table:
       from    to  target type
          39    58    61   any
          61    64    61   any

  public int consumedCapacity();
    Code:
       0: aload_0
       1: getfield      #5                  // Field availableCapacity:I
       4: ifge          11
       7: iconst_0
       8: goto          20
      11: aload_0
      12: getfield      #4                  // Field maxCapacity:I
      15: aload_0
      16: getfield      #5                  // Field availableCapacity:I
      19: isub
      20: ireturn

  public int availableCapacity();
    Code:
       0: aload_0
       1: getfield      #5                  // Field availableCapacity:I
       4: ireturn
}
