Compiled from "BasicNameValuePair.java"
class com.amazonaws.util.BasicNameValuePair implements com.amazonaws.util.NameValuePair,java.lang.Cloneable,java.io.Serializable {
  private static final long serialVersionUID;

  public static final int HASH_SEED;

  public static final int HASH_OFFSET;

  private final java.lang.String name;

  private final java.lang.String value;

  com.amazonaws.util.BasicNameValuePair(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Name must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field name:Ljava/lang/String;
      23: aload_0
      24: aload_2
      25: putfield      #6                  // Field value:Ljava/lang/String;
      28: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field value:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field value:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: getfield      #5                  // Field name:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field name:Ljava/lang/String;
      16: invokevirtual #7                  // Method java/lang/String.length:()I
      19: iconst_1
      20: iadd
      21: aload_0
      22: getfield      #6                  // Field value:Ljava/lang/String;
      25: invokevirtual #7                  // Method java/lang/String.length:()I
      28: iadd
      29: istore_1
      30: new           #8                  // class java/lang/StringBuilder
      33: dup
      34: iload_1
      35: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(I)V
      38: astore_2
      39: aload_2
      40: aload_0
      41: getfield      #5                  // Field name:Ljava/lang/String;
      44: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_2
      49: ldc           #11                 // String =
      51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_2
      56: aload_0
      57: getfield      #6                  // Field value:Ljava/lang/String;
      60: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: pop
      64: aload_2
      65: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class com/amazonaws/util/NameValuePair
      11: ifeq          53
      14: aload_1
      15: checkcast     #14                 // class com/amazonaws/util/BasicNameValuePair
      18: astore_2
      19: aload_0
      20: getfield      #5                  // Field name:Ljava/lang/String;
      23: aload_2
      24: getfield      #5                  // Field name:Ljava/lang/String;
      27: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          51
      33: aload_0
      34: getfield      #6                  // Field value:Ljava/lang/String;
      37: aload_2
      38: getfield      #6                  // Field value:Ljava/lang/String;
      41: invokestatic  #16                 // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn
      53: iconst_0
      54: ireturn

  private static boolean equals(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     16
       4: aload_1
       5: ifnonnull     12
       8: iconst_1
       9: goto          21
      12: iconst_0
      13: goto          21
      16: aload_0
      17: aload_1
      18: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: aload_0
       5: getfield      #5                  // Field name:Ljava/lang/String;
       8: invokestatic  #18                 // Method hashCode:(ILjava/lang/Object;)I
      11: istore_1
      12: iload_1
      13: aload_0
      14: getfield      #6                  // Field value:Ljava/lang/String;
      17: invokestatic  #18                 // Method hashCode:(ILjava/lang/Object;)I
      20: istore_1
      21: iload_1
      22: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  private static int hashCode(int, java.lang.Object);
    Code:
       0: iload_0
       1: aload_1
       2: ifnull        12
       5: aload_1
       6: invokevirtual #20                 // Method java/lang/Object.hashCode:()I
       9: goto          13
      12: iconst_0
      13: invokestatic  #21                 // Method hashCode:(II)I
      16: ireturn

  private static int hashCode(int, int);
    Code:
       0: iload_0
       1: bipush        37
       3: imul
       4: iload_1
       5: iadd
       6: ireturn
}
