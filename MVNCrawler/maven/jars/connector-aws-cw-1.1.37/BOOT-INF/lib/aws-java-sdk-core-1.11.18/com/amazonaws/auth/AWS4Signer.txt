Compiled from "AWS4Signer.java"
public class com.amazonaws.auth.AWS4Signer extends com.amazonaws.auth.AbstractAWSSigner implements com.amazonaws.auth.ServiceAwareSigner,com.amazonaws.auth.RegionAwareSigner,com.amazonaws.auth.Presigner {
  protected static final com.amazonaws.log.InternalLogApi log;

  private static final int SIGNER_CACHE_MAX_SIZE;

  private static final com.amazonaws.internal.FIFOCache<com.amazonaws.auth.internal.SignerKey> signerCache;

  private static final java.util.List<java.lang.String> listOfHeadersToIgnoreInLowerCase;

  protected java.lang.String serviceName;

  protected java.lang.String regionName;

  protected java.util.Date overriddenDate;

  protected boolean doubleUrlEncode;

  public com.amazonaws.auth.AWS4Signer();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #2                  // Method "<init>":(Z)V
       5: return

  public com.amazonaws.auth.AWS4Signer(boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/amazonaws/auth/AbstractAWSSigner."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #4                  // Field doubleUrlEncode:Z
       9: return

  public void setServiceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field serviceName:Ljava/lang/String;
       5: return

  public void setRegionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field regionName:Ljava/lang/String;
       5: return

  void setOverrideDate(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field overriddenDate:Ljava/util/Date;
       5: return

  public java.lang.String getRegionName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field regionName:Ljava/lang/String;
       4: areturn

  public java.lang.String getServiceName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field serviceName:Ljava/lang/String;
       4: areturn

  public java.util.Date getOverriddenDate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field overriddenDate:Ljava/util/Date;
       4: ifnonnull     11
       7: aconst_null
       8: goto          25
      11: new           #8                  // class java/util/Date
      14: dup
      15: aload_0
      16: getfield      #7                  // Field overriddenDate:Ljava/util/Date;
      19: invokevirtual #9                  // Method java/util/Date.getTime:()J
      22: invokespecial #10                 // Method java/util/Date."<init>":(J)V
      25: areturn

  public void sign(com.amazonaws.SignableRequest<?>, com.amazonaws.auth.AWSCredentials);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #11                 // Method isAnonymous:(Lcom/amazonaws/auth/AWSCredentials;)Z
       5: ifeq          9
       8: return
       9: aload_0
      10: aload_2
      11: invokevirtual #12                 // Method sanitizeCredentials:(Lcom/amazonaws/auth/AWSCredentials;)Lcom/amazonaws/auth/AWSCredentials;
      14: astore_3
      15: aload_3
      16: instanceof    #13                 // class com/amazonaws/auth/AWSSessionCredentials
      19: ifeq          31
      22: aload_0
      23: aload_1
      24: aload_3
      25: checkcast     #13                 // class com/amazonaws/auth/AWSSessionCredentials
      28: invokevirtual #14                 // Method addSessionCredentials:(Lcom/amazonaws/SignableRequest;Lcom/amazonaws/auth/AWSSessionCredentials;)V
      31: new           #15                 // class com/amazonaws/auth/internal/AWS4SignerRequestParams
      34: dup
      35: aload_1
      36: aload_0
      37: getfield      #7                  // Field overriddenDate:Ljava/util/Date;
      40: aload_0
      41: getfield      #6                  // Field regionName:Ljava/lang/String;
      44: aload_0
      45: getfield      #5                  // Field serviceName:Ljava/lang/String;
      48: ldc           #16                 // String AWS4-HMAC-SHA256
      50: invokespecial #17                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams."<init>":(Lcom/amazonaws/SignableRequest;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      53: astore        4
      55: aload_0
      56: aload_1
      57: invokevirtual #18                 // Method addHostHeader:(Lcom/amazonaws/SignableRequest;)V
      60: aload_1
      61: ldc           #19                 // String X-Amz-Date
      63: aload         4
      65: invokevirtual #20                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getFormattedSigningDateTime:()Ljava/lang/String;
      68: invokeinterface #21,  3           // InterfaceMethod com/amazonaws/SignableRequest.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      73: aload_0
      74: aload_1
      75: invokevirtual #22                 // Method calculateContentHash:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
      78: astore        5
      80: ldc           #23                 // String required
      82: aload_1
      83: invokeinterface #24,  1           // InterfaceMethod com/amazonaws/SignableRequest.getHeaders:()Ljava/util/Map;
      88: ldc           #25                 // String x-amz-content-sha256
      90: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      95: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      98: ifeq          111
     101: aload_1
     102: ldc           #25                 // String x-amz-content-sha256
     104: aload         5
     106: invokeinterface #21,  3           // InterfaceMethod com/amazonaws/SignableRequest.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     111: aload_0
     112: aload_1
     113: aload         5
     115: invokevirtual #28                 // Method createCanonicalRequest:(Lcom/amazonaws/SignableRequest;Ljava/lang/String;)Ljava/lang/String;
     118: astore        6
     120: aload_0
     121: aload         6
     123: aload         4
     125: invokevirtual #29                 // Method createStringToSign:(Ljava/lang/String;Lcom/amazonaws/auth/internal/AWS4SignerRequestParams;)Ljava/lang/String;
     128: astore        7
     130: aload_0
     131: aload_3
     132: aload         4
     134: invokespecial #30                 // Method deriveSigningKey:(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/auth/internal/AWS4SignerRequestParams;)[B
     137: astore        8
     139: aload_0
     140: aload         7
     142: aload         8
     144: aload         4
     146: invokevirtual #31                 // Method computeSignature:(Ljava/lang/String;[BLcom/amazonaws/auth/internal/AWS4SignerRequestParams;)[B
     149: astore        9
     151: aload_1
     152: ldc           #32                 // String Authorization
     154: aload_0
     155: aload_1
     156: aload         9
     158: aload_3
     159: aload         4
     161: invokespecial #33                 // Method buildAuthorizationHeader:(Lcom/amazonaws/SignableRequest;[BLcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/auth/internal/AWS4SignerRequestParams;)Ljava/lang/String;
     164: invokeinterface #21,  3           // InterfaceMethod com/amazonaws/SignableRequest.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     169: aload_0
     170: aload_1
     171: aload         9
     173: aload         8
     175: aload         4
     177: invokevirtual #34                 // Method processRequestPayload:(Lcom/amazonaws/SignableRequest;[B[BLcom/amazonaws/auth/internal/AWS4SignerRequestParams;)V
     180: return

  public void presignRequest(com.amazonaws.SignableRequest<?>, com.amazonaws.auth.AWSCredentials, java.util.Date);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #11                 // Method isAnonymous:(Lcom/amazonaws/auth/AWSCredentials;)Z
       5: ifeq          9
       8: return
       9: aload_0
      10: aload_3
      11: invokespecial #35                 // Method generateExpirationDate:(Ljava/util/Date;)J
      14: lstore        4
      16: aload_0
      17: aload_1
      18: invokevirtual #18                 // Method addHostHeader:(Lcom/amazonaws/SignableRequest;)V
      21: aload_0
      22: aload_2
      23: invokevirtual #12                 // Method sanitizeCredentials:(Lcom/amazonaws/auth/AWSCredentials;)Lcom/amazonaws/auth/AWSCredentials;
      26: astore        6
      28: aload         6
      30: instanceof    #13                 // class com/amazonaws/auth/AWSSessionCredentials
      33: ifeq          54
      36: aload_1
      37: ldc           #36                 // String X-Amz-Security-Token
      39: aload         6
      41: checkcast     #13                 // class com/amazonaws/auth/AWSSessionCredentials
      44: invokeinterface #37,  1           // InterfaceMethod com/amazonaws/auth/AWSSessionCredentials.getSessionToken:()Ljava/lang/String;
      49: invokeinterface #38,  3           // InterfaceMethod com/amazonaws/SignableRequest.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      54: new           #15                 // class com/amazonaws/auth/internal/AWS4SignerRequestParams
      57: dup
      58: aload_1
      59: aload_0
      60: getfield      #7                  // Field overriddenDate:Ljava/util/Date;
      63: aload_0
      64: getfield      #6                  // Field regionName:Ljava/lang/String;
      67: aload_0
      68: getfield      #5                  // Field serviceName:Ljava/lang/String;
      71: ldc           #16                 // String AWS4-HMAC-SHA256
      73: invokespecial #17                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams."<init>":(Lcom/amazonaws/SignableRequest;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      76: astore        7
      78: aload         7
      80: invokevirtual #20                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getFormattedSigningDateTime:()Ljava/lang/String;
      83: astore        8
      85: aload_0
      86: aload_1
      87: aload         6
      89: aload         7
      91: aload         8
      93: lload         4
      95: invokespecial #39                 // Method addPreSignInformationToRequest:(Lcom/amazonaws/SignableRequest;Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/auth/internal/AWS4SignerRequestParams;Ljava/lang/String;J)V
      98: aload_0
      99: aload_1
     100: invokevirtual #40                 // Method calculateContentHashPresign:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
     103: astore        9
     105: aload_0
     106: aload_1
     107: aload         9
     109: invokevirtual #28                 // Method createCanonicalRequest:(Lcom/amazonaws/SignableRequest;Ljava/lang/String;)Ljava/lang/String;
     112: astore        10
     114: aload_0
     115: aload         10
     117: aload         7
     119: invokevirtual #29                 // Method createStringToSign:(Ljava/lang/String;Lcom/amazonaws/auth/internal/AWS4SignerRequestParams;)Ljava/lang/String;
     122: astore        11
     124: aload_0
     125: aload         6
     127: aload         7
     129: invokespecial #30                 // Method deriveSigningKey:(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/auth/internal/AWS4SignerRequestParams;)[B
     132: astore        12
     134: aload_0
     135: aload         11
     137: aload         12
     139: aload         7
     141: invokevirtual #31                 // Method computeSignature:(Ljava/lang/String;[BLcom/amazonaws/auth/internal/AWS4SignerRequestParams;)[B
     144: astore        13
     146: aload_1
     147: ldc           #41                 // String X-Amz-Signature
     149: aload         13
     151: invokestatic  #42                 // Method com/amazonaws/util/BinaryUtils.toHex:([B)Ljava/lang/String;
     154: invokeinterface #38,  3           // InterfaceMethod com/amazonaws/SignableRequest.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     159: return

  protected java.lang.String createCanonicalRequest(com.amazonaws.SignableRequest<?>, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #43,  1           // InterfaceMethod com/amazonaws/SignableRequest.getEndpoint:()Ljava/net/URI;
       6: invokevirtual #44                 // Method java/net/URI.getPath:()Ljava/lang/String;
       9: aload_1
      10: invokeinterface #45,  1           // InterfaceMethod com/amazonaws/SignableRequest.getResourcePath:()Ljava/lang/String;
      15: invokestatic  #46                 // Method com/amazonaws/util/SdkHttpUtils.appendUri:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: astore_3
      19: new           #47                 // class java/lang/StringBuilder
      22: dup
      23: aload_1
      24: invokeinterface #48,  1           // InterfaceMethod com/amazonaws/SignableRequest.getHttpMethod:()Lcom/amazonaws/http/HttpMethodName;
      29: invokevirtual #49                 // Method com/amazonaws/http/HttpMethodName.toString:()Ljava/lang/String;
      32: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      35: astore        4
      37: aload         4
      39: ldc           #51                 // String \n
      41: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: aload_3
      46: aload_0
      47: getfield      #4                  // Field doubleUrlEncode:Z
      50: invokevirtual #53                 // Method getCanonicalizedResourcePath:(Ljava/lang/String;Z)Ljava/lang/String;
      53: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #51                 // String \n
      58: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: aload_1
      63: invokevirtual #54                 // Method getCanonicalizedQueryString:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
      66: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #51                 // String \n
      71: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: aload_1
      76: invokevirtual #55                 // Method getCanonicalizedHeaderString:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
      79: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #51                 // String \n
      84: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: aload_1
      89: invokevirtual #56                 // Method getSignedHeadersString:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
      92: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: ldc           #51                 // String \n
      97: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_2
     101: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: pop
     105: aload         4
     107: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: astore        5
     112: getstatic     #58                 // Field log:Lcom/amazonaws/log/InternalLogApi;
     115: invokeinterface #59,  1           // InterfaceMethod com/amazonaws/log/InternalLogApi.isDebugEnabled:()Z
     120: ifeq          156
     123: getstatic     #58                 // Field log:Lcom/amazonaws/log/InternalLogApi;
     126: new           #47                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #61                 // String AWS4 Canonical Request: \'\"
     135: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload         5
     140: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: ldc           #62                 // String \"
     145: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: invokeinterface #63,  2           // InterfaceMethod com/amazonaws/log/InternalLogApi.debug:(Ljava/lang/Object;)V
     156: aload         5
     158: areturn

  protected java.lang.String createStringToSign(java.lang.String, com.amazonaws.auth.internal.AWS4SignerRequestParams);
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: aload_2
       5: invokevirtual #64                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getSigningAlgorithm:()Ljava/lang/String;
       8: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      11: astore_3
      12: aload_3
      13: ldc           #51                 // String \n
      15: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_2
      19: invokevirtual #20                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getFormattedSigningDateTime:()Ljava/lang/String;
      22: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #51                 // String \n
      27: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #65                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getScope:()Ljava/lang/String;
      34: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #51                 // String \n
      39: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: aload_1
      44: invokevirtual #66                 // Method hash:(Ljava/lang/String;)[B
      47: invokestatic  #42                 // Method com/amazonaws/util/BinaryUtils.toHex:([B)Ljava/lang/String;
      50: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_3
      55: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: astore        4
      60: getstatic     #58                 // Field log:Lcom/amazonaws/log/InternalLogApi;
      63: invokeinterface #59,  1           // InterfaceMethod com/amazonaws/log/InternalLogApi.isDebugEnabled:()Z
      68: ifeq          104
      71: getstatic     #58                 // Field log:Lcom/amazonaws/log/InternalLogApi;
      74: new           #47                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #67                 // String AWS4 String to Sign: \'\"
      83: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload         4
      88: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #62                 // String \"
      93: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokeinterface #63,  2           // InterfaceMethod com/amazonaws/log/InternalLogApi.debug:(Ljava/lang/Object;)V
     104: aload         4
     106: areturn

  private final byte[] deriveSigningKey(com.amazonaws.auth.AWSCredentials, com.amazonaws.auth.internal.AWS4SignerRequestParams);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #68                 // Method computeSigningCacheKeyName:(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/auth/internal/AWS4SignerRequestParams;)Ljava/lang/String;
       6: astore_3
       7: aload_2
       8: invokevirtual #69                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getSigningDateTimeMilli:()J
      11: invokestatic  #70                 // Method com/amazonaws/util/DateUtils.numberOfDaysSinceEpoch:(J)J
      14: lstore        4
      16: getstatic     #71                 // Field signerCache:Lcom/amazonaws/internal/FIFOCache;
      19: aload_3
      20: invokevirtual #72                 // Method com/amazonaws/internal/FIFOCache.get:(Ljava/lang/String;)Ljava/lang/Object;
      23: checkcast     #73                 // class com/amazonaws/auth/internal/SignerKey
      26: astore        6
      28: aload         6
      30: ifnull        50
      33: lload         4
      35: aload         6
      37: invokevirtual #74                 // Method com/amazonaws/auth/internal/SignerKey.getNumberOfDaysSinceEpoch:()J
      40: lcmp
      41: ifne          50
      44: aload         6
      46: invokevirtual #75                 // Method com/amazonaws/auth/internal/SignerKey.getSigningKey:()[B
      49: areturn
      50: getstatic     #58                 // Field log:Lcom/amazonaws/log/InternalLogApi;
      53: invokeinterface #59,  1           // InterfaceMethod com/amazonaws/log/InternalLogApi.isDebugEnabled:()Z
      58: ifeq          95
      61: getstatic     #58                 // Field log:Lcom/amazonaws/log/InternalLogApi;
      64: new           #47                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #76                 // String Generating a new signing key as the signing key not available in the cache for the date
      73: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: getstatic     #77                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      79: lload         4
      81: invokevirtual #78                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      84: invokevirtual #79                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      87: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokeinterface #63,  2           // InterfaceMethod com/amazonaws/log/InternalLogApi.debug:(Ljava/lang/Object;)V
      95: aload_0
      96: aload_1
      97: aload_2
      98: invokevirtual #80                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getFormattedSigningDate:()Ljava/lang/String;
     101: aload_2
     102: invokevirtual #81                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getRegionName:()Ljava/lang/String;
     105: aload_2
     106: invokevirtual #82                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getServiceName:()Ljava/lang/String;
     109: invokespecial #83                 // Method newSigningKey:(Lcom/amazonaws/auth/AWSCredentials;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[B
     112: astore        7
     114: getstatic     #71                 // Field signerCache:Lcom/amazonaws/internal/FIFOCache;
     117: aload_3
     118: new           #73                 // class com/amazonaws/auth/internal/SignerKey
     121: dup
     122: lload         4
     124: aload         7
     126: invokespecial #84                 // Method com/amazonaws/auth/internal/SignerKey."<init>":(J[B)V
     129: invokevirtual #85                 // Method com/amazonaws/internal/FIFOCache.add:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: aload         7
     135: areturn

  private final java.lang.String computeSigningCacheKeyName(com.amazonaws.auth.AWSCredentials, com.amazonaws.auth.internal.AWS4SignerRequestParams);
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: aload_1
       5: invokeinterface #86,  1           // InterfaceMethod com/amazonaws/auth/AWSCredentials.getAWSSecretKey:()Ljava/lang/String;
      10: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      13: astore_3
      14: aload_3
      15: ldc           #87                 // String -
      17: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_2
      21: invokevirtual #81                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getRegionName:()Ljava/lang/String;
      24: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #87                 // String -
      29: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_2
      33: invokevirtual #82                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getServiceName:()Ljava/lang/String;
      36: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn

  protected final byte[] computeSignature(java.lang.String, byte[], com.amazonaws.auth.internal.AWS4SignerRequestParams);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #88                 // String UTF-8
       4: invokestatic  #89                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       7: invokevirtual #90                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      10: aload_2
      11: getstatic     #91                 // Field com/amazonaws/auth/SigningAlgorithm.HmacSHA256:Lcom/amazonaws/auth/SigningAlgorithm;
      14: invokevirtual #92                 // Method sign:([B[BLcom/amazonaws/auth/SigningAlgorithm;)[B
      17: areturn

  private java.lang.String buildAuthorizationHeader(com.amazonaws.SignableRequest<?>, byte[], com.amazonaws.auth.AWSCredentials, com.amazonaws.auth.internal.AWS4SignerRequestParams);
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_3
       8: invokeinterface #93,  1           // InterfaceMethod com/amazonaws/auth/AWSCredentials.getAWSAccessKeyId:()Ljava/lang/String;
      13: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #94                 // String /
      18: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload         4
      23: invokevirtual #65                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getScope:()Ljava/lang/String;
      26: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: astore        5
      34: new           #47                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #95                 // String Credential=
      43: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload         5
      48: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: astore        6
      56: new           #47                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #96                 // String SignedHeaders=
      65: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: aload_1
      70: invokevirtual #56                 // Method getSignedHeadersString:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
      73: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: astore        7
      81: new           #47                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #97                 // String Signature=
      90: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_2
      94: invokestatic  #42                 // Method com/amazonaws/util/BinaryUtils.toHex:([B)Ljava/lang/String;
      97: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: astore        8
     105: new           #47                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     112: astore        9
     114: aload         9
     116: ldc           #16                 // String AWS4-HMAC-SHA256
     118: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: ldc           #98                 // String
     123: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         6
     128: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #99                 // String ,
     133: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload         7
     138: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #99                 // String ,
     143: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload         8
     148: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: pop
     152: aload         9
     154: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: areturn

  private void addPreSignInformationToRequest(com.amazonaws.SignableRequest<?>, com.amazonaws.auth.AWSCredentials, com.amazonaws.auth.internal.AWS4SignerRequestParams, java.lang.String, long);
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_2
       8: invokeinterface #93,  1           // InterfaceMethod com/amazonaws/auth/AWSCredentials.getAWSAccessKeyId:()Ljava/lang/String;
      13: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #94                 // String /
      18: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_3
      22: invokevirtual #65                 // Method com/amazonaws/auth/internal/AWS4SignerRequestParams.getScope:()Ljava/lang/String;
      25: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: astore        7
      33: aload_1
      34: ldc           #100                // String X-Amz-Algorithm
      36: ldc           #16                 // String AWS4-HMAC-SHA256
      38: invokeinterface #38,  3           // InterfaceMethod com/amazonaws/SignableRequest.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      43: aload_1
      44: ldc           #19                 // String X-Amz-Date
      46: aload         4
      48: invokeinterface #38,  3           // InterfaceMethod com/amazonaws/SignableRequest.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      53: aload_1
      54: ldc           #101                // String X-Amz-SignedHeaders
      56: aload_0
      57: aload_1
      58: invokevirtual #56                 // Method getSignedHeadersString:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
      61: invokeinterface #38,  3           // InterfaceMethod com/amazonaws/SignableRequest.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      66: aload_1
      67: ldc           #102                // String X-Amz-Expires
      69: lload         5
      71: invokestatic  #103                // Method java/lang/Long.toString:(J)Ljava/lang/String;
      74: invokeinterface #38,  3           // InterfaceMethod com/amazonaws/SignableRequest.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      79: aload_1
      80: ldc           #104                // String X-Amz-Credential
      82: aload         7
      84: invokeinterface #38,  3           // InterfaceMethod com/amazonaws/SignableRequest.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      89: return

  protected void addSessionCredentials(com.amazonaws.SignableRequest<?>, com.amazonaws.auth.AWSSessionCredentials);
    Code:
       0: aload_1
       1: ldc           #36                 // String X-Amz-Security-Token
       3: aload_2
       4: invokeinterface #37,  1           // InterfaceMethod com/amazonaws/auth/AWSSessionCredentials.getSessionToken:()Ljava/lang/String;
       9: invokeinterface #21,  3           // InterfaceMethod com/amazonaws/SignableRequest.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      14: return

  protected java.lang.String getCanonicalizedHeaderString(com.amazonaws.SignableRequest<?>);
    Code:
       0: new           #105                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #24,  1           // InterfaceMethod com/amazonaws/SignableRequest.getHeaders:()Ljava/util/Map;
      10: invokeinterface #106,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      15: invokespecial #107                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore_2
      19: aload_2
      20: getstatic     #108                // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
      23: invokestatic  #109                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      26: aload_1
      27: invokeinterface #24,  1           // InterfaceMethod com/amazonaws/SignableRequest.getHeaders:()Ljava/util/Map;
      32: astore_3
      33: new           #47                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      40: astore        4
      42: aload_2
      43: invokeinterface #110,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore        5
      50: aload         5
      52: invokeinterface #111,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          142
      60: aload         5
      62: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #113                // class java/lang/String
      70: astore        6
      72: aload_0
      73: aload         6
      75: invokevirtual #114                // Method shouldExcludeHeaderFromSigning:(Ljava/lang/String;)Z
      78: ifeq          84
      81: goto          50
      84: aload         6
      86: invokestatic  #115                // Method com/amazonaws/util/StringUtils.lowerCase:(Ljava/lang/String;)Ljava/lang/String;
      89: astore        7
      91: aload_3
      92: aload         6
      94: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      99: checkcast     #113                // class java/lang/String
     102: astore        8
     104: aload         4
     106: aload         7
     108: invokestatic  #116                // Method com/amazonaws/util/StringUtils.appendCompactedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
     111: aload         4
     113: ldc           #117                // String :
     115: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: pop
     119: aload         8
     121: ifnull        131
     124: aload         4
     126: aload         8
     128: invokestatic  #116                // Method com/amazonaws/util/StringUtils.appendCompactedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
     131: aload         4
     133: ldc           #51                 // String \n
     135: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: pop
     139: goto          50
     142: aload         4
     144: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: areturn

  protected java.lang.String getSignedHeadersString(com.amazonaws.SignableRequest<?>);
    Code:
       0: new           #105                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #24,  1           // InterfaceMethod com/amazonaws/SignableRequest.getHeaders:()Ljava/util/Map;
      10: invokeinterface #106,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      15: invokespecial #107                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore_2
      19: aload_2
      20: getstatic     #108                // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
      23: invokestatic  #109                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      26: new           #47                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      33: astore_3
      34: aload_2
      35: invokeinterface #110,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore        4
      42: aload         4
      44: invokeinterface #111,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          103
      52: aload         4
      54: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #113                // class java/lang/String
      62: astore        5
      64: aload_0
      65: aload         5
      67: invokevirtual #114                // Method shouldExcludeHeaderFromSigning:(Ljava/lang/String;)Z
      70: ifeq          76
      73: goto          42
      76: aload_3
      77: invokevirtual #118                // Method java/lang/StringBuilder.length:()I
      80: ifle          90
      83: aload_3
      84: ldc           #119                // String ;
      86: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload_3
      91: aload         5
      93: invokestatic  #115                // Method com/amazonaws/util/StringUtils.lowerCase:(Ljava/lang/String;)Ljava/lang/String;
      96: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: pop
     100: goto          42
     103: aload_3
     104: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: areturn

  protected boolean shouldExcludeHeaderFromSigning(java.lang.String);
    Code:
       0: getstatic     #120                // Field listOfHeadersToIgnoreInLowerCase:Ljava/util/List;
       3: aload_1
       4: invokevirtual #121                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       7: invokeinterface #122,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      12: ireturn

  protected void addHostHeader(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_1
       1: invokeinterface #43,  1           // InterfaceMethod com/amazonaws/SignableRequest.getEndpoint:()Ljava/net/URI;
       6: astore_2
       7: new           #47                 // class java/lang/StringBuilder
      10: dup
      11: aload_2
      12: invokevirtual #123                // Method java/net/URI.getHost:()Ljava/lang/String;
      15: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      18: astore_3
      19: aload_2
      20: invokestatic  #124                // Method com/amazonaws/util/SdkHttpUtils.isUsingNonDefaultPort:(Ljava/net/URI;)Z
      23: ifeq          40
      26: aload_3
      27: ldc           #117                // String :
      29: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_2
      33: invokevirtual #125                // Method java/net/URI.getPort:()I
      36: invokevirtual #126                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: ldc           #127                // String Host
      43: aload_3
      44: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #21,  3           // InterfaceMethod com/amazonaws/SignableRequest.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      52: return

  protected java.lang.String calculateContentHash(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #128                // Method getBinaryRequestPayloadStream:(Lcom/amazonaws/SignableRequest;)Ljava/io/InputStream;
       5: astore_2
       6: aload_1
       7: invokeinterface #129,  1          // InterfaceMethod com/amazonaws/SignableRequest.getReadLimitInfo:()Lcom/amazonaws/ReadLimitInfo;
      12: astore_3
      13: aload_2
      14: aload_3
      15: ifnonnull     22
      18: iconst_m1
      19: goto          28
      22: aload_3
      23: invokeinterface #130,  1          // InterfaceMethod com/amazonaws/ReadLimitInfo.getReadLimit:()I
      28: invokevirtual #131                // Method java/io/InputStream.mark:(I)V
      31: aload_0
      32: aload_2
      33: invokevirtual #132                // Method hash:(Ljava/io/InputStream;)[B
      36: invokestatic  #42                 // Method com/amazonaws/util/BinaryUtils.toHex:([B)Ljava/lang/String;
      39: astore        4
      41: aload_2
      42: invokevirtual #133                // Method java/io/InputStream.reset:()V
      45: goto          62
      48: astore        5
      50: new           #135                // class com/amazonaws/AmazonClientException
      53: dup
      54: ldc           #136                // String Unable to reset stream after calculating AWS4 signature
      56: aload         5
      58: invokespecial #137                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: athrow
      62: aload         4
      64: areturn
    Exception table:
       from    to  target type
          41    45    48   Class java/io/IOException

  protected void processRequestPayload(com.amazonaws.SignableRequest<?>, byte[], byte[], com.amazonaws.auth.internal.AWS4SignerRequestParams);
    Code:
       0: return

  protected java.lang.String calculateContentHashPresign(com.amazonaws.SignableRequest<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method calculateContentHash:(Lcom/amazonaws/SignableRequest;)Ljava/lang/String;
       5: areturn

  private boolean isAnonymous(com.amazonaws.auth.AWSCredentials);
    Code:
       0: aload_1
       1: instanceof    #138                // class com/amazonaws/auth/AnonymousAWSCredentials
       4: ireturn

  private long generateExpirationDate(java.util.Date);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: invokevirtual #9                  // Method java/util/Date.getTime:()J
       8: invokestatic  #139                // Method java/lang/System.currentTimeMillis:()J
      11: lsub
      12: ldc2_w        #140                // long 1000l
      15: ldiv
      16: goto          22
      19: ldc2_w        #142                // long 604800l
      22: lstore_2
      23: lload_2
      24: ldc2_w        #142                // long 604800l
      27: lcmp
      28: ifle          69
      31: new           #135                // class com/amazonaws/AmazonClientException
      34: dup
      35: new           #47                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #144                // String Requests that are pre-signed by SigV4 algorithm are valid for at most 7 days. The expiration date set on the current request [
      44: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #9                  // Method java/util/Date.getTime:()J
      51: invokestatic  #145                // Method com/amazonaws/auth/internal/AWS4SignerUtils.formatTimestamp:(J)Ljava/lang/String;
      54: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #146                // String ] has exceeded this limit.
      59: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #147                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: lload_2
      70: lreturn

  private byte[] newSigningKey(com.amazonaws.auth.AWSCredentials, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #148                // String AWS4
       9: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokeinterface #86,  1           // InterfaceMethod com/amazonaws/auth/AWSCredentials.getAWSSecretKey:()Ljava/lang/String;
      18: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: ldc           #88                 // String UTF-8
      26: invokestatic  #89                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      29: invokevirtual #90                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      32: astore        5
      34: aload_0
      35: aload_2
      36: aload         5
      38: getstatic     #91                 // Field com/amazonaws/auth/SigningAlgorithm.HmacSHA256:Lcom/amazonaws/auth/SigningAlgorithm;
      41: invokevirtual #149                // Method sign:(Ljava/lang/String;[BLcom/amazonaws/auth/SigningAlgorithm;)[B
      44: astore        6
      46: aload_0
      47: aload_3
      48: aload         6
      50: getstatic     #91                 // Field com/amazonaws/auth/SigningAlgorithm.HmacSHA256:Lcom/amazonaws/auth/SigningAlgorithm;
      53: invokevirtual #149                // Method sign:(Ljava/lang/String;[BLcom/amazonaws/auth/SigningAlgorithm;)[B
      56: astore        7
      58: aload_0
      59: aload         4
      61: aload         7
      63: getstatic     #91                 // Field com/amazonaws/auth/SigningAlgorithm.HmacSHA256:Lcom/amazonaws/auth/SigningAlgorithm;
      66: invokevirtual #149                // Method sign:(Ljava/lang/String;[BLcom/amazonaws/auth/SigningAlgorithm;)[B
      69: astore        8
      71: aload_0
      72: ldc           #150                // String aws4_request
      74: aload         8
      76: getstatic     #91                 // Field com/amazonaws/auth/SigningAlgorithm.HmacSHA256:Lcom/amazonaws/auth/SigningAlgorithm;
      79: invokevirtual #149                // Method sign:(Ljava/lang/String;[BLcom/amazonaws/auth/SigningAlgorithm;)[B
      82: areturn

  static {};
    Code:
       0: ldc           #151                // class com/amazonaws/auth/AWS4Signer
       2: invokestatic  #152                // Method com/amazonaws/log/InternalLogFactory.getLog:(Ljava/lang/Class;)Lcom/amazonaws/log/InternalLogApi;
       5: putstatic     #58                 // Field log:Lcom/amazonaws/log/InternalLogApi;
       8: new           #153                // class com/amazonaws/internal/FIFOCache
      11: dup
      12: sipush        300
      15: invokespecial #154                // Method com/amazonaws/internal/FIFOCache."<init>":(I)V
      18: putstatic     #71                 // Field signerCache:Lcom/amazonaws/internal/FIFOCache;
      21: iconst_1
      22: anewarray     #113                // class java/lang/String
      25: dup
      26: iconst_0
      27: ldc           #155                // String connection
      29: aastore
      30: invokestatic  #156                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      33: putstatic     #120                // Field listOfHeadersToIgnoreInLowerCase:Ljava/util/List;
      36: return
}
