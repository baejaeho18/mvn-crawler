Compiled from "HttpClientSettings.java"
public class com.amazonaws.http.settings.HttpClientSettings {
  private final com.amazonaws.ClientConfiguration config;

  private final boolean useBrowserCompatibleHostNameVerifier;

  com.amazonaws.http.settings.HttpClientSettings(com.amazonaws.ClientConfiguration, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String client configuration
       8: invokestatic  #3                  // Method com/amazonaws/util/ValidationUtils.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class com/amazonaws/ClientConfiguration
      14: putfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
      17: aload_0
      18: iload_2
      19: putfield      #6                  // Field useBrowserCompatibleHostNameVerifier:Z
      22: return

  public static com.amazonaws.http.settings.HttpClientSettings adapt(com.amazonaws.ClientConfiguration, boolean);
    Code:
       0: new           #7                  // class com/amazonaws/http/settings/HttpClientSettings
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #8                  // Method "<init>":(Lcom/amazonaws/ClientConfiguration;Z)V
       9: areturn

  public static com.amazonaws.http.settings.HttpClientSettings adapt(com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #9                  // Method adapt:(Lcom/amazonaws/ClientConfiguration;Z)Lcom/amazonaws/http/settings/HttpClientSettings;
       5: areturn

  public boolean useBrowserCompatibleHostNameVerifier();
    Code:
       0: aload_0
       1: getfield      #6                  // Field useBrowserCompatibleHostNameVerifier:Z
       4: ireturn

  public int getMaxConnections();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #10                 // Method com/amazonaws/ClientConfiguration.getMaxConnections:()I
       7: ireturn

  public java.net.InetAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #11                 // Method com/amazonaws/ClientConfiguration.getLocalAddress:()Ljava/net/InetAddress;
       7: areturn

  public java.lang.String getProxyHost();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #12                 // Method com/amazonaws/ClientConfiguration.getProxyHost:()Ljava/lang/String;
       7: areturn

  public int getProxyPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #13                 // Method com/amazonaws/ClientConfiguration.getProxyPort:()I
       7: ireturn

  public java.lang.String getProxyUsername();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #14                 // Method com/amazonaws/ClientConfiguration.getProxyUsername:()Ljava/lang/String;
       7: areturn

  public java.lang.String getProxyPassword();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #15                 // Method com/amazonaws/ClientConfiguration.getProxyPassword:()Ljava/lang/String;
       7: areturn

  public java.lang.String getNonProxyHosts();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #16                 // Method com/amazonaws/ClientConfiguration.getNonProxyHosts:()Ljava/lang/String;
       7: areturn

  public boolean useReaper();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #17                 // Method com/amazonaws/ClientConfiguration.useReaper:()Z
       7: ireturn

  public boolean useGzip();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #18                 // Method com/amazonaws/ClientConfiguration.useGzip:()Z
       7: ireturn

  public com.amazonaws.DnsResolver getDnsResolver();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #19                 // Method com/amazonaws/ClientConfiguration.getDnsResolver:()Lcom/amazonaws/DnsResolver;
       7: areturn

  public com.amazonaws.ApacheHttpClientConfig getApacheHttpClientConfig();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #20                 // Method com/amazonaws/ClientConfiguration.getApacheHttpClientConfig:()Lcom/amazonaws/ApacheHttpClientConfig;
       7: areturn

  public int getSocketTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #21                 // Method com/amazonaws/ClientConfiguration.getSocketTimeout:()I
       7: ireturn

  public int[] getSocketBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #22                 // Method com/amazonaws/ClientConfiguration.getSocketBufferSizeHints:()[I
       7: areturn

  public boolean useTcpKeepAlive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #23                 // Method com/amazonaws/ClientConfiguration.useTcpKeepAlive:()Z
       7: ireturn

  public java.security.SecureRandom getSecureRandom();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #24                 // Method com/amazonaws/ClientConfiguration.getSecureRandom:()Ljava/security/SecureRandom;
       7: areturn

  public int getConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #25                 // Method com/amazonaws/ClientConfiguration.getConnectionTimeout:()I
       7: ireturn

  public int getConnectionPoolRequestTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #25                 // Method com/amazonaws/ClientConfiguration.getConnectionTimeout:()I
       7: ireturn

  public long getConnectionPoolTTL();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #26                 // Method com/amazonaws/ClientConfiguration.getConnectionTTL:()J
       7: lreturn

  public long getMaxIdleConnectionTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #27                 // Method com/amazonaws/ClientConfiguration.getConnectionMaxIdleMillis:()J
       7: lreturn

  public java.lang.String getProxyWorkstation();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #28                 // Method com/amazonaws/ClientConfiguration.getProxyWorkstation:()Ljava/lang/String;
       7: areturn

  public java.lang.String getProxyDomain();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #29                 // Method com/amazonaws/ClientConfiguration.getProxyDomain:()Ljava/lang/String;
       7: areturn

  public boolean isPreemptiveBasicProxyAuth();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #30                 // Method com/amazonaws/ClientConfiguration.isPreemptiveBasicProxyAuth:()Z
       7: ireturn

  public boolean isUseExpectContinue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #31                 // Method com/amazonaws/ClientConfiguration.isUseExpectContinue:()Z
       7: ireturn
}
