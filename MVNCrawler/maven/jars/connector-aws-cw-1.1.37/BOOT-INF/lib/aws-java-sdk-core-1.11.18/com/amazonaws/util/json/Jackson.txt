Compiled from "Jackson.java"
public final class com.amazonaws.util.json.Jackson extends java.lang.Enum<com.amazonaws.util.json.Jackson> {
  private static final com.fasterxml.jackson.databind.ObjectMapper objectMapper;

  private static final com.fasterxml.jackson.databind.ObjectWriter writer;

  private static final com.fasterxml.jackson.databind.ObjectWriter prettyWriter;

  private static final com.amazonaws.util.json.Jackson[] $VALUES;

  public static com.amazonaws.util.json.Jackson[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lcom/amazonaws/util/json/Jackson;
       3: invokevirtual #2                  // Method "[Lcom/amazonaws/util/json/Jackson;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lcom/amazonaws/util/json/Jackson;"
       9: areturn

  public static com.amazonaws.util.json.Jackson valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class com/amazonaws/util/json/Jackson
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class com/amazonaws/util/json/Jackson
       9: areturn

  private com.amazonaws.util.json.Jackson();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static java.lang.String toJsonPrettyString(java.lang.Object);
    Code:
       0: getstatic     #7                  // Field prettyWriter:Lcom/fasterxml/jackson/databind/ObjectWriter;
       3: aload_0
       4: invokevirtual #8                  // Method com/fasterxml/jackson/databind/ObjectWriter.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn
       8: astore_1
       9: new           #10                 // class java/lang/IllegalStateException
      12: dup
      13: aload_1
      14: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  public static java.lang.String toJsonString(java.lang.Object);
    Code:
       0: getstatic     #12                 // Field writer:Lcom/fasterxml/jackson/databind/ObjectWriter;
       3: aload_0
       4: invokevirtual #8                  // Method com/fasterxml/jackson/databind/ObjectWriter.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn
       8: astore_1
       9: new           #10                 // class java/lang/IllegalStateException
      12: dup
      13: aload_1
      14: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  public static <T> T fromJsonString(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: getstatic     #13                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       9: aload_0
      10: aload_1
      11: invokevirtual #14                 // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      14: areturn
      15: astore_2
      16: new           #15                 // class com/amazonaws/AmazonClientException
      19: dup
      20: ldc           #16                 // String Unable to parse Json String.
      22: aload_2
      23: invokespecial #17                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: athrow
    Exception table:
       from    to  target type
           6    14    15   Class java/lang/Exception

  public static com.fasterxml.jackson.databind.JsonNode jsonNodeOf(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #18                 // class com/fasterxml/jackson/databind/JsonNode
       3: invokestatic  #19                 // Method fromJsonString:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       6: checkcast     #18                 // class com/fasterxml/jackson/databind/JsonNode
       9: areturn

  public static com.fasterxml.jackson.core.JsonGenerator jsonGeneratorOf(java.io.Writer) throws java.io.IOException;
    Code:
       0: new           #20                 // class com/fasterxml/jackson/core/JsonFactory
       3: dup
       4: invokespecial #21                 // Method com/fasterxml/jackson/core/JsonFactory."<init>":()V
       7: aload_0
       8: invokevirtual #22                 // Method com/fasterxml/jackson/core/JsonFactory.createGenerator:(Ljava/io/Writer;)Lcom/fasterxml/jackson/core/JsonGenerator;
      11: areturn

  public static <T> T loadFrom(java.io.File, java.lang.Class<T>) throws java.io.IOException;
    Code:
       0: getstatic     #13                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: aload_0
       4: aload_1
       5: invokevirtual #23                 // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:(Ljava/io/File;Ljava/lang/Class;)Ljava/lang/Object;
       8: areturn
       9: astore_2
      10: aload_2
      11: athrow
      12: astore_2
      13: new           #10                 // class java/lang/IllegalStateException
      16: dup
      17: aload_2
      18: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      21: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException
           0     8    12   Class java/lang/Exception

  public static com.fasterxml.jackson.databind.ObjectMapper getObjectMapper();
    Code:
       0: getstatic     #13                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: areturn

  public static com.fasterxml.jackson.databind.ObjectWriter getWriter();
    Code:
       0: getstatic     #12                 // Field writer:Lcom/fasterxml/jackson/databind/ObjectWriter;
       3: areturn

  public static com.fasterxml.jackson.databind.ObjectWriter getPrettywriter();
    Code:
       0: getstatic     #7                  // Field prettyWriter:Lcom/fasterxml/jackson/databind/ObjectWriter;
       3: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class com/amazonaws/util/json/Jackson
       4: putstatic     #1                  // Field $VALUES:[Lcom/amazonaws/util/json/Jackson;
       7: new           #25                 // class com/fasterxml/jackson/databind/ObjectMapper
      10: dup
      11: invokespecial #26                 // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
      14: putstatic     #13                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      17: getstatic     #13                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      20: getstatic     #27                 // Field com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;
      23: iconst_1
      24: invokevirtual #28                 // Method com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/core/JsonParser$Feature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
      27: pop
      28: getstatic     #13                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      31: getstatic     #29                 // Field com/fasterxml/jackson/databind/DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES:Lcom/fasterxml/jackson/databind/DeserializationFeature;
      34: iconst_0
      35: invokevirtual #30                 // Method com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/DeserializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
      38: pop
      39: getstatic     #13                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      42: invokevirtual #31                 // Method com/fasterxml/jackson/databind/ObjectMapper.writer:()Lcom/fasterxml/jackson/databind/ObjectWriter;
      45: putstatic     #12                 // Field writer:Lcom/fasterxml/jackson/databind/ObjectWriter;
      48: getstatic     #13                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      51: invokevirtual #32                 // Method com/fasterxml/jackson/databind/ObjectMapper.writerWithDefaultPrettyPrinter:()Lcom/fasterxml/jackson/databind/ObjectWriter;
      54: putstatic     #7                  // Field prettyWriter:Lcom/fasterxml/jackson/databind/ObjectWriter;
      57: return
}
