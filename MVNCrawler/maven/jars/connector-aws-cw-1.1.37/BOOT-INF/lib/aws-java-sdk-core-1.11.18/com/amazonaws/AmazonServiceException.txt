Compiled from "AmazonServiceException.java"
public class com.amazonaws.AmazonServiceException extends com.amazonaws.AmazonClientException {
  private static final long serialVersionUID;

  private java.lang.String requestId;

  private java.lang.String errorCode;

  private com.amazonaws.AmazonServiceException$ErrorType errorType;

  private java.lang.String errorMessage;

  private int statusCode;

  private java.lang.String serviceName;

  private java.util.Map<java.lang.String, java.lang.String> httpHeaders;

  private byte[] rawResponse;

  public com.amazonaws.AmazonServiceException(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #1                  // class java/lang/String
       5: invokespecial #2                  // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
       8: aload_0
       9: getstatic     #3                  // Field com/amazonaws/AmazonServiceException$ErrorType.Unknown:Lcom/amazonaws/AmazonServiceException$ErrorType;
      12: putfield      #4                  // Field errorType:Lcom/amazonaws/AmazonServiceException$ErrorType;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field errorMessage:Ljava/lang/String;
      20: return

  public com.amazonaws.AmazonServiceException(java.lang.String, java.lang.Exception);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_2
       3: invokespecial #6                  // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       6: aload_0
       7: getstatic     #3                  // Field com/amazonaws/AmazonServiceException$ErrorType.Unknown:Lcom/amazonaws/AmazonServiceException$ErrorType;
      10: putfield      #4                  // Field errorType:Lcom/amazonaws/AmazonServiceException$ErrorType;
      13: aload_0
      14: aload_1
      15: putfield      #5                  // Field errorMessage:Ljava/lang/String;
      18: return

  public void setRequestId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field requestId:Ljava/lang/String;
       5: return

  public java.lang.String getRequestId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field requestId:Ljava/lang/String;
       4: areturn

  public void setServiceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field serviceName:Ljava/lang/String;
       5: return

  public java.lang.String getServiceName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field serviceName:Ljava/lang/String;
       4: areturn

  public void setErrorCode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field errorCode:Ljava/lang/String;
       5: return

  public java.lang.String getErrorCode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field errorCode:Ljava/lang/String;
       4: areturn

  public void setErrorType(com.amazonaws.AmazonServiceException$ErrorType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field errorType:Lcom/amazonaws/AmazonServiceException$ErrorType;
       5: return

  public com.amazonaws.AmazonServiceException$ErrorType getErrorType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field errorType:Lcom/amazonaws/AmazonServiceException$ErrorType;
       4: areturn

  public java.lang.String getErrorMessage();
    Code:
       0: aload_0
       1: getfield      #5                  // Field errorMessage:Ljava/lang/String;
       4: areturn

  public void setErrorMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field errorMessage:Ljava/lang/String;
       5: return

  public void setStatusCode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field statusCode:I
       5: return

  public int getStatusCode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field statusCode:I
       4: ireturn

  public java.lang.String getMessage();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #13                 // Method getErrorMessage:()Ljava/lang/String;
      11: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #15                 // String  (Service:
      16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #16                 // Method getServiceName:()Ljava/lang/String;
      23: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #17                 // String ; Status Code:
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #18                 // Method getStatusCode:()I
      35: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: ldc           #20                 // String ; Error Code:
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: invokevirtual #21                 // Method getErrorCode:()Ljava/lang/String;
      47: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #22                 // String ; Request ID:
      52: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: invokevirtual #23                 // Method getRequestId:()Ljava/lang/String;
      59: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #24                 // String )
      64: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn

  public java.lang.String getRawResponseContent();
    Code:
       0: aload_0
       1: getfield      #26                 // Field rawResponse:[B
       4: ifnonnull     11
       7: aconst_null
       8: goto          25
      11: new           #1                  // class java/lang/String
      14: dup
      15: aload_0
      16: getfield      #26                 // Field rawResponse:[B
      19: getstatic     #27                 // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      22: invokespecial #28                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      25: areturn

  public void setRawResponseContent(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          16
       9: aload_1
      10: getstatic     #27                 // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      13: invokevirtual #29                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      16: putfield      #26                 // Field rawResponse:[B
      19: return

  public byte[] getRawResponse();
    Code:
       0: aload_0
       1: getfield      #26                 // Field rawResponse:[B
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #26                 // Field rawResponse:[B
      15: invokevirtual #30                 // Method "[B".clone:()Ljava/lang/Object;
      18: checkcast     #31                 // class "[B"
      21: areturn

  public void setRawResponse(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          16
       9: aload_1
      10: invokevirtual #32                 // Method "[B".clone:()Ljava/lang/Object;
      13: checkcast     #31                 // class "[B"
      16: putfield      #26                 // Field rawResponse:[B
      19: return

  public java.util.Map<java.lang.String, java.lang.String> getHttpHeaders();
    Code:
       0: aload_0
       1: getfield      #33                 // Field httpHeaders:Ljava/util/Map;
       4: areturn

  public void setHttpHeaders(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field httpHeaders:Ljava/util/Map;
       5: return
}
