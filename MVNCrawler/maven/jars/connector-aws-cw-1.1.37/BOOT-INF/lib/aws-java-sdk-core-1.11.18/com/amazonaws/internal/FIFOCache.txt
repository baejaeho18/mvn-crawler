Compiled from "FIFOCache.java"
public final class com.amazonaws.internal.FIFOCache<T> {
  private final com.amazonaws.internal.BoundedLinkedHashMap<java.lang.String, T> map;

  private final java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock rlock;

  private final java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock wlock;

  public com.amazonaws.internal.FIFOCache(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iconst_1
       6: if_icmpge     41
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: new           #3                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #5                  // String maxSize
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #8                  // String  must be at least 1
      31: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: new           #11                 // class com/amazonaws/internal/BoundedLinkedHashMap
      45: dup
      46: iload_1
      47: invokespecial #12                 // Method com/amazonaws/internal/BoundedLinkedHashMap."<init>":(I)V
      50: putfield      #13                 // Field map:Lcom/amazonaws/internal/BoundedLinkedHashMap;
      53: new           #14                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      56: dup
      57: invokespecial #15                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      60: astore_2
      61: aload_0
      62: aload_2
      63: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      66: putfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      69: aload_0
      70: aload_2
      71: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      74: putfield      #19                 // Field wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      77: return

  public T add(java.lang.String, T);
    Code:
       0: aload_0
       1: getfield      #19                 // Field wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       4: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
       7: aload_0
       8: getfield      #13                 // Field map:Lcom/amazonaws/internal/BoundedLinkedHashMap;
      11: aload_1
      12: aload_2
      13: invokevirtual #21                 // Method com/amazonaws/internal/BoundedLinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: astore_3
      17: aload_0
      18: getfield      #19                 // Field wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      21: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      24: aload_3
      25: areturn
      26: astore        4
      28: aload_0
      29: getfield      #19                 // Field wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      32: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      35: aload         4
      37: athrow
    Exception table:
       from    to  target type
           7    17    26   any
          26    28    26   any

  public T get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       4: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
       7: aload_0
       8: getfield      #13                 // Field map:Lcom/amazonaws/internal/BoundedLinkedHashMap;
      11: aload_1
      12: invokevirtual #24                 // Method com/amazonaws/internal/BoundedLinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: astore_2
      16: aload_0
      17: getfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      20: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      23: aload_2
      24: areturn
      25: astore_3
      26: aload_0
      27: getfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      30: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      33: aload_3
      34: athrow
    Exception table:
       from    to  target type
           7    16    25   any

  public int size();
    Code:
       0: aload_0
       1: getfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       4: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
       7: aload_0
       8: getfield      #13                 // Field map:Lcom/amazonaws/internal/BoundedLinkedHashMap;
      11: invokevirtual #26                 // Method com/amazonaws/internal/BoundedLinkedHashMap.size:()I
      14: istore_1
      15: aload_0
      16: getfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      19: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      22: iload_1
      23: ireturn
      24: astore_2
      25: aload_0
      26: getfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      29: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      32: aload_2
      33: athrow
    Exception table:
       from    to  target type
           7    15    24   any

  public int getMaxSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field map:Lcom/amazonaws/internal/BoundedLinkedHashMap;
       4: invokevirtual #27                 // Method com/amazonaws/internal/BoundedLinkedHashMap.getMaxSize:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       4: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
       7: aload_0
       8: getfield      #13                 // Field map:Lcom/amazonaws/internal/BoundedLinkedHashMap;
      11: invokevirtual #28                 // Method com/amazonaws/internal/BoundedLinkedHashMap.toString:()Ljava/lang/String;
      14: astore_1
      15: aload_0
      16: getfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      19: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      22: aload_1
      23: areturn
      24: astore_2
      25: aload_0
      26: getfield      #17                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      29: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      32: aload_2
      33: athrow
    Exception table:
       from    to  target type
           7    15    24   any
}
