Compiled from "AwsSdkMetrics.java"
public final class com.amazonaws.metrics.AwsSdkMetrics extends java.lang.Enum<com.amazonaws.metrics.AwsSdkMetrics> {
  private static final org.apache.commons.logging.Log log;

  public static final java.lang.String DEFAULT_METRIC_NAMESPACE;

  private static final java.lang.String MBEAN_OBJECT_NAME;

  private static volatile java.lang.String registeredAdminMbeanName;

  public static final java.lang.String USE_SINGLE_METRIC_NAMESPACE;

  public static final java.lang.String EXCLUDE_MACHINE_METRICS;

  public static final java.lang.String INCLUDE_PER_HOST_METRICS;

  public static final java.lang.String AWS_CREDENTAIL_PROPERTIES_FILE;

  public static final java.lang.String AWS_CREDENTIAL_PROPERTIES_FILE;

  public static final java.lang.String CLOUDWATCH_REGION;

  public static final java.lang.String METRIC_QUEUE_SIZE;

  public static final java.lang.String QUEUE_POLL_TIMEOUT_MILLI;

  public static final java.lang.String METRIC_NAME_SPACE;

  public static final java.lang.String JVM_METRIC_NAME;

  public static final java.lang.String HOST_METRIC_NAME;

  private static final java.lang.String DEFAULT_METRIC_COLLECTOR_FACTORY;

  private static final java.lang.String ENABLE_HTTP_SOCKET_READ_METRIC;

  private static final boolean defaultMetricsEnabled;

  private static volatile com.amazonaws.auth.AWSCredentialsProvider credentialProvider;

  private static volatile boolean machineMetricsExcluded;

  private static volatile boolean perHostMetricsIncluded;

  private static volatile boolean httpSocketReadMetricEnabled;

  private static volatile com.amazonaws.regions.Regions region;

  private static volatile java.lang.Integer metricQueueSize;

  private static volatile java.lang.Long queuePollTimeoutMilli;

  private static volatile java.lang.String metricNameSpace;

  private static volatile java.lang.String credentialFile;

  private static volatile java.lang.String jvmMetricName;

  private static volatile java.lang.String hostMetricName;

  private static volatile boolean singleMetricNamespace;

  private static final com.amazonaws.metrics.AwsSdkMetrics$MetricRegistry registry;

  private static volatile com.amazonaws.metrics.MetricCollector mc;

  private static boolean dirtyEnabling;

  private static final com.amazonaws.metrics.AwsSdkMetrics[] $VALUES;

  public static com.amazonaws.metrics.AwsSdkMetrics[] values();
    Code:
       0: getstatic     #2                  // Field $VALUES:[Lcom/amazonaws/metrics/AwsSdkMetrics;
       3: invokevirtual #3                  // Method "[Lcom/amazonaws/metrics/AwsSdkMetrics;".clone:()Ljava/lang/Object;
       6: checkcast     #4                  // class "[Lcom/amazonaws/metrics/AwsSdkMetrics;"
       9: areturn

  public static com.amazonaws.metrics.AwsSdkMetrics valueOf(java.lang.String);
    Code:
       0: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
       2: aload_0
       3: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #5                  // class com/amazonaws/metrics/AwsSdkMetrics
       9: areturn

  private com.amazonaws.metrics.AwsSdkMetrics();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static boolean isMetricAdminMBeanRegistered();
    Code:
       0: invokestatic  #8                  // Method com/amazonaws/jmx/spi/SdkMBeanRegistry$Factory.getMBeanRegistry:()Lcom/amazonaws/jmx/spi/SdkMBeanRegistry;
       3: astore_0
       4: getstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
       7: ifnull        26
      10: aload_0
      11: getstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
      14: invokeinterface #10,  2           // InterfaceMethod com/amazonaws/jmx/spi/SdkMBeanRegistry.isMBeanRegistered:(Ljava/lang/String;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public static java.lang.String getRegisteredAdminMbeanName();
    Code:
       0: getstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
       3: areturn

  public static boolean registerMetricAdminMBean();
    Code:
       0: invokestatic  #8                  // Method com/amazonaws/jmx/spi/SdkMBeanRegistry$Factory.getMBeanRegistry:()Lcom/amazonaws/jmx/spi/SdkMBeanRegistry;
       3: astore_0
       4: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
       6: dup
       7: astore_1
       8: monitorenter
       9: getstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
      12: ifnull        19
      15: iconst_0
      16: aload_1
      17: monitorexit
      18: ireturn
      19: aload_0
      20: getstatic     #11                 // Field MBEAN_OBJECT_NAME:Ljava/lang/String;
      23: invokeinterface #12,  2           // InterfaceMethod com/amazonaws/jmx/spi/SdkMBeanRegistry.registerMetricAdminMBean:(Ljava/lang/String;)Z
      28: istore_2
      29: iload_2
      30: ifeq          42
      33: getstatic     #11                 // Field MBEAN_OBJECT_NAME:Ljava/lang/String;
      36: putstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
      39: goto          108
      42: getstatic     #11                 // Field MBEAN_OBJECT_NAME:Ljava/lang/String;
      45: astore_3
      46: iconst_0
      47: istore        4
      49: aload_0
      50: aload_3
      51: invokeinterface #10,  2           // InterfaceMethod com/amazonaws/jmx/spi/SdkMBeanRegistry.isMBeanRegistered:(Ljava/lang/String;)Z
      56: ifeq          92
      59: new           #13                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      66: getstatic     #11                 // Field MBEAN_OBJECT_NAME:Ljava/lang/String;
      69: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #16                 // String /
      74: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: iinc          4, 1
      80: iload         4
      82: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: astore_3
      89: goto          49
      92: aload_0
      93: aload_3
      94: invokeinterface #12,  2           // InterfaceMethod com/amazonaws/jmx/spi/SdkMBeanRegistry.registerMetricAdminMBean:(Ljava/lang/String;)Z
      99: istore_2
     100: iload_2
     101: ifeq          108
     104: aload_3
     105: putstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
     108: iload_2
     109: ifeq          141
     112: getstatic     #19                 // Field log:Lorg/apache/commons/logging/Log;
     115: new           #13                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #20                 // String Admin mbean registered under
     124: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: getstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
     130: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     141: iload_2
     142: aload_1
     143: monitorexit
     144: ireturn
     145: astore        5
     147: aload_1
     148: monitorexit
     149: aload         5
     151: athrow
    Exception table:
       from    to  target type
           9    18   145   any
          19   144   145   any
         145   149   145   any

  public static boolean unregisterMetricAdminMBean();
    Code:
       0: invokestatic  #8                  // Method com/amazonaws/jmx/spi/SdkMBeanRegistry$Factory.getMBeanRegistry:()Lcom/amazonaws/jmx/spi/SdkMBeanRegistry;
       3: astore_0
       4: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
       6: dup
       7: astore_1
       8: monitorenter
       9: getstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
      12: ifnonnull     19
      15: iconst_1
      16: aload_1
      17: monitorexit
      18: ireturn
      19: aload_0
      20: getstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
      23: invokeinterface #22,  2           // InterfaceMethod com/amazonaws/jmx/spi/SdkMBeanRegistry.unregisterMBean:(Ljava/lang/String;)Z
      28: istore_2
      29: iload_2
      30: ifeq          37
      33: aconst_null
      34: putstatic     #9                  // Field registeredAdminMbeanName:Ljava/lang/String;
      37: iload_2
      38: aload_1
      39: monitorexit
      40: ireturn
      41: astore_3
      42: aload_1
      43: monitorexit
      44: aload_3
      45: athrow
    Exception table:
       from    to  target type
           9    18    41   any
          19    40    41   any
          41    44    41   any

  public static <T extends com.amazonaws.metrics.RequestMetricCollector> T getRequestMetricCollector();
    Code:
       0: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
       3: ifnonnull     16
       6: invokestatic  #24                 // Method isDefaultMetricsEnabled:()Z
       9: ifeq          16
      12: invokestatic  #25                 // Method enableDefaultMetrics:()Z
      15: pop
      16: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
      19: ifnonnull     28
      22: getstatic     #26                 // Field com/amazonaws/metrics/RequestMetricCollector.NONE:Lcom/amazonaws/metrics/RequestMetricCollector;
      25: goto          34
      28: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
      31: invokevirtual #27                 // Method com/amazonaws/metrics/MetricCollector.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      34: astore_0
      35: aload_0
      36: areturn

  public static <T extends com.amazonaws.metrics.ServiceMetricCollector> T getServiceMetricCollector();
    Code:
       0: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
       3: ifnonnull     16
       6: invokestatic  #24                 // Method isDefaultMetricsEnabled:()Z
       9: ifeq          16
      12: invokestatic  #25                 // Method enableDefaultMetrics:()Z
      15: pop
      16: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
      19: ifnonnull     28
      22: getstatic     #28                 // Field com/amazonaws/metrics/ServiceMetricCollector.NONE:Lcom/amazonaws/metrics/ServiceMetricCollector;
      25: goto          34
      28: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
      31: invokevirtual #29                 // Method com/amazonaws/metrics/MetricCollector.getServiceMetricCollector:()Lcom/amazonaws/metrics/ServiceMetricCollector;
      34: astore_0
      35: aload_0
      36: areturn

  static com.amazonaws.metrics.MetricCollector getInternalMetricCollector();
    Code:
       0: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
       3: areturn

  public static <T extends com.amazonaws.metrics.MetricCollector> T getMetricCollector();
    Code:
       0: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
       3: ifnonnull     16
       6: invokestatic  #24                 // Method isDefaultMetricsEnabled:()Z
       9: ifeq          16
      12: invokestatic  #25                 // Method enableDefaultMetrics:()Z
      15: pop
      16: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
      19: ifnonnull     28
      22: getstatic     #30                 // Field com/amazonaws/metrics/MetricCollector.NONE:Lcom/amazonaws/metrics/MetricCollector;
      25: goto          31
      28: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
      31: astore_0
      32: aload_0
      33: areturn

  public static synchronized void setMetricCollector(com.amazonaws.metrics.MetricCollector);
    Code:
       0: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
       3: astore_1
       4: aload_0
       5: putstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
       8: aload_1
       9: ifnull        17
      12: aload_1
      13: invokevirtual #31                 // Method com/amazonaws/metrics/MetricCollector.stop:()Z
      16: pop
      17: return

  public static void setMachineMetricsExcluded(boolean);
    Code:
       0: iload_0
       1: putstatic     #32                 // Field machineMetricsExcluded:Z
       4: return

  public static void setPerHostMetricsIncluded(boolean);
    Code:
       0: iload_0
       1: putstatic     #33                 // Field perHostMetricsIncluded:Z
       4: return

  public static void enableHttpSocketReadMetric();
    Code:
       0: iconst_1
       1: putstatic     #34                 // Field httpSocketReadMetricEnabled:Z
       4: return

  public static boolean isDefaultMetricsEnabled();
    Code:
       0: getstatic     #35                 // Field defaultMetricsEnabled:Z
       3: ireturn

  public static boolean isSingleMetricNamespace();
    Code:
       0: getstatic     #36                 // Field singleMetricNamespace:Z
       3: ireturn

  public static void setSingleMetricNamespace(boolean);
    Code:
       0: iload_0
       1: putstatic     #36                 // Field singleMetricNamespace:Z
       4: return

  public static boolean isMetricsEnabled();
    Code:
       0: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
       3: astore_0
       4: aload_0
       5: ifnull        19
       8: aload_0
       9: invokevirtual #37                 // Method com/amazonaws/metrics/MetricCollector.isEnabled:()Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public static boolean isMachineMetricExcluded();
    Code:
       0: getstatic     #32                 // Field machineMetricsExcluded:Z
       3: ireturn

  public static boolean isPerHostMetricIncluded();
    Code:
       0: getstatic     #33                 // Field perHostMetricsIncluded:Z
       3: ireturn

  public static boolean isPerHostMetricEnabled();
    Code:
       0: getstatic     #33                 // Field perHostMetricsIncluded:Z
       3: ifeq          8
       6: iconst_1
       7: ireturn
       8: getstatic     #38                 // Field hostMetricName:Ljava/lang/String;
      11: astore_0
      12: aload_0
      13: ifnonnull     21
      16: ldc           #39                 // String
      18: goto          25
      21: aload_0
      22: invokevirtual #40                 // Method java/lang/String.trim:()Ljava/lang/String;
      25: astore_0
      26: aload_0
      27: invokevirtual #41                 // Method java/lang/String.length:()I
      30: ifle          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public static boolean isHttpSocketReadMetricEnabled();
    Code:
       0: getstatic     #34                 // Field httpSocketReadMetricEnabled:Z
       3: ireturn

  public static synchronized boolean enableDefaultMetrics();
    Code:
       0: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
       3: ifnull        15
       6: getstatic     #23                 // Field mc:Lcom/amazonaws/metrics/MetricCollector;
       9: invokevirtual #37                 // Method com/amazonaws/metrics/MetricCollector.isEnabled:()Z
      12: ifne          109
      15: getstatic     #42                 // Field dirtyEnabling:Z
      18: ifeq          31
      21: new           #43                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #44                 // String Reentrancy is not allowed
      27: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iconst_1
      32: putstatic     #42                 // Field dirtyEnabling:Z
      35: ldc           #46                 // String com.amazonaws.metrics.internal.cloudwatch.DefaultMetricCollectorFactory
      37: invokestatic  #47                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      40: astore_0
      41: aload_0
      42: invokevirtual #48                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      45: checkcast     #49                 // class com/amazonaws/metrics/MetricCollector$Factory
      48: astore_1
      49: aload_1
      50: invokeinterface #50,  1           // InterfaceMethod com/amazonaws/metrics/MetricCollector$Factory.getInstance:()Lcom/amazonaws/metrics/MetricCollector;
      55: astore_2
      56: aload_2
      57: ifnull        72
      60: aload_2
      61: invokestatic  #51                 // Method setMetricCollector:(Lcom/amazonaws/metrics/MetricCollector;)V
      64: iconst_1
      65: istore_3
      66: iconst_0
      67: putstatic     #42                 // Field dirtyEnabling:Z
      70: iload_3
      71: ireturn
      72: iconst_0
      73: putstatic     #42                 // Field dirtyEnabling:Z
      76: goto          109
      79: astore_0
      80: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
      82: invokestatic  #53                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      85: ldc           #54                 // String Failed to enable the default metrics
      87: aload_0
      88: invokeinterface #55,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      93: iconst_0
      94: putstatic     #42                 // Field dirtyEnabling:Z
      97: goto          109
     100: astore        4
     102: iconst_0
     103: putstatic     #42                 // Field dirtyEnabling:Z
     106: aload         4
     108: athrow
     109: iconst_0
     110: ireturn
    Exception table:
       from    to  target type
          35    66    79   Class java/lang/Exception
          35    66   100   any
          79    93   100   any
         100   102   100   any

  public static void disableMetrics();
    Code:
       0: getstatic     #30                 // Field com/amazonaws/metrics/MetricCollector.NONE:Lcom/amazonaws/metrics/MetricCollector;
       3: invokestatic  #51                 // Method setMetricCollector:(Lcom/amazonaws/metrics/MetricCollector;)V
       6: return

  public static boolean add(com.amazonaws.metrics.MetricType);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: iconst_0
       5: goto          15
       8: getstatic     #56                 // Field registry:Lcom/amazonaws/metrics/AwsSdkMetrics$MetricRegistry;
      11: aload_0
      12: invokevirtual #57                 // Method com/amazonaws/metrics/AwsSdkMetrics$MetricRegistry.addMetricType:(Lcom/amazonaws/metrics/MetricType;)Z
      15: ireturn

  public static <T extends com.amazonaws.metrics.MetricType> boolean addAll(java.util.Collection<T>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #58,  1           // InterfaceMethod java/util/Collection.size:()I
      10: ifne          17
      13: iconst_0
      14: goto          24
      17: getstatic     #56                 // Field registry:Lcom/amazonaws/metrics/AwsSdkMetrics$MetricRegistry;
      20: aload_0
      21: invokevirtual #59                 // Method com/amazonaws/metrics/AwsSdkMetrics$MetricRegistry.addMetricTypes:(Ljava/util/Collection;)Z
      24: ireturn

  public static <T extends com.amazonaws.metrics.MetricType> void set(java.util.Collection<T>);
    Code:
       0: getstatic     #56                 // Field registry:Lcom/amazonaws/metrics/AwsSdkMetrics$MetricRegistry;
       3: aload_0
       4: invokevirtual #60                 // Method com/amazonaws/metrics/AwsSdkMetrics$MetricRegistry.setMetricTypes:(Ljava/util/Collection;)V
       7: return

  public static boolean remove(com.amazonaws.metrics.MetricType);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: iconst_0
       5: goto          15
       8: getstatic     #56                 // Field registry:Lcom/amazonaws/metrics/AwsSdkMetrics$MetricRegistry;
      11: aload_0
      12: invokevirtual #61                 // Method com/amazonaws/metrics/AwsSdkMetrics$MetricRegistry.removeMetricType:(Lcom/amazonaws/metrics/MetricType;)Z
      15: ireturn

  public static java.util.Set<com.amazonaws.metrics.MetricType> getPredefinedMetrics();
    Code:
       0: getstatic     #56                 // Field registry:Lcom/amazonaws/metrics/AwsSdkMetrics$MetricRegistry;
       3: invokevirtual #62                 // Method com/amazonaws/metrics/AwsSdkMetrics$MetricRegistry.predefinedMetrics:()Ljava/util/Set;
       6: areturn

  public static com.amazonaws.auth.AWSCredentialsProvider getCredentialProvider();
    Code:
       0: invokestatic  #63                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #64                 // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
       6: astore_0
       7: iconst_0
       8: istore_1
       9: iload_1
      10: aload_0
      11: arraylength
      12: if_icmpge     39
      15: aload_0
      16: iload_1
      17: aaload
      18: invokevirtual #65                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      21: ldc           #46                 // String com.amazonaws.metrics.internal.cloudwatch.DefaultMetricCollectorFactory
      23: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          33
      29: getstatic     #67                 // Field credentialProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
      32: areturn
      33: iinc          1, 1
      36: goto          9
      39: new           #68                 // class java/lang/SecurityException
      42: dup
      43: invokespecial #69                 // Method java/lang/SecurityException."<init>":()V
      46: astore_1
      47: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
      49: invokestatic  #53                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      52: ldc           #70                 // String Illegal attempt to access the credential provider
      54: aload_1
      55: invokeinterface #55,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      60: aload_1
      61: athrow

  public static synchronized void setCredentialProvider(com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: putstatic     #67                 // Field credentialProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
       4: return

  public static com.amazonaws.regions.Regions getRegion();
    Code:
       0: getstatic     #71                 // Field region:Lcom/amazonaws/regions/Regions;
       3: areturn

  public static void setRegion(com.amazonaws.regions.Regions);
    Code:
       0: aload_0
       1: putstatic     #71                 // Field region:Lcom/amazonaws/regions/Regions;
       4: return

  public static java.lang.String getCredentailFile();
    Code:
       0: getstatic     #72                 // Field credentialFile:Ljava/lang/String;
       3: areturn

  public static void setCredentialFile(java.lang.String) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #73                 // Method setCredentialFile0:(Ljava/lang/String;)V
       4: return

  private static void setCredentialFile0(java.lang.String) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: new           #74                 // class com/amazonaws/auth/PropertiesCredentials
       3: dup
       4: new           #75                 // class java/io/File
       7: dup
       8: aload_0
       9: invokespecial #76                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      12: invokespecial #77                 // Method com/amazonaws/auth/PropertiesCredentials."<init>":(Ljava/io/File;)V
      15: astore_1
      16: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
      18: dup
      19: astore_2
      20: monitorenter
      21: new           #78                 // class com/amazonaws/metrics/AwsSdkMetrics$1
      24: dup
      25: aload_1
      26: invokespecial #79                 // Method com/amazonaws/metrics/AwsSdkMetrics$1."<init>":(Lcom/amazonaws/auth/PropertiesCredentials;)V
      29: putstatic     #67                 // Field credentialProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
      32: aload_0
      33: putstatic     #72                 // Field credentialFile:Ljava/lang/String;
      36: aload_2
      37: monitorexit
      38: goto          46
      41: astore_3
      42: aload_2
      43: monitorexit
      44: aload_3
      45: athrow
      46: return
    Exception table:
       from    to  target type
          21    38    41   any
          41    44    41   any

  public static java.lang.Integer getMetricQueueSize();
    Code:
       0: getstatic     #80                 // Field metricQueueSize:Ljava/lang/Integer;
       3: areturn

  public static void setMetricQueueSize(java.lang.Integer);
    Code:
       0: aload_0
       1: putstatic     #80                 // Field metricQueueSize:Ljava/lang/Integer;
       4: return

  public static java.lang.Long getQueuePollTimeoutMilli();
    Code:
       0: getstatic     #81                 // Field queuePollTimeoutMilli:Ljava/lang/Long;
       3: areturn

  public static void setQueuePollTimeoutMilli(java.lang.Long);
    Code:
       0: aload_0
       1: putstatic     #81                 // Field queuePollTimeoutMilli:Ljava/lang/Long;
       4: return

  public static java.lang.String getMetricNameSpace();
    Code:
       0: getstatic     #82                 // Field metricNameSpace:Ljava/lang/String;
       3: areturn

  public static void setMetricNameSpace(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokevirtual #40                 // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #41                 // Method java/lang/String.length:()I
      11: ifne          22
      14: new           #83                 // class java/lang/IllegalArgumentException
      17: dup
      18: invokespecial #84                 // Method java/lang/IllegalArgumentException."<init>":()V
      21: athrow
      22: aload_0
      23: putstatic     #82                 // Field metricNameSpace:Ljava/lang/String;
      26: return

  public static java.lang.String getJvmMetricName();
    Code:
       0: getstatic     #85                 // Field jvmMetricName:Ljava/lang/String;
       3: areturn

  public static void setJvmMetricName(java.lang.String);
    Code:
       0: aload_0
       1: putstatic     #85                 // Field jvmMetricName:Ljava/lang/String;
       4: return

  public static java.lang.String getHostMetricName();
    Code:
       0: getstatic     #38                 // Field hostMetricName:Ljava/lang/String;
       3: areturn

  public static void setHostMetricName(java.lang.String);
    Code:
       0: aload_0
       1: putstatic     #38                 // Field hostMetricName:Ljava/lang/String;
       4: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #5                  // class com/amazonaws/metrics/AwsSdkMetrics
       4: putstatic     #2                  // Field $VALUES:[Lcom/amazonaws/metrics/AwsSdkMetrics;
       7: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
       9: invokestatic  #53                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putstatic     #19                 // Field log:Lorg/apache/commons/logging/Log;
      15: new           #13                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #86                 // String com.amazonaws.management:type=
      24: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
      29: invokevirtual #87                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: putstatic     #11                 // Field MBEAN_OBJECT_NAME:Ljava/lang/String;
      41: ldc           #88                 // String AWSSDK/Java
      43: putstatic     #82                 // Field metricNameSpace:Ljava/lang/String;
      46: ldc           #89                 // String com.amazonaws.sdk.enableDefaultMetrics
      48: invokestatic  #90                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      51: astore_0
      52: aload_0
      53: ifnull        60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: putstatic     #35                 // Field defaultMetricsEnabled:Z
      64: getstatic     #35                 // Field defaultMetricsEnabled:Z
      67: ifeq          499
      70: aload_0
      71: ldc           #91                 // String ,
      73: invokevirtual #92                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      76: astore_1
      77: iconst_0
      78: istore_2
      79: iconst_0
      80: istore_3
      81: iconst_0
      82: istore        4
      84: iconst_0
      85: istore        5
      87: aload_1
      88: astore        6
      90: aload         6
      92: arraylength
      93: istore        7
      95: iconst_0
      96: istore        8
      98: iload         8
     100: iload         7
     102: if_icmpge     481
     105: aload         6
     107: iload         8
     109: aaload
     110: astore        9
     112: aload         9
     114: invokevirtual #40                 // Method java/lang/String.trim:()Ljava/lang/String;
     117: astore        10
     119: iload_2
     120: ifne          138
     123: ldc           #93                 // String excludeMachineMetrics
     125: aload         10
     127: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     130: ifeq          138
     133: iconst_1
     134: istore_2
     135: goto          475
     138: iload_3
     139: ifne          157
     142: ldc           #94                 // String includePerHostMetrics
     144: aload         10
     146: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     149: ifeq          157
     152: iconst_1
     153: istore_3
     154: goto          475
     157: iload         4
     159: ifne          178
     162: ldc           #95                 // String useSingleMetricNamespace
     164: aload         10
     166: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     169: ifeq          178
     172: iconst_1
     173: istore        4
     175: goto          475
     178: iload         5
     180: ifne          199
     183: ldc           #96                 // String enableHttpSocketReadMetric
     185: aload         10
     187: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     190: ifeq          199
     193: iconst_1
     194: istore        5
     196: goto          475
     199: aload         10
     201: ldc           #97                 // String =
     203: invokevirtual #92                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     206: astore        11
     208: aload         11
     210: arraylength
     211: iconst_2
     212: if_icmpne     475
     215: aload         11
     217: iconst_0
     218: aaload
     219: invokevirtual #40                 // Method java/lang/String.trim:()Ljava/lang/String;
     222: astore        12
     224: aload         11
     226: iconst_1
     227: aaload
     228: invokevirtual #40                 // Method java/lang/String.trim:()Ljava/lang/String;
     231: astore        13
     233: ldc           #98                 // String credentialFile
     235: aload         12
     237: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     240: ifne          253
     243: ldc           #98                 // String credentialFile
     245: aload         12
     247: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     250: ifeq          261
     253: aload         13
     255: invokestatic  #73                 // Method setCredentialFile0:(Ljava/lang/String;)V
     258: goto          456
     261: ldc           #99                 // String cloudwatchRegion
     263: aload         12
     265: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     268: ifeq          282
     271: aload         13
     273: invokestatic  #100                // Method com/amazonaws/regions/Regions.fromName:(Ljava/lang/String;)Lcom/amazonaws/regions/Regions;
     276: putstatic     #71                 // Field region:Lcom/amazonaws/regions/Regions;
     279: goto          456
     282: ldc           #101                // String metricQueueSize
     284: aload         12
     286: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     289: ifeq          326
     292: aload         13
     294: invokestatic  #102                // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
     297: astore        14
     299: aload         14
     301: invokevirtual #103                // Method java/lang/Integer.intValue:()I
     304: iconst_1
     305: if_icmpge     318
     308: new           #83                 // class java/lang/IllegalArgumentException
     311: dup
     312: ldc           #104                // String metricQueueSize must be at least 1
     314: invokespecial #105                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     317: athrow
     318: aload         14
     320: putstatic     #80                 // Field metricQueueSize:Ljava/lang/Integer;
     323: goto          456
     326: ldc           #106                // String getQueuePollTimeoutMilli
     328: aload         12
     330: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     333: ifeq          372
     336: aload         13
     338: invokestatic  #107                // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     341: astore        14
     343: aload         14
     345: invokevirtual #108                // Method java/lang/Long.intValue:()I
     348: sipush        1000
     351: if_icmpge     364
     354: new           #83                 // class java/lang/IllegalArgumentException
     357: dup
     358: ldc           #109                // String getQueuePollTimeoutMilli must be at least 1000
     360: invokespecial #105                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     363: athrow
     364: aload         14
     366: putstatic     #81                 // Field queuePollTimeoutMilli:Ljava/lang/Long;
     369: goto          456
     372: ldc           #110                // String metricNameSpace
     374: aload         12
     376: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     379: ifeq          390
     382: aload         13
     384: putstatic     #82                 // Field metricNameSpace:Ljava/lang/String;
     387: goto          456
     390: ldc           #111                // String jvmMetricName
     392: aload         12
     394: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     397: ifeq          408
     400: aload         13
     402: putstatic     #85                 // Field jvmMetricName:Ljava/lang/String;
     405: goto          456
     408: ldc           #112                // String hostMetricName
     410: aload         12
     412: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     415: ifeq          426
     418: aload         13
     420: putstatic     #38                 // Field hostMetricName:Ljava/lang/String;
     423: goto          456
     426: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
     428: invokestatic  #53                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
     431: new           #13                 // class java/lang/StringBuilder
     434: dup
     435: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     438: ldc           #113                // String Ignoring unrecognized parameter:
     440: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: aload         10
     445: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     448: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     451: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     456: goto          475
     459: astore        14
     461: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
     463: invokestatic  #53                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
     466: ldc           #114                // String Ignoring failure
     468: aload         14
     470: invokeinterface #115,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     475: iinc          8, 1
     478: goto          98
     481: iload_2
     482: putstatic     #32                 // Field machineMetricsExcluded:Z
     485: iload_3
     486: putstatic     #33                 // Field perHostMetricsIncluded:Z
     489: iload         4
     491: putstatic     #36                 // Field singleMetricNamespace:Z
     494: iload         5
     496: putstatic     #34                 // Field httpSocketReadMetricEnabled:Z
     499: new           #116                // class com/amazonaws/metrics/AwsSdkMetrics$MetricRegistry
     502: dup
     503: invokespecial #117                // Method com/amazonaws/metrics/AwsSdkMetrics$MetricRegistry."<init>":()V
     506: putstatic     #56                 // Field registry:Lcom/amazonaws/metrics/AwsSdkMetrics$MetricRegistry;
     509: invokestatic  #118                // Method registerMetricAdminMBean:()Z
     512: pop
     513: goto          530
     516: astore_0
     517: ldc           #5                  // class com/amazonaws/metrics/AwsSdkMetrics
     519: invokestatic  #53                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
     522: ldc           #39                 // String
     524: aload_0
     525: invokeinterface #55,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     530: return
    Exception table:
       from    to  target type
         233   456   459   Class java/lang/Exception
         509   513   516   Class java/lang/Exception
}
