Compiled from "HttpRequestTimer.java"
public class com.amazonaws.http.timers.request.HttpRequestTimer {
  private volatile java.util.concurrent.ScheduledThreadPoolExecutor executor;

  public com.amazonaws.http.timers.request.HttpRequestTimer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.amazonaws.http.timers.request.HttpRequestAbortTaskTracker startTimer(org.apache.http.client.methods.HttpRequestBase, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #2                  // Method isTimeoutDisabled:(I)Z
       5: ifeq          12
       8: getstatic     #3                  // Field com/amazonaws/http/timers/request/NoOpHttpRequestAbortTaskTracker.INSTANCE:Lcom/amazonaws/http/timers/request/NoOpHttpRequestAbortTaskTracker;
      11: areturn
      12: aload_0
      13: getfield      #4                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      16: ifnonnull     23
      19: aload_0
      20: invokespecial #5                  // Method initializeExecutor:()V
      23: new           #6                  // class com/amazonaws/http/timers/request/HttpRequestAbortTaskImpl
      26: dup
      27: aload_1
      28: invokespecial #7                  // Method com/amazonaws/http/timers/request/HttpRequestAbortTaskImpl."<init>":(Lorg/apache/http/client/methods/HttpRequestBase;)V
      31: astore_3
      32: aload_0
      33: getfield      #4                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      36: aload_3
      37: iload_2
      38: i2l
      39: getstatic     #8                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      42: invokevirtual #9                  // Method java/util/concurrent/ScheduledThreadPoolExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      45: astore        4
      47: new           #10                 // class com/amazonaws/http/timers/request/HttpRequestAbortTaskTrackerImpl
      50: dup
      51: aload_3
      52: aload         4
      54: invokespecial #11                 // Method com/amazonaws/http/timers/request/HttpRequestAbortTaskTrackerImpl."<init>":(Lcom/amazonaws/http/timers/request/HttpRequestAbortTask;Ljava/util/concurrent/ScheduledFuture;)V
      57: areturn

  private boolean isTimeoutDisabled(int);
    Code:
       0: iload_1
       1: ifgt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  private synchronized void initializeExecutor();
    Code:
       0: aload_0
       1: getfield      #4                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #12                 // Method com/amazonaws/http/timers/TimeoutThreadPoolBuilder.buildDefaultTimeoutThreadPool:()Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: putfield      #4                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      14: return

  public synchronized void shutdown();
    Code:
       0: aload_0
       1: getfield      #4                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: ifnull        14
       7: aload_0
       8: getfield      #4                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: invokevirtual #13                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.shutdown:()V
      14: return

  public java.util.concurrent.ScheduledThreadPoolExecutor getExecutor();
    Code:
       0: aload_0
       1: getfield      #4                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: areturn
}
