Compiled from "AmazonWebServiceClient.java"
public abstract class com.amazonaws.AmazonWebServiceClient {
  public static final boolean LOGGING_AWS_REQUEST_METRIC;

  private static final java.lang.String AMAZON;

  private static final java.lang.String AWS;

  private static final org.apache.commons.logging.Log log;

  private volatile boolean isImmutable;

  protected volatile java.net.URI endpoint;

  private volatile java.lang.String signerRegionOverride;

  protected com.amazonaws.ClientConfiguration clientConfiguration;

  protected com.amazonaws.http.AmazonHttpClient client;

  protected final java.util.List<com.amazonaws.handlers.RequestHandler2> requestHandler2s;

  protected int timeOffset;

  private volatile com.amazonaws.auth.Signer signer;

  private volatile java.lang.String serviceName;

  private volatile java.lang.String endpointPrefix;

  public com.amazonaws.AmazonWebServiceClient(com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #2                  // Method "<init>":(Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;)V
       6: return

  public com.amazonaws.AmazonWebServiceClient(com.amazonaws.ClientConfiguration, com.amazonaws.metrics.RequestMetricCollector);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #3                  // Method "<init>":(Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;Z)V
       7: return

  protected com.amazonaws.AmazonWebServiceClient(com.amazonaws.ClientConfiguration, com.amazonaws.metrics.RequestMetricCollector, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field isImmutable:Z
       9: aload_0
      10: aload_1
      11: putfield      #6                  // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      14: aload_0
      15: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
      18: dup
      19: invokespecial #8                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      22: putfield      #9                  // Field requestHandler2s:Ljava/util/List;
      25: aload_0
      26: new           #10                 // class com/amazonaws/http/AmazonHttpClient
      29: dup
      30: aload_1
      31: aload_2
      32: iload_3
      33: invokespecial #11                 // Method com/amazonaws/http/AmazonHttpClient."<init>":(Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;Z)V
      36: putfield      #12                 // Field client:Lcom/amazonaws/http/AmazonHttpClient;
      39: return

  protected com.amazonaws.AmazonWebServiceClient(com.amazonaws.client.AwsSyncClientParams);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field isImmutable:Z
       9: aload_0
      10: aload_1
      11: invokevirtual #13                 // Method com/amazonaws/client/AwsSyncClientParams.getClientConfiguration:()Lcom/amazonaws/ClientConfiguration;
      14: putfield      #6                  // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      17: aload_0
      18: aload_1
      19: invokevirtual #14                 // Method com/amazonaws/client/AwsSyncClientParams.getRequestHandlers:()Ljava/util/List;
      22: putfield      #9                  // Field requestHandler2s:Ljava/util/List;
      25: aload_0
      26: new           #10                 // class com/amazonaws/http/AmazonHttpClient
      29: dup
      30: aload_0
      31: getfield      #6                  // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      34: aload_1
      35: invokevirtual #15                 // Method com/amazonaws/client/AwsSyncClientParams.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      38: aload_0
      39: invokevirtual #16                 // Method useStrictHostNameVerification:()Z
      42: invokespecial #11                 // Method com/amazonaws/http/AmazonHttpClient."<init>":(Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;Z)V
      45: putfield      #12                 // Field client:Lcom/amazonaws/http/AmazonHttpClient;
      48: return

  protected com.amazonaws.auth.Signer getSigner();
    Code:
       0: aload_0
       1: getfield      #17                 // Field signer:Lcom/amazonaws/auth/Signer;
       4: areturn

  public void setEndpoint(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_0
       5: aload_1
       6: invokespecial #19                 // Method toURI:(Ljava/lang/String;)Ljava/net/URI;
       9: astore_2
      10: aload_0
      11: aload_2
      12: aload_0
      13: getfield      #20                 // Field signerRegionOverride:Ljava/lang/String;
      16: iconst_0
      17: invokespecial #21                 // Method computeSignerByURI:(Ljava/net/URI;Ljava/lang/String;Z)Lcom/amazonaws/auth/Signer;
      20: astore_3
      21: aload_0
      22: dup
      23: astore        4
      25: monitorenter
      26: aload_0
      27: aload_2
      28: putfield      #22                 // Field endpoint:Ljava/net/URI;
      31: aload_0
      32: aload_3
      33: putfield      #17                 // Field signer:Lcom/amazonaws/auth/Signer;
      36: aload         4
      38: monitorexit
      39: goto          50
      42: astore        5
      44: aload         4
      46: monitorexit
      47: aload         5
      49: athrow
      50: return
    Exception table:
       from    to  target type
          26    39    42   any
          42    47    42   any

  private java.net.URI toURI(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
       5: invokestatic  #23                 // Method com/amazonaws/util/RuntimeHttpUtils.toUri:(Ljava/lang/String;Lcom/amazonaws/ClientConfiguration;)Ljava/net/URI;
       8: areturn

  public com.amazonaws.auth.Signer getSignerByURI(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #20                 // Field signerRegionOverride:Ljava/lang/String;
       6: iconst_1
       7: invokespecial #21                 // Method computeSignerByURI:(Ljava/net/URI;Ljava/lang/String;Z)Lcom/amazonaws/auth/Signer;
      10: areturn

  private com.amazonaws.auth.Signer computeSignerByURI(java.net.URI, java.lang.String, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #24                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #25                 // String Endpoint is not set. Use setEndpoint to set an endpoint before performing any request.
      10: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #27                 // Method getServiceNameIntern:()Ljava/lang/String;
      18: astore        4
      20: aload_1
      21: invokevirtual #28                 // Method java/net/URI.getHost:()Ljava/lang/String;
      24: aload         4
      26: invokestatic  #29                 // Method com/amazonaws/util/AwsHostNameUtils.parseRegionName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      29: astore        5
      31: aload_0
      32: aload         4
      34: aload         5
      36: aload_2
      37: iload_3
      38: invokespecial #30                 // Method computeSignerByServiceRegion:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/amazonaws/auth/Signer;
      41: areturn

  private com.amazonaws.auth.Signer computeSignerByServiceRegion(java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #31                 // Method com/amazonaws/ClientConfiguration.getSignerOverride:()Ljava/lang/String;
       7: astore        5
       9: aload         5
      11: ifnonnull     22
      14: aload_1
      15: aload_2
      16: invokestatic  #32                 // Method com/amazonaws/auth/SignerFactory.getSigner:(Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/auth/Signer;
      19: goto          28
      22: aload         5
      24: aload_1
      25: invokestatic  #33                 // Method com/amazonaws/auth/SignerFactory.getSignerByTypeAndService:(Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/auth/Signer;
      28: astore        6
      30: aload         6
      32: instanceof    #34                 // class com/amazonaws/auth/RegionAwareSigner
      35: ifeq          77
      38: aload         6
      40: checkcast     #34                 // class com/amazonaws/auth/RegionAwareSigner
      43: astore        7
      45: aload_3
      46: ifnull        60
      49: aload         7
      51: aload_3
      52: invokeinterface #35,  2           // InterfaceMethod com/amazonaws/auth/RegionAwareSigner.setRegionName:(Ljava/lang/String;)V
      57: goto          77
      60: aload_2
      61: ifnull        77
      64: iload         4
      66: ifeq          77
      69: aload         7
      71: aload_2
      72: invokeinterface #35,  2           // InterfaceMethod com/amazonaws/auth/RegionAwareSigner.setRegionName:(Ljava/lang/String;)V
      77: aload         6
      79: areturn

  public void setRegion(com.amazonaws.regions.Region) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_1
       5: ifnonnull     18
       8: new           #24                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #36                 // String No region provided
      14: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: invokevirtual #37                 // Method getEndpointPrefix:()Ljava/lang/String;
      22: astore_2
      23: aload_0
      24: invokevirtual #27                 // Method getServiceNameIntern:()Ljava/lang/String;
      27: astore_3
      28: new           #38                 // class com/amazonaws/internal/DefaultServiceEndpointBuilder
      31: dup
      32: aload_2
      33: aload_0
      34: getfield      #6                  // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      37: invokevirtual #39                 // Method com/amazonaws/ClientConfiguration.getProtocol:()Lcom/amazonaws/Protocol;
      40: invokevirtual #40                 // Method com/amazonaws/Protocol.toString:()Ljava/lang/String;
      43: invokespecial #41                 // Method com/amazonaws/internal/DefaultServiceEndpointBuilder."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      46: aload_1
      47: invokevirtual #42                 // Method com/amazonaws/internal/DefaultServiceEndpointBuilder.withRegion:(Lcom/amazonaws/regions/Region;)Lcom/amazonaws/internal/DefaultServiceEndpointBuilder;
      50: invokevirtual #43                 // Method com/amazonaws/internal/DefaultServiceEndpointBuilder.getServiceEndpoint:()Ljava/net/URI;
      53: astore        4
      55: aload_0
      56: aload_3
      57: aload_1
      58: invokevirtual #44                 // Method com/amazonaws/regions/Region.getName:()Ljava/lang/String;
      61: aload_0
      62: getfield      #20                 // Field signerRegionOverride:Ljava/lang/String;
      65: iconst_0
      66: invokespecial #30                 // Method computeSignerByServiceRegion:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/amazonaws/auth/Signer;
      69: astore        5
      71: aload_0
      72: dup
      73: astore        6
      75: monitorenter
      76: aload_0
      77: aload         4
      79: putfield      #22                 // Field endpoint:Ljava/net/URI;
      82: aload_0
      83: aload         5
      85: putfield      #17                 // Field signer:Lcom/amazonaws/auth/Signer;
      88: aload         6
      90: monitorexit
      91: goto          102
      94: astore        7
      96: aload         6
      98: monitorexit
      99: aload         7
     101: athrow
     102: return
    Exception table:
       from    to  target type
          76    91    94   any
          94    99    94   any

  public final void configureRegion(com.amazonaws.regions.Regions);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_1
       5: ifnonnull     18
       8: new           #24                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #36                 // String No region provided
      14: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokestatic  #45                 // Method com/amazonaws/regions/Region.getRegion:(Lcom/amazonaws/regions/Regions;)Lcom/amazonaws/regions/Region;
      23: invokevirtual #46                 // Method setRegion:(Lcom/amazonaws/regions/Region;)V
      26: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #12                 // Field client:Lcom/amazonaws/http/AmazonHttpClient;
       4: invokevirtual #47                 // Method com/amazonaws/http/AmazonHttpClient.shutdown:()V
       7: return

  public void addRequestHandler(com.amazonaws.handlers.RequestHandler);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_0
       5: getfield      #9                  // Field requestHandler2s:Ljava/util/List;
       8: aload_1
       9: invokestatic  #48                 // Method com/amazonaws/handlers/RequestHandler2.adapt:(Lcom/amazonaws/handlers/RequestHandler;)Lcom/amazonaws/handlers/RequestHandler2;
      12: invokeinterface #49,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: return

  public void addRequestHandler(com.amazonaws.handlers.RequestHandler2);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_0
       5: getfield      #9                  // Field requestHandler2s:Ljava/util/List;
       8: aload_1
       9: invokeinterface #49,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public void removeRequestHandler(com.amazonaws.handlers.RequestHandler);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_0
       5: getfield      #9                  // Field requestHandler2s:Ljava/util/List;
       8: aload_1
       9: invokestatic  #48                 // Method com/amazonaws/handlers/RequestHandler2.adapt:(Lcom/amazonaws/handlers/RequestHandler;)Lcom/amazonaws/handlers/RequestHandler2;
      12: invokeinterface #50,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: pop
      18: return

  public void removeRequestHandler(com.amazonaws.handlers.RequestHandler2);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_0
       5: getfield      #9                  // Field requestHandler2s:Ljava/util/List;
       8: aload_1
       9: invokeinterface #50,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      14: pop
      15: return

  protected final <T extends com.amazonaws.AmazonWebServiceRequest> T beforeMarshalling(T);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: getfield      #9                  // Field requestHandler2s:Ljava/util/List;
       6: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          42
      21: aload_3
      22: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #54                 // class com/amazonaws/handlers/RequestHandler2
      30: astore        4
      32: aload         4
      34: aload_2
      35: invokevirtual #55                 // Method com/amazonaws/handlers/RequestHandler2.beforeMarshalling:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      38: astore_2
      39: goto          12
      42: aload_2
      43: areturn

  protected com.amazonaws.http.ExecutionContext createExecutionContext(com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method isRequestMetricsEnabled:(Lcom/amazonaws/AmazonWebServiceRequest;)Z
       5: ifne          14
       8: invokestatic  #57                 // Method isProfilingEnabled:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_2
      20: new           #58                 // class com/amazonaws/http/ExecutionContext
      23: dup
      24: aload_0
      25: getfield      #9                  // Field requestHandler2s:Ljava/util/List;
      28: iload_2
      29: aload_0
      30: invokespecial #59                 // Method com/amazonaws/http/ExecutionContext."<init>":(Ljava/util/List;ZLcom/amazonaws/AmazonWebServiceClient;)V
      33: areturn

  protected final com.amazonaws.http.ExecutionContext createExecutionContext(com.amazonaws.Request<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #60,  1           // InterfaceMethod com/amazonaws/Request.getOriginalRequest:()Lcom/amazonaws/AmazonWebServiceRequest;
       7: invokevirtual #61                 // Method createExecutionContext:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/http/ExecutionContext;
      10: areturn

  protected final com.amazonaws.http.ExecutionContext createExecutionContext();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method isRMCEnabledAtClientOrSdkLevel:()Z
       4: ifne          13
       7: invokestatic  #57                 // Method isProfilingEnabled:()Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: istore_1
      19: new           #58                 // class com/amazonaws/http/ExecutionContext
      22: dup
      23: aload_0
      24: getfield      #9                  // Field requestHandler2s:Ljava/util/List;
      27: iload_1
      28: aload_0
      29: invokespecial #59                 // Method com/amazonaws/http/ExecutionContext."<init>":(Ljava/util/List;ZLcom/amazonaws/AmazonWebServiceClient;)V
      32: areturn

  protected static boolean isProfilingEnabled();
    Code:
       0: ldc           #63                 // String com.amazonaws.sdk.enableRuntimeProfiling
       2: invokestatic  #64                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected final boolean isRequestMetricsEnabled(com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method com/amazonaws/AmazonWebServiceRequest.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
       4: astore_2
       5: aload_2
       6: ifnull        18
       9: aload_2
      10: invokevirtual #66                 // Method com/amazonaws/metrics/RequestMetricCollector.isEnabled:()Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: invokespecial #62                 // Method isRMCEnabledAtClientOrSdkLevel:()Z
      22: ireturn

  private boolean isRMCEnabledAtClientOrSdkLevel();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method requestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #66                 // Method com/amazonaws/metrics/RequestMetricCollector.isEnabled:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void setTimeOffset(int);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_0
       5: iload_1
       6: putfield      #68                 // Field timeOffset:I
       9: return

  public com.amazonaws.AmazonWebServiceClient withTimeOffset(int);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #69                 // Method setTimeOffset:(I)V
       9: aload_0
      10: areturn

  public int getTimeOffset();
    Code:
       0: aload_0
       1: getfield      #68                 // Field timeOffset:I
       4: ireturn

  public com.amazonaws.metrics.RequestMetricCollector getRequestMetricsCollector();
    Code:
       0: aload_0
       1: getfield      #12                 // Field client:Lcom/amazonaws/http/AmazonHttpClient;
       4: invokevirtual #70                 // Method com/amazonaws/http/AmazonHttpClient.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
       7: areturn

  protected com.amazonaws.metrics.RequestMetricCollector requestMetricCollector();
    Code:
       0: aload_0
       1: getfield      #12                 // Field client:Lcom/amazonaws/http/AmazonHttpClient;
       4: invokevirtual #70                 // Method com/amazonaws/http/AmazonHttpClient.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
       7: astore_1
       8: aload_1
       9: ifnonnull     18
      12: invokestatic  #71                 // Method com/amazonaws/metrics/AwsSdkMetrics.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      15: goto          19
      18: aload_1
      19: areturn

  protected final com.amazonaws.metrics.RequestMetricCollector findRequestMetricCollector(com.amazonaws.Request<?>);
    Code:
       0: aload_1
       1: invokeinterface #60,  1           // InterfaceMethod com/amazonaws/Request.getOriginalRequest:()Lcom/amazonaws/AmazonWebServiceRequest;
       6: astore_2
       7: aload_2
       8: invokevirtual #65                 // Method com/amazonaws/AmazonWebServiceRequest.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      11: astore_3
      12: aload_3
      13: ifnull        18
      16: aload_3
      17: areturn
      18: aload_0
      19: invokevirtual #72                 // Method getRequestMetricsCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      22: astore_3
      23: aload_3
      24: ifnonnull     33
      27: invokestatic  #71                 // Method com/amazonaws/metrics/AwsSdkMetrics.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      30: goto          34
      33: aload_3
      34: areturn

  protected final void endClientExecution(com.amazonaws.util.AWSRequestMetrics, com.amazonaws.Request<?>, com.amazonaws.Response<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokevirtual #74                 // Method endClientExecution:(Lcom/amazonaws/util/AWSRequestMetrics;Lcom/amazonaws/Request;Lcom/amazonaws/Response;Z)V
       8: return

  protected final void endClientExecution(com.amazonaws.util.AWSRequestMetrics, com.amazonaws.Request<?>, com.amazonaws.Response<?>, boolean);
    Code:
       0: aload_2
       1: ifnull        37
       4: aload_1
       5: getstatic     #75                 // Field com/amazonaws/util/AWSRequestMetrics$Field.ClientExecuteTime:Lcom/amazonaws/util/AWSRequestMetrics$Field;
       8: invokevirtual #76                 // Method com/amazonaws/util/AWSRequestMetrics.endEvent:(Lcom/amazonaws/metrics/MetricType;)V
      11: aload_1
      12: invokevirtual #77                 // Method com/amazonaws/util/AWSRequestMetrics.getTimingInfo:()Lcom/amazonaws/util/TimingInfo;
      15: invokevirtual #78                 // Method com/amazonaws/util/TimingInfo.endTiming:()Lcom/amazonaws/util/TimingInfo;
      18: pop
      19: aload_0
      20: aload_2
      21: invokevirtual #79                 // Method findRequestMetricCollector:(Lcom/amazonaws/Request;)Lcom/amazonaws/metrics/RequestMetricCollector;
      24: astore        5
      26: aload         5
      28: aload_2
      29: aload_3
      30: invokevirtual #80                 // Method com/amazonaws/metrics/RequestMetricCollector.collectMetrics:(Lcom/amazonaws/Request;Lcom/amazonaws/Response;)V
      33: aload_1
      34: invokevirtual #81                 // Method com/amazonaws/util/AWSRequestMetrics.log:()V
      37: return

  protected java.lang.String getServiceAbbreviation();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getServiceNameIntern:()Ljava/lang/String;
       4: areturn

  public java.lang.String getServiceName();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getServiceNameIntern:()Ljava/lang/String;
       4: areturn

  public java.lang.String getEndpointPrefix();
    Code:
       0: aload_0
       1: getfield      #82                 // Field endpointPrefix:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #82                 // Field endpointPrefix:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: invokespecial #83                 // Method getHttpClientName:()Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: invokestatic  #84                 // Method com/amazonaws/ServiceNameFactory.getServiceNameInRegionMetadata:(Ljava/lang/String;)Ljava/lang/String;
      21: astore_2
      22: aload_0
      23: dup
      24: astore_3
      25: monitorenter
      26: aload_0
      27: getfield      #82                 // Field endpointPrefix:Ljava/lang/String;
      30: ifnull        40
      33: aload_0
      34: getfield      #82                 // Field endpointPrefix:Ljava/lang/String;
      37: aload_3
      38: monitorexit
      39: areturn
      40: aload_2
      41: ifnull        53
      44: aload_0
      45: aload_2
      46: dup_x1
      47: putfield      #82                 // Field endpointPrefix:Ljava/lang/String;
      50: aload_3
      51: monitorexit
      52: areturn
      53: aload_0
      54: aload_0
      55: invokevirtual #27                 // Method getServiceNameIntern:()Ljava/lang/String;
      58: dup_x1
      59: putfield      #82                 // Field endpointPrefix:Ljava/lang/String;
      62: aload_3
      63: monitorexit
      64: areturn
      65: astore        4
      67: aload_3
      68: monitorexit
      69: aload         4
      71: athrow
    Exception table:
       from    to  target type
          26    39    65   any
          40    52    65   any
          53    64    65   any
          65    69    65   any

  protected void setEndpointPrefix(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #24                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #85                 // String The parameter endpointPrefix must be specified!
      10: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #82                 // Field endpointPrefix:Ljava/lang/String;
      19: return

  protected java.lang.String getServiceNameIntern();
    Code:
       0: aload_0
       1: getfield      #86                 // Field serviceName:Ljava/lang/String;
       4: ifnonnull     40
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #86                 // Field serviceName:Ljava/lang/String;
      15: ifnonnull     30
      18: aload_0
      19: aload_0
      20: invokespecial #87                 // Method computeServiceName:()Ljava/lang/String;
      23: dup_x1
      24: putfield      #86                 // Field serviceName:Ljava/lang/String;
      27: aload_1
      28: monitorexit
      29: areturn
      30: aload_1
      31: monitorexit
      32: goto          40
      35: astore_2
      36: aload_1
      37: monitorexit
      38: aload_2
      39: athrow
      40: aload_0
      41: getfield      #86                 // Field serviceName:Ljava/lang/String;
      44: areturn
    Exception table:
       from    to  target type
          11    29    35   any
          30    32    35   any
          35    38    35   any

  public final void setServiceNameIntern(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #24                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #88                 // String The parameter serviceName must be specified!
      10: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #86                 // Field serviceName:Ljava/lang/String;
      19: return

  private java.lang.String computeServiceName();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method getHttpClientName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: invokestatic  #89                 // Method com/amazonaws/ServiceNameFactory.getServiceName:(Ljava/lang/String;)Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: ifnull        16
      14: aload_2
      15: areturn
      16: aload_1
      17: ldc           #90                 // String JavaClient
      19: invokevirtual #91                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      22: istore_3
      23: iload_3
      24: iconst_m1
      25: if_icmpne     67
      28: aload_1
      29: ldc           #92                 // String Client
      31: invokevirtual #91                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      34: istore_3
      35: iload_3
      36: iconst_m1
      37: if_icmpne     67
      40: new           #93                 // class java/lang/IllegalStateException
      43: dup
      44: new           #94                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #96                 // String Unrecognized suffix for the AWS http client class name
      53: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #99                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_1
      68: ldc           #100                // String Amazon
      70: invokevirtual #91                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      73: istore        4
      75: iload         4
      77: iconst_m1
      78: if_icmpne     132
      81: aload_1
      82: ldc           #101                // String AWS
      84: invokevirtual #91                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      87: istore        4
      89: iload         4
      91: iconst_m1
      92: if_icmpne     122
      95: new           #93                 // class java/lang/IllegalStateException
      98: dup
      99: new           #94                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #102                // String Unrecognized prefix for the AWS http client class name
     108: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_1
     112: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokespecial #99                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: ldc           #101                // String AWS
     124: invokevirtual #103                // Method java/lang/String.length:()I
     127: istore        5
     129: goto          139
     132: ldc           #100                // String Amazon
     134: invokevirtual #103                // Method java/lang/String.length:()I
     137: istore        5
     139: iload         4
     141: iload_3
     142: if_icmplt     172
     145: new           #93                 // class java/lang/IllegalStateException
     148: dup
     149: new           #94                 // class java/lang/StringBuilder
     152: dup
     153: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
     156: ldc           #104                // String Unrecognized AWS http client class name
     158: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_1
     162: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: invokespecial #99                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     171: athrow
     172: aload_1
     173: iload         4
     175: iload         5
     177: iadd
     178: iload_3
     179: invokevirtual #105                // Method java/lang/String.substring:(II)Ljava/lang/String;
     182: astore        6
     184: aload         6
     186: invokestatic  #106                // Method com/amazonaws/util/StringUtils.lowerCase:(Ljava/lang/String;)Ljava/lang/String;
     189: areturn

  private java.lang.String getHttpClientName();
    Code:
       0: ldc           #73                 // class com/amazonaws/AmazonWebServiceClient
       2: aload_0
       3: invokestatic  #107                // Method com/amazonaws/util/Classes.childClassOf:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Class;
       6: astore_1
       7: aload_1
       8: invokevirtual #108                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: areturn

  public final java.lang.String getSignerRegionOverride();
    Code:
       0: aload_0
       1: getfield      #20                 // Field signerRegionOverride:Ljava/lang/String;
       4: areturn

  public final void setSignerRegionOverride(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkMutability:()V
       4: aload_0
       5: aload_0
       6: getfield      #22                 // Field endpoint:Ljava/net/URI;
       9: aload_1
      10: iconst_1
      11: invokespecial #21                 // Method computeSignerByURI:(Ljava/net/URI;Ljava/lang/String;Z)Lcom/amazonaws/auth/Signer;
      14: astore_2
      15: aload_0
      16: dup
      17: astore_3
      18: monitorenter
      19: aload_0
      20: aload_2
      21: putfield      #17                 // Field signer:Lcom/amazonaws/auth/Signer;
      24: aload_0
      25: aload_1
      26: putfield      #20                 // Field signerRegionOverride:Ljava/lang/String;
      29: aload_3
      30: monitorexit
      31: goto          41
      34: astore        4
      36: aload_3
      37: monitorexit
      38: aload         4
      40: athrow
      41: return
    Exception table:
       from    to  target type
          19    31    34   any
          34    38    34   any

  public <T extends com.amazonaws.AmazonWebServiceClient> T withRegion(com.amazonaws.regions.Region);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setRegion:(Lcom/amazonaws/regions/Region;)V
       5: aload_0
       6: astore_2
       7: aload_2
       8: areturn

  public <T extends com.amazonaws.AmazonWebServiceClient> T withRegion(com.amazonaws.regions.Regions);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method configureRegion:(Lcom/amazonaws/regions/Regions;)V
       5: aload_0
       6: astore_2
       7: aload_2
       8: areturn

  public <T extends com.amazonaws.AmazonWebServiceClient> T withEndpoint(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #110                // Method setEndpoint:(Ljava/lang/String;)V
       5: aload_0
       6: astore_2
       7: aload_2
       8: areturn

  public final void makeImmutable();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field isImmutable:Z
       5: return

  protected final void checkMutability();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isImmutable:Z
       4: ifeq          17
       7: new           #111                // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #112                // String Client is immutable when created with the builder.
      13: invokespecial #113                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  protected boolean useStrictHostNameVerification();
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: ldc           #73                 // class com/amazonaws/AmazonWebServiceClient
       2: invokestatic  #114                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #115                // Field log:Lorg/apache/commons/logging/Log;
       8: new           #116                // class com/amazonaws/log/CommonsLogFactory
      11: dup
      12: invokespecial #117                // Method com/amazonaws/log/CommonsLogFactory."<init>":()V
      15: invokestatic  #118                // Method com/amazonaws/log/InternalLogFactory.configureFactory:(Lcom/amazonaws/log/InternalLogFactory;)Z
      18: istore_0
      19: getstatic     #115                // Field log:Lorg/apache/commons/logging/Log;
      22: invokeinterface #119,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      27: ifeq          57
      30: getstatic     #115                // Field log:Lorg/apache/commons/logging/Log;
      33: new           #94                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #120                // String Internal logging succesfully configured to commons logger:
      42: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: iload_0
      46: invokevirtual #121                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      49: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #122,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      57: return
}
