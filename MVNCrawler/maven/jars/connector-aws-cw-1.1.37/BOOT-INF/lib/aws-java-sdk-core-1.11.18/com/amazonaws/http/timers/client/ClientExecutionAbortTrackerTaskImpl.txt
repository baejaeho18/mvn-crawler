Compiled from "ClientExecutionAbortTrackerTaskImpl.java"
public class com.amazonaws.http.timers.client.ClientExecutionAbortTrackerTaskImpl implements com.amazonaws.http.timers.client.ClientExecutionAbortTrackerTask {
  private final com.amazonaws.http.timers.client.ClientExecutionAbortTask task;

  private final java.util.concurrent.ScheduledFuture<?> future;

  public com.amazonaws.http.timers.client.ClientExecutionAbortTrackerTaskImpl(com.amazonaws.http.timers.client.ClientExecutionAbortTask, java.util.concurrent.ScheduledFuture<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String task
       8: invokestatic  #3                  // Method com/amazonaws/util/ValidationUtils.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class com/amazonaws/http/timers/client/ClientExecutionAbortTask
      14: putfield      #5                  // Field task:Lcom/amazonaws/http/timers/client/ClientExecutionAbortTask;
      17: aload_0
      18: aload_2
      19: ldc           #6                  // String future
      21: invokestatic  #3                  // Method com/amazonaws/util/ValidationUtils.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #7                  // class java/util/concurrent/ScheduledFuture
      27: putfield      #8                  // Field future:Ljava/util/concurrent/ScheduledFuture;
      30: return

  public void setCurrentHttpRequest(org.apache.http.client.methods.HttpRequestBase);
    Code:
       0: aload_0
       1: getfield      #5                  // Field task:Lcom/amazonaws/http/timers/client/ClientExecutionAbortTask;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod com/amazonaws/http/timers/client/ClientExecutionAbortTask.setCurrentHttpRequest:(Lorg/apache/http/client/methods/HttpRequestBase;)V
      10: return

  public boolean hasTimeoutExpired();
    Code:
       0: aload_0
       1: getfield      #5                  // Field task:Lcom/amazonaws/http/timers/client/ClientExecutionAbortTask;
       4: invokeinterface #10,  1           // InterfaceMethod com/amazonaws/http/timers/client/ClientExecutionAbortTask.hasClientExecutionAborted:()Z
       9: ireturn

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field task:Lcom/amazonaws/http/timers/client/ClientExecutionAbortTask;
       4: invokeinterface #11,  1           // InterfaceMethod com/amazonaws/http/timers/client/ClientExecutionAbortTask.isEnabled:()Z
       9: ireturn

  public void cancelTask();
    Code:
       0: aload_0
       1: getfield      #8                  // Field future:Ljava/util/concurrent/ScheduledFuture;
       4: iconst_0
       5: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      10: pop
      11: return
}
