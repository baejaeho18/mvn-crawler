Compiled from "ProgressInputStream.java"
public abstract class com.amazonaws.event.ProgressInputStream extends com.amazonaws.internal.SdkFilterInputStream {
  private static final int DEFAULT_NOTIFICATION_THRESHOLD;

  private final com.amazonaws.event.ProgressListener listener;

  private final int notifyThresHold;

  private int unnotifiedByteCount;

  private boolean hasBeenRead;

  private boolean doneEOF;

  private long notifiedByteCount;

  public static java.io.InputStream inputStreamForRequest(java.io.InputStream, com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aload_0
       5: goto          20
       8: new           #1                  // class com/amazonaws/event/RequestProgressInputStream
      11: dup
      12: aload_0
      13: aload_1
      14: invokevirtual #2                  // Method com/amazonaws/AmazonWebServiceRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
      17: invokespecial #3                  // Method com/amazonaws/event/RequestProgressInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/event/ProgressListener;)V
      20: areturn

  public static java.io.InputStream inputStreamForResponse(java.io.InputStream, com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aload_0
       5: goto          20
       8: new           #4                  // class com/amazonaws/event/ResponseProgressInputStream
      11: dup
      12: aload_0
      13: aload_1
      14: invokevirtual #2                  // Method com/amazonaws/AmazonWebServiceRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
      17: invokespecial #5                  // Method com/amazonaws/event/ResponseProgressInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/event/ProgressListener;)V
      20: areturn

  public com.amazonaws.event.ProgressInputStream(java.io.InputStream, com.amazonaws.event.ProgressListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        8192
       6: invokespecial #7                  // Method "<init>":(Ljava/io/InputStream;Lcom/amazonaws/event/ProgressListener;I)V
       9: return

  public com.amazonaws.event.ProgressInputStream(java.io.InputStream, com.amazonaws.event.ProgressListener, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method com/amazonaws/internal/SdkFilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_1
       6: ifnull        13
       9: aload_2
      10: ifnonnull     21
      13: new           #9                  // class java/lang/IllegalArgumentException
      16: dup
      17: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":()V
      20: athrow
      21: aload_0
      22: iload_3
      23: putfield      #11                 // Field notifyThresHold:I
      26: aload_0
      27: aload_2
      28: putfield      #12                 // Field listener:Lcom/amazonaws/event/ProgressListener;
      31: return

  protected void onFirstRead();
    Code:
       0: return

  protected void onEOF();
    Code:
       0: return

  protected void onClose();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method eof:()V
       4: return

  protected void onReset();
    Code:
       0: return

  protected void onNotifyBytesRead();
    Code:
       0: return

  private void onBytesRead(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #14                 // Field unnotifiedByteCount:I
       5: iload_1
       6: iadd
       7: putfield      #14                 // Field unnotifiedByteCount:I
      10: aload_0
      11: getfield      #14                 // Field unnotifiedByteCount:I
      14: aload_0
      15: getfield      #11                 // Field notifyThresHold:I
      18: if_icmplt     44
      21: aload_0
      22: invokevirtual #15                 // Method onNotifyBytesRead:()V
      25: aload_0
      26: dup
      27: getfield      #16                 // Field notifiedByteCount:J
      30: aload_0
      31: getfield      #14                 // Field unnotifiedByteCount:I
      34: i2l
      35: ladd
      36: putfield      #16                 // Field notifiedByteCount:J
      39: aload_0
      40: iconst_0
      41: putfield      #14                 // Field unnotifiedByteCount:I
      44: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field hasBeenRead:Z
       4: ifne          16
       7: aload_0
       8: invokevirtual #18                 // Method onFirstRead:()V
      11: aload_0
      12: iconst_1
      13: putfield      #17                 // Field hasBeenRead:Z
      16: aload_0
      17: invokespecial #19                 // Method com/amazonaws/internal/SdkFilterInputStream.read:()I
      20: istore_1
      21: iload_1
      22: iconst_m1
      23: if_icmpne     33
      26: aload_0
      27: invokespecial #13                 // Method eof:()V
      30: goto          38
      33: aload_0
      34: iconst_1
      35: invokespecial #20                 // Method onBytesRead:(I)V
      38: iload_1
      39: ireturn

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #21                 // Method com/amazonaws/internal/SdkFilterInputStream.reset:()V
       4: aload_0
       5: invokevirtual #22                 // Method onReset:()V
       8: aload_0
       9: iconst_0
      10: putfield      #14                 // Field unnotifiedByteCount:I
      13: aload_0
      14: lconst_0
      15: putfield      #16                 // Field notifiedByteCount:J
      18: return

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field hasBeenRead:Z
       4: ifne          16
       7: aload_0
       8: invokevirtual #18                 // Method onFirstRead:()V
      11: aload_0
      12: iconst_1
      13: putfield      #17                 // Field hasBeenRead:Z
      16: aload_0
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokespecial #23                 // Method com/amazonaws/internal/SdkFilterInputStream.read:([BII)I
      23: istore        4
      25: iload         4
      27: iconst_m1
      28: if_icmpne     38
      31: aload_0
      32: invokespecial #13                 // Method eof:()V
      35: goto          44
      38: aload_0
      39: iload         4
      41: invokespecial #20                 // Method onBytesRead:(I)V
      44: iload         4
      46: ireturn

  private void eof();
    Code:
       0: aload_0
       1: getfield      #24                 // Field doneEOF:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #25                 // Method onEOF:()V
      12: aload_0
      13: iconst_0
      14: putfield      #14                 // Field unnotifiedByteCount:I
      17: aload_0
      18: iconst_1
      19: putfield      #24                 // Field doneEOF:Z
      22: return

  public final java.io.InputStream getWrappedInputStream();
    Code:
       0: aload_0
       1: getfield      #26                 // Field in:Ljava/io/InputStream;
       4: areturn

  protected final int getUnnotifiedByteCount();
    Code:
       0: aload_0
       1: getfield      #14                 // Field unnotifiedByteCount:I
       4: ireturn

  protected final long getNotifiedByteCount();
    Code:
       0: aload_0
       1: getfield      #16                 // Field notifiedByteCount:J
       4: lreturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method onClose:()V
       4: aload_0
       5: invokespecial #28                 // Method com/amazonaws/internal/SdkFilterInputStream.close:()V
       8: return

  public final com.amazonaws.event.ProgressListener getListener();
    Code:
       0: aload_0
       1: getfield      #12                 // Field listener:Lcom/amazonaws/event/ProgressListener;
       4: areturn
}
