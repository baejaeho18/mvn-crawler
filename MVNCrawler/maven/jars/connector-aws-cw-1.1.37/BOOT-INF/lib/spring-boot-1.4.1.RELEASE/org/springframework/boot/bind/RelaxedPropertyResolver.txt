Compiled from "RelaxedPropertyResolver.java"
public class org.springframework.boot.bind.RelaxedPropertyResolver implements org.springframework.core.env.PropertyResolver {
  private final org.springframework.core.env.PropertyResolver resolver;

  private final java.lang.String prefix;

  public org.springframework.boot.bind.RelaxedPropertyResolver(org.springframework.core.env.PropertyResolver);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;)V
       6: return

  public org.springframework.boot.bind.RelaxedPropertyResolver(org.springframework.core.env.PropertyResolver, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #3                  // String PropertyResolver must not be null
       7: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #5                  // Field resolver:Lorg/springframework/core/env/PropertyResolver;
      15: aload_0
      16: aload_2
      17: ifnonnull     25
      20: ldc           #6                  // String
      22: goto          26
      25: aload_2
      26: putfield      #7                  // Field prefix:Ljava/lang/String;
      29: return

  public java.lang.String getRequiredProperty(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #8                  // class java/lang/String
       4: invokevirtual #9                  // Method getRequiredProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       7: checkcast     #8                  // class java/lang/String
      10: areturn

  public <T> T getRequiredProperty(java.lang.String, java.lang.Class<T>) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       6: astore_3
       7: aload_3
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #11                 // String required key [%s] not found
      18: iconst_1
      19: anewarray     #12                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: invokestatic  #14                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      32: aload_3
      33: areturn

  public java.lang.String getProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #8                  // class java/lang/String
       4: aconst_null
       5: invokevirtual #15                 // Method getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #8                  // class java/lang/String
      11: areturn

  public java.lang.String getProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #8                  // class java/lang/String
       4: aload_2
       5: invokevirtual #15                 // Method getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #8                  // class java/lang/String
      11: areturn

  public <T> T getProperty(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #15                 // Method getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public <T> T getProperty(java.lang.String, java.lang.Class<T>, T);
    Code:
       0: new           #16                 // class org/springframework/boot/bind/RelaxedNames
       3: dup
       4: aload_0
       5: getfield      #7                  // Field prefix:Ljava/lang/String;
       8: invokespecial #17                 // Method org/springframework/boot/bind/RelaxedNames."<init>":(Ljava/lang/String;)V
      11: astore        4
      13: new           #16                 // class org/springframework/boot/bind/RelaxedNames
      16: dup
      17: aload_1
      18: invokespecial #17                 // Method org/springframework/boot/bind/RelaxedNames."<init>":(Ljava/lang/String;)V
      21: astore        5
      23: aload         4
      25: invokevirtual #18                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
      28: astore        6
      30: aload         6
      32: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          150
      40: aload         6
      42: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #8                  // class java/lang/String
      50: astore        7
      52: aload         5
      54: invokevirtual #18                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
      57: astore        8
      59: aload         8
      61: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          147
      69: aload         8
      71: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #8                  // class java/lang/String
      79: astore        9
      81: aload_0
      82: getfield      #5                  // Field resolver:Lorg/springframework/core/env/PropertyResolver;
      85: new           #21                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      92: aload         7
      94: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload         9
      99: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokeinterface #25,  2           // InterfaceMethod org/springframework/core/env/PropertyResolver.containsProperty:(Ljava/lang/String;)Z
     110: ifeq          144
     113: aload_0
     114: getfield      #5                  // Field resolver:Lorg/springframework/core/env/PropertyResolver;
     117: new           #21                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     124: aload         7
     126: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload         9
     131: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: aload_2
     138: invokeinterface #26,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
     143: areturn
     144: goto          59
     147: goto          30
     150: aload_3
     151: areturn

  public <T> java.lang.Class<T> getPropertyAsClass(java.lang.String, java.lang.Class<T>);
    Code:
       0: new           #16                 // class org/springframework/boot/bind/RelaxedNames
       3: dup
       4: aload_0
       5: getfield      #7                  // Field prefix:Ljava/lang/String;
       8: invokespecial #17                 // Method org/springframework/boot/bind/RelaxedNames."<init>":(Ljava/lang/String;)V
      11: astore_3
      12: new           #16                 // class org/springframework/boot/bind/RelaxedNames
      15: dup
      16: aload_1
      17: invokespecial #17                 // Method org/springframework/boot/bind/RelaxedNames."<init>":(Ljava/lang/String;)V
      20: astore        4
      22: aload_3
      23: invokevirtual #18                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
      26: astore        5
      28: aload         5
      30: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          148
      38: aload         5
      40: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #8                  // class java/lang/String
      48: astore        6
      50: aload         4
      52: invokevirtual #18                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
      55: astore        7
      57: aload         7
      59: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          145
      67: aload         7
      69: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #8                  // class java/lang/String
      77: astore        8
      79: aload_0
      80: getfield      #5                  // Field resolver:Lorg/springframework/core/env/PropertyResolver;
      83: new           #21                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      90: aload         6
      92: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload         8
      97: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokeinterface #25,  2           // InterfaceMethod org/springframework/core/env/PropertyResolver.containsProperty:(Ljava/lang/String;)Z
     108: ifeq          142
     111: aload_0
     112: getfield      #5                  // Field resolver:Lorg/springframework/core/env/PropertyResolver;
     115: new           #21                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     122: aload         6
     124: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload         8
     129: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: aload_2
     136: invokeinterface #27,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getPropertyAsClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
     141: areturn
     142: goto          57
     145: goto          28
     148: aconst_null
     149: areturn

  public boolean containsProperty(java.lang.String);
    Code:
       0: new           #16                 // class org/springframework/boot/bind/RelaxedNames
       3: dup
       4: aload_0
       5: getfield      #7                  // Field prefix:Ljava/lang/String;
       8: invokespecial #17                 // Method org/springframework/boot/bind/RelaxedNames."<init>":(Ljava/lang/String;)V
      11: astore_2
      12: new           #16                 // class org/springframework/boot/bind/RelaxedNames
      15: dup
      16: aload_1
      17: invokespecial #17                 // Method org/springframework/boot/bind/RelaxedNames."<init>":(Ljava/lang/String;)V
      20: astore_3
      21: aload_2
      22: invokevirtual #18                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          117
      37: aload         4
      39: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #8                  // class java/lang/String
      47: astore        5
      49: aload_3
      50: invokevirtual #18                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
      53: astore        6
      55: aload         6
      57: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          114
      65: aload         6
      67: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #8                  // class java/lang/String
      75: astore        7
      77: aload_0
      78: getfield      #5                  // Field resolver:Lorg/springframework/core/env/PropertyResolver;
      81: new           #21                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      88: aload         5
      90: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload         7
      95: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokeinterface #25,  2           // InterfaceMethod org/springframework/core/env/PropertyResolver.containsProperty:(Ljava/lang/String;)Z
     106: ifeq          111
     109: iconst_1
     110: ireturn
     111: goto          55
     114: goto          27
     117: iconst_0
     118: ireturn

  public java.lang.String resolvePlaceholders(java.lang.String);
    Code:
       0: new           #28                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #29                 // String Unable to resolve placeholders with relaxed properties
       6: invokespecial #30                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String resolveRequiredPlaceholders(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: new           #28                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #29                 // String Unable to resolve placeholders with relaxed properties
       6: invokespecial #30                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.Map<java.lang.String, java.lang.Object> getSubProperties(java.lang.String);
    Code:
       0: ldc           #31                 // class org/springframework/core/env/ConfigurableEnvironment
       2: aload_0
       3: getfield      #5                  // Field resolver:Lorg/springframework/core/env/PropertyResolver;
       6: ldc           #32                 // String SubProperties not available.
       8: invokestatic  #33                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: getfield      #5                  // Field resolver:Lorg/springframework/core/env/PropertyResolver;
      15: checkcast     #31                 // class org/springframework/core/env/ConfigurableEnvironment
      18: astore_2
      19: aload_2
      20: invokeinterface #34,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      25: aload_0
      26: getfield      #7                  // Field prefix:Ljava/lang/String;
      29: aload_1
      30: invokestatic  #35                 // Method org/springframework/boot/bind/PropertySourceUtils.getSubProperties:(Lorg/springframework/core/env/PropertySources;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
      33: areturn
}
