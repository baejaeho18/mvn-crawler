Compiled from "LogbackLoggingSystem.java"
public class org.springframework.boot.logging.logback.LogbackLoggingSystem extends org.springframework.boot.logging.Slf4JLoggingSystem {
  private static final java.lang.String CONFIGURATION_FILE_PROPERTY;

  private static final java.util.Map<org.springframework.boot.logging.LogLevel, ch.qos.logback.classic.Level> LEVELS;

  private static final ch.qos.logback.classic.turbo.TurboFilter FILTER;

  public org.springframework.boot.logging.logback.LogbackLoggingSystem(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/boot/logging/Slf4JLoggingSystem."<init>":(Ljava/lang/ClassLoader;)V
       5: return

  protected java.lang.String[] getStandardConfigLocations();
    Code:
       0: iconst_4
       1: anewarray     #3                  // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #4                  // String logback-test.groovy
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #5                  // String logback-test.xml
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #6                  // String logback.groovy
      18: aastore
      19: dup
      20: iconst_3
      21: ldc           #7                  // String logback.xml
      23: aastore
      24: areturn

  public void beforeInitialize();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokespecial #8                  // Method isAlreadyInitialized:(Lch/qos/logback/classic/LoggerContext;)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokespecial #9                  // Method org/springframework/boot/logging/Slf4JLoggingSystem.beforeInitialize:()V
      18: aload_1
      19: invokevirtual #10                 // Method ch/qos/logback/classic/LoggerContext.getTurboFilterList:()Lch/qos/logback/classic/spi/TurboFilterList;
      22: getstatic     #11                 // Field FILTER:Lch/qos/logback/classic/turbo/TurboFilter;
      25: invokevirtual #12                 // Method ch/qos/logback/classic/spi/TurboFilterList.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: invokespecial #13                 // Method configureJBossLoggingToUseSlf4j:()V
      33: return

  public void initialize(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: astore        4
       6: aload_0
       7: aload         4
       9: invokespecial #8                  // Method isAlreadyInitialized:(Lch/qos/logback/classic/LoggerContext;)Z
      12: ifeq          16
      15: return
      16: aload         4
      18: invokevirtual #10                 // Method ch/qos/logback/classic/LoggerContext.getTurboFilterList:()Lch/qos/logback/classic/spi/TurboFilterList;
      21: getstatic     #11                 // Field FILTER:Lch/qos/logback/classic/turbo/TurboFilter;
      24: invokevirtual #14                 // Method ch/qos/logback/classic/spi/TurboFilterList.remove:(Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokespecial #15                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      35: aload_0
      36: aload         4
      38: invokespecial #16                 // Method markAsInitialized:(Lch/qos/logback/classic/LoggerContext;)V
      41: ldc           #18                 // String logback.configurationFile
      43: invokestatic  #19                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      46: invokestatic  #20                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      49: ifeq          66
      52: aload_0
      53: ldc           #17                 // class org/springframework/boot/logging/logback/LogbackLoggingSystem
      55: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      58: invokespecial #22                 // Method getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
      61: ldc           #23                 // String Ignoring \'logback.configurationFile\' system property. Please use \'logging.config\' instead.
      63: invokevirtual #24                 // Method ch/qos/logback/classic/Logger.warn:(Ljava/lang/String;)V
      66: return

  protected void loadDefaults(org.springframework.boot.logging.LoggingInitializationContext, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokespecial #25                 // Method stopAndReset:(Lch/qos/logback/classic/LoggerContext;)V
      10: new           #26                 // class org/springframework/boot/logging/logback/LogbackConfigurator
      13: dup
      14: aload_3
      15: invokespecial #27                 // Method org/springframework/boot/logging/logback/LogbackConfigurator."<init>":(Lch/qos/logback/classic/LoggerContext;)V
      18: astore        4
      20: aload_3
      21: ldc           #28                 // String LOG_LEVEL_PATTERN
      23: aload_1
      24: invokevirtual #29                 // Method org/springframework/boot/logging/LoggingInitializationContext.getEnvironment:()Lorg/springframework/core/env/Environment;
      27: ldc           #30                 // String ${logging.pattern.level:${LOG_LEVEL_PATTERN:%5p}}
      29: invokeinterface #31,  2           // InterfaceMethod org/springframework/core/env/Environment.resolvePlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      34: invokevirtual #32                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
      37: new           #33                 // class org/springframework/boot/logging/logback/DefaultLogbackConfiguration
      40: dup
      41: aload_1
      42: aload_2
      43: invokespecial #34                 // Method org/springframework/boot/logging/logback/DefaultLogbackConfiguration."<init>":(Lorg/springframework/boot/logging/LoggingInitializationContext;Lorg/springframework/boot/logging/LogFile;)V
      46: aload         4
      48: invokevirtual #35                 // Method org/springframework/boot/logging/logback/DefaultLogbackConfiguration.apply:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)V
      51: aload_3
      52: iconst_1
      53: invokevirtual #36                 // Method ch/qos/logback/classic/LoggerContext.setPackagingDataEnabled:(Z)V
      56: return

  protected void loadConfiguration(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #37                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.loadConfiguration:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
       7: aload_0
       8: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
      11: astore        4
      13: aload_0
      14: aload         4
      16: invokespecial #25                 // Method stopAndReset:(Lch/qos/logback/classic/LoggerContext;)V
      19: aload_0
      20: aload_1
      21: aload         4
      23: aload_2
      24: invokestatic  #38                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      27: invokespecial #39                 // Method configureByResourceUrl:(Lorg/springframework/boot/logging/LoggingInitializationContext;Lch/qos/logback/classic/LoggerContext;Ljava/net/URL;)V
      30: goto          64
      33: astore        5
      35: new           #41                 // class java/lang/IllegalStateException
      38: dup
      39: new           #42                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #44                 // String Could not initialize Logback logging from
      48: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: aload         5
      60: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: athrow
      64: aload         4
      66: invokevirtual #48                 // Method ch/qos/logback/classic/LoggerContext.getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      69: invokeinterface #49,  1           // InterfaceMethod ch/qos/logback/core/status/StatusManager.getCopyOfStatusList:()Ljava/util/List;
      74: astore        5
      76: new           #42                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      83: astore        6
      85: aload         5
      87: invokeinterface #50,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      92: astore        7
      94: aload         7
      96: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          169
     104: aload         7
     106: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #53                 // class ch/qos/logback/core/status/Status
     114: astore        8
     116: aload         8
     118: invokeinterface #54,  1           // InterfaceMethod ch/qos/logback/core/status/Status.getLevel:()I
     123: iconst_2
     124: if_icmpne     166
     127: aload         6
     129: aload         6
     131: invokevirtual #55                 // Method java/lang/StringBuilder.length:()I
     134: ifle          149
     137: ldc           #56                 // String %n
     139: iconst_0
     140: anewarray     #57                 // class java/lang/Object
     143: invokestatic  #58                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     146: goto          151
     149: ldc           #59                 // String
     151: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: pop
     155: aload         6
     157: aload         8
     159: invokevirtual #60                 // Method java/lang/Object.toString:()Ljava/lang/String;
     162: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: pop
     166: goto          94
     169: aload         6
     171: invokevirtual #55                 // Method java/lang/StringBuilder.length:()I
     174: ifle          199
     177: new           #41                 // class java/lang/IllegalStateException
     180: dup
     181: ldc           #61                 // String Logback configuration error detected: %n%s
     183: iconst_1
     184: anewarray     #57                 // class java/lang/Object
     187: dup
     188: iconst_0
     189: aload         6
     191: aastore
     192: invokestatic  #58                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     195: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     198: athrow
     199: return
    Exception table:
       from    to  target type
          19    30    33   Class java/lang/Exception

  private void configureByResourceUrl(org.springframework.boot.logging.LoggingInitializationContext, ch.qos.logback.classic.LoggerContext, java.net.URL) throws ch.qos.logback.core.joran.spi.JoranException;
    Code:
       0: aload_3
       1: invokevirtual #63                 // Method java/net/URL.toString:()Ljava/lang/String;
       4: ldc           #64                 // String xml
       6: invokevirtual #65                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       9: ifeq          37
      12: new           #66                 // class org/springframework/boot/logging/logback/SpringBootJoranConfigurator
      15: dup
      16: aload_1
      17: invokespecial #67                 // Method org/springframework/boot/logging/logback/SpringBootJoranConfigurator."<init>":(Lorg/springframework/boot/logging/LoggingInitializationContext;)V
      20: astore        4
      22: aload         4
      24: aload_2
      25: invokevirtual #68                 // Method ch/qos/logback/classic/joran/JoranConfigurator.setContext:(Lch/qos/logback/core/Context;)V
      28: aload         4
      30: aload_3
      31: invokevirtual #69                 // Method ch/qos/logback/classic/joran/JoranConfigurator.doConfigure:(Ljava/net/URL;)V
      34: goto          49
      37: new           #70                 // class ch/qos/logback/classic/util/ContextInitializer
      40: dup
      41: aload_2
      42: invokespecial #71                 // Method ch/qos/logback/classic/util/ContextInitializer."<init>":(Lch/qos/logback/classic/LoggerContext;)V
      45: aload_3
      46: invokevirtual #72                 // Method ch/qos/logback/classic/util/ContextInitializer.configureByResource:(Ljava/net/URL;)V
      49: return

  private void stopAndReset(ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_1
       1: invokevirtual #73                 // Method ch/qos/logback/classic/LoggerContext.stop:()V
       4: aload_1
       5: invokevirtual #74                 // Method ch/qos/logback/classic/LoggerContext.reset:()V
       8: aload_0
       9: invokevirtual #75                 // Method isBridgeHandlerAvailable:()Z
      12: ifeq          20
      15: aload_0
      16: aload_1
      17: invokespecial #76                 // Method addLevelChangePropagator:(Lch/qos/logback/classic/LoggerContext;)V
      20: return

  private void addLevelChangePropagator(ch.qos.logback.classic.LoggerContext);
    Code:
       0: new           #77                 // class ch/qos/logback/classic/jul/LevelChangePropagator
       3: dup
       4: invokespecial #78                 // Method ch/qos/logback/classic/jul/LevelChangePropagator."<init>":()V
       7: astore_2
       8: aload_2
       9: iconst_1
      10: invokevirtual #79                 // Method ch/qos/logback/classic/jul/LevelChangePropagator.setResetJUL:(Z)V
      13: aload_2
      14: aload_1
      15: invokevirtual #80                 // Method ch/qos/logback/classic/jul/LevelChangePropagator.setContext:(Lch/qos/logback/core/Context;)V
      18: aload_1
      19: aload_2
      20: invokevirtual #81                 // Method ch/qos/logback/classic/LoggerContext.addListener:(Lch/qos/logback/classic/spi/LoggerContextListener;)V
      23: return

  public void cleanUp();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       5: invokespecial #82                 // Method markAsUninitialized:(Lch/qos/logback/classic/LoggerContext;)V
       8: aload_0
       9: invokespecial #83                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.cleanUp:()V
      12: aload_0
      13: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
      16: invokevirtual #48                 // Method ch/qos/logback/classic/LoggerContext.getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      19: invokeinterface #84,  1           // InterfaceMethod ch/qos/logback/core/status/StatusManager.clear:()V
      24: return

  protected void reinitialize(org.springframework.boot.logging.LoggingInitializationContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: invokevirtual #74                 // Method ch/qos/logback/classic/LoggerContext.reset:()V
       7: aload_0
       8: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
      11: invokevirtual #48                 // Method ch/qos/logback/classic/LoggerContext.getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      14: invokeinterface #84,  1           // InterfaceMethod ch/qos/logback/core/status/StatusManager.clear:()V
      19: aload_0
      20: aload_1
      21: aload_0
      22: invokevirtual #85                 // Method getSelfInitializationConfig:()Ljava/lang/String;
      25: aconst_null
      26: invokevirtual #86                 // Method loadConfiguration:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      29: return

  private void configureJBossLoggingToUseSlf4j();
    Code:
       0: ldc           #87                 // String org.jboss.logging.provider
       2: ldc           #88                 // String slf4j
       4: invokestatic  #89                 // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: pop
       8: return

  public void setLogLevel(java.lang.String, org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
       5: getstatic     #90                 // Field LEVELS:Ljava/util/Map;
       8: aload_2
       9: invokeinterface #91,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #92                 // class ch/qos/logback/classic/Level
      17: invokevirtual #93                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
      20: return

  public java.lang.Runnable getShutdownHandler();
    Code:
       0: new           #94                 // class org/springframework/boot/logging/logback/LogbackLoggingSystem$ShutdownHandler
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #95                 // Method org/springframework/boot/logging/logback/LogbackLoggingSystem$ShutdownHandler."<init>":(Lorg/springframework/boot/logging/logback/LogbackLoggingSystem;Lorg/springframework/boot/logging/logback/LogbackLoggingSystem$1;)V
       9: areturn

  private ch.qos.logback.classic.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokestatic  #96                 // Method org/springframework/util/StringUtils.isEmpty:(Ljava/lang/Object;)Z
      10: ifeq          18
      13: ldc           #98                 // String ROOT
      15: goto          19
      18: aload_1
      19: invokevirtual #99                 // Method ch/qos/logback/classic/LoggerContext.getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
      22: areturn

  private ch.qos.logback.classic.LoggerContext getLoggerContext();
    Code:
       0: invokestatic  #100                // Method org/slf4j/impl/StaticLoggerBinder.getSingleton:()Lorg/slf4j/impl/StaticLoggerBinder;
       3: invokevirtual #101                // Method org/slf4j/impl/StaticLoggerBinder.getLoggerFactory:()Lorg/slf4j/ILoggerFactory;
       6: astore_1
       7: ldc           #102                // class ch/qos/logback/classic/LoggerContext
       9: aload_1
      10: ldc           #103                // String LoggerFactory is not a Logback LoggerContext but Logback is on the classpath. Either remove Logback or the competing implementation (%s loaded from %s). If you are using WebLogic you will need to add \'org.slf4j\' to prefer-application-packages in WEB-INF/weblogic.xml
      12: iconst_2
      13: anewarray     #57                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_1
      19: invokevirtual #104                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: aastore
      23: dup
      24: iconst_1
      25: aload_0
      26: aload_1
      27: invokespecial #105                // Method getLocation:(Lorg/slf4j/ILoggerFactory;)Ljava/lang/Object;
      30: aastore
      31: invokestatic  #58                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokestatic  #106                // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
      37: aload_1
      38: checkcast     #102                // class ch/qos/logback/classic/LoggerContext
      41: areturn

  private java.lang.Object getLocation(org.slf4j.ILoggerFactory);
    Code:
       0: aload_1
       1: invokevirtual #104                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #107                // Method java/lang/Class.getProtectionDomain:()Ljava/security/ProtectionDomain;
       7: astore_2
       8: aload_2
       9: invokevirtual #108                // Method java/security/ProtectionDomain.getCodeSource:()Ljava/security/CodeSource;
      12: astore_3
      13: aload_3
      14: ifnull        22
      17: aload_3
      18: invokevirtual #109                // Method java/security/CodeSource.getLocation:()Ljava/net/URL;
      21: areturn
      22: goto          26
      25: astore_2
      26: ldc           #111                // String unknown location
      28: areturn
    Exception table:
       from    to  target type
           0    21    25   Class java/lang/SecurityException

  private boolean isAlreadyInitialized(ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_1
       1: ldc           #112                // class org/springframework/boot/logging/LoggingSystem
       3: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #113                // Method ch/qos/logback/classic/LoggerContext.getObject:(Ljava/lang/String;)Ljava/lang/Object;
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private void markAsInitialized(ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_1
       1: ldc           #112                // class org/springframework/boot/logging/LoggingSystem
       3: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: new           #57                 // class java/lang/Object
       9: dup
      10: invokespecial #114                // Method java/lang/Object."<init>":()V
      13: invokevirtual #115                // Method ch/qos/logback/classic/LoggerContext.putObject:(Ljava/lang/String;Ljava/lang/Object;)V
      16: return

  private void markAsUninitialized(ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_1
       1: ldc           #112                // class org/springframework/boot/logging/LoggingSystem
       3: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #116                // Method ch/qos/logback/classic/LoggerContext.removeObject:(Ljava/lang/String;)V
       9: return

  static ch.qos.logback.classic.LoggerContext access$100(org.springframework.boot.logging.logback.LogbackLoggingSystem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lch/qos/logback/classic/LoggerContext;
       4: areturn

  static {};
    Code:
       0: new           #117                // class java/util/HashMap
       3: dup
       4: invokespecial #118                // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #119                // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      12: getstatic     #120                // Field ch/qos/logback/classic/Level.TRACE:Lch/qos/logback/classic/Level;
      15: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: getstatic     #122                // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      25: getstatic     #123                // Field ch/qos/logback/classic/Level.DEBUG:Lch/qos/logback/classic/Level;
      28: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_0
      35: getstatic     #124                // Field org/springframework/boot/logging/LogLevel.INFO:Lorg/springframework/boot/logging/LogLevel;
      38: getstatic     #125                // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      41: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: getstatic     #126                // Field org/springframework/boot/logging/LogLevel.WARN:Lorg/springframework/boot/logging/LogLevel;
      51: getstatic     #127                // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      54: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_0
      61: getstatic     #128                // Field org/springframework/boot/logging/LogLevel.ERROR:Lorg/springframework/boot/logging/LogLevel;
      64: getstatic     #129                // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      67: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: aload_0
      74: getstatic     #130                // Field org/springframework/boot/logging/LogLevel.FATAL:Lorg/springframework/boot/logging/LogLevel;
      77: getstatic     #129                // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      80: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: aload_0
      87: getstatic     #131                // Field org/springframework/boot/logging/LogLevel.OFF:Lorg/springframework/boot/logging/LogLevel;
      90: getstatic     #132                // Field ch/qos/logback/classic/Level.OFF:Lch/qos/logback/classic/Level;
      93: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: aload_0
     100: invokestatic  #133                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     103: putstatic     #90                 // Field LEVELS:Ljava/util/Map;
     106: new           #134                // class org/springframework/boot/logging/logback/LogbackLoggingSystem$1
     109: dup
     110: invokespecial #135                // Method org/springframework/boot/logging/logback/LogbackLoggingSystem$1."<init>":()V
     113: putstatic     #11                 // Field FILTER:Lch/qos/logback/classic/turbo/TurboFilter;
     116: return
}
