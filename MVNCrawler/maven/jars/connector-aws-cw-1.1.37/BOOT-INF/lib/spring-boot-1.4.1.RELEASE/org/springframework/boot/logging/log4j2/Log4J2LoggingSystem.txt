Compiled from "Log4J2LoggingSystem.java"
public class org.springframework.boot.logging.log4j2.Log4J2LoggingSystem extends org.springframework.boot.logging.Slf4JLoggingSystem {
  private static final java.lang.String FILE_PROTOCOL;

  private static final java.util.Map<org.springframework.boot.logging.LogLevel, org.apache.logging.log4j.Level> LEVELS;

  private static final org.apache.logging.log4j.core.Filter FILTER;

  public org.springframework.boot.logging.log4j2.Log4J2LoggingSystem(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/boot/logging/Slf4JLoggingSystem."<init>":(Ljava/lang/ClassLoader;)V
       5: return

  protected java.lang.String[] getStandardConfigLocations();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method getCurrentlySupportedConfigLocations:()[Ljava/lang/String;
       4: areturn

  private java.lang.String[] getCurrentlySupportedConfigLocations();
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: ldc           #6                  // String com.fasterxml.jackson.dataformat.yaml.YAMLParser
      11: invokevirtual #7                  // Method isClassAvailable:(Ljava/lang/String;)Z
      14: ifeq          36
      17: aload_1
      18: iconst_2
      19: anewarray     #8                  // class java/lang/String
      22: dup
      23: iconst_0
      24: ldc           #9                  // String log4j2.yaml
      26: aastore
      27: dup
      28: iconst_1
      29: ldc           #10                 // String log4j2.yml
      31: aastore
      32: invokestatic  #11                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: ldc           #12                 // String com.fasterxml.jackson.databind.ObjectMapper
      39: invokevirtual #7                  // Method isClassAvailable:(Ljava/lang/String;)Z
      42: ifeq          64
      45: aload_1
      46: iconst_2
      47: anewarray     #8                  // class java/lang/String
      50: dup
      51: iconst_0
      52: ldc           #13                 // String log4j2.json
      54: aastore
      55: dup
      56: iconst_1
      57: ldc           #14                 // String log4j2.jsn
      59: aastore
      60: invokestatic  #11                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      63: pop
      64: aload_1
      65: ldc           #15                 // String log4j2.xml
      67: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_1
      74: aload_1
      75: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      80: anewarray     #8                  // class java/lang/String
      83: invokeinterface #18,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      88: checkcast     #19                 // class "[Ljava/lang/String;"
      91: areturn

  protected boolean isClassAvailable(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #20                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       5: invokestatic  #21                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
       8: ireturn

  public void beforeInitialize();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokespecial #22                 // Method isAlreadyInitialized:(Lorg/apache/logging/log4j/core/LoggerContext;)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokespecial #23                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.beforeInitialize:()V
      18: aload_1
      19: invokevirtual #24                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      22: getstatic     #25                 // Field FILTER:Lorg/apache/logging/log4j/core/Filter;
      25: invokeinterface #26,  2           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.addFilter:(Lorg/apache/logging/log4j/core/Filter;)V
      30: return

  public void initialize(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: astore        4
       6: aload_0
       7: aload         4
       9: invokespecial #22                 // Method isAlreadyInitialized:(Lorg/apache/logging/log4j/core/LoggerContext;)Z
      12: ifeq          16
      15: return
      16: aload         4
      18: invokevirtual #24                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      21: getstatic     #25                 // Field FILTER:Lorg/apache/logging/log4j/core/Filter;
      24: invokeinterface #27,  2           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.removeFilter:(Lorg/apache/logging/log4j/core/Filter;)V
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokespecial #28                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      36: aload_0
      37: aload         4
      39: invokespecial #29                 // Method markAsInitialized:(Lorg/apache/logging/log4j/core/LoggerContext;)V
      42: return

  protected void loadDefaults(org.springframework.boot.logging.LoggingInitializationContext, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_2
       1: ifnull        18
       4: aload_0
       5: aload_0
       6: ldc           #30                 // String log4j2-file.xml
       8: invokevirtual #31                 // Method getPackagedConfigFile:(Ljava/lang/String;)Ljava/lang/String;
      11: aload_2
      12: invokevirtual #32                 // Method loadConfiguration:(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      15: goto          29
      18: aload_0
      19: aload_0
      20: ldc           #15                 // String log4j2.xml
      22: invokevirtual #31                 // Method getPackagedConfigFile:(Ljava/lang/String;)Ljava/lang/String;
      25: aload_2
      26: invokevirtual #32                 // Method loadConfiguration:(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      29: return

  protected void loadConfiguration(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #33                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.loadConfiguration:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
       7: aload_0
       8: aload_2
       9: aload_3
      10: invokevirtual #32                 // Method loadConfiguration:(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      13: return

  protected void loadConfiguration(java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_1
       1: ldc           #34                 // String Location must not be null
       3: invokestatic  #35                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      10: astore_3
      11: aload_1
      12: invokestatic  #36                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      15: astore        4
      17: aload_0
      18: aload         4
      20: invokespecial #37                 // Method getConfigurationSource:(Ljava/net/URL;)Lorg/apache/logging/log4j/core/config/ConfigurationSource;
      23: astore        5
      25: aload_3
      26: invokestatic  #38                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getInstance:()Lorg/apache/logging/log4j/core/config/ConfigurationFactory;
      29: aload         5
      31: invokevirtual #39                 // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getConfiguration:(Lorg/apache/logging/log4j/core/config/ConfigurationSource;)Lorg/apache/logging/log4j/core/config/Configuration;
      34: invokevirtual #40                 // Method org/apache/logging/log4j/core/LoggerContext.start:(Lorg/apache/logging/log4j/core/config/Configuration;)V
      37: goto          69
      40: astore_3
      41: new           #42                 // class java/lang/IllegalStateException
      44: dup
      45: new           #43                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #45                 // String Could not initialize Log4J2 logging from
      54: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: aload_3
      65: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      68: athrow
      69: return
    Exception table:
       from    to  target type
           6    37    40   Class java/lang/Exception

  private org.apache.logging.log4j.core.config.ConfigurationSource getConfigurationSource(java.net.URL) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #49                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_2
       5: ldc           #51                 // String file
       7: aload_1
       8: invokevirtual #52                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      11: invokevirtual #53                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          30
      17: new           #54                 // class org/apache/logging/log4j/core/config/ConfigurationSource
      20: dup
      21: aload_2
      22: aload_1
      23: invokestatic  #55                 // Method org/springframework/util/ResourceUtils.getFile:(Ljava/net/URL;)Ljava/io/File;
      26: invokespecial #56                 // Method org/apache/logging/log4j/core/config/ConfigurationSource."<init>":(Ljava/io/InputStream;Ljava/io/File;)V
      29: areturn
      30: new           #54                 // class org/apache/logging/log4j/core/config/ConfigurationSource
      33: dup
      34: aload_2
      35: aload_1
      36: invokespecial #57                 // Method org/apache/logging/log4j/core/config/ConfigurationSource."<init>":(Ljava/io/InputStream;Ljava/net/URL;)V
      39: areturn

  protected void reinitialize(org.springframework.boot.logging.LoggingInitializationContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: invokevirtual #58                 // Method org/apache/logging/log4j/core/LoggerContext.reconfigure:()V
       7: return

  public void setLogLevel(java.lang.String, org.springframework.boot.logging.LogLevel);
    Code:
       0: getstatic     #59                 // Field LEVELS:Ljava/util/Map;
       3: aload_2
       4: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #61                 // class org/apache/logging/log4j/Level
      12: astore_3
      13: aload_0
      14: aload_1
      15: invokespecial #62                 // Method getLoggerConfig:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
      18: astore        4
      20: aload         4
      22: ifnonnull     55
      25: new           #63                 // class org/apache/logging/log4j/core/config/LoggerConfig
      28: dup
      29: aload_1
      30: aload_3
      31: iconst_1
      32: invokespecial #64                 // Method org/apache/logging/log4j/core/config/LoggerConfig."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Z)V
      35: astore        4
      37: aload_0
      38: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      41: invokevirtual #24                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      44: aload_1
      45: aload         4
      47: invokeinterface #65,  3           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.addLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/core/config/LoggerConfig;)V
      52: goto          61
      55: aload         4
      57: aload_3
      58: invokevirtual #66                 // Method org/apache/logging/log4j/core/config/LoggerConfig.setLevel:(Lorg/apache/logging/log4j/Level;)V
      61: aload_0
      62: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      65: invokevirtual #67                 // Method org/apache/logging/log4j/core/LoggerContext.updateLoggers:()V
      68: return

  public java.lang.Runnable getShutdownHandler();
    Code:
       0: new           #68                 // class org/springframework/boot/logging/log4j2/Log4J2LoggingSystem$ShutdownHandler
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #69                 // Method org/springframework/boot/logging/log4j2/Log4J2LoggingSystem$ShutdownHandler."<init>":(Lorg/springframework/boot/logging/log4j2/Log4J2LoggingSystem;Lorg/springframework/boot/logging/log4j2/Log4J2LoggingSystem$1;)V
       9: areturn

  public void cleanUp();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method org/springframework/boot/logging/Slf4JLoggingSystem.cleanUp:()V
       4: aload_0
       5: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #71                 // Method markAsUninitialized:(Lorg/apache/logging/log4j/core/LoggerContext;)V
      14: return

  private org.apache.logging.log4j.core.config.LoggerConfig getLoggerConfig(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #72                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifeq          11
       7: aload_1
       8: goto          13
      11: ldc           #74                 // String
      13: astore_1
      14: aload_0
      15: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      18: invokevirtual #24                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      21: invokeinterface #75,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getLoggers:()Ljava/util/Map;
      26: aload_1
      27: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #63                 // class org/apache/logging/log4j/core/config/LoggerConfig
      35: areturn

  private org.apache.logging.log4j.core.LoggerContext getLoggerContext();
    Code:
       0: iconst_0
       1: invokestatic  #76                 // Method org/apache/logging/log4j/LogManager.getContext:(Z)Lorg/apache/logging/log4j/spi/LoggerContext;
       4: checkcast     #77                 // class org/apache/logging/log4j/core/LoggerContext
       7: areturn

  private boolean isAlreadyInitialized(org.apache.logging.log4j.core.LoggerContext);
    Code:
       0: ldc           #78                 // class org/springframework/boot/logging/LoggingSystem
       2: invokevirtual #79                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #80                 // Method org/apache/logging/log4j/core/LoggerContext.getExternalContext:()Ljava/lang/Object;
       9: invokevirtual #53                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ireturn

  private void markAsInitialized(org.apache.logging.log4j.core.LoggerContext);
    Code:
       0: aload_1
       1: ldc           #78                 // class org/springframework/boot/logging/LoggingSystem
       3: invokevirtual #79                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #81                 // Method org/apache/logging/log4j/core/LoggerContext.setExternalContext:(Ljava/lang/Object;)V
       9: return

  private void markAsUninitialized(org.apache.logging.log4j.core.LoggerContext);
    Code:
       0: aload_1
       1: aconst_null
       2: invokevirtual #81                 // Method org/apache/logging/log4j/core/LoggerContext.setExternalContext:(Ljava/lang/Object;)V
       5: return

  static org.apache.logging.log4j.core.LoggerContext access$100(org.springframework.boot.logging.log4j2.Log4J2LoggingSystem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
       4: areturn

  static {};
    Code:
       0: new           #82                 // class java/util/HashMap
       3: dup
       4: invokespecial #83                 // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #84                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      12: getstatic     #85                 // Field org/apache/logging/log4j/Level.TRACE:Lorg/apache/logging/log4j/Level;
      15: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: getstatic     #87                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      25: getstatic     #88                 // Field org/apache/logging/log4j/Level.DEBUG:Lorg/apache/logging/log4j/Level;
      28: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_0
      35: getstatic     #89                 // Field org/springframework/boot/logging/LogLevel.INFO:Lorg/springframework/boot/logging/LogLevel;
      38: getstatic     #90                 // Field org/apache/logging/log4j/Level.INFO:Lorg/apache/logging/log4j/Level;
      41: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: getstatic     #91                 // Field org/springframework/boot/logging/LogLevel.WARN:Lorg/springframework/boot/logging/LogLevel;
      51: getstatic     #92                 // Field org/apache/logging/log4j/Level.WARN:Lorg/apache/logging/log4j/Level;
      54: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_0
      61: getstatic     #93                 // Field org/springframework/boot/logging/LogLevel.ERROR:Lorg/springframework/boot/logging/LogLevel;
      64: getstatic     #94                 // Field org/apache/logging/log4j/Level.ERROR:Lorg/apache/logging/log4j/Level;
      67: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: aload_0
      74: getstatic     #95                 // Field org/springframework/boot/logging/LogLevel.FATAL:Lorg/springframework/boot/logging/LogLevel;
      77: getstatic     #96                 // Field org/apache/logging/log4j/Level.FATAL:Lorg/apache/logging/log4j/Level;
      80: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: aload_0
      87: getstatic     #97                 // Field org/springframework/boot/logging/LogLevel.OFF:Lorg/springframework/boot/logging/LogLevel;
      90: getstatic     #98                 // Field org/apache/logging/log4j/Level.OFF:Lorg/apache/logging/log4j/Level;
      93: invokeinterface #86,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: aload_0
     100: invokestatic  #99                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     103: putstatic     #59                 // Field LEVELS:Ljava/util/Map;
     106: new           #100                // class org/springframework/boot/logging/log4j2/Log4J2LoggingSystem$1
     109: dup
     110: invokespecial #101                // Method org/springframework/boot/logging/log4j2/Log4J2LoggingSystem$1."<init>":()V
     113: putstatic     #25                 // Field FILTER:Lorg/apache/logging/log4j/core/Filter;
     116: return
}
