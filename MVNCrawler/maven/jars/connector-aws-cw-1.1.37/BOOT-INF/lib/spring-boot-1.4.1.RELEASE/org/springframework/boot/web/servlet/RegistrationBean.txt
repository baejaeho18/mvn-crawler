Compiled from "RegistrationBean.java"
public abstract class org.springframework.boot.web.servlet.RegistrationBean implements org.springframework.boot.web.servlet.ServletContextInitializer,org.springframework.core.Ordered {
  private java.lang.String name;

  private int order;

  private boolean asyncSupported;

  private boolean enabled;

  private java.util.Map<java.lang.String, java.lang.String> initParameters;

  public org.springframework.boot.web.servlet.RegistrationBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 2147483647
       7: putfield      #4                  // Field order:I
      10: aload_0
      11: iconst_1
      12: putfield      #5                  // Field asyncSupported:Z
      15: aload_0
      16: iconst_1
      17: putfield      #6                  // Field enabled:Z
      20: aload_0
      21: new           #7                  // class java/util/LinkedHashMap
      24: dup
      25: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      28: putfield      #9                  // Field initParameters:Ljava/util/Map;
      31: return

  public void setName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #10                 // String Name must not be empty
       3: invokestatic  #11                 // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #12                 // Field name:Ljava/lang/String;
      11: return

  public void setAsyncSupported(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field asyncSupported:Z
       5: return

  public boolean isAsyncSupported();
    Code:
       0: aload_0
       1: getfield      #5                  // Field asyncSupported:Z
       4: ireturn

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field enabled:Z
       5: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #6                  // Field enabled:Z
       4: ireturn

  public void setInitParameters(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #13                 // String InitParameters must not be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #7                  // class java/util/LinkedHashMap
      10: dup
      11: aload_1
      12: invokespecial #15                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      15: putfield      #9                  // Field initParameters:Ljava/util/Map;
      18: return

  public java.util.Map<java.lang.String, java.lang.String> getInitParameters();
    Code:
       0: aload_0
       1: getfield      #9                  // Field initParameters:Ljava/util/Map;
       4: areturn

  public void addInitParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #16                 // String Name must not be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #9                  // Field initParameters:Ljava/util/Map;
      10: aload_1
      11: aload_2
      12: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  protected final java.lang.String getOrDeduceName(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #12                 // Field name:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #12                 // Field name:Ljava/lang/String;
      11: goto          18
      14: aload_1
      15: invokestatic  #18                 // Method org/springframework/core/Conventions.getVariableName:(Ljava/lang/Object;)Ljava/lang/String;
      18: areturn

  protected void configure(javax.servlet.Registration$Dynamic);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: new           #19                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #21                 // String Registration is null. Was something already registered for name=[
      18: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #12                 // Field name:Ljava/lang/String;
      25: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #23                 // String ]?
      30: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokestatic  #25                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      39: aload_1
      40: aload_0
      41: getfield      #5                  // Field asyncSupported:Z
      44: invokeinterface #26,  2           // InterfaceMethod javax/servlet/Registration$Dynamic.setAsyncSupported:(Z)V
      49: aload_0
      50: getfield      #9                  // Field initParameters:Ljava/util/Map;
      53: invokeinterface #27,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      58: ifne          72
      61: aload_1
      62: aload_0
      63: getfield      #9                  // Field initParameters:Ljava/util/Map;
      66: invokeinterface #28,  2           // InterfaceMethod javax/servlet/Registration$Dynamic.setInitParameters:(Ljava/util/Map;)Ljava/util/Set;
      71: pop
      72: return

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field order:I
       5: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #4                  // Field order:I
       4: ireturn
}
