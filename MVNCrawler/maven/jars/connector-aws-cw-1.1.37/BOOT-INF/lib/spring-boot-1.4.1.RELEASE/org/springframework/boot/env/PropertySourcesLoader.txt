Compiled from "PropertySourcesLoader.java"
public class org.springframework.boot.env.PropertySourcesLoader {
  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.core.env.MutablePropertySources propertySources;

  private final java.util.List<org.springframework.boot.env.PropertySourceLoader> loaders;

  public org.springframework.boot.env.PropertySourcesLoader();
    Code:
       0: aload_0
       1: new           #1                  // class org/springframework/core/env/MutablePropertySources
       4: dup
       5: invokespecial #2                  // Method org/springframework/core/env/MutablePropertySources."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/springframework/core/env/MutablePropertySources;)V
      11: return

  public org.springframework.boot.env.PropertySourcesLoader(org.springframework.core.env.MutablePropertySources);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String PropertySources must not be null
       7: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #7                  // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      15: aload_0
      16: ldc           #8                  // class org/springframework/boot/env/PropertySourceLoader
      18: aload_0
      19: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #10                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      25: invokestatic  #11                 // Method org/springframework/core/io/support/SpringFactoriesLoader.loadFactories:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/List;
      28: putfield      #12                 // Field loaders:Ljava/util/List;
      31: return

  public org.springframework.core.env.PropertySource<?> load(org.springframework.core.io.Resource) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #13                 // Method load:(Lorg/springframework/core/io/Resource;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       6: areturn

  public org.springframework.core.env.PropertySource<?> load(org.springframework.core.io.Resource, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #14,  1           // InterfaceMethod org/springframework/core/io/Resource.getDescription:()Ljava/lang/String;
       8: aload_2
       9: invokevirtual #15                 // Method load:(Lorg/springframework/core/io/Resource;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      12: areturn

  public org.springframework.core.env.PropertySource<?> load(org.springframework.core.io.Resource, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: invokevirtual #16                 // Method load:(Lorg/springframework/core/io/Resource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       8: areturn

  public org.springframework.core.env.PropertySource<?> load(org.springframework.core.io.Resource, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method isFile:(Lorg/springframework/core/io/Resource;)Z
       5: ifeq          89
       8: aload_0
       9: aload_3
      10: aload         4
      12: invokespecial #18                 // Method generatePropertySourceName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: astore        5
      17: aload_0
      18: getfield      #12                 // Field loaders:Ljava/util/List;
      21: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore        6
      28: aload         6
      30: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          89
      38: aload         6
      40: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #8                  // class org/springframework/boot/env/PropertySourceLoader
      48: astore        7
      50: aload_0
      51: aload         7
      53: aload_1
      54: invokespecial #22                 // Method canLoadFileExtension:(Lorg/springframework/boot/env/PropertySourceLoader;Lorg/springframework/core/io/Resource;)Z
      57: ifeq          86
      60: aload         7
      62: aload         5
      64: aload_1
      65: aload         4
      67: invokeinterface #23,  4           // InterfaceMethod org/springframework/boot/env/PropertySourceLoader.load:(Ljava/lang/String;Lorg/springframework/core/io/Resource;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      72: astore        8
      74: aload_0
      75: aload_2
      76: aload         8
      78: aload         4
      80: invokespecial #24                 // Method addPropertySource:(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;Ljava/lang/String;)V
      83: aload         8
      85: areturn
      86: goto          28
      89: aconst_null
      90: areturn

  private boolean isFile(org.springframework.core.io.Resource);
    Code:
       0: aload_1
       1: ifnull        32
       4: aload_1
       5: invokeinterface #25,  1           // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
      10: ifeq          32
      13: aload_1
      14: invokeinterface #26,  1           // InterfaceMethod org/springframework/core/io/Resource.getFilename:()Ljava/lang/String;
      19: invokestatic  #27                 // Method org/springframework/util/StringUtils.getFilenameExtension:(Ljava/lang/String;)Ljava/lang/String;
      22: invokestatic  #28                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private java.lang.String generatePropertySourceName(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     8
       4: aload_1
       5: goto          31
       8: new           #29                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #32                 // String #
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_2
      25: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  private boolean canLoadFileExtension(org.springframework.boot.env.PropertySourceLoader, org.springframework.core.io.Resource);
    Code:
       0: aload_2
       1: invokeinterface #26,  1           // InterfaceMethod org/springframework/core/io/Resource.getFilename:()Ljava/lang/String;
       6: invokevirtual #34                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       9: astore_3
      10: aload_1
      11: invokeinterface #35,  1           // InterfaceMethod org/springframework/boot/env/PropertySourceLoader.getFileExtensions:()[Ljava/lang/String;
      16: astore        4
      18: aload         4
      20: arraylength
      21: istore        5
      23: iconst_0
      24: istore        6
      26: iload         6
      28: iload         5
      30: if_icmpge     78
      33: aload         4
      35: iload         6
      37: aaload
      38: astore        7
      40: aload_3
      41: new           #29                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #36                 // String .
      50: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload         7
      55: invokevirtual #34                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      58: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokevirtual #37                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      67: ifeq          72
      70: iconst_1
      71: ireturn
      72: iinc          6, 1
      75: goto          26
      78: iconst_0
      79: ireturn

  private void addPropertySource(java.lang.String, org.springframework.core.env.PropertySource<?>, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: aload_1
       6: ifnonnull     18
       9: aload_0
      10: getfield      #7                  // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      13: aload_2
      14: invokevirtual #38                 // Method org/springframework/core/env/MutablePropertySources.addLast:(Lorg/springframework/core/env/PropertySource;)V
      17: return
      18: aload_0
      19: aload_1
      20: invokespecial #39                 // Method getGeneric:(Ljava/lang/String;)Lorg/springframework/boot/env/EnumerableCompositePropertySource;
      23: astore        4
      25: aload         4
      27: aload_2
      28: invokevirtual #40                 // Method org/springframework/boot/env/EnumerableCompositePropertySource.add:(Lorg/springframework/core/env/PropertySource;)V
      31: getstatic     #41                 // Field logger:Lorg/apache/commons/logging/Log;
      34: new           #29                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #42                 // String Adding PropertySource:
      43: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: ldc           #44                 // String  in group:
      52: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_1
      56: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      67: aload_0
      68: getfield      #7                  // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      71: aload         4
      73: invokevirtual #46                 // Method org/springframework/boot/env/EnumerableCompositePropertySource.getName:()Ljava/lang/String;
      76: invokevirtual #47                 // Method org/springframework/core/env/MutablePropertySources.contains:(Ljava/lang/String;)Z
      79: ifeq          99
      82: aload_0
      83: getfield      #7                  // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
      86: aload         4
      88: invokevirtual #46                 // Method org/springframework/boot/env/EnumerableCompositePropertySource.getName:()Ljava/lang/String;
      91: aload         4
      93: invokevirtual #48                 // Method org/springframework/core/env/MutablePropertySources.replace:(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
      96: goto          108
      99: aload_0
     100: getfield      #7                  // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
     103: aload         4
     105: invokevirtual #49                 // Method org/springframework/core/env/MutablePropertySources.addFirst:(Lorg/springframework/core/env/PropertySource;)V
     108: return

  private org.springframework.boot.env.EnumerableCompositePropertySource getGeneric(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
       4: aload_1
       5: invokevirtual #50                 // Method org/springframework/core/env/MutablePropertySources.get:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       8: astore_2
       9: aload_2
      10: instanceof    #51                 // class org/springframework/boot/env/EnumerableCompositePropertySource
      13: ifeq          21
      16: aload_2
      17: checkcast     #51                 // class org/springframework/boot/env/EnumerableCompositePropertySource
      20: areturn
      21: new           #51                 // class org/springframework/boot/env/EnumerableCompositePropertySource
      24: dup
      25: aload_1
      26: invokespecial #52                 // Method org/springframework/boot/env/EnumerableCompositePropertySource."<init>":(Ljava/lang/String;)V
      29: astore_3
      30: aload_3
      31: areturn

  public org.springframework.core.env.MutablePropertySources getPropertySources();
    Code:
       0: aload_0
       1: getfield      #7                  // Field propertySources:Lorg/springframework/core/env/MutablePropertySources;
       4: areturn

  public java.util.Set<java.lang.String> getAllFileExtensions();
    Code:
       0: new           #53                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #54                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #12                 // Field loaders:Ljava/util/List;
      12: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          56
      27: aload_2
      28: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #8                  // class org/springframework/boot/env/PropertySourceLoader
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokeinterface #35,  1           // InterfaceMethod org/springframework/boot/env/PropertySourceLoader.getFileExtensions:()[Ljava/lang/String;
      44: invokestatic  #55                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      47: invokeinterface #56,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      52: pop
      53: goto          18
      56: aload_1
      57: areturn

  static {};
    Code:
       0: ldc           #57                 // class org/springframework/boot/env/PropertySourcesLoader
       2: invokestatic  #58                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #41                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
