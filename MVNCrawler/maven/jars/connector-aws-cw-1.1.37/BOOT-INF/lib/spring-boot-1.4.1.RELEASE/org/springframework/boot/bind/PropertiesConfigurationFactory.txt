Compiled from "PropertiesConfigurationFactory.java"
public class org.springframework.boot.bind.PropertiesConfigurationFactory<T> implements org.springframework.beans.factory.FactoryBean<T>, org.springframework.context.MessageSourceAware, org.springframework.beans.factory.InitializingBean {
  private static final char[] EXACT_DELIMITERS;

  private static final char[] TARGET_NAME_DELIMITERS;

  private final org.apache.commons.logging.Log logger;

  private boolean ignoreUnknownFields;

  private boolean ignoreInvalidFields;

  private boolean exceptionIfInvalid;

  private java.util.Properties properties;

  private org.springframework.core.env.PropertySources propertySources;

  private final T target;

  private org.springframework.validation.Validator validator;

  private org.springframework.context.MessageSource messageSource;

  private boolean hasBeenBound;

  private boolean ignoreNestedProperties;

  private java.lang.String targetName;

  private org.springframework.core.convert.ConversionService conversionService;

  private boolean resolvePlaceholders;

  public org.springframework.boot.bind.PropertiesConfigurationFactory(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field ignoreUnknownFields:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field exceptionIfInvalid:Z
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field hasBeenBound:Z
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field ignoreNestedProperties:Z
      35: aload_0
      36: iconst_1
      37: putfield      #9                  // Field resolvePlaceholders:Z
      40: aload_1
      41: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;)V
      44: aload_0
      45: aload_1
      46: putfield      #11                 // Field target:Ljava/lang/Object;
      49: return

  public org.springframework.boot.bind.PropertiesConfigurationFactory(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field ignoreUnknownFields:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field exceptionIfInvalid:Z
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field hasBeenBound:Z
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field ignoreNestedProperties:Z
      35: aload_0
      36: iconst_1
      37: putfield      #9                  // Field resolvePlaceholders:Z
      40: aload_1
      41: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;)V
      44: aload_0
      45: aload_1
      46: invokestatic  #12                 // Method org/springframework/beans/BeanUtils.instantiate:(Ljava/lang/Class;)Ljava/lang/Object;
      49: putfield      #11                 // Field target:Ljava/lang/Object;
      52: return

  public void setIgnoreNestedProperties(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field ignoreNestedProperties:Z
       5: return

  public void setIgnoreUnknownFields(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field ignoreUnknownFields:Z
       5: return

  public void setIgnoreInvalidFields(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field ignoreInvalidFields:Z
       5: return

  public void setTargetName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field targetName:Ljava/lang/String;
       5: return

  public void setMessageSource(org.springframework.context.MessageSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field messageSource:Lorg/springframework/context/MessageSource;
       5: return

  public void setProperties(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field properties:Ljava/util/Properties;
       5: return

  public void setPropertySources(org.springframework.core.env.PropertySources);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
       5: return

  public void setConversionService(org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       5: return

  public void setValidator(org.springframework.validation.Validator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field validator:Lorg/springframework/validation/Validator;
       5: return

  public void setExceptionIfInvalid(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field exceptionIfInvalid:Z
       5: return

  public void setResolvePlaceholders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field resolvePlaceholders:Z
       5: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method bindPropertiesToTarget:()V
       4: return

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field target:Ljava/lang/Object;
       4: ifnonnull     10
       7: ldc           #21                 // class java/lang/Object
       9: areturn
      10: aload_0
      11: getfield      #11                 // Field target:Ljava/lang/Object;
      14: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public T getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field hasBeenBound:Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #20                 // Method bindPropertiesToTarget:()V
      11: aload_0
      12: getfield      #11                 // Field target:Ljava/lang/Object;
      15: areturn

  public void bindPropertiesToTarget() throws org.springframework.validation.BindException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field properties:Ljava/util/Properties;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #17                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #22                 // String Properties or propertySources should not be null
      21: invokestatic  #23                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      24: aload_0
      25: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      28: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      33: ifeq          102
      36: aload_0
      37: getfield      #16                 // Field properties:Ljava/util/Properties;
      40: ifnull        71
      43: aload_0
      44: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      47: ldc           #25                 // String Properties:%n%s
      49: iconst_1
      50: anewarray     #21                 // class java/lang/Object
      53: dup
      54: iconst_0
      55: aload_0
      56: getfield      #16                 // Field properties:Ljava/util/Properties;
      59: aastore
      60: invokestatic  #26                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      63: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      68: goto          102
      71: aload_0
      72: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      75: new           #28                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #30                 // String Property Sources:
      84: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: getfield      #17                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
      91: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     102: aload_0
     103: iconst_1
     104: putfield      #7                  // Field hasBeenBound:Z
     107: aload_0
     108: invokespecial #34                 // Method doBindPropertiesToTarget:()V
     111: goto          136
     114: astore_1
     115: aload_0
     116: getfield      #6                  // Field exceptionIfInvalid:Z
     119: ifeq          124
     122: aload_1
     123: athrow
     124: aload_0
     125: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     128: ldc           #36                 // String Failed to load Properties validation bean. Your Properties may be invalid.
     130: aload_1
     131: invokeinterface #37,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     136: return
    Exception table:
       from    to  target type
          24   111   114   Class org/springframework/validation/BindException

  private void doBindPropertiesToTarget() throws org.springframework.validation.BindException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field targetName:Ljava/lang/String;
       4: ifnull        25
       7: new           #38                 // class org/springframework/boot/bind/RelaxedDataBinder
      10: dup
      11: aload_0
      12: getfield      #11                 // Field target:Ljava/lang/Object;
      15: aload_0
      16: getfield      #14                 // Field targetName:Ljava/lang/String;
      19: invokespecial #39                 // Method org/springframework/boot/bind/RelaxedDataBinder."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      22: goto          36
      25: new           #38                 // class org/springframework/boot/bind/RelaxedDataBinder
      28: dup
      29: aload_0
      30: getfield      #11                 // Field target:Ljava/lang/Object;
      33: invokespecial #40                 // Method org/springframework/boot/bind/RelaxedDataBinder."<init>":(Ljava/lang/Object;)V
      36: astore_1
      37: aload_0
      38: getfield      #19                 // Field validator:Lorg/springframework/validation/Validator;
      41: ifnull        52
      44: aload_1
      45: aload_0
      46: getfield      #19                 // Field validator:Lorg/springframework/validation/Validator;
      49: invokevirtual #41                 // Method org/springframework/boot/bind/RelaxedDataBinder.setValidator:(Lorg/springframework/validation/Validator;)V
      52: aload_0
      53: getfield      #18                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      56: ifnull        67
      59: aload_1
      60: aload_0
      61: getfield      #18                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      64: invokevirtual #42                 // Method org/springframework/boot/bind/RelaxedDataBinder.setConversionService:(Lorg/springframework/core/convert/ConversionService;)V
      67: aload_1
      68: ldc           #44                 // int 2147483647
      70: invokevirtual #45                 // Method org/springframework/boot/bind/RelaxedDataBinder.setAutoGrowCollectionLimit:(I)V
      73: aload_1
      74: aload_0
      75: getfield      #8                  // Field ignoreNestedProperties:Z
      78: invokevirtual #46                 // Method org/springframework/boot/bind/RelaxedDataBinder.setIgnoreNestedProperties:(Z)V
      81: aload_1
      82: aload_0
      83: getfield      #13                 // Field ignoreInvalidFields:Z
      86: invokevirtual #47                 // Method org/springframework/boot/bind/RelaxedDataBinder.setIgnoreInvalidFields:(Z)V
      89: aload_1
      90: aload_0
      91: getfield      #5                  // Field ignoreUnknownFields:Z
      94: invokevirtual #48                 // Method org/springframework/boot/bind/RelaxedDataBinder.setIgnoreUnknownFields:(Z)V
      97: aload_0
      98: aload_1
      99: invokevirtual #49                 // Method customizeBinder:(Lorg/springframework/validation/DataBinder;)V
     102: aload_0
     103: invokespecial #50                 // Method getRelaxedTargetNames:()Ljava/lang/Iterable;
     106: astore_2
     107: aload_0
     108: aload_2
     109: invokespecial #51                 // Method getNames:(Ljava/lang/Iterable;)Ljava/util/Set;
     112: astore_3
     113: aload_0
     114: aload_3
     115: aload_2
     116: invokespecial #52                 // Method getPropertyValues:(Ljava/util/Set;Ljava/lang/Iterable;)Lorg/springframework/beans/PropertyValues;
     119: astore        4
     121: aload_1
     122: aload         4
     124: invokevirtual #53                 // Method org/springframework/boot/bind/RelaxedDataBinder.bind:(Lorg/springframework/beans/PropertyValues;)V
     127: aload_0
     128: getfield      #19                 // Field validator:Lorg/springframework/validation/Validator;
     131: ifnull        139
     134: aload_0
     135: aload_1
     136: invokespecial #54                 // Method validate:(Lorg/springframework/boot/bind/RelaxedDataBinder;)V
     139: return

  private java.lang.Iterable<java.lang.String> getRelaxedTargetNames();
    Code:
       0: aload_0
       1: getfield      #11                 // Field target:Ljava/lang/Object;
       4: ifnull        31
       7: aload_0
       8: getfield      #14                 // Field targetName:Ljava/lang/String;
      11: invokestatic  #55                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      14: ifeq          31
      17: new           #56                 // class org/springframework/boot/bind/RelaxedNames
      20: dup
      21: aload_0
      22: getfield      #14                 // Field targetName:Ljava/lang/String;
      25: invokespecial #57                 // Method org/springframework/boot/bind/RelaxedNames."<init>":(Ljava/lang/String;)V
      28: goto          32
      31: aconst_null
      32: areturn

  private java.util.Set<java.lang.String> getNames(java.lang.Iterable<java.lang.String>);
    Code:
       0: new           #58                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #59                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #11                 // Field target:Ljava/lang/Object;
      12: ifnull        258
      15: aload_0
      16: getfield      #11                 // Field target:Ljava/lang/Object;
      19: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokestatic  #60                 // Method org/springframework/beans/BeanUtils.getPropertyDescriptors:(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
      25: astore_3
      26: aload_3
      27: astore        4
      29: aload         4
      31: arraylength
      32: istore        5
      34: iconst_0
      35: istore        6
      37: iload         6
      39: iload         5
      41: if_icmpge     258
      44: aload         4
      46: iload         6
      48: aaload
      49: astore        7
      51: aload         7
      53: invokevirtual #61                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      56: astore        8
      58: aload         8
      60: ldc           #62                 // String class
      62: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifne          252
      68: aload         8
      70: invokestatic  #64                 // Method org/springframework/boot/bind/RelaxedNames.forCamelCase:(Ljava/lang/String;)Lorg/springframework/boot/bind/RelaxedNames;
      73: astore        9
      75: aload_1
      76: ifnonnull     123
      79: aload         9
      81: invokevirtual #65                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
      84: astore        10
      86: aload         10
      88: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifeq          120
      96: aload         10
      98: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #68                 // class java/lang/String
     106: astore        11
     108: aload_2
     109: aload         11
     111: invokeinterface #69,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     116: pop
     117: goto          86
     120: goto          252
     123: aload_1
     124: invokeinterface #70,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     129: astore        10
     131: aload         10
     133: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     138: ifeq          252
     141: aload         10
     143: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     148: checkcast     #68                 // class java/lang/String
     151: astore        11
     153: aload         9
     155: invokevirtual #65                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
     158: astore        12
     160: aload         12
     162: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     167: ifeq          249
     170: aload         12
     172: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     177: checkcast     #68                 // class java/lang/String
     180: astore        13
     182: aload_2
     183: new           #28                 // class java/lang/StringBuilder
     186: dup
     187: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     190: aload         11
     192: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: ldc           #71                 // String .
     197: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: aload         13
     202: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: invokeinterface #69,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     213: pop
     214: aload_2
     215: new           #28                 // class java/lang/StringBuilder
     218: dup
     219: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     222: aload         11
     224: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: ldc           #72                 // String _
     229: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload         13
     234: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     240: invokeinterface #69,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     245: pop
     246: goto          160
     249: goto          131
     252: iinc          6, 1
     255: goto          37
     258: aload_2
     259: areturn

  private org.springframework.beans.PropertyValues getPropertyValues(java.util.Set<java.lang.String>, java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field properties:Ljava/util/Properties;
       4: ifnull        19
       7: new           #73                 // class org/springframework/beans/MutablePropertyValues
      10: dup
      11: aload_0
      12: getfield      #16                 // Field properties:Ljava/util/Properties;
      15: invokespecial #74                 // Method org/springframework/beans/MutablePropertyValues."<init>":(Ljava/util/Map;)V
      18: areturn
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokespecial #75                 // Method getPropertySourcesPropertyValues:(Ljava/util/Set;Ljava/lang/Iterable;)Lorg/springframework/beans/PropertyValues;
      25: areturn

  private org.springframework.beans.PropertyValues getPropertySourcesPropertyValues(java.util.Set<java.lang.String>, java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #76                 // Method getPropertyNamePatternsMatcher:(Ljava/util/Set;Ljava/lang/Iterable;)Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;
       6: astore_3
       7: new           #77                 // class org/springframework/boot/bind/PropertySourcesPropertyValues
      10: dup
      11: aload_0
      12: getfield      #17                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
      15: aload_1
      16: aload_3
      17: aload_0
      18: getfield      #9                  // Field resolvePlaceholders:Z
      21: invokespecial #78                 // Method org/springframework/boot/bind/PropertySourcesPropertyValues."<init>":(Lorg/springframework/core/env/PropertySources;Ljava/util/Collection;Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;Z)V
      24: areturn

  private org.springframework.boot.bind.PropertyNamePatternsMatcher getPropertyNamePatternsMatcher(java.util.Set<java.lang.String>, java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field ignoreUnknownFields:Z
       4: ifeq          27
       7: aload_0
       8: invokespecial #79                 // Method isMapTarget:()Z
      11: ifne          27
      14: new           #80                 // class org/springframework/boot/bind/DefaultPropertyNamePatternsMatcher
      17: dup
      18: getstatic     #81                 // Field EXACT_DELIMITERS:[C
      21: iconst_1
      22: aload_1
      23: invokespecial #82                 // Method org/springframework/boot/bind/DefaultPropertyNamePatternsMatcher."<init>":([CZLjava/util/Set;)V
      26: areturn
      27: aload_2
      28: ifnull        94
      31: new           #83                 // class java/util/HashSet
      34: dup
      35: invokespecial #84                 // Method java/util/HashSet."<init>":()V
      38: astore_3
      39: aload_2
      40: invokeinterface #70,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      45: astore        4
      47: aload         4
      49: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          81
      57: aload         4
      59: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #68                 // class java/lang/String
      67: astore        5
      69: aload_3
      70: aload         5
      72: invokeinterface #69,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      77: pop
      78: goto          47
      81: new           #80                 // class org/springframework/boot/bind/DefaultPropertyNamePatternsMatcher
      84: dup
      85: getstatic     #85                 // Field TARGET_NAME_DELIMITERS:[C
      88: iconst_1
      89: aload_3
      90: invokespecial #82                 // Method org/springframework/boot/bind/DefaultPropertyNamePatternsMatcher."<init>":([CZLjava/util/Set;)V
      93: areturn
      94: getstatic     #86                 // Field org/springframework/boot/bind/PropertyNamePatternsMatcher.ALL:Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;
      97: areturn

  private boolean isMapTarget();
    Code:
       0: aload_0
       1: getfield      #11                 // Field target:Ljava/lang/Object;
       4: ifnull        26
       7: ldc           #87                 // class java/util/Map
       9: aload_0
      10: getfield      #11                 // Field target:Ljava/lang/Object;
      13: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #88                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private void validate(org.springframework.boot.bind.RelaxedDataBinder) throws org.springframework.validation.BindException;
    Code:
       0: aload_1
       1: invokevirtual #89                 // Method org/springframework/boot/bind/RelaxedDataBinder.validate:()V
       4: aload_1
       5: invokevirtual #90                 // Method org/springframework/boot/bind/RelaxedDataBinder.getBindingResult:()Lorg/springframework/validation/BindingResult;
       8: astore_2
       9: aload_2
      10: invokeinterface #91,  1           // InterfaceMethod org/springframework/validation/BindingResult.hasErrors:()Z
      15: ifeq          143
      18: aload_0
      19: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      22: ldc           #92                 // String Properties configuration failed validation
      24: invokeinterface #93,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      29: aload_2
      30: invokeinterface #94,  1           // InterfaceMethod org/springframework/validation/BindingResult.getAllErrors:()Ljava/util/List;
      35: invokeinterface #95,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          127
      50: aload_3
      51: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #96                 // class org/springframework/validation/ObjectError
      59: astore        4
      61: aload_0
      62: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      65: aload_0
      66: getfield      #15                 // Field messageSource:Lorg/springframework/context/MessageSource;
      69: ifnull        117
      72: new           #28                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      79: aload_0
      80: getfield      #15                 // Field messageSource:Lorg/springframework/context/MessageSource;
      83: aload         4
      85: invokestatic  #97                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      88: invokeinterface #98,  3           // InterfaceMethod org/springframework/context/MessageSource.getMessage:(Lorg/springframework/context/MessageSourceResolvable;Ljava/util/Locale;)Ljava/lang/String;
      93: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #99                 // String  (
      98: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload         4
     103: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: ldc           #100                // String )
     108: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: goto          119
     117: aload         4
     119: invokeinterface #93,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
     124: goto          41
     127: aload_0
     128: getfield      #6                  // Field exceptionIfInvalid:Z
     131: ifeq          143
     134: new           #35                 // class org/springframework/validation/BindException
     137: dup
     138: aload_2
     139: invokespecial #101                // Method org/springframework/validation/BindException."<init>":(Lorg/springframework/validation/BindingResult;)V
     142: athrow
     143: return

  protected void customizeBinder(org.springframework.validation.DataBinder);
    Code:
       0: return

  static {};
    Code:
       0: iconst_3
       1: newarray       char
       3: dup
       4: iconst_0
       5: bipush        95
       7: castore
       8: dup
       9: iconst_1
      10: bipush        46
      12: castore
      13: dup
      14: iconst_2
      15: bipush        91
      17: castore
      18: putstatic     #81                 // Field EXACT_DELIMITERS:[C
      21: iconst_2
      22: newarray       char
      24: dup
      25: iconst_0
      26: bipush        95
      28: castore
      29: dup
      30: iconst_1
      31: bipush        46
      33: castore
      34: putstatic     #85                 // Field TARGET_NAME_DELIMITERS:[C
      37: return
}
