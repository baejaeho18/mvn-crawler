Compiled from "SpringApplicationAdminMXBeanRegistrar.java"
public class org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar implements org.springframework.context.ApplicationContextAware, org.springframework.context.EnvironmentAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean, org.springframework.context.ApplicationListener<org.springframework.boot.context.event.ApplicationReadyEvent> {
  private static final org.apache.commons.logging.Log logger;

  private org.springframework.context.ConfigurableApplicationContext applicationContext;

  private org.springframework.core.env.Environment environment;

  private final javax.management.ObjectName objectName;

  private boolean ready;

  public org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar(java.lang.String) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class org/springframework/core/env/StandardEnvironment
       8: dup
       9: invokespecial #7                  // Method org/springframework/core/env/StandardEnvironment."<init>":()V
      12: putfield      #2                  // Field environment:Lorg/springframework/core/env/Environment;
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field ready:Z
      20: aload_0
      21: new           #8                  // class javax/management/ObjectName
      24: dup
      25: aload_1
      26: invokespecial #9                  // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      29: putfield      #10                 // Field objectName:Ljavax/management/ObjectName;
      32: return

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_1
       1: instanceof    #11                 // class org/springframework/context/ConfigurableApplicationContext
       4: ldc           #12                 // String ApplicationContext does not implement ConfigurableApplicationContext
       6: invokestatic  #13                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_0
      10: aload_1
      11: checkcast     #11                 // class org/springframework/context/ConfigurableApplicationContext
      14: putfield      #3                  // Field applicationContext:Lorg/springframework/context/ConfigurableApplicationContext;
      17: return

  public void setEnvironment(org.springframework.core.env.Environment);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field environment:Lorg/springframework/core/env/Environment;
       5: return

  public void onApplicationEvent(org.springframework.boot.context.event.ApplicationReadyEvent);
    Code:
       0: aload_0
       1: getfield      #3                  // Field applicationContext:Lorg/springframework/context/ConfigurableApplicationContext;
       4: aload_1
       5: invokevirtual #14                 // Method org/springframework/boot/context/event/ApplicationReadyEvent.getApplicationContext:()Lorg/springframework/context/ConfigurableApplicationContext;
       8: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          19
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field ready:Z
      19: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: invokestatic  #16                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
       3: astore_1
       4: aload_1
       5: new           #17                 // class org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #18                 // Method org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin."<init>":(Lorg/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar;Lorg/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar$1;)V
      14: aload_0
      15: getfield      #10                 // Field objectName:Ljavax/management/ObjectName;
      18: invokeinterface #19,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      23: pop
      24: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      27: invokeinterface #20,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      32: ifeq          70
      35: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      38: new           #21                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #23                 // String Application Admin MBean registered with name \'
      47: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #10                 // Field objectName:Ljavax/management/ObjectName;
      54: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #26                 // String \'
      59: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #28,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      70: return

  public void destroy() throws java.lang.Exception;
    Code:
       0: invokestatic  #16                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
       3: aload_0
       4: getfield      #10                 // Field objectName:Ljavax/management/ObjectName;
       7: invokeinterface #29,  2           // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
      12: return

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/springframework/boot/context/event/ApplicationReadyEvent
       5: invokevirtual #31                 // Method onApplicationEvent:(Lorg/springframework/boot/context/event/ApplicationReadyEvent;)V
       8: return

  static boolean access$100(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ready:Z
       4: ireturn

  static org.springframework.context.ConfigurableApplicationContext access$200(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar);
    Code:
       0: aload_0
       1: getfield      #3                  // Field applicationContext:Lorg/springframework/context/ConfigurableApplicationContext;
       4: areturn

  static org.springframework.core.env.Environment access$300(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar);
    Code:
       0: aload_0
       1: getfield      #2                  // Field environment:Lorg/springframework/core/env/Environment;
       4: areturn

  static org.apache.commons.logging.Log access$400();
    Code:
       0: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #17                 // class org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin
       2: invokestatic  #32                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
