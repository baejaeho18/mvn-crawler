Compiled from "UndertowEmbeddedServletContainerFactory.java"
public class org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory extends org.springframework.boot.context.embedded.AbstractEmbeddedServletContainerFactory implements org.springframework.context.ResourceLoaderAware {
  private static final java.util.Set<java.lang.Class<?>> NO_CLASSES;

  private java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> builderCustomizers;

  private java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> deploymentInfoCustomizers;

  private org.springframework.core.io.ResourceLoader resourceLoader;

  private java.lang.Integer bufferSize;

  private java.lang.Integer buffersPerRegion;

  private java.lang.Integer ioThreads;

  private java.lang.Integer workerThreads;

  private java.lang.Boolean directBuffers;

  private java.io.File accessLogDirectory;

  private java.lang.String accessLogPattern;

  private java.lang.String accessLogPrefix;

  private java.lang.String accessLogSuffix;

  private boolean accessLogEnabled;

  private boolean useForwardHeaders;

  public org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field builderCustomizers:Ljava/util/List;
      15: aload_0
      16: new           #3                  // class java/util/ArrayList
      19: dup
      20: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #6                  // Field deploymentInfoCustomizers:Ljava/util/List;
      26: aload_0
      27: iconst_0
      28: putfield      #7                  // Field accessLogEnabled:Z
      31: aload_0
      32: invokevirtual #8                  // Method getJspServlet:()Lorg/springframework/boot/context/embedded/JspServlet;
      35: iconst_0
      36: invokevirtual #9                  // Method org/springframework/boot/context/embedded/JspServlet.setRegistered:(Z)V
      39: return

  public org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #10                 // Method org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory."<init>":(I)V
       5: aload_0
       6: new           #3                  // class java/util/ArrayList
       9: dup
      10: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #5                  // Field builderCustomizers:Ljava/util/List;
      16: aload_0
      17: new           #3                  // class java/util/ArrayList
      20: dup
      21: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #6                  // Field deploymentInfoCustomizers:Ljava/util/List;
      27: aload_0
      28: iconst_0
      29: putfield      #7                  // Field accessLogEnabled:Z
      32: aload_0
      33: invokevirtual #8                  // Method getJspServlet:()Lorg/springframework/boot/context/embedded/JspServlet;
      36: iconst_0
      37: invokevirtual #9                  // Method org/springframework/boot/context/embedded/JspServlet.setRegistered:(Z)V
      40: return

  public org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #11                 // Method org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: new           #3                  // class java/util/ArrayList
      10: dup
      11: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      14: putfield      #5                  // Field builderCustomizers:Ljava/util/List;
      17: aload_0
      18: new           #3                  // class java/util/ArrayList
      21: dup
      22: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      25: putfield      #6                  // Field deploymentInfoCustomizers:Ljava/util/List;
      28: aload_0
      29: iconst_0
      30: putfield      #7                  // Field accessLogEnabled:Z
      33: aload_0
      34: invokevirtual #8                  // Method getJspServlet:()Lorg/springframework/boot/context/embedded/JspServlet;
      37: iconst_0
      38: invokevirtual #9                  // Method org/springframework/boot/context/embedded/JspServlet.setRegistered:(Z)V
      41: return

  public void setBuilderCustomizers(java.util.Collection<? extends org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>);
    Code:
       0: aload_1
       1: ldc           #12                 // String Customizers must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #3                  // class java/util/ArrayList
      10: dup
      11: aload_1
      12: invokespecial #14                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: putfield      #5                  // Field builderCustomizers:Ljava/util/List;
      18: return

  public java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> getBuilderCustomizers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field builderCustomizers:Ljava/util/List;
       4: areturn

  public void addBuilderCustomizers(org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer...);
    Code:
       0: aload_1
       1: ldc           #12                 // String Customizers must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field builderCustomizers:Ljava/util/List;
      10: aload_1
      11: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokeinterface #16,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public void setDeploymentInfoCustomizers(java.util.Collection<? extends org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>);
    Code:
       0: aload_1
       1: ldc           #12                 // String Customizers must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #3                  // class java/util/ArrayList
      10: dup
      11: aload_1
      12: invokespecial #14                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: putfield      #6                  // Field deploymentInfoCustomizers:Ljava/util/List;
      18: return

  public java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> getDeploymentInfoCustomizers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field deploymentInfoCustomizers:Ljava/util/List;
       4: areturn

  public void addDeploymentInfoCustomizers(org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer...);
    Code:
       0: aload_1
       1: ldc           #17                 // String UndertowDeploymentInfoCustomizers must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field deploymentInfoCustomizers:Ljava/util/List;
      10: aload_1
      11: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokeinterface #16,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public org.springframework.boot.context.embedded.EmbeddedServletContainer getEmbeddedServletContainer(org.springframework.boot.web.servlet.ServletContextInitializer...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method createDeploymentManager:([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)Lio/undertow/servlet/api/DeploymentManager;
       5: astore_2
       6: aload_0
       7: invokevirtual #19                 // Method getPort:()I
      10: istore_3
      11: aload_0
      12: iload_3
      13: invokespecial #20                 // Method createBuilder:(I)Lio/undertow/Undertow$Builder;
      16: astore        4
      18: aload_0
      19: aload         4
      21: aload_2
      22: iload_3
      23: invokevirtual #21                 // Method getUndertowEmbeddedServletContainer:(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;I)Lorg/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer;
      26: areturn

  private io.undertow.Undertow$Builder createBuilder(int);
    Code:
       0: invokestatic  #22                 // Method io/undertow/Undertow.builder:()Lio/undertow/Undertow$Builder;
       3: astore_2
       4: aload_0
       5: getfield      #23                 // Field bufferSize:Ljava/lang/Integer;
       8: ifnull        23
      11: aload_2
      12: aload_0
      13: getfield      #23                 // Field bufferSize:Ljava/lang/Integer;
      16: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      19: invokevirtual #25                 // Method io/undertow/Undertow$Builder.setBufferSize:(I)Lio/undertow/Undertow$Builder;
      22: pop
      23: aload_0
      24: getfield      #26                 // Field buffersPerRegion:Ljava/lang/Integer;
      27: ifnull        42
      30: aload_2
      31: aload_0
      32: getfield      #26                 // Field buffersPerRegion:Ljava/lang/Integer;
      35: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      38: invokevirtual #27                 // Method io/undertow/Undertow$Builder.setBuffersPerRegion:(I)Lio/undertow/Undertow$Builder;
      41: pop
      42: aload_0
      43: getfield      #28                 // Field ioThreads:Ljava/lang/Integer;
      46: ifnull        61
      49: aload_2
      50: aload_0
      51: getfield      #28                 // Field ioThreads:Ljava/lang/Integer;
      54: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #29                 // Method io/undertow/Undertow$Builder.setIoThreads:(I)Lio/undertow/Undertow$Builder;
      60: pop
      61: aload_0
      62: getfield      #30                 // Field workerThreads:Ljava/lang/Integer;
      65: ifnull        80
      68: aload_2
      69: aload_0
      70: getfield      #30                 // Field workerThreads:Ljava/lang/Integer;
      73: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      76: invokevirtual #31                 // Method io/undertow/Undertow$Builder.setWorkerThreads:(I)Lio/undertow/Undertow$Builder;
      79: pop
      80: aload_0
      81: getfield      #32                 // Field directBuffers:Ljava/lang/Boolean;
      84: ifnull        99
      87: aload_2
      88: aload_0
      89: getfield      #32                 // Field directBuffers:Ljava/lang/Boolean;
      92: invokevirtual #33                 // Method java/lang/Boolean.booleanValue:()Z
      95: invokevirtual #34                 // Method io/undertow/Undertow$Builder.setDirectBuffers:(Z)Lio/undertow/Undertow$Builder;
      98: pop
      99: aload_0
     100: invokevirtual #35                 // Method getSsl:()Lorg/springframework/boot/context/embedded/Ssl;
     103: ifnull        129
     106: aload_0
     107: invokevirtual #35                 // Method getSsl:()Lorg/springframework/boot/context/embedded/Ssl;
     110: invokevirtual #36                 // Method org/springframework/boot/context/embedded/Ssl.isEnabled:()Z
     113: ifeq          129
     116: aload_0
     117: aload_0
     118: invokevirtual #35                 // Method getSsl:()Lorg/springframework/boot/context/embedded/Ssl;
     121: iload_1
     122: aload_2
     123: invokespecial #37                 // Method configureSsl:(Lorg/springframework/boot/context/embedded/Ssl;ILio/undertow/Undertow$Builder;)V
     126: goto          139
     129: aload_2
     130: iload_1
     131: aload_0
     132: invokespecial #38                 // Method getListenAddress:()Ljava/lang/String;
     135: invokevirtual #39                 // Method io/undertow/Undertow$Builder.addHttpListener:(ILjava/lang/String;)Lio/undertow/Undertow$Builder;
     138: pop
     139: aload_0
     140: getfield      #5                  // Field builderCustomizers:Ljava/util/List;
     143: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     148: astore_3
     149: aload_3
     150: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     155: ifeq          180
     158: aload_3
     159: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     164: checkcast     #43                 // class org/springframework/boot/context/embedded/undertow/UndertowBuilderCustomizer
     167: astore        4
     169: aload         4
     171: aload_2
     172: invokeinterface #44,  2           // InterfaceMethod org/springframework/boot/context/embedded/undertow/UndertowBuilderCustomizer.customize:(Lio/undertow/Undertow$Builder;)V
     177: goto          149
     180: aload_2
     181: areturn

  private void configureSsl(org.springframework.boot.context.embedded.Ssl, int, io.undertow.Undertow$Builder);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method org/springframework/boot/context/embedded/Ssl.getProtocol:()Ljava/lang/String;
       4: invokestatic  #46                 // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
       7: astore        4
       9: aload         4
      11: aload_0
      12: invokespecial #47                 // Method getKeyManagers:()[Ljavax/net/ssl/KeyManager;
      15: aload_0
      16: invokespecial #48                 // Method getTrustManagers:()[Ljavax/net/ssl/TrustManager;
      19: aconst_null
      20: invokevirtual #49                 // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
      23: aload_3
      24: iload_2
      25: aload_0
      26: invokespecial #38                 // Method getListenAddress:()Ljava/lang/String;
      29: aload         4
      31: invokevirtual #50                 // Method io/undertow/Undertow$Builder.addHttpsListener:(ILjava/lang/String;Ljavax/net/ssl/SSLContext;)Lio/undertow/Undertow$Builder;
      34: pop
      35: aload_3
      36: getstatic     #51                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      39: aload_0
      40: aload_1
      41: invokespecial #52                 // Method getSslClientAuthMode:(Lorg/springframework/boot/context/embedded/Ssl;)Lorg/xnio/SslClientAuthMode;
      44: invokevirtual #53                 // Method io/undertow/Undertow$Builder.setSocketOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
      47: pop
      48: aload_1
      49: invokevirtual #54                 // Method org/springframework/boot/context/embedded/Ssl.getEnabledProtocols:()[Ljava/lang/String;
      52: ifnull        70
      55: aload_3
      56: getstatic     #55                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
      59: aload_1
      60: invokevirtual #54                 // Method org/springframework/boot/context/embedded/Ssl.getEnabledProtocols:()[Ljava/lang/String;
      63: invokestatic  #56                 // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
      66: invokevirtual #53                 // Method io/undertow/Undertow$Builder.setSocketOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
      69: pop
      70: aload_1
      71: invokevirtual #57                 // Method org/springframework/boot/context/embedded/Ssl.getCiphers:()[Ljava/lang/String;
      74: ifnull        92
      77: aload_3
      78: getstatic     #58                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      81: aload_1
      82: invokevirtual #57                 // Method org/springframework/boot/context/embedded/Ssl.getCiphers:()[Ljava/lang/String;
      85: invokestatic  #56                 // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
      88: invokevirtual #53                 // Method io/undertow/Undertow$Builder.setSocketOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
      91: pop
      92: goto          119
      95: astore        4
      97: new           #60                 // class java/lang/IllegalStateException
     100: dup
     101: aload         4
     103: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     106: athrow
     107: astore        4
     109: new           #60                 // class java/lang/IllegalStateException
     112: dup
     113: aload         4
     115: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     118: athrow
     119: return
    Exception table:
       from    to  target type
           0    92    95   Class java/security/NoSuchAlgorithmException
           0    92   107   Class java/security/KeyManagementException

  private java.lang.String getListenAddress();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getAddress:()Ljava/net/InetAddress;
       4: ifnonnull     10
       7: ldc           #64                 // String 0.0.0.0
       9: areturn
      10: aload_0
      11: invokevirtual #63                 // Method getAddress:()Ljava/net/InetAddress;
      14: invokevirtual #65                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      17: areturn

  private org.xnio.SslClientAuthMode getSslClientAuthMode(org.springframework.boot.context.embedded.Ssl);
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method org/springframework/boot/context/embedded/Ssl.getClientAuth:()Lorg/springframework/boot/context/embedded/Ssl$ClientAuth;
       4: getstatic     #67                 // Field org/springframework/boot/context/embedded/Ssl$ClientAuth.NEED:Lorg/springframework/boot/context/embedded/Ssl$ClientAuth;
       7: if_acmpne     14
      10: getstatic     #68                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      13: areturn
      14: aload_1
      15: invokevirtual #66                 // Method org/springframework/boot/context/embedded/Ssl.getClientAuth:()Lorg/springframework/boot/context/embedded/Ssl$ClientAuth;
      18: getstatic     #69                 // Field org/springframework/boot/context/embedded/Ssl$ClientAuth.WANT:Lorg/springframework/boot/context/embedded/Ssl$ClientAuth;
      21: if_acmpne     28
      24: getstatic     #70                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      27: areturn
      28: getstatic     #71                 // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      31: areturn

  private javax.net.ssl.KeyManager[] getKeyManagers();
    Code:
       0: aload_0
       1: invokespecial #72                 // Method getKeyStore:()Ljava/security/KeyStore;
       4: astore_1
       5: invokestatic  #73                 // Method javax/net/ssl/KeyManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
       8: invokestatic  #74                 // Method javax/net/ssl/KeyManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;
      11: astore_2
      12: aload_0
      13: invokevirtual #35                 // Method getSsl:()Lorg/springframework/boot/context/embedded/Ssl;
      16: astore_3
      17: aload_3
      18: invokevirtual #75                 // Method org/springframework/boot/context/embedded/Ssl.getKeyPassword:()Ljava/lang/String;
      21: ifnull        34
      24: aload_3
      25: invokevirtual #75                 // Method org/springframework/boot/context/embedded/Ssl.getKeyPassword:()Ljava/lang/String;
      28: invokevirtual #76                 // Method java/lang/String.toCharArray:()[C
      31: goto          35
      34: aconst_null
      35: astore        4
      37: aload         4
      39: ifnonnull     58
      42: aload_3
      43: invokevirtual #77                 // Method org/springframework/boot/context/embedded/Ssl.getKeyStorePassword:()Ljava/lang/String;
      46: ifnull        58
      49: aload_3
      50: invokevirtual #77                 // Method org/springframework/boot/context/embedded/Ssl.getKeyStorePassword:()Ljava/lang/String;
      53: invokevirtual #76                 // Method java/lang/String.toCharArray:()[C
      56: astore        4
      58: aload_2
      59: aload_1
      60: aload         4
      62: invokevirtual #78                 // Method javax/net/ssl/KeyManagerFactory.init:(Ljava/security/KeyStore;[C)V
      65: aload_2
      66: invokevirtual #79                 // Method javax/net/ssl/KeyManagerFactory.getKeyManagers:()[Ljavax/net/ssl/KeyManager;
      69: areturn
      70: astore_1
      71: new           #60                 // class java/lang/IllegalStateException
      74: dup
      75: aload_1
      76: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      79: athrow
    Exception table:
       from    to  target type
           0    69    70   Class java/lang/Exception

  private java.security.KeyStore getKeyStore() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getSslStoreProvider:()Lorg/springframework/boot/context/embedded/SslStoreProvider;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #81                 // Method getSslStoreProvider:()Lorg/springframework/boot/context/embedded/SslStoreProvider;
      11: invokeinterface #82,  1           // InterfaceMethod org/springframework/boot/context/embedded/SslStoreProvider.getKeyStore:()Ljava/security/KeyStore;
      16: areturn
      17: aload_0
      18: invokevirtual #35                 // Method getSsl:()Lorg/springframework/boot/context/embedded/Ssl;
      21: astore_1
      22: aload_0
      23: aload_1
      24: invokevirtual #83                 // Method org/springframework/boot/context/embedded/Ssl.getKeyStoreType:()Ljava/lang/String;
      27: aload_1
      28: invokevirtual #84                 // Method org/springframework/boot/context/embedded/Ssl.getKeyStore:()Ljava/lang/String;
      31: aload_1
      32: invokevirtual #77                 // Method org/springframework/boot/context/embedded/Ssl.getKeyStorePassword:()Ljava/lang/String;
      35: invokespecial #85                 // Method loadKeyStore:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
      38: areturn

  private javax.net.ssl.TrustManager[] getTrustManagers();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method getTrustStore:()Ljava/security/KeyStore;
       4: astore_1
       5: invokestatic  #87                 // Method javax/net/ssl/TrustManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
       8: invokestatic  #88                 // Method javax/net/ssl/TrustManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokevirtual #89                 // Method javax/net/ssl/TrustManagerFactory.init:(Ljava/security/KeyStore;)V
      17: aload_2
      18: invokevirtual #90                 // Method javax/net/ssl/TrustManagerFactory.getTrustManagers:()[Ljavax/net/ssl/TrustManager;
      21: areturn
      22: astore_1
      23: new           #60                 // class java/lang/IllegalStateException
      26: dup
      27: aload_1
      28: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
    Exception table:
       from    to  target type
           0    21    22   Class java/lang/Exception

  private java.security.KeyStore getTrustStore() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getSslStoreProvider:()Lorg/springframework/boot/context/embedded/SslStoreProvider;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #81                 // Method getSslStoreProvider:()Lorg/springframework/boot/context/embedded/SslStoreProvider;
      11: invokeinterface #91,  1           // InterfaceMethod org/springframework/boot/context/embedded/SslStoreProvider.getTrustStore:()Ljava/security/KeyStore;
      16: areturn
      17: aload_0
      18: invokevirtual #35                 // Method getSsl:()Lorg/springframework/boot/context/embedded/Ssl;
      21: astore_1
      22: aload_0
      23: aload_1
      24: invokevirtual #92                 // Method org/springframework/boot/context/embedded/Ssl.getTrustStoreType:()Ljava/lang/String;
      27: aload_1
      28: invokevirtual #93                 // Method org/springframework/boot/context/embedded/Ssl.getTrustStore:()Ljava/lang/String;
      31: aload_1
      32: invokevirtual #94                 // Method org/springframework/boot/context/embedded/Ssl.getTrustStorePassword:()Ljava/lang/String;
      35: invokespecial #85                 // Method loadKeyStore:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
      38: areturn

  private java.security.KeyStore loadKeyStore(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnonnull     9
       4: ldc           #95                 // String JKS
       6: goto          10
       9: aload_1
      10: astore_1
      11: aload_2
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_1
      18: invokestatic  #96                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      21: astore        4
      23: aload_2
      24: invokestatic  #97                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      27: astore        5
      29: aload         4
      31: aload         5
      33: invokevirtual #98                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      36: aload_3
      37: ifnonnull     44
      40: aconst_null
      41: goto          48
      44: aload_3
      45: invokevirtual #76                 // Method java/lang/String.toCharArray:()[C
      48: invokevirtual #99                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      51: aload         4
      53: areturn

  private io.undertow.servlet.api.DeploymentManager createDeploymentManager(org.springframework.boot.web.servlet.ServletContextInitializer...);
    Code:
       0: invokestatic  #100                // Method io/undertow/servlet/Servlets.deployment:()Lio/undertow/servlet/api/DeploymentInfo;
       3: astore_2
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokespecial #101                // Method registerServletContainerInitializerToDriveServletContextInitializers:(Lio/undertow/servlet/api/DeploymentInfo;[Lorg/springframework/boot/web/servlet/ServletContextInitializer;)V
      10: aload_2
      11: aload_0
      12: invokespecial #102                // Method getServletClassLoader:()Ljava/lang/ClassLoader;
      15: invokevirtual #103                // Method io/undertow/servlet/api/DeploymentInfo.setClassLoader:(Ljava/lang/ClassLoader;)Lio/undertow/servlet/api/DeploymentInfo;
      18: pop
      19: aload_2
      20: aload_0
      21: invokevirtual #104                // Method getContextPath:()Ljava/lang/String;
      24: invokevirtual #105                // Method io/undertow/servlet/api/DeploymentInfo.setContextPath:(Ljava/lang/String;)Lio/undertow/servlet/api/DeploymentInfo;
      27: pop
      28: aload_2
      29: aload_0
      30: invokevirtual #106                // Method getDisplayName:()Ljava/lang/String;
      33: invokevirtual #107                // Method io/undertow/servlet/api/DeploymentInfo.setDisplayName:(Ljava/lang/String;)Lio/undertow/servlet/api/DeploymentInfo;
      36: pop
      37: aload_2
      38: ldc           #108                // String spring-boot
      40: invokevirtual #109                // Method io/undertow/servlet/api/DeploymentInfo.setDeploymentName:(Ljava/lang/String;)Lio/undertow/servlet/api/DeploymentInfo;
      43: pop
      44: aload_0
      45: invokevirtual #110                // Method isRegisterDefaultServlet:()Z
      48: ifeq          63
      51: aload_2
      52: ldc           #111                // String default
      54: ldc           #112                // class io/undertow/servlet/handlers/DefaultServlet
      56: invokestatic  #113                // Method io/undertow/servlet/Servlets.servlet:(Ljava/lang/String;Ljava/lang/Class;)Lio/undertow/servlet/api/ServletInfo;
      59: invokevirtual #114                // Method io/undertow/servlet/api/DeploymentInfo.addServlet:(Lio/undertow/servlet/api/ServletInfo;)Lio/undertow/servlet/api/DeploymentInfo;
      62: pop
      63: aload_0
      64: aload_2
      65: invokespecial #115                // Method configureErrorPages:(Lio/undertow/servlet/api/DeploymentInfo;)V
      68: aload_2
      69: getstatic     #116                // Field io/undertow/servlet/api/ServletStackTraces.NONE:Lio/undertow/servlet/api/ServletStackTraces;
      72: invokevirtual #117                // Method io/undertow/servlet/api/DeploymentInfo.setServletStackTraces:(Lio/undertow/servlet/api/ServletStackTraces;)Lio/undertow/servlet/api/DeploymentInfo;
      75: pop
      76: aload_2
      77: aload_0
      78: invokespecial #118                // Method getDocumentRootResourceManager:()Lio/undertow/server/handlers/resource/ResourceManager;
      81: invokevirtual #119                // Method io/undertow/servlet/api/DeploymentInfo.setResourceManager:(Lio/undertow/server/handlers/resource/ResourceManager;)Lio/undertow/servlet/api/DeploymentInfo;
      84: pop
      85: aload_0
      86: aload_2
      87: invokespecial #120                // Method configureMimeMappings:(Lio/undertow/servlet/api/DeploymentInfo;)V
      90: aload_0
      91: getfield      #6                  // Field deploymentInfoCustomizers:Ljava/util/List;
      94: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      99: astore_3
     100: aload_3
     101: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     106: ifeq          131
     109: aload_3
     110: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     115: checkcast     #121                // class org/springframework/boot/context/embedded/undertow/UndertowDeploymentInfoCustomizer
     118: astore        4
     120: aload         4
     122: aload_2
     123: invokeinterface #122,  2          // InterfaceMethod org/springframework/boot/context/embedded/undertow/UndertowDeploymentInfoCustomizer.customize:(Lio/undertow/servlet/api/DeploymentInfo;)V
     128: goto          100
     131: aload_0
     132: invokevirtual #123                // Method isAccessLogEnabled:()Z
     135: ifeq          143
     138: aload_0
     139: aload_2
     140: invokespecial #124                // Method configureAccessLog:(Lio/undertow/servlet/api/DeploymentInfo;)V
     143: aload_0
     144: invokevirtual #125                // Method isPersistSession:()Z
     147: ifeq          168
     150: aload_0
     151: invokevirtual #126                // Method getValidSessionStoreDir:()Ljava/io/File;
     154: astore_3
     155: aload_2
     156: new           #127                // class org/springframework/boot/context/embedded/undertow/FileSessionPersistence
     159: dup
     160: aload_3
     161: invokespecial #128                // Method org/springframework/boot/context/embedded/undertow/FileSessionPersistence."<init>":(Ljava/io/File;)V
     164: invokevirtual #129                // Method io/undertow/servlet/api/DeploymentInfo.setSessionPersistenceManager:(Lio/undertow/servlet/api/SessionPersistenceManager;)Lio/undertow/servlet/api/DeploymentInfo;
     167: pop
     168: aload_0
     169: aload_2
     170: invokespecial #130                // Method addLocaleMappings:(Lio/undertow/servlet/api/DeploymentInfo;)V
     173: invokestatic  #131                // Method io/undertow/servlet/Servlets.newContainer:()Lio/undertow/servlet/api/ServletContainer;
     176: aload_2
     177: invokeinterface #132,  2          // InterfaceMethod io/undertow/servlet/api/ServletContainer.addDeployment:(Lio/undertow/servlet/api/DeploymentInfo;)Lio/undertow/servlet/api/DeploymentManager;
     182: astore_3
     183: aload_3
     184: invokeinterface #133,  1          // InterfaceMethod io/undertow/servlet/api/DeploymentManager.deploy:()V
     189: aload_3
     190: invokeinterface #134,  1          // InterfaceMethod io/undertow/servlet/api/DeploymentManager.getDeployment:()Lio/undertow/servlet/api/Deployment;
     195: invokeinterface #135,  1          // InterfaceMethod io/undertow/servlet/api/Deployment.getSessionManager:()Lio/undertow/server/session/SessionManager;
     200: astore        4
     202: aload_0
     203: invokevirtual #136                // Method getSessionTimeout:()I
     206: ifle          216
     209: aload_0
     210: invokevirtual #136                // Method getSessionTimeout:()I
     213: goto          217
     216: iconst_m1
     217: istore        5
     219: aload         4
     221: iload         5
     223: invokeinterface #137,  2          // InterfaceMethod io/undertow/server/session/SessionManager.setDefaultSessionTimeout:(I)V
     228: aload_3
     229: areturn

  private void configureAccessLog(io.undertow.servlet.api.DeploymentInfo);
    Code:
       0: aload_1
       1: new           #138                // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory$1
       4: dup
       5: aload_0
       6: invokespecial #139                // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory$1."<init>":(Lorg/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory;)V
       9: invokevirtual #140                // Method io/undertow/servlet/api/DeploymentInfo.addInitialHandlerChainWrapper:(Lio/undertow/server/HandlerWrapper;)Lio/undertow/servlet/api/DeploymentInfo;
      12: pop
      13: return

  private io.undertow.server.handlers.accesslog.AccessLogHandler createAccessLogHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #141                // Method createAccessLogDirectoryIfNecessary:()V
       4: aload_0
       5: getfield      #142                // Field accessLogPrefix:Ljava/lang/String;
       8: ifnull        18
      11: aload_0
      12: getfield      #142                // Field accessLogPrefix:Ljava/lang/String;
      15: goto          20
      18: ldc           #143                // String access_log.
      20: astore_2
      21: new           #144                // class io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver
      24: dup
      25: aload_0
      26: invokespecial #145                // Method createWorker:()Lorg/xnio/XnioWorker;
      29: aload_0
      30: getfield      #146                // Field accessLogDirectory:Ljava/io/File;
      33: aload_2
      34: aload_0
      35: getfield      #147                // Field accessLogSuffix:Ljava/lang/String;
      38: invokespecial #148                // Method io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver."<init>":(Ljava/util/concurrent/Executor;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V
      41: astore_3
      42: aload_0
      43: getfield      #149                // Field accessLogPattern:Ljava/lang/String;
      46: ifnull        56
      49: aload_0
      50: getfield      #149                // Field accessLogPattern:Ljava/lang/String;
      53: goto          58
      56: ldc           #150                // String common
      58: astore        4
      60: new           #151                // class io/undertow/server/handlers/accesslog/AccessLogHandler
      63: dup
      64: aload_1
      65: aload_3
      66: aload         4
      68: ldc           #152                // class io/undertow/Undertow
      70: invokevirtual #153                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      73: invokespecial #154                // Method io/undertow/server/handlers/accesslog/AccessLogHandler."<init>":(Lio/undertow/server/HttpHandler;Lio/undertow/server/handlers/accesslog/AccessLogReceiver;Ljava/lang/String;Ljava/lang/ClassLoader;)V
      76: areturn
      77: astore_2
      78: new           #60                 // class java/lang/IllegalStateException
      81: dup
      82: ldc           #156                // String Failed to create AccessLogHandler
      84: aload_2
      85: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      88: athrow
    Exception table:
       from    to  target type
           0    76    77   Class java/io/IOException

  private void createAccessLogDirectoryIfNecessary();
    Code:
       0: aload_0
       1: getfield      #146                // Field accessLogDirectory:Ljava/io/File;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #158                // String Access log directory is not set
      14: invokestatic  #159                // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #146                // Field accessLogDirectory:Ljava/io/File;
      21: invokevirtual #160                // Method java/io/File.isDirectory:()Z
      24: ifne          72
      27: aload_0
      28: getfield      #146                // Field accessLogDirectory:Ljava/io/File;
      31: invokevirtual #161                // Method java/io/File.mkdirs:()Z
      34: ifne          72
      37: new           #60                 // class java/lang/IllegalStateException
      40: dup
      41: new           #162                // class java/lang/StringBuilder
      44: dup
      45: invokespecial #163                // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #164                // String Failed to create access log directory \'
      50: invokevirtual #165                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #146                // Field accessLogDirectory:Ljava/io/File;
      57: invokevirtual #166                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #167                // String \'
      62: invokevirtual #165                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #168                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #169                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  private org.xnio.XnioWorker createWorker() throws java.io.IOException;
    Code:
       0: ldc           #152                // class io/undertow/Undertow
       2: invokevirtual #153                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: invokestatic  #170                // Method org/xnio/Xnio.getInstance:(Ljava/lang/ClassLoader;)Lorg/xnio/Xnio;
       8: astore_1
       9: aload_1
      10: invokestatic  #171                // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      13: getstatic     #172                // Field org/xnio/Options.THREAD_DAEMON:Lorg/xnio/Option;
      16: iconst_1
      17: invokevirtual #173                // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      20: invokevirtual #174                // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      23: invokevirtual #175                // Method org/xnio/Xnio.createWorker:(Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker;
      26: areturn

  private void addLocaleMappings(io.undertow.servlet.api.DeploymentInfo);
    Code:
       0: aload_0
       1: invokevirtual #176                // Method getLocaleCharsetMappings:()Ljava/util/Map;
       4: invokeinterface #177,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #178,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          74
      24: aload_2
      25: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #179                // class java/util/Map$Entry
      33: astore_3
      34: aload_3
      35: invokeinterface #180,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #181                // class java/util/Locale
      43: astore        4
      45: aload_3
      46: invokeinterface #182,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: checkcast     #183                // class java/nio/charset/Charset
      54: astore        5
      56: aload_1
      57: aload         4
      59: invokevirtual #184                // Method java/util/Locale.toString:()Ljava/lang/String;
      62: aload         5
      64: invokevirtual #185                // Method java/nio/charset/Charset.toString:()Ljava/lang/String;
      67: invokevirtual #186                // Method io/undertow/servlet/api/DeploymentInfo.addLocaleCharsetMapping:(Ljava/lang/String;Ljava/lang/String;)Lio/undertow/servlet/api/DeploymentInfo;
      70: pop
      71: goto          15
      74: return

  private void registerServletContainerInitializerToDriveServletContextInitializers(io.undertow.servlet.api.DeploymentInfo, org.springframework.boot.web.servlet.ServletContextInitializer...);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #187                // Method mergeInitializers:([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)[Lorg/springframework/boot/web/servlet/ServletContextInitializer;
       5: astore_3
       6: new           #188                // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory$Initializer
       9: dup
      10: aload_3
      11: invokespecial #189                // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory$Initializer."<init>":([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)V
      14: astore        4
      16: aload_1
      17: new           #190                // class io/undertow/servlet/api/ServletContainerInitializerInfo
      20: dup
      21: ldc           #188                // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory$Initializer
      23: new           #191                // class io/undertow/servlet/util/ImmediateInstanceFactory
      26: dup
      27: aload         4
      29: invokespecial #192                // Method io/undertow/servlet/util/ImmediateInstanceFactory."<init>":(Ljava/lang/Object;)V
      32: getstatic     #193                // Field NO_CLASSES:Ljava/util/Set;
      35: invokespecial #194                // Method io/undertow/servlet/api/ServletContainerInitializerInfo."<init>":(Ljava/lang/Class;Lio/undertow/servlet/api/InstanceFactory;Ljava/util/Set;)V
      38: invokevirtual #195                // Method io/undertow/servlet/api/DeploymentInfo.addServletContainerInitalizer:(Lio/undertow/servlet/api/ServletContainerInitializerInfo;)Lio/undertow/servlet/api/DeploymentInfo;
      41: pop
      42: return

  private java.lang.ClassLoader getServletClassLoader();
    Code:
       0: aload_0
       1: getfield      #196                // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
       4: ifnull        17
       7: aload_0
       8: getfield      #196                // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      11: invokeinterface #197,  1          // InterfaceMethod org/springframework/core/io/ResourceLoader.getClassLoader:()Ljava/lang/ClassLoader;
      16: areturn
      17: aload_0
      18: invokevirtual #198                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #153                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      24: areturn

  private io.undertow.server.handlers.resource.ResourceManager getDocumentRootResourceManager();
    Code:
       0: aload_0
       1: invokespecial #199                // Method getCanonicalDocumentRoot:()Ljava/io/File;
       4: astore_1
       5: aload_1
       6: invokevirtual #160                // Method java/io/File.isDirectory:()Z
       9: ifeq          22
      12: new           #200                // class io/undertow/server/handlers/resource/FileResourceManager
      15: dup
      16: aload_1
      17: lconst_0
      18: invokespecial #201                // Method io/undertow/server/handlers/resource/FileResourceManager."<init>":(Ljava/io/File;J)V
      21: areturn
      22: aload_1
      23: invokevirtual #202                // Method java/io/File.isFile:()Z
      26: ifeq          38
      29: new           #203                // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory$JarResourceManager
      32: dup
      33: aload_1
      34: invokespecial #204                // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory$JarResourceManager."<init>":(Ljava/io/File;)V
      37: areturn
      38: getstatic     #205                // Field io/undertow/server/handlers/resource/ResourceManager.EMPTY_RESOURCE_MANAGER:Lio/undertow/server/handlers/resource/ResourceManager;
      41: areturn

  private java.io.File getCanonicalDocumentRoot();
    Code:
       0: aload_0
       1: invokevirtual #206                // Method getValidDocumentRoot:()Ljava/io/File;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          19
      13: aload_0
      14: ldc           #207                // String undertow-docbase
      16: invokevirtual #208                // Method createTempDir:(Ljava/lang/String;)Ljava/io/File;
      19: astore_1
      20: aload_1
      21: invokevirtual #209                // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      24: areturn
      25: astore_1
      26: new           #60                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #210                // String Cannot get canonical document root
      32: aload_1
      33: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/io/IOException

  private void configureErrorPages(io.undertow.servlet.api.DeploymentInfo);
    Code:
       0: aload_0
       1: invokevirtual #211                // Method getErrorPages:()Ljava/util/Set;
       4: invokeinterface #178,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #212                // class org/springframework/boot/web/servlet/ErrorPage
      28: astore_3
      29: aload_1
      30: aload_0
      31: aload_3
      32: invokespecial #213                // Method getUndertowErrorPage:(Lorg/springframework/boot/web/servlet/ErrorPage;)Lio/undertow/servlet/api/ErrorPage;
      35: invokevirtual #214                // Method io/undertow/servlet/api/DeploymentInfo.addErrorPage:(Lio/undertow/servlet/api/ErrorPage;)Lio/undertow/servlet/api/DeploymentInfo;
      38: pop
      39: goto          10
      42: return

  private io.undertow.servlet.api.ErrorPage getUndertowErrorPage(org.springframework.boot.web.servlet.ErrorPage);
    Code:
       0: aload_1
       1: invokevirtual #215                // Method org/springframework/boot/web/servlet/ErrorPage.getStatus:()Lorg/springframework/http/HttpStatus;
       4: ifnull        23
       7: new           #216                // class io/undertow/servlet/api/ErrorPage
      10: dup
      11: aload_1
      12: invokevirtual #217                // Method org/springframework/boot/web/servlet/ErrorPage.getPath:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #218                // Method org/springframework/boot/web/servlet/ErrorPage.getStatusCode:()I
      19: invokespecial #219                // Method io/undertow/servlet/api/ErrorPage."<init>":(Ljava/lang/String;I)V
      22: areturn
      23: aload_1
      24: invokevirtual #220                // Method org/springframework/boot/web/servlet/ErrorPage.getException:()Ljava/lang/Class;
      27: ifnull        46
      30: new           #216                // class io/undertow/servlet/api/ErrorPage
      33: dup
      34: aload_1
      35: invokevirtual #217                // Method org/springframework/boot/web/servlet/ErrorPage.getPath:()Ljava/lang/String;
      38: aload_1
      39: invokevirtual #220                // Method org/springframework/boot/web/servlet/ErrorPage.getException:()Ljava/lang/Class;
      42: invokespecial #221                // Method io/undertow/servlet/api/ErrorPage."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
      45: areturn
      46: new           #216                // class io/undertow/servlet/api/ErrorPage
      49: dup
      50: aload_1
      51: invokevirtual #217                // Method org/springframework/boot/web/servlet/ErrorPage.getPath:()Ljava/lang/String;
      54: invokespecial #222                // Method io/undertow/servlet/api/ErrorPage."<init>":(Ljava/lang/String;)V
      57: areturn

  private void configureMimeMappings(io.undertow.servlet.api.DeploymentInfo);
    Code:
       0: aload_0
       1: invokevirtual #223                // Method getMimeMappings:()Lorg/springframework/boot/context/embedded/MimeMappings;
       4: invokevirtual #224                // Method org/springframework/boot/context/embedded/MimeMappings.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          50
      17: aload_2
      18: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #225                // class org/springframework/boot/context/embedded/MimeMappings$Mapping
      26: astore_3
      27: aload_1
      28: new           #226                // class io/undertow/servlet/api/MimeMapping
      31: dup
      32: aload_3
      33: invokevirtual #227                // Method org/springframework/boot/context/embedded/MimeMappings$Mapping.getExtension:()Ljava/lang/String;
      36: aload_3
      37: invokevirtual #228                // Method org/springframework/boot/context/embedded/MimeMappings$Mapping.getMimeType:()Ljava/lang/String;
      40: invokespecial #229                // Method io/undertow/servlet/api/MimeMapping."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      43: invokevirtual #230                // Method io/undertow/servlet/api/DeploymentInfo.addMimeMapping:(Lio/undertow/servlet/api/MimeMapping;)Lio/undertow/servlet/api/DeploymentInfo;
      46: pop
      47: goto          8
      50: return

  protected org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer getUndertowEmbeddedServletContainer(io.undertow.Undertow$Builder, io.undertow.servlet.api.DeploymentManager, int);
    Code:
       0: new           #231                // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: invokevirtual #104                // Method getContextPath:()Ljava/lang/String;
      10: aload_0
      11: invokevirtual #232                // Method isUseForwardHeaders:()Z
      14: iload_3
      15: iflt          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: aload_0
      24: invokevirtual #233                // Method getCompression:()Lorg/springframework/boot/context/embedded/Compression;
      27: aload_0
      28: invokevirtual #234                // Method getServerHeader:()Ljava/lang/String;
      31: invokespecial #235                // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer."<init>":(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/context/embedded/Compression;Ljava/lang/String;)V
      34: areturn

  public void setResourceLoader(org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #196                // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
       5: return

  public void setBufferSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field bufferSize:Ljava/lang/Integer;
       5: return

  public void setBuffersPerRegion(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field buffersPerRegion:Ljava/lang/Integer;
       5: return

  public void setIoThreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field ioThreads:Ljava/lang/Integer;
       5: return

  public void setWorkerThreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field workerThreads:Ljava/lang/Integer;
       5: return

  public void setDirectBuffers(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field directBuffers:Ljava/lang/Boolean;
       5: return

  public void setAccessLogDirectory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #146                // Field accessLogDirectory:Ljava/io/File;
       5: return

  public void setAccessLogPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #149                // Field accessLogPattern:Ljava/lang/String;
       5: return

  public java.lang.String getAccessLogPrefix();
    Code:
       0: aload_0
       1: getfield      #142                // Field accessLogPrefix:Ljava/lang/String;
       4: areturn

  public void setAccessLogPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #142                // Field accessLogPrefix:Ljava/lang/String;
       5: return

  public void setAccessLogSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #147                // Field accessLogSuffix:Ljava/lang/String;
       5: return

  public void setAccessLogEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field accessLogEnabled:Z
       5: return

  public boolean isAccessLogEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field accessLogEnabled:Z
       4: ireturn

  protected final boolean isUseForwardHeaders();
    Code:
       0: aload_0
       1: getfield      #236                // Field useForwardHeaders:Z
       4: ireturn

  public void setUseForwardHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #236                // Field useForwardHeaders:Z
       5: return

  static io.undertow.server.handlers.accesslog.AccessLogHandler access$000(org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method createAccessLogHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/accesslog/AccessLogHandler;
       5: areturn

  static {};
    Code:
       0: invokestatic  #237                // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: putstatic     #193                // Field NO_CLASSES:Ljava/util/Set;
       6: return
}
