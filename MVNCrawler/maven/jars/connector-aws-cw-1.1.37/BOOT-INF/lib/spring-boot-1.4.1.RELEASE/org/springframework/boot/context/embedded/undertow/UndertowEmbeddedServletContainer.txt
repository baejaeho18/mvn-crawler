Compiled from "UndertowEmbeddedServletContainer.java"
public class org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer implements org.springframework.boot.context.embedded.EmbeddedServletContainer {
  private static final org.apache.commons.logging.Log logger;

  private final java.lang.Object monitor;

  private final io.undertow.Undertow$Builder builder;

  private final io.undertow.servlet.api.DeploymentManager manager;

  private final java.lang.String contextPath;

  private final boolean useForwardHeaders;

  private final boolean autoStart;

  private final org.springframework.boot.context.embedded.Compression compression;

  private final java.lang.String serverHeader;

  private io.undertow.Undertow undertow;

  private boolean started;

  public org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer(io.undertow.Undertow$Builder, io.undertow.servlet.api.DeploymentManager, java.lang.String, int, boolean, org.springframework.boot.context.embedded.Compression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: iload         5
       7: aload         6
       9: invokespecial #1                  // Method "<init>":(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/context/embedded/Compression;)V
      12: return

  public org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer(io.undertow.Undertow$Builder, io.undertow.servlet.api.DeploymentManager, java.lang.String, int, boolean, boolean, org.springframework.boot.context.embedded.Compression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         5
       6: iload         6
       8: aload         7
      10: invokespecial #1                  // Method "<init>":(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/context/embedded/Compression;)V
      13: return

  public org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer(io.undertow.Undertow$Builder, io.undertow.servlet.api.DeploymentManager, java.lang.String, int, boolean, boolean, org.springframework.boot.context.embedded.Compression, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         5
       6: iload         6
       8: aload         7
      10: aload         8
      12: invokespecial #2                  // Method "<init>":(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/context/embedded/Compression;Ljava/lang/String;)V
      15: return

  public org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer(io.undertow.Undertow$Builder, io.undertow.servlet.api.DeploymentManager, java.lang.String, boolean, org.springframework.boot.context.embedded.Compression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: iload         4
       7: aload         5
       9: invokespecial #1                  // Method "<init>":(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/context/embedded/Compression;)V
      12: return

  public org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer(io.undertow.Undertow$Builder, io.undertow.servlet.api.DeploymentManager, java.lang.String, boolean, boolean, org.springframework.boot.context.embedded.Compression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: aload         6
      10: aconst_null
      11: invokespecial #2                  // Method "<init>":(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/context/embedded/Compression;Ljava/lang/String;)V
      14: return

  public org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer(io.undertow.Undertow$Builder, io.undertow.servlet.api.DeploymentManager, java.lang.String, boolean, boolean, org.springframework.boot.context.embedded.Compression, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/lang/Object
       8: dup
       9: invokespecial #3                  // Method java/lang/Object."<init>":()V
      12: putfield      #5                  // Field monitor:Ljava/lang/Object;
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field started:Z
      20: aload_0
      21: aload_1
      22: putfield      #7                  // Field builder:Lio/undertow/Undertow$Builder;
      25: aload_0
      26: aload_2
      27: putfield      #8                  // Field manager:Lio/undertow/servlet/api/DeploymentManager;
      30: aload_0
      31: aload_3
      32: putfield      #9                  // Field contextPath:Ljava/lang/String;
      35: aload_0
      36: iload         4
      38: putfield      #10                 // Field useForwardHeaders:Z
      41: aload_0
      42: iload         5
      44: putfield      #11                 // Field autoStart:Z
      47: aload_0
      48: aload         6
      50: putfield      #12                 // Field compression:Lorg/springframework/boot/context/embedded/Compression;
      53: aload_0
      54: aload         7
      56: putfield      #13                 // Field serverHeader:Ljava/lang/String;
      59: return

  public void start() throws org.springframework.boot.context.embedded.EmbeddedServletContainerException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field monitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field autoStart:Z
      11: ifne          17
      14: aload_1
      15: monitorexit
      16: return
      17: aload_0
      18: getfield      #14                 // Field undertow:Lio/undertow/Undertow;
      21: ifnonnull     32
      24: aload_0
      25: aload_0
      26: invokespecial #15                 // Method createUndertowServer:()Lio/undertow/Undertow;
      29: putfield      #14                 // Field undertow:Lio/undertow/Undertow;
      32: aload_0
      33: getfield      #14                 // Field undertow:Lio/undertow/Undertow;
      36: invokevirtual #16                 // Method io/undertow/Undertow.start:()V
      39: aload_0
      40: iconst_1
      41: putfield      #6                  // Field started:Z
      44: getstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
      47: new           #18                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #20                 // String Undertow started on port(s)
      56: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokespecial #22                 // Method getPortsDescription:()Ljava/lang/String;
      63: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      74: goto          152
      77: astore_2
      78: aload_0
      79: aload_2
      80: invokespecial #26                 // Method findBindException:(Ljava/lang/Exception;)Ljava/net/BindException;
      83: ifnull        141
      86: aload_0
      87: invokespecial #27                 // Method getConfiguredPorts:()Ljava/util/List;
      90: astore_3
      91: aload_0
      92: invokespecial #28                 // Method getActualPorts:()Ljava/util/List;
      95: astore        4
      97: aload_3
      98: aload         4
     100: invokeinterface #29,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
     105: pop
     106: aload_3
     107: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
     112: iconst_1
     113: if_icmpne     141
     116: new           #31                 // class org/springframework/boot/context/embedded/PortInUseException
     119: dup
     120: aload_3
     121: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     126: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     131: checkcast     #34                 // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port
     134: invokevirtual #35                 // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port.getNumber:()I
     137: invokespecial #36                 // Method org/springframework/boot/context/embedded/PortInUseException."<init>":(I)V
     140: athrow
     141: new           #37                 // class org/springframework/boot/context/embedded/EmbeddedServletContainerException
     144: dup
     145: ldc           #38                 // String Unable to start embedded Undertow
     147: aload_2
     148: invokespecial #39                 // Method org/springframework/boot/context/embedded/EmbeddedServletContainerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     151: athrow
     152: aload_1
     153: monitorexit
     154: goto          164
     157: astore        5
     159: aload_1
     160: monitorexit
     161: aload         5
     163: athrow
     164: return
    Exception table:
       from    to  target type
           7    14    77   Class java/lang/Exception
          17    74    77   Class java/lang/Exception
           7    16   157   any
          17   154   157   any
         157   161   157   any

  private java.net.BindException findBindException(java.lang.Exception);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        26
       6: aload_2
       7: instanceof    #40                 // class java/net/BindException
      10: ifeq          18
      13: aload_2
      14: checkcast     #40                 // class java/net/BindException
      17: areturn
      18: aload_2
      19: invokevirtual #41                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      22: astore_2
      23: goto          2
      26: aconst_null
      27: areturn

  private io.undertow.Undertow createUndertowServer() throws javax.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field manager:Lio/undertow/servlet/api/DeploymentManager;
       4: invokeinterface #42,  1           // InterfaceMethod io/undertow/servlet/api/DeploymentManager.start:()Lio/undertow/server/HttpHandler;
       9: astore_1
      10: aload_0
      11: aload_1
      12: invokespecial #43                 // Method getContextHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpHandler;
      15: astore_1
      16: aload_0
      17: getfield      #10                 // Field useForwardHeaders:Z
      20: ifeq          28
      23: aload_1
      24: invokestatic  #44                 // Method io/undertow/Handlers.proxyPeerAddress:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/ProxyPeerAddressHandler;
      27: astore_1
      28: aload_0
      29: getfield      #13                 // Field serverHeader:Ljava/lang/String;
      32: invokestatic  #45                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      35: ifeq          49
      38: aload_1
      39: ldc           #46                 // String Server
      41: aload_0
      42: getfield      #13                 // Field serverHeader:Ljava/lang/String;
      45: invokestatic  #47                 // Method io/undertow/Handlers.header:(Lio/undertow/server/HttpHandler;Ljava/lang/String;Ljava/lang/String;)Lio/undertow/server/handlers/SetHeaderHandler;
      48: astore_1
      49: aload_0
      50: getfield      #7                  // Field builder:Lio/undertow/Undertow$Builder;
      53: aload_1
      54: invokevirtual #48                 // Method io/undertow/Undertow$Builder.setHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/Undertow$Builder;
      57: pop
      58: aload_0
      59: getfield      #7                  // Field builder:Lio/undertow/Undertow$Builder;
      62: invokevirtual #49                 // Method io/undertow/Undertow$Builder.build:()Lio/undertow/Undertow;
      65: areturn

  private io.undertow.server.HttpHandler getContextHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #50                 // Method configurationCompressionIfNecessary:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpHandler;
       5: astore_2
       6: aload_0
       7: getfield      #9                  // Field contextPath:Ljava/lang/String;
      10: invokestatic  #51                 // Method org/springframework/util/StringUtils.isEmpty:(Ljava/lang/Object;)Z
      13: ifeq          18
      16: aload_2
      17: areturn
      18: invokestatic  #52                 // Method io/undertow/Handlers.path:()Lio/undertow/server/handlers/PathHandler;
      21: aload_0
      22: getfield      #9                  // Field contextPath:Ljava/lang/String;
      25: aload_2
      26: invokevirtual #53                 // Method io/undertow/server/handlers/PathHandler.addPrefixPath:(Ljava/lang/String;Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/PathHandler;
      29: areturn

  private io.undertow.server.HttpHandler configurationCompressionIfNecessary(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: getfield      #12                 // Field compression:Lorg/springframework/boot/context/embedded/Compression;
       4: ifnull        17
       7: aload_0
       8: getfield      #12                 // Field compression:Lorg/springframework/boot/context/embedded/Compression;
      11: invokevirtual #54                 // Method org/springframework/boot/context/embedded/Compression.getEnabled:()Z
      14: ifne          19
      17: aload_1
      18: areturn
      19: new           #55                 // class io/undertow/server/handlers/encoding/ContentEncodingRepository
      22: dup
      23: invokespecial #56                 // Method io/undertow/server/handlers/encoding/ContentEncodingRepository."<init>":()V
      26: astore_2
      27: aload_2
      28: ldc           #57                 // String gzip
      30: new           #58                 // class io/undertow/server/handlers/encoding/GzipEncodingProvider
      33: dup
      34: invokespecial #59                 // Method io/undertow/server/handlers/encoding/GzipEncodingProvider."<init>":()V
      37: bipush        50
      39: aload_0
      40: aload_0
      41: getfield      #12                 // Field compression:Lorg/springframework/boot/context/embedded/Compression;
      44: invokespecial #60                 // Method getCompressionPredicates:(Lorg/springframework/boot/context/embedded/Compression;)[Lio/undertow/predicate/Predicate;
      47: invokestatic  #61                 // Method io/undertow/predicate/Predicates.and:([Lio/undertow/predicate/Predicate;)Lio/undertow/predicate/Predicate;
      50: invokevirtual #62                 // Method io/undertow/server/handlers/encoding/ContentEncodingRepository.addEncodingHandler:(Ljava/lang/String;Lio/undertow/server/handlers/encoding/ContentEncodingProvider;ILio/undertow/predicate/Predicate;)Lio/undertow/server/handlers/encoding/ContentEncodingRepository;
      53: pop
      54: new           #63                 // class io/undertow/server/handlers/encoding/EncodingHandler
      57: dup
      58: aload_2
      59: invokespecial #64                 // Method io/undertow/server/handlers/encoding/EncodingHandler."<init>":(Lio/undertow/server/handlers/encoding/ContentEncodingRepository;)V
      62: aload_1
      63: invokevirtual #65                 // Method io/undertow/server/handlers/encoding/EncodingHandler.setNext:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/encoding/EncodingHandler;
      66: areturn

  private io.undertow.predicate.Predicate[] getCompressionPredicates(org.springframework.boot.context.embedded.Compression);
    Code:
       0: new           #66                 // class java/util/ArrayList
       3: dup
       4: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_2
       9: new           #68                 // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$MaxSizePredicate
      12: dup
      13: aload_1
      14: invokevirtual #69                 // Method org/springframework/boot/context/embedded/Compression.getMinResponseSize:()I
      17: invokespecial #70                 // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$MaxSizePredicate."<init>":(I)V
      20: invokeinterface #71,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload_2
      27: new           #72                 // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$CompressibleMimeTypePredicate
      30: dup
      31: aload_1
      32: invokevirtual #73                 // Method org/springframework/boot/context/embedded/Compression.getMimeTypes:()[Ljava/lang/String;
      35: invokespecial #74                 // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$CompressibleMimeTypePredicate."<init>":([Ljava/lang/String;)V
      38: invokeinterface #71,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_1
      45: invokevirtual #75                 // Method org/springframework/boot/context/embedded/Compression.getExcludedUserAgents:()[Ljava/lang/String;
      48: ifnull        117
      51: aload_1
      52: invokevirtual #75                 // Method org/springframework/boot/context/embedded/Compression.getExcludedUserAgents:()[Ljava/lang/String;
      55: astore_3
      56: aload_3
      57: arraylength
      58: istore        4
      60: iconst_0
      61: istore        5
      63: iload         5
      65: iload         4
      67: if_icmpge     117
      70: aload_3
      71: iload         5
      73: aaload
      74: astore        6
      76: new           #76                 // class io/undertow/attribute/RequestHeaderAttribute
      79: dup
      80: new           #77                 // class io/undertow/util/HttpString
      83: dup
      84: ldc           #79                 // String User-Agent
      86: invokespecial #80                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      89: invokespecial #81                 // Method io/undertow/attribute/RequestHeaderAttribute."<init>":(Lio/undertow/util/HttpString;)V
      92: astore        7
      94: aload_2
      95: aload         7
      97: aload         6
      99: invokestatic  #82                 // Method io/undertow/predicate/Predicates.regex:(Lio/undertow/attribute/ExchangeAttribute;Ljava/lang/String;)Lio/undertow/predicate/Predicate;
     102: invokestatic  #83                 // Method io/undertow/predicate/Predicates.not:(Lio/undertow/predicate/Predicate;)Lio/undertow/predicate/Predicate;
     105: invokeinterface #71,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     110: pop
     111: iinc          5, 1
     114: goto          63
     117: aload_2
     118: aload_2
     119: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
     124: anewarray     #84                 // class io/undertow/predicate/Predicate
     127: invokeinterface #85,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     132: checkcast     #86                 // class "[Lio/undertow/predicate/Predicate;"
     135: areturn

  private java.lang.String getPortsDescription();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method getActualPorts:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #87,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifne          21
      14: aload_1
      15: ldc           #88                 // String
      17: invokestatic  #89                 // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
      20: areturn
      21: ldc           #90                 // String unknown
      23: areturn

  private java.util.List<org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer$Port> getActualPorts();
    Code:
       0: new           #66                 // class java/util/ArrayList
       3: dup
       4: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #11                 // Field autoStart:Z
      12: ifne          36
      15: aload_1
      16: new           #34                 // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port
      19: dup
      20: iconst_m1
      21: ldc           #90                 // String unknown
      23: aconst_null
      24: invokespecial #91                 // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port."<init>":(ILjava/lang/String;Lorg/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$1;)V
      27: invokeinterface #71,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: goto          80
      36: aload_0
      37: invokespecial #92                 // Method extractChannels:()Ljava/util/List;
      40: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore_2
      46: aload_2
      47: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          80
      55: aload_2
      56: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #94                 // class org/xnio/channels/BoundChannel
      64: astore_3
      65: aload_1
      66: aload_0
      67: aload_3
      68: invokespecial #95                 // Method getPortFromChannel:(Lorg/xnio/channels/BoundChannel;)Lorg/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port;
      71: invokeinterface #71,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: goto          46
      80: goto          84
      83: astore_2
      84: aload_1
      85: areturn
    Exception table:
       from    to  target type
           8    80    83   Class java/lang/Exception

  private java.util.List<org.xnio.channels.BoundChannel> extractChannels();
    Code:
       0: ldc           #96                 // class io/undertow/Undertow
       2: ldc           #97                 // String channels
       4: invokestatic  #98                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_1
       8: aload_1
       9: invokestatic  #99                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      12: aload_1
      13: aload_0
      14: getfield      #14                 // Field undertow:Lio/undertow/Undertow;
      17: invokestatic  #100                // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #101                // class java/util/List
      23: areturn

  private org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer$Port getPortFromChannel(org.xnio.channels.BoundChannel);
    Code:
       0: aload_1
       1: invokeinterface #102,  1          // InterfaceMethod org/xnio/channels/BoundChannel.getLocalAddress:()Ljava/net/SocketAddress;
       6: astore_2
       7: aload_2
       8: instanceof    #103                // class java/net/InetSocketAddress
      11: ifeq          51
      14: aload_1
      15: invokevirtual #104                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: ldc           #105                // String ssl
      20: invokestatic  #98                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      23: ifnull        31
      26: ldc           #106                // String https
      28: goto          33
      31: ldc           #107                // String http
      33: astore_3
      34: new           #34                 // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port
      37: dup
      38: aload_2
      39: checkcast     #103                // class java/net/InetSocketAddress
      42: invokevirtual #108                // Method java/net/InetSocketAddress.getPort:()I
      45: aload_3
      46: aconst_null
      47: invokespecial #91                 // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port."<init>":(ILjava/lang/String;Lorg/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$1;)V
      50: areturn
      51: aconst_null
      52: areturn

  private java.util.List<org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer$Port> getConfiguredPorts();
    Code:
       0: new           #66                 // class java/util/ArrayList
       3: dup
       4: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #109                // Method extractListeners:()Ljava/util/List;
      12: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          54
      27: aload_2
      28: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: astore_3
      34: aload_1
      35: aload_0
      36: aload_3
      37: invokespecial #110                // Method getPortFromListener:(Ljava/lang/Object;)Lorg/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port;
      40: invokeinterface #71,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: goto          51
      49: astore        4
      51: goto          18
      54: aload_1
      55: areturn
    Exception table:
       from    to  target type
          34    46    49   Class java/lang/Exception

  private java.util.List<java.lang.Object> extractListeners();
    Code:
       0: ldc           #96                 // class io/undertow/Undertow
       2: ldc           #111                // String listeners
       4: invokestatic  #98                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_1
       8: aload_1
       9: invokestatic  #99                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      12: aload_1
      13: aload_0
      14: getfield      #14                 // Field undertow:Lio/undertow/Undertow;
      17: invokestatic  #100                // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #101                // class java/util/List
      23: areturn

  private org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer$Port getPortFromListener(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #104                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #112                // String type
       6: invokestatic  #98                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       9: astore_2
      10: aload_2
      11: invokestatic  #99                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      14: aload_2
      15: aload_1
      16: invokestatic  #100                // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      19: invokevirtual #113                // Method java/lang/Object.toString:()Ljava/lang/String;
      22: astore_3
      23: aload_1
      24: invokevirtual #104                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: ldc           #114                // String port
      29: invokestatic  #98                 // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      32: astore        4
      34: aload         4
      36: invokestatic  #99                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      39: aload         4
      41: aload_1
      42: invokestatic  #100                // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #115                // class java/lang/Integer
      48: invokevirtual #116                // Method java/lang/Integer.intValue:()I
      51: istore        5
      53: new           #34                 // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port
      56: dup
      57: iload         5
      59: aload_3
      60: aconst_null
      61: invokespecial #91                 // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port."<init>":(ILjava/lang/String;Lorg/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$1;)V
      64: areturn

  public void stop() throws org.springframework.boot.context.embedded.EmbeddedServletContainerException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field monitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field started:Z
      11: ifeq          50
      14: aload_0
      15: iconst_0
      16: putfield      #6                  // Field started:Z
      19: aload_0
      20: getfield      #8                  // Field manager:Lio/undertow/servlet/api/DeploymentManager;
      23: invokeinterface #117,  1          // InterfaceMethod io/undertow/servlet/api/DeploymentManager.stop:()V
      28: aload_0
      29: getfield      #14                 // Field undertow:Lio/undertow/Undertow;
      32: invokevirtual #118                // Method io/undertow/Undertow.stop:()V
      35: goto          50
      38: astore_2
      39: new           #37                 // class org/springframework/boot/context/embedded/EmbeddedServletContainerException
      42: dup
      43: ldc           #119                // String Unable to stop undertow
      45: aload_2
      46: invokespecial #39                 // Method org/springframework/boot/context/embedded/EmbeddedServletContainerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: athrow
      50: aload_1
      51: monitorexit
      52: goto          60
      55: astore_3
      56: aload_1
      57: monitorexit
      58: aload_3
      59: athrow
      60: return
    Exception table:
       from    to  target type
          14    35    38   Class java/lang/Exception
           7    52    55   any
          55    58    55   any

  public int getPort();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method getActualPorts:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #87,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifeq          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: iconst_0
      18: invokeinterface #120,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #34                 // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port
      26: invokevirtual #35                 // Method org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer$Port.getNumber:()I
      29: ireturn

  static {};
    Code:
       0: ldc           #121                // class org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer
       2: invokestatic  #122                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
