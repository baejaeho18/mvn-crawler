Compiled from "FilterRegistrationBean.java"
public class org.springframework.boot.web.servlet.FilterRegistrationBean extends org.springframework.boot.web.servlet.AbstractFilterRegistrationBean {
  public static final int REQUEST_WRAPPER_FILTER_MAX_ORDER;

  private javax.servlet.Filter filter;

  public org.springframework.boot.web.servlet.FilterRegistrationBean();
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #2                  // class org/springframework/boot/web/servlet/ServletRegistrationBean
       5: invokespecial #3                  // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean."<init>":([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
       8: return

  public org.springframework.boot.web.servlet.FilterRegistrationBean(javax.servlet.Filter, org.springframework.boot.web.servlet.ServletRegistrationBean...);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #3                  // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean."<init>":([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
       5: aload_1
       6: ldc           #4                  // String Filter must not be null
       8: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field filter:Ljavax/servlet/Filter;
      16: return

  public javax.servlet.Filter getFilter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field filter:Ljavax/servlet/Filter;
       4: areturn

  public void setFilter(javax.servlet.Filter);
    Code:
       0: aload_1
       1: ldc           #4                  // String Filter must not be null
       3: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #6                  // Field filter:Ljavax/servlet/Filter;
      11: return

  public void onStartup(javax.servlet.ServletContext) throws javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.onStartup:(Ljavax/servlet/ServletContext;)V
       5: return

  public boolean isMatchAfter();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.isMatchAfter:()Z
       4: ireturn

  public void setMatchAfter(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setMatchAfter:(Z)V
       5: return

  public void setDispatcherTypes(java.util.EnumSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setDispatcherTypes:(Ljava/util/EnumSet;)V
       5: return

  public void setDispatcherTypes(javax.servlet.DispatcherType, javax.servlet.DispatcherType[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #11                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setDispatcherTypes:(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
       6: return

  public void addUrlPatterns(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.addUrlPatterns:([Ljava/lang/String;)V
       5: return

  public java.util.Collection getUrlPatterns();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.getUrlPatterns:()Ljava/util/Collection;
       4: areturn

  public void setUrlPatterns(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setUrlPatterns:(Ljava/util/Collection;)V
       5: return

  public void addServletNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.addServletNames:([Ljava/lang/String;)V
       5: return

  public java.util.Collection getServletNames();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.getServletNames:()Ljava/util/Collection;
       4: areturn

  public void setServletNames(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setServletNames:(Ljava/util/Collection;)V
       5: return

  public void addServletRegistrationBeans(org.springframework.boot.web.servlet.ServletRegistrationBean[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.addServletRegistrationBeans:([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
       5: return

  public java.util.Collection getServletRegistrationBeans();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.getServletRegistrationBeans:()Ljava/util/Collection;
       4: areturn

  public void setServletRegistrationBeans(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setServletRegistrationBeans:(Ljava/util/Collection;)V
       5: return
}
