Compiled from "DBAppender.java"
public class ch.qos.logback.classic.db.DBAppender extends ch.qos.logback.core.db.DBAppenderBase<ch.qos.logback.classic.spi.ILoggingEvent> {
  protected java.lang.String insertPropertiesSQL;

  protected java.lang.String insertExceptionSQL;

  protected java.lang.String insertSQL;

  protected static final java.lang.reflect.Method GET_GENERATED_KEYS_METHOD;

  private ch.qos.logback.classic.db.names.DBNameResolver dbNameResolver;

  static final int TIMESTMP_INDEX;

  static final int FORMATTED_MESSAGE_INDEX;

  static final int LOGGER_NAME_INDEX;

  static final int LEVEL_STRING_INDEX;

  static final int THREAD_NAME_INDEX;

  static final int REFERENCE_FLAG_INDEX;

  static final int ARG0_INDEX;

  static final int ARG1_INDEX;

  static final int ARG2_INDEX;

  static final int ARG3_INDEX;

  static final int CALLER_FILENAME_INDEX;

  static final int CALLER_CLASS_INDEX;

  static final int CALLER_METHOD_INDEX;

  static final int CALLER_LINE_INDEX;

  static final int EVENT_ID_INDEX;

  static final java.lang.StackTraceElement EMPTY_CALLER_DATA;

  static {};
    Code:
       0: invokestatic  #50                 // Method ch/qos/logback/classic/spi/CallerData.naInstance:()Ljava/lang/StackTraceElement;
       3: putstatic     #56                 // Field EMPTY_CALLER_DATA:Ljava/lang/StackTraceElement;
       6: ldc           #58                 // class java/sql/PreparedStatement
       8: ldc           #60                 // String getGeneratedKeys
      10: aconst_null
      11: invokevirtual #62                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      14: astore_0
      15: goto          21
      18: pop
      19: aconst_null
      20: astore_0
      21: aload_0
      22: putstatic     #68                 // Field GET_GENERATED_KEYS_METHOD:Ljava/lang/reflect/Method;
      25: return
    Exception table:
       from    to  target type
           6    15    18   Class java/lang/Exception

  public ch.qos.logback.classic.db.DBAppender();
    Code:
       0: aload_0
       1: invokespecial #79                 // Method ch/qos/logback/core/db/DBAppenderBase."<init>":()V
       4: return

  public void setDbNameResolver(ch.qos.logback.classic.db.names.DBNameResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
       5: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #85                 // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
       4: ifnonnull     18
       7: aload_0
       8: new           #88                 // class ch/qos/logback/classic/db/names/DefaultDBNameResolver
      11: dup
      12: invokespecial #90                 // Method ch/qos/logback/classic/db/names/DefaultDBNameResolver."<init>":()V
      15: putfield      #85                 // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
      18: aload_0
      19: aload_0
      20: getfield      #85                 // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
      23: invokestatic  #91                 // Method ch/qos/logback/classic/db/SQLBuilder.buildInsertExceptionSQL:(Lch/qos/logback/classic/db/names/DBNameResolver;)Ljava/lang/String;
      26: putfield      #97                 // Field insertExceptionSQL:Ljava/lang/String;
      29: aload_0
      30: aload_0
      31: getfield      #85                 // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
      34: invokestatic  #99                 // Method ch/qos/logback/classic/db/SQLBuilder.buildInsertPropertiesSQL:(Lch/qos/logback/classic/db/names/DBNameResolver;)Ljava/lang/String;
      37: putfield      #102                // Field insertPropertiesSQL:Ljava/lang/String;
      40: aload_0
      41: aload_0
      42: getfield      #85                 // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
      45: invokestatic  #104                // Method ch/qos/logback/classic/db/SQLBuilder.buildInsertSQL:(Lch/qos/logback/classic/db/names/DBNameResolver;)Ljava/lang/String;
      48: putfield      #107                // Field insertSQL:Ljava/lang/String;
      51: aload_0
      52: invokespecial #109                // Method ch/qos/logback/core/db/DBAppenderBase.start:()V
      55: return

  protected void subAppend(ch.qos.logback.classic.spi.ILoggingEvent, java.sql.Connection, java.sql.PreparedStatement) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: invokevirtual #116                // Method bindLoggingEventWithInsertStatement:(Ljava/sql/PreparedStatement;Lch/qos/logback/classic/spi/ILoggingEvent;)V
       6: aload_0
       7: aload_3
       8: aload_1
       9: invokeinterface #120,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getArgumentArray:()[Ljava/lang/Object;
      14: invokevirtual #126                // Method bindLoggingEventArgumentsWithPreparedStatement:(Ljava/sql/PreparedStatement;[Ljava/lang/Object;)V
      17: aload_0
      18: aload_3
      19: aload_1
      20: invokeinterface #130,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getCallerData:()[Ljava/lang/StackTraceElement;
      25: invokevirtual #134                // Method bindCallerDataWithPreparedStatement:(Ljava/sql/PreparedStatement;[Ljava/lang/StackTraceElement;)V
      28: aload_3
      29: invokeinterface #138,  1          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
      34: istore        4
      36: iload         4
      38: iconst_1
      39: if_icmpeq     48
      42: aload_0
      43: ldc           #142                // String Failed to insert loggingEvent
      45: invokevirtual #144                // Method addWarn:(Ljava/lang/String;)V
      48: return

  protected void secondarySubAppend(ch.qos.logback.classic.spi.ILoggingEvent, java.sql.Connection, long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #157                // Method mergePropertyMaps:(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/util/Map;
       5: astore        5
       7: aload_0
       8: aload         5
      10: aload_2
      11: lload_3
      12: invokevirtual #161                // Method insertProperties:(Ljava/util/Map;Ljava/sql/Connection;J)V
      15: aload_1
      16: invokeinterface #165,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getThrowableProxy:()Lch/qos/logback/classic/spi/IThrowableProxy;
      21: ifnull        36
      24: aload_0
      25: aload_1
      26: invokeinterface #165,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getThrowableProxy:()Lch/qos/logback/classic/spi/IThrowableProxy;
      31: aload_2
      32: lload_3
      33: invokevirtual #169                // Method insertThrowable:(Lch/qos/logback/classic/spi/IThrowableProxy;Ljava/sql/Connection;J)V
      36: return

  void bindLoggingEventWithInsertStatement(java.sql.PreparedStatement, ch.qos.logback.classic.spi.ILoggingEvent) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iconst_1
       2: aload_2
       3: invokeinterface #183,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getTimeStamp:()J
       8: invokeinterface #187,  4          // InterfaceMethod java/sql/PreparedStatement.setLong:(IJ)V
      13: aload_1
      14: iconst_2
      15: aload_2
      16: invokeinterface #191,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getFormattedMessage:()Ljava/lang/String;
      21: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      26: aload_1
      27: iconst_3
      28: aload_2
      29: invokeinterface #199,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getLoggerName:()Ljava/lang/String;
      34: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      39: aload_1
      40: iconst_4
      41: aload_2
      42: invokeinterface #202,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getLevel:()Lch/qos/logback/classic/Level;
      47: invokevirtual #206                // Method ch/qos/logback/classic/Level.toString:()Ljava/lang/String;
      50: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      55: aload_1
      56: iconst_5
      57: aload_2
      58: invokeinterface #211,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getThreadName:()Ljava/lang/String;
      63: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      68: aload_1
      69: bipush        6
      71: aload_2
      72: invokestatic  #214                // Method ch/qos/logback/classic/db/DBHelper.computeReferenceMask:(Lch/qos/logback/classic/spi/ILoggingEvent;)S
      75: invokeinterface #220,  3          // InterfaceMethod java/sql/PreparedStatement.setShort:(IS)V
      80: return

  void bindLoggingEventArgumentsWithPreparedStatement(java.sql.PreparedStatement, java.lang.Object[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_2
       5: arraylength
       6: goto          10
       9: iconst_0
      10: istore_3
      11: iconst_0
      12: istore        4
      14: goto          39
      17: aload_1
      18: bipush        7
      20: iload         4
      22: iadd
      23: aload_0
      24: aload_2
      25: iload         4
      27: aaload
      28: invokevirtual #225                // Method asStringTruncatedTo254:(Ljava/lang/Object;)Ljava/lang/String;
      31: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      36: iinc          4, 1
      39: iload         4
      41: iload_3
      42: if_icmpge     51
      45: iload         4
      47: iconst_4
      48: if_icmplt     17
      51: iload_3
      52: iconst_4
      53: if_icmpge     83
      56: iload_3
      57: istore        4
      59: goto          77
      62: aload_1
      63: bipush        7
      65: iload         4
      67: iadd
      68: aconst_null
      69: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      74: iinc          4, 1
      77: iload         4
      79: iconst_4
      80: if_icmplt     62
      83: return

  java.lang.String asStringTruncatedTo254(java.lang.Object);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        11
       6: aload_1
       7: invokevirtual #233                // Method java/lang/Object.toString:()Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_2
      18: invokevirtual #236                // Method java/lang/String.length:()I
      21: sipush        254
      24: if_icmpgt     29
      27: aload_2
      28: areturn
      29: aload_2
      30: iconst_0
      31: sipush        254
      34: invokevirtual #241                // Method java/lang/String.substring:(II)Ljava/lang/String;
      37: areturn

  void bindCallerDataWithPreparedStatement(java.sql.PreparedStatement, java.lang.StackTraceElement[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #248                // Method extractFirstCaller:([Ljava/lang/StackTraceElement;)Ljava/lang/StackTraceElement;
       5: astore_3
       6: aload_1
       7: bipush        11
       9: aload_3
      10: invokevirtual #252                // Method java/lang/StackTraceElement.getFileName:()Ljava/lang/String;
      13: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      18: aload_1
      19: bipush        12
      21: aload_3
      22: invokevirtual #257                // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      25: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      30: aload_1
      31: bipush        13
      33: aload_3
      34: invokevirtual #260                // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      37: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      42: aload_1
      43: bipush        14
      45: aload_3
      46: invokevirtual #263                // Method java/lang/StackTraceElement.getLineNumber:()I
      49: invokestatic  #266                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      52: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      57: return

  private java.lang.StackTraceElement extractFirstCaller(java.lang.StackTraceElement[]);
    Code:
       0: getstatic     #56                 // Field EMPTY_CALLER_DATA:Ljava/lang/StackTraceElement;
       3: astore_2
       4: aload_0
       5: aload_1
       6: invokespecial #274                // Method hasAtLeastOneNonNullElement:([Ljava/lang/StackTraceElement;)Z
       9: ifeq          16
      12: aload_1
      13: iconst_0
      14: aaload
      15: astore_2
      16: aload_2
      17: areturn

  private boolean hasAtLeastOneNonNullElement(java.lang.StackTraceElement[]);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_1
       5: arraylength
       6: ifle          17
       9: aload_1
      10: iconst_0
      11: aaload
      12: ifnull        17
      15: iconst_1
      16: ireturn
      17: iconst_0
      18: ireturn

  java.util.Map<java.lang.String, java.lang.String> mergePropertyMaps(ch.qos.logback.classic.spi.ILoggingEvent);
    Code:
       0: new           #280                // class java/util/HashMap
       3: dup
       4: invokespecial #282                // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #283,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getLoggerContextVO:()Lch/qos/logback/classic/spi/LoggerContextVO;
      14: invokevirtual #287                // Method ch/qos/logback/classic/spi/LoggerContextVO.getPropertyMap:()Ljava/util/Map;
      17: astore_3
      18: aload_1
      19: invokeinterface #293,  1          // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getMDCPropertyMap:()Ljava/util/Map;
      24: astore        4
      26: aload_3
      27: ifnull        37
      30: aload_2
      31: aload_3
      32: invokeinterface #296,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      37: aload         4
      39: ifnull        50
      42: aload_2
      43: aload         4
      45: invokeinterface #296,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      50: aload_2
      51: areturn

  protected java.lang.reflect.Method getGeneratedKeysMethod();
    Code:
       0: getstatic     #68                 // Field GET_GENERATED_KEYS_METHOD:Ljava/lang/reflect/Method;
       3: areturn

  protected java.lang.String getInsertSQL();
    Code:
       0: aload_0
       1: getfield      #107                // Field insertSQL:Ljava/lang/String;
       4: areturn

  protected void insertProperties(java.util.Map<java.lang.String, java.lang.String>, java.sql.Connection, long) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokeinterface #305,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       6: astore        5
       8: aload         5
      10: invokeinterface #309,  1          // InterfaceMethod java/util/Set.size:()I
      15: ifle          167
      18: aconst_null
      19: astore        6
      21: aload_2
      22: aload_0
      23: getfield      #102                // Field insertPropertiesSQL:Ljava/lang/String;
      26: invokeinterface #314,  2          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      31: astore        6
      33: aload         5
      35: invokeinterface #320,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      40: astore        8
      42: goto          124
      45: aload         8
      47: invokeinterface #324,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #237                // class java/lang/String
      55: astore        7
      57: aload_1
      58: aload         7
      60: invokeinterface #330,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #237                // class java/lang/String
      68: astore        9
      70: aload         6
      72: iconst_1
      73: lload_3
      74: invokeinterface #187,  4          // InterfaceMethod java/sql/PreparedStatement.setLong:(IJ)V
      79: aload         6
      81: iconst_2
      82: aload         7
      84: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      89: aload         6
      91: iconst_3
      92: aload         9
      94: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      99: aload_0
     100: getfield      #334                // Field cnxSupportsBatchUpdates:Z
     103: ifeq          116
     106: aload         6
     108: invokeinterface #338,  1          // InterfaceMethod java/sql/PreparedStatement.addBatch:()V
     113: goto          124
     116: aload         6
     118: invokeinterface #341,  1          // InterfaceMethod java/sql/PreparedStatement.execute:()Z
     123: pop
     124: aload         8
     126: invokeinterface #345,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     131: ifne          45
     134: aload_0
     135: getfield      #334                // Field cnxSupportsBatchUpdates:Z
     138: ifeq          162
     141: aload         6
     143: invokeinterface #348,  1          // InterfaceMethod java/sql/PreparedStatement.executeBatch:()[I
     148: pop
     149: goto          162
     152: astore        10
     154: aload         6
     156: invokestatic  #352                // Method ch/qos/logback/core/db/DBHelper.closeStatement:(Ljava/sql/Statement;)V
     159: aload         10
     161: athrow
     162: aload         6
     164: invokestatic  #352                // Method ch/qos/logback/core/db/DBHelper.closeStatement:(Ljava/sql/Statement;)V
     167: return
    Exception table:
       from    to  target type
          21   152   152   any

  void updateExceptionStatement(java.sql.PreparedStatement, java.lang.String, short, long) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iconst_1
       2: lload         4
       4: invokeinterface #187,  4          // InterfaceMethod java/sql/PreparedStatement.setLong:(IJ)V
       9: aload_1
      10: iconst_2
      11: iload_3
      12: invokeinterface #220,  3          // InterfaceMethod java/sql/PreparedStatement.setShort:(IS)V
      17: aload_1
      18: iconst_3
      19: aload_2
      20: invokeinterface #195,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      25: aload_0
      26: getfield      #334                // Field cnxSupportsBatchUpdates:Z
      29: ifeq          41
      32: aload_1
      33: invokeinterface #338,  1          // InterfaceMethod java/sql/PreparedStatement.addBatch:()V
      38: goto          48
      41: aload_1
      42: invokeinterface #341,  1          // InterfaceMethod java/sql/PreparedStatement.execute:()Z
      47: pop
      48: return

  short buildExceptionStatement(ch.qos.logback.classic.spi.IThrowableProxy, short, java.sql.PreparedStatement, long) throws java.sql.SQLException;
    Code:
       0: new           #371                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #373                // Method java/lang/StringBuilder."<init>":()V
       7: astore        6
       9: aload         6
      11: aload_1
      12: invokestatic  #374                // Method ch/qos/logback/classic/spi/ThrowableProxyUtil.subjoinFirstLine:(Ljava/lang/StringBuilder;Lch/qos/logback/classic/spi/IThrowableProxy;)V
      15: aload_0
      16: aload_3
      17: aload         6
      19: invokevirtual #380                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: iload_2
      23: dup
      24: iconst_1
      25: iadd
      26: i2s
      27: istore_2
      28: lload         4
      30: invokevirtual #381                // Method updateExceptionStatement:(Ljava/sql/PreparedStatement;Ljava/lang/String;SJ)V
      33: aload_1
      34: invokeinterface #383,  1          // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getCommonFrames:()I
      39: istore        7
      41: aload_1
      42: invokeinterface #388,  1          // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getStackTraceElementProxyArray:()[Lch/qos/logback/classic/spi/StackTraceElementProxy;
      47: astore        8
      49: iconst_0
      50: istore        9
      52: goto          103
      55: new           #371                // class java/lang/StringBuilder
      58: dup
      59: invokespecial #373                // Method java/lang/StringBuilder."<init>":()V
      62: astore        10
      64: aload         10
      66: bipush        9
      68: invokevirtual #392                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      71: pop
      72: aload         10
      74: aload         8
      76: iload         9
      78: aaload
      79: invokestatic  #396                // Method ch/qos/logback/classic/spi/ThrowableProxyUtil.subjoinSTEP:(Ljava/lang/StringBuilder;Lch/qos/logback/classic/spi/StackTraceElementProxy;)V
      82: aload_0
      83: aload_3
      84: aload         10
      86: invokevirtual #380                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: iload_2
      90: dup
      91: iconst_1
      92: iadd
      93: i2s
      94: istore_2
      95: lload         4
      97: invokevirtual #381                // Method updateExceptionStatement:(Ljava/sql/PreparedStatement;Ljava/lang/String;SJ)V
     100: iinc          9, 1
     103: iload         9
     105: aload         8
     107: arraylength
     108: iload         7
     110: isub
     111: if_icmplt     55
     114: iload         7
     116: ifle          171
     119: new           #371                // class java/lang/StringBuilder
     122: dup
     123: invokespecial #373                // Method java/lang/StringBuilder."<init>":()V
     126: astore        9
     128: aload         9
     130: bipush        9
     132: invokevirtual #392                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     135: ldc_w         #400                // String ...
     138: invokevirtual #402                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: iload         7
     143: invokevirtual #405                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     146: ldc_w         #408                // String  common frames omitted
     149: invokevirtual #402                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: pop
     153: aload_0
     154: aload_3
     155: aload         9
     157: invokevirtual #380                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: iload_2
     161: dup
     162: iconst_1
     163: iadd
     164: i2s
     165: istore_2
     166: lload         4
     168: invokevirtual #381                // Method updateExceptionStatement:(Ljava/sql/PreparedStatement;Ljava/lang/String;SJ)V
     171: iload_2
     172: ireturn

  protected void insertThrowable(ch.qos.logback.classic.spi.IThrowableProxy, java.sql.Connection, long) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: astore        5
       3: aload_2
       4: aload_0
       5: getfield      #97                 // Field insertExceptionSQL:Ljava/lang/String;
       8: invokeinterface #314,  2          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      13: astore        5
      15: iconst_0
      16: istore        6
      18: goto          40
      21: aload_0
      22: aload_1
      23: iload         6
      25: aload         5
      27: lload_3
      28: invokevirtual #421                // Method buildExceptionStatement:(Lch/qos/logback/classic/spi/IThrowableProxy;SLjava/sql/PreparedStatement;J)S
      31: istore        6
      33: aload_1
      34: invokeinterface #423,  1          // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getCause:()Lch/qos/logback/classic/spi/IThrowableProxy;
      39: astore_1
      40: aload_1
      41: ifnonnull     21
      44: aload_0
      45: getfield      #334                // Field cnxSupportsBatchUpdates:Z
      48: ifeq          72
      51: aload         5
      53: invokeinterface #348,  1          // InterfaceMethod java/sql/PreparedStatement.executeBatch:()[I
      58: pop
      59: goto          72
      62: astore        7
      64: aload         5
      66: invokestatic  #352                // Method ch/qos/logback/core/db/DBHelper.closeStatement:(Ljava/sql/Statement;)V
      69: aload         7
      71: athrow
      72: aload         5
      74: invokestatic  #352                // Method ch/qos/logback/core/db/DBHelper.closeStatement:(Ljava/sql/Statement;)V
      77: return
    Exception table:
       from    to  target type
           3    62    62   any

  protected void subAppend(java.lang.Object, java.sql.Connection, java.sql.PreparedStatement) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #121                // class ch/qos/logback/classic/spi/ILoggingEvent
       5: aload_2
       6: aload_3
       7: invokevirtual #427                // Method subAppend:(Lch/qos/logback/classic/spi/ILoggingEvent;Ljava/sql/Connection;Ljava/sql/PreparedStatement;)V
      10: return

  protected void secondarySubAppend(java.lang.Object, java.sql.Connection, long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #121                // class ch/qos/logback/classic/spi/ILoggingEvent
       5: aload_2
       6: lload_3
       7: invokevirtual #430                // Method secondarySubAppend:(Lch/qos/logback/classic/spi/ILoggingEvent;Ljava/sql/Connection;J)V
      10: return
}
