Compiled from "ContentCryptoScheme.java"
abstract class com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme {
  static final long MAX_GCM_BLOCKS;

  static final long MAX_GCM_BYTES;

  static final long MAX_CBC_BYTES;

  static final long MAX_CTR_BYTES;

  static final com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme AES_CBC;

  static final com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme AES_GCM;

  static final com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme AES_CTR;

  com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  abstract java.lang.String getKeyGeneratorAlgorithm();

  abstract java.lang.String getCipherAlgorithm();

  java.lang.String getSpecificCipherProvider();
    Code:
       0: aconst_null
       1: areturn

  abstract int getKeyLengthInBits();

  abstract int getBlockSizeInBytes();

  abstract int getIVLengthInBytes();

  int getTagLengthInBits();
    Code:
       0: iconst_0
       1: ireturn

  byte[] adjustIV(byte[], long);
    Code:
       0: aload_1
       1: areturn

  public java.lang.String toString();
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #5                  // String cipherAlgo=
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #7                  // Method getCipherAlgorithm:()Ljava/lang/String;
      16: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #8                  // String , blockSizeInBytes=
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #9                  // Method getBlockSizeInBytes:()I
      28: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #11                 // String , ivLengthInBytes=
      33: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #12                 // Method getIVLengthInBytes:()I
      40: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #13                 // String , keyGenAlgo=
      45: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #14                 // Method getKeyGeneratorAlgorithm:()Ljava/lang/String;
      52: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #15                 // String , keyLengthInBits=
      57: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #16                 // Method getKeyLengthInBits:()I
      64: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #17                 // String , specificProvider=
      69: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #18                 // Method getSpecificCipherProvider:()Ljava/lang/String;
      76: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #19                 // String , tagLengthInBits=
      81: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #20                 // Method getTagLengthInBits:()I
      88: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  static byte[] incrementBlocks(byte[], long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          8
       6: aload_0
       7: areturn
       8: aload_0
       9: ifnull        19
      12: aload_0
      13: arraylength
      14: bipush        16
      16: if_icmpeq     27
      19: new           #22                 // class java/lang/IllegalArgumentException
      22: dup
      23: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":()V
      26: athrow
      27: lload_1
      28: ldc2_w        #24                 // long 4294967294l
      31: lcmp
      32: ifle          43
      35: new           #26                 // class java/lang/IllegalStateException
      38: dup
      39: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":()V
      42: athrow
      43: bipush        8
      45: invokestatic  #28                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      48: astore_3
      49: bipush        12
      51: istore        4
      53: iload         4
      55: bipush        15
      57: if_icmpgt     80
      60: aload_3
      61: iload         4
      63: bipush        8
      65: isub
      66: aload_0
      67: iload         4
      69: baload
      70: invokevirtual #29                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      73: pop
      74: iinc          4, 1
      77: goto          53
      80: aload_3
      81: invokevirtual #30                 // Method java/nio/ByteBuffer.getLong:()J
      84: lload_1
      85: ladd
      86: lstore        4
      88: lload         4
      90: ldc2_w        #24                 // long 4294967294l
      93: lcmp
      94: ifle          105
      97: new           #26                 // class java/lang/IllegalStateException
     100: dup
     101: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":()V
     104: athrow
     105: aload_3
     106: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     109: pop
     110: aload_3
     111: lload         4
     113: invokevirtual #32                 // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
     116: invokevirtual #33                 // Method java/nio/ByteBuffer.array:()[B
     119: astore        6
     121: bipush        12
     123: istore        7
     125: iload         7
     127: bipush        15
     129: if_icmpgt     150
     132: aload_0
     133: iload         7
     135: aload         6
     137: iload         7
     139: bipush        8
     141: isub
     142: baload
     143: bastore
     144: iinc          7, 1
     147: goto          125
     150: aload_0
     151: areturn

  static com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme fromCEKAlgo(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #34                 // Method fromCEKAlgo:(Ljava/lang/String;Z)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       5: areturn

  static com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme fromCEKAlgo(java.lang.String, boolean);
    Code:
       0: getstatic     #35                 // Field AES_GCM:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       3: invokevirtual #7                  // Method getCipherAlgorithm:()Ljava/lang/String;
       6: aload_0
       7: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: iload_1
      14: ifeq          23
      17: getstatic     #37                 // Field AES_CTR:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      20: goto          26
      23: getstatic     #35                 // Field AES_GCM:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      26: areturn
      27: aload_0
      28: ifnull        44
      31: getstatic     #38                 // Field AES_CBC:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      34: invokevirtual #7                  // Method getCipherAlgorithm:()Ljava/lang/String;
      37: aload_0
      38: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          48
      44: getstatic     #38                 // Field AES_CBC:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      47: areturn
      48: new           #39                 // class java/lang/UnsupportedOperationException
      51: dup
      52: new           #3                  // class java/lang/StringBuilder
      55: dup
      56: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #40                 // String Unsupported content encryption scheme:
      61: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #41                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      74: athrow

  com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey, byte[], int, java.security.Provider);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getSpecificCipherProvider:()Ljava/lang/String;
       4: astore        5
       6: aload         5
       8: ifnull        25
      11: aload_0
      12: invokevirtual #7                  // Method getCipherAlgorithm:()Ljava/lang/String;
      15: aload         5
      17: invokestatic  #42                 // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;
      20: astore        6
      22: goto          53
      25: aload         4
      27: ifnull        44
      30: aload_0
      31: invokevirtual #7                  // Method getCipherAlgorithm:()Ljava/lang/String;
      34: aload         4
      36: invokestatic  #43                 // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;
      39: astore        6
      41: goto          53
      44: aload_0
      45: invokevirtual #7                  // Method getCipherAlgorithm:()Ljava/lang/String;
      48: invokestatic  #44                 // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;
      51: astore        6
      53: aload         6
      55: iload_3
      56: aload_1
      57: new           #45                 // class javax/crypto/spec/IvParameterSpec
      60: dup
      61: aload_2
      62: invokespecial #46                 // Method javax/crypto/spec/IvParameterSpec."<init>":([B)V
      65: invokevirtual #47                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V
      68: aload_0
      69: aload         6
      71: aload_1
      72: iload_3
      73: invokevirtual #48                 // Method newCipherLite:(Ljavax/crypto/Cipher;Ljavax/crypto/SecretKey;I)Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      76: areturn
      77: astore        7
      79: aload         7
      81: instanceof    #50                 // class java/lang/RuntimeException
      84: ifeq          95
      87: aload         7
      89: checkcast     #50                 // class java/lang/RuntimeException
      92: goto          132
      95: new           #51                 // class com/amazonaws/AmazonClientException
      98: dup
      99: new           #3                  // class java/lang/StringBuilder
     102: dup
     103: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #52                 // String Unable to build cipher:
     108: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload         7
     113: invokevirtual #53                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     116: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #54                 // String \nMake sure you have the JCE unlimited strength policy files installed and configured for your JVM
     121: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: aload         7
     129: invokespecial #55                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     132: athrow
    Exception table:
       from    to  target type
           6    76    77   Class java/lang/Exception

  protected com.amazonaws.services.s3.internal.crypto.CipherLite newCipherLite(javax.crypto.Cipher, javax.crypto.SecretKey, int);
    Code:
       0: new           #56                 // class com/amazonaws/services/s3/internal/crypto/CipherLite
       3: dup
       4: aload_1
       5: aload_0
       6: aload_2
       7: iload_3
       8: invokespecial #57                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite."<init>":(Ljavax/crypto/Cipher;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;Ljavax/crypto/SecretKey;I)V
      11: areturn

  com.amazonaws.services.s3.internal.crypto.CipherLite createAuxillaryCipher(javax.crypto.SecretKey, byte[], int, java.security.Provider, long) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aconst_null
       1: areturn

  com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey, byte[], int) throws java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, javax.crypto.NoSuchPaddingException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #58                 // Method createCipherLite:(Ljavax/crypto/SecretKey;[BILjava/security/Provider;)Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
       8: areturn

  abstract long getMaxPlaintextSize();

  final java.lang.String getKeySpec();
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #14                 // Method getKeyGeneratorAlgorithm:()Ljava/lang/String;
      11: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #59                 // String _
      16: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #16                 // Method getKeyLengthInBits:()I
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  static {};
    Code:
       0: new           #60                 // class com/amazonaws/services/s3/internal/crypto/AesCbc
       3: dup
       4: invokespecial #61                 // Method com/amazonaws/services/s3/internal/crypto/AesCbc."<init>":()V
       7: putstatic     #38                 // Field AES_CBC:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      10: new           #62                 // class com/amazonaws/services/s3/internal/crypto/AesGcm
      13: dup
      14: invokespecial #63                 // Method com/amazonaws/services/s3/internal/crypto/AesGcm."<init>":()V
      17: putstatic     #35                 // Field AES_GCM:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      20: new           #64                 // class com/amazonaws/services/s3/internal/crypto/AesCtr
      23: dup
      24: invokespecial #65                 // Method com/amazonaws/services/s3/internal/crypto/AesCtr."<init>":()V
      27: putstatic     #37                 // Field AES_CTR:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      30: return
}
