Compiled from "AbstractTransfer.java"
public abstract class com.amazonaws.services.s3.transfer.internal.AbstractTransfer implements com.amazonaws.services.s3.transfer.Transfer {
  protected volatile com.amazonaws.services.s3.transfer.Transfer$TransferState state;

  protected com.amazonaws.services.s3.transfer.internal.TransferMonitor monitor;

  private final com.amazonaws.services.s3.transfer.TransferProgress transferProgress;

  private final java.lang.String description;

  protected final com.amazonaws.event.ProgressListenerChain listenerChain;

  protected final java.util.Collection<com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener> stateChangeListeners;

  com.amazonaws.services.s3.transfer.internal.AbstractTransfer(java.lang.String, com.amazonaws.services.s3.transfer.TransferProgress, com.amazonaws.event.ProgressListenerChain);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;)V
       8: return

  com.amazonaws.services.s3.transfer.internal.AbstractTransfer(java.lang.String, com.amazonaws.services.s3.transfer.TransferProgress, com.amazonaws.event.ProgressListenerChain, com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Waiting:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
       8: putfield      #4                  // Field state:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      11: aload_0
      12: new           #5                  // class java/util/LinkedList
      15: dup
      16: invokespecial #6                  // Method java/util/LinkedList."<init>":()V
      19: putfield      #7                  // Field stateChangeListeners:Ljava/util/Collection;
      22: aload_0
      23: aload_1
      24: putfield      #8                  // Field description:Ljava/lang/String;
      27: aload_0
      28: aload_3
      29: putfield      #9                  // Field listenerChain:Lcom/amazonaws/event/ProgressListenerChain;
      32: aload_0
      33: aload_2
      34: putfield      #10                 // Field transferProgress:Lcom/amazonaws/services/s3/transfer/TransferProgress;
      37: aload_0
      38: aload         4
      40: invokevirtual #11                 // Method addStateChangeListener:(Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;)V
      43: return

  public final synchronized boolean isDone();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
       4: getstatic     #12                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Failed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
       7: if_acmpeq     30
      10: aload_0
      11: getfield      #4                  // Field state:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      14: getstatic     #13                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Completed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      17: if_acmpeq     30
      20: aload_0
      21: getfield      #4                  // Field state:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      24: getstatic     #14                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Canceled:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      27: if_acmpne     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public void waitForCompletion() throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException, java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
       6: invokeinterface #16,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.isDone:()Z
      11: ifeq          18
      14: aload_1
      15: ifnonnull     38
      18: aload_0
      19: getfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
      22: invokeinterface #17,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.getFuture:()Ljava/util/concurrent/Future;
      27: astore_2
      28: aload_2
      29: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      34: astore_1
      35: goto          2
      38: goto          47
      41: astore_1
      42: aload_0
      43: aload_1
      44: invokevirtual #20                 // Method rethrowExecutionException:(Ljava/util/concurrent/ExecutionException;)V
      47: return
    Exception table:
       from    to  target type
           0    38    41   Class java/util/concurrent/ExecutionException

  public com.amazonaws.AmazonClientException waitForException() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
       4: invokeinterface #16,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.isDone:()Z
       9: ifne          30
      12: aload_0
      13: getfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
      16: invokeinterface #17,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.getFuture:()Ljava/util/concurrent/Future;
      21: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      26: pop
      27: goto          0
      30: aload_0
      31: getfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
      34: invokeinterface #17,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.getFuture:()Ljava/util/concurrent/Future;
      39: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      44: pop
      45: aconst_null
      46: areturn
      47: astore_1
      48: aload_0
      49: aload_1
      50: invokevirtual #21                 // Method unwrapExecutionException:(Ljava/util/concurrent/ExecutionException;)Lcom/amazonaws/AmazonClientException;
      53: areturn
    Exception table:
       from    to  target type
           0    46    47   Class java/util/concurrent/ExecutionException

  public java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #8                  // Field description:Ljava/lang/String;
       4: areturn

  public synchronized com.amazonaws.services.s3.transfer.Transfer$TransferState getState();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
       4: areturn

  public void setState(com.amazonaws.services.s3.transfer.Transfer$TransferState);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field state:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
       9: aload_2
      10: monitorexit
      11: goto          19
      14: astore_3
      15: aload_2
      16: monitorexit
      17: aload_3
      18: athrow
      19: aload_0
      20: getfield      #7                  // Field stateChangeListeners:Ljava/util/Collection;
      23: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_2
      30: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          59
      38: aload_2
      39: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #25                 // class com/amazonaws/services/s3/transfer/internal/TransferStateChangeListener
      47: astore_3
      48: aload_3
      49: aload_0
      50: aload_1
      51: invokeinterface #26,  3           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferStateChangeListener.transferStateChanged:(Lcom/amazonaws/services/s3/transfer/Transfer;Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      56: goto          29
      59: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  public void notifyStateChangeListeners(com.amazonaws.services.s3.transfer.Transfer$TransferState);
    Code:
       0: aload_0
       1: getfield      #7                  // Field stateChangeListeners:Ljava/util/Collection;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          40
      19: aload_2
      20: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #25                 // class com/amazonaws/services/s3/transfer/internal/TransferStateChangeListener
      28: astore_3
      29: aload_3
      30: aload_0
      31: aload_1
      32: invokeinterface #26,  3           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferStateChangeListener.transferStateChanged:(Lcom/amazonaws/services/s3/transfer/Transfer;Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      37: goto          10
      40: return

  public synchronized void addProgressListener(com.amazonaws.event.ProgressListener);
    Code:
       0: aload_0
       1: getfield      #9                  // Field listenerChain:Lcom/amazonaws/event/ProgressListenerChain;
       4: aload_1
       5: invokevirtual #27                 // Method com/amazonaws/event/ProgressListenerChain.addProgressListener:(Lcom/amazonaws/event/ProgressListener;)V
       8: return

  public synchronized void removeProgressListener(com.amazonaws.event.ProgressListener);
    Code:
       0: aload_0
       1: getfield      #9                  // Field listenerChain:Lcom/amazonaws/event/ProgressListenerChain;
       4: aload_1
       5: invokevirtual #28                 // Method com/amazonaws/event/ProgressListenerChain.removeProgressListener:(Lcom/amazonaws/event/ProgressListener;)V
       8: return

  public synchronized void addProgressListener(com.amazonaws.services.s3.model.ProgressListener);
    Code:
       0: aload_0
       1: getfield      #9                  // Field listenerChain:Lcom/amazonaws/event/ProgressListenerChain;
       4: new           #29                 // class com/amazonaws/services/s3/model/LegacyS3ProgressListener
       7: dup
       8: aload_1
       9: invokespecial #30                 // Method com/amazonaws/services/s3/model/LegacyS3ProgressListener."<init>":(Lcom/amazonaws/services/s3/model/ProgressListener;)V
      12: invokevirtual #27                 // Method com/amazonaws/event/ProgressListenerChain.addProgressListener:(Lcom/amazonaws/event/ProgressListener;)V
      15: return

  public synchronized void removeProgressListener(com.amazonaws.services.s3.model.ProgressListener);
    Code:
       0: aload_0
       1: getfield      #9                  // Field listenerChain:Lcom/amazonaws/event/ProgressListenerChain;
       4: new           #29                 // class com/amazonaws/services/s3/model/LegacyS3ProgressListener
       7: dup
       8: aload_1
       9: invokespecial #30                 // Method com/amazonaws/services/s3/model/LegacyS3ProgressListener."<init>":(Lcom/amazonaws/services/s3/model/ProgressListener;)V
      12: invokevirtual #28                 // Method com/amazonaws/event/ProgressListenerChain.removeProgressListener:(Lcom/amazonaws/event/ProgressListener;)V
      15: return

  public synchronized void addStateChangeListener(com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #7                  // Field stateChangeListeners:Ljava/util/Collection;
       8: aload_1
       9: invokeinterface #31,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public synchronized void removeStateChangeListener(com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #7                  // Field stateChangeListeners:Ljava/util/Collection;
       8: aload_1
       9: invokeinterface #32,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public com.amazonaws.services.s3.transfer.TransferProgress getProgress();
    Code:
       0: aload_0
       1: getfield      #10                 // Field transferProgress:Lcom/amazonaws/services/s3/transfer/TransferProgress;
       4: areturn

  public void setMonitor(com.amazonaws.services.s3.transfer.internal.TransferMonitor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
       5: return

  public com.amazonaws.services.s3.transfer.internal.TransferMonitor getMonitor();
    Code:
       0: aload_0
       1: getfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
       4: areturn

  protected void fireProgressEvent(com.amazonaws.event.ProgressEventType);
    Code:
       0: aload_0
       1: getfield      #9                  // Field listenerChain:Lcom/amazonaws/event/ProgressListenerChain;
       4: aload_1
       5: invokestatic  #33                 // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
       8: pop
       9: return

  protected void rethrowExecutionException(java.util.concurrent.ExecutionException);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method unwrapExecutionException:(Ljava/util/concurrent/ExecutionException;)Lcom/amazonaws/AmazonClientException;
       5: athrow

  protected com.amazonaws.AmazonClientException unwrapExecutionException(java.util.concurrent.ExecutionException);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
       4: astore_2
       5: aload_2
       6: instanceof    #35                 // class com/amazonaws/AmazonClientException
       9: ifeq          17
      12: aload_2
      13: checkcast     #35                 // class com/amazonaws/AmazonClientException
      16: areturn
      17: new           #35                 // class com/amazonaws/AmazonClientException
      20: dup
      21: new           #36                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #38                 // String Unable to complete transfer:
      30: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #40                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      37: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: aload_2
      44: invokespecial #42                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: areturn
}
