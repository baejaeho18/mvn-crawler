Compiled from "S3KeyWrapScheme.java"
class com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme {
  static final com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme NONE;

  public static final java.lang.String AESWrap;

  public static final java.lang.String RSA_ECB_OAEPWithSHA256AndMGF1Padding;

  com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  java.lang.String getKeyWrapAlgorithm(java.security.Key);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod java/security/Key.getAlgorithm:()Ljava/lang/String;
       6: astore_2
       7: ldc           #4                  // String AES
       9: aload_2
      10: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          19
      16: ldc           #7                  // String AESWrap
      18: areturn
      19: ldc           #8                  // String RSA
      21: aload_2
      22: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          37
      28: invokestatic  #9                  // Method com/amazonaws/services/s3/internal/crypto/CryptoRuntime.isRsaKeyWrapAvailable:()Z
      31: ifeq          37
      34: ldc           #10                 // String RSA/ECB/OAEPWithSHA-256AndMGF1Padding
      36: areturn
      37: aconst_null
      38: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #11                 // String S3KeyWrapScheme
       2: areturn

  static {};
    Code:
       0: new           #12                 // class com/amazonaws/services/s3/internal/crypto/S3KeyWrapScheme$1
       3: dup
       4: invokespecial #13                 // Method com/amazonaws/services/s3/internal/crypto/S3KeyWrapScheme$1."<init>":()V
       7: putstatic     #14                 // Field NONE:Lcom/amazonaws/services/s3/internal/crypto/S3KeyWrapScheme;
      10: return
}
