Compiled from "CryptoConfiguration.java"
public class com.amazonaws.services.s3.model.CryptoConfiguration implements java.lang.Cloneable,java.io.Serializable {
  private static final long serialVersionUID;

  private com.amazonaws.services.s3.model.CryptoMode cryptoMode;

  private com.amazonaws.services.s3.model.CryptoStorageMode storageMode;

  private java.security.Provider cryptoProvider;

  private boolean ignoreMissingInstructionFile;

  private transient com.amazonaws.regions.Region awskmsRegion;

  public com.amazonaws.services.s3.model.CryptoConfiguration();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field com/amazonaws/services/s3/model/CryptoMode.EncryptionOnly:Lcom/amazonaws/services/s3/model/CryptoMode;
       4: invokespecial #2                  // Method "<init>":(Lcom/amazonaws/services/s3/model/CryptoMode;)V
       7: return

  public com.amazonaws.services.s3.model.CryptoConfiguration(com.amazonaws.services.s3.model.CryptoMode);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #4                  // Field ignoreMissingInstructionFile:Z
       9: aload_0
      10: aload_1
      11: invokespecial #5                  // Method check:(Lcom/amazonaws/services/s3/model/CryptoMode;)V
      14: aload_0
      15: getstatic     #6                  // Field com/amazonaws/services/s3/model/CryptoStorageMode.ObjectMetadata:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      18: putfield      #7                  // Field storageMode:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      21: aload_0
      22: aconst_null
      23: putfield      #8                  // Field cryptoProvider:Ljava/security/Provider;
      26: aload_0
      27: aload_1
      28: putfield      #9                  // Field cryptoMode:Lcom/amazonaws/services/s3/model/CryptoMode;
      31: return

  public void setStorageMode(com.amazonaws.services.s3.model.CryptoStorageMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field storageMode:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
       5: return

  public com.amazonaws.services.s3.model.CryptoConfiguration withStorageMode(com.amazonaws.services.s3.model.CryptoStorageMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field storageMode:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.CryptoStorageMode getStorageMode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field storageMode:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
       4: areturn

  public void setCryptoProvider(java.security.Provider);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field cryptoProvider:Ljava/security/Provider;
       5: return

  public com.amazonaws.services.s3.model.CryptoConfiguration withCryptoProvider(java.security.Provider);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field cryptoProvider:Ljava/security/Provider;
       5: aload_0
       6: areturn

  public java.security.Provider getCryptoProvider();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cryptoProvider:Ljava/security/Provider;
       4: areturn

  public com.amazonaws.services.s3.model.CryptoMode getCryptoMode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field cryptoMode:Lcom/amazonaws/services/s3/model/CryptoMode;
       4: areturn

  public void setCryptoMode(com.amazonaws.services.s3.model.CryptoMode) throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field cryptoMode:Lcom/amazonaws/services/s3/model/CryptoMode;
       5: aload_0
       6: aload_1
       7: invokespecial #5                  // Method check:(Lcom/amazonaws/services/s3/model/CryptoMode;)V
      10: return

  public com.amazonaws.services.s3.model.CryptoConfiguration withCryptoMode(com.amazonaws.services.s3.model.CryptoMode) throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field cryptoMode:Lcom/amazonaws/services/s3/model/CryptoMode;
       5: aload_0
       6: aload_1
       7: invokespecial #5                  // Method check:(Lcom/amazonaws/services/s3/model/CryptoMode;)V
      10: aload_0
      11: areturn

  public boolean isIgnoreMissingInstructionFile();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ignoreMissingInstructionFile:Z
       4: ireturn

  public void setIgnoreMissingInstructionFile(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field ignoreMissingInstructionFile:Z
       5: return

  public com.amazonaws.services.s3.model.CryptoConfiguration withIgnoreMissingInstructionFile(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field ignoreMissingInstructionFile:Z
       5: aload_0
       6: areturn

  private void check(com.amazonaws.services.s3.model.CryptoMode);
    Code:
       0: aload_1
       1: getstatic     #10                 // Field com/amazonaws/services/s3/model/CryptoMode.AuthenticatedEncryption:Lcom/amazonaws/services/s3/model/CryptoMode;
       4: if_acmpeq     14
       7: aload_1
       8: getstatic     #11                 // Field com/amazonaws/services/s3/model/CryptoMode.StrictAuthenticatedEncryption:Lcom/amazonaws/services/s3/model/CryptoMode;
      11: if_acmpne     55
      14: invokestatic  #12                 // Method com/amazonaws/services/s3/internal/crypto/CryptoRuntime.isBouncyCastleAvailable:()Z
      17: ifne          39
      20: invokestatic  #13                 // Method com/amazonaws/services/s3/internal/crypto/CryptoRuntime.enableBouncyCastle:()V
      23: invokestatic  #12                 // Method com/amazonaws/services/s3/internal/crypto/CryptoRuntime.isBouncyCastleAvailable:()Z
      26: ifne          39
      29: new           #14                 // class java/lang/UnsupportedOperationException
      32: dup
      33: ldc           #15                 // String The Bouncy castle library jar is required on the classpath to enable authenticated encryption
      35: invokespecial #16                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: invokestatic  #17                 // Method com/amazonaws/services/s3/internal/crypto/CryptoRuntime.isAesGcmAvailable:()Z
      42: ifne          55
      45: new           #14                 // class java/lang/UnsupportedOperationException
      48: dup
      49: ldc           #18                 // String More recent version of the Bouncy castle library is required to enable authenticated encryption
      51: invokespecial #16                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: return

  public boolean isReadOnly();
    Code:
       0: iconst_0
       1: ireturn

  public com.amazonaws.services.s3.model.CryptoConfiguration readOnly();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isReadOnly:()Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: new           #20                 // class com/amazonaws/services/s3/model/CryptoConfiguration$ReadOnly
      13: dup
      14: aconst_null
      15: invokespecial #21                 // Method com/amazonaws/services/s3/model/CryptoConfiguration$ReadOnly."<init>":(Lcom/amazonaws/services/s3/model/CryptoConfiguration$1;)V
      18: invokespecial #22                 // Method copyTo:(Lcom/amazonaws/services/s3/model/CryptoConfiguration;)Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      21: areturn

  public com.amazonaws.services.s3.model.CryptoConfiguration clone();
    Code:
       0: aload_0
       1: new           #23                 // class com/amazonaws/services/s3/model/CryptoConfiguration
       4: dup
       5: invokespecial #24                 // Method "<init>":()V
       8: invokespecial #22                 // Method copyTo:(Lcom/amazonaws/services/s3/model/CryptoConfiguration;)Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      11: areturn

  private com.amazonaws.services.s3.model.CryptoConfiguration copyTo(com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #9                  // Field cryptoMode:Lcom/amazonaws/services/s3/model/CryptoMode;
       5: putfield      #9                  // Field cryptoMode:Lcom/amazonaws/services/s3/model/CryptoMode;
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field storageMode:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      13: putfield      #7                  // Field storageMode:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      16: aload_1
      17: aload_0
      18: getfield      #8                  // Field cryptoProvider:Ljava/security/Provider;
      21: putfield      #8                  // Field cryptoProvider:Ljava/security/Provider;
      24: aload_1
      25: aload_0
      26: getfield      #4                  // Field ignoreMissingInstructionFile:Z
      29: putfield      #4                  // Field ignoreMissingInstructionFile:Z
      32: aload_1
      33: aload_0
      34: getfield      #25                 // Field awskmsRegion:Lcom/amazonaws/regions/Region;
      37: putfield      #25                 // Field awskmsRegion:Lcom/amazonaws/regions/Region;
      40: aload_1
      41: areturn

  public com.amazonaws.regions.Regions getKmsRegion();
    Code:
       0: aload_0
       1: getfield      #25                 // Field awskmsRegion:Lcom/amazonaws/regions/Region;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #25                 // Field awskmsRegion:Lcom/amazonaws/regions/Region;
      13: invokevirtual #26                 // Method com/amazonaws/regions/Region.getName:()Ljava/lang/String;
      16: invokestatic  #27                 // Method com/amazonaws/regions/Regions.fromName:(Ljava/lang/String;)Lcom/amazonaws/regions/Regions;
      19: areturn

  public void setKmsRegion(com.amazonaws.regions.Regions);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: aload_1
       6: invokestatic  #28                 // Method com/amazonaws/regions/Region.getRegion:(Lcom/amazonaws/regions/Regions;)Lcom/amazonaws/regions/Region;
       9: invokevirtual #29                 // Method setAwsKmsRegion:(Lcom/amazonaws/regions/Region;)V
      12: goto          20
      15: aload_0
      16: aconst_null
      17: invokevirtual #29                 // Method setAwsKmsRegion:(Lcom/amazonaws/regions/Region;)V
      20: return

  public com.amazonaws.services.s3.model.CryptoConfiguration withKmsRegion(com.amazonaws.regions.Regions);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setKmsRegion:(Lcom/amazonaws/regions/Regions;)V
       5: aload_0
       6: areturn

  public com.amazonaws.regions.Region getAwsKmsRegion();
    Code:
       0: aload_0
       1: getfield      #25                 // Field awskmsRegion:Lcom/amazonaws/regions/Region;
       4: areturn

  public void setAwsKmsRegion(com.amazonaws.regions.Region);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field awskmsRegion:Lcom/amazonaws/regions/Region;
       5: return

  public com.amazonaws.services.s3.model.CryptoConfiguration withAwsKmsRegion(com.amazonaws.regions.Region);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field awskmsRegion:Lcom/amazonaws/regions/Region;
       5: aload_0
       6: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method clone:()Lcom/amazonaws/services/s3/model/CryptoConfiguration;
       4: areturn
}
