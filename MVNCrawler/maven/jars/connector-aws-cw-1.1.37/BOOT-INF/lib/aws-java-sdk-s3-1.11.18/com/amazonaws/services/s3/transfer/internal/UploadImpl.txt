Compiled from "UploadImpl.java"
public class com.amazonaws.services.s3.transfer.internal.UploadImpl extends com.amazonaws.services.s3.transfer.internal.AbstractTransfer implements com.amazonaws.services.s3.transfer.Upload {
  public com.amazonaws.services.s3.transfer.internal.UploadImpl(java.lang.String, com.amazonaws.services.s3.transfer.TransferProgress, com.amazonaws.event.ProgressListenerChain, com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method com/amazonaws/services/s3/transfer/internal/AbstractTransfer."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;)V
       9: return

  public com.amazonaws.services.s3.transfer.model.UploadResult waitForUploadResult() throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException, java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #2                  // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
       6: invokeinterface #3,  1            // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.isDone:()Z
      11: ifeq          18
      14: aload_1
      15: ifnonnull     41
      18: aload_0
      19: getfield      #2                  // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
      22: invokeinterface #4,  1            // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.getFuture:()Ljava/util/concurrent/Future;
      27: astore_2
      28: aload_2
      29: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      34: checkcast     #6                  // class com/amazonaws/services/s3/transfer/model/UploadResult
      37: astore_1
      38: goto          2
      41: aload_1
      42: areturn
      43: astore_1
      44: aload_0
      45: aload_1
      46: invokevirtual #8                  // Method rethrowExecutionException:(Ljava/util/concurrent/ExecutionException;)V
      49: aconst_null
      50: areturn
    Exception table:
       from    to  target type
           0    42    43   Class java/util/concurrent/ExecutionException

  public com.amazonaws.services.s3.transfer.PersistableUpload pause() throws com.amazonaws.services.s3.transfer.exception.PauseException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #9                  // Method pause:(Z)Lcom/amazonaws/services/s3/transfer/PauseResult;
       5: astore_1
       6: aload_1
       7: invokevirtual #10                 // Method com/amazonaws/services/s3/transfer/PauseResult.getPauseStatus:()Lcom/amazonaws/services/s3/transfer/PauseStatus;
      10: getstatic     #11                 // Field com/amazonaws/services/s3/transfer/PauseStatus.SUCCESS:Lcom/amazonaws/services/s3/transfer/PauseStatus;
      13: if_acmpeq     28
      16: new           #12                 // class com/amazonaws/services/s3/transfer/exception/PauseException
      19: dup
      20: aload_1
      21: invokevirtual #10                 // Method com/amazonaws/services/s3/transfer/PauseResult.getPauseStatus:()Lcom/amazonaws/services/s3/transfer/PauseStatus;
      24: invokespecial #13                 // Method com/amazonaws/services/s3/transfer/exception/PauseException."<init>":(Lcom/amazonaws/services/s3/transfer/PauseStatus;)V
      27: athrow
      28: aload_1
      29: invokevirtual #14                 // Method com/amazonaws/services/s3/transfer/PauseResult.getInfoToResume:()Ljava/lang/Object;
      32: checkcast     #15                 // class com/amazonaws/services/s3/transfer/PersistableUpload
      35: areturn

  private com.amazonaws.services.s3.transfer.PauseResult<com.amazonaws.services.s3.transfer.PersistableUpload> pause(boolean) throws com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
       4: checkcast     #16                 // class com/amazonaws/services/s3/transfer/internal/UploadMonitor
       7: astore_2
       8: aload_2
       9: iload_1
      10: invokevirtual #17                 // Method com/amazonaws/services/s3/transfer/internal/UploadMonitor.pause:(Z)Lcom/amazonaws/services/s3/transfer/PauseResult;
      13: areturn

  public com.amazonaws.services.s3.transfer.PauseResult<com.amazonaws.services.s3.transfer.PersistableUpload> tryPause(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method pause:(Z)Lcom/amazonaws/services/s3/transfer/PauseResult;
       5: areturn

  public void abort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
       4: checkcast     #16                 // class com/amazonaws/services/s3/transfer/internal/UploadMonitor
       7: astore_1
       8: aload_1
       9: invokevirtual #18                 // Method com/amazonaws/services/s3/transfer/internal/UploadMonitor.performAbort:()V
      12: return
}
