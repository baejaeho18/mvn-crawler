Compiled from "GCMCipherLite.java"
final class com.amazonaws.services.s3.internal.crypto.GCMCipherLite extends com.amazonaws.services.s3.internal.crypto.CipherLite {
  private static final int TAG_LENGTH;

  private final int tagLen;

  private long outputByteCount;

  private boolean invisiblyProcessed;

  private long currentCount;

  private long markedCount;

  private com.amazonaws.services.s3.internal.crypto.CipherLite aux;

  private byte[] finalBytes;

  private boolean doneFinal;

  private boolean securityViolated;

  com.amazonaws.services.s3.internal.crypto.GCMCipherLite(javax.crypto.Cipher, javax.crypto.SecretKey, int);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.AES_GCM:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       5: aload_2
       6: iload_3
       7: invokespecial #2                  // Method com/amazonaws/services/s3/internal/crypto/CipherLite."<init>":(Ljavax/crypto/Cipher;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;Ljavax/crypto/SecretKey;I)V
      10: aload_0
      11: iload_3
      12: iconst_1
      13: if_icmpne     22
      16: getstatic     #4                  // Field TAG_LENGTH:I
      19: goto          23
      22: iconst_0
      23: putfield      #5                  // Field tagLen:I
      26: iload_3
      27: iconst_1
      28: if_icmpeq     44
      31: iload_3
      32: iconst_2
      33: if_icmpeq     44
      36: new           #6                  // class java/lang/IllegalArgumentException
      39: dup
      40: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":()V
      43: athrow
      44: return

  byte[] doFinal() throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field doneFinal:Z
       4: ifeq          44
       7: aload_0
       8: getfield      #9                  // Field securityViolated:Z
      11: ifeq          22
      14: new           #10                 // class java/lang/SecurityException
      17: dup
      18: invokespecial #11                 // Method java/lang/SecurityException."<init>":()V
      21: athrow
      22: aload_0
      23: getfield      #12                 // Field finalBytes:[B
      26: ifnonnull     33
      29: aconst_null
      30: goto          43
      33: aload_0
      34: getfield      #12                 // Field finalBytes:[B
      37: invokevirtual #13                 // Method "[B".clone:()Ljava/lang/Object;
      40: checkcast     #14                 // class "[B"
      43: areturn
      44: aload_0
      45: iconst_1
      46: putfield      #8                  // Field doneFinal:Z
      49: aload_0
      50: aload_0
      51: invokespecial #15                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.doFinal:()[B
      54: putfield      #12                 // Field finalBytes:[B
      57: aload_0
      58: getfield      #12                 // Field finalBytes:[B
      61: ifnonnull     66
      64: aconst_null
      65: areturn
      66: aload_0
      67: dup
      68: getfield      #16                 // Field outputByteCount:J
      71: aload_0
      72: aload_0
      73: getfield      #12                 // Field finalBytes:[B
      76: arraylength
      77: aload_0
      78: getfield      #5                  // Field tagLen:I
      81: isub
      82: invokespecial #17                 // Method checkMax:(I)I
      85: i2l
      86: ladd
      87: putfield      #16                 // Field outputByteCount:J
      90: aload_0
      91: getfield      #12                 // Field finalBytes:[B
      94: invokevirtual #18                 // Method "[B".clone:()Ljava/lang/Object;
      97: checkcast     #14                 // class "[B"
     100: areturn

  final byte[] doFinal(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #19                 // Method doFinal0:([BII)[B
       8: areturn

  final byte[] doFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #19                 // Method doFinal0:([BII)[B
       7: areturn

  private final byte[] doFinal0(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field doneFinal:Z
       4: ifeq          141
       7: aload_0
       8: getfield      #9                  // Field securityViolated:Z
      11: ifeq          22
      14: new           #10                 // class java/lang/SecurityException
      17: dup
      18: invokespecial #11                 // Method java/lang/SecurityException."<init>":()V
      21: athrow
      22: iconst_2
      23: aload_0
      24: invokevirtual #20                 // Method getCipherMode:()I
      27: if_icmpne     52
      30: aload_0
      31: getfield      #12                 // Field finalBytes:[B
      34: ifnonnull     41
      37: aconst_null
      38: goto          51
      41: aload_0
      42: getfield      #12                 // Field finalBytes:[B
      45: invokevirtual #21                 // Method "[B".clone:()Ljava/lang/Object;
      48: checkcast     #14                 // class "[B"
      51: areturn
      52: aload_0
      53: getfield      #12                 // Field finalBytes:[B
      56: arraylength
      57: aload_0
      58: getfield      #5                  // Field tagLen:I
      61: isub
      62: istore        4
      64: iload_3
      65: iload         4
      67: if_icmpne     81
      70: aload_0
      71: getfield      #12                 // Field finalBytes:[B
      74: invokevirtual #22                 // Method "[B".clone:()Ljava/lang/Object;
      77: checkcast     #14                 // class "[B"
      80: areturn
      81: iload_3
      82: iload         4
      84: if_icmpge     131
      87: iload_3
      88: i2l
      89: aload_0
      90: getfield      #23                 // Field currentCount:J
      93: ladd
      94: aload_0
      95: getfield      #16                 // Field outputByteCount:J
      98: lcmp
      99: ifne          131
     102: aload_0
     103: getfield      #12                 // Field finalBytes:[B
     106: arraylength
     107: aload_0
     108: getfield      #5                  // Field tagLen:I
     111: isub
     112: iload_3
     113: isub
     114: istore        5
     116: aload_0
     117: getfield      #12                 // Field finalBytes:[B
     120: iload         5
     122: aload_0
     123: getfield      #12                 // Field finalBytes:[B
     126: arraylength
     127: invokestatic  #24                 // Method java/util/Arrays.copyOfRange:([BII)[B
     130: areturn
     131: new           #25                 // class java/lang/IllegalStateException
     134: dup
     135: ldc           #26                 // String Inconsistent re-rencryption
     137: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: aload_0
     142: iconst_1
     143: putfield      #8                  // Field doneFinal:Z
     146: aload_0
     147: aload_0
     148: aload_1
     149: iload_2
     150: iload_3
     151: invokespecial #28                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.doFinal:([BII)[B
     154: putfield      #12                 // Field finalBytes:[B
     157: aload_0
     158: getfield      #12                 // Field finalBytes:[B
     161: ifnonnull     166
     164: aconst_null
     165: areturn
     166: aload_0
     167: dup
     168: getfield      #16                 // Field outputByteCount:J
     171: aload_0
     172: aload_0
     173: getfield      #12                 // Field finalBytes:[B
     176: arraylength
     177: aload_0
     178: getfield      #5                  // Field tagLen:I
     181: isub
     182: invokespecial #17                 // Method checkMax:(I)I
     185: i2l
     186: ladd
     187: putfield      #16                 // Field outputByteCount:J
     190: aload_0
     191: getfield      #12                 // Field finalBytes:[B
     194: invokevirtual #29                 // Method "[B".clone:()Ljava/lang/Object;
     197: checkcast     #14                 // class "[B"
     200: areturn

  byte[] update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #30                 // Field aux:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
       4: ifnonnull     76
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #31                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.update:([BII)[B
      14: astore        4
      16: aload         4
      18: ifnonnull     37
      21: aload_0
      22: aload_1
      23: arraylength
      24: ifle          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: putfield      #32                 // Field invisiblyProcessed:Z
      35: aconst_null
      36: areturn
      37: aload_0
      38: dup
      39: getfield      #16                 // Field outputByteCount:J
      42: aload_0
      43: aload         4
      45: arraylength
      46: invokespecial #17                 // Method checkMax:(I)I
      49: i2l
      50: ladd
      51: putfield      #16                 // Field outputByteCount:J
      54: aload_0
      55: aload         4
      57: arraylength
      58: ifne          69
      61: iload_3
      62: ifle          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: putfield      #32                 // Field invisiblyProcessed:Z
      73: goto          254
      76: aload_0
      77: getfield      #30                 // Field aux:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      80: aload_1
      81: iload_2
      82: iload_3
      83: invokevirtual #31                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.update:([BII)[B
      86: astore        4
      88: aload         4
      90: ifnonnull     95
      93: aconst_null
      94: areturn
      95: aload_0
      96: dup
      97: getfield      #23                 // Field currentCount:J
     100: aload         4
     102: arraylength
     103: i2l
     104: ladd
     105: putfield      #23                 // Field currentCount:J
     108: aload_0
     109: getfield      #23                 // Field currentCount:J
     112: aload_0
     113: getfield      #16                 // Field outputByteCount:J
     116: lcmp
     117: ifne          128
     120: aload_0
     121: aconst_null
     122: putfield      #30                 // Field aux:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
     125: goto          254
     128: aload_0
     129: getfield      #23                 // Field currentCount:J
     132: aload_0
     133: getfield      #16                 // Field outputByteCount:J
     136: lcmp
     137: ifle          254
     140: iconst_1
     141: aload_0
     142: invokevirtual #20                 // Method getCipherMode:()I
     145: if_icmpne     190
     148: new           #25                 // class java/lang/IllegalStateException
     151: dup
     152: new           #33                 // class java/lang/StringBuilder
     155: dup
     156: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #35                 // String currentCount=
     161: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_0
     165: getfield      #23                 // Field currentCount:J
     168: invokevirtual #37                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     171: ldc           #38                 // String  > outputByteCount=
     173: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: aload_0
     177: getfield      #16                 // Field outputByteCount:J
     180: invokevirtual #37                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     183: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     189: athrow
     190: aload_0
     191: getfield      #12                 // Field finalBytes:[B
     194: ifnonnull     201
     197: iconst_0
     198: goto          206
     201: aload_0
     202: getfield      #12                 // Field finalBytes:[B
     205: arraylength
     206: istore        5
     208: aload_0
     209: getfield      #16                 // Field outputByteCount:J
     212: aload_0
     213: getfield      #23                 // Field currentCount:J
     216: aload         4
     218: arraylength
     219: i2l
     220: lsub
     221: lsub
     222: iload         5
     224: i2l
     225: lsub
     226: lstore        6
     228: aload_0
     229: aload_0
     230: getfield      #16                 // Field outputByteCount:J
     233: iload         5
     235: i2l
     236: lsub
     237: putfield      #23                 // Field currentCount:J
     240: aload_0
     241: aconst_null
     242: putfield      #30                 // Field aux:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
     245: aload         4
     247: lload         6
     249: l2i
     250: invokestatic  #40                 // Method java/util/Arrays.copyOf:([BI)[B
     253: areturn
     254: aload         4
     256: areturn

  private int checkMax(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field outputByteCount:J
       4: iload_1
       5: i2l
       6: ladd
       7: ldc2_w        #42                 // long 68719476704l
      10: lcmp
      11: ifle          63
      14: aload_0
      15: iconst_1
      16: putfield      #9                  // Field securityViolated:Z
      19: new           #10                 // class java/lang/SecurityException
      22: dup
      23: new           #33                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #44                 // String Number of bytes processed has exceeded the maximum allowed by AES/GCM; [outputByteCount=
      32: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #16                 // Field outputByteCount:J
      39: invokevirtual #37                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      42: ldc           #45                 // String , delta=
      44: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: iload_1
      48: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: ldc           #47                 // String ]
      53: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #48                 // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: iload_1
      64: ireturn

  long mark();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #30                 // Field aux:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
       5: ifnonnull     15
       8: aload_0
       9: getfield      #16                 // Field outputByteCount:J
      12: goto          19
      15: aload_0
      16: getfield      #23                 // Field currentCount:J
      19: dup2_x1
      20: putfield      #49                 // Field markedCount:J
      23: lreturn

  boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  void reset();
    Code:
       0: aload_0
       1: getfield      #49                 // Field markedCount:J
       4: aload_0
       5: getfield      #16                 // Field outputByteCount:J
       8: lcmp
       9: iflt          19
      12: aload_0
      13: getfield      #32                 // Field invisiblyProcessed:Z
      16: ifeq          66
      19: aload_0
      20: aload_0
      21: aload_0
      22: getfield      #49                 // Field markedCount:J
      25: invokevirtual #50                 // Method createAuxiliary:(J)Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      28: putfield      #30                 // Field aux:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      31: aload_0
      32: aload_0
      33: getfield      #49                 // Field markedCount:J
      36: putfield      #23                 // Field currentCount:J
      39: goto          66
      42: astore_1
      43: aload_1
      44: instanceof    #52                 // class java/lang/RuntimeException
      47: ifeq          57
      50: aload_1
      51: checkcast     #52                 // class java/lang/RuntimeException
      54: goto          65
      57: new           #25                 // class java/lang/IllegalStateException
      60: dup
      61: aload_1
      62: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      65: athrow
      66: return
    Exception table:
       from    to  target type
          19    39    42   Class java/lang/Exception

  byte[] getFinalBytes();
    Code:
       0: aload_0
       1: getfield      #12                 // Field finalBytes:[B
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #12                 // Field finalBytes:[B
      15: invokevirtual #54                 // Method "[B".clone:()Ljava/lang/Object;
      18: checkcast     #14                 // class "[B"
      21: areturn

  byte[] getTag();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getCipherMode:()I
       4: iconst_1
       5: if_icmpne     15
       8: aload_0
       9: getfield      #12                 // Field finalBytes:[B
      12: ifnonnull     19
      15: aconst_null
      16: goto          41
      19: aload_0
      20: getfield      #12                 // Field finalBytes:[B
      23: aload_0
      24: getfield      #12                 // Field finalBytes:[B
      27: arraylength
      28: aload_0
      29: getfield      #5                  // Field tagLen:I
      32: isub
      33: aload_0
      34: getfield      #12                 // Field finalBytes:[B
      37: arraylength
      38: invokestatic  #24                 // Method java/util/Arrays.copyOfRange:([BII)[B
      41: areturn

  long getOutputByteCount();
    Code:
       0: aload_0
       1: getfield      #16                 // Field outputByteCount:J
       4: lreturn

  long getCurrentCount();
    Code:
       0: aload_0
       1: getfield      #23                 // Field currentCount:J
       4: lreturn

  long getMarkedCount();
    Code:
       0: aload_0
       1: getfield      #49                 // Field markedCount:J
       4: lreturn

  static {};
    Code:
       0: getstatic     #1                  // Field com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.AES_GCM:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       3: invokevirtual #55                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getTagLengthInBits:()I
       6: bipush        8
       8: idiv
       9: putstatic     #4                  // Field TAG_LENGTH:I
      12: return
}
