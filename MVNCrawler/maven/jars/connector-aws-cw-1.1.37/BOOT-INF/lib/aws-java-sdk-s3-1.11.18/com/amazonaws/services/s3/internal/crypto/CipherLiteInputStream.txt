Compiled from "CipherLiteInputStream.java"
public class com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream extends com.amazonaws.internal.SdkFilterInputStream {
  private static final int MAX_RETRY;

  private static final int DEFAULT_IN_BUFFER_SIZE;

  private com.amazonaws.services.s3.internal.crypto.CipherLite cipherLite;

  private final boolean multipart;

  private final boolean lastMultiPart;

  private boolean eof;

  private byte[] bufin;

  private byte[] bufout;

  private int curr_pos;

  private int max_pos;

  public com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream(java.io.InputStream, com.amazonaws.services.s3.internal.crypto.CipherLite);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        512
       6: iconst_0
       7: iconst_0
       8: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;IZZ)V
      11: return

  public com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream(java.io.InputStream, com.amazonaws.services.s3.internal.crypto.CipherLite, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: iconst_0
       6: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;IZZ)V
       9: return

  public com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream(java.io.InputStream, com.amazonaws.services.s3.internal.crypto.CipherLite, int, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method com/amazonaws/internal/SdkFilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: iload         5
       7: ifeq          25
      10: iload         4
      12: ifne          25
      15: new           #4                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #5                  // String lastMultiPart can only be true if multipart is true
      21: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: iload         4
      28: putfield      #7                  // Field multipart:Z
      31: aload_0
      32: iload         5
      34: putfield      #8                  // Field lastMultiPart:Z
      37: aload_0
      38: aload_2
      39: putfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      42: iload_3
      43: ifle          54
      46: iload_3
      47: sipush        512
      50: irem
      51: ifeq          92
      54: new           #4                  // class java/lang/IllegalArgumentException
      57: dup
      58: new           #10                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #12                 // String buffsize (
      67: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: iload_3
      71: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: ldc           #15                 // String ) must be a positive multiple of
      76: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: sipush        512
      82: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: aload_0
      93: iload_3
      94: newarray       byte
      96: putfield      #17                 // Field bufin:[B
      99: return

  protected com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #18                 // Field com/amazonaws/services/s3/internal/crypto/CipherLite.Null:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
       5: sipush        512
       8: iconst_0
       9: iconst_0
      10: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;IZZ)V
      13: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field curr_pos:I
       4: aload_0
       5: getfield      #20                 // Field max_pos:I
       8: if_icmplt     58
      11: aload_0
      12: getfield      #21                 // Field eof:Z
      15: ifeq          20
      18: iconst_m1
      19: ireturn
      20: iconst_0
      21: istore_1
      22: iload_1
      23: sipush        1000
      26: if_icmple     39
      29: new           #22                 // class java/io/IOException
      32: dup
      33: ldc           #23                 // String exceeded maximum number of attempts to read next chunk of data
      35: invokespecial #24                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokespecial #25                 // Method nextChunk:()I
      43: istore_2
      44: iinc          1, 1
      47: iload_2
      48: ifeq          22
      51: iload_2
      52: iconst_m1
      53: if_icmpne     58
      56: iconst_m1
      57: ireturn
      58: aload_0
      59: getfield      #26                 // Field bufout:[B
      62: aload_0
      63: dup
      64: getfield      #19                 // Field curr_pos:I
      67: dup_x1
      68: iconst_1
      69: iadd
      70: putfield      #19                 // Field curr_pos:I
      73: baload
      74: sipush        255
      77: iand
      78: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #27                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field curr_pos:I
       4: aload_0
       5: getfield      #20                 // Field max_pos:I
       8: if_icmplt     63
      11: aload_0
      12: getfield      #21                 // Field eof:Z
      15: ifeq          20
      18: iconst_m1
      19: ireturn
      20: iconst_0
      21: istore        4
      23: iload         4
      25: sipush        1000
      28: if_icmple     41
      31: new           #22                 // class java/io/IOException
      34: dup
      35: ldc           #23                 // String exceeded maximum number of attempts to read next chunk of data
      37: invokespecial #24                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: invokespecial #25                 // Method nextChunk:()I
      45: istore        5
      47: iinc          4, 1
      50: iload         5
      52: ifeq          23
      55: iload         5
      57: iconst_m1
      58: if_icmpne     63
      61: iconst_m1
      62: ireturn
      63: iload_3
      64: ifgt          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: getfield      #20                 // Field max_pos:I
      73: aload_0
      74: getfield      #19                 // Field curr_pos:I
      77: isub
      78: istore        4
      80: iload_3
      81: iload         4
      83: if_icmpge     89
      86: iload_3
      87: istore        4
      89: aload_0
      90: getfield      #26                 // Field bufout:[B
      93: aload_0
      94: getfield      #19                 // Field curr_pos:I
      97: aload_1
      98: iload_2
      99: iload         4
     101: invokestatic  #28                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     104: aload_0
     105: dup
     106: getfield      #19                 // Field curr_pos:I
     109: iload         4
     111: iadd
     112: putfield      #19                 // Field curr_pos:I
     115: iload         4
     117: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #20                 // Field max_pos:I
       8: aload_0
       9: getfield      #19                 // Field curr_pos:I
      12: isub
      13: istore_3
      14: lload_1
      15: iload_3
      16: i2l
      17: lcmp
      18: ifle          24
      21: iload_3
      22: i2l
      23: lstore_1
      24: lload_1
      25: lconst_0
      26: lcmp
      27: ifge          32
      30: lconst_0
      31: lreturn
      32: aload_0
      33: dup
      34: getfield      #19                 // Field curr_pos:I
      37: i2l
      38: lload_1
      39: ladd
      40: l2i
      41: putfield      #19                 // Field curr_pos:I
      44: lload_1
      45: lreturn

  public int available();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #20                 // Field max_pos:I
       8: aload_0
       9: getfield      #19                 // Field curr_pos:I
      12: isub
      13: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field in:Ljava/io/InputStream;
       4: invokevirtual #31                 // Method java/io/InputStream.close:()V
       7: aload_0
       8: getfield      #7                  // Field multipart:Z
      11: ifne          43
      14: aload_0
      15: getfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      18: invokevirtual #32                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.getCipherAlgorithm:()Ljava/lang/String;
      21: invokestatic  #33                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoScheme.isAesGcm:(Ljava/lang/String;)Z
      24: ifne          43
      27: aload_0
      28: getfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      31: invokevirtual #34                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.doFinal:()[B
      34: pop
      35: goto          43
      38: astore_1
      39: goto          43
      42: astore_1
      43: aload_0
      44: aload_0
      45: iconst_0
      46: dup_x1
      47: putfield      #20                 // Field max_pos:I
      50: putfield      #19                 // Field curr_pos:I
      53: aload_0
      54: invokevirtual #29                 // Method abortIfNeeded:()V
      57: return
    Exception table:
       from    to  target type
          27    35    38   Class javax/crypto/BadPaddingException
          27    35    42   Class javax/crypto/IllegalBlockSizeException

  public boolean markSupported();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #30                 // Field in:Ljava/io/InputStream;
       8: invokevirtual #37                 // Method java/io/InputStream.markSupported:()Z
      11: ifeq          28
      14: aload_0
      15: getfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      18: invokevirtual #38                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.markSupported:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #30                 // Field in:Ljava/io/InputStream;
       8: iload_1
       9: invokevirtual #39                 // Method java/io/InputStream.mark:(I)V
      12: aload_0
      13: getfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      16: invokevirtual #40                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.mark:()J
      19: pop2
      20: return

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #30                 // Field in:Ljava/io/InputStream;
       8: invokevirtual #41                 // Method java/io/InputStream.reset:()V
      11: aload_0
      12: getfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      15: invokevirtual #42                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.reset:()V
      18: aload_0
      19: invokevirtual #43                 // Method resetInternal:()V
      22: return

  final void resetInternal();
    Code:
       0: aload_0
       1: aload_0
       2: iconst_0
       3: dup_x1
       4: putfield      #20                 // Field max_pos:I
       7: putfield      #19                 // Field curr_pos:I
      10: aload_0
      11: iconst_0
      12: putfield      #21                 // Field eof:Z
      15: return

  private int nextChunk() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #21                 // Field eof:Z
       8: ifeq          13
      11: iconst_m1
      12: ireturn
      13: aload_0
      14: aconst_null
      15: putfield      #26                 // Field bufout:[B
      18: aload_0
      19: getfield      #30                 // Field in:Ljava/io/InputStream;
      22: aload_0
      23: getfield      #17                 // Field bufin:[B
      26: invokevirtual #44                 // Method java/io/InputStream.read:([B)I
      29: istore_1
      30: iload_1
      31: iconst_m1
      32: if_icmpne     119
      35: aload_0
      36: iconst_1
      37: putfield      #21                 // Field eof:Z
      40: aload_0
      41: getfield      #7                  // Field multipart:Z
      44: ifeq          54
      47: aload_0
      48: getfield      #8                  // Field lastMultiPart:Z
      51: ifeq          117
      54: aload_0
      55: aload_0
      56: getfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      59: invokevirtual #34                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.doFinal:()[B
      62: putfield      #26                 // Field bufout:[B
      65: aload_0
      66: getfield      #26                 // Field bufout:[B
      69: ifnonnull     74
      72: iconst_m1
      73: ireturn
      74: aload_0
      75: iconst_0
      76: putfield      #19                 // Field curr_pos:I
      79: aload_0
      80: aload_0
      81: getfield      #26                 // Field bufout:[B
      84: arraylength
      85: dup_x1
      86: putfield      #20                 // Field max_pos:I
      89: ireturn
      90: astore_2
      91: goto          117
      94: astore_2
      95: aload_0
      96: getfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      99: invokevirtual #32                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.getCipherAlgorithm:()Ljava/lang/String;
     102: invokestatic  #33                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoScheme.isAesGcm:(Ljava/lang/String;)Z
     105: ifeq          117
     108: new           #45                 // class java/lang/SecurityException
     111: dup
     112: aload_2
     113: invokespecial #46                 // Method java/lang/SecurityException."<init>":(Ljava/lang/Throwable;)V
     116: athrow
     117: iconst_m1
     118: ireturn
     119: aload_0
     120: aload_0
     121: getfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
     124: aload_0
     125: getfield      #17                 // Field bufin:[B
     128: iconst_0
     129: iload_1
     130: invokevirtual #47                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.update:([BII)[B
     133: putfield      #26                 // Field bufout:[B
     136: aload_0
     137: iconst_0
     138: putfield      #19                 // Field curr_pos:I
     141: aload_0
     142: aload_0
     143: getfield      #26                 // Field bufout:[B
     146: ifnonnull     153
     149: iconst_0
     150: goto          158
     153: aload_0
     154: getfield      #26                 // Field bufout:[B
     157: arraylength
     158: dup_x1
     159: putfield      #20                 // Field max_pos:I
     162: ireturn
    Exception table:
       from    to  target type
          54    73    90   Class javax/crypto/IllegalBlockSizeException
          74    89    90   Class javax/crypto/IllegalBlockSizeException
          54    73    94   Class javax/crypto/BadPaddingException
          74    89    94   Class javax/crypto/BadPaddingException

  void renewCipherLite();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
       5: invokevirtual #48                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite.recreate:()Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
       8: putfield      #9                  // Field cipherLite:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      11: return
}
