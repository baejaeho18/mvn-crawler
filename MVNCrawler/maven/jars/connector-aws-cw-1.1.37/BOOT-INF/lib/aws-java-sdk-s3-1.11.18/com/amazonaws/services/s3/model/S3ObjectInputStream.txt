Compiled from "S3ObjectInputStream.java"
public class com.amazonaws.services.s3.model.S3ObjectInputStream extends com.amazonaws.internal.SdkFilterInputStream {
  private final org.apache.http.client.methods.HttpRequestBase httpRequest;

  private boolean eof;

  public com.amazonaws.services.s3.model.S3ObjectInputStream(java.io.InputStream, org.apache.http.client.methods.HttpRequestBase);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: invokestatic  #1                  // Method wrapWithByteCounting:(Ljava/io/InputStream;)Z
       7: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;Lorg/apache/http/client/methods/HttpRequestBase;Z)V
      10: return

  public com.amazonaws.services.s3.model.S3ObjectInputStream(java.io.InputStream, org.apache.http.client.methods.HttpRequestBase, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: ifeq          19
       5: new           #3                  // class com/amazonaws/metrics/MetricFilterInputStream
       8: dup
       9: getstatic     #4                  // Field com/amazonaws/services/s3/metrics/S3ServiceMetric.S3DownloadThroughput:Lcom/amazonaws/services/s3/metrics/S3ServiceMetric$S3ThroughputMetric;
      12: aload_1
      13: invokespecial #5                  // Method com/amazonaws/metrics/MetricFilterInputStream."<init>":(Lcom/amazonaws/metrics/ThroughputMetricType;Ljava/io/InputStream;)V
      16: goto          20
      19: aload_1
      20: invokespecial #6                  // Method com/amazonaws/internal/SdkFilterInputStream."<init>":(Ljava/io/InputStream;)V
      23: aload_0
      24: aload_2
      25: putfield      #7                  // Field httpRequest:Lorg/apache/http/client/methods/HttpRequestBase;
      28: return

  private static boolean wrapWithByteCounting(java.io.InputStream);
    Code:
       0: invokestatic  #8                  // Method com/amazonaws/metrics/AwsSdkMetrics.isMetricsEnabled:()Z
       3: ifne          8
       6: iconst_0
       7: ireturn
       8: aload_0
       9: instanceof    #9                  // class com/amazonaws/internal/MetricAware
      12: ifeq          35
      15: aload_0
      16: checkcast     #9                  // class com/amazonaws/internal/MetricAware
      19: astore_1
      20: aload_1
      21: invokeinterface #10,  1           // InterfaceMethod com/amazonaws/internal/MetricAware.isMetricActivated:()Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn
      35: iconst_1
      36: ireturn

  public void abort();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method doAbort:()V
       4: return

  private void doAbort();
    Code:
       0: aload_0
       1: getfield      #7                  // Field httpRequest:Lorg/apache/http/client/methods/HttpRequestBase;
       4: ifnull        14
       7: aload_0
       8: getfield      #7                  // Field httpRequest:Lorg/apache/http/client/methods/HttpRequestBase;
      11: invokevirtual #12                 // Method org/apache/http/client/methods/HttpRequestBase.abort:()V
      14: aload_0
      15: getfield      #13                 // Field in:Ljava/io/InputStream;
      18: aconst_null
      19: invokestatic  #14                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      22: return

  public org.apache.http.client.methods.HttpRequestBase getHttpRequest();
    Code:
       0: aload_0
       1: getfield      #7                  // Field httpRequest:Lorg/apache/http/client/methods/HttpRequestBase;
       4: areturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method com/amazonaws/internal/SdkFilterInputStream.available:()I
       4: istore_1
       5: iload_1
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iload_1
      14: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method com/amazonaws/internal/SdkFilterInputStream.read:()I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpne     15
      10: aload_0
      11: iconst_1
      12: putfield      #17                 // Field eof:Z
      15: iload_1
      16: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #18                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #19                 // Method com/amazonaws/internal/SdkFilterInputStream.read:([BII)I
       7: istore        4
       9: iload         4
      11: iconst_m1
      12: if_icmpne     20
      15: aload_0
      16: iconst_1
      17: putfield      #17                 // Field eof:Z
      20: iload         4
      22: ireturn

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method com/amazonaws/internal/SdkFilterInputStream.reset:()V
       4: aload_0
       5: iconst_0
       6: putfield      #17                 // Field eof:Z
       9: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field eof:Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #21                 // Method com/amazonaws/internal/SdkFilterInputStream.close:()V
      11: goto          18
      14: aload_0
      15: invokespecial #11                 // Method doAbort:()V
      18: return
}
