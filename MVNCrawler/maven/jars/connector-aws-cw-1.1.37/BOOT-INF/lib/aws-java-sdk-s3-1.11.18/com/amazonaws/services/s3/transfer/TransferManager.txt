Compiled from "TransferManager.java"
public class com.amazonaws.services.s3.transfer.TransferManager {
  private final com.amazonaws.services.s3.AmazonS3 s3;

  private com.amazonaws.services.s3.transfer.TransferManagerConfiguration configuration;

  private final java.util.concurrent.ExecutorService executorService;

  private final java.util.concurrent.ScheduledExecutorService timedThreadPool;

  private static final org.apache.commons.logging.Log log;

  private final boolean shutDownThreadPools;

  private final boolean isImmutable;

  private static final java.lang.String USER_AGENT;

  private static final java.lang.String USER_AGENT_MULTIPART;

  private static final java.lang.String DEFAULT_DELIMITER;

  private static final java.util.concurrent.ThreadFactory daemonThreadFactory;

  public com.amazonaws.services.s3.transfer.TransferManager();
    Code:
       0: aload_0
       1: new           #2                  // class com/amazonaws/services/s3/AmazonS3Client
       4: dup
       5: new           #3                  // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       8: dup
       9: invokespecial #4                  // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
      12: invokespecial #5                  // Method com/amazonaws/services/s3/AmazonS3Client."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      15: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/services/s3/AmazonS3;)V
      18: return

  public com.amazonaws.services.s3.transfer.TransferManager(com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: new           #2                  // class com/amazonaws/services/s3/AmazonS3Client
       4: dup
       5: aload_1
       6: invokespecial #5                  // Method com/amazonaws/services/s3/AmazonS3Client."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
       9: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/services/s3/AmazonS3;)V
      12: return

  public com.amazonaws.services.s3.transfer.TransferManager(com.amazonaws.auth.AWSCredentials);
    Code:
       0: aload_0
       1: new           #2                  // class com/amazonaws/services/s3/AmazonS3Client
       4: dup
       5: aload_1
       6: invokespecial #7                  // Method com/amazonaws/services/s3/AmazonS3Client."<init>":(Lcom/amazonaws/auth/AWSCredentials;)V
       9: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/services/s3/AmazonS3;)V
      12: return

  public com.amazonaws.services.s3.transfer.TransferManager(com.amazonaws.services.s3.AmazonS3);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.createDefaultExecutorService:()Ljava/util/concurrent/ThreadPoolExecutor;
       5: invokespecial #9                  // Method "<init>":(Lcom/amazonaws/services/s3/AmazonS3;Ljava/util/concurrent/ExecutorService;)V
       8: return

  public com.amazonaws.services.s3.transfer.TransferManager(com.amazonaws.services.s3.AmazonS3, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #10                 // Method "<init>":(Lcom/amazonaws/services/s3/AmazonS3;Ljava/util/concurrent/ExecutorService;Z)V
       7: return

  public com.amazonaws.services.s3.transfer.TransferManager(com.amazonaws.services.s3.AmazonS3, java.util.concurrent.ExecutorService, boolean);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #12                 // class java/util/concurrent/ScheduledThreadPoolExecutor
       8: dup
       9: iconst_1
      10: getstatic     #13                 // Field daemonThreadFactory:Ljava/util/concurrent/ThreadFactory;
      13: invokespecial #14                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      16: putfield      #15                 // Field timedThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
      19: aload_0
      20: aload_1
      21: putfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      24: aload_0
      25: aload_2
      26: putfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      29: aload_0
      30: new           #18                 // class com/amazonaws/services/s3/transfer/TransferManagerConfiguration
      33: dup
      34: invokespecial #19                 // Method com/amazonaws/services/s3/transfer/TransferManagerConfiguration."<init>":()V
      37: putfield      #20                 // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      40: aload_0
      41: iload_3
      42: putfield      #21                 // Field shutDownThreadPools:Z
      45: aload_0
      46: iconst_0
      47: putfield      #22                 // Field isImmutable:Z
      50: return

  com.amazonaws.services.s3.transfer.TransferManager(com.amazonaws.services.s3.transfer.TransferManagerParams);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #12                 // class java/util/concurrent/ScheduledThreadPoolExecutor
       8: dup
       9: iconst_1
      10: getstatic     #13                 // Field daemonThreadFactory:Ljava/util/concurrent/ThreadFactory;
      13: invokespecial #14                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      16: putfield      #15                 // Field timedThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
      19: aload_0
      20: aload_1
      21: invokevirtual #23                 // Method com/amazonaws/services/s3/transfer/TransferManagerParams.getS3Client:()Lcom/amazonaws/services/s3/AmazonS3;
      24: putfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      27: aload_0
      28: aload_1
      29: invokevirtual #24                 // Method com/amazonaws/services/s3/transfer/TransferManagerParams.getExecutorService:()Ljava/util/concurrent/ExecutorService;
      32: putfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      35: aload_0
      36: aload_1
      37: invokevirtual #25                 // Method com/amazonaws/services/s3/transfer/TransferManagerParams.getConfiguration:()Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      40: putfield      #20                 // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      43: aload_0
      44: aload_1
      45: invokevirtual #26                 // Method com/amazonaws/services/s3/transfer/TransferManagerParams.getShutDownThreadPools:()Ljava/lang/Boolean;
      48: invokevirtual #27                 // Method java/lang/Boolean.booleanValue:()Z
      51: putfield      #21                 // Field shutDownThreadPools:Z
      54: aload_0
      55: iconst_1
      56: putfield      #22                 // Field isImmutable:Z
      59: return

  public void setConfiguration(com.amazonaws.services.s3.transfer.TransferManagerConfiguration);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method checkMutability:()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
       9: return

  public com.amazonaws.services.s3.transfer.TransferManagerConfiguration getConfiguration();
    Code:
       0: aload_0
       1: getfield      #20                 // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
       4: areturn

  public com.amazonaws.services.s3.AmazonS3 getAmazonS3Client();
    Code:
       0: aload_0
       1: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
       4: areturn

  public com.amazonaws.services.s3.transfer.Upload upload(java.lang.String, java.lang.String, java.io.InputStream, com.amazonaws.services.s3.model.ObjectMetadata) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: new           #29                 // class com/amazonaws/services/s3/model/PutObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #30                 // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      13: invokevirtual #31                 // Method upload:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/transfer/Upload;
      16: areturn

  public com.amazonaws.services.s3.transfer.Upload upload(java.lang.String, java.lang.String, java.io.File) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: new           #29                 // class com/amazonaws/services/s3/model/PutObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #32                 // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V
      11: invokevirtual #31                 // Method upload:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/transfer/Upload;
      14: areturn

  public com.amazonaws.services.s3.transfer.Upload upload(com.amazonaws.services.s3.model.PutObjectRequest) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: aconst_null
       5: invokespecial #33                 // Method doUpload:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/transfer/internal/S3ProgressListener;Lcom/amazonaws/services/s3/transfer/PersistableUpload;)Lcom/amazonaws/services/s3/transfer/Upload;
       8: areturn

  public com.amazonaws.services.s3.transfer.Upload upload(com.amazonaws.services.s3.model.PutObjectRequest, com.amazonaws.services.s3.transfer.internal.S3ProgressListener) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aconst_null
       5: invokespecial #33                 // Method doUpload:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/transfer/internal/S3ProgressListener;Lcom/amazonaws/services/s3/transfer/PersistableUpload;)Lcom/amazonaws/services/s3/transfer/Upload;
       8: areturn

  private com.amazonaws.services.s3.transfer.Upload doUpload(com.amazonaws.services.s3.model.PutObjectRequest, com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener, com.amazonaws.services.s3.transfer.internal.S3ProgressListener, com.amazonaws.services.s3.transfer.PersistableUpload) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_1
       1: invokestatic  #34                 // Method appendSingleObjectUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
       4: pop
       5: aload         4
       7: ifnull        18
      10: aload         4
      12: invokevirtual #35                 // Method com/amazonaws/services/s3/transfer/PersistableUpload.getMultipartUploadId:()Ljava/lang/String;
      15: goto          19
      18: aconst_null
      19: astore        5
      21: aload_1
      22: invokevirtual #36                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      25: ifnonnull     39
      28: aload_1
      29: new           #37                 // class com/amazonaws/services/s3/model/ObjectMetadata
      32: dup
      33: invokespecial #38                 // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      36: invokevirtual #39                 // Method com/amazonaws/services/s3/model/PutObjectRequest.setMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      39: aload_1
      40: invokevirtual #36                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      43: astore        6
      45: aload_1
      46: invokestatic  #40                 // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.getRequestFile:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Ljava/io/File;
      49: astore        7
      51: aload         7
      53: ifnull        90
      56: aload         6
      58: aload         7
      60: invokevirtual #41                 // Method java/io/File.length:()J
      63: invokevirtual #42                 // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentLength:(J)V
      66: aload         6
      68: invokevirtual #43                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentType:()Ljava/lang/String;
      71: ifnonnull     105
      74: aload         6
      76: invokestatic  #44                 // Method com/amazonaws/services/s3/internal/Mimetypes.getInstance:()Lcom/amazonaws/services/s3/internal/Mimetypes;
      79: aload         7
      81: invokevirtual #45                 // Method com/amazonaws/services/s3/internal/Mimetypes.getMimetype:(Ljava/io/File;)Ljava/lang/String;
      84: invokevirtual #46                 // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentType:(Ljava/lang/String;)V
      87: goto          105
      90: aload         5
      92: ifnull        105
      95: new           #47                 // class java/lang/IllegalArgumentException
      98: dup
      99: ldc           #48                 // String Unable to resume the upload. No file specified.
     101: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: new           #50                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     112: ldc           #52                 // String Uploading to
     114: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_1
     118: invokevirtual #54                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getBucketName:()Ljava/lang/String;
     121: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #55                 // String /
     126: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_1
     130: invokevirtual #56                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
     133: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: astore        8
     141: new           #58                 // class com/amazonaws/services/s3/transfer/TransferProgress
     144: dup
     145: invokespecial #59                 // Method com/amazonaws/services/s3/transfer/TransferProgress."<init>":()V
     148: astore        9
     150: aload         9
     152: aload_1
     153: invokestatic  #60                 // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.getContentLength:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)J
     156: invokevirtual #61                 // Method com/amazonaws/services/s3/transfer/TransferProgress.setTotalBytesToTransfer:(J)V
     159: new           #62                 // class com/amazonaws/services/s3/transfer/internal/S3ProgressListenerChain
     162: dup
     163: iconst_3
     164: anewarray     #63                 // class com/amazonaws/event/ProgressListener
     167: dup
     168: iconst_0
     169: new           #64                 // class com/amazonaws/services/s3/transfer/internal/TransferProgressUpdatingListener
     172: dup
     173: aload         9
     175: invokespecial #65                 // Method com/amazonaws/services/s3/transfer/internal/TransferProgressUpdatingListener."<init>":(Lcom/amazonaws/services/s3/transfer/TransferProgress;)V
     178: aastore
     179: dup
     180: iconst_1
     181: aload_1
     182: invokevirtual #66                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
     185: aastore
     186: dup
     187: iconst_2
     188: aload_3
     189: aastore
     190: invokespecial #67                 // Method com/amazonaws/services/s3/transfer/internal/S3ProgressListenerChain."<init>":([Lcom/amazonaws/event/ProgressListener;)V
     193: astore        10
     195: aload_1
     196: aload         10
     198: invokevirtual #68                 // Method com/amazonaws/services/s3/model/PutObjectRequest.setGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)V
     201: new           #69                 // class com/amazonaws/services/s3/transfer/internal/UploadImpl
     204: dup
     205: aload         8
     207: aload         9
     209: aload         10
     211: aload_2
     212: invokespecial #70                 // Method com/amazonaws/services/s3/transfer/internal/UploadImpl."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;)V
     215: astore        11
     217: new           #71                 // class com/amazonaws/services/s3/transfer/internal/UploadCallable
     220: dup
     221: aload_0
     222: aload_0
     223: getfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     226: aload         11
     228: aload_1
     229: aload         10
     231: aload         5
     233: aload         9
     235: invokespecial #72                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable."<init>":(Lcom/amazonaws/services/s3/transfer/TransferManager;Ljava/util/concurrent/ExecutorService;Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/event/ProgressListenerChain;Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;)V
     238: astore        12
     240: aload_0
     241: aload         11
     243: aload_0
     244: getfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     247: aload         12
     249: aload_1
     250: aload         10
     252: invokestatic  #73                 // Method com/amazonaws/services/s3/transfer/internal/UploadMonitor.create:(Lcom/amazonaws/services/s3/transfer/TransferManager;Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;Ljava/util/concurrent/ExecutorService;Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/event/ProgressListenerChain;)Lcom/amazonaws/services/s3/transfer/internal/UploadMonitor;
     255: astore        13
     257: aload         11
     259: aload         13
     261: invokevirtual #74                 // Method com/amazonaws/services/s3/transfer/internal/UploadImpl.setMonitor:(Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;)V
     264: aload         11
     266: areturn

  public com.amazonaws.services.s3.transfer.Download download(java.lang.String, java.lang.String, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lconst_0
       5: invokevirtual #75                 // Method download:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;J)Lcom/amazonaws/services/s3/transfer/Download;
       8: areturn

  public com.amazonaws.services.s3.transfer.Download download(java.lang.String, java.lang.String, java.io.File, long);
    Code:
       0: aload_0
       1: new           #76                 // class com/amazonaws/services/s3/model/GetObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #77                 // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_3
      11: lload         4
      13: invokevirtual #78                 // Method download:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;J)Lcom/amazonaws/services/s3/transfer/Download;
      16: areturn

  public com.amazonaws.services.s3.transfer.Download download(com.amazonaws.services.s3.model.GetObjectRequest, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lconst_0
       4: invokevirtual #78                 // Method download:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;J)Lcom/amazonaws/services/s3/transfer/Download;
       7: areturn

  public com.amazonaws.services.s3.transfer.Download download(com.amazonaws.services.s3.model.GetObjectRequest, java.io.File, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: iconst_0
       6: lload_3
       7: aconst_null
       8: lconst_0
       9: invokespecial #79                 // Method doDownload:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/transfer/internal/S3ProgressListener;ZJLjava/lang/Integer;J)Lcom/amazonaws/services/s3/transfer/Download;
      12: areturn

  public com.amazonaws.services.s3.transfer.Download download(com.amazonaws.services.s3.model.GetObjectRequest, java.io.File, com.amazonaws.services.s3.transfer.internal.S3ProgressListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: iconst_0
       6: lconst_0
       7: aconst_null
       8: lconst_0
       9: invokespecial #79                 // Method doDownload:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/transfer/internal/S3ProgressListener;ZJLjava/lang/Integer;J)Lcom/amazonaws/services/s3/transfer/Download;
      12: areturn

  public com.amazonaws.services.s3.transfer.Download download(com.amazonaws.services.s3.model.GetObjectRequest, java.io.File, com.amazonaws.services.s3.transfer.internal.S3ProgressListener, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: iconst_0
       6: lload         4
       8: aconst_null
       9: lconst_0
      10: invokespecial #79                 // Method doDownload:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/transfer/internal/S3ProgressListener;ZJLjava/lang/Integer;J)Lcom/amazonaws/services/s3/transfer/Download;
      13: areturn

  private com.amazonaws.services.s3.transfer.Download doDownload(com.amazonaws.services.s3.model.GetObjectRequest, java.io.File, com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener, com.amazonaws.services.s3.transfer.internal.S3ProgressListener, boolean, long, java.lang.Integer, long);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #80                 // String A valid GetObjectRequest must be provided to initiate download
       4: invokespecial #81                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: aload_2
       9: ldc           #82                 // String A valid file must be provided to download into
      11: invokespecial #81                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_1
      15: invokestatic  #34                 // Method appendSingleObjectUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      18: pop
      19: new           #50                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #83                 // String Downloading from
      28: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #84                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
      35: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #55                 // String /
      40: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #85                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
      47: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: astore        11
      55: new           #58                 // class com/amazonaws/services/s3/transfer/TransferProgress
      58: dup
      59: invokespecial #59                 // Method com/amazonaws/services/s3/transfer/TransferProgress."<init>":()V
      62: astore        12
      64: new           #62                 // class com/amazonaws/services/s3/transfer/internal/S3ProgressListenerChain
      67: dup
      68: iconst_3
      69: anewarray     #63                 // class com/amazonaws/event/ProgressListener
      72: dup
      73: iconst_0
      74: new           #64                 // class com/amazonaws/services/s3/transfer/internal/TransferProgressUpdatingListener
      77: dup
      78: aload         12
      80: invokespecial #65                 // Method com/amazonaws/services/s3/transfer/internal/TransferProgressUpdatingListener."<init>":(Lcom/amazonaws/services/s3/transfer/TransferProgress;)V
      83: aastore
      84: dup
      85: iconst_1
      86: aload_1
      87: invokevirtual #86                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
      90: aastore
      91: dup
      92: iconst_2
      93: aload         4
      95: aastore
      96: invokespecial #67                 // Method com/amazonaws/services/s3/transfer/internal/S3ProgressListenerChain."<init>":([Lcom/amazonaws/event/ProgressListener;)V
      99: astore        13
     101: aload_1
     102: new           #87                 // class com/amazonaws/event/ProgressListenerChain
     105: dup
     106: new           #88                 // class com/amazonaws/services/s3/transfer/TransferCompletionFilter
     109: dup
     110: invokespecial #89                 // Method com/amazonaws/services/s3/transfer/TransferCompletionFilter."<init>":()V
     113: iconst_1
     114: anewarray     #63                 // class com/amazonaws/event/ProgressListener
     117: dup
     118: iconst_0
     119: aload         13
     121: aastore
     122: invokespecial #90                 // Method com/amazonaws/event/ProgressListenerChain."<init>":(Lcom/amazonaws/event/ProgressEventFilter;[Lcom/amazonaws/event/ProgressListener;)V
     125: invokevirtual #91                 // Method com/amazonaws/services/s3/model/GetObjectRequest.setGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)V
     128: new           #92                 // class com/amazonaws/services/s3/model/GetObjectMetadataRequest
     131: dup
     132: aload_1
     133: invokevirtual #84                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
     136: aload_1
     137: invokevirtual #85                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
     140: aload_1
     141: invokevirtual #93                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getVersionId:()Ljava/lang/String;
     144: invokespecial #94                 // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     147: astore        14
     149: aload_1
     150: invokevirtual #95                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     153: ifnull        165
     156: aload         14
     158: aload_1
     159: invokevirtual #95                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     162: invokevirtual #96                 // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest.setSSECustomerKey:(Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     165: aload_0
     166: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     169: aload         14
     171: invokeinterface #97,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.getObjectMetadata:(Lcom/amazonaws/services/s3/model/GetObjectMetadataRequest;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
     176: astore        15
     178: aload         15
     180: invokevirtual #98                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getLastModified:()Ljava/util/Date;
     183: invokevirtual #99                 // Method java/util/Date.getTime:()J
     186: lstore        16
     188: lconst_0
     189: lstore        18
     191: aload_1
     192: invokevirtual #100                // Method com/amazonaws/services/s3/model/GetObjectRequest.getRange:()[J
     195: astore        22
     197: aload         22
     199: ifnull        224
     202: aload         22
     204: arraylength
     205: iconst_2
     206: if_icmpne     224
     209: aload         22
     211: iconst_0
     212: laload
     213: lstore        18
     215: aload         22
     217: iconst_1
     218: laload
     219: lstore        20
     221: goto          233
     224: aload         15
     226: invokevirtual #101                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentLength:()J
     229: lconst_1
     230: lsub
     231: lstore        20
     233: lload         18
     235: lstore        23
     237: aload_0
     238: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     241: aload_1
     242: aload_1
     243: aload_0
     244: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     247: invokestatic  #102                // Method com/amazonaws/services/s3/internal/ServiceUtils.getPartCount:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Lcom/amazonaws/services/s3/AmazonS3;)Ljava/lang/Integer;
     250: invokestatic  #103                // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.isDownloadParallelizable:(Lcom/amazonaws/services/s3/AmazonS3;Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/lang/Integer;)Z
     253: istore        25
     255: new           #104                // class com/amazonaws/services/s3/transfer/internal/DownloadImpl
     258: dup
     259: aload         11
     261: aload         12
     263: aload         13
     265: aconst_null
     266: aload_3
     267: aload_1
     268: aload_2
     269: aload         15
     271: iload         25
     273: invokespecial #105                // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Lcom/amazonaws/services/s3/model/S3Object;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;Lcom/amazonaws/services/s3/model/ObjectMetadata;Z)V
     276: astore        26
     278: lload         20
     280: lload         18
     282: lsub
     283: lconst_1
     284: ladd
     285: lstore        27
     287: aload         12
     289: lload         27
     291: invokevirtual #61                 // Method com/amazonaws/services/s3/transfer/TransferProgress.setTotalBytesToTransfer:(J)V
     294: ldc2_w        #106                // long -1l
     297: lstore        29
     299: iload         5
     301: ifeq          561
     304: aload_0
     305: lload         16
     307: lload         9
     309: invokespecial #108                // Method isS3ObjectModifiedSincePause:(JJ)Z
     312: ifeq          362
     315: new           #109                // class com/amazonaws/AmazonClientException
     318: dup
     319: new           #50                 // class java/lang/StringBuilder
     322: dup
     323: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     326: ldc           #110                // String The requested object in bucket
     328: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     331: aload_1
     332: invokevirtual #84                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
     335: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     338: ldc           #111                // String  with key
     340: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     343: aload_1
     344: invokevirtual #85                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
     347: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     350: ldc           #112                // String  is modified on Amazon S3 since the last pause.
     352: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     355: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     358: invokespecial #113                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     361: athrow
     362: iload         25
     364: ifne          561
     367: aload_2
     368: invokestatic  #114                // Method com/amazonaws/services/s3/internal/FileLocks.lock:(Ljava/io/File;)Z
     371: ifne          406
     374: new           #115                // class com/amazonaws/services/s3/transfer/exception/FileLockException
     377: dup
     378: new           #50                 // class java/lang/StringBuilder
     381: dup
     382: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     385: ldc           #116                // String Fail to lock
     387: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     390: aload_2
     391: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     394: ldc           #118                // String  for resume download
     396: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     399: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     402: invokespecial #119                // Method com/amazonaws/services/s3/transfer/exception/FileLockException."<init>":(Ljava/lang/String;)V
     405: athrow
     406: aload_2
     407: invokevirtual #120                // Method java/io/File.exists:()Z
     410: ifeq          543
     413: aload_2
     414: invokevirtual #41                 // Method java/io/File.length:()J
     417: lstore        29
     419: lload         18
     421: lload         29
     423: ladd
     424: lstore        18
     426: aload_1
     427: lload         18
     429: lload         20
     431: invokevirtual #121                // Method com/amazonaws/services/s3/model/GetObjectRequest.setRange:(JJ)V
     434: aload         12
     436: lload         29
     438: lload         27
     440: invokestatic  #122                // Method java/lang/Math.min:(JJ)J
     443: invokevirtual #123                // Method com/amazonaws/services/s3/transfer/TransferProgress.updateProgress:(J)V
     446: lload         20
     448: lload         18
     450: lsub
     451: lconst_1
     452: ladd
     453: lstore        27
     455: getstatic     #124                // Field log:Lorg/apache/commons/logging/Log;
     458: invokeinterface #125,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     463: ifeq          543
     466: getstatic     #124                // Field log:Lorg/apache/commons/logging/Log;
     469: new           #50                 // class java/lang/StringBuilder
     472: dup
     473: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     476: ldc           #126                // String Resume download: totalBytesToDownload=
     478: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     481: lload         27
     483: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     486: ldc           #128                // String , origStartingByte=
     488: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     491: lload         23
     493: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     496: ldc           #129                // String , startingByte=
     498: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     501: lload         18
     503: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     506: ldc           #130                // String , lastByte=
     508: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     511: lload         20
     513: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     516: ldc           #131                // String , numberOfBytesRead=
     518: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: lload         29
     523: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     526: ldc           #132                // String , file:
     528: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     531: aload_2
     532: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     535: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     538: invokeinterface #133,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     543: aload_2
     544: invokestatic  #134                // Method com/amazonaws/services/s3/internal/FileLocks.unlock:(Ljava/io/File;)Z
     547: pop
     548: goto          561
     551: astore        31
     553: aload_2
     554: invokestatic  #134                // Method com/amazonaws/services/s3/internal/FileLocks.unlock:(Ljava/io/File;)Z
     557: pop
     558: aload         31
     560: athrow
     561: lload         27
     563: lconst_0
     564: lcmp
     565: ifge          578
     568: new           #47                 // class java/lang/IllegalArgumentException
     571: dup
     572: ldc           #135                // String Unable to determine the range for download operation.
     574: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     577: athrow
     578: new           #136                // class java/util/concurrent/CountDownLatch
     581: dup
     582: iconst_1
     583: invokespecial #137                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     586: astore        31
     588: aload_0
     589: getfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     592: new           #138                // class com/amazonaws/services/s3/transfer/DownloadCallable
     595: dup
     596: aload_0
     597: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     600: aload         31
     602: aload_1
     603: iload         5
     605: aload         26
     607: aload_2
     608: lload         23
     610: lload         29
     612: lload         6
     614: aload_0
     615: getfield      #15                 // Field timedThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
     618: aload_0
     619: getfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     622: aload         8
     624: iload         25
     626: invokespecial #139                // Method com/amazonaws/services/s3/transfer/DownloadCallable."<init>":(Lcom/amazonaws/services/s3/AmazonS3;Ljava/util/concurrent/CountDownLatch;Lcom/amazonaws/services/s3/model/GetObjectRequest;ZLcom/amazonaws/services/s3/transfer/internal/DownloadImpl;Ljava/io/File;JJJLjava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/lang/Integer;Z)V
     629: invokeinterface #140,  2          // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
     634: astore        32
     636: aload         26
     638: new           #141                // class com/amazonaws/services/s3/transfer/internal/DownloadMonitor
     641: dup
     642: aload         26
     644: aload         32
     646: invokespecial #142                // Method com/amazonaws/services/s3/transfer/internal/DownloadMonitor."<init>":(Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;Ljava/util/concurrent/Future;)V
     649: invokevirtual #143                // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.setMonitor:(Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;)V
     652: aload         31
     654: invokevirtual #144                // Method java/util/concurrent/CountDownLatch.countDown:()V
     657: aload         26
     659: areturn
    Exception table:
       from    to  target type
         406   543   551   any
         551   553   551   any

  private boolean isS3ObjectModifiedSincePause(long, long);
    Code:
       0: lload_1
       1: lload_3
       2: lcmp
       3: ifeq          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public com.amazonaws.services.s3.transfer.MultipleFileDownload downloadDirectory(java.lang.String, java.lang.String, java.io.File);
    Code:
       0: aload_2
       1: ifnonnull     7
       4: ldc           #145                // String
       6: astore_2
       7: new           #146                // class java/util/LinkedList
      10: dup
      11: invokespecial #147                // Method java/util/LinkedList."<init>":()V
      14: astore        4
      16: new           #148                // class java/util/Stack
      19: dup
      20: invokespecial #149                // Method java/util/Stack."<init>":()V
      23: astore        5
      25: aload         5
      27: aload_2
      28: invokevirtual #150                // Method java/util/Stack.add:(Ljava/lang/Object;)Z
      31: pop
      32: lconst_0
      33: lstore        6
      35: aload         5
      37: invokevirtual #151                // Method java/util/Stack.pop:()Ljava/lang/Object;
      40: checkcast     #152                // class java/lang/String
      43: astore        8
      45: aconst_null
      46: astore        9
      48: aload         9
      50: ifnonnull     92
      53: new           #153                // class com/amazonaws/services/s3/model/ListObjectsRequest
      56: dup
      57: invokespecial #154                // Method com/amazonaws/services/s3/model/ListObjectsRequest."<init>":()V
      60: aload_1
      61: invokevirtual #155                // Method com/amazonaws/services/s3/model/ListObjectsRequest.withBucketName:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListObjectsRequest;
      64: ldc           #55                 // String /
      66: invokevirtual #157                // Method com/amazonaws/services/s3/model/ListObjectsRequest.withDelimiter:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListObjectsRequest;
      69: aload         8
      71: invokevirtual #158                // Method com/amazonaws/services/s3/model/ListObjectsRequest.withPrefix:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListObjectsRequest;
      74: astore        10
      76: aload_0
      77: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      80: aload         10
      82: invokeinterface #159,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.listObjects:(Lcom/amazonaws/services/s3/model/ListObjectsRequest;)Lcom/amazonaws/services/s3/model/ObjectListing;
      87: astore        9
      89: goto          105
      92: aload_0
      93: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      96: aload         9
      98: invokeinterface #160,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.listNextBatchOfObjects:(Lcom/amazonaws/services/s3/model/ObjectListing;)Lcom/amazonaws/services/s3/model/ObjectListing;
     103: astore        9
     105: aload         9
     107: invokevirtual #161                // Method com/amazonaws/services/s3/model/ObjectListing.getObjectSummaries:()Ljava/util/List;
     110: invokeinterface #162,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     115: astore        10
     117: aload         10
     119: invokeinterface #163,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          250
     127: aload         10
     129: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     134: checkcast     #165                // class com/amazonaws/services/s3/model/S3ObjectSummary
     137: astore        11
     139: aload         11
     141: invokevirtual #166                // Method com/amazonaws/services/s3/model/S3ObjectSummary.getKey:()Ljava/lang/String;
     144: aload         8
     146: invokevirtual #167                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     149: ifne          211
     152: aload         9
     154: invokevirtual #168                // Method com/amazonaws/services/s3/model/ObjectListing.getCommonPrefixes:()Ljava/util/List;
     157: new           #50                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     164: aload         11
     166: invokevirtual #166                // Method com/amazonaws/services/s3/model/S3ObjectSummary.getKey:()Ljava/lang/String;
     169: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: ldc           #55                 // String /
     174: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: invokeinterface #169,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     185: ifne          211
     188: aload         4
     190: aload         11
     192: invokeinterface #170,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     197: pop
     198: lload         6
     200: aload         11
     202: invokevirtual #171                // Method com/amazonaws/services/s3/model/S3ObjectSummary.getSize:()J
     205: ladd
     206: lstore        6
     208: goto          247
     211: getstatic     #124                // Field log:Lorg/apache/commons/logging/Log;
     214: new           #50                 // class java/lang/StringBuilder
     217: dup
     218: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     221: ldc           #172                // String Skipping download for object
     223: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: aload         11
     228: invokevirtual #166                // Method com/amazonaws/services/s3/model/S3ObjectSummary.getKey:()Ljava/lang/String;
     231: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     234: ldc           #173                // String  since it is also a virtual directory
     236: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     242: invokeinterface #133,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     247: goto          117
     250: aload         5
     252: aload         9
     254: invokevirtual #168                // Method com/amazonaws/services/s3/model/ObjectListing.getCommonPrefixes:()Ljava/util/List;
     257: invokevirtual #174                // Method java/util/Stack.addAll:(Ljava/util/Collection;)Z
     260: pop
     261: aload         9
     263: invokevirtual #175                // Method com/amazonaws/services/s3/model/ObjectListing.isTruncated:()Z
     266: ifne          48
     269: aload         5
     271: invokevirtual #176                // Method java/util/Stack.isEmpty:()Z
     274: ifeq          35
     277: new           #87                 // class com/amazonaws/event/ProgressListenerChain
     280: dup
     281: iconst_0
     282: anewarray     #63                 // class com/amazonaws/event/ProgressListener
     285: invokespecial #177                // Method com/amazonaws/event/ProgressListenerChain."<init>":([Lcom/amazonaws/event/ProgressListener;)V
     288: astore        8
     290: new           #58                 // class com/amazonaws/services/s3/transfer/TransferProgress
     293: dup
     294: invokespecial #59                 // Method com/amazonaws/services/s3/transfer/TransferProgress."<init>":()V
     297: astore        9
     299: aload         9
     301: lload         6
     303: invokevirtual #61                 // Method com/amazonaws/services/s3/transfer/TransferProgress.setTotalBytesToTransfer:(J)V
     306: new           #178                // class com/amazonaws/services/s3/transfer/MultipleFileTransferProgressUpdatingListener
     309: dup
     310: aload         9
     312: aload         8
     314: invokespecial #179                // Method com/amazonaws/services/s3/transfer/MultipleFileTransferProgressUpdatingListener."<init>":(Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;)V
     317: astore        10
     319: new           #180                // class java/util/ArrayList
     322: dup
     323: invokespecial #181                // Method java/util/ArrayList."<init>":()V
     326: astore        11
     328: new           #50                 // class java/lang/StringBuilder
     331: dup
     332: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     335: ldc           #83                 // String Downloading from
     337: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     340: aload_1
     341: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     344: ldc           #55                 // String /
     346: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     349: aload_2
     350: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     353: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     356: astore        12
     358: new           #182                // class com/amazonaws/services/s3/transfer/internal/MultipleFileDownloadImpl
     361: dup
     362: aload         12
     364: aload         9
     366: aload         8
     368: aload_2
     369: aload_1
     370: aload         11
     372: invokespecial #183                // Method com/amazonaws/services/s3/transfer/internal/MultipleFileDownloadImpl."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
     375: astore        13
     377: aload         13
     379: new           #184                // class com/amazonaws/services/s3/transfer/internal/MultipleFileTransferMonitor
     382: dup
     383: aload         13
     385: aload         11
     387: invokespecial #185                // Method com/amazonaws/services/s3/transfer/internal/MultipleFileTransferMonitor."<init>":(Lcom/amazonaws/services/s3/transfer/internal/AbstractTransfer;Ljava/util/Collection;)V
     390: invokevirtual #186                // Method com/amazonaws/services/s3/transfer/internal/MultipleFileDownloadImpl.setMonitor:(Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;)V
     393: new           #136                // class java/util/concurrent/CountDownLatch
     396: dup
     397: iconst_1
     398: invokespecial #137                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     401: astore        14
     403: new           #187                // class com/amazonaws/services/s3/transfer/MultipleFileTransferStateChangeListener
     406: dup
     407: aload         14
     409: aload         13
     411: invokespecial #188                // Method com/amazonaws/services/s3/transfer/MultipleFileTransferStateChangeListener."<init>":(Ljava/util/concurrent/CountDownLatch;Lcom/amazonaws/services/s3/transfer/internal/MultipleFileTransfer;)V
     414: astore        15
     416: aload         4
     418: invokeinterface #162,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     423: astore        16
     425: aload         16
     427: invokeinterface #163,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     432: ifeq          568
     435: aload         16
     437: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     442: checkcast     #165                // class com/amazonaws/services/s3/model/S3ObjectSummary
     445: astore        17
     447: new           #189                // class java/io/File
     450: dup
     451: aload_3
     452: aload         17
     454: invokevirtual #166                // Method com/amazonaws/services/s3/model/S3ObjectSummary.getKey:()Ljava/lang/String;
     457: invokespecial #190                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     460: astore        18
     462: aload         18
     464: invokevirtual #191                // Method java/io/File.getParentFile:()Ljava/io/File;
     467: astore        19
     469: aload         19
     471: invokevirtual #120                // Method java/io/File.exists:()Z
     474: ifne          516
     477: aload         19
     479: invokevirtual #192                // Method java/io/File.mkdirs:()Z
     482: ifne          516
     485: new           #193                // class java/lang/RuntimeException
     488: dup
     489: new           #50                 // class java/lang/StringBuilder
     492: dup
     493: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     496: ldc           #194                // String Couldn\'t create parent directories for
     498: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     501: aload         18
     503: invokevirtual #195                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     506: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     509: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     512: invokespecial #196                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     515: athrow
     516: aload         11
     518: aload_0
     519: new           #76                 // class com/amazonaws/services/s3/model/GetObjectRequest
     522: dup
     523: aload         17
     525: invokevirtual #197                // Method com/amazonaws/services/s3/model/S3ObjectSummary.getBucketName:()Ljava/lang/String;
     528: aload         17
     530: invokevirtual #166                // Method com/amazonaws/services/s3/model/S3ObjectSummary.getKey:()Ljava/lang/String;
     533: invokespecial #77                 // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     536: aload         10
     538: invokevirtual #198                // Method com/amazonaws/services/s3/model/GetObjectRequest.withGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/AmazonWebServiceRequest;
     541: checkcast     #76                 // class com/amazonaws/services/s3/model/GetObjectRequest
     544: aload         18
     546: aload         15
     548: aconst_null
     549: iconst_0
     550: lconst_0
     551: aconst_null
     552: lconst_0
     553: invokespecial #79                 // Method doDownload:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/transfer/internal/S3ProgressListener;ZJLjava/lang/Integer;J)Lcom/amazonaws/services/s3/transfer/Download;
     556: checkcast     #104                // class com/amazonaws/services/s3/transfer/internal/DownloadImpl
     559: invokeinterface #170,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     564: pop
     565: goto          425
     568: aload         11
     570: invokeinterface #199,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     575: ifeq          589
     578: aload         13
     580: getstatic     #200                // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Completed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
     583: invokevirtual #201                // Method com/amazonaws/services/s3/transfer/internal/MultipleFileDownloadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
     586: aload         13
     588: areturn
     589: aload         14
     591: invokevirtual #144                // Method java/util/concurrent/CountDownLatch.countDown:()V
     594: aload         13
     596: areturn

  public com.amazonaws.services.s3.transfer.MultipleFileUpload uploadDirectory(java.lang.String, java.lang.String, java.io.File, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aconst_null
       7: invokevirtual #202                // Method uploadDirectory:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;ZLcom/amazonaws/services/s3/transfer/ObjectMetadataProvider;)Lcom/amazonaws/services/s3/transfer/MultipleFileUpload;
      10: areturn

  public com.amazonaws.services.s3.transfer.MultipleFileUpload uploadDirectory(java.lang.String, java.lang.String, java.io.File, boolean, com.amazonaws.services.s3.transfer.ObjectMetadataProvider);
    Code:
       0: aload_3
       1: ifnull        18
       4: aload_3
       5: invokevirtual #120                // Method java/io/File.exists:()Z
       8: ifeq          18
      11: aload_3
      12: invokevirtual #203                // Method java/io/File.isDirectory:()Z
      15: ifne          28
      18: new           #47                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #204                // String Must provide a directory to upload
      24: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: new           #146                // class java/util/LinkedList
      31: dup
      32: invokespecial #147                // Method java/util/LinkedList."<init>":()V
      35: astore        6
      37: aload_0
      38: aload_3
      39: aload         6
      41: iload         4
      43: invokespecial #205                // Method listFiles:(Ljava/io/File;Ljava/util/List;Z)V
      46: aload_0
      47: aload_1
      48: aload_2
      49: aload_3
      50: aload         6
      52: aload         5
      54: invokevirtual #206                // Method uploadFileList:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/util/List;Lcom/amazonaws/services/s3/transfer/ObjectMetadataProvider;)Lcom/amazonaws/services/s3/transfer/MultipleFileUpload;
      57: areturn

  public com.amazonaws.services.s3.transfer.MultipleFileUpload uploadFileList(java.lang.String, java.lang.String, java.io.File, java.util.List<java.io.File>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokevirtual #206                // Method uploadFileList:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/util/List;Lcom/amazonaws/services/s3/transfer/ObjectMetadataProvider;)Lcom/amazonaws/services/s3/transfer/MultipleFileUpload;
      10: areturn

  public com.amazonaws.services.s3.transfer.MultipleFileUpload uploadFileList(java.lang.String, java.lang.String, java.io.File, java.util.List<java.io.File>, com.amazonaws.services.s3.transfer.ObjectMetadataProvider);
    Code:
       0: aload_3
       1: ifnull        18
       4: aload_3
       5: invokevirtual #120                // Method java/io/File.exists:()Z
       8: ifeq          18
      11: aload_3
      12: invokevirtual #203                // Method java/io/File.isDirectory:()Z
      15: ifne          28
      18: new           #47                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #207                // String Must provide a common base directory for uploaded files
      24: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_2
      29: ifnull        39
      32: aload_2
      33: invokevirtual #208                // Method java/lang/String.length:()I
      36: ifne          45
      39: ldc           #145                // String
      41: astore_2
      42: goto          74
      45: aload_2
      46: ldc           #55                 // String /
      48: invokevirtual #209                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      51: ifne          74
      54: new           #50                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      61: aload_2
      62: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #55                 // String /
      67: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: astore_2
      74: new           #87                 // class com/amazonaws/event/ProgressListenerChain
      77: dup
      78: iconst_0
      79: anewarray     #63                 // class com/amazonaws/event/ProgressListener
      82: invokespecial #177                // Method com/amazonaws/event/ProgressListenerChain."<init>":([Lcom/amazonaws/event/ProgressListener;)V
      85: astore        6
      87: new           #58                 // class com/amazonaws/services/s3/transfer/TransferProgress
      90: dup
      91: invokespecial #59                 // Method com/amazonaws/services/s3/transfer/TransferProgress."<init>":()V
      94: astore        7
      96: new           #178                // class com/amazonaws/services/s3/transfer/MultipleFileTransferProgressUpdatingListener
      99: dup
     100: aload         7
     102: aload         6
     104: invokespecial #179                // Method com/amazonaws/services/s3/transfer/MultipleFileTransferProgressUpdatingListener."<init>":(Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;)V
     107: astore        8
     109: new           #146                // class java/util/LinkedList
     112: dup
     113: invokespecial #147                // Method java/util/LinkedList."<init>":()V
     116: astore        9
     118: new           #210                // class com/amazonaws/services/s3/transfer/internal/MultipleFileUploadImpl
     121: dup
     122: ldc           #211                // String Uploading etc
     124: aload         7
     126: aload         6
     128: aload_2
     129: aload_1
     130: aload         9
     132: invokespecial #212                // Method com/amazonaws/services/s3/transfer/internal/MultipleFileUploadImpl."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
     135: astore        10
     137: aload         10
     139: new           #184                // class com/amazonaws/services/s3/transfer/internal/MultipleFileTransferMonitor
     142: dup
     143: aload         10
     145: aload         9
     147: invokespecial #185                // Method com/amazonaws/services/s3/transfer/internal/MultipleFileTransferMonitor."<init>":(Lcom/amazonaws/services/s3/transfer/internal/AbstractTransfer;Ljava/util/Collection;)V
     150: invokevirtual #213                // Method com/amazonaws/services/s3/transfer/internal/MultipleFileUploadImpl.setMonitor:(Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;)V
     153: new           #136                // class java/util/concurrent/CountDownLatch
     156: dup
     157: iconst_1
     158: invokespecial #137                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     161: astore        11
     163: new           #187                // class com/amazonaws/services/s3/transfer/MultipleFileTransferStateChangeListener
     166: dup
     167: aload         11
     169: aload         10
     171: invokespecial #188                // Method com/amazonaws/services/s3/transfer/MultipleFileTransferStateChangeListener."<init>":(Ljava/util/concurrent/CountDownLatch;Lcom/amazonaws/services/s3/transfer/internal/MultipleFileTransfer;)V
     174: astore        12
     176: aload         4
     178: ifnull        191
     181: aload         4
     183: invokeinterface #199,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     188: ifeq          202
     191: aload         10
     193: getstatic     #200                // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Completed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
     196: invokevirtual #214                // Method com/amazonaws/services/s3/transfer/internal/MultipleFileUploadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
     199: goto          394
     202: aload_3
     203: invokevirtual #195                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     206: invokevirtual #208                // Method java/lang/String.length:()I
     209: istore        13
     211: aload_3
     212: invokevirtual #195                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     215: getstatic     #215                // Field java/io/File.separator:Ljava/lang/String;
     218: invokevirtual #209                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     221: ifne          227
     224: iinc          13, 1
     227: lconst_0
     228: lstore        14
     230: aload         4
     232: invokeinterface #162,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     237: astore        16
     239: aload         16
     241: invokeinterface #163,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     246: ifeq          387
     249: aload         16
     251: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     256: checkcast     #189                // class java/io/File
     259: astore        17
     261: aload         17
     263: invokevirtual #216                // Method java/io/File.isFile:()Z
     266: ifeq          384
     269: lload         14
     271: aload         17
     273: invokevirtual #41                 // Method java/io/File.length:()J
     276: ladd
     277: lstore        14
     279: aload         17
     281: invokevirtual #195                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     284: iload         13
     286: invokevirtual #217                // Method java/lang/String.substring:(I)Ljava/lang/String;
     289: ldc           #218                // String \\\\
     291: ldc           #55                 // String /
     293: invokevirtual #219                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     296: astore        18
     298: new           #37                 // class com/amazonaws/services/s3/model/ObjectMetadata
     301: dup
     302: invokespecial #38                 // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
     305: astore        19
     307: aload         5
     309: ifnull        323
     312: aload         5
     314: aload         17
     316: aload         19
     318: invokeinterface #220,  3          // InterfaceMethod com/amazonaws/services/s3/transfer/ObjectMetadataProvider.provideObjectMetadata:(Ljava/io/File;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     323: aload         9
     325: aload_0
     326: new           #29                 // class com/amazonaws/services/s3/model/PutObjectRequest
     329: dup
     330: aload_1
     331: new           #50                 // class java/lang/StringBuilder
     334: dup
     335: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     338: aload_2
     339: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     342: aload         18
     344: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     350: aload         17
     352: invokespecial #32                 // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V
     355: aload         19
     357: invokevirtual #221                // Method com/amazonaws/services/s3/model/PutObjectRequest.withMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
     360: aload         8
     362: invokevirtual #222                // Method com/amazonaws/services/s3/model/PutObjectRequest.withGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/AmazonWebServiceRequest;
     365: checkcast     #29                 // class com/amazonaws/services/s3/model/PutObjectRequest
     368: aload         12
     370: aconst_null
     371: aconst_null
     372: invokespecial #33                 // Method doUpload:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/transfer/internal/S3ProgressListener;Lcom/amazonaws/services/s3/transfer/PersistableUpload;)Lcom/amazonaws/services/s3/transfer/Upload;
     375: checkcast     #69                 // class com/amazonaws/services/s3/transfer/internal/UploadImpl
     378: invokeinterface #170,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     383: pop
     384: goto          239
     387: aload         7
     389: lload         14
     391: invokevirtual #61                 // Method com/amazonaws/services/s3/transfer/TransferProgress.setTotalBytesToTransfer:(J)V
     394: aload         11
     396: invokevirtual #144                // Method java/util/concurrent/CountDownLatch.countDown:()V
     399: aload         10
     401: areturn

  private void listFiles(java.io.File, java.util.List<java.io.File>, boolean);
    Code:
       0: aload_1
       1: invokevirtual #223                // Method java/io/File.listFiles:()[Ljava/io/File;
       4: astore        4
       6: aload         4
       8: ifnull        75
      11: aload         4
      13: astore        5
      15: aload         5
      17: arraylength
      18: istore        6
      20: iconst_0
      21: istore        7
      23: iload         7
      25: iload         6
      27: if_icmpge     75
      30: aload         5
      32: iload         7
      34: aaload
      35: astore        8
      37: aload         8
      39: invokevirtual #203                // Method java/io/File.isDirectory:()Z
      42: ifeq          60
      45: iload_3
      46: ifeq          69
      49: aload_0
      50: aload         8
      52: aload_2
      53: iload_3
      54: invokespecial #205                // Method listFiles:(Ljava/io/File;Ljava/util/List;Z)V
      57: goto          69
      60: aload_2
      61: aload         8
      63: invokeinterface #170,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: iinc          7, 1
      72: goto          23
      75: return

  public void abortMultipartUploads(java.lang.String, java.util.Date) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
       4: new           #224                // class com/amazonaws/services/s3/model/ListMultipartUploadsRequest
       7: dup
       8: aload_1
       9: invokespecial #225                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest."<init>":(Ljava/lang/String;)V
      12: invokestatic  #34                 // Method appendSingleObjectUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      15: checkcast     #224                // class com/amazonaws/services/s3/model/ListMultipartUploadsRequest
      18: invokeinterface #226,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.listMultipartUploads:(Lcom/amazonaws/services/s3/model/ListMultipartUploadsRequest;)Lcom/amazonaws/services/s3/model/MultipartUploadListing;
      23: astore_3
      24: aload_3
      25: invokevirtual #227                // Method com/amazonaws/services/s3/model/MultipartUploadListing.getMultipartUploads:()Ljava/util/List;
      28: invokeinterface #162,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore        4
      35: aload         4
      37: invokeinterface #163,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          105
      45: aload         4
      47: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #228                // class com/amazonaws/services/s3/model/MultipartUpload
      55: astore        5
      57: aload         5
      59: invokevirtual #229                // Method com/amazonaws/services/s3/model/MultipartUpload.getInitiated:()Ljava/util/Date;
      62: aload_2
      63: invokevirtual #230                // Method java/util/Date.compareTo:(Ljava/util/Date;)I
      66: ifge          102
      69: aload_0
      70: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      73: new           #231                // class com/amazonaws/services/s3/model/AbortMultipartUploadRequest
      76: dup
      77: aload_1
      78: aload         5
      80: invokevirtual #232                // Method com/amazonaws/services/s3/model/MultipartUpload.getKey:()Ljava/lang/String;
      83: aload         5
      85: invokevirtual #233                // Method com/amazonaws/services/s3/model/MultipartUpload.getUploadId:()Ljava/lang/String;
      88: invokespecial #234                // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      91: invokestatic  #34                 // Method appendSingleObjectUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      94: checkcast     #231                // class com/amazonaws/services/s3/model/AbortMultipartUploadRequest
      97: invokeinterface #235,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.abortMultipartUpload:(Lcom/amazonaws/services/s3/model/AbortMultipartUploadRequest;)V
     102: goto          35
     105: new           #224                // class com/amazonaws/services/s3/model/ListMultipartUploadsRequest
     108: dup
     109: aload_1
     110: invokespecial #225                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest."<init>":(Ljava/lang/String;)V
     113: aload_3
     114: invokevirtual #236                // Method com/amazonaws/services/s3/model/MultipartUploadListing.getNextUploadIdMarker:()Ljava/lang/String;
     117: invokevirtual #237                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.withUploadIdMarker:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListMultipartUploadsRequest;
     120: aload_3
     121: invokevirtual #238                // Method com/amazonaws/services/s3/model/MultipartUploadListing.getNextKeyMarker:()Ljava/lang/String;
     124: invokevirtual #239                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.withKeyMarker:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListMultipartUploadsRequest;
     127: astore        4
     129: aload_0
     130: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     133: aload         4
     135: invokestatic  #34                 // Method appendSingleObjectUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
     138: checkcast     #224                // class com/amazonaws/services/s3/model/ListMultipartUploadsRequest
     141: invokeinterface #226,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.listMultipartUploads:(Lcom/amazonaws/services/s3/model/ListMultipartUploadsRequest;)Lcom/amazonaws/services/s3/model/MultipartUploadListing;
     146: astore_3
     147: aload_3
     148: invokevirtual #240                // Method com/amazonaws/services/s3/model/MultipartUploadListing.isTruncated:()Z
     151: ifne          24
     154: return

  public void shutdownNow();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #241                // Method shutdownNow:(Z)V
       5: return

  public void shutdownNow(boolean);
    Code:
       0: aload_0
       1: getfield      #21                 // Field shutDownThreadPools:Z
       4: ifeq          27
       7: aload_0
       8: getfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      11: invokeinterface #242,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
      16: pop
      17: aload_0
      18: getfield      #15                 // Field timedThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
      21: invokeinterface #243,  1          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdownNow:()Ljava/util/List;
      26: pop
      27: iload_1
      28: ifeq          51
      31: aload_0
      32: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      35: instanceof    #2                  // class com/amazonaws/services/s3/AmazonS3Client
      38: ifeq          51
      41: aload_0
      42: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      45: checkcast     #2                  // class com/amazonaws/services/s3/AmazonS3Client
      48: invokevirtual #244                // Method com/amazonaws/services/s3/AmazonS3Client.shutdown:()V
      51: return

  private void shutdownThreadPools();
    Code:
       0: aload_0
       1: getfield      #21                 // Field shutDownThreadPools:Z
       4: ifeq          25
       7: aload_0
       8: getfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      11: invokeinterface #245,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      16: aload_0
      17: getfield      #15                 // Field timedThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
      20: invokeinterface #246,  1          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      25: return

  public static <X extends com.amazonaws.AmazonWebServiceRequest> X appendSingleObjectUserAgent(X);
    Code:
       0: aload_0
       1: invokevirtual #247                // Method com/amazonaws/AmazonWebServiceRequest.getRequestClientOptions:()Lcom/amazonaws/RequestClientOptions;
       4: getstatic     #248                // Field USER_AGENT:Ljava/lang/String;
       7: invokevirtual #249                // Method com/amazonaws/RequestClientOptions.appendUserAgent:(Ljava/lang/String;)V
      10: aload_0
      11: areturn

  public static <X extends com.amazonaws.AmazonWebServiceRequest> X appendMultipartUserAgent(X);
    Code:
       0: aload_0
       1: invokevirtual #247                // Method com/amazonaws/AmazonWebServiceRequest.getRequestClientOptions:()Lcom/amazonaws/RequestClientOptions;
       4: getstatic     #250                // Field USER_AGENT_MULTIPART:Ljava/lang/String;
       7: invokevirtual #249                // Method com/amazonaws/RequestClientOptions.appendUserAgent:(Ljava/lang/String;)V
      10: aload_0
      11: areturn

  public com.amazonaws.services.s3.transfer.Copy copy(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: new           #251                // class com/amazonaws/services/s3/model/CopyObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #252                // Method com/amazonaws/services/s3/model/CopyObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      13: invokevirtual #253                // Method copy:(Lcom/amazonaws/services/s3/model/CopyObjectRequest;)Lcom/amazonaws/services/s3/transfer/Copy;
      16: areturn

  public com.amazonaws.services.s3.transfer.Copy copy(com.amazonaws.services.s3.model.CopyObjectRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #254                // Method copy:(Lcom/amazonaws/services/s3/model/CopyObjectRequest;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;)Lcom/amazonaws/services/s3/transfer/Copy;
       6: areturn

  public com.amazonaws.services.s3.transfer.Copy copy(com.amazonaws.services.s3.model.CopyObjectRequest, com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
       6: aload_2
       7: invokevirtual #255                // Method copy:(Lcom/amazonaws/services/s3/model/CopyObjectRequest;Lcom/amazonaws/services/s3/AmazonS3;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;)Lcom/amazonaws/services/s3/transfer/Copy;
      10: areturn

  public com.amazonaws.services.s3.transfer.Copy copy(com.amazonaws.services.s3.model.CopyObjectRequest, com.amazonaws.services.s3.AmazonS3, com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_1
       1: invokestatic  #34                 // Method appendSingleObjectUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
       4: pop
       5: aload_0
       6: aload_1
       7: invokevirtual #256                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceBucketName:()Ljava/lang/String;
      10: ldc_w         #257                // String The source bucket name must be specified when a copy request is initiated.
      13: invokespecial #81                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: invokevirtual #258                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceKey:()Ljava/lang/String;
      21: ldc_w         #259                // String The source object key must be specified when a copy request is initiated.
      24: invokespecial #81                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      27: aload_0
      28: aload_1
      29: invokevirtual #260                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationBucketName:()Ljava/lang/String;
      32: ldc_w         #261                // String The destination bucket name must be specified when a copy request is initiated.
      35: invokespecial #81                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      38: aload_0
      39: aload_1
      40: invokevirtual #262                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationKey:()Ljava/lang/String;
      43: ldc_w         #263                // String The destination object key must be specified when a copy request is initiated.
      46: invokespecial #81                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      49: aload_0
      50: aload_2
      51: ldc_w         #264                // String The srcS3 parameter is mandatory
      54: invokespecial #81                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      57: new           #50                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc_w         #265                // String Copying object from
      67: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_1
      71: invokevirtual #256                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceBucketName:()Ljava/lang/String;
      74: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #55                 // String /
      79: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #258                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceKey:()Ljava/lang/String;
      86: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc_w         #266                // String  to
      92: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_1
      96: invokevirtual #260                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationBucketName:()Ljava/lang/String;
      99: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: ldc           #55                 // String /
     104: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_1
     108: invokevirtual #262                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationKey:()Ljava/lang/String;
     111: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: astore        4
     119: new           #92                 // class com/amazonaws/services/s3/model/GetObjectMetadataRequest
     122: dup
     123: aload_1
     124: invokevirtual #256                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceBucketName:()Ljava/lang/String;
     127: aload_1
     128: invokevirtual #258                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceKey:()Ljava/lang/String;
     131: invokespecial #267                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     134: aload_1
     135: invokevirtual #268                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     138: invokevirtual #269                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest.withSSECustomerKey:(Lcom/amazonaws/services/s3/model/SSECustomerKey;)Lcom/amazonaws/services/s3/model/GetObjectMetadataRequest;
     141: astore        5
     143: aload_2
     144: aload         5
     146: invokeinterface #97,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.getObjectMetadata:(Lcom/amazonaws/services/s3/model/GetObjectMetadataRequest;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
     151: astore        6
     153: new           #58                 // class com/amazonaws/services/s3/transfer/TransferProgress
     156: dup
     157: invokespecial #59                 // Method com/amazonaws/services/s3/transfer/TransferProgress."<init>":()V
     160: astore        7
     162: aload         7
     164: aload         6
     166: invokevirtual #101                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentLength:()J
     169: invokevirtual #61                 // Method com/amazonaws/services/s3/transfer/TransferProgress.setTotalBytesToTransfer:(J)V
     172: new           #87                 // class com/amazonaws/event/ProgressListenerChain
     175: dup
     176: iconst_1
     177: anewarray     #63                 // class com/amazonaws/event/ProgressListener
     180: dup
     181: iconst_0
     182: new           #64                 // class com/amazonaws/services/s3/transfer/internal/TransferProgressUpdatingListener
     185: dup
     186: aload         7
     188: invokespecial #65                 // Method com/amazonaws/services/s3/transfer/internal/TransferProgressUpdatingListener."<init>":(Lcom/amazonaws/services/s3/transfer/TransferProgress;)V
     191: aastore
     192: invokespecial #177                // Method com/amazonaws/event/ProgressListenerChain."<init>":([Lcom/amazonaws/event/ProgressListener;)V
     195: astore        8
     197: new           #270                // class com/amazonaws/services/s3/transfer/internal/CopyImpl
     200: dup
     201: aload         4
     203: aload         7
     205: aload         8
     207: aload_3
     208: invokespecial #271                // Method com/amazonaws/services/s3/transfer/internal/CopyImpl."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;)V
     211: astore        9
     213: new           #272                // class com/amazonaws/services/s3/transfer/internal/CopyCallable
     216: dup
     217: aload_0
     218: aload_0
     219: getfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     222: aload         9
     224: aload_1
     225: aload         6
     227: aload         8
     229: invokespecial #273                // Method com/amazonaws/services/s3/transfer/internal/CopyCallable."<init>":(Lcom/amazonaws/services/s3/transfer/TransferManager;Ljava/util/concurrent/ExecutorService;Lcom/amazonaws/services/s3/transfer/internal/CopyImpl;Lcom/amazonaws/services/s3/model/CopyObjectRequest;Lcom/amazonaws/services/s3/model/ObjectMetadata;Lcom/amazonaws/event/ProgressListenerChain;)V
     232: astore        10
     234: aload_0
     235: aload         9
     237: aload_0
     238: getfield      #17                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     241: aload         10
     243: aload_1
     244: aload         8
     246: invokestatic  #274                // Method com/amazonaws/services/s3/transfer/internal/CopyMonitor.create:(Lcom/amazonaws/services/s3/transfer/TransferManager;Lcom/amazonaws/services/s3/transfer/internal/CopyImpl;Ljava/util/concurrent/ExecutorService;Lcom/amazonaws/services/s3/transfer/internal/CopyCallable;Lcom/amazonaws/services/s3/model/CopyObjectRequest;Lcom/amazonaws/event/ProgressListenerChain;)Lcom/amazonaws/services/s3/transfer/internal/CopyMonitor;
     249: astore        11
     251: aload         9
     253: aload         11
     255: invokevirtual #275                // Method com/amazonaws/services/s3/transfer/internal/CopyImpl.setMonitor:(Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;)V
     258: aload         9
     260: areturn

  public com.amazonaws.services.s3.transfer.Upload resumeUpload(com.amazonaws.services.s3.transfer.PersistableUpload);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #276                // String PauseUpload is mandatory to resume a upload.
       5: invokespecial #81                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: getfield      #20                 // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      12: aload_1
      13: invokevirtual #277                // Method com/amazonaws/services/s3/transfer/PersistableUpload.getPartSize:()J
      16: invokevirtual #278                // Method com/amazonaws/services/s3/transfer/TransferManagerConfiguration.setMinimumUploadPartSize:(J)V
      19: aload_0
      20: getfield      #20                 // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      23: aload_1
      24: invokevirtual #279                // Method com/amazonaws/services/s3/transfer/PersistableUpload.getMutlipartUploadThreshold:()J
      27: invokevirtual #280                // Method com/amazonaws/services/s3/transfer/TransferManagerConfiguration.setMultipartUploadThreshold:(J)V
      30: aload_0
      31: new           #29                 // class com/amazonaws/services/s3/model/PutObjectRequest
      34: dup
      35: aload_1
      36: invokevirtual #281                // Method com/amazonaws/services/s3/transfer/PersistableUpload.getBucketName:()Ljava/lang/String;
      39: aload_1
      40: invokevirtual #282                // Method com/amazonaws/services/s3/transfer/PersistableUpload.getKey:()Ljava/lang/String;
      43: new           #189                // class java/io/File
      46: dup
      47: aload_1
      48: invokevirtual #283                // Method com/amazonaws/services/s3/transfer/PersistableUpload.getFile:()Ljava/lang/String;
      51: invokespecial #284                // Method java/io/File."<init>":(Ljava/lang/String;)V
      54: invokespecial #32                 // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V
      57: aconst_null
      58: aconst_null
      59: aload_1
      60: invokespecial #33                 // Method doUpload:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/transfer/internal/S3ProgressListener;Lcom/amazonaws/services/s3/transfer/PersistableUpload;)Lcom/amazonaws/services/s3/transfer/Upload;
      63: areturn

  public com.amazonaws.services.s3.transfer.Download resumeDownload(com.amazonaws.services.s3.transfer.PersistableDownload);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #285                // String PausedDownload is mandatory to resume a download.
       5: invokespecial #81                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: new           #76                 // class com/amazonaws/services/s3/model/GetObjectRequest
      11: dup
      12: aload_1
      13: invokevirtual #286                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getBucketName:()Ljava/lang/String;
      16: aload_1
      17: invokevirtual #287                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getKey:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #288                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getVersionId:()Ljava/lang/String;
      24: invokespecial #289                // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: astore_2
      28: aload_1
      29: invokevirtual #290                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getRange:()[J
      32: ifnull        59
      35: aload_1
      36: invokevirtual #290                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getRange:()[J
      39: arraylength
      40: iconst_2
      41: if_icmpne     59
      44: aload_1
      45: invokevirtual #290                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getRange:()[J
      48: astore_3
      49: aload_2
      50: aload_3
      51: iconst_0
      52: laload
      53: aload_3
      54: iconst_1
      55: laload
      56: invokevirtual #121                // Method com/amazonaws/services/s3/model/GetObjectRequest.setRange:(JJ)V
      59: aload_2
      60: aload_1
      61: invokevirtual #291                // Method com/amazonaws/services/s3/transfer/PersistableDownload.isRequesterPays:()Z
      64: invokevirtual #292                // Method com/amazonaws/services/s3/model/GetObjectRequest.setRequesterPays:(Z)V
      67: aload_2
      68: aload_1
      69: invokevirtual #293                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getResponseHeaders:()Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;
      72: invokevirtual #294                // Method com/amazonaws/services/s3/model/GetObjectRequest.setResponseHeaders:(Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;)V
      75: aload_0
      76: aload_2
      77: new           #189                // class java/io/File
      80: dup
      81: aload_1
      82: invokevirtual #295                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getFile:()Ljava/lang/String;
      85: invokespecial #284                // Method java/io/File."<init>":(Ljava/lang/String;)V
      88: aconst_null
      89: aconst_null
      90: iconst_1
      91: lconst_0
      92: aload_1
      93: invokevirtual #296                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getLastFullyDownloadedPartNumber:()Ljava/lang/Integer;
      96: aload_1
      97: invokevirtual #297                // Method com/amazonaws/services/s3/transfer/PersistableDownload.getlastModifiedTime:()Ljava/lang/Long;
     100: invokevirtual #298                // Method java/lang/Long.longValue:()J
     103: invokespecial #79                 // Method doDownload:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/transfer/internal/S3ProgressListener;ZJLjava/lang/Integer;J)Lcom/amazonaws/services/s3/transfer/Download;
     106: areturn

  private void assertParameterNotNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: new           #47                 // class java/lang/IllegalArgumentException
       7: dup
       8: aload_2
       9: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      12: athrow
      13: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #299                // Method shutdownThreadPools:()V
       4: return

  private void checkMutability();
    Code:
       0: aload_0
       1: getfield      #22                 // Field isImmutable:Z
       4: ifeq          18
       7: new           #300                // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc_w         #301                // String TransferManager is immutable when created with the builder.
      14: invokespecial #302                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: return

  static {};
    Code:
       0: ldc           #156                // class com/amazonaws/services/s3/transfer/TransferManager
       2: invokestatic  #303                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #124                // Field log:Lorg/apache/commons/logging/Log;
       8: new           #50                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #156                // class com/amazonaws/services/s3/transfer/TransferManager
      17: invokevirtual #304                // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #55                 // String /
      25: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokestatic  #305                // Method com/amazonaws/util/VersionInfoUtils.getVersion:()Ljava/lang/String;
      31: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: putstatic     #248                // Field USER_AGENT:Ljava/lang/String;
      40: new           #50                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #156                // class com/amazonaws/services/s3/transfer/TransferManager
      49: invokevirtual #304                // Method java/lang/Class.getName:()Ljava/lang/String;
      52: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc_w         #306                // String _multipart/
      58: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokestatic  #305                // Method com/amazonaws/util/VersionInfoUtils.getVersion:()Ljava/lang/String;
      64: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: putstatic     #250                // Field USER_AGENT_MULTIPART:Ljava/lang/String;
      73: new           #307                // class com/amazonaws/services/s3/transfer/TransferManager$1
      76: dup
      77: invokespecial #308                // Method com/amazonaws/services/s3/transfer/TransferManager$1."<init>":()V
      80: putstatic     #13                 // Field daemonThreadFactory:Ljava/util/concurrent/ThreadFactory;
      83: return
}
