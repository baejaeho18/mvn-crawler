Compiled from "CipherLite.java"
class com.amazonaws.services.s3.internal.crypto.CipherLite {
  static final com.amazonaws.services.s3.internal.crypto.CipherLite Null;

  private final javax.crypto.Cipher cipher;

  private final com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme scheme;

  private final javax.crypto.SecretKey secreteKey;

  private final int cipherMode;

  private com.amazonaws.services.s3.internal.crypto.CipherLite();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class javax/crypto/NullCipher
       8: dup
       9: invokespecial #4                  // Method javax/crypto/NullCipher."<init>":()V
      12: putfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
      15: aload_0
      16: aconst_null
      17: putfield      #6                  // Field scheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      20: aload_0
      21: aconst_null
      22: putfield      #7                  // Field secreteKey:Ljavax/crypto/SecretKey;
      25: aload_0
      26: iconst_m1
      27: putfield      #8                  // Field cipherMode:I
      30: return

  com.amazonaws.services.s3.internal.crypto.CipherLite(javax.crypto.Cipher, com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme, javax.crypto.SecretKey, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field scheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      14: aload_0
      15: aload_3
      16: putfield      #7                  // Field secreteKey:Ljavax/crypto/SecretKey;
      19: aload_0
      20: iload         4
      22: putfield      #8                  // Field cipherMode:I
      25: return

  com.amazonaws.services.s3.internal.crypto.CipherLite recreate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field scheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       4: aload_0
       5: getfield      #7                  // Field secreteKey:Ljavax/crypto/SecretKey;
       8: aload_0
       9: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
      12: invokevirtual #9                  // Method javax/crypto/Cipher.getIV:()[B
      15: aload_0
      16: getfield      #8                  // Field cipherMode:I
      19: aload_0
      20: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
      23: invokevirtual #10                 // Method javax/crypto/Cipher.getProvider:()Ljava/security/Provider;
      26: invokevirtual #11                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.createCipherLite:(Ljavax/crypto/SecretKey;[BILjava/security/Provider;)Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      29: areturn

  com.amazonaws.services.s3.internal.crypto.CipherLite createUsingIV(byte[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field scheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       4: aload_0
       5: getfield      #7                  // Field secreteKey:Ljavax/crypto/SecretKey;
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field cipherMode:I
      13: aload_0
      14: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
      17: invokevirtual #10                 // Method javax/crypto/Cipher.getProvider:()Ljava/security/Provider;
      20: invokevirtual #11                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.createCipherLite:(Ljavax/crypto/SecretKey;[BILjava/security/Provider;)Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      23: areturn

  com.amazonaws.services.s3.internal.crypto.CipherLite createAuxiliary(long) throws java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, javax.crypto.NoSuchPaddingException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field scheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       4: aload_0
       5: getfield      #7                  // Field secreteKey:Ljavax/crypto/SecretKey;
       8: aload_0
       9: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
      12: invokevirtual #9                  // Method javax/crypto/Cipher.getIV:()[B
      15: aload_0
      16: getfield      #8                  // Field cipherMode:I
      19: aload_0
      20: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
      23: invokevirtual #10                 // Method javax/crypto/Cipher.getProvider:()Ljava/security/Provider;
      26: lload_1
      27: invokevirtual #12                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.createAuxillaryCipher:(Ljavax/crypto/SecretKey;[BILjava/security/Provider;J)Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      30: areturn

  com.amazonaws.services.s3.internal.crypto.CipherLite createInverse() throws java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, javax.crypto.NoSuchPaddingException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field cipherMode:I
       4: iconst_2
       5: if_icmpne     13
       8: iconst_1
       9: istore_1
      10: goto          34
      13: aload_0
      14: getfield      #8                  // Field cipherMode:I
      17: iconst_1
      18: if_icmpne     26
      21: iconst_2
      22: istore_1
      23: goto          34
      26: new           #14                 // class java/lang/UnsupportedOperationException
      29: dup
      30: invokespecial #15                 // Method java/lang/UnsupportedOperationException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #6                  // Field scheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      38: aload_0
      39: getfield      #7                  // Field secreteKey:Ljavax/crypto/SecretKey;
      42: aload_0
      43: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
      46: invokevirtual #9                  // Method javax/crypto/Cipher.getIV:()[B
      49: iload_1
      50: aload_0
      51: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
      54: invokevirtual #10                 // Method javax/crypto/Cipher.getProvider:()Ljava/security/Provider;
      57: invokevirtual #11                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.createCipherLite:(Ljavax/crypto/SecretKey;[BILjava/security/Provider;)Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      60: areturn

  byte[] doFinal() throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: invokevirtual #16                 // Method javax/crypto/Cipher.doFinal:()[B
       7: areturn

  byte[] doFinal(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: aload_1
       5: invokevirtual #17                 // Method javax/crypto/Cipher.doFinal:([B)[B
       8: areturn

  byte[] doFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #18                 // Method javax/crypto/Cipher.doFinal:([BII)[B
      10: areturn

  byte[] update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #19                 // Method javax/crypto/Cipher.update:([BII)[B
      10: areturn

  final java.lang.String getCipherAlgorithm();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: invokevirtual #20                 // Method javax/crypto/Cipher.getAlgorithm:()Ljava/lang/String;
       7: areturn

  final java.security.Provider getCipherProvider();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: invokevirtual #10                 // Method javax/crypto/Cipher.getProvider:()Ljava/security/Provider;
       7: areturn

  final java.lang.String getSecretKeyAlgorithm();
    Code:
       0: aload_0
       1: getfield      #7                  // Field secreteKey:Ljavax/crypto/SecretKey;
       4: invokeinterface #21,  1           // InterfaceMethod javax/crypto/SecretKey.getAlgorithm:()Ljava/lang/String;
       9: areturn

  final javax.crypto.Cipher getCipher();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: areturn

  final com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme getContentCryptoScheme();
    Code:
       0: aload_0
       1: getfield      #6                  // Field scheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       4: areturn

  final byte[] getIV();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: invokevirtual #9                  // Method javax/crypto/Cipher.getIV:()[B
       7: areturn

  final int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: invokevirtual #22                 // Method javax/crypto/Cipher.getBlockSize:()I
       7: ireturn

  final int getCipherMode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cipherMode:I
       4: ireturn

  boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  long mark();
    Code:
       0: ldc2_w        #23                 // long -1l
       3: lreturn

  void reset();
    Code:
       0: new           #25                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #26                 // String mark/reset not supported
       6: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  int getOutputSize(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Ljavax/crypto/Cipher;
       4: iload_1
       5: invokevirtual #28                 // Method javax/crypto/Cipher.getOutputSize:(I)I
       8: ireturn

  com.amazonaws.services.s3.internal.crypto.CipherLite(com.amazonaws.services.s3.internal.crypto.CipherLite$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static {};
    Code:
       0: new           #29                 // class com/amazonaws/services/s3/internal/crypto/CipherLite$1
       3: dup
       4: invokespecial #30                 // Method com/amazonaws/services/s3/internal/crypto/CipherLite$1."<init>":()V
       7: putstatic     #31                 // Field Null:Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      10: return
}
