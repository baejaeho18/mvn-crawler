Compiled from "InitiateMultipartUploadRequest.java"
public class com.amazonaws.services.s3.model.InitiateMultipartUploadRequest extends com.amazonaws.AmazonWebServiceRequest implements com.amazonaws.services.s3.model.SSECustomerKeyProvider,com.amazonaws.services.s3.model.SSEAwsKeyManagementParamsProvider,java.io.Serializable {
  private java.lang.String bucketName;

  private java.lang.String key;

  public com.amazonaws.services.s3.model.ObjectMetadata objectMetadata;

  private com.amazonaws.services.s3.model.CannedAccessControlList cannedACL;

  private com.amazonaws.services.s3.model.AccessControlList accessControlList;

  private com.amazonaws.services.s3.model.StorageClass storageClass;

  private java.lang.String redirectLocation;

  private com.amazonaws.services.s3.model.SSECustomerKey sseCustomerKey;

  private com.amazonaws.services.s3.model.SSEAwsKeyManagementParams sseAwsKeyManagementParams;

  private boolean isRequesterPays;

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field bucketName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field key:Ljava/lang/String;
      14: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest(java.lang.String, java.lang.String, com.amazonaws.services.s3.model.ObjectMetadata);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field bucketName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field key:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field objectMetadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
      19: return

  public java.lang.String getBucketName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bucketName:Ljava/lang/String;
       4: areturn

  public void setBucketName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field bucketName:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withBucketName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field bucketName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #3                  // Field key:Ljava/lang/String;
       4: areturn

  public void setKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field key:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field key:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.CannedAccessControlList getCannedACL();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cannedACL:Lcom/amazonaws/services/s3/model/CannedAccessControlList;
       4: areturn

  public void setCannedACL(com.amazonaws.services.s3.model.CannedAccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field cannedACL:Lcom/amazonaws/services/s3/model/CannedAccessControlList;
       5: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withCannedACL(com.amazonaws.services.s3.model.CannedAccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field cannedACL:Lcom/amazonaws/services/s3/model/CannedAccessControlList;
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.AccessControlList getAccessControlList();
    Code:
       0: aload_0
       1: getfield      #6                  // Field accessControlList:Lcom/amazonaws/services/s3/model/AccessControlList;
       4: areturn

  public void setAccessControlList(com.amazonaws.services.s3.model.AccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field accessControlList:Lcom/amazonaws/services/s3/model/AccessControlList;
       5: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withAccessControlList(com.amazonaws.services.s3.model.AccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setAccessControlList:(Lcom/amazonaws/services/s3/model/AccessControlList;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.StorageClass getStorageClass();
    Code:
       0: aload_0
       1: getfield      #8                  // Field storageClass:Lcom/amazonaws/services/s3/model/StorageClass;
       4: areturn

  public void setStorageClass(com.amazonaws.services.s3.model.StorageClass);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field storageClass:Lcom/amazonaws/services/s3/model/StorageClass;
       5: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withStorageClass(com.amazonaws.services.s3.model.StorageClass);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field storageClass:Lcom/amazonaws/services/s3/model/StorageClass;
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withStorageClass(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: aload_1
       6: invokestatic  #9                  // Method com/amazonaws/services/s3/model/StorageClass.fromValue:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/StorageClass;
       9: putfield      #8                  // Field storageClass:Lcom/amazonaws/services/s3/model/StorageClass;
      12: goto          20
      15: aload_0
      16: aconst_null
      17: putfield      #8                  // Field storageClass:Lcom/amazonaws/services/s3/model/StorageClass;
      20: aload_0
      21: areturn

  public com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata();
    Code:
       0: aload_0
       1: getfield      #4                  // Field objectMetadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
       4: areturn

  public void setObjectMetadata(com.amazonaws.services.s3.model.ObjectMetadata);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field objectMetadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
       5: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withObjectMetadata(com.amazonaws.services.s3.model.ObjectMetadata);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method setObjectMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
       5: aload_0
       6: areturn

  public void setRedirectLocation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field redirectLocation:Ljava/lang/String;
       5: return

  public java.lang.String getRedirectLocation();
    Code:
       0: aload_0
       1: getfield      #11                 // Field redirectLocation:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withRedirectLocation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field redirectLocation:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.SSECustomerKey getSSECustomerKey();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sseCustomerKey:Lcom/amazonaws/services/s3/model/SSECustomerKey;
       4: areturn

  public void setSSECustomerKey(com.amazonaws.services.s3.model.SSECustomerKey);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_0
       5: getfield      #13                 // Field sseAwsKeyManagementParams:Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
       8: ifnull        21
      11: new           #14                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #15                 // String Either SSECustomerKey or SSEAwsKeyManagementParams must not be set at the same time.
      17: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #12                 // Field sseCustomerKey:Lcom/amazonaws/services/s3/model/SSECustomerKey;
      26: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withSSECustomerKey(com.amazonaws.services.s3.model.SSECustomerKey);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setSSECustomerKey:(Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.SSEAwsKeyManagementParams getSSEAwsKeyManagementParams();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sseAwsKeyManagementParams:Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
       4: areturn

  public void setSSEAwsKeyManagementParams(com.amazonaws.services.s3.model.SSEAwsKeyManagementParams);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_0
       5: getfield      #12                 // Field sseCustomerKey:Lcom/amazonaws/services/s3/model/SSECustomerKey;
       8: ifnull        21
      11: new           #14                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #15                 // String Either SSECustomerKey or SSEAwsKeyManagementParams must not be set at the same time.
      17: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #13                 // Field sseAwsKeyManagementParams:Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
      26: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withSSEAwsKeyManagementParams(com.amazonaws.services.s3.model.SSEAwsKeyManagementParams);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method setSSEAwsKeyManagementParams:(Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;)V
       5: aload_0
       6: areturn

  public boolean isRequesterPays();
    Code:
       0: aload_0
       1: getfield      #19                 // Field isRequesterPays:Z
       4: ireturn

  public void setRequesterPays(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field isRequesterPays:Z
       5: return

  public com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withRequesterPays(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #20                 // Method setRequesterPays:(Z)V
       5: aload_0
       6: areturn
}
