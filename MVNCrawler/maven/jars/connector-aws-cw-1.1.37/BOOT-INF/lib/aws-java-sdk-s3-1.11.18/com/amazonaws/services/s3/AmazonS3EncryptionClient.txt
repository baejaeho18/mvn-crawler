Compiled from "AmazonS3EncryptionClient.java"
public class com.amazonaws.services.s3.AmazonS3EncryptionClient extends com.amazonaws.services.s3.AmazonS3Client implements com.amazonaws.services.s3.AmazonS3Encryption {
  public static final java.lang.String USER_AGENT;

  private final com.amazonaws.services.s3.internal.crypto.S3CryptoModule<?> crypto;

  private final com.amazonaws.services.kms.AWSKMSClient kms;

  private final boolean isKMSClientInternal;

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.services.s3.model.EncryptionMaterials);
    Code:
       0: aload_0
       1: new           #9                  // class com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider
       4: dup
       5: aload_1
       6: invokespecial #10                 // Method com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider."<init>":(Lcom/amazonaws/services/s3/model/EncryptionMaterials;)V
       9: invokespecial #11                 // Method "<init>":(Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;)V
      12: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.services.s3.model.EncryptionMaterialsProvider);
    Code:
       0: aload_0
       1: new           #12                 // class com/amazonaws/internal/StaticCredentialsProvider
       4: dup
       5: new           #13                 // class com/amazonaws/auth/AnonymousAWSCredentials
       8: dup
       9: invokespecial #14                 // Method com/amazonaws/auth/AnonymousAWSCredentials."<init>":()V
      12: invokespecial #15                 // Method com/amazonaws/internal/StaticCredentialsProvider."<init>":(Lcom/amazonaws/auth/AWSCredentials;)V
      15: aload_1
      16: getstatic     #16                 // Field configFactory:Lcom/amazonaws/services/s3/AmazonS3ClientConfigurationFactory;
      19: invokevirtual #17                 // Method com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
      22: new           #18                 // class com/amazonaws/services/s3/model/CryptoConfiguration
      25: dup
      26: invokespecial #19                 // Method com/amazonaws/services/s3/model/CryptoConfiguration."<init>":()V
      29: invokespecial #20                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      32: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.services.s3.model.EncryptionMaterials, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: new           #9                  // class com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider
       4: dup
       5: aload_1
       6: invokespecial #10                 // Method com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider."<init>":(Lcom/amazonaws/services/s3/model/EncryptionMaterials;)V
       9: aload_2
      10: invokespecial #21                 // Method "<init>":(Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      13: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: new           #12                 // class com/amazonaws/internal/StaticCredentialsProvider
       4: dup
       5: new           #13                 // class com/amazonaws/auth/AnonymousAWSCredentials
       8: dup
       9: invokespecial #14                 // Method com/amazonaws/auth/AnonymousAWSCredentials."<init>":()V
      12: invokespecial #15                 // Method com/amazonaws/internal/StaticCredentialsProvider."<init>":(Lcom/amazonaws/auth/AWSCredentials;)V
      15: aload_1
      16: getstatic     #16                 // Field configFactory:Lcom/amazonaws/services/s3/AmazonS3ClientConfigurationFactory;
      19: invokevirtual #17                 // Method com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
      22: aload_2
      23: invokespecial #20                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      26: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentials, com.amazonaws.services.s3.model.EncryptionMaterials);
    Code:
       0: aload_0
       1: aload_1
       2: new           #9                  // class com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider
       5: dup
       6: aload_2
       7: invokespecial #10                 // Method com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider."<init>":(Lcom/amazonaws/services/s3/model/EncryptionMaterials;)V
      10: invokespecial #22                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;)V
      13: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentials, com.amazonaws.services.s3.model.EncryptionMaterialsProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #16                 // Field configFactory:Lcom/amazonaws/services/s3/AmazonS3ClientConfigurationFactory;
       6: invokevirtual #17                 // Method com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       9: new           #18                 // class com/amazonaws/services/s3/model/CryptoConfiguration
      12: dup
      13: invokespecial #19                 // Method com/amazonaws/services/s3/model/CryptoConfiguration."<init>":()V
      16: invokespecial #23                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      19: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.services.s3.model.EncryptionMaterialsProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #16                 // Field configFactory:Lcom/amazonaws/services/s3/AmazonS3ClientConfigurationFactory;
       6: invokevirtual #17                 // Method com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       9: new           #18                 // class com/amazonaws/services/s3/model/CryptoConfiguration
      12: dup
      13: invokespecial #19                 // Method com/amazonaws/services/s3/model/CryptoConfiguration."<init>":()V
      16: invokespecial #20                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      19: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentials, com.amazonaws.services.s3.model.EncryptionMaterials, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: new           #9                  // class com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider
       5: dup
       6: aload_2
       7: invokespecial #10                 // Method com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider."<init>":(Lcom/amazonaws/services/s3/model/EncryptionMaterials;)V
      10: aload_3
      11: invokespecial #24                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      14: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentials, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #16                 // Field configFactory:Lcom/amazonaws/services/s3/AmazonS3ClientConfigurationFactory;
       6: invokevirtual #17                 // Method com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       9: aload_3
      10: invokespecial #23                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      13: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #16                 // Field configFactory:Lcom/amazonaws/services/s3/AmazonS3ClientConfigurationFactory;
       6: invokevirtual #17                 // Method com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       9: aload_3
      10: invokespecial #20                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      13: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentials, com.amazonaws.services.s3.model.EncryptionMaterials, com.amazonaws.ClientConfiguration, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: new           #9                  // class com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider
       5: dup
       6: aload_2
       7: invokespecial #10                 // Method com/amazonaws/services/s3/model/StaticEncryptionMaterialsProvider."<init>":(Lcom/amazonaws/services/s3/model/EncryptionMaterials;)V
      10: aload_3
      11: aload         4
      13: invokespecial #23                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      16: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentials, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.ClientConfiguration, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: new           #12                 // class com/amazonaws/internal/StaticCredentialsProvider
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method com/amazonaws/internal/StaticCredentialsProvider."<init>":(Lcom/amazonaws/auth/AWSCredentials;)V
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokespecial #20                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      16: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.ClientConfiguration, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #25                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;)V
      10: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.ClientConfiguration, com.amazonaws.services.s3.model.CryptoConfiguration, com.amazonaws.metrics.RequestMetricCollector);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: invokespecial #26                 // Method "<init>":(Lcom/amazonaws/services/kms/AWSKMSClient;Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;)V
      12: return

  public com.amazonaws.services.s3.AmazonS3EncryptionClient(com.amazonaws.services.kms.AWSKMSClient, com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.ClientConfiguration, com.amazonaws.services.s3.model.CryptoConfiguration, com.amazonaws.metrics.RequestMetricCollector);
    Code:
       0: aload_0
       1: aload_2
       2: aload         4
       4: aload         6
       6: invokespecial #27                 // Method com/amazonaws/services/s3/AmazonS3Client."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;)V
       9: aload_0
      10: aload_3
      11: ldc           #28                 // String EncryptionMaterialsProvider parameter must not be null.
      13: invokespecial #29                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload         5
      19: ldc           #30                 // String CryptoConfiguration parameter must not be null.
      21: invokespecial #29                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      24: aload_0
      25: aload_1
      26: ifnonnull     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: putfield      #31                 // Field isKMSClientInternal:Z
      37: aload_0
      38: aload_0
      39: getfield      #31                 // Field isKMSClientInternal:Z
      42: ifeq          59
      45: aload_0
      46: aload_2
      47: aload         4
      49: aload         5
      51: aload         6
      53: invokespecial #32                 // Method newAWSKMSClient:(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/services/s3/model/CryptoConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/services/kms/AWSKMSClient;
      56: goto          60
      59: aload_1
      60: putfield      #33                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      63: aload_0
      64: new           #34                 // class com/amazonaws/services/s3/internal/crypto/CryptoModuleDispatcher
      67: dup
      68: aload_0
      69: getfield      #33                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      72: new           #35                 // class com/amazonaws/services/s3/AmazonS3EncryptionClient$S3DirectImpl
      75: dup
      76: aload_0
      77: aconst_null
      78: invokespecial #36                 // Method com/amazonaws/services/s3/AmazonS3EncryptionClient$S3DirectImpl."<init>":(Lcom/amazonaws/services/s3/AmazonS3EncryptionClient;Lcom/amazonaws/services/s3/AmazonS3EncryptionClient$1;)V
      81: aload_2
      82: aload_3
      83: aload         5
      85: invokespecial #37                 // Method com/amazonaws/services/s3/internal/crypto/CryptoModuleDispatcher."<init>":(Lcom/amazonaws/services/kms/AWSKMSClient;Lcom/amazonaws/services/s3/internal/S3Direct;Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      88: putfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
      91: return

  private com.amazonaws.services.kms.AWSKMSClient newAWSKMSClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration, com.amazonaws.services.s3.model.CryptoConfiguration, com.amazonaws.metrics.RequestMetricCollector);
    Code:
       0: new           #39                 // class com/amazonaws/services/kms/AWSKMSClient
       3: dup
       4: aload_1
       5: aload_2
       6: aload         4
       8: invokespecial #40                 // Method com/amazonaws/services/kms/AWSKMSClient."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;)V
      11: astore        5
      13: aload_3
      14: invokevirtual #41                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getAwsKmsRegion:()Lcom/amazonaws/regions/Region;
      17: astore        6
      19: aload         6
      21: ifnull        31
      24: aload         5
      26: aload         6
      28: invokevirtual #42                 // Method com/amazonaws/services/kms/AWSKMSClient.setRegion:(Lcom/amazonaws/regions/Region;)V
      31: aload         5
      33: areturn

  private void assertParameterNotNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: new           #43                 // class java/lang/IllegalArgumentException
       7: dup
       8: aload_2
       9: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      12: athrow
      13: return

  public com.amazonaws.services.s3.model.PutObjectResult putObject(com.amazonaws.services.s3.model.PutObjectRequest);
    Code:
       0: aload_0
       1: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
       4: aload_1
       5: invokevirtual #45                 // Method com/amazonaws/services/s3/model/PutObjectRequest.clone:()Lcom/amazonaws/services/s3/model/PutObjectRequest;
       8: invokevirtual #46                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.putObjectSecurely:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      11: areturn

  public com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest);
    Code:
       0: aload_0
       1: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
       4: aload_1
       5: invokevirtual #47                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.getObjectSecurely:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)Lcom/amazonaws/services/s3/model/S3Object;
       8: areturn

  public com.amazonaws.services.s3.model.ObjectMetadata getObject(com.amazonaws.services.s3.model.GetObjectRequest, java.io.File);
    Code:
       0: aload_0
       1: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
       4: aload_1
       5: aload_2
       6: invokevirtual #48                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.getObjectSecurely:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
       9: areturn

  public void deleteObject(com.amazonaws.services.s3.model.DeleteObjectRequest);
    Code:
       0: aload_1
       1: invokevirtual #49                 // Method com/amazonaws/services/s3/model/DeleteObjectRequest.getRequestClientOptions:()Lcom/amazonaws/RequestClientOptions;
       4: getstatic     #50                 // Field USER_AGENT:Ljava/lang/String;
       7: invokevirtual #51                 // Method com/amazonaws/RequestClientOptions.appendUserAgent:(Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokespecial #52                 // Method com/amazonaws/services/s3/AmazonS3Client.deleteObject:(Lcom/amazonaws/services/s3/model/DeleteObjectRequest;)V
      15: new           #53                 // class com/amazonaws/services/s3/model/S3ObjectId
      18: dup
      19: aload_1
      20: invokevirtual #54                 // Method com/amazonaws/services/s3/model/DeleteObjectRequest.getBucketName:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #55                 // Method com/amazonaws/services/s3/model/DeleteObjectRequest.getKey:()Ljava/lang/String;
      27: invokespecial #56                 // Method com/amazonaws/services/s3/model/S3ObjectId."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      30: invokevirtual #57                 // Method com/amazonaws/services/s3/model/S3ObjectId.instructionFileId:()Lcom/amazonaws/services/s3/model/InstructionFileId;
      33: astore_2
      34: aload_1
      35: invokevirtual #58                 // Method com/amazonaws/services/s3/model/DeleteObjectRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
      38: checkcast     #59                 // class com/amazonaws/services/s3/model/DeleteObjectRequest
      41: astore_3
      42: aload_3
      43: aload_2
      44: invokevirtual #60                 // Method com/amazonaws/services/s3/model/InstructionFileId.getBucket:()Ljava/lang/String;
      47: invokevirtual #61                 // Method com/amazonaws/services/s3/model/DeleteObjectRequest.withBucketName:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/DeleteObjectRequest;
      50: aload_2
      51: invokevirtual #62                 // Method com/amazonaws/services/s3/model/InstructionFileId.getKey:()Ljava/lang/String;
      54: invokevirtual #63                 // Method com/amazonaws/services/s3/model/DeleteObjectRequest.withKey:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/DeleteObjectRequest;
      57: pop
      58: aload_0
      59: aload_3
      60: invokespecial #52                 // Method com/amazonaws/services/s3/AmazonS3Client.deleteObject:(Lcom/amazonaws/services/s3/model/DeleteObjectRequest;)V
      63: return

  public com.amazonaws.services.s3.model.CompleteMultipartUploadResult completeMultipartUpload(com.amazonaws.services.s3.model.CompleteMultipartUploadRequest);
    Code:
       0: aload_0
       1: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
       4: aload_1
       5: invokevirtual #64                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.completeMultipartUploadSecurely:(Lcom/amazonaws/services/s3/model/CompleteMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/CompleteMultipartUploadResult;
       8: areturn

  public com.amazonaws.services.s3.model.InitiateMultipartUploadResult initiateMultipartUpload(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_1
       3: instanceof    #65                 // class com/amazonaws/services/s3/model/EncryptedInitiateMultipartUploadRequest
       6: ifeq          19
       9: aload_1
      10: checkcast     #65                 // class com/amazonaws/services/s3/model/EncryptedInitiateMultipartUploadRequest
      13: astore_3
      14: aload_3
      15: invokevirtual #66                 // Method com/amazonaws/services/s3/model/EncryptedInitiateMultipartUploadRequest.isCreateEncryptionMaterial:()Z
      18: istore_2
      19: iload_2
      20: ifeq          34
      23: aload_0
      24: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
      27: aload_1
      28: invokevirtual #67                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.initiateMultipartUploadSecurely:(Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadResult;
      31: goto          39
      34: aload_0
      35: aload_1
      36: invokespecial #4                  // Method com/amazonaws/services/s3/AmazonS3Client.initiateMultipartUpload:(Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadResult;
      39: areturn

  public com.amazonaws.services.s3.model.UploadPartResult uploadPart(com.amazonaws.services.s3.model.UploadPartRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
       4: aload_1
       5: invokevirtual #68                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.uploadPartSecurely:(Lcom/amazonaws/services/s3/model/UploadPartRequest;)Lcom/amazonaws/services/s3/model/UploadPartResult;
       8: areturn

  public com.amazonaws.services.s3.model.CopyPartResult copyPart(com.amazonaws.services.s3.model.CopyPartRequest);
    Code:
       0: aload_0
       1: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
       4: aload_1
       5: invokevirtual #69                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.copyPartSecurely:(Lcom/amazonaws/services/s3/model/CopyPartRequest;)Lcom/amazonaws/services/s3/model/CopyPartResult;
       8: areturn

  public void abortMultipartUpload(com.amazonaws.services.s3.model.AbortMultipartUploadRequest);
    Code:
       0: aload_0
       1: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
       4: aload_1
       5: invokevirtual #70                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.abortMultipartUploadSecurely:(Lcom/amazonaws/services/s3/model/AbortMultipartUploadRequest;)V
       8: return

  public com.amazonaws.services.s3.model.PutObjectResult putInstructionFile(com.amazonaws.services.s3.model.PutInstructionFileRequest);
    Code:
       0: aload_0
       1: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
       4: aload_1
       5: invokevirtual #71                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.putInstructionFileSecurely:(Lcom/amazonaws/services/s3/model/PutInstructionFileRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
       8: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: invokespecial #72                 // Method com/amazonaws/services/s3/AmazonS3Client.shutdown:()V
       4: aload_0
       5: getfield      #31                 // Field isKMSClientInternal:Z
       8: ifeq          18
      11: aload_0
      12: getfield      #33                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      15: invokevirtual #73                 // Method com/amazonaws/services/kms/AWSKMSClient.shutdown:()V
      18: return

  public com.amazonaws.services.s3.model.CompleteMultipartUploadResult uploadObject(com.amazonaws.services.s3.model.UploadObjectRequest) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_1
       1: invokevirtual #74                 // Method com/amazonaws/services/s3/model/UploadObjectRequest.getExecutorService:()Ljava/util/concurrent/ExecutorService;
       4: astore_2
       5: aload_2
       6: ifnonnull     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: istore_3
      15: aload_2
      16: ifnonnull     30
      19: aload_0
      20: getfield      #75                 // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      23: invokevirtual #76                 // Method com/amazonaws/ClientConfiguration.getMaxConnections:()I
      26: invokestatic  #77                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      29: astore_2
      30: aload_1
      31: invokevirtual #78                 // Method com/amazonaws/services/s3/model/UploadObjectRequest.getUploadObjectObserver:()Lcom/amazonaws/services/s3/UploadObjectObserver;
      34: astore        4
      36: aload         4
      38: ifnonnull     50
      41: new           #79                 // class com/amazonaws/services/s3/UploadObjectObserver
      44: dup
      45: invokespecial #80                 // Method com/amazonaws/services/s3/UploadObjectObserver."<init>":()V
      48: astore        4
      50: aload         4
      52: aload_1
      53: new           #35                 // class com/amazonaws/services/s3/AmazonS3EncryptionClient$S3DirectImpl
      56: dup
      57: aload_0
      58: aconst_null
      59: invokespecial #36                 // Method com/amazonaws/services/s3/AmazonS3EncryptionClient$S3DirectImpl."<init>":(Lcom/amazonaws/services/s3/AmazonS3EncryptionClient;Lcom/amazonaws/services/s3/AmazonS3EncryptionClient$1;)V
      62: aload_0
      63: aload_2
      64: invokevirtual #81                 // Method com/amazonaws/services/s3/UploadObjectObserver.init:(Lcom/amazonaws/services/s3/model/UploadObjectRequest;Lcom/amazonaws/services/s3/internal/S3DirectSpi;Lcom/amazonaws/services/s3/AmazonS3;Ljava/util/concurrent/ExecutorService;)Lcom/amazonaws/services/s3/UploadObjectObserver;
      67: pop
      68: aload         4
      70: aload_1
      71: invokevirtual #82                 // Method com/amazonaws/services/s3/UploadObjectObserver.onUploadInitiation:(Lcom/amazonaws/services/s3/model/UploadObjectRequest;)Ljava/lang/String;
      74: astore        5
      76: new           #83                 // class java/util/ArrayList
      79: dup
      80: invokespecial #84                 // Method java/util/ArrayList."<init>":()V
      83: astore        6
      85: aload_1
      86: invokevirtual #85                 // Method com/amazonaws/services/s3/model/UploadObjectRequest.getMultiFileOutputStream:()Lcom/amazonaws/services/s3/internal/MultiFileOutputStream;
      89: astore        7
      91: aload         7
      93: ifnonnull     105
      96: new           #86                 // class com/amazonaws/services/s3/internal/MultiFileOutputStream
      99: dup
     100: invokespecial #87                 // Method com/amazonaws/services/s3/internal/MultiFileOutputStream."<init>":()V
     103: astore        7
     105: aload         7
     107: aload         4
     109: aload_1
     110: invokevirtual #88                 // Method com/amazonaws/services/s3/model/UploadObjectRequest.getPartSize:()J
     113: aload_1
     114: invokevirtual #89                 // Method com/amazonaws/services/s3/model/UploadObjectRequest.getDiskLimit:()J
     117: invokevirtual #90                 // Method com/amazonaws/services/s3/internal/MultiFileOutputStream.init:(Lcom/amazonaws/services/s3/UploadObjectObserver;JJ)Lcom/amazonaws/services/s3/internal/MultiFileOutputStream;
     120: pop
     121: aload_0
     122: getfield      #38                 // Field crypto:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoModule;
     125: aload_1
     126: aload         5
     128: aload         7
     130: invokevirtual #91                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule.putLocalObjectSecurely:(Lcom/amazonaws/services/s3/model/UploadObjectRequest;Ljava/lang/String;Ljava/io/OutputStream;)V
     133: aload         4
     135: invokevirtual #92                 // Method com/amazonaws/services/s3/UploadObjectObserver.getFutures:()Ljava/util/List;
     138: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     143: astore        8
     145: aload         8
     147: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     152: ifeq          207
     155: aload         8
     157: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     162: checkcast     #96                 // class java/util/concurrent/Future
     165: astore        9
     167: aload         9
     169: invokeinterface #97,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
     174: checkcast     #98                 // class com/amazonaws/services/s3/model/UploadPartResult
     177: astore        10
     179: aload         6
     181: new           #99                 // class com/amazonaws/services/s3/model/PartETag
     184: dup
     185: aload         10
     187: invokevirtual #100                // Method com/amazonaws/services/s3/model/UploadPartResult.getPartNumber:()I
     190: aload         10
     192: invokevirtual #101                // Method com/amazonaws/services/s3/model/UploadPartResult.getETag:()Ljava/lang/String;
     195: invokespecial #102                // Method com/amazonaws/services/s3/model/PartETag."<init>":(ILjava/lang/String;)V
     198: invokeinterface #103,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     203: pop
     204: goto          145
     207: iload_3
     208: ifeq          218
     211: aload_2
     212: invokeinterface #104,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
     217: pop
     218: aload         7
     220: invokevirtual #105                // Method com/amazonaws/services/s3/internal/MultiFileOutputStream.cleanup:()V
     223: goto          317
     226: astore        8
     228: aload_0
     229: aload         4
     231: aload         8
     233: invokespecial #107                // Method onAbort:(Lcom/amazonaws/services/s3/UploadObjectObserver;Ljava/lang/Throwable;)Ljava/lang/Throwable;
     236: checkcast     #106                // class java/io/IOException
     239: athrow
     240: astore        8
     242: aload_0
     243: aload         4
     245: aload         8
     247: invokespecial #107                // Method onAbort:(Lcom/amazonaws/services/s3/UploadObjectObserver;Ljava/lang/Throwable;)Ljava/lang/Throwable;
     250: checkcast     #108                // class java/lang/InterruptedException
     253: athrow
     254: astore        8
     256: aload_0
     257: aload         4
     259: aload         8
     261: invokespecial #107                // Method onAbort:(Lcom/amazonaws/services/s3/UploadObjectObserver;Ljava/lang/Throwable;)Ljava/lang/Throwable;
     264: checkcast     #109                // class java/util/concurrent/ExecutionException
     267: athrow
     268: astore        8
     270: aload_0
     271: aload         4
     273: aload         8
     275: invokespecial #107                // Method onAbort:(Lcom/amazonaws/services/s3/UploadObjectObserver;Ljava/lang/Throwable;)Ljava/lang/Throwable;
     278: checkcast     #110                // class java/lang/RuntimeException
     281: athrow
     282: astore        8
     284: aload_0
     285: aload         4
     287: aload         8
     289: invokespecial #107                // Method onAbort:(Lcom/amazonaws/services/s3/UploadObjectObserver;Ljava/lang/Throwable;)Ljava/lang/Throwable;
     292: checkcast     #111                // class java/lang/Error
     295: athrow
     296: astore        11
     298: iload_3
     299: ifeq          309
     302: aload_2
     303: invokeinterface #104,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
     308: pop
     309: aload         7
     311: invokevirtual #105                // Method com/amazonaws/services/s3/internal/MultiFileOutputStream.cleanup:()V
     314: aload         11
     316: athrow
     317: aload         4
     319: aload         6
     321: invokevirtual #112                // Method com/amazonaws/services/s3/UploadObjectObserver.onCompletion:(Ljava/util/List;)Lcom/amazonaws/services/s3/model/CompleteMultipartUploadResult;
     324: areturn
    Exception table:
       from    to  target type
         105   207   226   Class java/io/IOException
         105   207   240   Class java/lang/InterruptedException
         105   207   254   Class java/util/concurrent/ExecutionException
         105   207   268   Class java/lang/RuntimeException
         105   207   282   Class java/lang/Error
         105   207   296   any
         226   298   296   any

  private <T extends java.lang.Throwable> T onAbort(com.amazonaws.services.s3.UploadObjectObserver, T);
    Code:
       0: aload_1
       1: invokevirtual #113                // Method com/amazonaws/services/s3/UploadObjectObserver.onAbort:()V
       4: aload_2
       5: areturn

  static com.amazonaws.services.s3.model.PutObjectResult access$101(com.amazonaws.services.s3.AmazonS3EncryptionClient, com.amazonaws.services.s3.model.PutObjectRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method com/amazonaws/services/s3/AmazonS3Client.putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
       5: areturn

  static com.amazonaws.services.s3.model.S3Object access$201(com.amazonaws.services.s3.AmazonS3EncryptionClient, com.amazonaws.services.s3.model.GetObjectRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method com/amazonaws/services/s3/AmazonS3Client.getObject:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)Lcom/amazonaws/services/s3/model/S3Object;
       5: areturn

  static com.amazonaws.services.s3.model.ObjectMetadata access$301(com.amazonaws.services.s3.AmazonS3EncryptionClient, com.amazonaws.services.s3.model.GetObjectRequest, java.io.File) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method com/amazonaws/services/s3/AmazonS3Client.getObject:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
       6: areturn

  static com.amazonaws.services.s3.model.CompleteMultipartUploadResult access$401(com.amazonaws.services.s3.AmazonS3EncryptionClient, com.amazonaws.services.s3.model.CompleteMultipartUploadRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method com/amazonaws/services/s3/AmazonS3Client.completeMultipartUpload:(Lcom/amazonaws/services/s3/model/CompleteMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/CompleteMultipartUploadResult;
       5: areturn

  static com.amazonaws.services.s3.model.InitiateMultipartUploadResult access$501(com.amazonaws.services.s3.AmazonS3EncryptionClient, com.amazonaws.services.s3.model.InitiateMultipartUploadRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method com/amazonaws/services/s3/AmazonS3Client.initiateMultipartUpload:(Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadResult;
       5: areturn

  static com.amazonaws.services.s3.model.UploadPartResult access$601(com.amazonaws.services.s3.AmazonS3EncryptionClient, com.amazonaws.services.s3.model.UploadPartRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method com/amazonaws/services/s3/AmazonS3Client.uploadPart:(Lcom/amazonaws/services/s3/model/UploadPartRequest;)Lcom/amazonaws/services/s3/model/UploadPartResult;
       5: areturn

  static com.amazonaws.services.s3.model.CopyPartResult access$701(com.amazonaws.services.s3.AmazonS3EncryptionClient, com.amazonaws.services.s3.model.CopyPartRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method com/amazonaws/services/s3/AmazonS3Client.copyPart:(Lcom/amazonaws/services/s3/model/CopyPartRequest;)Lcom/amazonaws/services/s3/model/CopyPartResult;
       5: areturn

  static void access$801(com.amazonaws.services.s3.AmazonS3EncryptionClient, com.amazonaws.services.s3.model.AbortMultipartUploadRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/amazonaws/services/s3/AmazonS3Client.abortMultipartUpload:(Lcom/amazonaws/services/s3/model/AbortMultipartUploadRequest;)V
       5: return

  static {};
    Code:
       0: new           #114                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #115                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #116                // class com/amazonaws/services/s3/AmazonS3EncryptionClient
       9: invokevirtual #117                // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #119                // String /
      17: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokestatic  #120                // Method com/amazonaws/util/VersionInfoUtils.getVersion:()Ljava/lang/String;
      23: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: putstatic     #50                 // Field USER_AGENT:Ljava/lang/String;
      32: return
}
