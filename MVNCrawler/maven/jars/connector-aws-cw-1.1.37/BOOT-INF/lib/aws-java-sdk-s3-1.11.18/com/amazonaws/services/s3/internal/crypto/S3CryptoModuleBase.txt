Compiled from "S3CryptoModuleBase.java"
public abstract class com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase<T extends com.amazonaws.services.s3.internal.crypto.MultipartUploadCryptoContext> extends com.amazonaws.services.s3.internal.crypto.S3CryptoModule<T> {
  private static final boolean IS_MULTI_PART;

  protected static final int DEFAULT_BUFFER_SIZE;

  protected final com.amazonaws.services.s3.model.EncryptionMaterialsProvider kekMaterialsProvider;

  protected final org.apache.commons.logging.Log log;

  protected final com.amazonaws.services.s3.internal.crypto.S3CryptoScheme cryptoScheme;

  protected final com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme contentCryptoScheme;

  protected final com.amazonaws.services.s3.model.CryptoConfiguration cryptoConfig;

  protected final java.util.Map<java.lang.String, T> multipartUploadContexts;

  protected final com.amazonaws.services.s3.internal.S3Direct s3;

  protected final com.amazonaws.services.kms.AWSKMSClient kms;

  protected com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase(com.amazonaws.services.kms.AWSKMSClient, com.amazonaws.services.s3.internal.S3Direct, com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #7                  // class java/util/HashMap
      19: dup
      20: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      23: invokestatic  #9                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      26: putfield      #10                 // Field multipartUploadContexts:Ljava/util/Map;
      29: aload         5
      31: invokevirtual #11                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.isReadOnly:()Z
      34: ifne          47
      37: new           #12                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #13                 // String The cryto configuration parameter is required to be read-only
      43: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: aload         4
      50: putfield      #15                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
      53: aload_0
      54: aload_2
      55: putfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      58: aload_0
      59: aload         5
      61: putfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      64: aload_0
      65: aload         5
      67: invokevirtual #18                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoMode:()Lcom/amazonaws/services/s3/model/CryptoMode;
      70: invokestatic  #19                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoScheme.from:(Lcom/amazonaws/services/s3/model/CryptoMode;)Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
      73: putfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
      76: aload_0
      77: aload_0
      78: getfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
      81: invokevirtual #21                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoScheme.getContentCryptoScheme:()Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      84: putfield      #22                 // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      87: aload_0
      88: aload_1
      89: putfield      #23                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      92: return

  protected com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase(com.amazonaws.services.s3.internal.S3Direct, com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModule."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #7                  // class java/util/HashMap
      19: dup
      20: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      23: invokestatic  #9                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      26: putfield      #10                 // Field multipartUploadContexts:Ljava/util/Map;
      29: aload_0
      30: aload_3
      31: putfield      #15                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
      34: aload_0
      35: aload_1
      36: putfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      39: aload_0
      40: aload         4
      42: putfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      45: aload_0
      46: aload         4
      48: invokevirtual #18                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoMode:()Lcom/amazonaws/services/s3/model/CryptoMode;
      51: invokestatic  #19                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoScheme.from:(Lcom/amazonaws/services/s3/model/CryptoMode;)Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
      54: putfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
      57: aload_0
      58: aload_0
      59: getfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
      62: invokevirtual #21                 // Method com/amazonaws/services/s3/internal/crypto/S3CryptoScheme.getContentCryptoScheme:()Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      65: putfield      #22                 // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      68: aload_0
      69: aconst_null
      70: putfield      #23                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      73: return

  protected abstract long ciphertextLength(long);

  public com.amazonaws.services.s3.model.PutObjectResult putObjectSecurely(com.amazonaws.services.s3.model.PutObjectRequest);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #24                 // Field com/amazonaws/services/s3/AmazonS3EncryptionClient.USER_AGENT:Ljava/lang/String;
       5: invokevirtual #25                 // Method appendUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)Lcom/amazonaws/AmazonWebServiceRequest;
       8: pop
       9: aload_0
      10: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      13: invokevirtual #26                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getStorageMode:()Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      16: getstatic     #27                 // Field com/amazonaws/services/s3/model/CryptoStorageMode.InstructionFile:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      19: if_acmpne     30
      22: aload_0
      23: aload_1
      24: invokespecial #28                 // Method putObjectUsingInstructionFile:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      27: goto          35
      30: aload_0
      31: aload_1
      32: invokespecial #29                 // Method putObjectUsingMetadata:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      35: areturn

  private com.amazonaws.services.s3.model.PutObjectResult putObjectUsingMetadata(com.amazonaws.services.s3.model.PutObjectRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method createContentCryptoMaterial:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
       5: astore_2
       6: aload_1
       7: invokevirtual #31                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getFile:()Ljava/io/File;
      10: astore_3
      11: aload_1
      12: invokevirtual #32                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
      15: astore        4
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #33                 // Method wrapWithCipher:(Lcom/amazonaws/services/s3/model/AbstractPutObjectRequest;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)Lcom/amazonaws/services/s3/model/AbstractPutObjectRequest;
      23: checkcast     #34                 // class com/amazonaws/services/s3/model/PutObjectRequest
      26: astore        5
      28: aload_1
      29: aload_0
      30: aload_1
      31: invokevirtual #35                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      34: aload_1
      35: invokevirtual #31                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getFile:()Ljava/io/File;
      38: aload_2
      39: invokevirtual #36                 // Method updateMetadataWithContentCryptoMaterial:(Lcom/amazonaws/services/s3/model/ObjectMetadata;Ljava/io/File;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
      42: invokevirtual #37                 // Method com/amazonaws/services/s3/model/PutObjectRequest.setMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      45: aload_0
      46: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      49: aload         5
      51: invokevirtual #38                 // Method com/amazonaws/services/s3/internal/S3Direct.putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      54: astore        6
      56: aload_1
      57: aload_3
      58: aload         4
      60: aload         5
      62: invokevirtual #32                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
      65: aload_0
      66: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      69: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
      72: aload         6
      74: areturn
      75: astore        7
      77: aload_1
      78: aload_3
      79: aload         4
      81: aload         5
      83: invokevirtual #32                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
      86: aload_0
      87: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      90: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
      93: aload         7
      95: athrow
    Exception table:
       from    to  target type
          45    56    75   any
          75    77    75   any

  private com.amazonaws.services.s3.model.PutObjectResult putObjectUsingInstructionFile(com.amazonaws.services.s3.model.PutObjectRequest);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getFile:()Ljava/io/File;
       4: astore_2
       5: aload_1
       6: invokevirtual #32                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
       9: astore_3
      10: aload_1
      11: invokevirtual #40                 // Method com/amazonaws/services/s3/model/PutObjectRequest.clone:()Lcom/amazonaws/services/s3/model/PutObjectRequest;
      14: aconst_null
      15: invokevirtual #41                 // Method com/amazonaws/services/s3/model/PutObjectRequest.withFile:(Ljava/io/File;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
      18: aconst_null
      19: invokevirtual #42                 // Method com/amazonaws/services/s3/model/PutObjectRequest.withInputStream:(Ljava/io/InputStream;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
      22: astore        4
      24: aload         4
      26: new           #43                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      33: aload         4
      35: invokevirtual #45                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
      38: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #47                 // String .
      43: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #48                 // String instruction
      48: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokevirtual #50                 // Method com/amazonaws/services/s3/model/PutObjectRequest.setKey:(Ljava/lang/String;)V
      57: aload_0
      58: aload_1
      59: invokevirtual #30                 // Method createContentCryptoMaterial:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      62: astore        5
      64: aload_0
      65: aload_1
      66: aload         5
      68: invokevirtual #33                 // Method wrapWithCipher:(Lcom/amazonaws/services/s3/model/AbstractPutObjectRequest;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)Lcom/amazonaws/services/s3/model/AbstractPutObjectRequest;
      71: checkcast     #34                 // class com/amazonaws/services/s3/model/PutObjectRequest
      74: astore        6
      76: aload_0
      77: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      80: aload         6
      82: invokevirtual #38                 // Method com/amazonaws/services/s3/internal/S3Direct.putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      85: astore        7
      87: aload_1
      88: aload_2
      89: aload_3
      90: aload         6
      92: invokevirtual #32                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
      95: aload_0
      96: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      99: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     102: goto          125
     105: astore        8
     107: aload_1
     108: aload_2
     109: aload_3
     110: aload         6
     112: invokevirtual #32                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
     115: aload_0
     116: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
     119: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     122: aload         8
     124: athrow
     125: aload_0
     126: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
     129: aload_0
     130: aload         4
     132: aload         5
     134: invokevirtual #51                 // Method updateInstructionPutRequest:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
     137: invokevirtual #38                 // Method com/amazonaws/services/s3/internal/S3Direct.putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
     140: pop
     141: aload         7
     143: areturn
    Exception table:
       from    to  target type
          76    87   105   any
         105   107   105   any

  public final void abortMultipartUploadSecurely(com.amazonaws.services.s3.model.AbortMultipartUploadRequest);
    Code:
       0: aload_0
       1: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
       4: aload_1
       5: invokevirtual #52                 // Method com/amazonaws/services/s3/internal/S3Direct.abortMultipartUpload:(Lcom/amazonaws/services/s3/model/AbortMultipartUploadRequest;)V
       8: aload_0
       9: getfield      #10                 // Field multipartUploadContexts:Ljava/util/Map;
      12: aload_1
      13: invokevirtual #53                 // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest.getUploadId:()Ljava/lang/String;
      16: invokeinterface #54,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: return

  public final com.amazonaws.services.s3.model.CopyPartResult copyPartSecurely(com.amazonaws.services.s3.model.CopyPartRequest);
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method com/amazonaws/services/s3/model/CopyPartRequest.getUploadId:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #10                 // Field multipartUploadContexts:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #57                 // class com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext
      18: astore_3
      19: aload_0
      20: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      23: aload_1
      24: invokevirtual #58                 // Method com/amazonaws/services/s3/internal/S3Direct.copyPart:(Lcom/amazonaws/services/s3/model/CopyPartRequest;)Lcom/amazonaws/services/s3/model/CopyPartResult;
      27: astore        4
      29: aload_3
      30: ifnull        45
      33: aload_3
      34: invokevirtual #59                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.hasFinalPartBeenSeen:()Z
      37: ifne          45
      40: aload_3
      41: iconst_1
      42: invokevirtual #60                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.setHasFinalPartBeenSeen:(Z)V
      45: aload         4
      47: areturn

  abstract T newUploadContext(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest, com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial);

  public com.amazonaws.services.s3.model.InitiateMultipartUploadResult initiateMultipartUploadSecurely(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #24                 // Field com/amazonaws/services/s3/AmazonS3EncryptionClient.USER_AGENT:Ljava/lang/String;
       5: invokevirtual #25                 // Method appendUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)Lcom/amazonaws/AmazonWebServiceRequest;
       8: pop
       9: aload_0
      10: aload_1
      11: invokevirtual #30                 // Method createContentCryptoMaterial:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      14: astore_2
      15: aload_0
      16: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      19: invokevirtual #26                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getStorageMode:()Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      22: getstatic     #61                 // Field com/amazonaws/services/s3/model/CryptoStorageMode.ObjectMetadata:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      25: if_acmpne     56
      28: aload_1
      29: invokevirtual #62                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      32: astore_3
      33: aload_3
      34: ifnonnull     45
      37: new           #63                 // class com/amazonaws/services/s3/model/ObjectMetadata
      40: dup
      41: invokespecial #64                 // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      44: astore_3
      45: aload_1
      46: aload_0
      47: aload_3
      48: aconst_null
      49: aload_2
      50: invokevirtual #36                 // Method updateMetadataWithContentCryptoMaterial:(Lcom/amazonaws/services/s3/model/ObjectMetadata;Ljava/io/File;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
      53: invokevirtual #65                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.setObjectMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      56: aload_0
      57: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      60: aload_1
      61: invokevirtual #66                 // Method com/amazonaws/services/s3/internal/S3Direct.initiateMultipartUpload:(Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadResult;
      64: astore_3
      65: aload_0
      66: aload_1
      67: aload_2
      68: invokevirtual #67                 // Method newUploadContext:(Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)Lcom/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext;
      71: astore        4
      73: aload_1
      74: instanceof    #68                 // class com/amazonaws/services/s3/model/MaterialsDescriptionProvider
      77: ifeq          98
      80: aload_1
      81: checkcast     #68                 // class com/amazonaws/services/s3/model/MaterialsDescriptionProvider
      84: astore        5
      86: aload         4
      88: aload         5
      90: invokeinterface #69,  1           // InterfaceMethod com/amazonaws/services/s3/model/MaterialsDescriptionProvider.getMaterialsDescription:()Ljava/util/Map;
      95: invokevirtual #70                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.setMaterialsDescription:(Ljava/util/Map;)V
      98: aload_0
      99: getfield      #10                 // Field multipartUploadContexts:Ljava/util/Map;
     102: aload_3
     103: invokevirtual #71                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadResult.getUploadId:()Ljava/lang/String;
     106: aload         4
     108: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload_3
     115: areturn

  abstract com.amazonaws.services.s3.internal.crypto.CipherLite cipherLiteForNextPart(T);

  abstract long computeLastPartSize(com.amazonaws.services.s3.model.UploadPartRequest);

  abstract <I extends com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream> com.amazonaws.internal.SdkFilterInputStream wrapForMultipart(I, long);

  abstract void updateUploadContext(T, com.amazonaws.internal.SdkFilterInputStream);

  public com.amazonaws.services.s3.model.UploadPartResult uploadPartSecurely(com.amazonaws.services.s3.model.UploadPartRequest);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #24                 // Field com/amazonaws/services/s3/AmazonS3EncryptionClient.USER_AGENT:Ljava/lang/String;
       5: invokevirtual #25                 // Method appendUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)Lcom/amazonaws/AmazonWebServiceRequest;
       8: pop
       9: aload_0
      10: getfield      #22                 // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      13: invokevirtual #73                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getBlockSizeInBytes:()I
      16: istore_2
      17: aload_1
      18: invokevirtual #74                 // Method com/amazonaws/services/s3/model/UploadPartRequest.isLastPart:()Z
      21: istore_3
      22: aload_1
      23: invokevirtual #75                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getUploadId:()Ljava/lang/String;
      26: astore        4
      28: aload_1
      29: invokevirtual #76                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartSize:()J
      32: lstore        5
      34: lconst_0
      35: lload         5
      37: iload_2
      38: i2l
      39: lrem
      40: lcmp
      41: ifne          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: istore        7
      51: iload_3
      52: ifne          92
      55: iload         7
      57: ifne          92
      60: new           #77                 // class com/amazonaws/AmazonClientException
      63: dup
      64: new           #43                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #78                 // String Invalid part size: part sizes for encrypted multipart uploads must be multiples of the cipher block size (
      73: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: iload_2
      77: invokevirtual #79                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: ldc           #80                 // String ) with the exception of the last part.
      82: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokespecial #81                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: aload_0
      93: getfield      #10                 // Field multipartUploadContexts:Ljava/util/Map;
      96: aload         4
      98: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #57                 // class com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext
     106: astore        8
     108: aload         8
     110: ifnonnull     141
     113: new           #77                 // class com/amazonaws/AmazonClientException
     116: dup
     117: new           #43                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #82                 // String No client-side information available on upload ID
     126: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload         4
     131: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokespecial #81                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: aload         8
     143: aload_1
     144: invokevirtual #83                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartNumber:()I
     147: invokevirtual #84                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.beginPartUpload:(I)V
     150: aload_0
     151: aload         8
     153: invokevirtual #85                 // Method cipherLiteForNextPart:(Lcom/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext;)Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
     156: astore        10
     158: aload_1
     159: invokevirtual #86                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getFile:()Ljava/io/File;
     162: astore        11
     164: aload_1
     165: invokevirtual #87                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getInputStream:()Ljava/io/InputStream;
     168: astore        12
     170: aconst_null
     171: astore        13
     173: aload_0
     174: aload_1
     175: aload         10
     177: invokevirtual #88                 // Method newMultipartS3CipherInputStream:(Lcom/amazonaws/services/s3/model/UploadPartRequest;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;)Lcom/amazonaws/services/s3/internal/crypto/CipherLiteInputStream;
     180: astore        14
     182: aload         14
     184: astore        13
     186: aload_0
     187: aload         14
     189: lload         5
     191: invokevirtual #89                 // Method wrapForMultipart:(Lcom/amazonaws/services/s3/internal/crypto/CipherLiteInputStream;J)Lcom/amazonaws/internal/SdkFilterInputStream;
     194: astore        13
     196: aload_1
     197: aload         13
     199: invokevirtual #90                 // Method com/amazonaws/services/s3/model/UploadPartRequest.setInputStream:(Ljava/io/InputStream;)V
     202: aload_1
     203: aconst_null
     204: invokevirtual #91                 // Method com/amazonaws/services/s3/model/UploadPartRequest.setFile:(Ljava/io/File;)V
     207: aload_1
     208: lconst_0
     209: invokevirtual #92                 // Method com/amazonaws/services/s3/model/UploadPartRequest.setFileOffset:(J)V
     212: iload_3
     213: ifeq          256
     216: aload_0
     217: aload_1
     218: invokevirtual #93                 // Method computeLastPartSize:(Lcom/amazonaws/services/s3/model/UploadPartRequest;)J
     221: lstore        15
     223: lload         15
     225: ldc2_w        #94                 // long -1l
     228: lcmp
     229: ifle          238
     232: aload_1
     233: lload         15
     235: invokevirtual #96                 // Method com/amazonaws/services/s3/model/UploadPartRequest.setPartSize:(J)V
     238: aload         8
     240: invokevirtual #59                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.hasFinalPartBeenSeen:()Z
     243: ifeq          256
     246: new           #77                 // class com/amazonaws/AmazonClientException
     249: dup
     250: ldc           #97                 // String This part was specified as the last part in a multipart upload, but a previous part was already marked as the last part.  Only the last part of the upload should be marked as the last part.
     252: invokespecial #81                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     255: athrow
     256: aload_0
     257: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
     260: aload_1
     261: invokevirtual #98                 // Method com/amazonaws/services/s3/internal/S3Direct.uploadPart:(Lcom/amazonaws/services/s3/model/UploadPartRequest;)Lcom/amazonaws/services/s3/model/UploadPartResult;
     264: astore        9
     266: aload_1
     267: aload         11
     269: aload         12
     271: aload         13
     273: aload_0
     274: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
     277: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     280: aload         8
     282: invokevirtual #99                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.endPartUpload:()V
     285: goto          312
     288: astore        17
     290: aload_1
     291: aload         11
     293: aload         12
     295: aload         13
     297: aload_0
     298: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
     301: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     304: aload         8
     306: invokevirtual #99                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.endPartUpload:()V
     309: aload         17
     311: athrow
     312: iload_3
     313: ifeq          322
     316: aload         8
     318: iconst_1
     319: invokevirtual #60                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.setHasFinalPartBeenSeen:(Z)V
     322: aload_0
     323: aload         8
     325: aload         13
     327: invokevirtual #100                // Method updateUploadContext:(Lcom/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext;Lcom/amazonaws/internal/SdkFilterInputStream;)V
     330: aload         9
     332: areturn
    Exception table:
       from    to  target type
         173   266   288   any
         288   290   288   any

  protected final com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream newMultipartS3CipherInputStream(com.amazonaws.services.s3.model.UploadPartRequest, com.amazonaws.services.s3.internal.crypto.CipherLite);
    Code:
       0: aload_1
       1: invokevirtual #86                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getFile:()Ljava/io/File;
       4: astore_3
       5: aload_1
       6: invokevirtual #87                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getInputStream:()Ljava/io/InputStream;
       9: astore        4
      11: aconst_null
      12: astore        5
      14: aload_3
      15: ifnonnull     40
      18: aload         4
      20: ifnonnull     33
      23: new           #12                 // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #101                // String A File or InputStream must be specified when uploading part
      29: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload         4
      35: astore        5
      37: goto          50
      40: new           #102                // class com/amazonaws/internal/ResettableInputStream
      43: dup
      44: aload_3
      45: invokespecial #103                // Method com/amazonaws/internal/ResettableInputStream."<init>":(Ljava/io/File;)V
      48: astore        5
      50: new           #104                // class com/amazonaws/services/s3/internal/InputSubstream
      53: dup
      54: aload         5
      56: aload_1
      57: invokevirtual #105                // Method com/amazonaws/services/s3/model/UploadPartRequest.getFileOffset:()J
      60: aload_1
      61: invokevirtual #76                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartSize:()J
      64: aload_1
      65: invokevirtual #74                 // Method com/amazonaws/services/s3/model/UploadPartRequest.isLastPart:()Z
      68: invokespecial #106                // Method com/amazonaws/services/s3/internal/InputSubstream."<init>":(Ljava/io/InputStream;JJZ)V
      71: astore        5
      73: aload_2
      74: invokevirtual #107                // Method com/amazonaws/services/s3/internal/crypto/CipherLite.markSupported:()Z
      77: ifeq          101
      80: new           #108                // class com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream
      83: dup
      84: aload         5
      86: aload_2
      87: sipush        2048
      90: iconst_1
      91: aload_1
      92: invokevirtual #74                 // Method com/amazonaws/services/s3/model/UploadPartRequest.isLastPart:()Z
      95: invokespecial #110                // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;IZZ)V
      98: goto          119
     101: new           #111                // class com/amazonaws/services/s3/internal/crypto/RenewableCipherLiteInputStream
     104: dup
     105: aload         5
     107: aload_2
     108: sipush        2048
     111: iconst_1
     112: aload_1
     113: invokevirtual #74                 // Method com/amazonaws/services/s3/model/UploadPartRequest.isLastPart:()Z
     116: invokespecial #112                // Method com/amazonaws/services/s3/internal/crypto/RenewableCipherLiteInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;IZZ)V
     119: areturn
     120: astore        6
     122: aload_1
     123: aload_3
     124: aload         4
     126: aload         5
     128: aload_0
     129: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
     132: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     135: aload         6
     137: ldc           #114                // String Unable to create cipher input stream
     139: invokestatic  #115                // Method com/amazonaws/util/Throwables.failure:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/RuntimeException;
     142: athrow
    Exception table:
       from    to  target type
          14   119   120   Class java/lang/Exception

  public com.amazonaws.services.s3.model.CompleteMultipartUploadResult completeMultipartUploadSecurely(com.amazonaws.services.s3.model.CompleteMultipartUploadRequest);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #24                 // Field com/amazonaws/services/s3/AmazonS3EncryptionClient.USER_AGENT:Ljava/lang/String;
       5: invokevirtual #25                 // Method appendUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)Lcom/amazonaws/AmazonWebServiceRequest;
       8: pop
       9: aload_1
      10: invokevirtual #116                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadRequest.getUploadId:()Ljava/lang/String;
      13: astore_2
      14: aload_0
      15: getfield      #10                 // Field multipartUploadContexts:Ljava/util/Map;
      18: aload_2
      19: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #57                 // class com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext
      27: astore_3
      28: aload_3
      29: ifnull        49
      32: aload_3
      33: invokevirtual #59                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.hasFinalPartBeenSeen:()Z
      36: ifne          49
      39: new           #77                 // class com/amazonaws/AmazonClientException
      42: dup
      43: ldc           #117                // String Unable to complete an encrypted multipart upload without being told which part was the last.  Without knowing which part was the last, the encrypted data in Amazon S3 is incomplete and corrupt.
      45: invokespecial #81                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      53: aload_1
      54: invokevirtual #118                // Method com/amazonaws/services/s3/internal/S3Direct.completeMultipartUpload:(Lcom/amazonaws/services/s3/model/CompleteMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/CompleteMultipartUploadResult;
      57: astore        4
      59: aload_3
      60: ifnull        100
      63: aload_0
      64: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      67: invokevirtual #26                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getStorageMode:()Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      70: getstatic     #27                 // Field com/amazonaws/services/s3/model/CryptoStorageMode.InstructionFile:Lcom/amazonaws/services/s3/model/CryptoStorageMode;
      73: if_acmpne     100
      76: aload_0
      77: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      80: aload_0
      81: aload_3
      82: invokevirtual #119                // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.getBucketName:()Ljava/lang/String;
      85: aload_3
      86: invokevirtual #120                // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.getKey:()Ljava/lang/String;
      89: aload_3
      90: invokevirtual #121                // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.getContentCryptoMaterial:()Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      93: invokevirtual #122                // Method createInstructionPutRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
      96: invokevirtual #38                 // Method com/amazonaws/services/s3/internal/S3Direct.putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      99: pop
     100: aload_0
     101: getfield      #10                 // Field multipartUploadContexts:Ljava/util/Map;
     104: aload_2
     105: invokeinterface #54,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: aload         4
     113: areturn

  protected final com.amazonaws.services.s3.model.ObjectMetadata updateMetadataWithContentCryptoMaterial(com.amazonaws.services.s3.model.ObjectMetadata, java.io.File, com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #63                 // class com/amazonaws/services/s3/model/ObjectMetadata
       7: dup
       8: invokespecial #64                 // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      11: astore_1
      12: aload_2
      13: ifnull        31
      16: invokestatic  #123                // Method com/amazonaws/services/s3/internal/Mimetypes.getInstance:()Lcom/amazonaws/services/s3/internal/Mimetypes;
      19: astore        4
      21: aload_1
      22: aload         4
      24: aload_2
      25: invokevirtual #124                // Method com/amazonaws/services/s3/internal/Mimetypes.getMimetype:(Ljava/io/File;)Ljava/lang/String;
      28: invokevirtual #125                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentType:(Ljava/lang/String;)V
      31: aload_3
      32: aload_1
      33: aload_0
      34: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      37: invokevirtual #18                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoMode:()Lcom/amazonaws/services/s3/model/CryptoMode;
      40: invokevirtual #126                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.toObjectMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;Lcom/amazonaws/services/s3/model/CryptoMode;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
      43: areturn

  protected final com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial createContentCryptoMaterial(com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_1
       1: instanceof    #127                // class com/amazonaws/services/s3/model/EncryptionMaterialsFactory
       4: ifeq          37
       7: aload_1
       8: checkcast     #127                // class com/amazonaws/services/s3/model/EncryptionMaterialsFactory
      11: astore_2
      12: aload_2
      13: invokeinterface #128,  1          // InterfaceMethod com/amazonaws/services/s3/model/EncryptionMaterialsFactory.getEncryptionMaterials:()Lcom/amazonaws/services/s3/model/EncryptionMaterials;
      18: astore_3
      19: aload_3
      20: ifnull        37
      23: aload_0
      24: aload_3
      25: aload_0
      26: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      29: invokevirtual #129                // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoProvider:()Ljava/security/Provider;
      32: aload_1
      33: invokespecial #130                // Method buildContentCryptoMaterial:(Lcom/amazonaws/services/s3/model/EncryptionMaterials;Ljava/security/Provider;Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      36: areturn
      37: aload_1
      38: instanceof    #68                 // class com/amazonaws/services/s3/model/MaterialsDescriptionProvider
      41: ifeq          133
      44: aload_1
      45: checkcast     #68                 // class com/amazonaws/services/s3/model/MaterialsDescriptionProvider
      48: astore_2
      49: aload_2
      50: invokeinterface #69,  1           // InterfaceMethod com/amazonaws/services/s3/model/MaterialsDescriptionProvider.getMaterialsDescription:()Ljava/util/Map;
      55: astore_3
      56: aload_0
      57: aload_0
      58: getfield      #15                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
      61: aload_3
      62: aload_0
      63: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      66: invokevirtual #129                // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoProvider:()Ljava/security/Provider;
      69: aload_1
      70: invokespecial #131                // Method newContentCryptoMaterial:(Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Ljava/util/Map;Ljava/security/Provider;Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      73: astore        4
      75: aload         4
      77: ifnull        83
      80: aload         4
      82: areturn
      83: aload_3
      84: ifnull        133
      87: aload_0
      88: getfield      #15                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
      91: invokeinterface #132,  1          // InterfaceMethod com/amazonaws/services/s3/model/EncryptionMaterialsProvider.getEncryptionMaterials:()Lcom/amazonaws/services/s3/model/EncryptionMaterials;
      96: astore        5
      98: aload         5
     100: invokevirtual #133                // Method com/amazonaws/services/s3/model/EncryptionMaterials.isKMSEnabled:()Z
     103: ifne          133
     106: new           #77                 // class com/amazonaws/AmazonClientException
     109: dup
     110: new           #43                 // class java/lang/StringBuilder
     113: dup
     114: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #134                // String No material available from the encryption material provider for description
     119: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_3
     123: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     126: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: invokespecial #81                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     132: athrow
     133: aload_0
     134: aload_0
     135: getfield      #15                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
     138: aload_0
     139: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
     142: invokevirtual #129                // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoProvider:()Ljava/security/Provider;
     145: aload_1
     146: invokespecial #136                // Method newContentCryptoMaterial:(Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Ljava/security/Provider;Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
     149: areturn

  private com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial newContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterialsProvider, java.util.Map<java.lang.String, java.lang.String>, java.security.Provider, com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #137,  2          // InterfaceMethod com/amazonaws/services/s3/model/EncryptionMaterialsProvider.getEncryptionMaterials:(Ljava/util/Map;)Lcom/amazonaws/services/s3/model/EncryptionMaterials;
       7: astore        5
       9: aload         5
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_0
      17: aload         5
      19: aload_3
      20: aload         4
      22: invokespecial #130                // Method buildContentCryptoMaterial:(Lcom/amazonaws/services/s3/model/EncryptionMaterials;Ljava/security/Provider;Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      25: areturn

  private com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial newContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterialsProvider, java.security.Provider, com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_1
       1: invokeinterface #132,  1          // InterfaceMethod com/amazonaws/services/s3/model/EncryptionMaterialsProvider.getEncryptionMaterials:()Lcom/amazonaws/services/s3/model/EncryptionMaterials;
       6: astore        4
       8: aload         4
      10: ifnonnull     23
      13: new           #77                 // class com/amazonaws/AmazonClientException
      16: dup
      17: ldc           #138                // String No material available from the encryption material provider
      19: invokespecial #81                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload         4
      26: aload_2
      27: aload_3
      28: invokespecial #130                // Method buildContentCryptoMaterial:(Lcom/amazonaws/services/s3/model/EncryptionMaterials;Ljava/security/Provider;Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      31: areturn

  public final void putLocalObjectSecurely(com.amazonaws.services.s3.model.UploadObjectRequest, java.lang.String, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #139                // Method com/amazonaws/services/s3/model/UploadObjectRequest.clone:()Lcom/amazonaws/services/s3/model/UploadObjectRequest;
       4: astore        4
       6: aload         4
       8: invokevirtual #140                // Method com/amazonaws/services/s3/model/UploadObjectRequest.getFile:()Ljava/io/File;
      11: astore        5
      13: aload         4
      15: invokevirtual #141                // Method com/amazonaws/services/s3/model/UploadObjectRequest.getInputStream:()Ljava/io/InputStream;
      18: astore        6
      20: aload_0
      21: getfield      #10                 // Field multipartUploadContexts:Ljava/util/Map;
      24: aload_2
      25: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #57                 // class com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext
      33: astore        7
      35: aload         7
      37: invokevirtual #121                // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.getContentCryptoMaterial:()Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      40: astore        8
      42: aload_0
      43: aload         4
      45: aload         8
      47: invokevirtual #33                 // Method wrapWithCipher:(Lcom/amazonaws/services/s3/model/AbstractPutObjectRequest;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)Lcom/amazonaws/services/s3/model/AbstractPutObjectRequest;
      50: checkcast     #142                // class com/amazonaws/services/s3/model/UploadObjectRequest
      53: astore        4
      55: aload         4
      57: invokevirtual #141                // Method com/amazonaws/services/s3/model/UploadObjectRequest.getInputStream:()Ljava/io/InputStream;
      60: aload_3
      61: invokestatic  #143                // Method com/amazonaws/util/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J
      64: pop2
      65: aload         7
      67: iconst_1
      68: invokevirtual #60                 // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.setHasFinalPartBeenSeen:(Z)V
      71: aload         4
      73: aload         5
      75: aload         6
      77: aload         4
      79: invokevirtual #141                // Method com/amazonaws/services/s3/model/UploadObjectRequest.getInputStream:()Ljava/io/InputStream;
      82: aload_0
      83: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      86: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
      89: aload_3
      90: aload_0
      91: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      94: invokestatic  #144                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      97: goto          131
     100: astore        9
     102: aload         4
     104: aload         5
     106: aload         6
     108: aload         4
     110: invokevirtual #141                // Method com/amazonaws/services/s3/model/UploadObjectRequest.getInputStream:()Ljava/io/InputStream;
     113: aload_0
     114: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
     117: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     120: aload_3
     121: aload_0
     122: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
     125: invokestatic  #144                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     128: aload         9
     130: athrow
     131: return
    Exception table:
       from    to  target type
          55    71   100   any
         100   102   100   any

  private com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials, java.security.Provider, com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_0
       1: getfield      #22                 // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       4: invokevirtual #145                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getIVLengthInBytes:()I
       7: newarray       byte
       9: astore        4
      11: aload_0
      12: getfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
      15: invokevirtual #146                // Method com/amazonaws/services/s3/internal/crypto/S3CryptoScheme.getSecureRandom:()Ljava/security/SecureRandom;
      18: aload         4
      20: invokevirtual #147                // Method java/security/SecureRandom.nextBytes:([B)V
      23: aload_1
      24: invokevirtual #133                // Method com/amazonaws/services/s3/model/EncryptionMaterials.isKMSEnabled:()Z
      27: ifeq          154
      30: aload_1
      31: aload_3
      32: invokestatic  #148                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.mergeMaterialDescriptions:(Lcom/amazonaws/services/s3/model/EncryptionMaterials;Lcom/amazonaws/AmazonWebServiceRequest;)Ljava/util/Map;
      35: astore        5
      37: new           #149                // class com/amazonaws/services/kms/model/GenerateDataKeyRequest
      40: dup
      41: invokespecial #150                // Method com/amazonaws/services/kms/model/GenerateDataKeyRequest."<init>":()V
      44: aload         5
      46: invokevirtual #151                // Method com/amazonaws/services/kms/model/GenerateDataKeyRequest.withEncryptionContext:(Ljava/util/Map;)Lcom/amazonaws/services/kms/model/GenerateDataKeyRequest;
      49: aload_1
      50: invokevirtual #152                // Method com/amazonaws/services/s3/model/EncryptionMaterials.getCustomerMasterKeyId:()Ljava/lang/String;
      53: invokevirtual #153                // Method com/amazonaws/services/kms/model/GenerateDataKeyRequest.withKeyId:(Ljava/lang/String;)Lcom/amazonaws/services/kms/model/GenerateDataKeyRequest;
      56: aload_0
      57: getfield      #22                 // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      60: invokevirtual #154                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getKeySpec:()Ljava/lang/String;
      63: invokevirtual #155                // Method com/amazonaws/services/kms/model/GenerateDataKeyRequest.withKeySpec:(Ljava/lang/String;)Lcom/amazonaws/services/kms/model/GenerateDataKeyRequest;
      66: astore        6
      68: aload         6
      70: aload_3
      71: invokevirtual #156                // Method com/amazonaws/AmazonWebServiceRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
      74: invokevirtual #157                // Method com/amazonaws/services/kms/model/GenerateDataKeyRequest.withGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/AmazonWebServiceRequest;
      77: aload_3
      78: invokevirtual #158                // Method com/amazonaws/AmazonWebServiceRequest.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      81: invokevirtual #159                // Method com/amazonaws/AmazonWebServiceRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
      84: pop
      85: aload_0
      86: getfield      #23                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      89: aload         6
      91: invokevirtual #160                // Method com/amazonaws/services/kms/AWSKMSClient.generateDataKey:(Lcom/amazonaws/services/kms/model/GenerateDataKeyRequest;)Lcom/amazonaws/services/kms/model/GenerateDataKeyResult;
      94: astore        7
      96: new           #161                // class javax/crypto/spec/SecretKeySpec
      99: dup
     100: aload         7
     102: invokevirtual #162                // Method com/amazonaws/services/kms/model/GenerateDataKeyResult.getPlaintext:()Ljava/nio/ByteBuffer;
     105: invokestatic  #163                // Method com/amazonaws/util/BinaryUtils.copyAllBytesFrom:(Ljava/nio/ByteBuffer;)[B
     108: aload_0
     109: getfield      #22                 // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
     112: invokevirtual #164                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getKeyGeneratorAlgorithm:()Ljava/lang/String;
     115: invokespecial #165                // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
     118: astore        8
     120: aload         7
     122: invokevirtual #166                // Method com/amazonaws/services/kms/model/GenerateDataKeyResult.getCiphertextBlob:()Ljava/nio/ByteBuffer;
     125: invokestatic  #163                // Method com/amazonaws/util/BinaryUtils.copyAllBytesFrom:(Ljava/nio/ByteBuffer;)[B
     128: astore        9
     130: aload         8
     132: aload         4
     134: aload_0
     135: getfield      #22                 // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
     138: aload_2
     139: new           #167                // class com/amazonaws/services/s3/internal/crypto/KMSSecuredCEK
     142: dup
     143: aload         9
     145: aload         5
     147: invokespecial #168                // Method com/amazonaws/services/s3/internal/crypto/KMSSecuredCEK."<init>":([BLjava/util/Map;)V
     150: invokestatic  #169                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.wrap:(Ljavax/crypto/SecretKey;[BLcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;Ljava/security/Provider;Lcom/amazonaws/services/s3/internal/crypto/SecuredCEK;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
     153: areturn
     154: aload_0
     155: aload_1
     156: aload_2
     157: invokevirtual #170                // Method generateCEK:(Lcom/amazonaws/services/s3/model/EncryptionMaterials;Ljava/security/Provider;)Ljavax/crypto/SecretKey;
     160: aload         4
     162: aload_1
     163: aload_0
     164: getfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
     167: aload_2
     168: aload_0
     169: getfield      #23                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
     172: aload_3
     173: invokestatic  #171                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.create:(Ljavax/crypto/SecretKey;[BLcom/amazonaws/services/s3/model/EncryptionMaterials;Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;Ljava/security/Provider;Lcom/amazonaws/services/kms/AWSKMSClient;Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
     176: areturn

  protected final javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials, java.security.Provider);
    Code:
       0: aload_0
       1: getfield      #22                 // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       4: invokevirtual #164                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getKeyGeneratorAlgorithm:()Ljava/lang/String;
       7: astore_3
       8: aload_2
       9: ifnonnull     19
      12: aload_3
      13: invokestatic  #172                // Method javax/crypto/KeyGenerator.getInstance:(Ljava/lang/String;)Ljavax/crypto/KeyGenerator;
      16: goto          24
      19: aload_3
      20: aload_2
      21: invokestatic  #173                // Method javax/crypto/KeyGenerator.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator;
      24: astore        4
      26: aload         4
      28: aload_0
      29: getfield      #22                 // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      32: invokevirtual #174                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getKeyLengthInBits:()I
      35: aload_0
      36: getfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
      39: invokevirtual #146                // Method com/amazonaws/services/s3/internal/crypto/S3CryptoScheme.getSecureRandom:()Ljava/security/SecureRandom;
      42: invokevirtual #175                // Method javax/crypto/KeyGenerator.init:(ILjava/security/SecureRandom;)V
      45: iconst_0
      46: istore        5
      48: aload_1
      49: invokevirtual #176                // Method com/amazonaws/services/s3/model/EncryptionMaterials.getKeyPair:()Ljava/security/KeyPair;
      52: astore        6
      54: aload         6
      56: ifnull        113
      59: aload_0
      60: getfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
      63: invokevirtual #177                // Method com/amazonaws/services/s3/internal/crypto/S3CryptoScheme.getKeyWrapScheme:()Lcom/amazonaws/services/s3/internal/crypto/S3KeyWrapScheme;
      66: aload         6
      68: invokevirtual #178                // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
      71: invokevirtual #179                // Method com/amazonaws/services/s3/internal/crypto/S3KeyWrapScheme.getKeyWrapAlgorithm:(Ljava/security/Key;)Ljava/lang/String;
      74: astore        7
      76: aload         7
      78: ifnonnull     113
      81: aload         4
      83: invokevirtual #180                // Method javax/crypto/KeyGenerator.getProvider:()Ljava/security/Provider;
      86: astore        8
      88: aload         8
      90: ifnonnull     97
      93: aconst_null
      94: goto          102
      97: aload         8
      99: invokevirtual #181                // Method java/security/Provider.getName:()Ljava/lang/String;
     102: astore        9
     104: ldc           #183                // String BC
     106: aload         9
     108: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     111: istore        5
     113: aload         4
     115: invokevirtual #185                // Method javax/crypto/KeyGenerator.generateKey:()Ljavax/crypto/SecretKey;
     118: astore        7
     120: iload         5
     122: ifeq          137
     125: aload         7
     127: invokeinterface #186,  1          // InterfaceMethod javax/crypto/SecretKey.getEncoded:()[B
     132: iconst_0
     133: baload
     134: ifeq          140
     137: aload         7
     139: areturn
     140: iconst_0
     141: istore        8
     143: iload         8
     145: bipush        9
     147: if_icmpge     178
     150: aload         4
     152: invokevirtual #185                // Method javax/crypto/KeyGenerator.generateKey:()Ljavax/crypto/SecretKey;
     155: astore        7
     157: aload         7
     159: invokeinterface #186,  1          // InterfaceMethod javax/crypto/SecretKey.getEncoded:()[B
     164: iconst_0
     165: baload
     166: ifeq          172
     169: aload         7
     171: areturn
     172: iinc          8, 1
     175: goto          143
     178: new           #77                 // class com/amazonaws/AmazonClientException
     181: dup
     182: ldc           #187                // String Failed to generate secret key
     184: invokespecial #81                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     187: athrow
     188: astore        5
     190: new           #77                 // class com/amazonaws/AmazonClientException
     193: dup
     194: new           #43                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     201: ldc           #189                // String Unable to generate envelope symmetric key:
     203: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload         5
     208: invokevirtual #190                // Method java/security/NoSuchAlgorithmException.getMessage:()Ljava/lang/String;
     211: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     214: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     217: aload         5
     219: invokespecial #191                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     222: athrow
    Exception table:
       from    to  target type
           8   139   188   Class java/security/NoSuchAlgorithmException
         140   171   188   Class java/security/NoSuchAlgorithmException
         172   188   188   Class java/security/NoSuchAlgorithmException

  protected final <R extends com.amazonaws.services.s3.model.AbstractPutObjectRequest> R wrapWithCipher(R, com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial);
    Code:
       0: aload_1
       1: invokevirtual #192                // Method com/amazonaws/services/s3/model/AbstractPutObjectRequest.getMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
       4: astore_3
       5: aload_3
       6: ifnonnull     17
       9: new           #63                 // class com/amazonaws/services/s3/model/ObjectMetadata
      12: dup
      13: invokespecial #64                 // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      16: astore_3
      17: aload_3
      18: invokevirtual #193                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentMD5:()Ljava/lang/String;
      21: ifnull        34
      24: aload_3
      25: ldc           #195                // String x-amz-unencrypted-content-md5
      27: aload_3
      28: invokevirtual #193                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentMD5:()Ljava/lang/String;
      31: invokevirtual #196                // Method com/amazonaws/services/s3/model/ObjectMetadata.addUserMetadata:(Ljava/lang/String;Ljava/lang/String;)V
      34: aload_3
      35: aconst_null
      36: invokevirtual #197                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentMD5:(Ljava/lang/String;)V
      39: aload_0
      40: aload_1
      41: aload_3
      42: invokevirtual #198                // Method plaintextLength:(Lcom/amazonaws/services/s3/model/AbstractPutObjectRequest;Lcom/amazonaws/services/s3/model/ObjectMetadata;)J
      45: lstore        4
      47: lload         4
      49: lconst_0
      50: lcmp
      51: iflt          75
      54: aload_3
      55: ldc           #199                // String x-amz-unencrypted-content-length
      57: lload         4
      59: invokestatic  #200                // Method java/lang/Long.toString:(J)Ljava/lang/String;
      62: invokevirtual #196                // Method com/amazonaws/services/s3/model/ObjectMetadata.addUserMetadata:(Ljava/lang/String;Ljava/lang/String;)V
      65: aload_3
      66: aload_0
      67: lload         4
      69: invokevirtual #201                // Method ciphertextLength:(J)J
      72: invokevirtual #202                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentLength:(J)V
      75: aload_1
      76: aload_3
      77: invokevirtual #203                // Method com/amazonaws/services/s3/model/AbstractPutObjectRequest.setMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      80: aload_1
      81: aload_0
      82: aload_1
      83: aload_2
      84: lload         4
      86: invokespecial #204                // Method newS3CipherLiteInputStream:(Lcom/amazonaws/services/s3/model/AbstractPutObjectRequest;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;J)Lcom/amazonaws/services/s3/internal/crypto/CipherLiteInputStream;
      89: invokevirtual #205                // Method com/amazonaws/services/s3/model/AbstractPutObjectRequest.setInputStream:(Ljava/io/InputStream;)V
      92: aload_1
      93: aconst_null
      94: invokevirtual #206                // Method com/amazonaws/services/s3/model/AbstractPutObjectRequest.setFile:(Ljava/io/File;)V
      97: aload_1
      98: areturn

  private com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream newS3CipherLiteInputStream(com.amazonaws.services.s3.model.AbstractPutObjectRequest, com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial, long);
    Code:
       0: aload_1
       1: invokevirtual #207                // Method com/amazonaws/services/s3/model/AbstractPutObjectRequest.getFile:()Ljava/io/File;
       4: astore        5
       6: aload_1
       7: invokevirtual #208                // Method com/amazonaws/services/s3/model/AbstractPutObjectRequest.getInputStream:()Ljava/io/InputStream;
      10: astore        6
      12: aconst_null
      13: astore        7
      15: aload         5
      17: ifnonnull     39
      20: aload         6
      22: ifnonnull     29
      25: aconst_null
      26: goto          34
      29: aload         6
      31: invokestatic  #209                // Method com/amazonaws/internal/ReleasableInputStream.wrap:(Ljava/io/InputStream;)Lcom/amazonaws/internal/ReleasableInputStream;
      34: astore        7
      36: goto          50
      39: new           #102                // class com/amazonaws/internal/ResettableInputStream
      42: dup
      43: aload         5
      45: invokespecial #103                // Method com/amazonaws/internal/ResettableInputStream."<init>":(Ljava/io/File;)V
      48: astore        7
      50: lload_3
      51: ldc2_w        #94                 // long -1l
      54: lcmp
      55: ifle          71
      58: new           #1                  // class com/amazonaws/util/LengthCheckInputStream
      61: dup
      62: aload         7
      64: lload_3
      65: iconst_0
      66: invokespecial #210                // Method com/amazonaws/util/LengthCheckInputStream."<init>":(Ljava/io/InputStream;JZ)V
      69: astore        7
      71: aload_2
      72: invokevirtual #211                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.getCipherLite:()Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      75: astore        8
      77: aload         8
      79: invokevirtual #107                // Method com/amazonaws/services/s3/internal/crypto/CipherLite.markSupported:()Z
      82: ifeq          100
      85: new           #108                // class com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream
      88: dup
      89: aload         7
      91: aload         8
      93: sipush        2048
      96: invokespecial #212                // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;I)V
      99: areturn
     100: new           #111                // class com/amazonaws/services/s3/internal/crypto/RenewableCipherLiteInputStream
     103: dup
     104: aload         7
     106: aload         8
     108: sipush        2048
     111: invokespecial #213                // Method com/amazonaws/services/s3/internal/crypto/RenewableCipherLiteInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;I)V
     114: areturn
     115: astore        8
     117: aload_1
     118: aload         5
     120: aload         6
     122: aload         7
     124: aload_0
     125: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
     128: invokestatic  #39                 // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     131: aload         8
     133: ldc           #114                // String Unable to create cipher input stream
     135: invokestatic  #115                // Method com/amazonaws/util/Throwables.failure:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/RuntimeException;
     138: athrow
    Exception table:
       from    to  target type
          15    99   115   Class java/lang/Exception
         100   114   115   Class java/lang/Exception

  protected final long plaintextLength(com.amazonaws.services.s3.model.AbstractPutObjectRequest, com.amazonaws.services.s3.model.ObjectMetadata);
    Code:
       0: aload_1
       1: invokevirtual #207                // Method com/amazonaws/services/s3/model/AbstractPutObjectRequest.getFile:()Ljava/io/File;
       4: ifnull        15
       7: aload_1
       8: invokevirtual #207                // Method com/amazonaws/services/s3/model/AbstractPutObjectRequest.getFile:()Ljava/io/File;
      11: invokevirtual #214                // Method java/io/File.length:()J
      14: lreturn
      15: aload_1
      16: invokevirtual #208                // Method com/amazonaws/services/s3/model/AbstractPutObjectRequest.getInputStream:()Ljava/io/InputStream;
      19: ifnull        36
      22: aload_2
      23: ldc           #215                // String Content-Length
      25: invokevirtual #216                // Method com/amazonaws/services/s3/model/ObjectMetadata.getRawMetadataValue:(Ljava/lang/String;)Ljava/lang/Object;
      28: ifnull        36
      31: aload_2
      32: invokevirtual #217                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentLength:()J
      35: lreturn
      36: ldc2_w        #94                 // long -1l
      39: lreturn

  public final com.amazonaws.services.s3.internal.crypto.S3CryptoScheme getS3CryptoScheme();
    Code:
       0: aload_0
       1: getfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
       4: areturn

  protected final com.amazonaws.services.s3.model.PutObjectRequest updateInstructionPutRequest(com.amazonaws.services.s3.model.PutObjectRequest, com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
       5: invokevirtual #18                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoMode:()Lcom/amazonaws/services/s3/model/CryptoMode;
       8: invokevirtual #218                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.toJsonString:(Lcom/amazonaws/services/s3/model/CryptoMode;)Ljava/lang/String;
      11: getstatic     #219                // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      14: invokevirtual #220                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      17: astore_3
      18: aload_1
      19: invokevirtual #35                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      22: astore        4
      24: aload         4
      26: ifnonnull     44
      29: new           #63                 // class com/amazonaws/services/s3/model/ObjectMetadata
      32: dup
      33: invokespecial #64                 // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      36: astore        4
      38: aload_1
      39: aload         4
      41: invokevirtual #37                 // Method com/amazonaws/services/s3/model/PutObjectRequest.setMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      44: aload         4
      46: aload_3
      47: arraylength
      48: i2l
      49: invokevirtual #202                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentLength:(J)V
      52: aload         4
      54: ldc           #221                // String x-amz-crypto-instr-file
      56: ldc           #222                // String
      58: invokevirtual #196                // Method com/amazonaws/services/s3/model/ObjectMetadata.addUserMetadata:(Ljava/lang/String;Ljava/lang/String;)V
      61: aload_1
      62: aload         4
      64: invokevirtual #37                 // Method com/amazonaws/services/s3/model/PutObjectRequest.setMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      67: aload_1
      68: new           #223                // class java/io/ByteArrayInputStream
      71: dup
      72: aload_3
      73: invokespecial #224                // Method java/io/ByteArrayInputStream."<init>":([B)V
      76: invokevirtual #225                // Method com/amazonaws/services/s3/model/PutObjectRequest.setInputStream:(Ljava/io/InputStream;)V
      79: aload_1
      80: areturn

  protected final com.amazonaws.services.s3.model.PutObjectRequest createInstructionPutRequest(java.lang.String, java.lang.String, com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial);
    Code:
       0: aload_3
       1: aload_0
       2: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
       5: invokevirtual #18                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoMode:()Lcom/amazonaws/services/s3/model/CryptoMode;
       8: invokevirtual #218                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.toJsonString:(Lcom/amazonaws/services/s3/model/CryptoMode;)Ljava/lang/String;
      11: getstatic     #219                // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      14: invokevirtual #220                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      17: astore        4
      19: new           #223                // class java/io/ByteArrayInputStream
      22: dup
      23: aload         4
      25: invokespecial #224                // Method java/io/ByteArrayInputStream."<init>":([B)V
      28: astore        5
      30: new           #63                 // class com/amazonaws/services/s3/model/ObjectMetadata
      33: dup
      34: invokespecial #64                 // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      37: astore        6
      39: aload         6
      41: aload         4
      43: arraylength
      44: i2l
      45: invokevirtual #202                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentLength:(J)V
      48: aload         6
      50: ldc           #221                // String x-amz-crypto-instr-file
      52: ldc           #222                // String
      54: invokevirtual #196                // Method com/amazonaws/services/s3/model/ObjectMetadata.addUserMetadata:(Ljava/lang/String;Ljava/lang/String;)V
      57: new           #226                // class com/amazonaws/services/s3/model/S3ObjectId
      60: dup
      61: aload_1
      62: aload_2
      63: invokespecial #227                // Method com/amazonaws/services/s3/model/S3ObjectId."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      66: invokevirtual #228                // Method com/amazonaws/services/s3/model/S3ObjectId.instructionFileId:()Lcom/amazonaws/services/s3/model/InstructionFileId;
      69: astore        7
      71: new           #34                 // class com/amazonaws/services/s3/model/PutObjectRequest
      74: dup
      75: aload         7
      77: invokevirtual #229                // Method com/amazonaws/services/s3/model/InstructionFileId.getBucket:()Ljava/lang/String;
      80: aload         7
      82: invokevirtual #230                // Method com/amazonaws/services/s3/model/InstructionFileId.getKey:()Ljava/lang/String;
      85: aload         5
      87: aload         6
      89: invokespecial #231                // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      92: areturn

  final <X extends com.amazonaws.AmazonWebServiceRequest> X appendUserAgent(X, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #232                // Method com/amazonaws/AmazonWebServiceRequest.getRequestClientOptions:()Lcom/amazonaws/RequestClientOptions;
       4: aload_2
       5: invokevirtual #233                // Method com/amazonaws/RequestClientOptions.appendUserAgent:(Ljava/lang/String;)V
       8: aload_1
       9: areturn

  protected void securityCheck(com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial, com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper);
    Code:
       0: return

  final com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper fetchInstructionFile(com.amazonaws.services.s3.model.S3ObjectId, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #234                // Method createInstructionGetRequest:(Lcom/amazonaws/services/s3/model/S3ObjectId;Ljava/lang/String;)Lcom/amazonaws/services/s3/model/GetObjectRequest;
      10: invokevirtual #235                // Method com/amazonaws/services/s3/internal/S3Direct.getObject:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)Lcom/amazonaws/services/s3/model/S3Object;
      13: astore_3
      14: aload_3
      15: ifnonnull     22
      18: aconst_null
      19: goto          31
      22: new           #236                // class com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper
      25: dup
      26: aload_3
      27: aload_1
      28: invokespecial #237                // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper."<init>":(Lcom/amazonaws/services/s3/model/S3Object;Lcom/amazonaws/services/s3/model/S3ObjectId;)V
      31: areturn
      32: astore_3
      33: aload_0
      34: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      37: invokeinterface #239,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      42: ifeq          76
      45: aload_0
      46: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      49: new           #43                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #240                // String Unable to retrieve instruction file :
      58: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_3
      62: invokevirtual #241                // Method com/amazonaws/AmazonServiceException.getMessage:()Ljava/lang/String;
      65: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokeinterface #242,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      76: aconst_null
      77: areturn
    Exception table:
       from    to  target type
           0    31    32   Class com/amazonaws/AmazonServiceException

  public final com.amazonaws.services.s3.model.PutObjectResult putInstructionFileSecurely(com.amazonaws.services.s3.model.PutInstructionFileRequest);
    Code:
       0: aload_1
       1: invokevirtual #243                // Method com/amazonaws/services/s3/model/PutInstructionFileRequest.getS3ObjectId:()Lcom/amazonaws/services/s3/model/S3ObjectId;
       4: astore_2
       5: new           #244                // class com/amazonaws/services/s3/model/GetObjectRequest
       8: dup
       9: aload_2
      10: invokespecial #245                // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Lcom/amazonaws/services/s3/model/S3ObjectId;)V
      13: astore_3
      14: aload_0
      15: aload_3
      16: getstatic     #24                 // Field com/amazonaws/services/s3/AmazonS3EncryptionClient.USER_AGENT:Ljava/lang/String;
      19: invokevirtual #25                 // Method appendUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)Lcom/amazonaws/AmazonWebServiceRequest;
      22: pop
      23: aload_0
      24: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      27: aload_3
      28: invokevirtual #235                // Method com/amazonaws/services/s3/internal/S3Direct.getObject:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)Lcom/amazonaws/services/s3/model/S3Object;
      31: astore        4
      33: aload         4
      35: aload_0
      36: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
      39: invokestatic  #144                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      42: aload         4
      44: ifnonnull     79
      47: new           #12                 // class java/lang/IllegalArgumentException
      50: dup
      51: new           #43                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #246                // String The specified S3 object (
      60: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_2
      64: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #247                // String ) doesn\'t exist.
      69: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: new           #236                // class com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper
      82: dup
      83: aload         4
      85: aload_2
      86: invokespecial #237                // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper."<init>":(Lcom/amazonaws/services/s3/model/S3Object;Lcom/amazonaws/services/s3/model/S3ObjectId;)V
      89: astore        5
      91: aload_0
      92: aload         5
      94: invokespecial #248                // Method contentCryptoMaterialOf:(Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      97: astore        6
      99: getstatic     #249                // Field com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.AES_GCM:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
     102: aload         6
     104: invokevirtual #250                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.getContentCryptoScheme:()Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
     107: invokevirtual #251                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     110: ifeq          136
     113: aload_0
     114: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
     117: invokevirtual #18                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoMode:()Lcom/amazonaws/services/s3/model/CryptoMode;
     120: getstatic     #252                // Field com/amazonaws/services/s3/model/CryptoMode.EncryptionOnly:Lcom/amazonaws/services/s3/model/CryptoMode;
     123: if_acmpne     136
     126: new           #253                // class java/lang/SecurityException
     129: dup
     130: ldc           #254                // String Lowering the protection of encryption material is not allowed
     132: invokespecial #255                // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload_0
     137: aload         6
     139: aload         5
     141: invokevirtual #256                // Method securityCheck:(Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;)V
     144: aload_1
     145: invokevirtual #257                // Method com/amazonaws/services/s3/model/PutInstructionFileRequest.getEncryptionMaterials:()Lcom/amazonaws/services/s3/model/EncryptionMaterials;
     148: astore        7
     150: aload         7
     152: ifnonnull     189
     155: aload         6
     157: aload_1
     158: invokevirtual #258                // Method com/amazonaws/services/s3/model/PutInstructionFileRequest.getMaterialsDescription:()Ljava/util/Map;
     161: aload_0
     162: getfield      #15                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
     165: aload_0
     166: getfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
     169: aload_0
     170: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
     173: invokevirtual #129                // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoProvider:()Ljava/security/Provider;
     176: aload_0
     177: getfield      #23                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
     180: aload_1
     181: invokevirtual #259                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.recreate:(Ljava/util/Map;Lcom/amazonaws/services/s3/model/EncryptionMaterialsAccessor;Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;Ljava/security/Provider;Lcom/amazonaws/services/kms/AWSKMSClient;Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
     184: astore        8
     186: goto          218
     189: aload         6
     191: aload         7
     193: aload_0
     194: getfield      #15                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
     197: aload_0
     198: getfield      #20                 // Field cryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;
     201: aload_0
     202: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
     205: invokevirtual #129                // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoProvider:()Ljava/security/Provider;
     208: aload_0
     209: getfield      #23                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
     212: aload_1
     213: invokevirtual #260                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.recreate:(Lcom/amazonaws/services/s3/model/EncryptionMaterials;Lcom/amazonaws/services/s3/model/EncryptionMaterialsAccessor;Lcom/amazonaws/services/s3/internal/crypto/S3CryptoScheme;Ljava/security/Provider;Lcom/amazonaws/services/kms/AWSKMSClient;Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
     216: astore        8
     218: aload_1
     219: aload         4
     221: invokevirtual #261                // Method com/amazonaws/services/s3/model/PutInstructionFileRequest.createPutObjectRequest:(Lcom/amazonaws/services/s3/model/S3Object;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
     224: astore        9
     226: aload_0
     227: getfield      #16                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
     230: aload_0
     231: aload         9
     233: aload         8
     235: invokevirtual #51                 // Method updateInstructionPutRequest:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
     238: invokevirtual #38                 // Method com/amazonaws/services/s3/internal/S3Direct.putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
     241: areturn
     242: astore        6
     244: aload         4
     246: aload_0
     247: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
     250: invokestatic  #144                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     253: aload         6
     255: athrow
     256: astore        6
     258: aload         4
     260: aload_0
     261: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;
     264: invokestatic  #144                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     267: aload         6
     269: athrow
    Exception table:
       from    to  target type
          91   241   242   Class java/lang/RuntimeException
          91   241   256   Class java/lang/Error

  private com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial contentCryptoMaterialOf(com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper);
    Code:
       0: aload_1
       1: invokevirtual #264                // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.hasEncryptionInfo:()Z
       4: ifeq          31
       7: aload_1
       8: invokevirtual #265                // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      11: aload_0
      12: getfield      #15                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
      15: aload_0
      16: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      19: invokevirtual #129                // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoProvider:()Ljava/security/Provider;
      22: iconst_0
      23: aload_0
      24: getfield      #23                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      27: invokestatic  #266                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.fromObjectMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;Lcom/amazonaws/services/s3/model/EncryptionMaterialsAccessor;Ljava/security/Provider;ZLcom/amazonaws/services/kms/AWSKMSClient;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      30: areturn
      31: aload_0
      32: aload_1
      33: invokevirtual #267                // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getS3ObjectId:()Lcom/amazonaws/services/s3/model/S3ObjectId;
      36: aconst_null
      37: invokevirtual #268                // Method fetchInstructionFile:(Lcom/amazonaws/services/s3/model/S3ObjectId;Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;
      40: astore_2
      41: aload_2
      42: ifnonnull     73
      45: new           #12                 // class java/lang/IllegalArgumentException
      48: dup
      49: new           #43                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc_w         #269                // String S3 object is not encrypted:
      59: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_2
      74: invokevirtual #270                // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.isInstructionFile:()Z
      77: ifne          108
      80: new           #77                 // class com/amazonaws/AmazonClientException
      83: dup
      84: new           #43                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc_w         #271                // String Invalid instruction file for S3 object:
      94: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_1
      98: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #81                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_2
     109: invokevirtual #272                // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.toJsonString:()Ljava/lang/String;
     112: astore_3
     113: aload_0
     114: aload_3
     115: invokespecial #273                // Method ccmFromJson:(Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
     118: areturn

  private com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial ccmFromJson(java.lang.String);
    Code:
       0: aload_1
       1: ldc_w         #274                // class java/util/Map
       4: invokestatic  #275                // Method com/amazonaws/util/json/Jackson.fromJsonString:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       7: checkcast     #274                // class java/util/Map
      10: invokestatic  #276                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      13: astore_2
      14: aload_2
      15: aload_0
      16: getfield      #15                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
      19: aload_0
      20: getfield      #17                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      23: invokevirtual #129                // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoProvider:()Ljava/security/Provider;
      26: iconst_0
      27: aload_0
      28: getfield      #23                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      31: invokestatic  #277                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.fromInstructionFile:(Ljava/util/Map;Lcom/amazonaws/services/s3/model/EncryptionMaterialsAccessor;Ljava/security/Provider;ZLcom/amazonaws/services/kms/AWSKMSClient;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      34: areturn

  final com.amazonaws.services.s3.model.GetObjectRequest createInstructionGetRequest(com.amazonaws.services.s3.model.S3ObjectId);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #234                // Method createInstructionGetRequest:(Lcom/amazonaws/services/s3/model/S3ObjectId;Ljava/lang/String;)Lcom/amazonaws/services/s3/model/GetObjectRequest;
       6: areturn

  final com.amazonaws.services.s3.model.GetObjectRequest createInstructionGetRequest(com.amazonaws.services.s3.model.S3ObjectId, java.lang.String);
    Code:
       0: new           #244                // class com/amazonaws/services/s3/model/GetObjectRequest
       3: dup
       4: aload_1
       5: aload_2
       6: invokevirtual #278                // Method com/amazonaws/services/s3/model/S3ObjectId.instructionFileId:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/InstructionFileId;
       9: invokespecial #245                // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Lcom/amazonaws/services/s3/model/S3ObjectId;)V
      12: areturn

  static long[] getAdjustedCryptoRange(long[]);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: iconst_0
       6: laload
       7: aload_0
       8: iconst_1
       9: laload
      10: lcmp
      11: ifle          16
      14: aconst_null
      15: areturn
      16: iconst_2
      17: newarray       long
      19: astore_1
      20: aload_1
      21: iconst_0
      22: aload_0
      23: iconst_0
      24: laload
      25: invokestatic  #279                // Method getCipherBlockLowerBound:(J)J
      28: lastore
      29: aload_1
      30: iconst_1
      31: aload_0
      32: iconst_1
      33: laload
      34: invokestatic  #280                // Method getCipherBlockUpperBound:(J)J
      37: lastore
      38: aload_1
      39: areturn

  private static long getCipherBlockLowerBound(long);
    Code:
       0: ldc2_w        #282                // long 16l
       3: lstore_2
       4: lload_0
       5: lload_2
       6: lrem
       7: lstore        4
       9: lload_0
      10: lload         4
      12: lsub
      13: lload_2
      14: lsub
      15: lstore        6
      17: lload         6
      19: lconst_0
      20: lcmp
      21: ifge          28
      24: lconst_0
      25: goto          30
      28: lload         6
      30: lreturn

  private static long getCipherBlockUpperBound(long);
    Code:
       0: ldc2_w        #282                // long 16l
       3: lstore_2
       4: lload_2
       5: lload_0
       6: lload_2
       7: lrem
       8: lsub
       9: lstore        4
      11: lload_0
      12: lload         4
      14: ladd
      15: lload_2
      16: ladd
      17: lstore        6
      19: lload         6
      21: lconst_0
      22: lcmp
      23: ifge          32
      26: ldc2_w        #285                // long 9223372036854775807l
      29: goto          34
      32: lload         6
      34: lreturn
}
