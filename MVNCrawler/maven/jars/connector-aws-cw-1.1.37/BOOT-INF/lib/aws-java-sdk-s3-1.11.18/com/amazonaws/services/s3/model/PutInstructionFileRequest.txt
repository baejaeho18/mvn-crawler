Compiled from "PutInstructionFileRequest.java"
public final class com.amazonaws.services.s3.model.PutInstructionFileRequest extends com.amazonaws.AmazonWebServiceRequest implements com.amazonaws.services.s3.model.MaterialsDescriptionProvider,com.amazonaws.services.s3.model.EncryptionMaterialsFactory {
  private final com.amazonaws.services.s3.model.S3ObjectId s3ObjectId;

  private final com.amazonaws.services.s3.model.EncryptionMaterials encryptionMaterials;

  private final java.util.Map<java.lang.String, java.lang.String> matDesc;

  private final java.lang.String suffix;

  private com.amazonaws.services.s3.model.CannedAccessControlList cannedAcl;

  private com.amazonaws.services.s3.model.AccessControlList accessControlList;

  private java.lang.String redirectLocation;

  private java.lang.String storageClass;

  public com.amazonaws.services.s3.model.PutInstructionFileRequest(com.amazonaws.services.s3.model.S3ObjectId, java.util.Map<java.lang.String, java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: instanceof    #2                  // class com/amazonaws/services/s3/model/InstructionFileId
      12: ifeq          25
      15: new           #3                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #4                  // String Invalid s3 object id
      21: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_3
      26: ifnull        39
      29: aload_3
      30: invokevirtual #6                  // Method java/lang/String.trim:()Ljava/lang/String;
      33: invokevirtual #7                  // Method java/lang/String.isEmpty:()Z
      36: ifeq          49
      39: new           #3                  // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #8                  // String suffix must be specified
      45: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload_1
      51: putfield      #9                  // Field s3ObjectId:Lcom/amazonaws/services/s3/model/S3ObjectId;
      54: aload_2
      55: ifnonnull     64
      58: getstatic     #10                 // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
      61: goto          75
      64: new           #11                 // class java/util/HashMap
      67: dup
      68: aload_2
      69: invokespecial #12                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      72: invokestatic  #13                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      75: astore        4
      77: aload_0
      78: aload         4
      80: putfield      #14                 // Field matDesc:Ljava/util/Map;
      83: aload_0
      84: aload_3
      85: putfield      #15                 // Field suffix:Ljava/lang/String;
      88: aload_0
      89: aconst_null
      90: putfield      #16                 // Field encryptionMaterials:Lcom/amazonaws/services/s3/model/EncryptionMaterials;
      93: return

  public com.amazonaws.services.s3.model.PutInstructionFileRequest(com.amazonaws.services.s3.model.S3ObjectId, com.amazonaws.services.s3.model.EncryptionMaterials, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: instanceof    #2                  // class com/amazonaws/services/s3/model/InstructionFileId
      12: ifeq          25
      15: new           #3                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #4                  // String Invalid s3 object id
      21: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_3
      26: ifnull        39
      29: aload_3
      30: invokevirtual #6                  // Method java/lang/String.trim:()Ljava/lang/String;
      33: invokevirtual #7                  // Method java/lang/String.isEmpty:()Z
      36: ifeq          49
      39: new           #3                  // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #8                  // String suffix must be specified
      45: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_2
      50: ifnonnull     63
      53: new           #3                  // class java/lang/IllegalArgumentException
      56: dup
      57: ldc           #17                 // String encryption materials must be specified
      59: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: aload_1
      65: putfield      #9                  // Field s3ObjectId:Lcom/amazonaws/services/s3/model/S3ObjectId;
      68: aload_0
      69: aload_3
      70: putfield      #15                 // Field suffix:Ljava/lang/String;
      73: aload_0
      74: aload_2
      75: putfield      #16                 // Field encryptionMaterials:Lcom/amazonaws/services/s3/model/EncryptionMaterials;
      78: aload_0
      79: aconst_null
      80: putfield      #14                 // Field matDesc:Ljava/util/Map;
      83: return

  public com.amazonaws.services.s3.model.S3ObjectId getS3ObjectId();
    Code:
       0: aload_0
       1: getfield      #9                  // Field s3ObjectId:Lcom/amazonaws/services/s3/model/S3ObjectId;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getMaterialsDescription();
    Code:
       0: aload_0
       1: getfield      #14                 // Field matDesc:Ljava/util/Map;
       4: ifnonnull     17
       7: aload_0
       8: getfield      #16                 // Field encryptionMaterials:Lcom/amazonaws/services/s3/model/EncryptionMaterials;
      11: invokevirtual #18                 // Method com/amazonaws/services/s3/model/EncryptionMaterials.getMaterialsDescription:()Ljava/util/Map;
      14: goto          21
      17: aload_0
      18: getfield      #14                 // Field matDesc:Ljava/util/Map;
      21: areturn

  public com.amazonaws.services.s3.model.EncryptionMaterials getEncryptionMaterials();
    Code:
       0: aload_0
       1: getfield      #16                 // Field encryptionMaterials:Lcom/amazonaws/services/s3/model/EncryptionMaterials;
       4: areturn

  public java.lang.String getSuffix();
    Code:
       0: aload_0
       1: getfield      #15                 // Field suffix:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.s3.model.CannedAccessControlList getCannedAcl();
    Code:
       0: aload_0
       1: getfield      #19                 // Field cannedAcl:Lcom/amazonaws/services/s3/model/CannedAccessControlList;
       4: areturn

  public void setCannedAcl(com.amazonaws.services.s3.model.CannedAccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field cannedAcl:Lcom/amazonaws/services/s3/model/CannedAccessControlList;
       5: return

  public com.amazonaws.services.s3.model.PutInstructionFileRequest withCannedAcl(com.amazonaws.services.s3.model.CannedAccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setCannedAcl:(Lcom/amazonaws/services/s3/model/CannedAccessControlList;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.AccessControlList getAccessControlList();
    Code:
       0: aload_0
       1: getfield      #21                 // Field accessControlList:Lcom/amazonaws/services/s3/model/AccessControlList;
       4: areturn

  public void setAccessControlList(com.amazonaws.services.s3.model.AccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field accessControlList:Lcom/amazonaws/services/s3/model/AccessControlList;
       5: return

  public com.amazonaws.services.s3.model.PutInstructionFileRequest withAccessControlList(com.amazonaws.services.s3.model.AccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method setAccessControlList:(Lcom/amazonaws/services/s3/model/AccessControlList;)V
       5: aload_0
       6: areturn

  public java.lang.String getRedirectLocation();
    Code:
       0: aload_0
       1: getfield      #23                 // Field redirectLocation:Ljava/lang/String;
       4: areturn

  public void setRedirectLocation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field redirectLocation:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.PutInstructionFileRequest withRedirectLocation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field redirectLocation:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getStorageClass();
    Code:
       0: aload_0
       1: getfield      #24                 // Field storageClass:Ljava/lang/String;
       4: areturn

  public void setStorageClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field storageClass:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.PutInstructionFileRequest withStorageClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method setStorageClass:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setStorageClass(com.amazonaws.services.s3.model.StorageClass);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method com/amazonaws/services/s3/model/StorageClass.toString:()Ljava/lang/String;
       5: putfield      #24                 // Field storageClass:Ljava/lang/String;
       8: return

  public com.amazonaws.services.s3.model.PutInstructionFileRequest withStorageClass(com.amazonaws.services.s3.model.StorageClass);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method setStorageClass:(Lcom/amazonaws/services/s3/model/StorageClass;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.PutObjectRequest createPutObjectRequest(com.amazonaws.services.s3.model.S3Object);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method com/amazonaws/services/s3/model/S3Object.getBucketName:()Ljava/lang/String;
       4: aload_0
       5: getfield      #9                  // Field s3ObjectId:Lcom/amazonaws/services/s3/model/S3ObjectId;
       8: invokevirtual #29                 // Method com/amazonaws/services/s3/model/S3ObjectId.getBucket:()Ljava/lang/String;
      11: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          34
      17: aload_1
      18: invokevirtual #31                 // Method com/amazonaws/services/s3/model/S3Object.getKey:()Ljava/lang/String;
      21: aload_0
      22: getfield      #9                  // Field s3ObjectId:Lcom/amazonaws/services/s3/model/S3ObjectId;
      25: invokevirtual #32                 // Method com/amazonaws/services/s3/model/S3ObjectId.getKey:()Ljava/lang/String;
      28: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifne          44
      34: new           #3                  // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #33                 // String s3Object passed inconsistent with the instruction file being created
      40: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #9                  // Field s3ObjectId:Lcom/amazonaws/services/s3/model/S3ObjectId;
      48: aload_0
      49: getfield      #15                 // Field suffix:Ljava/lang/String;
      52: invokevirtual #34                 // Method com/amazonaws/services/s3/model/S3ObjectId.instructionFileId:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/InstructionFileId;
      55: astore_2
      56: new           #35                 // class com/amazonaws/services/s3/model/PutObjectRequest
      59: dup
      60: aload_2
      61: invokevirtual #36                 // Method com/amazonaws/services/s3/model/InstructionFileId.getBucket:()Ljava/lang/String;
      64: aload_2
      65: invokevirtual #37                 // Method com/amazonaws/services/s3/model/InstructionFileId.getKey:()Ljava/lang/String;
      68: aload_0
      69: getfield      #23                 // Field redirectLocation:Ljava/lang/String;
      72: invokespecial #38                 // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      75: aload_0
      76: getfield      #21                 // Field accessControlList:Lcom/amazonaws/services/s3/model/AccessControlList;
      79: invokevirtual #39                 // Method com/amazonaws/services/s3/model/PutObjectRequest.withAccessControlList:(Lcom/amazonaws/services/s3/model/AccessControlList;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
      82: aload_0
      83: getfield      #19                 // Field cannedAcl:Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      86: invokevirtual #40                 // Method com/amazonaws/services/s3/model/PutObjectRequest.withCannedAcl:(Lcom/amazonaws/services/s3/model/CannedAccessControlList;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
      89: aload_0
      90: getfield      #24                 // Field storageClass:Ljava/lang/String;
      93: invokevirtual #41                 // Method com/amazonaws/services/s3/model/PutObjectRequest.withStorageClass:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
      96: aload_0
      97: invokevirtual #42                 // Method getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
     100: invokevirtual #43                 // Method com/amazonaws/services/s3/model/PutObjectRequest.withGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/AmazonWebServiceRequest;
     103: aload_0
     104: invokevirtual #44                 // Method getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
     107: invokevirtual #45                 // Method com/amazonaws/AmazonWebServiceRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
     110: checkcast     #35                 // class com/amazonaws/services/s3/model/PutObjectRequest
     113: areturn
}
