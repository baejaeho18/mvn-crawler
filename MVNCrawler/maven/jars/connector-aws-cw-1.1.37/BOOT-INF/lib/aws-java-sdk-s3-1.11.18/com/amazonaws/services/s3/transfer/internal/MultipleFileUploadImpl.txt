Compiled from "MultipleFileUploadImpl.java"
public class com.amazonaws.services.s3.transfer.internal.MultipleFileUploadImpl extends com.amazonaws.services.s3.transfer.internal.MultipleFileTransfer<com.amazonaws.services.s3.transfer.Upload> implements com.amazonaws.services.s3.transfer.MultipleFileUpload {
  private final java.lang.String keyPrefix;

  private final java.lang.String bucketName;

  public com.amazonaws.services.s3.transfer.internal.MultipleFileUploadImpl(java.lang.String, com.amazonaws.services.s3.transfer.TransferProgress, com.amazonaws.event.ProgressListenerChain, java.lang.String, java.lang.String, java.util.Collection<? extends com.amazonaws.services.s3.transfer.Upload>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         6
       6: invokespecial #1                  // Method com/amazonaws/services/s3/transfer/internal/MultipleFileTransfer."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Ljava/util/Collection;)V
       9: aload_0
      10: aload         4
      12: putfield      #2                  // Field keyPrefix:Ljava/lang/String;
      15: aload_0
      16: aload         5
      18: putfield      #3                  // Field bucketName:Ljava/lang/String;
      21: return

  public java.lang.String getKeyPrefix();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyPrefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getBucketName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bucketName:Ljava/lang/String;
       4: areturn

  public void waitForCompletion() throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field subTransfers:Ljava/util/Collection;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: invokespecial #6                  // Method com/amazonaws/services/s3/transfer/internal/MultipleFileTransfer.waitForCompletion:()V
      17: return

  public java.util.Collection<? extends com.amazonaws.services.s3.transfer.Upload> getSubTransfers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field subTransfers:Ljava/util/Collection;
       4: invokestatic  #7                  // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
       7: areturn
}
