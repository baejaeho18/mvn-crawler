Compiled from "GeneratePresignedUrlRequest.java"
public class com.amazonaws.services.s3.model.GeneratePresignedUrlRequest extends com.amazonaws.AmazonWebServiceRequest implements com.amazonaws.services.s3.model.SSECustomerKeyProvider,java.io.Serializable {
  private com.amazonaws.HttpMethod method;

  private java.lang.String bucketName;

  private java.lang.String key;

  private java.lang.String contentType;

  private java.lang.String contentMd5;

  private java.util.Date expiration;

  private boolean zeroByteContent;

  private java.util.Map<java.lang.String, java.lang.String> requestParameters;

  private com.amazonaws.services.s3.model.ResponseHeaderOverrides responseHeaders;

  private com.amazonaws.services.s3.model.SSECustomerKey sseCustomerKey;

  private java.lang.String sseAlgorithm;

  private java.lang.String kmsCmkId;

  public java.lang.String getKmsCmkId();
    Code:
       0: aload_0
       1: getfield      #1                  // Field kmsCmkId:Ljava/lang/String;
       4: areturn

  public void setKmsCmkId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field kmsCmkId:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withKmsCmkId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method setKmsCmkId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String getSSEAlgorithm();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sseAlgorithm:Ljava/lang/String;
       4: areturn

  public void setSSEAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field sseAlgorithm:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withSSEAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method setSSEAlgorithm:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSSEAlgorithm(com.amazonaws.services.s3.model.SSEAlgorithm);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method com/amazonaws/services/s3/model/SSEAlgorithm.getAlgorithm:()Ljava/lang/String;
       5: putfield      #3                  // Field sseAlgorithm:Ljava/lang/String;
       8: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withSSEAlgorithm(com.amazonaws.services.s3.model.SSEAlgorithm);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method setSSEAlgorithm:(Lcom/amazonaws/services/s3/model/SSEAlgorithm;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #7                  // Field com/amazonaws/HttpMethod.GET:Lcom/amazonaws/HttpMethod;
       6: invokespecial #8                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/HttpMethod;)V
       9: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest(java.lang.String, java.lang.String, com.amazonaws.HttpMethod);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: aload_0
       5: new           #10                 // class java/util/HashMap
       8: dup
       9: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      12: putfield      #12                 // Field requestParameters:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #13                 // Field bucketName:Ljava/lang/String;
      20: aload_0
      21: aload_2
      22: putfield      #14                 // Field key:Ljava/lang/String;
      25: aload_0
      26: aload_3
      27: putfield      #15                 // Field method:Lcom/amazonaws/HttpMethod;
      30: return

  public com.amazonaws.HttpMethod getMethod();
    Code:
       0: aload_0
       1: getfield      #15                 // Field method:Lcom/amazonaws/HttpMethod;
       4: areturn

  public void setMethod(com.amazonaws.HttpMethod);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field method:Lcom/amazonaws/HttpMethod;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withMethod(com.amazonaws.HttpMethod);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method setMethod:(Lcom/amazonaws/HttpMethod;)V
       5: aload_0
       6: areturn

  public java.lang.String getBucketName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bucketName:Ljava/lang/String;
       4: areturn

  public void setBucketName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field bucketName:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withBucketName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setBucketName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #14                 // Field key:Ljava/lang/String;
       4: areturn

  public void setKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field key:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method setKey:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.Date getExpiration();
    Code:
       0: aload_0
       1: getfield      #19                 // Field expiration:Ljava/util/Date;
       4: areturn

  public void setExpiration(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field expiration:Ljava/util/Date;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withExpiration(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setExpiration:(Ljava/util/Date;)V
       5: aload_0
       6: areturn

  public void addRequestParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field requestParameters:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.util.Map<java.lang.String, java.lang.String> getRequestParameters();
    Code:
       0: aload_0
       1: getfield      #12                 // Field requestParameters:Ljava/util/Map;
       4: areturn

  public com.amazonaws.services.s3.model.ResponseHeaderOverrides getResponseHeaders();
    Code:
       0: aload_0
       1: getfield      #22                 // Field responseHeaders:Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;
       4: areturn

  public void setResponseHeaders(com.amazonaws.services.s3.model.ResponseHeaderOverrides);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field responseHeaders:Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withResponseHeaders(com.amazonaws.services.s3.model.ResponseHeaderOverrides);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method setResponseHeaders:(Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;)V
       5: aload_0
       6: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #24                 // Field contentType:Ljava/lang/String;
       4: areturn

  public void setContentType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field contentType:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withContentType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method setContentType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String getContentMd5();
    Code:
       0: aload_0
       1: getfield      #26                 // Field contentMd5:Ljava/lang/String;
       4: areturn

  public void setContentMd5(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field contentMd5:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withContentMd5(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field contentMd5:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.SSECustomerKey getSSECustomerKey();
    Code:
       0: aload_0
       1: getfield      #27                 // Field sseCustomerKey:Lcom/amazonaws/services/s3/model/SSECustomerKey;
       4: areturn

  public void setSSECustomerKey(com.amazonaws.services.s3.model.SSECustomerKey);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field sseCustomerKey:Lcom/amazonaws/services/s3/model/SSECustomerKey;
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withSSECustomerKey(com.amazonaws.services.s3.model.SSECustomerKey);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setSSECustomerKey:(Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
       5: aload_0
       6: areturn

  public void setSSECustomerKeyAlgorithm(com.amazonaws.services.s3.model.SSEAlgorithm);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aconst_null
       6: putfield      #27                 // Field sseCustomerKey:Lcom/amazonaws/services/s3/model/SSECustomerKey;
       9: goto          71
      12: aload_1
      13: invokevirtual #5                  // Method com/amazonaws/services/s3/model/SSEAlgorithm.getAlgorithm:()Ljava/lang/String;
      16: getstatic     #29                 // Field com/amazonaws/services/s3/model/SSEAlgorithm.AES256:Lcom/amazonaws/services/s3/model/SSEAlgorithm;
      19: invokevirtual #5                  // Method com/amazonaws/services/s3/model/SSEAlgorithm.getAlgorithm:()Ljava/lang/String;
      22: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          42
      28: aload_0
      29: aload_1
      30: invokevirtual #5                  // Method com/amazonaws/services/s3/model/SSEAlgorithm.getAlgorithm:()Ljava/lang/String;
      33: invokestatic  #31                 // Method com/amazonaws/services/s3/model/SSECustomerKey.generateSSECustomerKeyForPresignUrl:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/SSECustomerKey;
      36: putfield      #27                 // Field sseCustomerKey:Lcom/amazonaws/services/s3/model/SSECustomerKey;
      39: goto          71
      42: new           #32                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #33                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #35                 // String Currently the only supported Server Side Encryption algorithm is
      55: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: getstatic     #29                 // Field com/amazonaws/services/s3/model/SSEAlgorithm.AES256:Lcom/amazonaws/services/s3/model/SSEAlgorithm;
      61: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withSSECustomerKeyAlgorithm(com.amazonaws.services.s3.model.SSEAlgorithm);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setSSECustomerKeyAlgorithm:(Lcom/amazonaws/services/s3/model/SSEAlgorithm;)V
       5: aload_0
       6: areturn

  public boolean isZeroByteContent();
    Code:
       0: aload_0
       1: getfield      #41                 // Field zeroByteContent:Z
       4: ireturn

  public void setZeroByteContent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field zeroByteContent:Z
       5: return

  public com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withZeroByteContent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #42                 // Method setZeroByteContent:(Z)V
       5: aload_0
       6: areturn

  public void rejectIllegalArguments();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bucketName:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #32                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #43                 // String The bucket name parameter must be specified when generating a pre-signed URL
      13: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #15                 // Field method:Lcom/amazonaws/HttpMethod;
      21: ifnonnull     34
      24: new           #32                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #44                 // String The HTTP method request parameter must be specified when generating a pre-signed URL
      30: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #27                 // Field sseCustomerKey:Lcom/amazonaws/services/s3/model/SSECustomerKey;
      38: ifnull        75
      41: aload_0
      42: getfield      #3                  // Field sseAlgorithm:Ljava/lang/String;
      45: ifnull        58
      48: new           #32                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #45                 // String Either SSE or SSE-C can be specified but not both
      54: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: getfield      #1                  // Field kmsCmkId:Ljava/lang/String;
      62: ifnull        127
      65: new           #32                 // class java/lang/IllegalArgumentException
      68: dup
      69: ldc           #46                 // String KMS CMK is not applicable for SSE-C
      71: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: getfield      #1                  // Field kmsCmkId:Ljava/lang/String;
      79: ifnull        127
      82: getstatic     #47                 // Field com/amazonaws/services/s3/model/SSEAlgorithm.KMS:Lcom/amazonaws/services/s3/model/SSEAlgorithm;
      85: invokevirtual #5                  // Method com/amazonaws/services/s3/model/SSEAlgorithm.getAlgorithm:()Ljava/lang/String;
      88: aload_0
      89: getfield      #3                  // Field sseAlgorithm:Ljava/lang/String;
      92: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      95: ifne          127
      98: new           #32                 // class java/lang/IllegalArgumentException
     101: dup
     102: new           #33                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #48                 // String For KMS server side encryption, the SSE algorithm must be set to
     111: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: getstatic     #47                 // Field com/amazonaws/services/s3/model/SSEAlgorithm.KMS:Lcom/amazonaws/services/s3/model/SSEAlgorithm;
     117: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: return
}
