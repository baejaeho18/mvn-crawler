Compiled from "RenewableCipherLiteInputStream.java"
public final class com.amazonaws.services.s3.internal.crypto.RenewableCipherLiteInputStream extends com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream {
  private boolean hasBeenAccessed;

  public com.amazonaws.services.s3.internal.crypto.RenewableCipherLiteInputStream(java.io.InputStream, com.amazonaws.services.s3.internal.crypto.CipherLite);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;)V
       6: return

  public com.amazonaws.services.s3.internal.crypto.RenewableCipherLiteInputStream(java.io.InputStream, com.amazonaws.services.s3.internal.crypto.CipherLite, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #2                  // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;I)V
       7: return

  public com.amazonaws.services.s3.internal.crypto.RenewableCipherLiteInputStream(java.io.InputStream, com.amazonaws.services.s3.internal.crypto.CipherLite, int, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: invokespecial #3                  // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;IZZ)V
      11: return

  protected com.amazonaws.services.s3.internal.crypto.RenewableCipherLiteInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream."<init>":(Ljava/io/InputStream;)V
       5: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #6                  // Field in:Ljava/io/InputStream;
       8: invokevirtual #7                  // Method java/io/InputStream.markSupported:()Z
      11: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #8                  // Field hasBeenAccessed:Z
       8: ifeq          21
      11: new           #9                  // class java/lang/UnsupportedOperationException
      14: dup
      15: ldc           #10                 // String Marking is only supported before your first call to read or skip.
      17: invokespecial #11                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #6                  // Field in:Ljava/io/InputStream;
      25: iload_1
      26: invokevirtual #12                 // Method java/io/InputStream.mark:(I)V
      29: return

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #6                  // Field in:Ljava/io/InputStream;
       8: invokevirtual #13                 // Method java/io/InputStream.reset:()V
      11: aload_0
      12: invokevirtual #14                 // Method renewCipherLite:()V
      15: aload_0
      16: invokevirtual #15                 // Method resetInternal:()V
      19: aload_0
      20: iconst_0
      21: putfield      #8                  // Field hasBeenAccessed:Z
      24: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field hasBeenAccessed:Z
       5: aload_0
       6: invokespecial #16                 // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream.read:()I
       9: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field hasBeenAccessed:Z
       5: aload_0
       6: aload_1
       7: invokespecial #17                 // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream.read:([B)I
      10: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field hasBeenAccessed:Z
       5: aload_0
       6: aload_1
       7: iload_2
       8: iload_3
       9: invokespecial #18                 // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream.read:([BII)I
      12: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field hasBeenAccessed:Z
       5: aload_0
       6: lload_1
       7: invokespecial #19                 // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream.skip:(J)J
      10: lreturn
}
