Compiled from "DownloadCallable.java"
final class com.amazonaws.services.s3.transfer.DownloadCallable implements java.util.concurrent.Callable<java.io.File> {
  private static final org.apache.commons.logging.Log LOG;

  private final com.amazonaws.services.s3.AmazonS3 s3;

  private final java.util.concurrent.CountDownLatch latch;

  private final com.amazonaws.services.s3.model.GetObjectRequest req;

  private final boolean resumeExistingDownload;

  private final com.amazonaws.services.s3.transfer.internal.DownloadImpl download;

  private final java.io.File dstfile;

  private final long origStartingByte;

  private final long timeout;

  private final java.util.concurrent.ScheduledExecutorService timedExecutor;

  private final java.util.concurrent.ExecutorService executor;

  private final java.util.List<java.util.concurrent.Future<java.io.File>> futureFiles;

  private final boolean isDownloadParallel;

  private java.lang.Integer lastFullyMergedPartNumber;

  private long expectedFileLength;

  private static boolean testing;

  com.amazonaws.services.s3.transfer.DownloadCallable(com.amazonaws.services.s3.AmazonS3, java.util.concurrent.CountDownLatch, com.amazonaws.services.s3.model.GetObjectRequest, boolean, com.amazonaws.services.s3.transfer.internal.DownloadImpl, java.io.File, long, long, long, java.util.concurrent.ScheduledExecutorService, java.util.concurrent.ExecutorService, java.lang.Integer, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        26
       8: aload_2
       9: ifnull        26
      12: aload_3
      13: ifnull        26
      16: aload         6
      18: ifnull        26
      21: aload         5
      23: ifnonnull     34
      26: new           #3                  // class java/lang/IllegalArgumentException
      29: dup
      30: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":()V
      33: athrow
      34: aload_0
      35: aload_1
      36: putfield      #5                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      39: aload_0
      40: aload_2
      41: putfield      #6                  // Field latch:Ljava/util/concurrent/CountDownLatch;
      44: aload_0
      45: aload_3
      46: putfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      49: aload_0
      50: iload         4
      52: putfield      #8                  // Field resumeExistingDownload:Z
      55: aload_0
      56: aload         5
      58: putfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
      61: aload_0
      62: aload         6
      64: putfield      #9                  // Field dstfile:Ljava/io/File;
      67: aload_0
      68: lload         7
      70: putfield      #10                 // Field origStartingByte:J
      73: aload_0
      74: lload         9
      76: putfield      #11                 // Field expectedFileLength:J
      79: aload_0
      80: lload         11
      82: putfield      #12                 // Field timeout:J
      85: aload_0
      86: aload         13
      88: putfield      #13                 // Field timedExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      91: aload_0
      92: aload         14
      94: putfield      #14                 // Field executor:Ljava/util/concurrent/ExecutorService;
      97: aload_0
      98: new           #15                 // class java/util/ArrayList
     101: dup
     102: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
     105: putfield      #17                 // Field futureFiles:Ljava/util/List;
     108: aload_0
     109: aload         15
     111: putfield      #18                 // Field lastFullyMergedPartNumber:Ljava/lang/Integer;
     114: aload_0
     115: iload         16
     117: putfield      #19                 // Field isDownloadParallel:Z
     120: return

  public java.io.File call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field latch:Ljava/util/concurrent/CountDownLatch;
       4: invokevirtual #20                 // Method java/util/concurrent/CountDownLatch.await:()V
       7: aload_0
       8: invokespecial #21                 // Method isTimeoutEnabled:()Z
      11: ifeq          39
      14: aload_0
      15: getfield      #13                 // Field timedExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      18: new           #22                 // class com/amazonaws/services/s3/transfer/DownloadCallable$1
      21: dup
      22: aload_0
      23: invokespecial #23                 // Method com/amazonaws/services/s3/transfer/DownloadCallable$1."<init>":(Lcom/amazonaws/services/s3/transfer/DownloadCallable;)V
      26: aload_0
      27: getfield      #12                 // Field timeout:J
      30: getstatic     #24                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      33: invokeinterface #25,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      38: pop
      39: aload_0
      40: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
      43: getstatic     #26                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.InProgress:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      46: invokevirtual #27                 // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      49: aload_0
      50: getfield      #19                 // Field isDownloadParallel:Z
      53: ifeq          87
      56: aload_0
      57: aload_0
      58: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      61: aload_0
      62: getfield      #5                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      65: invokestatic  #28                 // Method com/amazonaws/services/s3/internal/ServiceUtils.getPartCount:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Lcom/amazonaws/services/s3/AmazonS3;)Ljava/lang/Integer;
      68: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      71: invokespecial #30                 // Method downloadInParallel:(I)V
      74: aload_0
      75: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
      78: getstatic     #31                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Completed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      81: invokevirtual #27                 // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      84: goto          124
      87: aload_0
      88: aload_0
      89: getfield      #9                  // Field dstfile:Ljava/io/File;
      92: new           #32                 // class com/amazonaws/services/s3/transfer/DownloadTaskImpl
      95: dup
      96: aload_0
      97: getfield      #5                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     100: aload_0
     101: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
     104: aload_0
     105: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
     108: invokespecial #33                 // Method com/amazonaws/services/s3/transfer/DownloadTaskImpl."<init>":(Lcom/amazonaws/services/s3/AmazonS3;Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;Lcom/amazonaws/services/s3/model/GetObjectRequest;)V
     111: aload_0
     112: getfield      #8                  // Field resumeExistingDownload:Z
     115: invokespecial #34                 // Method retryableDownloadS3ObjectToFile:(Ljava/io/File;Lcom/amazonaws/services/s3/internal/ServiceUtils$RetryableS3DownloadTask;Z)Lcom/amazonaws/services/s3/model/S3Object;
     118: astore_1
     119: aload_0
     120: aload_1
     121: invokespecial #35                 // Method updateDownloadStatus:(Lcom/amazonaws/services/s3/model/S3Object;)V
     124: aload_0
     125: getfield      #9                  // Field dstfile:Ljava/io/File;
     128: areturn
     129: astore_1
     130: aload_0
     131: getfield      #17                 // Field futureFiles:Ljava/util/List;
     134: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     139: astore_2
     140: aload_2
     141: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          170
     149: aload_2
     150: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     155: checkcast     #40                 // class java/util/concurrent/Future
     158: astore_3
     159: aload_3
     160: iconst_1
     161: invokeinterface #41,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     166: pop
     167: goto          140
     170: aload_0
     171: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
     174: invokevirtual #42                 // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.getState:()Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
     177: getstatic     #43                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Canceled:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
     180: if_acmpeq     193
     183: aload_0
     184: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
     187: getstatic     #44                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Failed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
     190: invokevirtual #27                 // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
     193: aload_1
     194: instanceof    #45                 // class java/lang/Exception
     197: ifeq          205
     200: aload_1
     201: checkcast     #45                 // class java/lang/Exception
     204: athrow
     205: aload_1
     206: checkcast     #46                 // class java/lang/Error
     209: athrow
    Exception table:
       from    to  target type
           0   128   129   Class java/lang/Throwable

  private void updateDownloadStatus(com.amazonaws.services.s3.model.S3Object);
    Code:
       0: aload_1
       1: ifnonnull     36
       4: aload_0
       5: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
       8: getstatic     #43                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Canceled:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      11: invokevirtual #27                 // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      14: aload_0
      15: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
      18: new           #47                 // class com/amazonaws/services/s3/transfer/internal/DownloadMonitor
      21: dup
      22: aload_0
      23: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
      26: aconst_null
      27: invokespecial #48                 // Method com/amazonaws/services/s3/transfer/internal/DownloadMonitor."<init>":(Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;Ljava/util/concurrent/Future;)V
      30: invokevirtual #49                 // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.setMonitor:(Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;)V
      33: goto          46
      36: aload_0
      37: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
      40: getstatic     #31                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Completed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      43: invokevirtual #27                 // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      46: return

  private void downloadInParallel(int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #18                 // Field lastFullyMergedPartNumber:Ljava/lang/Integer;
       4: ifnonnull     15
       7: aload_0
       8: iconst_0
       9: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: putfield      #18                 // Field lastFullyMergedPartNumber:Ljava/lang/Integer;
      15: aload_0
      16: getfield      #18                 // Field lastFullyMergedPartNumber:Ljava/lang/Integer;
      19: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      22: iconst_1
      23: iadd
      24: istore_2
      25: iload_2
      26: iload_1
      27: if_icmpgt     196
      30: new           #51                 // class com/amazonaws/services/s3/model/GetObjectRequest
      33: dup
      34: aload_0
      35: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      38: invokevirtual #52                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
      41: aload_0
      42: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      45: invokevirtual #53                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
      48: aload_0
      49: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      52: invokevirtual #54                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getVersionId:()Ljava/lang/String;
      55: invokespecial #55                 // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      58: aload_0
      59: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      62: invokevirtual #56                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getUnmodifiedSinceConstraint:()Ljava/util/Date;
      65: invokevirtual #57                 // Method com/amazonaws/services/s3/model/GetObjectRequest.withUnmodifiedSinceConstraint:(Ljava/util/Date;)Lcom/amazonaws/services/s3/model/GetObjectRequest;
      68: aload_0
      69: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      72: invokevirtual #58                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getModifiedSinceConstraint:()Ljava/util/Date;
      75: invokevirtual #59                 // Method com/amazonaws/services/s3/model/GetObjectRequest.withModifiedSinceConstraint:(Ljava/util/Date;)Lcom/amazonaws/services/s3/model/GetObjectRequest;
      78: aload_0
      79: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      82: invokevirtual #60                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getResponseHeaders:()Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;
      85: invokevirtual #61                 // Method com/amazonaws/services/s3/model/GetObjectRequest.withResponseHeaders:(Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;)Lcom/amazonaws/services/s3/model/GetObjectRequest;
      88: aload_0
      89: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      92: invokevirtual #62                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
      95: invokevirtual #63                 // Method com/amazonaws/services/s3/model/GetObjectRequest.withSSECustomerKey:(Lcom/amazonaws/services/s3/model/SSECustomerKey;)Lcom/amazonaws/services/s3/model/GetObjectRequest;
      98: aload_0
      99: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
     102: invokevirtual #64                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
     105: invokevirtual #65                 // Method com/amazonaws/services/s3/model/GetObjectRequest.withGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/AmazonWebServiceRequest;
     108: checkcast     #51                 // class com/amazonaws/services/s3/model/GetObjectRequest
     111: astore_3
     112: aload_3
     113: aload_0
     114: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
     117: invokevirtual #66                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getMatchingETagConstraints:()Ljava/util/List;
     120: invokevirtual #67                 // Method com/amazonaws/services/s3/model/GetObjectRequest.setMatchingETagConstraints:(Ljava/util/List;)V
     123: aload_3
     124: aload_0
     125: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
     128: invokevirtual #68                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getNonmatchingETagConstraints:()Ljava/util/List;
     131: invokevirtual #69                 // Method com/amazonaws/services/s3/model/GetObjectRequest.setNonmatchingETagConstraints:(Ljava/util/List;)V
     134: aload_3
     135: aload_0
     136: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
     139: invokevirtual #70                 // Method com/amazonaws/services/s3/model/GetObjectRequest.isRequesterPays:()Z
     142: invokevirtual #71                 // Method com/amazonaws/services/s3/model/GetObjectRequest.setRequesterPays:(Z)V
     145: aload_0
     146: getfield      #17                 // Field futureFiles:Ljava/util/List;
     149: aload_0
     150: getfield      #14                 // Field executor:Ljava/util/concurrent/ExecutorService;
     153: new           #72                 // class com/amazonaws/services/s3/transfer/internal/DownloadPartCallable
     156: dup
     157: aload_0
     158: getfield      #5                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     161: aload_3
     162: iload_2
     163: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     166: invokevirtual #73                 // Method com/amazonaws/services/s3/model/GetObjectRequest.withPartNumber:(Ljava/lang/Integer;)Lcom/amazonaws/services/s3/model/GetObjectRequest;
     169: aload_0
     170: getfield      #9                  // Field dstfile:Ljava/io/File;
     173: invokevirtual #74                 // Method java/io/File.getName:()Ljava/lang/String;
     176: invokespecial #75                 // Method com/amazonaws/services/s3/transfer/internal/DownloadPartCallable."<init>":(Lcom/amazonaws/services/s3/AmazonS3;Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/lang/String;)V
     179: invokeinterface #76,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
     184: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     189: pop
     190: iinc          2, 1
     193: goto          25
     196: aload_0
     197: invokespecial #78                 // Method combineFiles:()V
     200: return

  private void combineFiles() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #79                 // Method truncateDestinationFileIfNecessary:()V
       4: aload_0
       5: getfield      #17                 // Field futureFiles:Ljava/util/List;
       8: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_1
      14: aload_1
      15: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          76
      23: aload_1
      24: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #40                 // class java/util/concurrent/Future
      32: astore_2
      33: aload_2
      34: invokeinterface #80,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      39: checkcast     #81                 // class java/io/File
      42: aload_0
      43: getfield      #9                  // Field dstfile:Ljava/io/File;
      46: invokestatic  #82                 // Method com/amazonaws/services/s3/internal/ServiceUtils.appendFile:(Ljava/io/File;Ljava/io/File;)V
      49: aload_0
      50: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
      53: aload_0
      54: aload_0
      55: getfield      #18                 // Field lastFullyMergedPartNumber:Ljava/lang/Integer;
      58: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      61: iconst_1
      62: iadd
      63: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: dup_x1
      67: putfield      #18                 // Field lastFullyMergedPartNumber:Ljava/lang/Integer;
      70: invokevirtual #83                 // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.updatePersistableTransfer:(Ljava/lang/Integer;)V
      73: goto          14
      76: return

  private void truncateDestinationFileIfNecessary() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #9                  // Field dstfile:Ljava/io/File;
       6: invokestatic  #84                 // Method com/amazonaws/services/s3/internal/FileLocks.lock:(Ljava/io/File;)Z
       9: ifne          42
      12: new           #85                 // class com/amazonaws/services/s3/transfer/exception/FileLockException
      15: dup
      16: new           #86                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #88                 // String Fail to lock
      25: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #9                  // Field dstfile:Ljava/io/File;
      32: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #92                 // Method com/amazonaws/services/s3/transfer/exception/FileLockException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: new           #93                 // class java/io/RandomAccessFile
      45: dup
      46: aload_0
      47: getfield      #9                  // Field dstfile:Ljava/io/File;
      50: ldc           #94                 // String rw
      52: invokespecial #95                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      55: astore_1
      56: aload_0
      57: getfield      #18                 // Field lastFullyMergedPartNumber:Ljava/lang/Integer;
      60: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      63: ifne          74
      66: aload_1
      67: lconst_0
      68: invokevirtual #96                 // Method java/io/RandomAccessFile.setLength:(J)V
      71: goto          160
      74: aload_0
      75: getfield      #5                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      78: aload_0
      79: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      82: aload_0
      83: getfield      #18                 // Field lastFullyMergedPartNumber:Ljava/lang/Integer;
      86: invokestatic  #97                 // Method com/amazonaws/services/s3/internal/ServiceUtils.getLastByteInPart:(Lcom/amazonaws/services/s3/AmazonS3;Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/lang/Integer;)J
      89: lstore_2
      90: aload_0
      91: getfield      #9                  // Field dstfile:Ljava/io/File;
      94: invokevirtual #98                 // Method java/io/File.length:()J
      97: lload_2
      98: lcmp
      99: ifge          140
     102: new           #99                 // class com/amazonaws/AmazonClientException
     105: dup
     106: new           #86                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #100                // String File
     115: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_0
     119: getfield      #9                  // Field dstfile:Ljava/io/File;
     122: invokevirtual #101                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     125: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: ldc           #102                // String  has been modified since last pause.
     130: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokespecial #103                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: aload_1
     141: lload_2
     142: lconst_1
     143: ladd
     144: invokevirtual #96                 // Method java/io/RandomAccessFile.setLength:(J)V
     147: aload_0
     148: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
     151: invokevirtual #104                // Method com/amazonaws/services/s3/transfer/internal/DownloadImpl.getProgress:()Lcom/amazonaws/services/s3/transfer/TransferProgress;
     154: lload_2
     155: lconst_1
     156: ladd
     157: invokevirtual #105                // Method com/amazonaws/services/s3/transfer/TransferProgress.updateProgress:(J)V
     160: aload_1
     161: getstatic     #106                // Field LOG:Lorg/apache/commons/logging/Log;
     164: invokestatic  #107                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     167: aload_0
     168: getfield      #9                  // Field dstfile:Ljava/io/File;
     171: invokestatic  #108                // Method com/amazonaws/services/s3/internal/FileLocks.unlock:(Ljava/io/File;)Z
     174: pop
     175: goto          230
     178: astore_2
     179: new           #99                 // class com/amazonaws/AmazonClientException
     182: dup
     183: new           #86                 // class java/lang/StringBuilder
     186: dup
     187: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     190: ldc           #109                // String Unable to append part file to dstfile
     192: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: aload_2
     196: invokevirtual #110                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     199: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     205: aload_2
     206: invokespecial #111                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     209: athrow
     210: astore        4
     212: aload_1
     213: getstatic     #106                // Field LOG:Lorg/apache/commons/logging/Log;
     216: invokestatic  #107                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     219: aload_0
     220: getfield      #9                  // Field dstfile:Ljava/io/File;
     223: invokestatic  #108                // Method com/amazonaws/services/s3/internal/FileLocks.unlock:(Ljava/io/File;)Z
     226: pop
     227: aload         4
     229: athrow
     230: return
    Exception table:
       from    to  target type
          42   160   178   Class java/lang/Exception
          42   160   210   any
         178   212   210   any

  private void adjustRequest(com.amazonaws.services.s3.model.GetObjectRequest);
    Code:
       0: aload_1
       1: invokevirtual #112                // Method com/amazonaws/services/s3/model/GetObjectRequest.getRange:()[J
       4: astore_2
       5: aload_2
       6: iconst_1
       7: laload
       8: lstore_3
       9: lload_3
      10: aload_0
      11: getfield      #10                 // Field origStartingByte:J
      14: lsub
      15: lconst_1
      16: ladd
      17: lstore        5
      19: aload_0
      20: getfield      #9                  // Field dstfile:Ljava/io/File;
      23: invokevirtual #113                // Method java/io/File.exists:()Z
      26: ifeq          200
      29: aload_0
      30: getfield      #9                  // Field dstfile:Ljava/io/File;
      33: invokestatic  #84                 // Method com/amazonaws/services/s3/internal/FileLocks.lock:(Ljava/io/File;)Z
      36: ifne          74
      39: new           #85                 // class com/amazonaws/services/s3/transfer/exception/FileLockException
      42: dup
      43: new           #86                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #88                 // String Fail to lock
      52: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #9                  // Field dstfile:Ljava/io/File;
      59: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      62: ldc           #114                // String  for range adjustment
      64: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #92                 // Method com/amazonaws/services/s3/transfer/exception/FileLockException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: aload_0
      76: getfield      #9                  // Field dstfile:Ljava/io/File;
      79: invokevirtual #98                 // Method java/io/File.length:()J
      82: putfield      #11                 // Field expectedFileLength:J
      85: aload_0
      86: getfield      #10                 // Field origStartingByte:J
      89: aload_0
      90: getfield      #11                 // Field expectedFileLength:J
      93: ladd
      94: lstore        7
      96: getstatic     #106                // Field LOG:Lorg/apache/commons/logging/Log;
      99: new           #86                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #115                // String Adjusting request range from
     108: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_2
     112: invokestatic  #116                // Method java/util/Arrays.toString:([J)Ljava/lang/String;
     115: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: ldc           #117                // String  to
     120: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: iconst_2
     124: newarray       long
     126: dup
     127: iconst_0
     128: lload         7
     130: lastore
     131: dup
     132: iconst_1
     133: lload_3
     134: lastore
     135: invokestatic  #116                // Method java/util/Arrays.toString:([J)Ljava/lang/String;
     138: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #118                // String  for file
     143: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload_0
     147: getfield      #9                  // Field dstfile:Ljava/io/File;
     150: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     153: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: invokeinterface #119,  2          // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     161: aload_1
     162: lload         7
     164: lload_3
     165: invokevirtual #120                // Method com/amazonaws/services/s3/model/GetObjectRequest.setRange:(JJ)V
     168: lload_3
     169: lload         7
     171: lsub
     172: lconst_1
     173: ladd
     174: lstore        5
     176: aload_0
     177: getfield      #9                  // Field dstfile:Ljava/io/File;
     180: invokestatic  #108                // Method com/amazonaws/services/s3/internal/FileLocks.unlock:(Ljava/io/File;)Z
     183: pop
     184: goto          200
     187: astore        9
     189: aload_0
     190: getfield      #9                  // Field dstfile:Ljava/io/File;
     193: invokestatic  #108                // Method com/amazonaws/services/s3/internal/FileLocks.unlock:(Ljava/io/File;)Z
     196: pop
     197: aload         9
     199: athrow
     200: lload         5
     202: lconst_0
     203: lcmp
     204: ifge          268
     207: new           #3                  // class java/lang/IllegalArgumentException
     210: dup
     211: new           #86                 // class java/lang/StringBuilder
     214: dup
     215: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     218: ldc           #121                // String Unable to determine the range for download operation. lastByte=
     220: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: lload_3
     224: invokevirtual #122                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     227: ldc           #123                // String , origStartingByte=
     229: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload_0
     233: getfield      #10                 // Field origStartingByte:J
     236: invokevirtual #122                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     239: ldc           #124                // String , expectedFileLength=
     241: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: aload_0
     245: getfield      #11                 // Field expectedFileLength:J
     248: invokevirtual #122                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     251: ldc           #125                // String , totalBytesToDownload=
     253: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: lload         5
     258: invokevirtual #122                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     261: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     264: invokespecial #126                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     267: athrow
     268: return
    Exception table:
       from    to  target type
          74   176   187   any
         187   189   187   any

  private com.amazonaws.services.s3.model.S3Object retryableDownloadS3ObjectToFile(java.io.File, com.amazonaws.services.s3.internal.ServiceUtils$RetryableS3DownloadTask, boolean);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #8                  // Field resumeExistingDownload:Z
       7: ifeq          23
      10: iload         4
      12: ifeq          23
      15: aload_0
      16: aload_0
      17: getfield      #7                  // Field req:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      20: invokespecial #127                // Method adjustRequest:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)V
      23: aload_2
      24: invokeinterface #128,  1          // InterfaceMethod com/amazonaws/services/s3/internal/ServiceUtils$RetryableS3DownloadTask.getS3ObjectStream:()Lcom/amazonaws/services/s3/model/S3Object;
      29: astore        5
      31: aload         5
      33: ifnonnull     38
      36: aconst_null
      37: areturn
      38: getstatic     #129                // Field testing:Z
      41: ifeq          66
      44: aload_0
      45: getfield      #8                  // Field resumeExistingDownload:Z
      48: ifeq          66
      51: iload         4
      53: ifne          66
      56: new           #99                 // class com/amazonaws/AmazonClientException
      59: dup
      60: ldc           #130                // String testing
      62: invokespecial #103                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload         5
      68: aload_1
      69: aload_2
      70: invokeinterface #131,  1          // InterfaceMethod com/amazonaws/services/s3/internal/ServiceUtils$RetryableS3DownloadTask.needIntegrityCheck:()Z
      75: iload_3
      76: aload_0
      77: getfield      #11                 // Field expectedFileLength:J
      80: invokestatic  #132                // Method com/amazonaws/services/s3/internal/ServiceUtils.downloadToFile:(Lcom/amazonaws/services/s3/model/S3Object;Ljava/io/File;ZZJ)V
      83: aload         5
      85: astore        6
      87: aload         5
      89: invokevirtual #133                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
      92: invokevirtual #134                // Method com/amazonaws/services/s3/model/S3ObjectInputStream.abort:()V
      95: aload         6
      97: areturn
      98: astore        6
     100: aload         6
     102: invokevirtual #135                // Method com/amazonaws/AmazonClientException.isRetryable:()Z
     105: ifne          111
     108: aload         6
     110: athrow
     111: aload         6
     113: invokevirtual #136                // Method com/amazonaws/AmazonClientException.getCause:()Ljava/lang/Throwable;
     116: instanceof    #137                // class java/net/SocketException
     119: ifne          133
     122: aload         6
     124: invokevirtual #136                // Method com/amazonaws/AmazonClientException.getCause:()Ljava/lang/Throwable;
     127: instanceof    #138                // class javax/net/ssl/SSLProtocolException
     130: ifeq          136
     133: aload         6
     135: athrow
     136: iload         4
     138: ifeq          144
     141: aload         6
     143: athrow
     144: getstatic     #106                // Field LOG:Lorg/apache/commons/logging/Log;
     147: new           #86                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #139                // String Retry the download of object
     156: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload         5
     161: invokevirtual #140                // Method com/amazonaws/services/s3/model/S3Object.getKey:()Ljava/lang/String;
     164: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: ldc           #141                // String  (bucket
     169: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload         5
     174: invokevirtual #142                // Method com/amazonaws/services/s3/model/S3Object.getBucketName:()Ljava/lang/String;
     177: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: ldc           #143                // String )
     182: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     188: aload         6
     190: invokeinterface #144,  3          // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     195: iconst_1
     196: istore        4
     198: aload         5
     200: invokevirtual #133                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
     203: invokevirtual #134                // Method com/amazonaws/services/s3/model/S3ObjectInputStream.abort:()V
     206: goto          222
     209: astore        7
     211: aload         5
     213: invokevirtual #133                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
     216: invokevirtual #134                // Method com/amazonaws/services/s3/model/S3ObjectInputStream.abort:()V
     219: aload         7
     221: athrow
     222: goto          3
    Exception table:
       from    to  target type
          38    87    98   Class com/amazonaws/AmazonClientException
          38    87   209   any
          98   198   209   any
         209   211   209   any

  private boolean isTimeoutEnabled();
    Code:
       0: aload_0
       1: getfield      #12                 // Field timeout:J
       4: lconst_0
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static void setTesting(boolean);
    Code:
       0: iload_0
       1: putstatic     #129                // Field testing:Z
       4: return

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #145                // Method call:()Ljava/io/File;
       4: areturn

  static com.amazonaws.services.s3.transfer.internal.DownloadImpl access$000(com.amazonaws.services.s3.transfer.DownloadCallable);
    Code:
       0: aload_0
       1: getfield      #1                  // Field download:Lcom/amazonaws/services/s3/transfer/internal/DownloadImpl;
       4: areturn

  static {};
    Code:
       0: ldc           #146                // class com/amazonaws/services/s3/transfer/DownloadCallable
       2: invokestatic  #147                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #106                // Field LOG:Lorg/apache/commons/logging/Log;
       8: return
}
