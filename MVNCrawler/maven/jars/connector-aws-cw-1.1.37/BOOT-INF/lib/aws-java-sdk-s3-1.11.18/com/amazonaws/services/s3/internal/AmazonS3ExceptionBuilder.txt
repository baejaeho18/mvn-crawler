Compiled from "AmazonS3ExceptionBuilder.java"
public class com.amazonaws.services.s3.internal.AmazonS3ExceptionBuilder {
  private java.lang.String requestId;

  private java.lang.String errorCode;

  private java.lang.String errorMessage;

  private int statusCode;

  private java.lang.String extendedRequestId;

  private java.lang.String cloudFrontId;

  private java.util.Map<java.lang.String, java.lang.String> additionalDetails;

  private java.lang.String errorResponseXml;

  public com.amazonaws.services.s3.internal.AmazonS3ExceptionBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getRequestId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field requestId:Ljava/lang/String;
       4: areturn

  public void setRequestId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field requestId:Ljava/lang/String;
       5: return

  public void setErrorCode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field errorCode:Ljava/lang/String;
       5: return

  public java.lang.String getErrorCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field errorCode:Ljava/lang/String;
       4: areturn

  public java.lang.String getErrorMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field errorMessage:Ljava/lang/String;
       4: areturn

  public void setErrorMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field errorMessage:Ljava/lang/String;
       5: return

  public void setStatusCode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field statusCode:I
       5: return

  public int getStatusCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field statusCode:I
       4: ireturn

  public java.lang.String getExtendedRequestId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field extendedRequestId:Ljava/lang/String;
       4: areturn

  public void setExtendedRequestId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field extendedRequestId:Ljava/lang/String;
       5: return

  public java.lang.String getCloudFrontId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cloudFrontId:Ljava/lang/String;
       4: areturn

  public void setCloudFrontId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field cloudFrontId:Ljava/lang/String;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getAdditionalDetails();
    Code:
       0: aload_0
       1: getfield      #8                  // Field additionalDetails:Ljava/util/Map;
       4: areturn

  public void setAdditionalDetails(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field additionalDetails:Ljava/util/Map;
       5: return

  public void addAdditionalDetail(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #10                 // Method java/lang/String.isEmpty:()Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #8                  // Field additionalDetails:Ljava/util/Map;
      19: ifnonnull     33
      22: aload_0
      23: new           #11                 // class java/util/HashMap
      26: dup
      27: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      30: putfield      #8                  // Field additionalDetails:Ljava/util/Map;
      33: aload_0
      34: getfield      #8                  // Field additionalDetails:Ljava/util/Map;
      37: aload_1
      38: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #14                 // class java/lang/String
      46: astore_3
      47: aload_3
      48: ifnull        85
      51: aload_3
      52: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
      55: invokevirtual #10                 // Method java/lang/String.isEmpty:()Z
      58: ifne          85
      61: new           #15                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      68: aload_3
      69: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #18                 // String -
      74: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_2
      78: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: astore_2
      85: aload_2
      86: invokevirtual #10                 // Method java/lang/String.isEmpty:()Z
      89: ifne          104
      92: aload_0
      93: getfield      #8                  // Field additionalDetails:Ljava/util/Map;
      96: aload_1
      97: aload_2
      98: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: return

  public java.lang.String getErrorResponseXml();
    Code:
       0: aload_0
       1: getfield      #21                 // Field errorResponseXml:Ljava/lang/String;
       4: areturn

  public void setErrorResponseXml(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field errorResponseXml:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.AmazonS3Exception build();
    Code:
       0: aload_0
       1: getfield      #21                 // Field errorResponseXml:Ljava/lang/String;
       4: ifnonnull     21
       7: new           #22                 // class com/amazonaws/services/s3/model/AmazonS3Exception
      10: dup
      11: aload_0
      12: getfield      #4                  // Field errorMessage:Ljava/lang/String;
      15: invokespecial #23                 // Method com/amazonaws/services/s3/model/AmazonS3Exception."<init>":(Ljava/lang/String;)V
      18: goto          36
      21: new           #22                 // class com/amazonaws/services/s3/model/AmazonS3Exception
      24: dup
      25: aload_0
      26: getfield      #4                  // Field errorMessage:Ljava/lang/String;
      29: aload_0
      30: getfield      #21                 // Field errorResponseXml:Ljava/lang/String;
      33: invokespecial #24                 // Method com/amazonaws/services/s3/model/AmazonS3Exception."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      36: astore_1
      37: aload_1
      38: aload_0
      39: getfield      #3                  // Field errorCode:Ljava/lang/String;
      42: invokevirtual #25                 // Method com/amazonaws/services/s3/model/AmazonS3Exception.setErrorCode:(Ljava/lang/String;)V
      45: aload_1
      46: aload_0
      47: getfield      #6                  // Field extendedRequestId:Ljava/lang/String;
      50: invokevirtual #26                 // Method com/amazonaws/services/s3/model/AmazonS3Exception.setExtendedRequestId:(Ljava/lang/String;)V
      53: aload_1
      54: aload_0
      55: getfield      #5                  // Field statusCode:I
      58: invokevirtual #27                 // Method com/amazonaws/services/s3/model/AmazonS3Exception.setStatusCode:(I)V
      61: aload_1
      62: aload_0
      63: getfield      #2                  // Field requestId:Ljava/lang/String;
      66: invokevirtual #28                 // Method com/amazonaws/services/s3/model/AmazonS3Exception.setRequestId:(Ljava/lang/String;)V
      69: aload_1
      70: aload_0
      71: getfield      #7                  // Field cloudFrontId:Ljava/lang/String;
      74: invokevirtual #29                 // Method com/amazonaws/services/s3/model/AmazonS3Exception.setCloudFrontId:(Ljava/lang/String;)V
      77: aload_1
      78: aload_0
      79: getfield      #8                  // Field additionalDetails:Ljava/util/Map;
      82: invokevirtual #30                 // Method com/amazonaws/services/s3/model/AmazonS3Exception.setAdditionalDetails:(Ljava/util/Map;)V
      85: aload_1
      86: aload_0
      87: aload_0
      88: getfield      #5                  // Field statusCode:I
      91: invokespecial #31                 // Method errorTypeOf:(I)Lcom/amazonaws/AmazonServiceException$ErrorType;
      94: invokevirtual #32                 // Method com/amazonaws/services/s3/model/AmazonS3Exception.setErrorType:(Lcom/amazonaws/AmazonServiceException$ErrorType;)V
      97: aload_1
      98: areturn

  private com.amazonaws.AmazonServiceException$ErrorType errorTypeOf(int);
    Code:
       0: iload_1
       1: sipush        500
       4: if_icmplt     13
       7: getstatic     #33                 // Field com/amazonaws/AmazonServiceException$ErrorType.Service:Lcom/amazonaws/AmazonServiceException$ErrorType;
      10: goto          16
      13: getstatic     #34                 // Field com/amazonaws/AmazonServiceException$ErrorType.Client:Lcom/amazonaws/AmazonServiceException$ErrorType;
      16: areturn
}
