Compiled from "AmazonS3Client.java"
public class com.amazonaws.services.s3.AmazonS3Client extends com.amazonaws.AmazonWebServiceClient implements com.amazonaws.services.s3.AmazonS3 {
  public static final java.lang.String S3_SERVICE_NAME;

  private static final java.lang.String S3_SIGNER;

  private static final java.lang.String S3_V4_SIGNER;

  protected static final com.amazonaws.services.s3.AmazonS3ClientConfigurationFactory configFactory;

  private static org.apache.commons.logging.Log log;

  protected final com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider;

  protected final com.amazonaws.services.s3.internal.S3ErrorResponseHandler errorResponseHandler;

  private final com.amazonaws.services.s3.internal.S3XmlResponseHandler<java.lang.Void> voidResponseHandler;

  private static final com.amazonaws.services.s3.model.transform.BucketConfigurationXmlFactory bucketConfigurationXmlFactory;

  private static final com.amazonaws.services.s3.model.transform.RequestPaymentConfigurationXmlFactory requestPaymentConfigurationXmlFactory;

  private volatile com.amazonaws.services.s3.S3ClientOptions clientOptions;

  private volatile java.lang.String clientRegion;

  private static final int BUCKET_REGION_CACHE_SIZE;

  private static final java.util.Map<java.lang.String, java.lang.String> bucketRegionCache;

  private final com.amazonaws.services.s3.internal.SkipMd5CheckStrategy skipMd5CheckStrategy;

  private final com.amazonaws.services.s3.internal.CompleteMultipartUploadRetryCondition completeMultipartUploadRetryCondition;

  static java.util.Map<java.lang.String, java.lang.String> getBucketRegionCache();
    Code:
       0: getstatic     #4                  // Field bucketRegionCache:Ljava/util/Map;
       3: areturn

  public com.amazonaws.services.s3.AmazonS3Client();
    Code:
       0: aload_0
       1: new           #5                  // class com/amazonaws/services/s3/AmazonS3Client$S3CredentialsProviderChain
       4: dup
       5: aconst_null
       6: invokespecial #6                  // Method com/amazonaws/services/s3/AmazonS3Client$S3CredentialsProviderChain."<init>":(Lcom/amazonaws/services/s3/AmazonS3Client$1;)V
       9: invokespecial #7                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      12: return

  public com.amazonaws.services.s3.AmazonS3Client(com.amazonaws.auth.AWSCredentials);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field configFactory:Lcom/amazonaws/services/s3/AmazonS3ClientConfigurationFactory;
       5: invokevirtual #9                  // Method com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       8: invokespecial #10                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/ClientConfiguration;)V
      11: return

  public com.amazonaws.services.s3.AmazonS3Client(com.amazonaws.auth.AWSCredentials, com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: new           #11                 // class com/amazonaws/internal/StaticCredentialsProvider
       4: dup
       5: aload_1
       6: invokespecial #12                 // Method com/amazonaws/internal/StaticCredentialsProvider."<init>":(Lcom/amazonaws/auth/AWSCredentials;)V
       9: aload_2
      10: invokespecial #13                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;)V
      13: return

  public com.amazonaws.services.s3.AmazonS3Client(com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field configFactory:Lcom/amazonaws/services/s3/AmazonS3ClientConfigurationFactory;
       5: invokevirtual #9                  // Method com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       8: invokespecial #13                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;)V
      11: return

  public com.amazonaws.services.s3.AmazonS3Client(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #14                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;)V
       7: return

  public com.amazonaws.services.s3.AmazonS3Client(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration, com.amazonaws.metrics.RequestMetricCollector);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #15                 // Field com/amazonaws/services/s3/internal/SkipMd5CheckStrategy.INSTANCE:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
       7: invokespecial #16                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;)V
      10: return

  com.amazonaws.services.s3.AmazonS3Client(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration, com.amazonaws.metrics.RequestMetricCollector, com.amazonaws.services.s3.internal.SkipMd5CheckStrategy);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: iconst_1
       4: invokespecial #17                 // Method com/amazonaws/AmazonWebServiceClient."<init>":(Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/metrics/RequestMetricCollector;Z)V
       7: aload_0
       8: new           #18                 // class com/amazonaws/services/s3/internal/S3ErrorResponseHandler
      11: dup
      12: invokespecial #19                 // Method com/amazonaws/services/s3/internal/S3ErrorResponseHandler."<init>":()V
      15: putfield      #20                 // Field errorResponseHandler:Lcom/amazonaws/services/s3/internal/S3ErrorResponseHandler;
      18: aload_0
      19: new           #21                 // class com/amazonaws/services/s3/internal/S3XmlResponseHandler
      22: dup
      23: aconst_null
      24: invokespecial #22                 // Method com/amazonaws/services/s3/internal/S3XmlResponseHandler."<init>":(Lcom/amazonaws/transform/Unmarshaller;)V
      27: putfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      30: aload_0
      31: new           #24                 // class com/amazonaws/services/s3/S3ClientOptions
      34: dup
      35: invokespecial #25                 // Method com/amazonaws/services/s3/S3ClientOptions."<init>":()V
      38: putfield      #26                 // Field clientOptions:Lcom/amazonaws/services/s3/S3ClientOptions;
      41: aload_0
      42: new           #27                 // class com/amazonaws/services/s3/internal/CompleteMultipartUploadRetryCondition
      45: dup
      46: invokespecial #28                 // Method com/amazonaws/services/s3/internal/CompleteMultipartUploadRetryCondition."<init>":()V
      49: putfield      #29                 // Field completeMultipartUploadRetryCondition:Lcom/amazonaws/services/s3/internal/CompleteMultipartUploadRetryCondition;
      52: aload_0
      53: aload_1
      54: putfield      #30                 // Field awsCredentialsProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
      57: aload_0
      58: aload         4
      60: putfield      #2                  // Field skipMd5CheckStrategy:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
      63: aload_0
      64: invokespecial #31                 // Method init:()V
      67: return

  public com.amazonaws.services.s3.AmazonS3Client(com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: new           #32                 // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       4: dup
       5: invokespecial #33                 // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
       8: aload_1
       9: invokespecial #13                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;)V
      12: return

  com.amazonaws.services.s3.AmazonS3Client(com.amazonaws.services.s3.AmazonS3ClientParams);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method com/amazonaws/services/s3/AmazonS3ClientParams.getClientParams:()Lcom/amazonaws/client/AwsSyncClientParams;
       5: invokespecial #35                 // Method com/amazonaws/AmazonWebServiceClient."<init>":(Lcom/amazonaws/client/AwsSyncClientParams;)V
       8: aload_0
       9: new           #18                 // class com/amazonaws/services/s3/internal/S3ErrorResponseHandler
      12: dup
      13: invokespecial #19                 // Method com/amazonaws/services/s3/internal/S3ErrorResponseHandler."<init>":()V
      16: putfield      #20                 // Field errorResponseHandler:Lcom/amazonaws/services/s3/internal/S3ErrorResponseHandler;
      19: aload_0
      20: new           #21                 // class com/amazonaws/services/s3/internal/S3XmlResponseHandler
      23: dup
      24: aconst_null
      25: invokespecial #22                 // Method com/amazonaws/services/s3/internal/S3XmlResponseHandler."<init>":(Lcom/amazonaws/transform/Unmarshaller;)V
      28: putfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      31: aload_0
      32: new           #24                 // class com/amazonaws/services/s3/S3ClientOptions
      35: dup
      36: invokespecial #25                 // Method com/amazonaws/services/s3/S3ClientOptions."<init>":()V
      39: putfield      #26                 // Field clientOptions:Lcom/amazonaws/services/s3/S3ClientOptions;
      42: aload_0
      43: new           #27                 // class com/amazonaws/services/s3/internal/CompleteMultipartUploadRetryCondition
      46: dup
      47: invokespecial #28                 // Method com/amazonaws/services/s3/internal/CompleteMultipartUploadRetryCondition."<init>":()V
      50: putfield      #29                 // Field completeMultipartUploadRetryCondition:Lcom/amazonaws/services/s3/internal/CompleteMultipartUploadRetryCondition;
      53: aload_0
      54: aload_1
      55: invokevirtual #34                 // Method com/amazonaws/services/s3/AmazonS3ClientParams.getClientParams:()Lcom/amazonaws/client/AwsSyncClientParams;
      58: invokevirtual #36                 // Method com/amazonaws/client/AwsSyncClientParams.getCredentialsProvider:()Lcom/amazonaws/auth/AWSCredentialsProvider;
      61: putfield      #30                 // Field awsCredentialsProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
      64: aload_0
      65: getstatic     #15                 // Field com/amazonaws/services/s3/internal/SkipMd5CheckStrategy.INSTANCE:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
      68: putfield      #2                  // Field skipMd5CheckStrategy:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
      71: aload_0
      72: aload_1
      73: invokevirtual #37                 // Method com/amazonaws/services/s3/AmazonS3ClientParams.getS3ClientOptions:()Lcom/amazonaws/services/s3/S3ClientOptions;
      76: invokevirtual #38                 // Method setS3ClientOptions:(Lcom/amazonaws/services/s3/S3ClientOptions;)V
      79: aload_0
      80: invokespecial #31                 // Method init:()V
      83: return

  private void init();
    Code:
       0: aload_0
       1: ldc           #40                 // String s3.amazonaws.com
       3: invokevirtual #41                 // Method setEndpoint:(Ljava/lang/String;)V
       6: new           #42                 // class com/amazonaws/handlers/HandlerChainFactory
       9: dup
      10: invokespecial #43                 // Method com/amazonaws/handlers/HandlerChainFactory."<init>":()V
      13: astore_1
      14: aload_0
      15: getfield      #44                 // Field requestHandler2s:Ljava/util/List;
      18: aload_1
      19: ldc           #45                 // String /com/amazonaws/services/s3/request.handlers
      21: invokevirtual #46                 // Method com/amazonaws/handlers/HandlerChainFactory.newRequestHandlerChain:(Ljava/lang/String;)Ljava/util/List;
      24: invokeinterface #47,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      29: pop
      30: aload_0
      31: getfield      #44                 // Field requestHandler2s:Ljava/util/List;
      34: aload_1
      35: ldc           #48                 // String /com/amazonaws/services/s3/request.handler2s
      37: invokevirtual #49                 // Method com/amazonaws/handlers/HandlerChainFactory.newRequestHandler2Chain:(Ljava/lang/String;)Ljava/util/List;
      40: invokeinterface #47,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      45: pop
      46: return

  public synchronized void setEndpoint(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #50                 // Method com/amazonaws/services/s3/internal/ServiceUtils.isS3AccelerateEndpoint:(Ljava/lang/String;)Z
       4: ifeq          17
       7: new           #51                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #52                 // String To enable accelerate mode, please use AmazonS3Client.setS3ClientOptions(S3ClientOptions.builder().setAccelerateModeEnabled(true).build());
      13: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokespecial #54                 // Method com/amazonaws/AmazonWebServiceClient.setEndpoint:(Ljava/lang/String;)V
      22: aload_1
      23: invokestatic  #55                 // Method com/amazonaws/services/s3/internal/ServiceUtils.isS3USStandardEndpoint:(Ljava/lang/String;)Z
      26: ifne          45
      29: aload_0
      30: aload_0
      31: getfield      #56                 // Field endpoint:Ljava/net/URI;
      34: invokevirtual #57                 // Method java/net/URI.getHost:()Ljava/lang/String;
      37: ldc           #59                 // String s3
      39: invokestatic  #60                 // Method com/amazonaws/util/AwsHostNameUtils.parseRegionName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      42: putfield      #61                 // Field clientRegion:Ljava/lang/String;
      45: return

  public synchronized void setRegion(com.amazonaws.regions.Region);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #62                 // Method com/amazonaws/AmazonWebServiceClient.setRegion:(Lcom/amazonaws/regions/Region;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #63                 // Method com/amazonaws/regions/Region.getName:()Ljava/lang/String;
      10: putfield      #61                 // Field clientRegion:Ljava/lang/String;
      13: return

  public synchronized void setS3ClientOptions(com.amazonaws.services.s3.S3ClientOptions);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method checkMutability:()V
       4: aload_0
       5: new           #24                 // class com/amazonaws/services/s3/S3ClientOptions
       8: dup
       9: aload_1
      10: invokespecial #65                 // Method com/amazonaws/services/s3/S3ClientOptions."<init>":(Lcom/amazonaws/services/s3/S3ClientOptions;)V
      13: putfield      #26                 // Field clientOptions:Lcom/amazonaws/services/s3/S3ClientOptions;
      16: return

  protected boolean useStrictHostNameVerification();
    Code:
       0: iconst_0
       1: ireturn

  public com.amazonaws.services.s3.model.VersionListing listNextBatchOfVersions(com.amazonaws.services.s3.model.VersionListing) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #66                 // class com/amazonaws/services/s3/model/ListNextBatchOfVersionsRequest
       4: dup
       5: aload_1
       6: invokespecial #67                 // Method com/amazonaws/services/s3/model/ListNextBatchOfVersionsRequest."<init>":(Lcom/amazonaws/services/s3/model/VersionListing;)V
       9: invokevirtual #68                 // Method listNextBatchOfVersions:(Lcom/amazonaws/services/s3/model/ListNextBatchOfVersionsRequest;)Lcom/amazonaws/services/s3/model/VersionListing;
      12: areturn

  public com.amazonaws.services.s3.model.VersionListing listNextBatchOfVersions(com.amazonaws.services.s3.model.ListNextBatchOfVersionsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #69                 // String The request object parameter must be specified when listing the next batch of versions in a bucket
       4: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: invokevirtual #71                 // Method com/amazonaws/services/s3/model/ListNextBatchOfVersionsRequest.getPreviousVersionListing:()Lcom/amazonaws/services/s3/model/VersionListing;
      11: astore_2
      12: aload_2
      13: invokevirtual #72                 // Method com/amazonaws/services/s3/model/VersionListing.isTruncated:()Z
      16: ifne          90
      19: new           #73                 // class com/amazonaws/services/s3/model/VersionListing
      22: dup
      23: invokespecial #74                 // Method com/amazonaws/services/s3/model/VersionListing."<init>":()V
      26: astore_3
      27: aload_3
      28: aload_2
      29: invokevirtual #75                 // Method com/amazonaws/services/s3/model/VersionListing.getBucketName:()Ljava/lang/String;
      32: invokevirtual #76                 // Method com/amazonaws/services/s3/model/VersionListing.setBucketName:(Ljava/lang/String;)V
      35: aload_3
      36: aload_2
      37: invokevirtual #77                 // Method com/amazonaws/services/s3/model/VersionListing.getDelimiter:()Ljava/lang/String;
      40: invokevirtual #78                 // Method com/amazonaws/services/s3/model/VersionListing.setDelimiter:(Ljava/lang/String;)V
      43: aload_3
      44: aload_2
      45: invokevirtual #79                 // Method com/amazonaws/services/s3/model/VersionListing.getNextKeyMarker:()Ljava/lang/String;
      48: invokevirtual #80                 // Method com/amazonaws/services/s3/model/VersionListing.setKeyMarker:(Ljava/lang/String;)V
      51: aload_3
      52: aload_2
      53: invokevirtual #81                 // Method com/amazonaws/services/s3/model/VersionListing.getNextVersionIdMarker:()Ljava/lang/String;
      56: invokevirtual #82                 // Method com/amazonaws/services/s3/model/VersionListing.setVersionIdMarker:(Ljava/lang/String;)V
      59: aload_3
      60: aload_2
      61: invokevirtual #83                 // Method com/amazonaws/services/s3/model/VersionListing.getMaxKeys:()I
      64: invokevirtual #84                 // Method com/amazonaws/services/s3/model/VersionListing.setMaxKeys:(I)V
      67: aload_3
      68: aload_2
      69: invokevirtual #85                 // Method com/amazonaws/services/s3/model/VersionListing.getPrefix:()Ljava/lang/String;
      72: invokevirtual #86                 // Method com/amazonaws/services/s3/model/VersionListing.setPrefix:(Ljava/lang/String;)V
      75: aload_3
      76: aload_2
      77: invokevirtual #87                 // Method com/amazonaws/services/s3/model/VersionListing.getEncodingType:()Ljava/lang/String;
      80: invokevirtual #88                 // Method com/amazonaws/services/s3/model/VersionListing.setEncodingType:(Ljava/lang/String;)V
      83: aload_3
      84: iconst_0
      85: invokevirtual #89                 // Method com/amazonaws/services/s3/model/VersionListing.setTruncated:(Z)V
      88: aload_3
      89: areturn
      90: aload_0
      91: aload_1
      92: invokevirtual #90                 // Method com/amazonaws/services/s3/model/ListNextBatchOfVersionsRequest.toListVersionsRequest:()Lcom/amazonaws/services/s3/model/ListVersionsRequest;
      95: invokevirtual #91                 // Method listVersions:(Lcom/amazonaws/services/s3/model/ListVersionsRequest;)Lcom/amazonaws/services/s3/model/VersionListing;
      98: areturn

  public com.amazonaws.services.s3.model.VersionListing listVersions(java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #92                 // class com/amazonaws/services/s3/model/ListVersionsRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aconst_null
       8: aconst_null
       9: aconst_null
      10: aconst_null
      11: invokespecial #93                 // Method com/amazonaws/services/s3/model/ListVersionsRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V
      14: invokevirtual #91                 // Method listVersions:(Lcom/amazonaws/services/s3/model/ListVersionsRequest;)Lcom/amazonaws/services/s3/model/VersionListing;
      17: areturn

  public com.amazonaws.services.s3.model.VersionListing listVersions(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: new           #92                 // class com/amazonaws/services/s3/model/ListVersionsRequest
       3: dup
       4: invokespecial #94                 // Method com/amazonaws/services/s3/model/ListVersionsRequest."<init>":()V
       7: aload_1
       8: invokevirtual #95                 // Method com/amazonaws/services/s3/model/ListVersionsRequest.withBucketName:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListVersionsRequest;
      11: aload_2
      12: invokevirtual #96                 // Method com/amazonaws/services/s3/model/ListVersionsRequest.withPrefix:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListVersionsRequest;
      15: aload         5
      17: invokevirtual #97                 // Method com/amazonaws/services/s3/model/ListVersionsRequest.withDelimiter:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListVersionsRequest;
      20: aload_3
      21: invokevirtual #98                 // Method com/amazonaws/services/s3/model/ListVersionsRequest.withKeyMarker:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListVersionsRequest;
      24: aload         4
      26: invokevirtual #99                 // Method com/amazonaws/services/s3/model/ListVersionsRequest.withVersionIdMarker:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListVersionsRequest;
      29: aload         6
      31: invokevirtual #100                // Method com/amazonaws/services/s3/model/ListVersionsRequest.withMaxResults:(Ljava/lang/Integer;)Lcom/amazonaws/services/s3/model/ListVersionsRequest;
      34: astore        7
      36: aload_0
      37: aload         7
      39: invokevirtual #91                 // Method listVersions:(Lcom/amazonaws/services/s3/model/ListVersionsRequest;)Lcom/amazonaws/services/s3/model/VersionListing;
      42: areturn

  public com.amazonaws.services.s3.model.VersionListing listVersions(com.amazonaws.services.s3.model.ListVersionsRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #101                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getBucketName:()Ljava/lang/String;
       5: ldc           #102                // String The bucket name parameter must be specified when listing versions in a bucket
       7: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_1
      11: invokevirtual #103                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getEncodingType:()Ljava/lang/String;
      14: ifnonnull     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore_2
      23: aload_0
      24: aload_1
      25: invokevirtual #101                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getBucketName:()Ljava/lang/String;
      28: aconst_null
      29: aload_1
      30: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      33: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      36: astore_3
      37: aload_3
      38: ldc           #106                // String versions
      40: aconst_null
      41: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      46: aload_3
      47: ldc           #108                // String prefix
      49: aload_1
      50: invokevirtual #109                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getPrefix:()Ljava/lang/String;
      53: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      56: aload_3
      57: ldc           #111                // String key-marker
      59: aload_1
      60: invokevirtual #112                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getKeyMarker:()Ljava/lang/String;
      63: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      66: aload_3
      67: ldc           #113                // String version-id-marker
      69: aload_1
      70: invokevirtual #114                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getVersionIdMarker:()Ljava/lang/String;
      73: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      76: aload_3
      77: ldc           #115                // String delimiter
      79: aload_1
      80: invokevirtual #116                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getDelimiter:()Ljava/lang/String;
      83: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      86: aload_1
      87: invokevirtual #117                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getMaxResults:()Ljava/lang/Integer;
      90: ifnull        118
      93: aload_1
      94: invokevirtual #117                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getMaxResults:()Ljava/lang/Integer;
      97: invokevirtual #118                // Method java/lang/Integer.intValue:()I
     100: iflt          118
     103: aload_3
     104: ldc           #119                // String max-keys
     106: aload_1
     107: invokevirtual #117                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getMaxResults:()Ljava/lang/Integer;
     110: invokevirtual #120                // Method java/lang/Integer.toString:()Ljava/lang/String;
     113: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     118: aload_3
     119: ldc           #121                // String encoding-type
     121: iload_2
     122: ifeq          130
     125: ldc           #122                // String url
     127: goto          134
     130: aload_1
     131: invokevirtual #103                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getEncodingType:()Ljava/lang/String;
     134: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     139: aload_0
     140: aload_3
     141: new           #123                // class com/amazonaws/services/s3/model/transform/Unmarshallers$VersionListUnmarshaller
     144: dup
     145: iload_2
     146: invokespecial #124                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$VersionListUnmarshaller."<init>":(Z)V
     149: aload_1
     150: invokevirtual #101                // Method com/amazonaws/services/s3/model/ListVersionsRequest.getBucketName:()Ljava/lang/String;
     153: aconst_null
     154: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     157: checkcast     #73                 // class com/amazonaws/services/s3/model/VersionListing
     160: areturn

  public com.amazonaws.services.s3.model.ObjectListing listObjects(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #126                // class com/amazonaws/services/s3/model/ListObjectsRequest
       4: dup
       5: aload_1
       6: aconst_null
       7: aconst_null
       8: aconst_null
       9: aconst_null
      10: invokespecial #127                // Method com/amazonaws/services/s3/model/ListObjectsRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V
      13: invokevirtual #128                // Method listObjects:(Lcom/amazonaws/services/s3/model/ListObjectsRequest;)Lcom/amazonaws/services/s3/model/ObjectListing;
      16: areturn

  public com.amazonaws.services.s3.model.ObjectListing listObjects(java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #126                // class com/amazonaws/services/s3/model/ListObjectsRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aconst_null
       8: aconst_null
       9: aconst_null
      10: invokespecial #127                // Method com/amazonaws/services/s3/model/ListObjectsRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V
      13: invokevirtual #128                // Method listObjects:(Lcom/amazonaws/services/s3/model/ListObjectsRequest;)Lcom/amazonaws/services/s3/model/ObjectListing;
      16: areturn

  public com.amazonaws.services.s3.model.ObjectListing listObjects(com.amazonaws.services.s3.model.ListObjectsRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #129                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getBucketName:()Ljava/lang/String;
       5: ldc           #130                // String The bucket name parameter must be specified when listing objects in a bucket
       7: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_1
      11: invokevirtual #131                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getEncodingType:()Ljava/lang/String;
      14: ifnonnull     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore_2
      23: aload_0
      24: aload_1
      25: invokevirtual #129                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getBucketName:()Ljava/lang/String;
      28: aconst_null
      29: aload_1
      30: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      33: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      36: astore_3
      37: aload_3
      38: ldc           #108                // String prefix
      40: aload_1
      41: invokevirtual #132                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getPrefix:()Ljava/lang/String;
      44: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      47: aload_3
      48: ldc           #133                // String marker
      50: aload_1
      51: invokevirtual #134                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getMarker:()Ljava/lang/String;
      54: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      57: aload_3
      58: ldc           #115                // String delimiter
      60: aload_1
      61: invokevirtual #135                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getDelimiter:()Ljava/lang/String;
      64: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      67: aload_1
      68: invokevirtual #136                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getMaxKeys:()Ljava/lang/Integer;
      71: ifnull        99
      74: aload_1
      75: invokevirtual #136                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getMaxKeys:()Ljava/lang/Integer;
      78: invokevirtual #118                // Method java/lang/Integer.intValue:()I
      81: iflt          99
      84: aload_3
      85: ldc           #119                // String max-keys
      87: aload_1
      88: invokevirtual #136                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getMaxKeys:()Ljava/lang/Integer;
      91: invokevirtual #120                // Method java/lang/Integer.toString:()Ljava/lang/String;
      94: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      99: aload_3
     100: ldc           #121                // String encoding-type
     102: iload_2
     103: ifeq          111
     106: ldc           #122                // String url
     108: goto          115
     111: aload_1
     112: invokevirtual #131                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getEncodingType:()Ljava/lang/String;
     115: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     120: aload_0
     121: aload_3
     122: new           #137                // class com/amazonaws/services/s3/model/transform/Unmarshallers$ListObjectsUnmarshaller
     125: dup
     126: iload_2
     127: invokespecial #138                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$ListObjectsUnmarshaller."<init>":(Z)V
     130: aload_1
     131: invokevirtual #129                // Method com/amazonaws/services/s3/model/ListObjectsRequest.getBucketName:()Ljava/lang/String;
     134: aconst_null
     135: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     138: checkcast     #139                // class com/amazonaws/services/s3/model/ObjectListing
     141: areturn

  public com.amazonaws.services.s3.model.ListObjectsV2Result listObjectsV2(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #140                // class com/amazonaws/services/s3/model/ListObjectsV2Request
       4: dup
       5: invokespecial #141                // Method com/amazonaws/services/s3/model/ListObjectsV2Request."<init>":()V
       8: aload_1
       9: invokevirtual #142                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.withBucketName:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListObjectsV2Request;
      12: invokevirtual #143                // Method listObjectsV2:(Lcom/amazonaws/services/s3/model/ListObjectsV2Request;)Lcom/amazonaws/services/s3/model/ListObjectsV2Result;
      15: areturn

  public com.amazonaws.services.s3.model.ListObjectsV2Result listObjectsV2(java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #140                // class com/amazonaws/services/s3/model/ListObjectsV2Request
       4: dup
       5: invokespecial #141                // Method com/amazonaws/services/s3/model/ListObjectsV2Request."<init>":()V
       8: aload_1
       9: invokevirtual #142                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.withBucketName:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListObjectsV2Request;
      12: aload_2
      13: invokevirtual #144                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.withPrefix:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ListObjectsV2Request;
      16: invokevirtual #143                // Method listObjectsV2:(Lcom/amazonaws/services/s3/model/ListObjectsV2Request;)Lcom/amazonaws/services/s3/model/ListObjectsV2Result;
      19: areturn

  public com.amazonaws.services.s3.model.ListObjectsV2Result listObjectsV2(com.amazonaws.services.s3.model.ListObjectsV2Request) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #145                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getBucketName:()Ljava/lang/String;
       5: ldc           #130                // String The bucket name parameter must be specified when listing objects in a bucket
       7: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #145                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getBucketName:()Ljava/lang/String;
      15: aconst_null
      16: aload_1
      17: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      20: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      23: astore_2
      24: aload_2
      25: ldc           #146                // String list-type
      27: ldc           #147                // String 2
      29: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      34: aload_2
      35: ldc           #148                // String start-after
      37: aload_1
      38: invokevirtual #149                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getStartAfter:()Ljava/lang/String;
      41: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      44: aload_2
      45: ldc           #150                // String continuation-token
      47: aload_1
      48: invokevirtual #151                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getContinuationToken:()Ljava/lang/String;
      51: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      54: aload_2
      55: ldc           #115                // String delimiter
      57: aload_1
      58: invokevirtual #152                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getDelimiter:()Ljava/lang/String;
      61: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      64: aload_2
      65: ldc           #119                // String max-keys
      67: aload_1
      68: invokevirtual #153                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getMaxKeys:()Ljava/lang/Integer;
      71: invokestatic  #154                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/Integer;)V
      74: aload_2
      75: ldc           #108                // String prefix
      77: aload_1
      78: invokevirtual #155                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getPrefix:()Ljava/lang/String;
      81: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      84: aload_2
      85: ldc           #121                // String encoding-type
      87: aload_1
      88: invokevirtual #156                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getEncodingType:()Ljava/lang/String;
      91: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      94: aload_2
      95: ldc           #157                // String fetch-owner
      97: aload_1
      98: invokevirtual #158                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.isFetchOwner:()Z
     101: invokestatic  #159                // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
     104: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     109: aload_1
     110: invokevirtual #156                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getEncodingType:()Ljava/lang/String;
     113: ldc           #122                // String url
     115: if_acmpne     122
     118: iconst_1
     119: goto          123
     122: iconst_0
     123: istore_3
     124: aload_0
     125: aload_2
     126: new           #160                // class com/amazonaws/services/s3/model/transform/Unmarshallers$ListObjectsV2Unmarshaller
     129: dup
     130: iload_3
     131: invokespecial #161                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$ListObjectsV2Unmarshaller."<init>":(Z)V
     134: aload_1
     135: invokevirtual #145                // Method com/amazonaws/services/s3/model/ListObjectsV2Request.getBucketName:()Ljava/lang/String;
     138: aconst_null
     139: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     142: checkcast     #162                // class com/amazonaws/services/s3/model/ListObjectsV2Result
     145: areturn

  public com.amazonaws.services.s3.model.ObjectListing listNextBatchOfObjects(com.amazonaws.services.s3.model.ObjectListing) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #163                // class com/amazonaws/services/s3/model/ListNextBatchOfObjectsRequest
       4: dup
       5: aload_1
       6: invokespecial #164                // Method com/amazonaws/services/s3/model/ListNextBatchOfObjectsRequest."<init>":(Lcom/amazonaws/services/s3/model/ObjectListing;)V
       9: invokevirtual #165                // Method listNextBatchOfObjects:(Lcom/amazonaws/services/s3/model/ListNextBatchOfObjectsRequest;)Lcom/amazonaws/services/s3/model/ObjectListing;
      12: areturn

  public com.amazonaws.services.s3.model.ObjectListing listNextBatchOfObjects(com.amazonaws.services.s3.model.ListNextBatchOfObjectsRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #166                // String The request object parameter must be specified when listing the next batch of objects in a bucket
       4: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: invokevirtual #167                // Method com/amazonaws/services/s3/model/ListNextBatchOfObjectsRequest.getPreviousObjectListing:()Lcom/amazonaws/services/s3/model/ObjectListing;
      11: astore_2
      12: aload_2
      13: invokevirtual #168                // Method com/amazonaws/services/s3/model/ObjectListing.isTruncated:()Z
      16: ifne          82
      19: new           #139                // class com/amazonaws/services/s3/model/ObjectListing
      22: dup
      23: invokespecial #169                // Method com/amazonaws/services/s3/model/ObjectListing."<init>":()V
      26: astore_3
      27: aload_3
      28: aload_2
      29: invokevirtual #170                // Method com/amazonaws/services/s3/model/ObjectListing.getBucketName:()Ljava/lang/String;
      32: invokevirtual #171                // Method com/amazonaws/services/s3/model/ObjectListing.setBucketName:(Ljava/lang/String;)V
      35: aload_3
      36: aload_2
      37: invokevirtual #172                // Method com/amazonaws/services/s3/model/ObjectListing.getDelimiter:()Ljava/lang/String;
      40: invokevirtual #173                // Method com/amazonaws/services/s3/model/ObjectListing.setDelimiter:(Ljava/lang/String;)V
      43: aload_3
      44: aload_2
      45: invokevirtual #174                // Method com/amazonaws/services/s3/model/ObjectListing.getNextMarker:()Ljava/lang/String;
      48: invokevirtual #175                // Method com/amazonaws/services/s3/model/ObjectListing.setMarker:(Ljava/lang/String;)V
      51: aload_3
      52: aload_2
      53: invokevirtual #176                // Method com/amazonaws/services/s3/model/ObjectListing.getMaxKeys:()I
      56: invokevirtual #177                // Method com/amazonaws/services/s3/model/ObjectListing.setMaxKeys:(I)V
      59: aload_3
      60: aload_2
      61: invokevirtual #178                // Method com/amazonaws/services/s3/model/ObjectListing.getPrefix:()Ljava/lang/String;
      64: invokevirtual #179                // Method com/amazonaws/services/s3/model/ObjectListing.setPrefix:(Ljava/lang/String;)V
      67: aload_3
      68: aload_2
      69: invokevirtual #180                // Method com/amazonaws/services/s3/model/ObjectListing.getEncodingType:()Ljava/lang/String;
      72: invokevirtual #181                // Method com/amazonaws/services/s3/model/ObjectListing.setEncodingType:(Ljava/lang/String;)V
      75: aload_3
      76: iconst_0
      77: invokevirtual #182                // Method com/amazonaws/services/s3/model/ObjectListing.setTruncated:(Z)V
      80: aload_3
      81: areturn
      82: aload_0
      83: aload_1
      84: invokevirtual #183                // Method com/amazonaws/services/s3/model/ListNextBatchOfObjectsRequest.toListObjectsRequest:()Lcom/amazonaws/services/s3/model/ListObjectsRequest;
      87: invokevirtual #128                // Method listObjects:(Lcom/amazonaws/services/s3/model/ListObjectsRequest;)Lcom/amazonaws/services/s3/model/ObjectListing;
      90: areturn

  public com.amazonaws.services.s3.model.Owner getS3AccountOwner() throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #184                // class com/amazonaws/services/s3/model/GetS3AccountOwnerRequest
       4: dup
       5: invokespecial #185                // Method com/amazonaws/services/s3/model/GetS3AccountOwnerRequest."<init>":()V
       8: invokevirtual #186                // Method getS3AccountOwner:(Lcom/amazonaws/services/s3/model/GetS3AccountOwnerRequest;)Lcom/amazonaws/services/s3/model/Owner;
      11: areturn

  public com.amazonaws.services.s3.model.Owner getS3AccountOwner(com.amazonaws.services.s3.model.GetS3AccountOwnerRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #187                // String The request object parameter getS3AccountOwnerRequest must be specified.
       4: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: aconst_null
       9: aconst_null
      10: aload_1
      11: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      14: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      17: astore_2
      18: aload_0
      19: aload_2
      20: new           #188                // class com/amazonaws/services/s3/model/transform/Unmarshallers$ListBucketsOwnerUnmarshaller
      23: dup
      24: invokespecial #189                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$ListBucketsOwnerUnmarshaller."<init>":()V
      27: aconst_null
      28: aconst_null
      29: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      32: checkcast     #190                // class com/amazonaws/services/s3/model/Owner
      35: areturn

  public java.util.List<com.amazonaws.services.s3.model.Bucket> listBuckets(com.amazonaws.services.s3.model.ListBucketsRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #191                // String The request object parameter listBucketsRequest must be specified.
       4: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: aconst_null
       9: aconst_null
      10: aload_1
      11: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      14: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      17: astore_2
      18: aload_0
      19: aload_2
      20: new           #192                // class com/amazonaws/services/s3/model/transform/Unmarshallers$ListBucketsUnmarshaller
      23: dup
      24: invokespecial #193                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$ListBucketsUnmarshaller."<init>":()V
      27: aconst_null
      28: aconst_null
      29: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      32: checkcast     #194                // class java/util/List
      35: areturn

  public java.util.List<com.amazonaws.services.s3.model.Bucket> listBuckets() throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #195                // class com/amazonaws/services/s3/model/ListBucketsRequest
       4: dup
       5: invokespecial #196                // Method com/amazonaws/services/s3/model/ListBucketsRequest."<init>":()V
       8: invokevirtual #197                // Method listBuckets:(Lcom/amazonaws/services/s3/model/ListBucketsRequest;)Ljava/util/List;
      11: areturn

  public java.lang.String getBucketLocation(com.amazonaws.services.s3.model.GetBucketLocationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #198                // String The request parameter must be specified when requesting a bucket\'s location
       4: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: invokevirtual #199                // Method com/amazonaws/services/s3/model/GetBucketLocationRequest.getBucketName:()Ljava/lang/String;
      11: astore_2
      12: aload_0
      13: aload_2
      14: ldc           #200                // String The bucket name parameter must be specified when requesting a bucket\'s location
      16: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: aconst_null
      22: aload_1
      23: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      26: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      29: astore_3
      30: aload_3
      31: ldc           #201                // String location
      33: aconst_null
      34: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      39: aload_0
      40: aload_3
      41: new           #202                // class com/amazonaws/services/s3/model/transform/Unmarshallers$BucketLocationUnmarshaller
      44: dup
      45: invokespecial #203                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$BucketLocationUnmarshaller."<init>":()V
      48: aload_2
      49: aconst_null
      50: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      53: checkcast     #204                // class java/lang/String
      56: areturn

  public java.lang.String getBucketLocation(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #205                // class com/amazonaws/services/s3/model/GetBucketLocationRequest
       4: dup
       5: aload_1
       6: invokespecial #206                // Method com/amazonaws/services/s3/model/GetBucketLocationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #207                // Method getBucketLocation:(Lcom/amazonaws/services/s3/model/GetBucketLocationRequest;)Ljava/lang/String;
      12: areturn

  public com.amazonaws.services.s3.model.Bucket createBucket(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #208                // class com/amazonaws/services/s3/model/CreateBucketRequest
       4: dup
       5: aload_1
       6: invokespecial #209                // Method com/amazonaws/services/s3/model/CreateBucketRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #210                // Method createBucket:(Lcom/amazonaws/services/s3/model/CreateBucketRequest;)Lcom/amazonaws/services/s3/model/Bucket;
      12: areturn

  public com.amazonaws.services.s3.model.Bucket createBucket(java.lang.String, com.amazonaws.services.s3.model.Region) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #208                // class com/amazonaws/services/s3/model/CreateBucketRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #211                // Method com/amazonaws/services/s3/model/CreateBucketRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/Region;)V
      10: invokevirtual #210                // Method createBucket:(Lcom/amazonaws/services/s3/model/CreateBucketRequest;)Lcom/amazonaws/services/s3/model/Bucket;
      13: areturn

  public com.amazonaws.services.s3.model.Bucket createBucket(java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #208                // class com/amazonaws/services/s3/model/CreateBucketRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #212                // Method com/amazonaws/services/s3/model/CreateBucketRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: invokevirtual #210                // Method createBucket:(Lcom/amazonaws/services/s3/model/CreateBucketRequest;)Lcom/amazonaws/services/s3/model/Bucket;
      13: areturn

  public com.amazonaws.services.s3.model.Bucket createBucket(com.amazonaws.services.s3.model.CreateBucketRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #213                // String The CreateBucketRequest parameter must be specified when creating a bucket
       4: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: invokevirtual #214                // Method com/amazonaws/services/s3/model/CreateBucketRequest.getBucketName:()Ljava/lang/String;
      11: astore_2
      12: aload_1
      13: invokevirtual #215                // Method com/amazonaws/services/s3/model/CreateBucketRequest.getRegion:()Ljava/lang/String;
      16: astore_3
      17: aload_0
      18: aload_2
      19: ldc           #216                // String The bucket name parameter must be specified when creating a bucket
      21: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      24: aload_2
      25: ifnull        33
      28: aload_2
      29: invokevirtual #217                // Method java/lang/String.trim:()Ljava/lang/String;
      32: astore_2
      33: aload_2
      34: invokestatic  #218                // Method com/amazonaws/services/s3/internal/BucketNameUtils.validateBucketName:(Ljava/lang/String;)V
      37: aload_0
      38: aload_2
      39: aconst_null
      40: aload_1
      41: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      44: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      47: astore        4
      49: aload_1
      50: invokevirtual #220                // Method com/amazonaws/services/s3/model/CreateBucketRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
      53: ifnull        68
      56: aload         4
      58: aload_1
      59: invokevirtual #220                // Method com/amazonaws/services/s3/model/CreateBucketRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
      62: invokestatic  #221                // Method addAclHeaders:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/AccessControlList;)V
      65: goto          91
      68: aload_1
      69: invokevirtual #222                // Method com/amazonaws/services/s3/model/CreateBucketRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      72: ifnull        91
      75: aload         4
      77: ldc           #224                // String x-amz-acl
      79: aload_1
      80: invokevirtual #222                // Method com/amazonaws/services/s3/model/CreateBucketRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      83: invokevirtual #225                // Method com/amazonaws/services/s3/model/CannedAccessControlList.toString:()Ljava/lang/String;
      86: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      91: aload_0
      92: getfield      #56                 // Field endpoint:Ljava/net/URI;
      95: invokevirtual #57                 // Method java/net/URI.getHost:()Ljava/lang/String;
      98: invokestatic  #227                // Method com/amazonaws/services/s3/internal/ServiceUtils.isS3USEastEndpiont:(Ljava/lang/String;)Z
     101: ifne          124
     104: aload_3
     105: invokestatic  #228                // Method com/amazonaws/util/StringUtils.isNullOrEmpty:(Ljava/lang/String;)Z
     108: ifeq          124
     111: aload_0
     112: getfield      #56                 // Field endpoint:Ljava/net/URI;
     115: invokevirtual #57                 // Method java/net/URI.getHost:()Ljava/lang/String;
     118: ldc           #59                 // String s3
     120: invokestatic  #229                // Method com/amazonaws/util/AwsHostNameUtils.parseRegion:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     123: astore_3
     124: aload_3
     125: ifnull        205
     128: aload_3
     129: invokestatic  #230                // Method com/amazonaws/util/StringUtils.upperCase:(Ljava/lang/String;)Ljava/lang/String;
     132: getstatic     #231                // Field com/amazonaws/services/s3/model/Region.US_Standard:Lcom/amazonaws/services/s3/model/Region;
     135: invokevirtual #232                // Method com/amazonaws/services/s3/model/Region.toString:()Ljava/lang/String;
     138: invokevirtual #233                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     141: ifne          205
     144: new           #234                // class com/amazonaws/services/s3/internal/XmlWriter
     147: dup
     148: invokespecial #235                // Method com/amazonaws/services/s3/internal/XmlWriter."<init>":()V
     151: astore        5
     153: aload         5
     155: ldc           #236                // String CreateBucketConfiguration
     157: ldc           #237                // String xmlns
     159: ldc           #238                // String http://s3.amazonaws.com/doc/2006-03-01/
     161: invokevirtual #239                // Method com/amazonaws/services/s3/internal/XmlWriter.start:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/XmlWriter;
     164: pop
     165: aload         5
     167: ldc           #240                // String LocationConstraint
     169: invokevirtual #241                // Method com/amazonaws/services/s3/internal/XmlWriter.start:(Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/XmlWriter;
     172: aload_3
     173: invokevirtual #242                // Method com/amazonaws/services/s3/internal/XmlWriter.value:(Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/XmlWriter;
     176: invokevirtual #243                // Method com/amazonaws/services/s3/internal/XmlWriter.end:()Lcom/amazonaws/services/s3/internal/XmlWriter;
     179: pop
     180: aload         5
     182: invokevirtual #243                // Method com/amazonaws/services/s3/internal/XmlWriter.end:()Lcom/amazonaws/services/s3/internal/XmlWriter;
     185: pop
     186: aload         4
     188: new           #244                // class java/io/ByteArrayInputStream
     191: dup
     192: aload         5
     194: invokevirtual #245                // Method com/amazonaws/services/s3/internal/XmlWriter.getBytes:()[B
     197: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     200: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     205: aload_0
     206: aload         4
     208: aload_0
     209: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     212: aload_2
     213: aconst_null
     214: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     217: pop
     218: new           #249                // class com/amazonaws/services/s3/model/Bucket
     221: dup
     222: aload_2
     223: invokespecial #250                // Method com/amazonaws/services/s3/model/Bucket."<init>":(Ljava/lang/String;)V
     226: areturn

  public com.amazonaws.services.s3.model.AccessControlList getObjectAcl(java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #251                // class com/amazonaws/services/s3/model/GetObjectAclRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #252                // Method com/amazonaws/services/s3/model/GetObjectAclRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: invokevirtual #253                // Method getObjectAcl:(Lcom/amazonaws/services/s3/model/GetObjectAclRequest;)Lcom/amazonaws/services/s3/model/AccessControlList;
      13: areturn

  public com.amazonaws.services.s3.model.AccessControlList getObjectAcl(java.lang.String, java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #251                // class com/amazonaws/services/s3/model/GetObjectAclRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #254                // Method com/amazonaws/services/s3/model/GetObjectAclRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      11: invokevirtual #253                // Method getObjectAcl:(Lcom/amazonaws/services/s3/model/GetObjectAclRequest;)Lcom/amazonaws/services/s3/model/AccessControlList;
      14: areturn

  public com.amazonaws.services.s3.model.AccessControlList getObjectAcl(com.amazonaws.services.s3.model.GetObjectAclRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #255                // String The request parameter must be specified when requesting an object\'s ACL
       4: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: invokevirtual #256                // Method com/amazonaws/services/s3/model/GetObjectAclRequest.getBucketName:()Ljava/lang/String;
      12: ldc_w         #257                // String The bucket name parameter must be specified when requesting an object\'s ACL
      15: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: invokevirtual #258                // Method com/amazonaws/services/s3/model/GetObjectAclRequest.getKey:()Ljava/lang/String;
      23: ldc_w         #259                // String The key parameter must be specified when requesting an object\'s ACL
      26: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      29: aload_0
      30: aload_1
      31: invokevirtual #256                // Method com/amazonaws/services/s3/model/GetObjectAclRequest.getBucketName:()Ljava/lang/String;
      34: aload_1
      35: invokevirtual #258                // Method com/amazonaws/services/s3/model/GetObjectAclRequest.getKey:()Ljava/lang/String;
      38: aload_1
      39: invokevirtual #260                // Method com/amazonaws/services/s3/model/GetObjectAclRequest.getVersionId:()Ljava/lang/String;
      42: aload_1
      43: invokevirtual #261                // Method com/amazonaws/services/s3/model/GetObjectAclRequest.isRequesterPays:()Z
      46: aload_1
      47: invokespecial #262                // Method getAcl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/model/AccessControlList;
      50: areturn

  public void setObjectAcl(java.lang.String, java.lang.String, com.amazonaws.services.s3.model.AccessControlList) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: invokevirtual #263                // Method setObjectAcl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/AccessControlList;)V
       8: return

  public void setObjectAcl(java.lang.String, java.lang.String, com.amazonaws.services.s3.model.CannedAccessControlList) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: invokevirtual #264                // Method setObjectAcl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/CannedAccessControlList;)V
       8: return

  public void setObjectAcl(java.lang.String, java.lang.String, java.lang.String, com.amazonaws.services.s3.model.AccessControlList) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #265                // class com/amazonaws/services/s3/model/SetObjectAclRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #266                // Method com/amazonaws/services/s3/model/SetObjectAclRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/AccessControlList;)V
      13: invokevirtual #267                // Method setObjectAcl:(Lcom/amazonaws/services/s3/model/SetObjectAclRequest;)V
      16: return

  public void setObjectAcl(java.lang.String, java.lang.String, java.lang.String, com.amazonaws.services.s3.model.AccessControlList, com.amazonaws.metrics.RequestMetricCollector) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #265                // class com/amazonaws/services/s3/model/SetObjectAclRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #266                // Method com/amazonaws/services/s3/model/SetObjectAclRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/AccessControlList;)V
      13: aload         5
      15: invokevirtual #268                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
      18: checkcast     #265                // class com/amazonaws/services/s3/model/SetObjectAclRequest
      21: invokevirtual #267                // Method setObjectAcl:(Lcom/amazonaws/services/s3/model/SetObjectAclRequest;)V
      24: return

  public void setObjectAcl(java.lang.String, java.lang.String, java.lang.String, com.amazonaws.services.s3.model.CannedAccessControlList) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #265                // class com/amazonaws/services/s3/model/SetObjectAclRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #269                // Method com/amazonaws/services/s3/model/SetObjectAclRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/CannedAccessControlList;)V
      13: invokevirtual #267                // Method setObjectAcl:(Lcom/amazonaws/services/s3/model/SetObjectAclRequest;)V
      16: return

  public void setObjectAcl(java.lang.String, java.lang.String, java.lang.String, com.amazonaws.services.s3.model.CannedAccessControlList, com.amazonaws.metrics.RequestMetricCollector);
    Code:
       0: aload_0
       1: new           #265                // class com/amazonaws/services/s3/model/SetObjectAclRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #269                // Method com/amazonaws/services/s3/model/SetObjectAclRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/CannedAccessControlList;)V
      13: aload         5
      15: invokevirtual #268                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
      18: checkcast     #265                // class com/amazonaws/services/s3/model/SetObjectAclRequest
      21: invokevirtual #267                // Method setObjectAcl:(Lcom/amazonaws/services/s3/model/SetObjectAclRequest;)V
      24: return

  public void setObjectAcl(com.amazonaws.services.s3.model.SetObjectAclRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #270                // String The request must not be null.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #271                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getBucketName:()Ljava/lang/String;
      13: ldc_w         #272                // String The bucket name parameter must be specified when setting an object\'s ACL
      16: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #273                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getKey:()Ljava/lang/String;
      24: ldc_w         #274                // String The key parameter must be specified when setting an object\'s ACL
      27: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_1
      31: invokevirtual #275                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getAcl:()Lcom/amazonaws/services/s3/model/AccessControlList;
      34: ifnull        55
      37: aload_1
      38: invokevirtual #276                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      41: ifnull        55
      44: new           #277                // class java/lang/IllegalArgumentException
      47: dup
      48: ldc_w         #278                // String Only one of the ACL and CannedACL parameters can be specified, not both.
      51: invokespecial #279                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: invokevirtual #275                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getAcl:()Lcom/amazonaws/services/s3/model/AccessControlList;
      59: ifnull        90
      62: aload_0
      63: aload_1
      64: invokevirtual #271                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getBucketName:()Ljava/lang/String;
      67: aload_1
      68: invokevirtual #273                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getKey:()Ljava/lang/String;
      71: aload_1
      72: invokevirtual #280                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getVersionId:()Ljava/lang/String;
      75: aload_1
      76: invokevirtual #275                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getAcl:()Lcom/amazonaws/services/s3/model/AccessControlList;
      79: aload_1
      80: invokevirtual #281                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.isRequesterPays:()Z
      83: aload_1
      84: invokespecial #282                // Method setAcl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/AccessControlList;ZLcom/amazonaws/AmazonWebServiceRequest;)V
      87: goto          136
      90: aload_1
      91: invokevirtual #276                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      94: ifnull        125
      97: aload_0
      98: aload_1
      99: invokevirtual #271                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getBucketName:()Ljava/lang/String;
     102: aload_1
     103: invokevirtual #273                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getKey:()Ljava/lang/String;
     106: aload_1
     107: invokevirtual #280                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getVersionId:()Ljava/lang/String;
     110: aload_1
     111: invokevirtual #276                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
     114: aload_1
     115: invokevirtual #281                // Method com/amazonaws/services/s3/model/SetObjectAclRequest.isRequesterPays:()Z
     118: aload_1
     119: invokespecial #283                // Method setAcl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/CannedAccessControlList;ZLcom/amazonaws/AmazonWebServiceRequest;)V
     122: goto          136
     125: new           #277                // class java/lang/IllegalArgumentException
     128: dup
     129: ldc_w         #284                // String At least one of the ACL and CannedACL parameters should be specified
     132: invokespecial #279                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: return

  public com.amazonaws.services.s3.model.AccessControlList getBucketAcl(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #285                // class com/amazonaws/services/s3/model/GetBucketAclRequest
       4: dup
       5: aload_1
       6: invokespecial #286                // Method com/amazonaws/services/s3/model/GetBucketAclRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #287                // Method getBucketAcl:(Lcom/amazonaws/services/s3/model/GetBucketAclRequest;)Lcom/amazonaws/services/s3/model/AccessControlList;
      12: areturn

  public com.amazonaws.services.s3.model.AccessControlList getBucketAcl(com.amazonaws.services.s3.model.GetBucketAclRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_1
       1: invokevirtual #288                // Method com/amazonaws/services/s3/model/GetBucketAclRequest.getBucketName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: ldc_w         #289                // String The bucket name parameter must be specified when requesting a bucket\'s ACL
      10: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aload_0
      14: aload_2
      15: aconst_null
      16: aconst_null
      17: iconst_0
      18: aload_1
      19: invokespecial #262                // Method getAcl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/services/s3/model/AccessControlList;
      22: areturn

  public void setBucketAcl(java.lang.String, com.amazonaws.services.s3.model.AccessControlList) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #290                // class com/amazonaws/services/s3/model/SetBucketAclRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #291                // Method com/amazonaws/services/s3/model/SetBucketAclRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/AccessControlList;)V
      10: invokevirtual #292                // Method setBucketAcl:(Lcom/amazonaws/services/s3/model/SetBucketAclRequest;)V
      13: return

  public void setBucketAcl(java.lang.String, com.amazonaws.services.s3.model.AccessControlList, com.amazonaws.metrics.RequestMetricCollector);
    Code:
       0: new           #290                // class com/amazonaws/services/s3/model/SetBucketAclRequest
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #291                // Method com/amazonaws/services/s3/model/SetBucketAclRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/AccessControlList;)V
       9: aload_3
      10: invokevirtual #293                // Method com/amazonaws/services/s3/model/SetBucketAclRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
      13: checkcast     #290                // class com/amazonaws/services/s3/model/SetBucketAclRequest
      16: astore        4
      18: aload_0
      19: aload         4
      21: invokevirtual #292                // Method setBucketAcl:(Lcom/amazonaws/services/s3/model/SetBucketAclRequest;)V
      24: return

  public void setBucketAcl(java.lang.String, com.amazonaws.services.s3.model.CannedAccessControlList) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #290                // class com/amazonaws/services/s3/model/SetBucketAclRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #294                // Method com/amazonaws/services/s3/model/SetBucketAclRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/CannedAccessControlList;)V
      10: invokevirtual #292                // Method setBucketAcl:(Lcom/amazonaws/services/s3/model/SetBucketAclRequest;)V
      13: return

  public void setBucketAcl(java.lang.String, com.amazonaws.services.s3.model.CannedAccessControlList, com.amazonaws.metrics.RequestMetricCollector) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: new           #290                // class com/amazonaws/services/s3/model/SetBucketAclRequest
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #294                // Method com/amazonaws/services/s3/model/SetBucketAclRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/CannedAccessControlList;)V
       9: aload_3
      10: invokevirtual #293                // Method com/amazonaws/services/s3/model/SetBucketAclRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
      13: checkcast     #290                // class com/amazonaws/services/s3/model/SetBucketAclRequest
      16: astore        4
      18: aload_0
      19: aload         4
      21: invokevirtual #292                // Method setBucketAcl:(Lcom/amazonaws/services/s3/model/SetBucketAclRequest;)V
      24: return

  public void setBucketAcl(com.amazonaws.services.s3.model.SetBucketAclRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_1
       1: invokevirtual #295                // Method com/amazonaws/services/s3/model/SetBucketAclRequest.getBucketName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: ldc_w         #296                // String The bucket name parameter must be specified when setting a bucket\'s ACL
      10: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aload_1
      14: invokevirtual #297                // Method com/amazonaws/services/s3/model/SetBucketAclRequest.getAcl:()Lcom/amazonaws/services/s3/model/AccessControlList;
      17: astore_3
      18: aload_1
      19: invokevirtual #298                // Method com/amazonaws/services/s3/model/SetBucketAclRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      22: astore        4
      24: aload_3
      25: ifnonnull     44
      28: aload         4
      30: ifnonnull     44
      33: new           #277                // class java/lang/IllegalArgumentException
      36: dup
      37: ldc_w         #299                // String The ACL parameter must be specified when setting a bucket\'s ACL
      40: invokespecial #279                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_3
      45: ifnull        64
      48: aload         4
      50: ifnull        64
      53: new           #277                // class java/lang/IllegalArgumentException
      56: dup
      57: ldc_w         #300                // String Only one of the acl and cannedAcl parameter can be specified, not both.
      60: invokespecial #279                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_3
      65: ifnull        81
      68: aload_0
      69: aload_2
      70: aconst_null
      71: aconst_null
      72: aload_3
      73: iconst_0
      74: aload_1
      75: invokespecial #282                // Method setAcl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/AccessControlList;ZLcom/amazonaws/AmazonWebServiceRequest;)V
      78: goto          92
      81: aload_0
      82: aload_2
      83: aconst_null
      84: aconst_null
      85: aload         4
      87: iconst_0
      88: aload_1
      89: invokespecial #283                // Method setAcl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/CannedAccessControlList;ZLcom/amazonaws/AmazonWebServiceRequest;)V
      92: return

  public com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #301                // class com/amazonaws/services/s3/model/GetObjectMetadataRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #302                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: invokevirtual #303                // Method getObjectMetadata:(Lcom/amazonaws/services/s3/model/GetObjectMetadataRequest;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
      13: areturn

  public com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(com.amazonaws.services.s3.model.GetObjectMetadataRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #304                // String The GetObjectMetadataRequest parameter must be specified when requesting an object\'s metadata
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #305                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #306                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest.getKey:()Ljava/lang/String;
      17: astore_3
      18: aload_1
      19: invokevirtual #307                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest.getVersionId:()Ljava/lang/String;
      22: astore        4
      24: aload_0
      25: aload_2
      26: ldc_w         #308                // String The bucket name parameter must be specified when requesting an object\'s metadata
      29: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload_0
      33: aload_3
      34: ldc_w         #309                // String The key parameter must be specified when requesting an object\'s metadata
      37: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      40: aload_0
      41: aload_1
      42: invokevirtual #305                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest.getBucketName:()Ljava/lang/String;
      45: invokevirtual #310                // Method resolveServiceEndpoint:(Ljava/lang/String;)Ljava/net/URI;
      48: astore        5
      50: aload_0
      51: aload_2
      52: aload_3
      53: aload_1
      54: getstatic     #311                // Field com/amazonaws/http/HttpMethodName.HEAD:Lcom/amazonaws/http/HttpMethodName;
      57: aload         5
      59: invokevirtual #312                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;Ljava/net/URI;)Lcom/amazonaws/Request;
      62: astore        6
      64: aload         4
      66: ifnull        81
      69: aload         6
      71: ldc_w         #313                // String versionId
      74: aload         4
      76: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      81: aload         6
      83: aload_1
      84: invokevirtual #314                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest.isRequesterPays:()Z
      87: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
      90: aload_0
      91: aload         6
      93: aload_1
      94: invokevirtual #316                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest.getPartNumber:()Ljava/lang/Integer;
      97: invokespecial #317                // Method addPartNumberIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/Integer;)V
     100: aload         6
     102: aload_1
     103: invokevirtual #318                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     106: invokestatic  #319                // Method populateSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     109: aload_0
     110: aload         6
     112: new           #320                // class com/amazonaws/services/s3/internal/S3MetadataResponseHandler
     115: dup
     116: invokespecial #321                // Method com/amazonaws/services/s3/internal/S3MetadataResponseHandler."<init>":()V
     119: aload_2
     120: aload_3
     121: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     124: checkcast     #322                // class com/amazonaws/services/s3/model/ObjectMetadata
     127: areturn

  public com.amazonaws.services.s3.model.S3Object getObject(java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #323                // class com/amazonaws/services/s3/model/GetObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #324                // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: invokevirtual #325                // Method getObject:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)Lcom/amazonaws/services/s3/model/S3Object;
      13: areturn

  public boolean doesBucketExist(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #326                // class com/amazonaws/services/s3/model/HeadBucketRequest
       4: dup
       5: aload_1
       6: invokespecial #327                // Method com/amazonaws/services/s3/model/HeadBucketRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #328                // Method headBucket:(Lcom/amazonaws/services/s3/model/HeadBucketRequest;)Lcom/amazonaws/services/s3/model/HeadBucketResult;
      12: pop
      13: iconst_1
      14: ireturn
      15: astore_2
      16: aload_2
      17: invokevirtual #330                // Method com/amazonaws/AmazonServiceException.getStatusCode:()I
      20: sipush        301
      23: if_icmpeq     36
      26: aload_2
      27: invokevirtual #330                // Method com/amazonaws/AmazonServiceException.getStatusCode:()I
      30: sipush        403
      33: if_icmpne     38
      36: iconst_1
      37: ireturn
      38: aload_2
      39: invokevirtual #330                // Method com/amazonaws/AmazonServiceException.getStatusCode:()I
      42: sipush        404
      45: if_icmpne     50
      48: iconst_0
      49: ireturn
      50: aload_2
      51: athrow
    Exception table:
       from    to  target type
           0    14    15   Class com/amazonaws/AmazonServiceException

  public boolean doesObjectExist(java.lang.String, java.lang.String) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #331                // Method getObjectMetadata:(Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
       6: pop
       7: iconst_1
       8: ireturn
       9: astore_3
      10: aload_3
      11: invokevirtual #333                // Method com/amazonaws/services/s3/model/AmazonS3Exception.getStatusCode:()I
      14: sipush        404
      17: if_icmpne     22
      20: iconst_0
      21: ireturn
      22: aload_3
      23: athrow
    Exception table:
       from    to  target type
           0     8     9   Class com/amazonaws/services/s3/model/AmazonS3Exception

  public com.amazonaws.services.s3.model.HeadBucketResult headBucket(com.amazonaws.services.s3.model.HeadBucketRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_1
       1: invokevirtual #334                // Method com/amazonaws/services/s3/model/HeadBucketRequest.getBucketName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: ldc_w         #335                // String The bucketName parameter must be specified.
      10: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aload_0
      14: aload_2
      15: aconst_null
      16: aload_1
      17: getstatic     #311                // Field com/amazonaws/http/HttpMethodName.HEAD:Lcom/amazonaws/http/HttpMethodName;
      20: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      23: astore_3
      24: aload_0
      25: aload_3
      26: new           #336                // class com/amazonaws/services/s3/model/transform/HeadBucketResultHandler
      29: dup
      30: invokespecial #337                // Method com/amazonaws/services/s3/model/transform/HeadBucketResultHandler."<init>":()V
      33: aload_2
      34: aconst_null
      35: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      38: checkcast     #338                // class com/amazonaws/services/s3/model/HeadBucketResult
      41: areturn

  public void changeObjectStorageClass(java.lang.String, java.lang.String, com.amazonaws.services.s3.model.StorageClass) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #339                // String The bucketName parameter must be specified when changing an object\'s storage class
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_2
      10: ldc_w         #340                // String The key parameter must be specified when changing an object\'s storage class
      13: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_3
      18: ldc_w         #341                // String The newStorageClass parameter must be specified when changing an object\'s storage class
      21: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      24: aload_0
      25: new           #342                // class com/amazonaws/services/s3/model/CopyObjectRequest
      28: dup
      29: aload_1
      30: aload_2
      31: aload_1
      32: aload_2
      33: invokespecial #343                // Method com/amazonaws/services/s3/model/CopyObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      36: aload_3
      37: invokevirtual #344                // Method com/amazonaws/services/s3/model/StorageClass.toString:()Ljava/lang/String;
      40: invokevirtual #345                // Method com/amazonaws/services/s3/model/CopyObjectRequest.withStorageClass:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      43: invokevirtual #346                // Method copyObject:(Lcom/amazonaws/services/s3/model/CopyObjectRequest;)Lcom/amazonaws/services/s3/model/CopyObjectResult;
      46: pop
      47: return

  public void setObjectRedirectLocation(java.lang.String, java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #339                // String The bucketName parameter must be specified when changing an object\'s storage class
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_2
      10: ldc_w         #340                // String The key parameter must be specified when changing an object\'s storage class
      13: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_3
      18: ldc_w         #341                // String The newStorageClass parameter must be specified when changing an object\'s storage class
      21: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      24: aload_0
      25: new           #342                // class com/amazonaws/services/s3/model/CopyObjectRequest
      28: dup
      29: aload_1
      30: aload_2
      31: aload_1
      32: aload_2
      33: invokespecial #343                // Method com/amazonaws/services/s3/model/CopyObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      36: aload_3
      37: invokevirtual #347                // Method com/amazonaws/services/s3/model/CopyObjectRequest.withRedirectLocation:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      40: invokevirtual #346                // Method copyObject:(Lcom/amazonaws/services/s3/model/CopyObjectRequest;)Lcom/amazonaws/services/s3/model/CopyObjectResult;
      43: pop
      44: return

  public com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #348                // String The GetObjectRequest parameter must be specified when requesting an object
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #349                // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
      13: ldc_w         #350                // String The bucket name parameter must be specified when requesting an object
      16: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #351                // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
      24: ldc_w         #352                // String The key parameter must be specified when requesting an object
      27: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_0
      31: aload_1
      32: invokevirtual #349                // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
      35: aload_1
      36: invokevirtual #351                // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
      39: aload_1
      40: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      43: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      46: astore_2
      47: aload_1
      48: invokevirtual #353                // Method com/amazonaws/services/s3/model/GetObjectRequest.getVersionId:()Ljava/lang/String;
      51: ifnull        67
      54: aload_2
      55: ldc_w         #313                // String versionId
      58: aload_1
      59: invokevirtual #353                // Method com/amazonaws/services/s3/model/GetObjectRequest.getVersionId:()Ljava/lang/String;
      62: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      67: aload_0
      68: aload_2
      69: aload_1
      70: invokevirtual #354                // Method com/amazonaws/services/s3/model/GetObjectRequest.getPartNumber:()Ljava/lang/Integer;
      73: invokespecial #317                // Method addPartNumberIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/Integer;)V
      76: aload_1
      77: invokevirtual #355                // Method com/amazonaws/services/s3/model/GetObjectRequest.getRange:()[J
      80: astore_3
      81: aload_3
      82: ifnull        134
      85: aload_2
      86: ldc_w         #356                // String Range
      89: new           #357                // class java/lang/StringBuilder
      92: dup
      93: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      96: ldc_w         #359                // String bytes=
      99: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_3
     103: iconst_0
     104: laload
     105: invokestatic  #361                // Method java/lang/Long.toString:(J)Ljava/lang/String;
     108: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: ldc_w         #362                // String -
     114: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_3
     118: iconst_1
     119: laload
     120: invokestatic  #361                // Method java/lang/Long.toString:(J)Ljava/lang/String;
     123: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     134: aload_2
     135: aload_1
     136: invokevirtual #364                // Method com/amazonaws/services/s3/model/GetObjectRequest.isRequesterPays:()Z
     139: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
     142: aload_2
     143: aload_1
     144: invokevirtual #365                // Method com/amazonaws/services/s3/model/GetObjectRequest.getResponseHeaders:()Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;
     147: invokestatic  #366                // Method addResponseHeaderParameters:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;)V
     150: aload_2
     151: ldc_w         #367                // String If-Modified-Since
     154: aload_1
     155: invokevirtual #368                // Method com/amazonaws/services/s3/model/GetObjectRequest.getModifiedSinceConstraint:()Ljava/util/Date;
     158: invokestatic  #369                // Method addDateHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/Date;)V
     161: aload_2
     162: ldc_w         #370                // String If-Unmodified-Since
     165: aload_1
     166: invokevirtual #371                // Method com/amazonaws/services/s3/model/GetObjectRequest.getUnmodifiedSinceConstraint:()Ljava/util/Date;
     169: invokestatic  #369                // Method addDateHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/Date;)V
     172: aload_2
     173: ldc_w         #372                // String If-Match
     176: aload_1
     177: invokevirtual #373                // Method com/amazonaws/services/s3/model/GetObjectRequest.getMatchingETagConstraints:()Ljava/util/List;
     180: invokestatic  #374                // Method addStringListHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/List;)V
     183: aload_2
     184: ldc_w         #375                // String If-None-Match
     187: aload_1
     188: invokevirtual #376                // Method com/amazonaws/services/s3/model/GetObjectRequest.getNonmatchingETagConstraints:()Ljava/util/List;
     191: invokestatic  #374                // Method addStringListHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/List;)V
     194: aload_2
     195: aload_1
     196: invokevirtual #377                // Method com/amazonaws/services/s3/model/GetObjectRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     199: invokestatic  #319                // Method populateSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     202: aload_1
     203: invokevirtual #378                // Method com/amazonaws/services/s3/model/GetObjectRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
     206: astore        4
     208: aload         4
     210: getstatic     #379                // Field com/amazonaws/event/ProgressEventType.TRANSFER_STARTED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     213: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     216: pop
     217: aload_0
     218: aload_2
     219: new           #381                // class com/amazonaws/services/s3/internal/S3ObjectResponseHandler
     222: dup
     223: invokespecial #382                // Method com/amazonaws/services/s3/internal/S3ObjectResponseHandler."<init>":()V
     226: aload_1
     227: invokevirtual #349                // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
     230: aload_1
     231: invokevirtual #351                // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
     234: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     237: checkcast     #383                // class com/amazonaws/services/s3/model/S3Object
     240: astore        5
     242: aload         5
     244: aload_1
     245: invokevirtual #349                // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
     248: invokevirtual #384                // Method com/amazonaws/services/s3/model/S3Object.setBucketName:(Ljava/lang/String;)V
     251: aload         5
     253: aload_1
     254: invokevirtual #351                // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
     257: invokevirtual #385                // Method com/amazonaws/services/s3/model/S3Object.setKey:(Ljava/lang/String;)V
     260: aload         5
     262: invokevirtual #386                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
     265: astore        6
     267: aload         5
     269: invokevirtual #386                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
     272: invokevirtual #387                // Method com/amazonaws/services/s3/model/S3ObjectInputStream.getHttpRequest:()Lorg/apache/http/client/methods/HttpRequestBase;
     275: astore        7
     277: new           #388                // class com/amazonaws/util/ServiceClientHolderInputStream
     280: dup
     281: aload         6
     283: aload_0
     284: invokespecial #389                // Method com/amazonaws/util/ServiceClientHolderInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/AmazonWebServiceClient;)V
     287: astore        6
     289: new           #390                // class com/amazonaws/services/s3/AmazonS3Client$2
     292: dup
     293: aload_0
     294: aload         6
     296: aload         4
     298: invokespecial #391                // Method com/amazonaws/services/s3/AmazonS3Client$2."<init>":(Lcom/amazonaws/services/s3/AmazonS3Client;Ljava/io/InputStream;Lcom/amazonaws/event/ProgressListener;)V
     301: astore        8
     303: aload         8
     305: astore        6
     307: aload_0
     308: getfield      #2                  // Field skipMd5CheckStrategy:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
     311: aload_1
     312: aload         5
     314: invokevirtual #392                // Method com/amazonaws/services/s3/model/S3Object.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
     317: invokevirtual #393                // Method com/amazonaws/services/s3/internal/SkipMd5CheckStrategy.skipClientSideValidation:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Lcom/amazonaws/services/s3/model/ObjectMetadata;)Z
     320: ifne          380
     323: aload         5
     325: invokevirtual #392                // Method com/amazonaws/services/s3/model/S3Object.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
     328: invokevirtual #394                // Method com/amazonaws/services/s3/model/ObjectMetadata.getETag:()Ljava/lang/String;
     331: invokestatic  #395                // Method com/amazonaws/util/BinaryUtils.fromHex:(Ljava/lang/String;)[B
     334: astore        9
     336: ldc_w         #396                // String MD5
     339: invokestatic  #397                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
     342: astore        10
     344: new           #398                // class com/amazonaws/services/s3/internal/DigestValidationInputStream
     347: dup
     348: aload         6
     350: aload         10
     352: aload         9
     354: invokespecial #399                // Method com/amazonaws/services/s3/internal/DigestValidationInputStream."<init>":(Ljava/io/InputStream;Ljava/security/MessageDigest;[B)V
     357: astore        6
     359: goto          377
     362: astore        10
     364: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     367: ldc_w         #401                // String No MD5 digest algorithm available.  Unable to calculate checksum and verify data integrity.
     370: aload         10
     372: invokeinterface #402,  3          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     377: goto          400
     380: new           #1                  // class com/amazonaws/util/LengthCheckInputStream
     383: dup
     384: aload         6
     386: aload         5
     388: invokevirtual #392                // Method com/amazonaws/services/s3/model/S3Object.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
     391: invokevirtual #403                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentLength:()J
     394: iconst_1
     395: invokespecial #404                // Method com/amazonaws/util/LengthCheckInputStream."<init>":(Ljava/io/InputStream;JZ)V
     398: astore        6
     400: aload         5
     402: new           #405                // class com/amazonaws/services/s3/model/S3ObjectInputStream
     405: dup
     406: aload         6
     408: aload         7
     410: iconst_0
     411: invokespecial #406                // Method com/amazonaws/services/s3/model/S3ObjectInputStream."<init>":(Ljava/io/InputStream;Lorg/apache/http/client/methods/HttpRequestBase;Z)V
     414: invokevirtual #407                // Method com/amazonaws/services/s3/model/S3Object.setObjectContent:(Lcom/amazonaws/services/s3/model/S3ObjectInputStream;)V
     417: aload         5
     419: areturn
     420: astore        5
     422: aload         5
     424: invokevirtual #333                // Method com/amazonaws/services/s3/model/AmazonS3Exception.getStatusCode:()I
     427: sipush        412
     430: if_icmpeq     444
     433: aload         5
     435: invokevirtual #333                // Method com/amazonaws/services/s3/model/AmazonS3Exception.getStatusCode:()I
     438: sipush        304
     441: if_icmpne     455
     444: aload         4
     446: getstatic     #408                // Field com/amazonaws/event/ProgressEventType.TRANSFER_CANCELED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     449: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     452: pop
     453: aconst_null
     454: areturn
     455: aload         4
     457: getstatic     #409                // Field com/amazonaws/event/ProgressEventType.TRANSFER_FAILED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     460: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     463: pop
     464: aload         5
     466: athrow
    Exception table:
       from    to  target type
         336   359   362   Class java/security/NoSuchAlgorithmException
         217   419   420   Class com/amazonaws/services/s3/model/AmazonS3Exception

  public com.amazonaws.services.s3.model.ObjectMetadata getObject(com.amazonaws.services.s3.model.GetObjectRequest, java.io.File) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_2
       2: ldc_w         #410                // String The destination file parameter must be specified when downloading an object directly to a file
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_2
       9: new           #411                // class com/amazonaws/services/s3/AmazonS3Client$3
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #412                // Method com/amazonaws/services/s3/AmazonS3Client$3."<init>":(Lcom/amazonaws/services/s3/AmazonS3Client;Lcom/amazonaws/services/s3/model/GetObjectRequest;)V
      18: iconst_0
      19: invokestatic  #414                // Method com/amazonaws/services/s3/internal/ServiceUtils.retryableDownloadS3ObjectToFile:(Ljava/io/File;Lcom/amazonaws/services/s3/internal/ServiceUtils$RetryableS3DownloadTask;Z)Lcom/amazonaws/services/s3/model/S3Object;
      22: astore_3
      23: aload_3
      24: ifnonnull     29
      27: aconst_null
      28: areturn
      29: aload_3
      30: invokevirtual #392                // Method com/amazonaws/services/s3/model/S3Object.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      33: areturn

  public java.lang.String getObjectAsString(java.lang.String, java.lang.String) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #415                // String Bucket name must be provided
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_2
      10: ldc_w         #416                // String Object key must be provided
      13: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokevirtual #417                // Method getObject:(Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/model/S3Object;
      22: astore_3
      23: aload_3
      24: invokevirtual #386                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
      27: invokestatic  #418                // Method com/amazonaws/util/IOUtils.toString:(Ljava/io/InputStream;)Ljava/lang/String;
      30: astore        4
      32: aload_3
      33: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      36: invokestatic  #419                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      39: aload         4
      41: areturn
      42: astore        4
      44: new           #421                // class com/amazonaws/AmazonClientException
      47: dup
      48: ldc_w         #422                // String Error streaming content from S3 during download
      51: invokespecial #423                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: astore        5
      57: aload_3
      58: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      61: invokestatic  #419                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      64: aload         5
      66: athrow
    Exception table:
       from    to  target type
          23    32    42   Class java/io/IOException
          23    32    55   any
          42    57    55   any

  public void deleteBucket(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #424                // class com/amazonaws/services/s3/model/DeleteBucketRequest
       4: dup
       5: aload_1
       6: invokespecial #425                // Method com/amazonaws/services/s3/model/DeleteBucketRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #426                // Method deleteBucket:(Lcom/amazonaws/services/s3/model/DeleteBucketRequest;)V
      12: return

  public void deleteBucket(com.amazonaws.services.s3.model.DeleteBucketRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #427                // String The DeleteBucketRequest parameter must be specified when deleting a bucket
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #428                // Method com/amazonaws/services/s3/model/DeleteBucketRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #429                // String The bucket name parameter must be specified when deleting a bucket
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_0
      33: aload_3
      34: aload_0
      35: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      38: aload_2
      39: aconst_null
      40: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      43: pop
      44: getstatic     #4                  // Field bucketRegionCache:Ljava/util/Map;
      47: aload_2
      48: invokeinterface #431,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: return

  public com.amazonaws.services.s3.model.PutObjectResult putObject(java.lang.String, java.lang.String, java.io.File) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #432                // class com/amazonaws/services/s3/model/PutObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #433                // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V
      11: new           #322                // class com/amazonaws/services/s3/model/ObjectMetadata
      14: dup
      15: invokespecial #434                // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      18: invokevirtual #435                // Method com/amazonaws/services/s3/model/PutObjectRequest.withMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
      21: invokevirtual #436                // Method putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      24: areturn

  public com.amazonaws.services.s3.model.PutObjectResult putObject(java.lang.String, java.lang.String, java.io.InputStream, com.amazonaws.services.s3.model.ObjectMetadata) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #432                // class com/amazonaws/services/s3/model/PutObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #437                // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      13: invokevirtual #436                // Method putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      16: areturn

  public com.amazonaws.services.s3.model.PutObjectResult putObject(com.amazonaws.services.s3.model.PutObjectRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #438                // String The PutObjectRequest parameter must be specified when uploading an object
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #439                // Method com/amazonaws/services/s3/model/PutObjectRequest.getFile:()Ljava/io/File;
      12: astore_2
      13: aload_1
      14: invokevirtual #440                // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
      17: astore_3
      18: aload_1
      19: invokevirtual #441                // Method com/amazonaws/services/s3/model/PutObjectRequest.getBucketName:()Ljava/lang/String;
      22: astore        4
      24: aload_1
      25: invokevirtual #442                // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
      28: astore        5
      30: aload_1
      31: invokevirtual #443                // Method com/amazonaws/services/s3/model/PutObjectRequest.getMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      34: astore        6
      36: aload_3
      37: astore        7
      39: aload         6
      41: ifnonnull     53
      44: new           #322                // class com/amazonaws/services/s3/model/ObjectMetadata
      47: dup
      48: invokespecial #434                // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      51: astore        6
      53: aload_0
      54: aload         4
      56: ldc_w         #444                // String The bucket name parameter must be specified when uploading an object
      59: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      62: aload_0
      63: aload         5
      65: ldc_w         #445                // String The key parameter must be specified when uploading an object
      68: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      71: aload_2
      72: ifnonnull     90
      75: aload         7
      77: ifnull        211
      80: aload         7
      82: invokestatic  #446                // Method com/amazonaws/internal/ReleasableInputStream.wrap:(Ljava/io/InputStream;)Lcom/amazonaws/internal/ReleasableInputStream;
      85: astore        7
      87: goto          211
      90: aload         6
      92: aload_2
      93: invokevirtual #447                // Method java/io/File.length:()J
      96: invokevirtual #448                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentLength:(J)V
      99: aload         6
     101: invokevirtual #449                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentMD5:()Ljava/lang/String;
     104: ifnonnull     111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: istore        8
     114: aload         6
     116: invokevirtual #450                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentType:()Ljava/lang/String;
     119: ifnonnull     134
     122: aload         6
     124: invokestatic  #451                // Method com/amazonaws/services/s3/internal/Mimetypes.getInstance:()Lcom/amazonaws/services/s3/internal/Mimetypes;
     127: aload_2
     128: invokevirtual #452                // Method com/amazonaws/services/s3/internal/Mimetypes.getMimetype:(Ljava/io/File;)Ljava/lang/String;
     131: invokevirtual #453                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentType:(Ljava/lang/String;)V
     134: iload         8
     136: ifeq          202
     139: aload_0
     140: getfield      #2                  // Field skipMd5CheckStrategy:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
     143: aload_1
     144: invokevirtual #454                // Method com/amazonaws/services/s3/internal/SkipMd5CheckStrategy.skipServerSideValidation:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Z
     147: ifne          202
     150: aload_2
     151: invokestatic  #455                // Method com/amazonaws/util/Md5Utils.md5AsBase64:(Ljava/io/File;)Ljava/lang/String;
     154: astore        9
     156: aload         6
     158: aload         9
     160: invokevirtual #456                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentMD5:(Ljava/lang/String;)V
     163: goto          202
     166: astore        9
     168: new           #421                // class com/amazonaws/AmazonClientException
     171: dup
     172: new           #357                // class java/lang/StringBuilder
     175: dup
     176: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     179: ldc_w         #458                // String Unable to calculate MD5 hash:
     182: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload         9
     187: invokevirtual #459                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     190: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: aload         9
     198: invokespecial #460                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     201: athrow
     202: aload_2
     203: ldc_w         #461                // String Unable to find file to upload
     206: invokestatic  #462                // Method com/amazonaws/internal/ResettableInputStream.newResettableInputStream:(Ljava/io/File;Ljava/lang/String;)Lcom/amazonaws/internal/ResettableInputStream;
     209: astore        7
     211: aconst_null
     212: astore        10
     214: aload_0
     215: aload         4
     217: aload         5
     219: aload_1
     220: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
     223: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
     226: astore        11
     228: invokestatic  #463                // Method com/amazonaws/services/s3/internal/Constants.getS3StreamBufferSize:()Ljava/lang/Integer;
     231: astore        12
     233: aload         12
     235: ifnull        260
     238: aload         11
     240: invokeinterface #464,  1          // InterfaceMethod com/amazonaws/Request.getOriginalRequest:()Lcom/amazonaws/AmazonWebServiceRequest;
     245: astore        13
     247: aload         13
     249: invokevirtual #465                // Method com/amazonaws/AmazonWebServiceRequest.getRequestClientOptions:()Lcom/amazonaws/RequestClientOptions;
     252: aload         12
     254: invokevirtual #118                // Method java/lang/Integer.intValue:()I
     257: invokevirtual #466                // Method com/amazonaws/RequestClientOptions.setReadLimit:(I)V
     260: aload_1
     261: invokevirtual #467                // Method com/amazonaws/services/s3/model/PutObjectRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
     264: ifnull        279
     267: aload         11
     269: aload_1
     270: invokevirtual #467                // Method com/amazonaws/services/s3/model/PutObjectRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
     273: invokestatic  #221                // Method addAclHeaders:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/AccessControlList;)V
     276: goto          302
     279: aload_1
     280: invokevirtual #468                // Method com/amazonaws/services/s3/model/PutObjectRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
     283: ifnull        302
     286: aload         11
     288: ldc           #224                // String x-amz-acl
     290: aload_1
     291: invokevirtual #468                // Method com/amazonaws/services/s3/model/PutObjectRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
     294: invokevirtual #225                // Method com/amazonaws/services/s3/model/CannedAccessControlList.toString:()Ljava/lang/String;
     297: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     302: aload_1
     303: invokevirtual #469                // Method com/amazonaws/services/s3/model/PutObjectRequest.getStorageClass:()Ljava/lang/String;
     306: ifnull        323
     309: aload         11
     311: ldc_w         #470                // String x-amz-storage-class
     314: aload_1
     315: invokevirtual #469                // Method com/amazonaws/services/s3/model/PutObjectRequest.getStorageClass:()Ljava/lang/String;
     318: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     323: aload_1
     324: invokevirtual #471                // Method com/amazonaws/services/s3/model/PutObjectRequest.getRedirectLocation:()Ljava/lang/String;
     327: ifnull        361
     330: aload         11
     332: ldc_w         #472                // String x-amz-website-redirect-location
     335: aload_1
     336: invokevirtual #471                // Method com/amazonaws/services/s3/model/PutObjectRequest.getRedirectLocation:()Ljava/lang/String;
     339: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     344: aload         7
     346: ifnonnull     361
     349: new           #244                // class java/io/ByteArrayInputStream
     352: dup
     353: iconst_0
     354: newarray       byte
     356: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     359: astore        7
     361: aload         11
     363: aload_1
     364: invokevirtual #473                // Method com/amazonaws/services/s3/model/PutObjectRequest.isRequesterPays:()Z
     367: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
     370: aload         11
     372: aload_1
     373: invokevirtual #474                // Method com/amazonaws/services/s3/model/PutObjectRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     376: invokestatic  #319                // Method populateSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     379: aload         11
     381: aload_1
     382: invokevirtual #475                // Method com/amazonaws/services/s3/model/PutObjectRequest.getSSEAwsKeyManagementParams:()Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
     385: invokestatic  #476                // Method populateSSE_KMS:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;)V
     388: aload         6
     390: ldc_w         #477                // String Content-Length
     393: invokevirtual #478                // Method com/amazonaws/services/s3/model/ObjectMetadata.getRawMetadataValue:(Ljava/lang/String;)Ljava/lang/Object;
     396: checkcast     #479                // class java/lang/Long
     399: astore        13
     401: aload         13
     403: ifnonnull     420
     406: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     409: ldc_w         #480                // String No content length specified for stream data.  Stream contents will be buffered in memory and could result in out of memory errors.
     412: invokeinterface #481,  2          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     417: goto          452
     420: aload         13
     422: invokevirtual #482                // Method java/lang/Long.longValue:()J
     425: lstore        14
     427: lload         14
     429: lconst_0
     430: lcmp
     431: iflt          452
     434: new           #1                  // class com/amazonaws/util/LengthCheckInputStream
     437: dup
     438: aload         7
     440: lload         14
     442: iconst_0
     443: invokespecial #404                // Method com/amazonaws/util/LengthCheckInputStream."<init>":(Ljava/io/InputStream;JZ)V
     446: astore        16
     448: aload         16
     450: astore        7
     452: aload         6
     454: invokevirtual #449                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentMD5:()Ljava/lang/String;
     457: ifnonnull     485
     460: aload_0
     461: getfield      #2                  // Field skipMd5CheckStrategy:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
     464: aload_1
     465: invokevirtual #483                // Method com/amazonaws/services/s3/internal/SkipMd5CheckStrategy.skipClientSideValidationPerRequest:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Z
     468: ifne          485
     471: new           #484                // class com/amazonaws/services/s3/internal/MD5DigestCalculatingInputStream
     474: dup
     475: aload         7
     477: invokespecial #485                // Method com/amazonaws/services/s3/internal/MD5DigestCalculatingInputStream."<init>":(Ljava/io/InputStream;)V
     480: dup
     481: astore        10
     483: astore        7
     485: aload         6
     487: invokevirtual #450                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentType:()Ljava/lang/String;
     490: ifnonnull     501
     493: aload         6
     495: ldc_w         #487                // String application/octet-stream
     498: invokevirtual #453                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentType:(Ljava/lang/String;)V
     501: aload         11
     503: aload         6
     505: invokestatic  #488                // Method populateRequestMetadata:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     508: aload         11
     510: aload         7
     512: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     517: aload_1
     518: invokevirtual #489                // Method com/amazonaws/services/s3/model/PutObjectRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
     521: astore        8
     523: aload         8
     525: getstatic     #379                // Field com/amazonaws/event/ProgressEventType.TRANSFER_STARTED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     528: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     531: pop
     532: aload_0
     533: aload         11
     535: new           #320                // class com/amazonaws/services/s3/internal/S3MetadataResponseHandler
     538: dup
     539: invokespecial #321                // Method com/amazonaws/services/s3/internal/S3MetadataResponseHandler."<init>":()V
     542: aload         4
     544: aload         5
     546: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     549: checkcast     #322                // class com/amazonaws/services/s3/model/ObjectMetadata
     552: astore        9
     554: goto          574
     557: astore        14
     559: aload         8
     561: getstatic     #409                // Field com/amazonaws/event/ProgressEventType.TRANSFER_FAILED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     564: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     567: pop
     568: aload         14
     570: invokestatic  #491                // Method com/amazonaws/util/Throwables.failure:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     573: athrow
     574: aload_1
     575: aload_2
     576: aload_3
     577: aload         7
     579: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     582: invokestatic  #492                // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     585: goto          604
     588: astore        17
     590: aload_1
     591: aload_2
     592: aload_3
     593: aload         7
     595: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     598: invokestatic  #492                // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     601: aload         17
     603: athrow
     604: aload         6
     606: invokevirtual #449                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentMD5:()Ljava/lang/String;
     609: astore        11
     611: aload         10
     613: ifnull        626
     616: aload         10
     618: invokevirtual #493                // Method com/amazonaws/services/s3/internal/MD5DigestCalculatingInputStream.getMd5Digest:()[B
     621: invokestatic  #494                // Method com/amazonaws/util/Base64.encodeAsString:([B)Ljava/lang/String;
     624: astore        11
     626: aload         9
     628: invokevirtual #394                // Method com/amazonaws/services/s3/model/ObjectMetadata.getETag:()Ljava/lang/String;
     631: astore        12
     633: aload         11
     635: ifnull        776
     638: aload_0
     639: getfield      #2                  // Field skipMd5CheckStrategy:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
     642: aload         9
     644: invokevirtual #495                // Method com/amazonaws/services/s3/internal/SkipMd5CheckStrategy.skipClientSideValidationPerPutResponse:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)Z
     647: ifne          776
     650: aload         11
     652: invokestatic  #496                // Method com/amazonaws/util/BinaryUtils.fromBase64:(Ljava/lang/String;)[B
     655: astore        13
     657: aload         12
     659: invokestatic  #395                // Method com/amazonaws/util/BinaryUtils.fromHex:(Ljava/lang/String;)[B
     662: astore        14
     664: aload         13
     666: aload         14
     668: invokestatic  #497                // Method java/util/Arrays.equals:([B[B)Z
     671: ifne          776
     674: aload         8
     676: getstatic     #409                // Field com/amazonaws/event/ProgressEventType.TRANSFER_FAILED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     679: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     682: pop
     683: new           #421                // class com/amazonaws/AmazonClientException
     686: dup
     687: new           #357                // class java/lang/StringBuilder
     690: dup
     691: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     694: ldc_w         #498                // String Unable to verify integrity of data upload.  Client calculated content hash (contentMD5:
     697: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     700: aload         11
     702: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     705: ldc_w         #499                // String  in base 64) didn\'t match hash (etag:
     708: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     711: aload         12
     713: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     716: ldc_w         #500                // String  in hex) calculated by Amazon S3.  You may need to delete the data stored in Amazon S3. (metadata.contentMD5:
     719: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     722: aload         6
     724: invokevirtual #449                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentMD5:()Ljava/lang/String;
     727: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     730: ldc_w         #501                // String , md5DigestStream:
     733: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     736: aload         10
     738: invokevirtual #502                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     741: ldc_w         #503                // String , bucketName:
     744: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     747: aload         4
     749: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     752: ldc_w         #504                // String , key:
     755: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     758: aload         5
     760: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     763: ldc_w         #505                // String )
     766: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     769: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     772: invokespecial #423                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     775: athrow
     776: aload         8
     778: getstatic     #506                // Field com/amazonaws/event/ProgressEventType.TRANSFER_COMPLETED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     781: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     784: pop
     785: aload         9
     787: invokestatic  #507                // Method createPutObjectResult:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)Lcom/amazonaws/services/s3/model/PutObjectResult;
     790: astore        13
     792: aload         13
     794: aload         11
     796: invokevirtual #508                // Method com/amazonaws/services/s3/model/PutObjectResult.setContentMd5:(Ljava/lang/String;)V
     799: aload         13
     801: areturn
    Exception table:
       from    to  target type
         150   163   166   Class java/lang/Exception
         532   554   557   Class java/lang/Throwable
         214   574   588   any
         588   590   588   any

  private static com.amazonaws.services.s3.model.PutObjectResult createPutObjectResult(com.amazonaws.services.s3.model.ObjectMetadata);
    Code:
       0: new           #509                // class com/amazonaws/services/s3/model/PutObjectResult
       3: dup
       4: invokespecial #510                // Method com/amazonaws/services/s3/model/PutObjectResult."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #511                // Method com/amazonaws/services/s3/model/ObjectMetadata.getVersionId:()Ljava/lang/String;
      13: invokevirtual #512                // Method com/amazonaws/services/s3/model/PutObjectResult.setVersionId:(Ljava/lang/String;)V
      16: aload_1
      17: aload_0
      18: invokevirtual #513                // Method com/amazonaws/services/s3/model/ObjectMetadata.getSSEAlgorithm:()Ljava/lang/String;
      21: invokevirtual #514                // Method com/amazonaws/services/s3/model/PutObjectResult.setSSEAlgorithm:(Ljava/lang/String;)V
      24: aload_1
      25: aload_0
      26: invokevirtual #515                // Method com/amazonaws/services/s3/model/ObjectMetadata.getSSECustomerAlgorithm:()Ljava/lang/String;
      29: invokevirtual #516                // Method com/amazonaws/services/s3/model/PutObjectResult.setSSECustomerAlgorithm:(Ljava/lang/String;)V
      32: aload_1
      33: aload_0
      34: invokevirtual #517                // Method com/amazonaws/services/s3/model/ObjectMetadata.getSSECustomerKeyMd5:()Ljava/lang/String;
      37: invokevirtual #518                // Method com/amazonaws/services/s3/model/PutObjectResult.setSSECustomerKeyMd5:(Ljava/lang/String;)V
      40: aload_1
      41: aload_0
      42: invokevirtual #519                // Method com/amazonaws/services/s3/model/ObjectMetadata.getExpirationTime:()Ljava/util/Date;
      45: invokevirtual #520                // Method com/amazonaws/services/s3/model/PutObjectResult.setExpirationTime:(Ljava/util/Date;)V
      48: aload_1
      49: aload_0
      50: invokevirtual #521                // Method com/amazonaws/services/s3/model/ObjectMetadata.getExpirationTimeRuleId:()Ljava/lang/String;
      53: invokevirtual #522                // Method com/amazonaws/services/s3/model/PutObjectResult.setExpirationTimeRuleId:(Ljava/lang/String;)V
      56: aload_1
      57: aload_0
      58: invokevirtual #394                // Method com/amazonaws/services/s3/model/ObjectMetadata.getETag:()Ljava/lang/String;
      61: invokevirtual #523                // Method com/amazonaws/services/s3/model/PutObjectResult.setETag:(Ljava/lang/String;)V
      64: aload_1
      65: aload_0
      66: invokevirtual #524                // Method com/amazonaws/services/s3/model/PutObjectResult.setMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      69: aload_1
      70: aload_0
      71: invokevirtual #525                // Method com/amazonaws/services/s3/model/ObjectMetadata.isRequesterCharged:()Z
      74: invokevirtual #526                // Method com/amazonaws/services/s3/model/PutObjectResult.setRequesterCharged:(Z)V
      77: aload_1
      78: areturn

  private static void addAclHeaders(com.amazonaws.Request<? extends com.amazonaws.AmazonWebServiceRequest>, com.amazonaws.services.s3.model.AccessControlList);
    Code:
       0: aload_1
       1: invokevirtual #527                // Method com/amazonaws/services/s3/model/AccessControlList.getGrantsAsList:()Ljava/util/List;
       4: astore_2
       5: new           #528                // class java/util/HashMap
       8: dup
       9: invokespecial #529                // Method java/util/HashMap."<init>":()V
      12: astore_3
      13: aload_2
      14: invokeinterface #530,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore        4
      21: aload         4
      23: invokeinterface #531,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          104
      31: aload         4
      33: invokeinterface #532,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #533                // class com/amazonaws/services/s3/model/Grant
      41: astore        5
      43: aload_3
      44: aload         5
      46: invokevirtual #534                // Method com/amazonaws/services/s3/model/Grant.getPermission:()Lcom/amazonaws/services/s3/model/Permission;
      49: invokeinterface #535,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      54: ifne          76
      57: aload_3
      58: aload         5
      60: invokevirtual #534                // Method com/amazonaws/services/s3/model/Grant.getPermission:()Lcom/amazonaws/services/s3/model/Permission;
      63: new           #536                // class java/util/LinkedList
      66: dup
      67: invokespecial #537                // Method java/util/LinkedList."<init>":()V
      70: invokeinterface #538,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: aload_3
      77: aload         5
      79: invokevirtual #534                // Method com/amazonaws/services/s3/model/Grant.getPermission:()Lcom/amazonaws/services/s3/model/Permission;
      82: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #540                // class java/util/Collection
      90: aload         5
      92: invokevirtual #541                // Method com/amazonaws/services/s3/model/Grant.getGrantee:()Lcom/amazonaws/services/s3/model/Grantee;
      95: invokeinterface #542,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     100: pop
     101: goto          21
     104: invokestatic  #543                // Method com/amazonaws/services/s3/model/Permission.values:()[Lcom/amazonaws/services/s3/model/Permission;
     107: astore        4
     109: aload         4
     111: arraylength
     112: istore        5
     114: iconst_0
     115: istore        6
     117: iload         6
     119: iload         5
     121: if_icmpge     284
     124: aload         4
     126: iload         6
     128: aaload
     129: astore        7
     131: aload_3
     132: aload         7
     134: invokeinterface #535,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     139: ifeq          278
     142: aload_3
     143: aload         7
     145: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     150: checkcast     #540                // class java/util/Collection
     153: astore        8
     155: iconst_0
     156: istore        9
     158: new           #357                // class java/lang/StringBuilder
     161: dup
     162: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     165: astore        10
     167: aload         8
     169: invokeinterface #544,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     174: astore        11
     176: aload         11
     178: invokeinterface #531,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     183: ifeq          262
     186: aload         11
     188: invokeinterface #532,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     193: checkcast     #545                // class com/amazonaws/services/s3/model/Grantee
     196: astore        12
     198: iload         9
     200: ifne          209
     203: iconst_1
     204: istore        9
     206: goto          218
     209: aload         10
     211: ldc_w         #546                // String ,
     214: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: pop
     218: aload         10
     220: aload         12
     222: invokeinterface #547,  1          // InterfaceMethod com/amazonaws/services/s3/model/Grantee.getTypeIdentifier:()Ljava/lang/String;
     227: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: ldc_w         #548                // String =
     233: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: ldc_w         #549                // String \"
     239: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: aload         12
     244: invokeinterface #550,  1          // InterfaceMethod com/amazonaws/services/s3/model/Grantee.getIdentifier:()Ljava/lang/String;
     249: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: ldc_w         #549                // String \"
     255: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: pop
     259: goto          176
     262: aload_0
     263: aload         7
     265: invokevirtual #551                // Method com/amazonaws/services/s3/model/Permission.getHeaderName:()Ljava/lang/String;
     268: aload         10
     270: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     273: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     278: iinc          6, 1
     281: goto          117
     284: return

  public com.amazonaws.services.s3.model.CopyObjectResult copyObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #342                // class com/amazonaws/services/s3/model/CopyObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #343                // Method com/amazonaws/services/s3/model/CopyObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      13: invokevirtual #346                // Method copyObject:(Lcom/amazonaws/services/s3/model/CopyObjectRequest;)Lcom/amazonaws/services/s3/model/CopyObjectResult;
      16: areturn

  public com.amazonaws.services.s3.model.CopyObjectResult copyObject(com.amazonaws.services.s3.model.CopyObjectRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #552                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceBucketName:()Ljava/lang/String;
       5: ldc_w         #553                // String The source bucket name must be specified when copying an object
       8: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: invokevirtual #554                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceKey:()Ljava/lang/String;
      16: ldc_w         #555                // String The source object key must be specified when copying an object
      19: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: invokevirtual #556                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationBucketName:()Ljava/lang/String;
      27: ldc_w         #557                // String The destination bucket name must be specified when copying an object
      30: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload_0
      34: aload_1
      35: invokevirtual #558                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationKey:()Ljava/lang/String;
      38: ldc_w         #559                // String The destination object key must be specified when copying an object
      41: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      44: aload_1
      45: invokevirtual #558                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationKey:()Ljava/lang/String;
      48: astore_2
      49: aload_1
      50: invokevirtual #556                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationBucketName:()Ljava/lang/String;
      53: astore_3
      54: aload_0
      55: aload_3
      56: aload_2
      57: aload_1
      58: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      61: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      64: astore        4
      66: aload         4
      68: aload_1
      69: invokestatic  #560                // Method populateRequestWithCopyObjectParameters:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/CopyObjectRequest;)V
      72: aload         4
      74: aload_1
      75: invokevirtual #561                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSSEAwsKeyManagementParams:()Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
      78: invokestatic  #476                // Method populateSSE_KMS:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;)V
      81: aload_0
      82: aload         4
      84: invokespecial #562                // Method setZeroContentLength:(Lcom/amazonaws/Request;)V
      87: aconst_null
      88: astore        5
      90: new           #563                // class com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain
      93: dup
      94: new           #564                // class com/amazonaws/services/s3/model/transform/Unmarshallers$CopyObjectUnmarshaller
      97: dup
      98: invokespecial #565                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$CopyObjectUnmarshaller."<init>":()V
     101: iconst_4
     102: anewarray     #566                // class com/amazonaws/services/s3/internal/HeaderHandler
     105: dup
     106: iconst_0
     107: new           #567                // class com/amazonaws/services/s3/internal/ServerSideEncryptionHeaderHandler
     110: dup
     111: invokespecial #568                // Method com/amazonaws/services/s3/internal/ServerSideEncryptionHeaderHandler."<init>":()V
     114: aastore
     115: dup
     116: iconst_1
     117: new           #569                // class com/amazonaws/services/s3/internal/S3VersionHeaderHandler
     120: dup
     121: invokespecial #570                // Method com/amazonaws/services/s3/internal/S3VersionHeaderHandler."<init>":()V
     124: aastore
     125: dup
     126: iconst_2
     127: new           #571                // class com/amazonaws/services/s3/internal/ObjectExpirationHeaderHandler
     130: dup
     131: invokespecial #572                // Method com/amazonaws/services/s3/internal/ObjectExpirationHeaderHandler."<init>":()V
     134: aastore
     135: dup
     136: iconst_3
     137: new           #573                // class com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler
     140: dup
     141: invokespecial #574                // Method com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler."<init>":()V
     144: aastore
     145: invokespecial #575                // Method com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain."<init>":(Lcom/amazonaws/transform/Unmarshaller;[Lcom/amazonaws/services/s3/internal/HeaderHandler;)V
     148: astore        6
     150: aload_0
     151: aload         4
     153: aload         6
     155: aload_3
     156: aload_2
     157: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     160: checkcast     #576                // class com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler
     163: astore        5
     165: goto          186
     168: astore        6
     170: aload         6
     172: invokevirtual #333                // Method com/amazonaws/services/s3/model/AmazonS3Exception.getStatusCode:()I
     175: sipush        412
     178: if_icmpne     183
     181: aconst_null
     182: areturn
     183: aload         6
     185: athrow
     186: aload         5
     188: invokevirtual #577                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorCode:()Ljava/lang/String;
     191: ifnull        285
     194: aload         5
     196: invokevirtual #577                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorCode:()Ljava/lang/String;
     199: astore        6
     201: aload         5
     203: invokevirtual #578                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorMessage:()Ljava/lang/String;
     206: astore        7
     208: aload         5
     210: invokevirtual #579                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorRequestId:()Ljava/lang/String;
     213: astore        8
     215: aload         5
     217: invokevirtual #580                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorHostId:()Ljava/lang/String;
     220: astore        9
     222: new           #332                // class com/amazonaws/services/s3/model/AmazonS3Exception
     225: dup
     226: aload         7
     228: invokespecial #581                // Method com/amazonaws/services/s3/model/AmazonS3Exception."<init>":(Ljava/lang/String;)V
     231: astore        10
     233: aload         10
     235: aload         6
     237: invokevirtual #582                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setErrorCode:(Ljava/lang/String;)V
     240: aload         10
     242: getstatic     #583                // Field com/amazonaws/AmazonServiceException$ErrorType.Service:Lcom/amazonaws/AmazonServiceException$ErrorType;
     245: invokevirtual #584                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setErrorType:(Lcom/amazonaws/AmazonServiceException$ErrorType;)V
     248: aload         10
     250: aload         8
     252: invokevirtual #585                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setRequestId:(Ljava/lang/String;)V
     255: aload         10
     257: aload         9
     259: invokevirtual #586                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setExtendedRequestId:(Ljava/lang/String;)V
     262: aload         10
     264: aload         4
     266: invokeinterface #587,  1          // InterfaceMethod com/amazonaws/Request.getServiceName:()Ljava/lang/String;
     271: invokevirtual #588                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setServiceName:(Ljava/lang/String;)V
     274: aload         10
     276: sipush        200
     279: invokevirtual #589                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setStatusCode:(I)V
     282: aload         10
     284: athrow
     285: new           #590                // class com/amazonaws/services/s3/model/CopyObjectResult
     288: dup
     289: invokespecial #591                // Method com/amazonaws/services/s3/model/CopyObjectResult."<init>":()V
     292: astore        6
     294: aload         6
     296: aload         5
     298: invokevirtual #592                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getETag:()Ljava/lang/String;
     301: invokevirtual #593                // Method com/amazonaws/services/s3/model/CopyObjectResult.setETag:(Ljava/lang/String;)V
     304: aload         6
     306: aload         5
     308: invokevirtual #594                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getLastModified:()Ljava/util/Date;
     311: invokevirtual #595                // Method com/amazonaws/services/s3/model/CopyObjectResult.setLastModifiedDate:(Ljava/util/Date;)V
     314: aload         6
     316: aload         5
     318: invokevirtual #596                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getVersionId:()Ljava/lang/String;
     321: invokevirtual #597                // Method com/amazonaws/services/s3/model/CopyObjectResult.setVersionId:(Ljava/lang/String;)V
     324: aload         6
     326: aload         5
     328: invokevirtual #598                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getSSEAlgorithm:()Ljava/lang/String;
     331: invokevirtual #599                // Method com/amazonaws/services/s3/model/CopyObjectResult.setSSEAlgorithm:(Ljava/lang/String;)V
     334: aload         6
     336: aload         5
     338: invokevirtual #600                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getSSECustomerAlgorithm:()Ljava/lang/String;
     341: invokevirtual #601                // Method com/amazonaws/services/s3/model/CopyObjectResult.setSSECustomerAlgorithm:(Ljava/lang/String;)V
     344: aload         6
     346: aload         5
     348: invokevirtual #602                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getSSECustomerKeyMd5:()Ljava/lang/String;
     351: invokevirtual #603                // Method com/amazonaws/services/s3/model/CopyObjectResult.setSSECustomerKeyMd5:(Ljava/lang/String;)V
     354: aload         6
     356: aload         5
     358: invokevirtual #604                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getExpirationTime:()Ljava/util/Date;
     361: invokevirtual #605                // Method com/amazonaws/services/s3/model/CopyObjectResult.setExpirationTime:(Ljava/util/Date;)V
     364: aload         6
     366: aload         5
     368: invokevirtual #606                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getExpirationTimeRuleId:()Ljava/lang/String;
     371: invokevirtual #607                // Method com/amazonaws/services/s3/model/CopyObjectResult.setExpirationTimeRuleId:(Ljava/lang/String;)V
     374: aload         6
     376: aload         5
     378: invokevirtual #608                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.isRequesterCharged:()Z
     381: invokevirtual #609                // Method com/amazonaws/services/s3/model/CopyObjectResult.setRequesterCharged:(Z)V
     384: aload         6
     386: areturn
    Exception table:
       from    to  target type
          90   165   168   Class com/amazonaws/services/s3/model/AmazonS3Exception

  public com.amazonaws.services.s3.model.CopyPartResult copyPart(com.amazonaws.services.s3.model.CopyPartRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #610                // Method com/amazonaws/services/s3/model/CopyPartRequest.getSourceBucketName:()Ljava/lang/String;
       5: ldc_w         #611                // String The source bucket name must be specified when copying a part
       8: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: invokevirtual #612                // Method com/amazonaws/services/s3/model/CopyPartRequest.getSourceKey:()Ljava/lang/String;
      16: ldc_w         #613                // String The source object key must be specified when copying a part
      19: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: invokevirtual #614                // Method com/amazonaws/services/s3/model/CopyPartRequest.getDestinationBucketName:()Ljava/lang/String;
      27: ldc_w         #615                // String The destination bucket name must be specified when copying a part
      30: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload_0
      34: aload_1
      35: invokevirtual #616                // Method com/amazonaws/services/s3/model/CopyPartRequest.getUploadId:()Ljava/lang/String;
      38: ldc_w         #617                // String The upload id must be specified when copying a part
      41: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      44: aload_0
      45: aload_1
      46: invokevirtual #618                // Method com/amazonaws/services/s3/model/CopyPartRequest.getDestinationKey:()Ljava/lang/String;
      49: ldc_w         #619                // String The destination object key must be specified when copying a part
      52: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      55: aload_0
      56: aload_1
      57: invokevirtual #620                // Method com/amazonaws/services/s3/model/CopyPartRequest.getPartNumber:()I
      60: invokestatic  #621                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: ldc_w         #622                // String The part number must be specified when copying a part
      66: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      69: aload_1
      70: invokevirtual #618                // Method com/amazonaws/services/s3/model/CopyPartRequest.getDestinationKey:()Ljava/lang/String;
      73: astore_2
      74: aload_1
      75: invokevirtual #614                // Method com/amazonaws/services/s3/model/CopyPartRequest.getDestinationBucketName:()Ljava/lang/String;
      78: astore_3
      79: aload_0
      80: aload_3
      81: aload_2
      82: aload_1
      83: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      86: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      89: astore        4
      91: aload         4
      93: aload_1
      94: invokestatic  #623                // Method populateRequestWithCopyPartParameters:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/CopyPartRequest;)V
      97: aload         4
      99: ldc_w         #624                // String uploadId
     102: aload_1
     103: invokevirtual #616                // Method com/amazonaws/services/s3/model/CopyPartRequest.getUploadId:()Ljava/lang/String;
     106: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     111: aload         4
     113: ldc_w         #625                // String partNumber
     116: aload_1
     117: invokevirtual #620                // Method com/amazonaws/services/s3/model/CopyPartRequest.getPartNumber:()I
     120: invokestatic  #626                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     123: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     128: aload_0
     129: aload         4
     131: invokespecial #562                // Method setZeroContentLength:(Lcom/amazonaws/Request;)V
     134: aconst_null
     135: astore        5
     137: new           #563                // class com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain
     140: dup
     141: new           #564                // class com/amazonaws/services/s3/model/transform/Unmarshallers$CopyObjectUnmarshaller
     144: dup
     145: invokespecial #565                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$CopyObjectUnmarshaller."<init>":()V
     148: iconst_2
     149: anewarray     #566                // class com/amazonaws/services/s3/internal/HeaderHandler
     152: dup
     153: iconst_0
     154: new           #567                // class com/amazonaws/services/s3/internal/ServerSideEncryptionHeaderHandler
     157: dup
     158: invokespecial #568                // Method com/amazonaws/services/s3/internal/ServerSideEncryptionHeaderHandler."<init>":()V
     161: aastore
     162: dup
     163: iconst_1
     164: new           #569                // class com/amazonaws/services/s3/internal/S3VersionHeaderHandler
     167: dup
     168: invokespecial #570                // Method com/amazonaws/services/s3/internal/S3VersionHeaderHandler."<init>":()V
     171: aastore
     172: invokespecial #575                // Method com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain."<init>":(Lcom/amazonaws/transform/Unmarshaller;[Lcom/amazonaws/services/s3/internal/HeaderHandler;)V
     175: astore        6
     177: aload_0
     178: aload         4
     180: aload         6
     182: aload_3
     183: aload_2
     184: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     187: checkcast     #576                // class com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler
     190: astore        5
     192: goto          213
     195: astore        6
     197: aload         6
     199: invokevirtual #333                // Method com/amazonaws/services/s3/model/AmazonS3Exception.getStatusCode:()I
     202: sipush        412
     205: if_icmpne     210
     208: aconst_null
     209: areturn
     210: aload         6
     212: athrow
     213: aload         5
     215: invokevirtual #577                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorCode:()Ljava/lang/String;
     218: ifnull        312
     221: aload         5
     223: invokevirtual #577                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorCode:()Ljava/lang/String;
     226: astore        6
     228: aload         5
     230: invokevirtual #578                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorMessage:()Ljava/lang/String;
     233: astore        7
     235: aload         5
     237: invokevirtual #579                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorRequestId:()Ljava/lang/String;
     240: astore        8
     242: aload         5
     244: invokevirtual #580                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getErrorHostId:()Ljava/lang/String;
     247: astore        9
     249: new           #332                // class com/amazonaws/services/s3/model/AmazonS3Exception
     252: dup
     253: aload         7
     255: invokespecial #581                // Method com/amazonaws/services/s3/model/AmazonS3Exception."<init>":(Ljava/lang/String;)V
     258: astore        10
     260: aload         10
     262: aload         6
     264: invokevirtual #582                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setErrorCode:(Ljava/lang/String;)V
     267: aload         10
     269: getstatic     #583                // Field com/amazonaws/AmazonServiceException$ErrorType.Service:Lcom/amazonaws/AmazonServiceException$ErrorType;
     272: invokevirtual #584                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setErrorType:(Lcom/amazonaws/AmazonServiceException$ErrorType;)V
     275: aload         10
     277: aload         8
     279: invokevirtual #585                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setRequestId:(Ljava/lang/String;)V
     282: aload         10
     284: aload         9
     286: invokevirtual #586                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setExtendedRequestId:(Ljava/lang/String;)V
     289: aload         10
     291: aload         4
     293: invokeinterface #587,  1          // InterfaceMethod com/amazonaws/Request.getServiceName:()Ljava/lang/String;
     298: invokevirtual #588                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setServiceName:(Ljava/lang/String;)V
     301: aload         10
     303: sipush        200
     306: invokevirtual #589                // Method com/amazonaws/services/s3/model/AmazonS3Exception.setStatusCode:(I)V
     309: aload         10
     311: athrow
     312: new           #627                // class com/amazonaws/services/s3/model/CopyPartResult
     315: dup
     316: invokespecial #628                // Method com/amazonaws/services/s3/model/CopyPartResult."<init>":()V
     319: astore        6
     321: aload         6
     323: aload         5
     325: invokevirtual #592                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getETag:()Ljava/lang/String;
     328: invokevirtual #629                // Method com/amazonaws/services/s3/model/CopyPartResult.setETag:(Ljava/lang/String;)V
     331: aload         6
     333: aload_1
     334: invokevirtual #620                // Method com/amazonaws/services/s3/model/CopyPartRequest.getPartNumber:()I
     337: invokevirtual #630                // Method com/amazonaws/services/s3/model/CopyPartResult.setPartNumber:(I)V
     340: aload         6
     342: aload         5
     344: invokevirtual #594                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getLastModified:()Ljava/util/Date;
     347: invokevirtual #631                // Method com/amazonaws/services/s3/model/CopyPartResult.setLastModifiedDate:(Ljava/util/Date;)V
     350: aload         6
     352: aload         5
     354: invokevirtual #596                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getVersionId:()Ljava/lang/String;
     357: invokevirtual #632                // Method com/amazonaws/services/s3/model/CopyPartResult.setVersionId:(Ljava/lang/String;)V
     360: aload         6
     362: aload         5
     364: invokevirtual #598                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getSSEAlgorithm:()Ljava/lang/String;
     367: invokevirtual #633                // Method com/amazonaws/services/s3/model/CopyPartResult.setSSEAlgorithm:(Ljava/lang/String;)V
     370: aload         6
     372: aload         5
     374: invokevirtual #600                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getSSECustomerAlgorithm:()Ljava/lang/String;
     377: invokevirtual #634                // Method com/amazonaws/services/s3/model/CopyPartResult.setSSECustomerAlgorithm:(Ljava/lang/String;)V
     380: aload         6
     382: aload         5
     384: invokevirtual #602                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CopyObjectResultHandler.getSSECustomerKeyMd5:()Ljava/lang/String;
     387: invokevirtual #635                // Method com/amazonaws/services/s3/model/CopyPartResult.setSSECustomerKeyMd5:(Ljava/lang/String;)V
     390: aload         6
     392: areturn
    Exception table:
       from    to  target type
         137   192   195   Class com/amazonaws/services/s3/model/AmazonS3Exception

  public void deleteObject(java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #636                // class com/amazonaws/services/s3/model/DeleteObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #637                // Method com/amazonaws/services/s3/model/DeleteObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: invokevirtual #638                // Method deleteObject:(Lcom/amazonaws/services/s3/model/DeleteObjectRequest;)V
      13: return

  public void deleteObject(com.amazonaws.services.s3.model.DeleteObjectRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #639                // String The delete object request must be specified when deleting an object
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #640                // Method com/amazonaws/services/s3/model/DeleteObjectRequest.getBucketName:()Ljava/lang/String;
      13: ldc_w         #641                // String The bucket name must be specified when deleting an object
      16: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #642                // Method com/amazonaws/services/s3/model/DeleteObjectRequest.getKey:()Ljava/lang/String;
      24: ldc_w         #643                // String The key must be specified when deleting an object
      27: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_0
      31: aload_1
      32: invokevirtual #640                // Method com/amazonaws/services/s3/model/DeleteObjectRequest.getBucketName:()Ljava/lang/String;
      35: aload_1
      36: invokevirtual #642                // Method com/amazonaws/services/s3/model/DeleteObjectRequest.getKey:()Ljava/lang/String;
      39: aload_1
      40: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      43: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      46: astore_2
      47: aload_0
      48: aload_2
      49: aload_0
      50: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      53: aload_1
      54: invokevirtual #640                // Method com/amazonaws/services/s3/model/DeleteObjectRequest.getBucketName:()Ljava/lang/String;
      57: aload_1
      58: invokevirtual #642                // Method com/amazonaws/services/s3/model/DeleteObjectRequest.getKey:()Ljava/lang/String;
      61: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      64: pop
      65: return

  public com.amazonaws.services.s3.model.DeleteObjectsResult deleteObjects(com.amazonaws.services.s3.model.DeleteObjectsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #644                // Method com/amazonaws/services/s3/model/DeleteObjectsRequest.getBucketName:()Ljava/lang/String;
       5: aconst_null
       6: aload_1
       7: getstatic     #645                // Field com/amazonaws/http/HttpMethodName.POST:Lcom/amazonaws/http/HttpMethodName;
      10: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      13: astore_2
      14: aload_2
      15: ldc_w         #646                // String delete
      18: aconst_null
      19: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      24: aload_1
      25: invokevirtual #647                // Method com/amazonaws/services/s3/model/DeleteObjectsRequest.getMfa:()Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;
      28: ifnull        40
      31: aload_0
      32: aload_2
      33: aload_1
      34: invokevirtual #647                // Method com/amazonaws/services/s3/model/DeleteObjectsRequest.getMfa:()Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;
      37: invokespecial #648                // Method populateRequestWithMfaDetails:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;)V
      40: aload_2
      41: aload_1
      42: invokevirtual #649                // Method com/amazonaws/services/s3/model/DeleteObjectsRequest.isRequesterPays:()Z
      45: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
      48: new           #650                // class com/amazonaws/services/s3/model/transform/MultiObjectDeleteXmlFactory
      51: dup
      52: invokespecial #651                // Method com/amazonaws/services/s3/model/transform/MultiObjectDeleteXmlFactory."<init>":()V
      55: aload_1
      56: invokevirtual #652                // Method com/amazonaws/services/s3/model/transform/MultiObjectDeleteXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/DeleteObjectsRequest;)[B
      59: astore_3
      60: aload_2
      61: ldc_w         #477                // String Content-Length
      64: aload_3
      65: arraylength
      66: invokestatic  #653                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      69: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      74: aload_2
      75: ldc_w         #654                // String Content-Type
      78: ldc_w         #655                // String application/xml
      81: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      86: aload_2
      87: new           #244                // class java/io/ByteArrayInputStream
      90: dup
      91: aload_3
      92: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
      95: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     100: aload_3
     101: invokestatic  #656                // Method com/amazonaws/util/Md5Utils.computeMD5Hash:([B)[B
     104: astore        4
     106: aload         4
     108: invokestatic  #657                // Method com/amazonaws/util/BinaryUtils.toBase64:([B)Ljava/lang/String;
     111: astore        5
     113: aload_2
     114: ldc_w         #658                // String Content-MD5
     117: aload         5
     119: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     124: goto          142
     127: astore        4
     129: new           #421                // class com/amazonaws/AmazonClientException
     132: dup
     133: ldc_w         #659                // String Couldn\'t compute md5 sum
     136: aload         4
     138: invokespecial #460                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     141: athrow
     142: new           #563                // class com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain
     145: dup
     146: new           #660                // class com/amazonaws/services/s3/model/transform/Unmarshallers$DeleteObjectsResultUnmarshaller
     149: dup
     150: invokespecial #661                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$DeleteObjectsResultUnmarshaller."<init>":()V
     153: iconst_1
     154: anewarray     #566                // class com/amazonaws/services/s3/internal/HeaderHandler
     157: dup
     158: iconst_0
     159: new           #573                // class com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler
     162: dup
     163: invokespecial #574                // Method com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler."<init>":()V
     166: aastore
     167: invokespecial #575                // Method com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain."<init>":(Lcom/amazonaws/transform/Unmarshaller;[Lcom/amazonaws/services/s3/internal/HeaderHandler;)V
     170: astore        4
     172: aload_0
     173: aload_2
     174: aload         4
     176: aload_1
     177: invokevirtual #644                // Method com/amazonaws/services/s3/model/DeleteObjectsRequest.getBucketName:()Ljava/lang/String;
     180: aconst_null
     181: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     184: checkcast     #662                // class com/amazonaws/services/s3/internal/DeleteObjectsResponse
     187: astore        5
     189: aload         5
     191: invokevirtual #663                // Method com/amazonaws/services/s3/internal/DeleteObjectsResponse.getErrors:()Ljava/util/List;
     194: invokeinterface #664,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     199: ifne          293
     202: aload         4
     204: invokevirtual #665                // Method com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain.getResponseHeaders:()Ljava/util/Map;
     207: astore        6
     209: new           #666                // class com/amazonaws/services/s3/model/MultiObjectDeleteException
     212: dup
     213: aload         5
     215: invokevirtual #663                // Method com/amazonaws/services/s3/internal/DeleteObjectsResponse.getErrors:()Ljava/util/List;
     218: aload         5
     220: invokevirtual #667                // Method com/amazonaws/services/s3/internal/DeleteObjectsResponse.getDeletedObjects:()Ljava/util/List;
     223: invokespecial #668                // Method com/amazonaws/services/s3/model/MultiObjectDeleteException."<init>":(Ljava/util/Collection;Ljava/util/Collection;)V
     226: astore        7
     228: aload         7
     230: sipush        200
     233: invokevirtual #669                // Method com/amazonaws/services/s3/model/MultiObjectDeleteException.setStatusCode:(I)V
     236: aload         7
     238: aload         6
     240: ldc_w         #670                // String x-amz-request-id
     243: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     248: checkcast     #204                // class java/lang/String
     251: invokevirtual #671                // Method com/amazonaws/services/s3/model/MultiObjectDeleteException.setRequestId:(Ljava/lang/String;)V
     254: aload         7
     256: aload         6
     258: ldc_w         #672                // String x-amz-id-2
     261: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     266: checkcast     #204                // class java/lang/String
     269: invokevirtual #673                // Method com/amazonaws/services/s3/model/MultiObjectDeleteException.setExtendedRequestId:(Ljava/lang/String;)V
     272: aload         7
     274: aload         6
     276: ldc_w         #674                // String X-Amz-Cf-Id
     279: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     284: checkcast     #204                // class java/lang/String
     287: invokevirtual #675                // Method com/amazonaws/services/s3/model/MultiObjectDeleteException.setCloudFrontId:(Ljava/lang/String;)V
     290: aload         7
     292: athrow
     293: new           #676                // class com/amazonaws/services/s3/model/DeleteObjectsResult
     296: dup
     297: aload         5
     299: invokevirtual #667                // Method com/amazonaws/services/s3/internal/DeleteObjectsResponse.getDeletedObjects:()Ljava/util/List;
     302: aload         5
     304: invokevirtual #677                // Method com/amazonaws/services/s3/internal/DeleteObjectsResponse.isRequesterCharged:()Z
     307: invokespecial #678                // Method com/amazonaws/services/s3/model/DeleteObjectsResult."<init>":(Ljava/util/List;Z)V
     310: astore        6
     312: aload         6
     314: areturn
    Exception table:
       from    to  target type
         100   124   127   Class java/lang/Exception

  public void deleteVersion(java.lang.String, java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #679                // class com/amazonaws/services/s3/model/DeleteVersionRequest
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #680                // Method com/amazonaws/services/s3/model/DeleteVersionRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      11: invokevirtual #681                // Method deleteVersion:(Lcom/amazonaws/services/s3/model/DeleteVersionRequest;)V
      14: return

  public void deleteVersion(com.amazonaws.services.s3.model.DeleteVersionRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #682                // String The delete version request object must be specified when deleting a version
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #683                // Method com/amazonaws/services/s3/model/DeleteVersionRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #684                // Method com/amazonaws/services/s3/model/DeleteVersionRequest.getKey:()Ljava/lang/String;
      17: astore_3
      18: aload_1
      19: invokevirtual #685                // Method com/amazonaws/services/s3/model/DeleteVersionRequest.getVersionId:()Ljava/lang/String;
      22: astore        4
      24: aload_0
      25: aload_2
      26: ldc_w         #686                // String The bucket name must be specified when deleting a version
      29: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload_0
      33: aload_3
      34: ldc_w         #687                // String The key must be specified when deleting a version
      37: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      40: aload_0
      41: aload         4
      43: ldc_w         #688                // String The version ID must be specified when deleting a version
      46: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      49: aload_0
      50: aload_2
      51: aload_3
      52: aload_1
      53: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      56: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      59: astore        5
      61: aload         4
      63: ifnull        78
      66: aload         5
      68: ldc_w         #313                // String versionId
      71: aload         4
      73: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      78: aload_1
      79: invokevirtual #689                // Method com/amazonaws/services/s3/model/DeleteVersionRequest.getMfa:()Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;
      82: ifnull        95
      85: aload_0
      86: aload         5
      88: aload_1
      89: invokevirtual #689                // Method com/amazonaws/services/s3/model/DeleteVersionRequest.getMfa:()Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;
      92: invokespecial #648                // Method populateRequestWithMfaDetails:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;)V
      95: aload_0
      96: aload         5
      98: aload_0
      99: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     102: aload_2
     103: aload_3
     104: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     107: pop
     108: return

  public void setBucketVersioningConfiguration(com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #690                // String The SetBucketVersioningConfigurationRequest object must be specified when setting versioning configuration
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #691                // Method com/amazonaws/services/s3/model/SetBucketVersioningConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #692                // Method com/amazonaws/services/s3/model/SetBucketVersioningConfigurationRequest.getVersioningConfiguration:()Lcom/amazonaws/services/s3/model/BucketVersioningConfiguration;
      17: astore_3
      18: aload_0
      19: aload_2
      20: ldc_w         #693                // String The bucket name parameter must be specified when setting versioning configuration
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: ldc_w         #694                // String The bucket versioning parameter must be specified when setting versioning configuration
      31: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_3
      35: invokevirtual #695                // Method com/amazonaws/services/s3/model/BucketVersioningConfiguration.isMfaDeleteEnabled:()Ljava/lang/Boolean;
      38: ifnull        52
      41: aload_0
      42: aload_1
      43: invokevirtual #696                // Method com/amazonaws/services/s3/model/SetBucketVersioningConfigurationRequest.getMfa:()Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;
      46: ldc_w         #697                // String The MFA parameter must be specified when changing MFA Delete status in the versioning configuration
      49: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      52: aload_0
      53: aload_2
      54: aconst_null
      55: aload_1
      56: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      59: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      62: astore        4
      64: aload         4
      66: ldc_w         #698                // String versioning
      69: aconst_null
      70: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      75: aload_3
      76: invokevirtual #695                // Method com/amazonaws/services/s3/model/BucketVersioningConfiguration.isMfaDeleteEnabled:()Ljava/lang/Boolean;
      79: ifnull        99
      82: aload_1
      83: invokevirtual #696                // Method com/amazonaws/services/s3/model/SetBucketVersioningConfigurationRequest.getMfa:()Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;
      86: ifnull        99
      89: aload_0
      90: aload         4
      92: aload_1
      93: invokevirtual #696                // Method com/amazonaws/services/s3/model/SetBucketVersioningConfigurationRequest.getMfa:()Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;
      96: invokespecial #648                // Method populateRequestWithMfaDetails:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/MultiFactorAuthentication;)V
      99: getstatic     #699                // Field bucketConfigurationXmlFactory:Lcom/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory;
     102: aload_3
     103: invokevirtual #700                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/BucketVersioningConfiguration;)[B
     106: astore        5
     108: aload         4
     110: new           #244                // class java/io/ByteArrayInputStream
     113: dup
     114: aload         5
     116: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     119: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     124: aload_0
     125: aload         4
     127: aload_0
     128: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     131: aload_2
     132: aconst_null
     133: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     136: pop
     137: return

  public com.amazonaws.services.s3.model.BucketVersioningConfiguration getBucketVersioningConfiguration(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #701                // class com/amazonaws/services/s3/model/GetBucketVersioningConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #702                // Method com/amazonaws/services/s3/model/GetBucketVersioningConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #703                // Method getBucketVersioningConfiguration:(Lcom/amazonaws/services/s3/model/GetBucketVersioningConfigurationRequest;)Lcom/amazonaws/services/s3/model/BucketVersioningConfiguration;
      12: areturn

  public com.amazonaws.services.s3.model.BucketVersioningConfiguration getBucketVersioningConfiguration(com.amazonaws.services.s3.model.GetBucketVersioningConfigurationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #704                // String The request object parameter getBucketVersioningConfigurationRequest must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #705                // Method com/amazonaws/services/s3/model/GetBucketVersioningConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #706                // String The bucket name parameter must be specified when querying versioning configuration
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #698                // String versioning
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: new           #707                // class com/amazonaws/services/s3/model/transform/Unmarshallers$BucketVersioningConfigurationUnmarshaller
      47: dup
      48: invokespecial #708                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$BucketVersioningConfigurationUnmarshaller."<init>":()V
      51: aload_2
      52: aconst_null
      53: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #709                // class com/amazonaws/services/s3/model/BucketVersioningConfiguration
      59: areturn

  public com.amazonaws.services.s3.model.BucketWebsiteConfiguration getBucketWebsiteConfiguration(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #710                // class com/amazonaws/services/s3/model/GetBucketWebsiteConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #711                // Method com/amazonaws/services/s3/model/GetBucketWebsiteConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #712                // Method getBucketWebsiteConfiguration:(Lcom/amazonaws/services/s3/model/GetBucketWebsiteConfigurationRequest;)Lcom/amazonaws/services/s3/model/BucketWebsiteConfiguration;
      12: areturn

  public com.amazonaws.services.s3.model.BucketWebsiteConfiguration getBucketWebsiteConfiguration(com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #713                // String The request object parameter getBucketWebsiteConfigurationRequest must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #714                // Method com/amazonaws/services/s3/model/GetBucketWebsiteConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #715                // String The bucket name parameter must be specified when requesting a bucket\'s website configuration
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #716                // String website
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_3
      43: ldc_w         #654                // String Content-Type
      46: ldc_w         #655                // String application/xml
      49: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      54: aload_0
      55: aload_3
      56: new           #717                // class com/amazonaws/services/s3/model/transform/Unmarshallers$BucketWebsiteConfigurationUnmarshaller
      59: dup
      60: invokespecial #718                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$BucketWebsiteConfigurationUnmarshaller."<init>":()V
      63: aload_2
      64: aconst_null
      65: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      68: checkcast     #719                // class com/amazonaws/services/s3/model/BucketWebsiteConfiguration
      71: areturn
      72: astore        4
      74: aload         4
      76: invokevirtual #330                // Method com/amazonaws/AmazonServiceException.getStatusCode:()I
      79: sipush        404
      82: if_icmpne     87
      85: aconst_null
      86: areturn
      87: aload         4
      89: athrow
    Exception table:
       from    to  target type
          54    71    72   Class com/amazonaws/AmazonServiceException

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration getBucketLifecycleConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: new           #720                // class com/amazonaws/services/s3/model/GetBucketLifecycleConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #721                // Method com/amazonaws/services/s3/model/GetBucketLifecycleConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #722                // Method getBucketLifecycleConfiguration:(Lcom/amazonaws/services/s3/model/GetBucketLifecycleConfigurationRequest;)Lcom/amazonaws/services/s3/model/BucketLifecycleConfiguration;
      12: areturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration getBucketLifecycleConfiguration(com.amazonaws.services.s3.model.GetBucketLifecycleConfigurationRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #723                // String The request object pamameter getBucketLifecycleConfigurationRequest must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #724                // Method com/amazonaws/services/s3/model/GetBucketLifecycleConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #725                // String The bucket name must be specifed when retrieving the bucket lifecycle configuration.
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #726                // String lifecycle
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: new           #727                // class com/amazonaws/services/s3/model/transform/Unmarshallers$BucketLifecycleConfigurationUnmarshaller
      47: dup
      48: invokespecial #728                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$BucketLifecycleConfigurationUnmarshaller."<init>":()V
      51: aload_2
      52: aconst_null
      53: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #729                // class com/amazonaws/services/s3/model/BucketLifecycleConfiguration
      59: areturn
      60: astore        4
      62: aload         4
      64: invokevirtual #330                // Method com/amazonaws/AmazonServiceException.getStatusCode:()I
      67: lookupswitch  { // 1
                   404: 84
               default: 86
          }
      84: aconst_null
      85: areturn
      86: aload         4
      88: athrow
    Exception table:
       from    to  target type
          42    59    60   Class com/amazonaws/AmazonServiceException

  public void setBucketLifecycleConfiguration(java.lang.String, com.amazonaws.services.s3.model.BucketLifecycleConfiguration);
    Code:
       0: aload_0
       1: new           #730                // class com/amazonaws/services/s3/model/SetBucketLifecycleConfigurationRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #731                // Method com/amazonaws/services/s3/model/SetBucketLifecycleConfigurationRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/BucketLifecycleConfiguration;)V
      10: invokevirtual #732                // Method setBucketLifecycleConfiguration:(Lcom/amazonaws/services/s3/model/SetBucketLifecycleConfigurationRequest;)V
      13: return

  public void setBucketLifecycleConfiguration(com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #733                // String The set bucket lifecycle configuration request object must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #734                // Method com/amazonaws/services/s3/model/SetBucketLifecycleConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #735                // Method com/amazonaws/services/s3/model/SetBucketLifecycleConfigurationRequest.getLifecycleConfiguration:()Lcom/amazonaws/services/s3/model/BucketLifecycleConfiguration;
      17: astore_3
      18: aload_0
      19: aload_2
      20: ldc_w         #736                // String The bucket name parameter must be specified when setting bucket lifecycle configuration.
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: ldc_w         #737                // String The lifecycle configuration parameter must be specified when setting bucket lifecycle configuration.
      31: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: aload_2
      36: aconst_null
      37: aload_1
      38: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      41: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      44: astore        4
      46: aload         4
      48: ldc_w         #726                // String lifecycle
      51: aconst_null
      52: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      57: new           #738                // class com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory
      60: dup
      61: invokespecial #739                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory."<init>":()V
      64: aload_3
      65: invokevirtual #740                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/BucketLifecycleConfiguration;)[B
      68: astore        5
      70: aload         4
      72: ldc_w         #477                // String Content-Length
      75: aload         5
      77: arraylength
      78: invokestatic  #653                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      81: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      86: aload         4
      88: ldc_w         #654                // String Content-Type
      91: ldc_w         #655                // String application/xml
      94: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      99: aload         4
     101: new           #244                // class java/io/ByteArrayInputStream
     104: dup
     105: aload         5
     107: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     110: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     115: aload         5
     117: invokestatic  #656                // Method com/amazonaws/util/Md5Utils.computeMD5Hash:([B)[B
     120: astore        6
     122: aload         6
     124: invokestatic  #657                // Method com/amazonaws/util/BinaryUtils.toBase64:([B)Ljava/lang/String;
     127: astore        7
     129: aload         4
     131: ldc_w         #658                // String Content-MD5
     134: aload         7
     136: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     141: goto          159
     144: astore        6
     146: new           #421                // class com/amazonaws/AmazonClientException
     149: dup
     150: ldc_w         #659                // String Couldn\'t compute md5 sum
     153: aload         6
     155: invokespecial #460                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     158: athrow
     159: aload_0
     160: aload         4
     162: aload_0
     163: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     166: aload_2
     167: aconst_null
     168: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     171: pop
     172: return
    Exception table:
       from    to  target type
         115   141   144   Class java/lang/Exception

  public void deleteBucketLifecycleConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: new           #741                // class com/amazonaws/services/s3/model/DeleteBucketLifecycleConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #742                // Method com/amazonaws/services/s3/model/DeleteBucketLifecycleConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #743                // Method deleteBucketLifecycleConfiguration:(Lcom/amazonaws/services/s3/model/DeleteBucketLifecycleConfigurationRequest;)V
      12: return

  public void deleteBucketLifecycleConfiguration(com.amazonaws.services.s3.model.DeleteBucketLifecycleConfigurationRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #744                // String The delete bucket lifecycle configuration request object must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #745                // Method com/amazonaws/services/s3/model/DeleteBucketLifecycleConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #746                // String The bucket name parameter must be specified when deleting bucket lifecycle configuration.
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #726                // String lifecycle
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: aload_0
      45: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      48: aload_2
      49: aconst_null
      50: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      53: pop
      54: return

  public com.amazonaws.services.s3.model.BucketCrossOriginConfiguration getBucketCrossOriginConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: new           #747                // class com/amazonaws/services/s3/model/GetBucketCrossOriginConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #748                // Method com/amazonaws/services/s3/model/GetBucketCrossOriginConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #749                // Method getBucketCrossOriginConfiguration:(Lcom/amazonaws/services/s3/model/GetBucketCrossOriginConfigurationRequest;)Lcom/amazonaws/services/s3/model/BucketCrossOriginConfiguration;
      12: areturn

  public com.amazonaws.services.s3.model.BucketCrossOriginConfiguration getBucketCrossOriginConfiguration(com.amazonaws.services.s3.model.GetBucketCrossOriginConfigurationRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #750                // String The request object parameter getBucketCrossOriginConfigurationRequest must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #751                // Method com/amazonaws/services/s3/model/GetBucketCrossOriginConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #752                // String The bucket name must be specified when retrieving the bucket cross origin configuration.
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #753                // String cors
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: new           #754                // class com/amazonaws/services/s3/model/transform/Unmarshallers$BucketCrossOriginConfigurationUnmarshaller
      47: dup
      48: invokespecial #755                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$BucketCrossOriginConfigurationUnmarshaller."<init>":()V
      51: aload_2
      52: aconst_null
      53: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #756                // class com/amazonaws/services/s3/model/BucketCrossOriginConfiguration
      59: areturn
      60: astore        4
      62: aload         4
      64: invokevirtual #330                // Method com/amazonaws/AmazonServiceException.getStatusCode:()I
      67: lookupswitch  { // 1
                   404: 84
               default: 86
          }
      84: aconst_null
      85: areturn
      86: aload         4
      88: athrow
    Exception table:
       from    to  target type
          42    59    60   Class com/amazonaws/AmazonServiceException

  public void setBucketCrossOriginConfiguration(java.lang.String, com.amazonaws.services.s3.model.BucketCrossOriginConfiguration);
    Code:
       0: aload_0
       1: new           #757                // class com/amazonaws/services/s3/model/SetBucketCrossOriginConfigurationRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #758                // Method com/amazonaws/services/s3/model/SetBucketCrossOriginConfigurationRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/BucketCrossOriginConfiguration;)V
      10: invokevirtual #759                // Method setBucketCrossOriginConfiguration:(Lcom/amazonaws/services/s3/model/SetBucketCrossOriginConfigurationRequest;)V
      13: return

  public void setBucketCrossOriginConfiguration(com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #760                // String The set bucket cross origin configuration request object must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #761                // Method com/amazonaws/services/s3/model/SetBucketCrossOriginConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #762                // Method com/amazonaws/services/s3/model/SetBucketCrossOriginConfigurationRequest.getCrossOriginConfiguration:()Lcom/amazonaws/services/s3/model/BucketCrossOriginConfiguration;
      17: astore_3
      18: aload_0
      19: aload_2
      20: ldc_w         #763                // String The bucket name parameter must be specified when setting bucket cross origin configuration.
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: ldc_w         #764                // String The cross origin configuration parameter must be specified when setting bucket cross origin configuration.
      31: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: aload_2
      36: aconst_null
      37: aload_1
      38: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      41: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      44: astore        4
      46: aload         4
      48: ldc_w         #753                // String cors
      51: aconst_null
      52: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      57: new           #738                // class com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory
      60: dup
      61: invokespecial #739                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory."<init>":()V
      64: aload_3
      65: invokevirtual #765                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/BucketCrossOriginConfiguration;)[B
      68: astore        5
      70: aload         4
      72: ldc_w         #477                // String Content-Length
      75: aload         5
      77: arraylength
      78: invokestatic  #653                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      81: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      86: aload         4
      88: ldc_w         #654                // String Content-Type
      91: ldc_w         #655                // String application/xml
      94: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      99: aload         4
     101: new           #244                // class java/io/ByteArrayInputStream
     104: dup
     105: aload         5
     107: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     110: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     115: aload         5
     117: invokestatic  #656                // Method com/amazonaws/util/Md5Utils.computeMD5Hash:([B)[B
     120: astore        6
     122: aload         6
     124: invokestatic  #657                // Method com/amazonaws/util/BinaryUtils.toBase64:([B)Ljava/lang/String;
     127: astore        7
     129: aload         4
     131: ldc_w         #658                // String Content-MD5
     134: aload         7
     136: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     141: goto          159
     144: astore        6
     146: new           #421                // class com/amazonaws/AmazonClientException
     149: dup
     150: ldc_w         #659                // String Couldn\'t compute md5 sum
     153: aload         6
     155: invokespecial #460                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     158: athrow
     159: aload_0
     160: aload         4
     162: aload_0
     163: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     166: aload_2
     167: aconst_null
     168: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     171: pop
     172: return
    Exception table:
       from    to  target type
         115   141   144   Class java/lang/Exception

  public void deleteBucketCrossOriginConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: new           #766                // class com/amazonaws/services/s3/model/DeleteBucketCrossOriginConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #767                // Method com/amazonaws/services/s3/model/DeleteBucketCrossOriginConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #768                // Method deleteBucketCrossOriginConfiguration:(Lcom/amazonaws/services/s3/model/DeleteBucketCrossOriginConfigurationRequest;)V
      12: return

  public void deleteBucketCrossOriginConfiguration(com.amazonaws.services.s3.model.DeleteBucketCrossOriginConfigurationRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #769                // String The delete bucket cross origin configuration request object must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #770                // Method com/amazonaws/services/s3/model/DeleteBucketCrossOriginConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #771                // String The bucket name parameter must be specified when deleting bucket cross origin configuration.
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #753                // String cors
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: aload_0
      45: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      48: aload_2
      49: aconst_null
      50: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      53: pop
      54: return

  public com.amazonaws.services.s3.model.BucketTaggingConfiguration getBucketTaggingConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: new           #772                // class com/amazonaws/services/s3/model/GetBucketTaggingConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #773                // Method com/amazonaws/services/s3/model/GetBucketTaggingConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #774                // Method getBucketTaggingConfiguration:(Lcom/amazonaws/services/s3/model/GetBucketTaggingConfigurationRequest;)Lcom/amazonaws/services/s3/model/BucketTaggingConfiguration;
      12: areturn

  public com.amazonaws.services.s3.model.BucketTaggingConfiguration getBucketTaggingConfiguration(com.amazonaws.services.s3.model.GetBucketTaggingConfigurationRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #775                // String The request object parameter getBucketTaggingConfigurationRequest must be specifed.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #776                // Method com/amazonaws/services/s3/model/GetBucketTaggingConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #777                // String The bucket name must be specified when retrieving the bucket tagging configuration.
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #778                // String tagging
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: new           #779                // class com/amazonaws/services/s3/model/transform/Unmarshallers$BucketTaggingConfigurationUnmarshaller
      47: dup
      48: invokespecial #780                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$BucketTaggingConfigurationUnmarshaller."<init>":()V
      51: aload_2
      52: aconst_null
      53: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #781                // class com/amazonaws/services/s3/model/BucketTaggingConfiguration
      59: areturn
      60: astore        4
      62: aload         4
      64: invokevirtual #330                // Method com/amazonaws/AmazonServiceException.getStatusCode:()I
      67: lookupswitch  { // 1
                   404: 84
               default: 86
          }
      84: aconst_null
      85: areturn
      86: aload         4
      88: athrow
    Exception table:
       from    to  target type
          42    59    60   Class com/amazonaws/AmazonServiceException

  public void setBucketTaggingConfiguration(java.lang.String, com.amazonaws.services.s3.model.BucketTaggingConfiguration);
    Code:
       0: aload_0
       1: new           #782                // class com/amazonaws/services/s3/model/SetBucketTaggingConfigurationRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #783                // Method com/amazonaws/services/s3/model/SetBucketTaggingConfigurationRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/BucketTaggingConfiguration;)V
      10: invokevirtual #784                // Method setBucketTaggingConfiguration:(Lcom/amazonaws/services/s3/model/SetBucketTaggingConfigurationRequest;)V
      13: return

  public void setBucketTaggingConfiguration(com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #785                // String The set bucket tagging configuration request object must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #786                // Method com/amazonaws/services/s3/model/SetBucketTaggingConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #787                // Method com/amazonaws/services/s3/model/SetBucketTaggingConfigurationRequest.getTaggingConfiguration:()Lcom/amazonaws/services/s3/model/BucketTaggingConfiguration;
      17: astore_3
      18: aload_0
      19: aload_2
      20: ldc_w         #788                // String The bucket name parameter must be specified when setting bucket tagging configuration.
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: ldc_w         #789                // String The tagging configuration parameter must be specified when setting bucket tagging configuration.
      31: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: aload_2
      36: aconst_null
      37: aload_1
      38: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      41: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      44: astore        4
      46: aload         4
      48: ldc_w         #778                // String tagging
      51: aconst_null
      52: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      57: new           #738                // class com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory
      60: dup
      61: invokespecial #739                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory."<init>":()V
      64: aload_3
      65: invokevirtual #790                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/BucketTaggingConfiguration;)[B
      68: astore        5
      70: aload         4
      72: ldc_w         #477                // String Content-Length
      75: aload         5
      77: arraylength
      78: invokestatic  #653                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      81: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      86: aload         4
      88: ldc_w         #654                // String Content-Type
      91: ldc_w         #655                // String application/xml
      94: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      99: aload         4
     101: new           #244                // class java/io/ByteArrayInputStream
     104: dup
     105: aload         5
     107: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     110: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     115: aload         5
     117: invokestatic  #656                // Method com/amazonaws/util/Md5Utils.computeMD5Hash:([B)[B
     120: astore        6
     122: aload         6
     124: invokestatic  #657                // Method com/amazonaws/util/BinaryUtils.toBase64:([B)Ljava/lang/String;
     127: astore        7
     129: aload         4
     131: ldc_w         #658                // String Content-MD5
     134: aload         7
     136: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     141: goto          159
     144: astore        6
     146: new           #421                // class com/amazonaws/AmazonClientException
     149: dup
     150: ldc_w         #659                // String Couldn\'t compute md5 sum
     153: aload         6
     155: invokespecial #460                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     158: athrow
     159: aload_0
     160: aload         4
     162: aload_0
     163: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     166: aload_2
     167: aconst_null
     168: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     171: pop
     172: return
    Exception table:
       from    to  target type
         115   141   144   Class java/lang/Exception

  public void deleteBucketTaggingConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: new           #791                // class com/amazonaws/services/s3/model/DeleteBucketTaggingConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #792                // Method com/amazonaws/services/s3/model/DeleteBucketTaggingConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #793                // Method deleteBucketTaggingConfiguration:(Lcom/amazonaws/services/s3/model/DeleteBucketTaggingConfigurationRequest;)V
      12: return

  public void deleteBucketTaggingConfiguration(com.amazonaws.services.s3.model.DeleteBucketTaggingConfigurationRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #794                // String The delete bucket tagging configuration request object must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #795                // Method com/amazonaws/services/s3/model/DeleteBucketTaggingConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #796                // String The bucket name parameter must be specified when deleting bucket tagging configuration.
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #778                // String tagging
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: aload_0
      45: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      48: aload_2
      49: aconst_null
      50: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      53: pop
      54: return

  public void setBucketWebsiteConfiguration(java.lang.String, com.amazonaws.services.s3.model.BucketWebsiteConfiguration) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #797                // class com/amazonaws/services/s3/model/SetBucketWebsiteConfigurationRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #798                // Method com/amazonaws/services/s3/model/SetBucketWebsiteConfigurationRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/BucketWebsiteConfiguration;)V
      10: invokevirtual #799                // Method setBucketWebsiteConfiguration:(Lcom/amazonaws/services/s3/model/SetBucketWebsiteConfigurationRequest;)V
      13: return

  public void setBucketWebsiteConfiguration(com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_1
       1: invokevirtual #800                // Method com/amazonaws/services/s3/model/SetBucketWebsiteConfigurationRequest.getBucketName:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #801                // Method com/amazonaws/services/s3/model/SetBucketWebsiteConfigurationRequest.getConfiguration:()Lcom/amazonaws/services/s3/model/BucketWebsiteConfiguration;
       9: astore_3
      10: aload_0
      11: aload_2
      12: ldc_w         #802                // String The bucket name parameter must be specified when setting a bucket\'s website configuration
      15: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_3
      20: ldc_w         #803                // String The bucket website configuration parameter must be specified when setting a bucket\'s website configuration
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_3
      27: invokevirtual #804                // Method com/amazonaws/services/s3/model/BucketWebsiteConfiguration.getRedirectAllRequestsTo:()Lcom/amazonaws/services/s3/model/RedirectRule;
      30: ifnonnull     44
      33: aload_0
      34: aload_3
      35: invokevirtual #805                // Method com/amazonaws/services/s3/model/BucketWebsiteConfiguration.getIndexDocumentSuffix:()Ljava/lang/String;
      38: ldc_w         #806                // String The bucket website configuration parameter must specify the index document suffix when setting a bucket\'s website configuration
      41: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      44: aload_0
      45: aload_2
      46: aconst_null
      47: aload_1
      48: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      51: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      54: astore        4
      56: aload         4
      58: ldc_w         #716                // String website
      61: aconst_null
      62: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      67: aload         4
      69: ldc_w         #654                // String Content-Type
      72: ldc_w         #655                // String application/xml
      75: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      80: getstatic     #699                // Field bucketConfigurationXmlFactory:Lcom/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory;
      83: aload_3
      84: invokevirtual #807                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/BucketWebsiteConfiguration;)[B
      87: astore        5
      89: aload         4
      91: new           #244                // class java/io/ByteArrayInputStream
      94: dup
      95: aload         5
      97: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     100: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     105: aload_0
     106: aload         4
     108: aload_0
     109: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     112: aload_2
     113: aconst_null
     114: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     117: pop
     118: return

  public void deleteBucketWebsiteConfiguration(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #808                // class com/amazonaws/services/s3/model/DeleteBucketWebsiteConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #809                // Method com/amazonaws/services/s3/model/DeleteBucketWebsiteConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #810                // Method deleteBucketWebsiteConfiguration:(Lcom/amazonaws/services/s3/model/DeleteBucketWebsiteConfigurationRequest;)V
      12: return

  public void deleteBucketWebsiteConfiguration(com.amazonaws.services.s3.model.DeleteBucketWebsiteConfigurationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_1
       1: invokevirtual #811                // Method com/amazonaws/services/s3/model/DeleteBucketWebsiteConfigurationRequest.getBucketName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: ldc_w         #812                // String The bucket name parameter must be specified when deleting a bucket\'s website configuration
      10: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aload_0
      14: aload_2
      15: aconst_null
      16: aload_1
      17: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      20: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      23: astore_3
      24: aload_3
      25: ldc_w         #716                // String website
      28: aconst_null
      29: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      34: aload_3
      35: ldc_w         #654                // String Content-Type
      38: ldc_w         #655                // String application/xml
      41: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      46: aload_0
      47: aload_3
      48: aload_0
      49: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      52: aload_2
      53: aconst_null
      54: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      57: pop
      58: return

  public void setBucketNotificationConfiguration(java.lang.String, com.amazonaws.services.s3.model.BucketNotificationConfiguration) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #813                // class com/amazonaws/services/s3/model/SetBucketNotificationConfigurationRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #814                // Method com/amazonaws/services/s3/model/SetBucketNotificationConfigurationRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/BucketNotificationConfiguration;)V
      10: invokevirtual #815                // Method setBucketNotificationConfiguration:(Lcom/amazonaws/services/s3/model/SetBucketNotificationConfigurationRequest;)V
      13: return

  public void setBucketNotificationConfiguration(com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #816                // String The set bucket notification configuration request object must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #817                // Method com/amazonaws/services/s3/model/SetBucketNotificationConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #818                // Method com/amazonaws/services/s3/model/SetBucketNotificationConfigurationRequest.getNotificationConfiguration:()Lcom/amazonaws/services/s3/model/BucketNotificationConfiguration;
      17: astore_3
      18: aload_0
      19: aload_2
      20: ldc_w         #819                // String The bucket name parameter must be specified when setting bucket notification configuration.
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: ldc_w         #820                // String The notification configuration parameter must be specified when setting bucket notification configuration.
      31: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: aload_2
      36: aconst_null
      37: aload_1
      38: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      41: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      44: astore        4
      46: aload         4
      48: ldc_w         #821                // String notification
      51: aconst_null
      52: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      57: getstatic     #699                // Field bucketConfigurationXmlFactory:Lcom/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory;
      60: aload_3
      61: invokevirtual #822                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/BucketNotificationConfiguration;)[B
      64: astore        5
      66: aload         4
      68: new           #244                // class java/io/ByteArrayInputStream
      71: dup
      72: aload         5
      74: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
      77: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
      82: aload_0
      83: aload         4
      85: aload_0
      86: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      89: aload_2
      90: aconst_null
      91: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      94: pop
      95: return

  public com.amazonaws.services.s3.model.BucketNotificationConfiguration getBucketNotificationConfiguration(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #823                // class com/amazonaws/services/s3/model/GetBucketNotificationConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #824                // Method com/amazonaws/services/s3/model/GetBucketNotificationConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #825                // Method getBucketNotificationConfiguration:(Lcom/amazonaws/services/s3/model/GetBucketNotificationConfigurationRequest;)Lcom/amazonaws/services/s3/model/BucketNotificationConfiguration;
      12: areturn

  public com.amazonaws.services.s3.model.BucketNotificationConfiguration getBucketNotificationConfiguration(com.amazonaws.services.s3.model.GetBucketNotificationConfigurationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #826                // String The bucket request parameter must be specified when querying notification configuration
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #827                // Method com/amazonaws/services/s3/model/GetBucketNotificationConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #828                // String The bucket request must specify a bucket name when querying notification configuration
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #821                // String notification
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: invokestatic  #829                // Method com/amazonaws/services/s3/model/transform/BucketNotificationConfigurationStaxUnmarshaller.getInstance:()Lcom/amazonaws/services/s3/model/transform/BucketNotificationConfigurationStaxUnmarshaller;
      47: aload_2
      48: aconst_null
      49: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      52: checkcast     #830                // class com/amazonaws/services/s3/model/BucketNotificationConfiguration
      55: areturn

  public com.amazonaws.services.s3.model.BucketLoggingConfiguration getBucketLoggingConfiguration(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #831                // class com/amazonaws/services/s3/model/GetBucketLoggingConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #832                // Method com/amazonaws/services/s3/model/GetBucketLoggingConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #833                // Method getBucketLoggingConfiguration:(Lcom/amazonaws/services/s3/model/GetBucketLoggingConfigurationRequest;)Lcom/amazonaws/services/s3/model/BucketLoggingConfiguration;
      12: areturn

  public com.amazonaws.services.s3.model.BucketLoggingConfiguration getBucketLoggingConfiguration(com.amazonaws.services.s3.model.GetBucketLoggingConfigurationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #834                // String The request object parameter getBucketLoggingConfigurationRequest must be specifed.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #835                // Method com/amazonaws/services/s3/model/GetBucketLoggingConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #836                // String The bucket name parameter must be specified when requesting a bucket\'s logging status
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #837                // String logging
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: new           #838                // class com/amazonaws/services/s3/model/transform/Unmarshallers$BucketLoggingConfigurationnmarshaller
      47: dup
      48: invokespecial #839                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$BucketLoggingConfigurationnmarshaller."<init>":()V
      51: aload_2
      52: aconst_null
      53: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #840                // class com/amazonaws/services/s3/model/BucketLoggingConfiguration
      59: areturn

  public void setBucketLoggingConfiguration(com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #841                // String The set bucket logging configuration request object must be specified when enabling server access logging
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #842                // Method com/amazonaws/services/s3/model/SetBucketLoggingConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #843                // Method com/amazonaws/services/s3/model/SetBucketLoggingConfigurationRequest.getLoggingConfiguration:()Lcom/amazonaws/services/s3/model/BucketLoggingConfiguration;
      17: astore_3
      18: aload_0
      19: aload_2
      20: ldc_w         #844                // String The bucket name parameter must be specified when enabling server access logging
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: ldc_w         #845                // String The logging configuration parameter must be specified when enabling server access logging
      31: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: aload_2
      36: aconst_null
      37: aload_1
      38: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      41: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      44: astore        4
      46: aload         4
      48: ldc_w         #837                // String logging
      51: aconst_null
      52: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      57: getstatic     #699                // Field bucketConfigurationXmlFactory:Lcom/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory;
      60: aload_3
      61: invokevirtual #846                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/BucketLoggingConfiguration;)[B
      64: astore        5
      66: aload         4
      68: new           #244                // class java/io/ByteArrayInputStream
      71: dup
      72: aload         5
      74: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
      77: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
      82: aload_0
      83: aload         4
      85: aload_0
      86: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      89: aload_2
      90: aconst_null
      91: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      94: pop
      95: return

  public com.amazonaws.services.s3.model.BucketAccelerateConfiguration getBucketAccelerateConfiguration(java.lang.String) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: new           #847                // class com/amazonaws/services/s3/model/GetBucketAccelerateConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #848                // Method com/amazonaws/services/s3/model/GetBucketAccelerateConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #849                // Method getBucketAccelerateConfiguration:(Lcom/amazonaws/services/s3/model/GetBucketAccelerateConfigurationRequest;)Lcom/amazonaws/services/s3/model/BucketAccelerateConfiguration;
      12: areturn

  public com.amazonaws.services.s3.model.BucketAccelerateConfiguration getBucketAccelerateConfiguration(com.amazonaws.services.s3.model.GetBucketAccelerateConfigurationRequest) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #850                // String getBucketAccelerateConfigurationRequest must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #851                // Method com/amazonaws/services/s3/model/GetBucketAccelerateConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #852                // String The bucket name parameter must be specified when querying accelerate configuration
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #853                // String accelerate
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: new           #854                // class com/amazonaws/services/s3/model/transform/Unmarshallers$BucketAccelerateConfigurationUnmarshaller
      47: dup
      48: invokespecial #855                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$BucketAccelerateConfigurationUnmarshaller."<init>":()V
      51: aload_2
      52: aconst_null
      53: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #856                // class com/amazonaws/services/s3/model/BucketAccelerateConfiguration
      59: areturn

  public void setBucketAccelerateConfiguration(java.lang.String, com.amazonaws.services.s3.model.BucketAccelerateConfiguration) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: new           #857                // class com/amazonaws/services/s3/model/SetBucketAccelerateConfigurationRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #858                // Method com/amazonaws/services/s3/model/SetBucketAccelerateConfigurationRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/BucketAccelerateConfiguration;)V
      10: invokevirtual #859                // Method setBucketAccelerateConfiguration:(Lcom/amazonaws/services/s3/model/SetBucketAccelerateConfigurationRequest;)V
      13: return

  public void setBucketAccelerateConfiguration(com.amazonaws.services.s3.model.SetBucketAccelerateConfigurationRequest) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #860                // String setBucketAccelerateConfigurationRequest must be specified
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #861                // Method com/amazonaws/services/s3/model/SetBucketAccelerateConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #862                // Method com/amazonaws/services/s3/model/SetBucketAccelerateConfigurationRequest.getAccelerateConfiguration:()Lcom/amazonaws/services/s3/model/BucketAccelerateConfiguration;
      17: astore_3
      18: aload_0
      19: aload_2
      20: ldc_w         #863                // String The bucket name parameter must be specified when setting accelerate configuration.
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: ldc_w         #864                // String The bucket accelerate configuration parameter must be specified.
      31: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: aload_3
      36: invokevirtual #865                // Method com/amazonaws/services/s3/model/BucketAccelerateConfiguration.getStatus:()Ljava/lang/String;
      39: ldc_w         #866                // String The status parameter must be specified when updating bucket accelerate configuration.
      42: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      45: aload_0
      46: aload_2
      47: aconst_null
      48: aload_1
      49: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      52: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      55: astore        4
      57: aload         4
      59: ldc_w         #853                // String accelerate
      62: aconst_null
      63: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      68: getstatic     #699                // Field bucketConfigurationXmlFactory:Lcom/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory;
      71: aload_3
      72: invokevirtual #867                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/BucketAccelerateConfiguration;)[B
      75: astore        5
      77: aload         4
      79: new           #244                // class java/io/ByteArrayInputStream
      82: dup
      83: aload         5
      85: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
      88: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
      93: aload_0
      94: aload         4
      96: aload_0
      97: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     100: aload_2
     101: aconst_null
     102: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     105: pop
     106: return

  public com.amazonaws.services.s3.model.BucketPolicy getBucketPolicy(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #868                // class com/amazonaws/services/s3/model/GetBucketPolicyRequest
       4: dup
       5: aload_1
       6: invokespecial #869                // Method com/amazonaws/services/s3/model/GetBucketPolicyRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #870                // Method getBucketPolicy:(Lcom/amazonaws/services/s3/model/GetBucketPolicyRequest;)Lcom/amazonaws/services/s3/model/BucketPolicy;
      12: areturn

  public void setBucketPolicy(java.lang.String, java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #871                // String The bucket name must be specified when setting a bucket policy
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_2
      10: ldc_w         #872                // String The policy text must be specified when setting a bucket policy
      13: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: aconst_null
      19: new           #873                // class com/amazonaws/services/s3/model/GenericBucketRequest
      22: dup
      23: aload_1
      24: invokespecial #874                // Method com/amazonaws/services/s3/model/GenericBucketRequest."<init>":(Ljava/lang/String;)V
      27: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      30: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      33: astore_3
      34: aload_3
      35: ldc_w         #875                // String policy
      38: aconst_null
      39: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      44: aload_3
      45: new           #244                // class java/io/ByteArrayInputStream
      48: dup
      49: aload_2
      50: invokestatic  #876                // Method com/amazonaws/services/s3/internal/ServiceUtils.toByteArray:(Ljava/lang/String;)[B
      53: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
      56: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
      61: aload_0
      62: aload_3
      63: aload_0
      64: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      67: aload_1
      68: aconst_null
      69: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      72: pop
      73: return

  public void deleteBucketPolicy(java.lang.String) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #877                // class com/amazonaws/services/s3/model/DeleteBucketPolicyRequest
       4: dup
       5: aload_1
       6: invokespecial #878                // Method com/amazonaws/services/s3/model/DeleteBucketPolicyRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #879                // Method deleteBucketPolicy:(Lcom/amazonaws/services/s3/model/DeleteBucketPolicyRequest;)V
      12: return

  public com.amazonaws.services.s3.model.BucketPolicy getBucketPolicy(com.amazonaws.services.s3.model.GetBucketPolicyRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #880                // String The request object must be specified when getting a bucket policy
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #881                // Method com/amazonaws/services/s3/model/GetBucketPolicyRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #882                // String The bucket name must be specified when getting a bucket policy
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #875                // String policy
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: new           #883                // class com/amazonaws/services/s3/model/BucketPolicy
      45: dup
      46: invokespecial #884                // Method com/amazonaws/services/s3/model/BucketPolicy."<init>":()V
      49: astore        4
      51: aload_0
      52: aload_3
      53: new           #885                // class com/amazonaws/services/s3/internal/S3StringResponseHandler
      56: dup
      57: invokespecial #886                // Method com/amazonaws/services/s3/internal/S3StringResponseHandler."<init>":()V
      60: aload_2
      61: aconst_null
      62: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      65: checkcast     #204                // class java/lang/String
      68: astore        5
      70: aload         4
      72: aload         5
      74: invokevirtual #887                // Method com/amazonaws/services/s3/model/BucketPolicy.setPolicyText:(Ljava/lang/String;)V
      77: aload         4
      79: areturn
      80: astore        5
      82: aload         5
      84: invokevirtual #888                // Method com/amazonaws/AmazonServiceException.getErrorCode:()Ljava/lang/String;
      87: ldc_w         #889                // String NoSuchBucketPolicy
      90: invokevirtual #233                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      93: ifeq          99
      96: aload         4
      98: areturn
      99: aload         5
     101: athrow
    Exception table:
       from    to  target type
          51    79    80   Class com/amazonaws/AmazonServiceException

  public void setBucketPolicy(com.amazonaws.services.s3.model.SetBucketPolicyRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #890                // String The request object must be specified when setting a bucket policy
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #891                // Method com/amazonaws/services/s3/model/SetBucketPolicyRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #892                // Method com/amazonaws/services/s3/model/SetBucketPolicyRequest.getPolicyText:()Ljava/lang/String;
      17: astore_3
      18: aload_0
      19: aload_2
      20: ldc_w         #871                // String The bucket name must be specified when setting a bucket policy
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: ldc_w         #872                // String The policy text must be specified when setting a bucket policy
      31: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: aload_2
      36: aconst_null
      37: aload_1
      38: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      41: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      44: astore        4
      46: aload         4
      48: ldc_w         #875                // String policy
      51: aconst_null
      52: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      57: aload         4
      59: new           #244                // class java/io/ByteArrayInputStream
      62: dup
      63: aload_3
      64: invokestatic  #876                // Method com/amazonaws/services/s3/internal/ServiceUtils.toByteArray:(Ljava/lang/String;)[B
      67: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
      70: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
      75: aload_0
      76: aload         4
      78: aload_0
      79: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      82: aload_2
      83: aconst_null
      84: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      87: pop
      88: return

  public void deleteBucketPolicy(com.amazonaws.services.s3.model.DeleteBucketPolicyRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #893                // String The request object must be specified when deleting a bucket policy
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #894                // Method com/amazonaws/services/s3/model/DeleteBucketPolicyRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #895                // String The bucket name must be specified when deleting a bucket policy
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #875                // String policy
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: aload_0
      45: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      48: aload_2
      49: aconst_null
      50: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      53: pop
      54: return

  public java.net.URL generatePresignedUrl(java.lang.String, java.lang.String, java.util.Date) throws com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #896                // Field com/amazonaws/HttpMethod.GET:Lcom/amazonaws/HttpMethod;
       7: invokevirtual #897                // Method generatePresignedUrl:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Lcom/amazonaws/HttpMethod;)Ljava/net/URL;
      10: areturn

  public java.net.URL generatePresignedUrl(java.lang.String, java.lang.String, java.util.Date, com.amazonaws.HttpMethod) throws com.amazonaws.AmazonClientException;
    Code:
       0: new           #898                // class com/amazonaws/services/s3/model/GeneratePresignedUrlRequest
       3: dup
       4: aload_1
       5: aload_2
       6: aload         4
       8: invokespecial #899                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/HttpMethod;)V
      11: astore        5
      13: aload         5
      15: aload_3
      16: invokevirtual #900                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.setExpiration:(Ljava/util/Date;)V
      19: aload_0
      20: aload         5
      22: invokevirtual #901                // Method generatePresignedUrl:(Lcom/amazonaws/services/s3/model/GeneratePresignedUrlRequest;)Ljava/net/URL;
      25: areturn

  public java.net.URL generatePresignedUrl(com.amazonaws.services.s3.model.GeneratePresignedUrlRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #902                // String The request parameter must be specified when generating a pre-signed URL
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #903                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.rejectIllegalArguments:()V
      12: aload_1
      13: invokevirtual #904                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getBucketName:()Ljava/lang/String;
      16: astore_2
      17: aload_1
      18: invokevirtual #905                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getKey:()Ljava/lang/String;
      21: astore_3
      22: aload_1
      23: invokevirtual #906                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getExpiration:()Ljava/util/Date;
      26: ifnonnull     47
      29: aload_1
      30: new           #907                // class java/util/Date
      33: dup
      34: invokestatic  #908                // Method java/lang/System.currentTimeMillis:()J
      37: ldc2_w        #909                // long 900000l
      40: ladd
      41: invokespecial #911                // Method java/util/Date."<init>":(J)V
      44: invokevirtual #900                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.setExpiration:(Ljava/util/Date;)V
      47: aload_1
      48: invokevirtual #912                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getMethod:()Lcom/amazonaws/HttpMethod;
      51: invokevirtual #913                // Method com/amazonaws/HttpMethod.toString:()Ljava/lang/String;
      54: invokestatic  #914                // Method com/amazonaws/http/HttpMethodName.valueOf:(Ljava/lang/String;)Lcom/amazonaws/http/HttpMethodName;
      57: astore        4
      59: aload_0
      60: aload_2
      61: aload_3
      62: aload_1
      63: aload         4
      65: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      68: astore        5
      70: aload         5
      72: aload         5
      74: invokeinterface #915,  1          // InterfaceMethod com/amazonaws/Request.getResourcePath:()Ljava/lang/String;
      79: iconst_1
      80: invokestatic  #916                // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      83: invokeinterface #917,  2          // InterfaceMethod com/amazonaws/Request.setResourcePath:(Ljava/lang/String;)V
      88: aload_1
      89: invokevirtual #918                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.isZeroByteContent:()Z
      92: ifeq          112
      95: aload         5
      97: new           #244                // class java/io/ByteArrayInputStream
     100: dup
     101: iconst_0
     102: newarray       byte
     104: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     107: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     112: aload_1
     113: invokevirtual #919                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getRequestParameters:()Ljava/util/Map;
     116: invokeinterface #920,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     121: invokeinterface #921,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     126: astore        6
     128: aload         6
     130: invokeinterface #531,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     135: ifeq          180
     138: aload         6
     140: invokeinterface #532,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: checkcast     #922                // class java/util/Map$Entry
     148: astore        7
     150: aload         5
     152: aload         7
     154: invokeinterface #923,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     159: checkcast     #204                // class java/lang/String
     162: aload         7
     164: invokeinterface #924,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     169: checkcast     #204                // class java/lang/String
     172: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     177: goto          128
     180: aload         5
     182: ldc_w         #654                // String Content-Type
     185: aload_1
     186: invokevirtual #925                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getContentType:()Ljava/lang/String;
     189: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
     192: aload         5
     194: ldc_w         #658                // String Content-MD5
     197: aload_1
     198: invokevirtual #927                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getContentMd5:()Ljava/lang/String;
     201: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
     204: aload         5
     206: aload_1
     207: invokevirtual #928                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     210: invokestatic  #319                // Method populateSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     213: aload         5
     215: ldc_w         #929                // String x-amz-server-side-encryption
     218: aload_1
     219: invokevirtual #930                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getSSEAlgorithm:()Ljava/lang/String;
     222: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
     225: aload         5
     227: ldc_w         #931                // String x-amz-server-side-encryption-aws-kms-key-id
     230: aload_1
     231: invokevirtual #932                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getKmsCmkId:()Ljava/lang/String;
     234: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
     237: aload_1
     238: invokevirtual #933                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getCustomRequestHeaders:()Ljava/util/Map;
     241: astore        6
     243: aload         6
     245: ifnull        314
     248: aload         6
     250: invokeinterface #920,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     255: invokeinterface #921,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     260: astore        7
     262: aload         7
     264: invokeinterface #531,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     269: ifeq          314
     272: aload         7
     274: invokeinterface #532,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     279: checkcast     #922                // class java/util/Map$Entry
     282: astore        8
     284: aload         5
     286: aload         8
     288: invokeinterface #923,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     293: checkcast     #204                // class java/lang/String
     296: aload         8
     298: invokeinterface #924,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     303: checkcast     #204                // class java/lang/String
     306: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     311: goto          262
     314: aload         5
     316: aload_1
     317: invokevirtual #934                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getResponseHeaders:()Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;
     320: invokestatic  #366                // Method addResponseHeaderParameters:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;)V
     323: aload_0
     324: aload         5
     326: aload_2
     327: aload_3
     328: invokevirtual #935                // Method createSigner:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/auth/Signer;
     331: astore        7
     333: aload         7
     335: instanceof    #936                // class com/amazonaws/auth/Presigner
     338: ifeq          369
     341: aload         7
     343: checkcast     #936                // class com/amazonaws/auth/Presigner
     346: aload         5
     348: aload_0
     349: getfield      #30                 // Field awsCredentialsProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
     352: invokeinterface #937,  1          // InterfaceMethod com/amazonaws/auth/AWSCredentialsProvider.getCredentials:()Lcom/amazonaws/auth/AWSCredentials;
     357: aload_1
     358: invokevirtual #906                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getExpiration:()Ljava/util/Date;
     361: invokeinterface #938,  4          // InterfaceMethod com/amazonaws/auth/Presigner.presignRequest:(Lcom/amazonaws/SignableRequest;Lcom/amazonaws/auth/AWSCredentials;Ljava/util/Date;)V
     366: goto          386
     369: aload_0
     370: aload         5
     372: aload_1
     373: invokevirtual #912                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getMethod:()Lcom/amazonaws/HttpMethod;
     376: aload_2
     377: aload_3
     378: aload_1
     379: invokevirtual #906                // Method com/amazonaws/services/s3/model/GeneratePresignedUrlRequest.getExpiration:()Ljava/util/Date;
     382: aconst_null
     383: invokevirtual #939                // Method presignRequest:(Lcom/amazonaws/Request;Lcom/amazonaws/HttpMethod;Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V
     386: aload         5
     388: iconst_1
     389: iconst_0
     390: invokestatic  #940                // Method com/amazonaws/services/s3/internal/ServiceUtils.convertRequestToUrl:(Lcom/amazonaws/Request;ZZ)Ljava/net/URL;
     393: areturn

  public void abortMultipartUpload(com.amazonaws.services.s3.model.AbortMultipartUploadRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #941                // String The request parameter must be specified when aborting a multipart upload
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #942                // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest.getBucketName:()Ljava/lang/String;
      13: ldc_w         #943                // String The bucket name parameter must be specified when aborting a multipart upload
      16: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #944                // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest.getKey:()Ljava/lang/String;
      24: ldc_w         #945                // String The key parameter must be specified when aborting a multipart upload
      27: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_0
      31: aload_1
      32: invokevirtual #946                // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest.getUploadId:()Ljava/lang/String;
      35: ldc_w         #947                // String The upload ID parameter must be specified when aborting a multipart upload
      38: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      41: aload_1
      42: invokevirtual #942                // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest.getBucketName:()Ljava/lang/String;
      45: astore_2
      46: aload_1
      47: invokevirtual #944                // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest.getKey:()Ljava/lang/String;
      50: astore_3
      51: aload_0
      52: aload_2
      53: aload_3
      54: aload_1
      55: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      58: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      61: astore        4
      63: aload         4
      65: ldc_w         #624                // String uploadId
      68: aload_1
      69: invokevirtual #946                // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest.getUploadId:()Ljava/lang/String;
      72: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      77: aload         4
      79: aload_1
      80: invokevirtual #948                // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest.isRequesterPays:()Z
      83: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
      86: aload_0
      87: aload         4
      89: aload_0
      90: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      93: aload_2
      94: aload_3
      95: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      98: pop
      99: return

  public com.amazonaws.services.s3.model.CompleteMultipartUploadResult completeMultipartUpload(com.amazonaws.services.s3.model.CompleteMultipartUploadRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #949                // String The request parameter must be specified when completing a multipart upload
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #950                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #951                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadRequest.getKey:()Ljava/lang/String;
      17: astore_3
      18: aload_1
      19: invokevirtual #952                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadRequest.getUploadId:()Ljava/lang/String;
      22: astore        4
      24: aload_0
      25: aload_2
      26: ldc_w         #953                // String The bucket name parameter must be specified when completing a multipart upload
      29: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload_0
      33: aload_3
      34: ldc_w         #954                // String The key parameter must be specified when completing a multipart upload
      37: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      40: aload_0
      41: aload         4
      43: ldc_w         #955                // String The upload ID parameter must be specified when completing a multipart upload
      46: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      49: aload_0
      50: aload_1
      51: invokevirtual #956                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadRequest.getPartETags:()Ljava/util/List;
      54: ldc_w         #957                // String The part ETags parameter must be specified when completing a multipart upload
      57: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      60: iconst_0
      61: istore        5
      63: aload_0
      64: aload_2
      65: aload_3
      66: aload_1
      67: getstatic     #645                // Field com/amazonaws/http/HttpMethodName.POST:Lcom/amazonaws/http/HttpMethodName;
      70: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      73: astore        7
      75: aload         7
      77: ldc_w         #624                // String uploadId
      80: aload         4
      82: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      87: aload         7
      89: aload_1
      90: invokevirtual #958                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadRequest.isRequesterPays:()Z
      93: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
      96: aload_1
      97: invokevirtual #956                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadRequest.getPartETags:()Ljava/util/List;
     100: invokestatic  #959                // Method com/amazonaws/services/s3/model/transform/RequestXmlFactory.convertToXmlByteArray:(Ljava/util/List;)[B
     103: astore        8
     105: aload         7
     107: ldc_w         #654                // String Content-Type
     110: ldc_w         #655                // String application/xml
     113: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     118: aload         7
     120: ldc_w         #477                // String Content-Length
     123: aload         8
     125: arraylength
     126: invokestatic  #653                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     129: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     134: aload         7
     136: new           #244                // class java/io/ByteArrayInputStream
     139: dup
     140: aload         8
     142: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     145: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     150: new           #563                // class com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain
     153: dup
     154: new           #960                // class com/amazonaws/services/s3/model/transform/Unmarshallers$CompleteMultipartUploadResultUnmarshaller
     157: dup
     158: invokespecial #961                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$CompleteMultipartUploadResultUnmarshaller."<init>":()V
     161: iconst_4
     162: anewarray     #566                // class com/amazonaws/services/s3/internal/HeaderHandler
     165: dup
     166: iconst_0
     167: new           #567                // class com/amazonaws/services/s3/internal/ServerSideEncryptionHeaderHandler
     170: dup
     171: invokespecial #568                // Method com/amazonaws/services/s3/internal/ServerSideEncryptionHeaderHandler."<init>":()V
     174: aastore
     175: dup
     176: iconst_1
     177: new           #571                // class com/amazonaws/services/s3/internal/ObjectExpirationHeaderHandler
     180: dup
     181: invokespecial #572                // Method com/amazonaws/services/s3/internal/ObjectExpirationHeaderHandler."<init>":()V
     184: aastore
     185: dup
     186: iconst_2
     187: new           #569                // class com/amazonaws/services/s3/internal/S3VersionHeaderHandler
     190: dup
     191: invokespecial #570                // Method com/amazonaws/services/s3/internal/S3VersionHeaderHandler."<init>":()V
     194: aastore
     195: dup
     196: iconst_3
     197: new           #573                // class com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler
     200: dup
     201: invokespecial #574                // Method com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler."<init>":()V
     204: aastore
     205: invokespecial #575                // Method com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain."<init>":(Lcom/amazonaws/transform/Unmarshaller;[Lcom/amazonaws/services/s3/internal/HeaderHandler;)V
     208: astore        9
     210: aload_0
     211: aload         7
     213: aload         9
     215: aload_2
     216: aload_3
     217: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     220: checkcast     #962                // class com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CompleteMultipartUploadHandler
     223: astore        6
     225: aload         6
     227: invokevirtual #963                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CompleteMultipartUploadHandler.getCompleteMultipartUploadResult:()Lcom/amazonaws/services/s3/model/CompleteMultipartUploadResult;
     230: ifnull        239
     233: aload         6
     235: invokevirtual #963                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CompleteMultipartUploadHandler.getCompleteMultipartUploadResult:()Lcom/amazonaws/services/s3/model/CompleteMultipartUploadResult;
     238: areturn
     239: aload_0
     240: aload_1
     241: aload         6
     243: invokevirtual #964                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CompleteMultipartUploadHandler.getAmazonS3Exception:()Lcom/amazonaws/services/s3/model/AmazonS3Exception;
     246: iload         5
     248: iinc          5, 1
     251: invokespecial #965                // Method shouldRetryCompleteMultipartUpload:(Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/services/s3/model/AmazonS3Exception;I)Z
     254: ifne          63
     257: aload         6
     259: invokevirtual #964                // Method com/amazonaws/services/s3/model/transform/XmlResponsesSaxParser$CompleteMultipartUploadHandler.getAmazonS3Exception:()Lcom/amazonaws/services/s3/model/AmazonS3Exception;
     262: athrow

  private boolean shouldRetryCompleteMultipartUpload(com.amazonaws.AmazonWebServiceRequest, com.amazonaws.services.s3.model.AmazonS3Exception, int);
    Code:
       0: aload_0
       1: getfield      #966                // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
       4: invokevirtual #967                // Method com/amazonaws/ClientConfiguration.getRetryPolicy:()Lcom/amazonaws/retry/RetryPolicy;
       7: astore        4
       9: aload         4
      11: ifnull        22
      14: aload         4
      16: invokevirtual #968                // Method com/amazonaws/retry/RetryPolicy.getRetryCondition:()Lcom/amazonaws/retry/RetryPolicy$RetryCondition;
      19: ifnonnull     24
      22: iconst_0
      23: ireturn
      24: aload         4
      26: getstatic     #969                // Field com/amazonaws/retry/PredefinedRetryPolicies.NO_RETRY_POLICY:Lcom/amazonaws/retry/RetryPolicy;
      29: if_acmpne     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: getfield      #29                 // Field completeMultipartUploadRetryCondition:Lcom/amazonaws/services/s3/internal/CompleteMultipartUploadRetryCondition;
      38: aload_1
      39: aload_2
      40: iload_3
      41: invokevirtual #970                // Method com/amazonaws/services/s3/internal/CompleteMultipartUploadRetryCondition.shouldRetry:(Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/AmazonClientException;I)Z
      44: ireturn

  public com.amazonaws.services.s3.model.InitiateMultipartUploadResult initiateMultipartUpload(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #971                // String The request parameter must be specified when initiating a multipart upload
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #972                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getBucketName:()Ljava/lang/String;
      13: ldc_w         #973                // String The bucket name parameter must be specified when initiating a multipart upload
      16: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #974                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getKey:()Ljava/lang/String;
      24: ldc_w         #975                // String The key parameter must be specified when initiating a multipart upload
      27: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_0
      31: aload_1
      32: invokevirtual #972                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getBucketName:()Ljava/lang/String;
      35: aload_1
      36: invokevirtual #974                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getKey:()Ljava/lang/String;
      39: aload_1
      40: getstatic     #645                // Field com/amazonaws/http/HttpMethodName.POST:Lcom/amazonaws/http/HttpMethodName;
      43: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      46: astore_2
      47: aload_2
      48: ldc_w         #976                // String uploads
      51: aconst_null
      52: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      57: aload_1
      58: invokevirtual #977                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getStorageClass:()Lcom/amazonaws/services/s3/model/StorageClass;
      61: ifnull        80
      64: aload_2
      65: ldc_w         #470                // String x-amz-storage-class
      68: aload_1
      69: invokevirtual #977                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getStorageClass:()Lcom/amazonaws/services/s3/model/StorageClass;
      72: invokevirtual #344                // Method com/amazonaws/services/s3/model/StorageClass.toString:()Ljava/lang/String;
      75: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      80: aload_1
      81: invokevirtual #978                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getRedirectLocation:()Ljava/lang/String;
      84: ifnull        100
      87: aload_2
      88: ldc_w         #472                // String x-amz-website-redirect-location
      91: aload_1
      92: invokevirtual #978                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getRedirectLocation:()Ljava/lang/String;
      95: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     100: aload_1
     101: invokevirtual #979                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
     104: ifnull        118
     107: aload_2
     108: aload_1
     109: invokevirtual #979                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
     112: invokestatic  #221                // Method addAclHeaders:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/AccessControlList;)V
     115: goto          140
     118: aload_1
     119: invokevirtual #980                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getCannedACL:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
     122: ifnull        140
     125: aload_2
     126: ldc           #224                // String x-amz-acl
     128: aload_1
     129: invokevirtual #980                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getCannedACL:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
     132: invokevirtual #225                // Method com/amazonaws/services/s3/model/CannedAccessControlList.toString:()Ljava/lang/String;
     135: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     140: aload_1
     141: getfield      #981                // Field com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.objectMetadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
     144: ifnull        155
     147: aload_2
     148: aload_1
     149: getfield      #981                // Field com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.objectMetadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
     152: invokestatic  #488                // Method populateRequestMetadata:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     155: aload_2
     156: aload_1
     157: invokevirtual #982                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.isRequesterPays:()Z
     160: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
     163: aload_2
     164: aload_1
     165: invokevirtual #983                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     168: invokestatic  #319                // Method populateSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     171: aload_2
     172: aload_1
     173: invokevirtual #984                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getSSEAwsKeyManagementParams:()Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
     176: invokestatic  #476                // Method populateSSE_KMS:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;)V
     179: aload_0
     180: aload_2
     181: invokespecial #562                // Method setZeroContentLength:(Lcom/amazonaws/Request;)V
     184: aload_2
     185: new           #244                // class java/io/ByteArrayInputStream
     188: dup
     189: iconst_0
     190: newarray       byte
     192: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     195: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     200: new           #563                // class com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain
     203: dup
     204: new           #985                // class com/amazonaws/services/s3/model/transform/Unmarshallers$InitiateMultipartUploadResultUnmarshaller
     207: dup
     208: invokespecial #986                // Method com/amazonaws/services/s3/model/transform/Unmarshallers$InitiateMultipartUploadResultUnmarshaller."<init>":()V
     211: iconst_3
     212: anewarray     #566                // class com/amazonaws/services/s3/internal/HeaderHandler
     215: dup
     216: iconst_0
     217: new           #567                // class com/amazonaws/services/s3/internal/ServerSideEncryptionHeaderHandler
     220: dup
     221: invokespecial #568                // Method com/amazonaws/services/s3/internal/ServerSideEncryptionHeaderHandler."<init>":()V
     224: aastore
     225: dup
     226: iconst_1
     227: new           #573                // class com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler
     230: dup
     231: invokespecial #574                // Method com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler."<init>":()V
     234: aastore
     235: dup
     236: iconst_2
     237: new           #987                // class com/amazonaws/services/s3/internal/InitiateMultipartUploadHeaderHandler
     240: dup
     241: invokespecial #988                // Method com/amazonaws/services/s3/internal/InitiateMultipartUploadHeaderHandler."<init>":()V
     244: aastore
     245: invokespecial #575                // Method com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain."<init>":(Lcom/amazonaws/transform/Unmarshaller;[Lcom/amazonaws/services/s3/internal/HeaderHandler;)V
     248: astore_3
     249: aload_0
     250: aload_2
     251: aload_3
     252: aload_1
     253: invokevirtual #972                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getBucketName:()Ljava/lang/String;
     256: aload_1
     257: invokevirtual #974                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getKey:()Ljava/lang/String;
     260: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     263: checkcast     #989                // class com/amazonaws/services/s3/model/InitiateMultipartUploadResult
     266: areturn

  public com.amazonaws.services.s3.model.MultipartUploadListing listMultipartUploads(com.amazonaws.services.s3.model.ListMultipartUploadsRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #990                // String The request parameter must be specified when listing multipart uploads
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #991                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getBucketName:()Ljava/lang/String;
      13: ldc_w         #992                // String The bucket name parameter must be specified when listing multipart uploads
      16: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #991                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getBucketName:()Ljava/lang/String;
      24: aconst_null
      25: aload_1
      26: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      29: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      32: astore_2
      33: aload_2
      34: ldc_w         #976                // String uploads
      37: aconst_null
      38: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      43: aload_1
      44: invokevirtual #993                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getKeyMarker:()Ljava/lang/String;
      47: ifnull        62
      50: aload_2
      51: ldc           #111                // String key-marker
      53: aload_1
      54: invokevirtual #993                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getKeyMarker:()Ljava/lang/String;
      57: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      62: aload_1
      63: invokevirtual #994                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getMaxUploads:()Ljava/lang/Integer;
      66: ifnull        85
      69: aload_2
      70: ldc_w         #995                // String max-uploads
      73: aload_1
      74: invokevirtual #994                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getMaxUploads:()Ljava/lang/Integer;
      77: invokevirtual #120                // Method java/lang/Integer.toString:()Ljava/lang/String;
      80: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      85: aload_1
      86: invokevirtual #996                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getUploadIdMarker:()Ljava/lang/String;
      89: ifnull        105
      92: aload_2
      93: ldc_w         #997                // String upload-id-marker
      96: aload_1
      97: invokevirtual #996                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getUploadIdMarker:()Ljava/lang/String;
     100: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     105: aload_1
     106: invokevirtual #998                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getDelimiter:()Ljava/lang/String;
     109: ifnull        124
     112: aload_2
     113: ldc           #115                // String delimiter
     115: aload_1
     116: invokevirtual #998                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getDelimiter:()Ljava/lang/String;
     119: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     124: aload_1
     125: invokevirtual #999                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getPrefix:()Ljava/lang/String;
     128: ifnull        143
     131: aload_2
     132: ldc           #108                // String prefix
     134: aload_1
     135: invokevirtual #999                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getPrefix:()Ljava/lang/String;
     138: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     143: aload_1
     144: invokevirtual #1000               // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getEncodingType:()Ljava/lang/String;
     147: ifnull        162
     150: aload_2
     151: ldc           #121                // String encoding-type
     153: aload_1
     154: invokevirtual #1000               // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getEncodingType:()Ljava/lang/String;
     157: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     162: aload_0
     163: aload_2
     164: new           #1001               // class com/amazonaws/services/s3/model/transform/Unmarshallers$ListMultipartUploadsResultUnmarshaller
     167: dup
     168: invokespecial #1002               // Method com/amazonaws/services/s3/model/transform/Unmarshallers$ListMultipartUploadsResultUnmarshaller."<init>":()V
     171: aload_1
     172: invokevirtual #991                // Method com/amazonaws/services/s3/model/ListMultipartUploadsRequest.getBucketName:()Ljava/lang/String;
     175: aconst_null
     176: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     179: checkcast     #1003               // class com/amazonaws/services/s3/model/MultipartUploadListing
     182: areturn

  public com.amazonaws.services.s3.model.PartListing listParts(com.amazonaws.services.s3.model.ListPartsRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #1004               // String The request parameter must be specified when listing parts
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #1005               // Method com/amazonaws/services/s3/model/ListPartsRequest.getBucketName:()Ljava/lang/String;
      13: ldc_w         #1006               // String The bucket name parameter must be specified when listing parts
      16: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #1007               // Method com/amazonaws/services/s3/model/ListPartsRequest.getKey:()Ljava/lang/String;
      24: ldc_w         #1008               // String The key parameter must be specified when listing parts
      27: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_0
      31: aload_1
      32: invokevirtual #1009               // Method com/amazonaws/services/s3/model/ListPartsRequest.getUploadId:()Ljava/lang/String;
      35: ldc_w         #1010               // String The upload ID parameter must be specified when listing parts
      38: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      41: aload_0
      42: aload_1
      43: invokevirtual #1005               // Method com/amazonaws/services/s3/model/ListPartsRequest.getBucketName:()Ljava/lang/String;
      46: aload_1
      47: invokevirtual #1007               // Method com/amazonaws/services/s3/model/ListPartsRequest.getKey:()Ljava/lang/String;
      50: aload_1
      51: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      54: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      57: astore_2
      58: aload_2
      59: ldc_w         #624                // String uploadId
      62: aload_1
      63: invokevirtual #1009               // Method com/amazonaws/services/s3/model/ListPartsRequest.getUploadId:()Ljava/lang/String;
      66: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      71: aload_1
      72: invokevirtual #1011               // Method com/amazonaws/services/s3/model/ListPartsRequest.getMaxParts:()Ljava/lang/Integer;
      75: ifnull        94
      78: aload_2
      79: ldc_w         #1012               // String max-parts
      82: aload_1
      83: invokevirtual #1011               // Method com/amazonaws/services/s3/model/ListPartsRequest.getMaxParts:()Ljava/lang/Integer;
      86: invokevirtual #120                // Method java/lang/Integer.toString:()Ljava/lang/String;
      89: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      94: aload_1
      95: invokevirtual #1013               // Method com/amazonaws/services/s3/model/ListPartsRequest.getPartNumberMarker:()Ljava/lang/Integer;
      98: ifnull        117
     101: aload_2
     102: ldc_w         #1014               // String part-number-marker
     105: aload_1
     106: invokevirtual #1013               // Method com/amazonaws/services/s3/model/ListPartsRequest.getPartNumberMarker:()Ljava/lang/Integer;
     109: invokevirtual #120                // Method java/lang/Integer.toString:()Ljava/lang/String;
     112: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     117: aload_1
     118: invokevirtual #1015               // Method com/amazonaws/services/s3/model/ListPartsRequest.getEncodingType:()Ljava/lang/String;
     121: ifnull        136
     124: aload_2
     125: ldc           #121                // String encoding-type
     127: aload_1
     128: invokevirtual #1015               // Method com/amazonaws/services/s3/model/ListPartsRequest.getEncodingType:()Ljava/lang/String;
     131: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     136: aload_2
     137: aload_1
     138: invokevirtual #1016               // Method com/amazonaws/services/s3/model/ListPartsRequest.isRequesterPays:()Z
     141: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
     144: new           #563                // class com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain
     147: dup
     148: new           #1017               // class com/amazonaws/services/s3/model/transform/Unmarshallers$ListPartsResultUnmarshaller
     151: dup
     152: invokespecial #1018               // Method com/amazonaws/services/s3/model/transform/Unmarshallers$ListPartsResultUnmarshaller."<init>":()V
     155: iconst_2
     156: anewarray     #566                // class com/amazonaws/services/s3/internal/HeaderHandler
     159: dup
     160: iconst_0
     161: new           #573                // class com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler
     164: dup
     165: invokespecial #574                // Method com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler."<init>":()V
     168: aastore
     169: dup
     170: iconst_1
     171: new           #1019               // class com/amazonaws/services/s3/internal/ListPartsHeaderHandler
     174: dup
     175: invokespecial #1020               // Method com/amazonaws/services/s3/internal/ListPartsHeaderHandler."<init>":()V
     178: aastore
     179: invokespecial #575                // Method com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain."<init>":(Lcom/amazonaws/transform/Unmarshaller;[Lcom/amazonaws/services/s3/internal/HeaderHandler;)V
     182: astore_3
     183: aload_0
     184: aload_2
     185: aload_3
     186: aload_1
     187: invokevirtual #1005               // Method com/amazonaws/services/s3/model/ListPartsRequest.getBucketName:()Ljava/lang/String;
     190: aload_1
     191: invokevirtual #1007               // Method com/amazonaws/services/s3/model/ListPartsRequest.getKey:()Ljava/lang/String;
     194: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     197: checkcast     #1021               // class com/amazonaws/services/s3/model/PartListing
     200: areturn

  public com.amazonaws.services.s3.model.UploadPartResult uploadPart(com.amazonaws.services.s3.model.UploadPartRequest) throws com.amazonaws.AmazonClientException, com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #1022               // String The request parameter must be specified when uploading a part
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #1023               // Method com/amazonaws/services/s3/model/UploadPartRequest.getFile:()Ljava/io/File;
      12: astore_2
      13: aload_1
      14: invokevirtual #1024               // Method com/amazonaws/services/s3/model/UploadPartRequest.getInputStream:()Ljava/io/InputStream;
      17: astore_3
      18: aload_1
      19: invokevirtual #1025               // Method com/amazonaws/services/s3/model/UploadPartRequest.getBucketName:()Ljava/lang/String;
      22: astore        4
      24: aload_1
      25: invokevirtual #1026               // Method com/amazonaws/services/s3/model/UploadPartRequest.getKey:()Ljava/lang/String;
      28: astore        5
      30: aload_1
      31: invokevirtual #1027               // Method com/amazonaws/services/s3/model/UploadPartRequest.getUploadId:()Ljava/lang/String;
      34: astore        6
      36: aload_1
      37: invokevirtual #1028               // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartNumber:()I
      40: istore        7
      42: aload_1
      43: invokevirtual #1029               // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartSize:()J
      46: lstore        8
      48: aload_0
      49: aload         4
      51: ldc_w         #1030               // String The bucket name parameter must be specified when uploading a part
      54: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      57: aload_0
      58: aload         5
      60: ldc_w         #1031               // String The key parameter must be specified when uploading a part
      63: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      66: aload_0
      67: aload         6
      69: ldc_w         #1032               // String The upload ID parameter must be specified when uploading a part
      72: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      75: aload_0
      76: iload         7
      78: invokestatic  #621                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: ldc_w         #1033               // String The part number parameter must be specified when uploading a part
      84: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      87: aload_0
      88: lload         8
      90: invokestatic  #1034               // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      93: ldc_w         #1035               // String The part size parameter must be specified when uploading a part
      96: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      99: aload_0
     100: aload         4
     102: aload         5
     104: aload_1
     105: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
     108: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
     111: astore        10
     113: aload         10
     115: ldc_w         #624                // String uploadId
     118: aload         6
     120: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     125: aload         10
     127: ldc_w         #625                // String partNumber
     130: iload         7
     132: invokestatic  #626                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     135: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     140: aload_1
     141: invokevirtual #1036               // Method com/amazonaws/services/s3/model/UploadPartRequest.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
     144: astore        11
     146: aload         11
     148: ifnull        158
     151: aload         10
     153: aload         11
     155: invokestatic  #488                // Method populateRequestMetadata:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     158: aload         10
     160: ldc_w         #658                // String Content-MD5
     163: aload_1
     164: invokevirtual #1037               // Method com/amazonaws/services/s3/model/UploadPartRequest.getMd5Digest:()Ljava/lang/String;
     167: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
     170: aload         10
     172: ldc_w         #477                // String Content-Length
     175: lload         8
     177: invokestatic  #361                // Method java/lang/Long.toString:(J)Ljava/lang/String;
     180: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     185: aload         10
     187: aload_1
     188: invokevirtual #1038               // Method com/amazonaws/services/s3/model/UploadPartRequest.isRequesterPays:()Z
     191: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
     194: aload         10
     196: aload_1
     197: invokevirtual #1039               // Method com/amazonaws/services/s3/model/UploadPartRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     200: invokestatic  #319                // Method populateSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     203: aload_3
     204: astore        12
     206: aload_2
     207: ifnonnull     267
     210: aload_3
     211: ifnonnull     225
     214: new           #277                // class java/lang/IllegalArgumentException
     217: dup
     218: ldc_w         #1040               // String A File or InputStream must be specified when uploading part
     221: invokespecial #279                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     224: athrow
     225: aload         12
     227: invokestatic  #446                // Method com/amazonaws/internal/ReleasableInputStream.wrap:(Ljava/io/InputStream;)Lcom/amazonaws/internal/ReleasableInputStream;
     230: astore        12
     232: invokestatic  #463                // Method com/amazonaws/services/s3/internal/Constants.getS3StreamBufferSize:()Ljava/lang/Integer;
     235: astore        13
     237: aload         13
     239: ifnull        264
     242: aload         10
     244: invokeinterface #464,  1          // InterfaceMethod com/amazonaws/Request.getOriginalRequest:()Lcom/amazonaws/AmazonWebServiceRequest;
     249: astore        14
     251: aload         14
     253: invokevirtual #465                // Method com/amazonaws/AmazonWebServiceRequest.getRequestClientOptions:()Lcom/amazonaws/RequestClientOptions;
     256: aload         13
     258: invokevirtual #118                // Method java/lang/Integer.intValue:()I
     261: invokevirtual #466                // Method com/amazonaws/RequestClientOptions.setReadLimit:(I)V
     264: goto          312
     267: new           #1041               // class com/amazonaws/internal/ResettableInputStream
     270: dup
     271: aload_2
     272: invokespecial #1042               // Method com/amazonaws/internal/ResettableInputStream."<init>":(Ljava/io/File;)V
     275: astore        12
     277: goto          312
     280: astore        13
     282: new           #277                // class java/lang/IllegalArgumentException
     285: dup
     286: new           #357                // class java/lang/StringBuilder
     289: dup
     290: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     293: ldc_w         #1043               // String Failed to open file
     296: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: aload_2
     300: invokevirtual #502                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     303: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     306: aload         13
     308: invokespecial #1044               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     311: athrow
     312: new           #1045               // class com/amazonaws/services/s3/internal/InputSubstream
     315: dup
     316: aload         12
     318: aload_1
     319: invokevirtual #1046               // Method com/amazonaws/services/s3/model/UploadPartRequest.getFileOffset:()J
     322: lload         8
     324: aload_1
     325: invokevirtual #1047               // Method com/amazonaws/services/s3/model/UploadPartRequest.isLastPart:()Z
     328: invokespecial #1048               // Method com/amazonaws/services/s3/internal/InputSubstream."<init>":(Ljava/io/InputStream;JJZ)V
     331: astore        12
     333: aconst_null
     334: astore        13
     336: aload_1
     337: invokevirtual #1037               // Method com/amazonaws/services/s3/model/UploadPartRequest.getMd5Digest:()Ljava/lang/String;
     340: ifnonnull     368
     343: aload_0
     344: getfield      #2                  // Field skipMd5CheckStrategy:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
     347: aload_1
     348: invokevirtual #1049               // Method com/amazonaws/services/s3/internal/SkipMd5CheckStrategy.skipClientSideValidationPerRequest:(Lcom/amazonaws/services/s3/model/UploadPartRequest;)Z
     351: ifne          368
     354: new           #484                // class com/amazonaws/services/s3/internal/MD5DigestCalculatingInputStream
     357: dup
     358: aload         12
     360: invokespecial #485                // Method com/amazonaws/services/s3/internal/MD5DigestCalculatingInputStream."<init>":(Ljava/io/InputStream;)V
     363: dup
     364: astore        13
     366: astore        12
     368: aload_1
     369: invokevirtual #1050               // Method com/amazonaws/services/s3/model/UploadPartRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
     372: astore        14
     374: aload         14
     376: getstatic     #1051               // Field com/amazonaws/event/ProgressEventType.TRANSFER_PART_STARTED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     379: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     382: pop
     383: aload_0
     384: aload         4
     386: aload         5
     388: aload         6
     390: iload         7
     392: lload         8
     394: aload         10
     396: aload         12
     398: aload         13
     400: aload         14
     402: invokespecial #1052               // Method doUploadPart:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IJLcom/amazonaws/Request;Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/MD5DigestCalculatingInputStream;Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/services/s3/model/UploadPartResult;
     405: astore        15
     407: aload_1
     408: aload_2
     409: aload_3
     410: aload         12
     412: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     415: invokestatic  #492                // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     418: aload         15
     420: areturn
     421: astore        16
     423: aload_1
     424: aload_2
     425: aload_3
     426: aload         12
     428: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     431: invokestatic  #492                // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     434: aload         16
     436: athrow
    Exception table:
       from    to  target type
         267   277   280   Class java/io/IOException
         206   407   421   any
         421   423   421   any

  private com.amazonaws.services.s3.model.UploadPartResult doUploadPart(java.lang.String, java.lang.String, java.lang.String, int, long, com.amazonaws.Request<com.amazonaws.services.s3.model.UploadPartRequest>, java.io.InputStream, com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream, com.amazonaws.event.ProgressListener);
    Code:
       0: aload         7
       2: aload         8
       4: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
       9: aload_0
      10: aload         7
      12: new           #320                // class com/amazonaws/services/s3/internal/S3MetadataResponseHandler
      15: dup
      16: invokespecial #321                // Method com/amazonaws/services/s3/internal/S3MetadataResponseHandler."<init>":()V
      19: aload_1
      20: aload_2
      21: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #322                // class com/amazonaws/services/s3/model/ObjectMetadata
      27: astore        11
      29: aload         11
      31: invokevirtual #394                // Method com/amazonaws/services/s3/model/ObjectMetadata.getETag:()Ljava/lang/String;
      34: astore        12
      36: aload         9
      38: ifnull        201
      41: aload_0
      42: getfield      #2                  // Field skipMd5CheckStrategy:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
      45: aload         11
      47: invokevirtual #1053               // Method com/amazonaws/services/s3/internal/SkipMd5CheckStrategy.skipClientSideValidationPerUploadPartResponse:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)Z
      50: ifne          201
      53: aload         9
      55: invokevirtual #493                // Method com/amazonaws/services/s3/internal/MD5DigestCalculatingInputStream.getMd5Digest:()[B
      58: astore        13
      60: aload         12
      62: invokestatic  #395                // Method com/amazonaws/util/BinaryUtils.fromHex:(Ljava/lang/String;)[B
      65: astore        14
      67: aload         13
      69: aload         14
      71: invokestatic  #497                // Method java/util/Arrays.equals:([B[B)Z
      74: ifne          201
      77: new           #357                // class java/lang/StringBuilder
      80: dup
      81: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      84: ldc_w         #1054               // String bucketName:
      87: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_1
      91: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc_w         #504                // String , key:
      97: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_2
     101: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc_w         #1055               // String , uploadId:
     107: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_3
     111: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: ldc_w         #1056               // String , partNumber:
     117: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: iload         4
     122: invokevirtual #1057               // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     125: ldc_w         #1058               // String , partSize:
     128: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: lload         5
     133: invokevirtual #1059               // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     136: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: astore        15
     141: new           #421                // class com/amazonaws/AmazonClientException
     144: dup
     145: new           #357                // class java/lang/StringBuilder
     148: dup
     149: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     152: ldc_w         #498                // String Unable to verify integrity of data upload.  Client calculated content hash (contentMD5:
     155: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload         13
     160: invokestatic  #1060               // Method com/amazonaws/util/Base16.encodeAsString:([B)Ljava/lang/String;
     163: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: ldc_w         #1061               // String  in hex) didn\'t match hash (etag:
     169: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload         12
     174: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: ldc_w         #1062               // String  in hex) calculated by Amazon S3.  You may need to delete the data stored in Amazon S3. (
     180: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: aload         15
     185: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: ldc_w         #505                // String )
     191: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     197: invokespecial #423                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     200: athrow
     201: aload         10
     203: getstatic     #1063               // Field com/amazonaws/event/ProgressEventType.TRANSFER_PART_COMPLETED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     206: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     209: pop
     210: new           #1064               // class com/amazonaws/services/s3/model/UploadPartResult
     213: dup
     214: invokespecial #1065               // Method com/amazonaws/services/s3/model/UploadPartResult."<init>":()V
     217: astore        13
     219: aload         13
     221: aload         12
     223: invokevirtual #1066               // Method com/amazonaws/services/s3/model/UploadPartResult.setETag:(Ljava/lang/String;)V
     226: aload         13
     228: iload         4
     230: invokevirtual #1067               // Method com/amazonaws/services/s3/model/UploadPartResult.setPartNumber:(I)V
     233: aload         13
     235: aload         11
     237: invokevirtual #513                // Method com/amazonaws/services/s3/model/ObjectMetadata.getSSEAlgorithm:()Ljava/lang/String;
     240: invokevirtual #1068               // Method com/amazonaws/services/s3/model/UploadPartResult.setSSEAlgorithm:(Ljava/lang/String;)V
     243: aload         13
     245: aload         11
     247: invokevirtual #515                // Method com/amazonaws/services/s3/model/ObjectMetadata.getSSECustomerAlgorithm:()Ljava/lang/String;
     250: invokevirtual #1069               // Method com/amazonaws/services/s3/model/UploadPartResult.setSSECustomerAlgorithm:(Ljava/lang/String;)V
     253: aload         13
     255: aload         11
     257: invokevirtual #517                // Method com/amazonaws/services/s3/model/ObjectMetadata.getSSECustomerKeyMd5:()Ljava/lang/String;
     260: invokevirtual #1070               // Method com/amazonaws/services/s3/model/UploadPartResult.setSSECustomerKeyMd5:(Ljava/lang/String;)V
     263: aload         13
     265: aload         11
     267: invokevirtual #525                // Method com/amazonaws/services/s3/model/ObjectMetadata.isRequesterCharged:()Z
     270: invokevirtual #1071               // Method com/amazonaws/services/s3/model/UploadPartResult.setRequesterCharged:(Z)V
     273: aload         13
     275: areturn
     276: astore        11
     278: aload         10
     280: getstatic     #1072               // Field com/amazonaws/event/ProgressEventType.TRANSFER_PART_FAILED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     283: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     286: pop
     287: aload         10
     289: getstatic     #1063               // Field com/amazonaws/event/ProgressEventType.TRANSFER_PART_COMPLETED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     292: invokestatic  #380                // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     295: pop
     296: aload         11
     298: invokestatic  #491                // Method com/amazonaws/util/Throwables.failure:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     301: athrow
    Exception table:
       from    to  target type
           0   275   276   Class java/lang/Throwable

  public com.amazonaws.services.s3.S3ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_0
       1: getfield      #1073               // Field client:Lcom/amazonaws/http/AmazonHttpClient;
       4: aload_1
       5: invokevirtual #1074               // Method com/amazonaws/http/AmazonHttpClient.getResponseMetadataForRequest:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/ResponseMetadata;
       8: checkcast     #1075               // class com/amazonaws/services/s3/S3ResponseMetadata
      11: areturn

  public void restoreObject(com.amazonaws.services.s3.model.RestoreObjectRequest) throws com.amazonaws.AmazonServiceException;
    Code:
       0: aload_1
       1: invokevirtual #1076               // Method com/amazonaws/services/s3/model/RestoreObjectRequest.getBucketName:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #1077               // Method com/amazonaws/services/s3/model/RestoreObjectRequest.getKey:()Ljava/lang/String;
       9: astore_3
      10: aload_1
      11: invokevirtual #1078               // Method com/amazonaws/services/s3/model/RestoreObjectRequest.getVersionId:()Ljava/lang/String;
      14: astore        4
      16: aload_1
      17: invokevirtual #1079               // Method com/amazonaws/services/s3/model/RestoreObjectRequest.getExpirationInDays:()I
      20: istore        5
      22: aload_0
      23: aload_2
      24: ldc_w         #1080               // String The bucket name parameter must be specified when copying a glacier object
      27: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_0
      31: aload_3
      32: ldc_w         #1081               // String The key parameter must be specified when copying a glacier object
      35: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      38: iload         5
      40: iconst_m1
      41: if_icmpne     55
      44: new           #277                // class java/lang/IllegalArgumentException
      47: dup
      48: ldc_w         #1082               // String The expiration in days parameter must be specified when copying a glacier object
      51: invokespecial #279                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: aload_2
      57: aload_3
      58: aload_1
      59: getstatic     #645                // Field com/amazonaws/http/HttpMethodName.POST:Lcom/amazonaws/http/HttpMethodName;
      62: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      65: astore        6
      67: aload         6
      69: ldc_w         #1083               // String restore
      72: aconst_null
      73: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      78: aload         4
      80: ifnull        95
      83: aload         6
      85: ldc_w         #313                // String versionId
      88: aload         4
      90: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      95: aload         6
      97: aload_1
      98: invokevirtual #1084               // Method com/amazonaws/services/s3/model/RestoreObjectRequest.isRequesterPays:()Z
     101: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
     104: aload_1
     105: invokestatic  #1085               // Method com/amazonaws/services/s3/model/transform/RequestXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/RestoreObjectRequest;)[B
     108: astore        7
     110: aload         6
     112: ldc_w         #477                // String Content-Length
     115: aload         7
     117: arraylength
     118: invokestatic  #653                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     121: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     126: aload         6
     128: ldc_w         #654                // String Content-Type
     131: ldc_w         #655                // String application/xml
     134: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     139: aload         6
     141: new           #244                // class java/io/ByteArrayInputStream
     144: dup
     145: aload         7
     147: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     150: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     155: aload         7
     157: invokestatic  #656                // Method com/amazonaws/util/Md5Utils.computeMD5Hash:([B)[B
     160: astore        8
     162: aload         8
     164: invokestatic  #657                // Method com/amazonaws/util/BinaryUtils.toBase64:([B)Ljava/lang/String;
     167: astore        9
     169: aload         6
     171: ldc_w         #658                // String Content-MD5
     174: aload         9
     176: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     181: goto          199
     184: astore        8
     186: new           #421                // class com/amazonaws/AmazonClientException
     189: dup
     190: ldc_w         #659                // String Couldn\'t compute md5 sum
     193: aload         8
     195: invokespecial #460                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     198: athrow
     199: aload_0
     200: aload         6
     202: aload_0
     203: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     206: aload_2
     207: aload_3
     208: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     211: pop
     212: return
    Exception table:
       from    to  target type
         155   181   184   Class java/lang/Exception

  public void restoreObject(java.lang.String, java.lang.String, int) throws com.amazonaws.AmazonServiceException;
    Code:
       0: aload_0
       1: new           #1086               // class com/amazonaws/services/s3/model/RestoreObjectRequest
       4: dup
       5: aload_1
       6: aload_2
       7: iload_3
       8: invokespecial #1087               // Method com/amazonaws/services/s3/model/RestoreObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
      11: invokevirtual #1088               // Method restoreObject:(Lcom/amazonaws/services/s3/model/RestoreObjectRequest;)V
      14: return

  public com.amazonaws.services.s3.model.PutObjectResult putObject(java.lang.String, java.lang.String, java.lang.String) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #415                // String Bucket name must be provided
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_2
      10: ldc_w         #416                // String Object key must be provided
      13: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_3
      18: ldc_w         #1089               // String String content must be provided
      21: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      24: aload_3
      25: getstatic     #1090               // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      28: invokevirtual #1091               // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      31: astore        4
      33: new           #244                // class java/io/ByteArrayInputStream
      36: dup
      37: aload         4
      39: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
      42: astore        5
      44: new           #322                // class com/amazonaws/services/s3/model/ObjectMetadata
      47: dup
      48: invokespecial #434                // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      51: astore        6
      53: aload         6
      55: ldc_w         #1092               // String text/plain
      58: invokevirtual #453                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentType:(Ljava/lang/String;)V
      61: aload         6
      63: aload         4
      65: arraylength
      66: i2l
      67: invokevirtual #448                // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentLength:(J)V
      70: aload_0
      71: new           #432                // class com/amazonaws/services/s3/model/PutObjectRequest
      74: dup
      75: aload_1
      76: aload_2
      77: aload         5
      79: aload         6
      81: invokespecial #437                // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      84: invokevirtual #436                // Method putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      87: areturn

  private void rejectNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: new           #277                // class java/lang/IllegalArgumentException
       7: dup
       8: aload_2
       9: invokespecial #279                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      12: athrow
      13: return

  private com.amazonaws.services.s3.model.AccessControlList getAcl(java.lang.String, java.lang.String, java.lang.String, boolean, com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload         5
       2: ifnonnull     15
       5: new           #873                // class com/amazonaws/services/s3/model/GenericBucketRequest
       8: dup
       9: aload_1
      10: invokespecial #874                // Method com/amazonaws/services/s3/model/GenericBucketRequest."<init>":(Ljava/lang/String;)V
      13: astore        5
      15: aload_0
      16: aload_1
      17: aload_2
      18: aload         5
      20: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      23: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      26: astore        6
      28: aload         6
      30: ldc_w         #1093               // String acl
      33: aconst_null
      34: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      39: aload_3
      40: ifnull        54
      43: aload         6
      45: ldc_w         #313                // String versionId
      48: aload_3
      49: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      54: aload         6
      56: iload         4
      58: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
      61: new           #563                // class com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain
      64: dup
      65: new           #1094               // class com/amazonaws/services/s3/model/transform/Unmarshallers$AccessControlListUnmarshaller
      68: dup
      69: invokespecial #1095               // Method com/amazonaws/services/s3/model/transform/Unmarshallers$AccessControlListUnmarshaller."<init>":()V
      72: iconst_1
      73: anewarray     #566                // class com/amazonaws/services/s3/internal/HeaderHandler
      76: dup
      77: iconst_0
      78: new           #573                // class com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler
      81: dup
      82: invokespecial #574                // Method com/amazonaws/services/s3/internal/S3RequesterChargedHeaderHandler."<init>":()V
      85: aastore
      86: invokespecial #575                // Method com/amazonaws/services/s3/internal/ResponseHeaderHandlerChain."<init>":(Lcom/amazonaws/transform/Unmarshaller;[Lcom/amazonaws/services/s3/internal/HeaderHandler;)V
      89: astore        7
      91: aload_0
      92: aload         6
      94: aload         7
      96: aload_1
      97: aload_2
      98: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     101: checkcast     #1096               // class com/amazonaws/services/s3/model/AccessControlList
     104: areturn

  private void setAcl(java.lang.String, java.lang.String, java.lang.String, com.amazonaws.services.s3.model.CannedAccessControlList, boolean, com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload         6
       2: ifnonnull     15
       5: new           #873                // class com/amazonaws/services/s3/model/GenericBucketRequest
       8: dup
       9: aload_1
      10: invokespecial #874                // Method com/amazonaws/services/s3/model/GenericBucketRequest."<init>":(Ljava/lang/String;)V
      13: astore        6
      15: aload_0
      16: aload_1
      17: aload_2
      18: aload         6
      20: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      23: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      26: astore        7
      28: aload         7
      30: ldc_w         #1093               // String acl
      33: aconst_null
      34: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      39: aload         7
      41: ldc           #224                // String x-amz-acl
      43: aload         4
      45: invokevirtual #225                // Method com/amazonaws/services/s3/model/CannedAccessControlList.toString:()Ljava/lang/String;
      48: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      53: aload_3
      54: ifnull        68
      57: aload         7
      59: ldc_w         #313                // String versionId
      62: aload_3
      63: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      68: aload         7
      70: iload         5
      72: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
      75: aload_0
      76: aload         7
      78: aload_0
      79: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      82: aload_1
      83: aload_2
      84: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      87: pop
      88: return

  private void setAcl(java.lang.String, java.lang.String, java.lang.String, com.amazonaws.services.s3.model.AccessControlList, boolean, com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload         6
       2: ifnonnull     15
       5: new           #873                // class com/amazonaws/services/s3/model/GenericBucketRequest
       8: dup
       9: aload_1
      10: invokespecial #874                // Method com/amazonaws/services/s3/model/GenericBucketRequest."<init>":(Ljava/lang/String;)V
      13: astore        6
      15: aload_0
      16: aload_1
      17: aload_2
      18: aload         6
      20: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      23: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      26: astore        7
      28: aload         7
      30: ldc_w         #1093               // String acl
      33: aconst_null
      34: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      39: aload_3
      40: ifnull        54
      43: aload         7
      45: ldc_w         #313                // String versionId
      48: aload_3
      49: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      54: aload         7
      56: iload         5
      58: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
      61: new           #1097               // class com/amazonaws/services/s3/model/transform/AclXmlFactory
      64: dup
      65: invokespecial #1098               // Method com/amazonaws/services/s3/model/transform/AclXmlFactory."<init>":()V
      68: aload         4
      70: invokevirtual #1099               // Method com/amazonaws/services/s3/model/transform/AclXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/AccessControlList;)[B
      73: astore        8
      75: aload         7
      77: ldc_w         #654                // String Content-Type
      80: ldc_w         #655                // String application/xml
      83: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      88: aload         7
      90: ldc_w         #477                // String Content-Length
      93: aload         8
      95: arraylength
      96: invokestatic  #653                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      99: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     104: aload         7
     106: new           #244                // class java/io/ByteArrayInputStream
     109: dup
     110: aload         8
     112: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     115: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     120: aload_0
     121: aload         7
     123: aload_0
     124: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     127: aload_1
     128: aload_2
     129: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     132: pop
     133: return

  protected com.amazonaws.auth.Signer createSigner(com.amazonaws.Request<?>, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #26                 // Field clientOptions:Lcom/amazonaws/services/s3/S3ClientOptions;
       4: invokevirtual #1100               // Method com/amazonaws/services/s3/S3ClientOptions.isAccelerateModeEnabled:()Z
       7: ifeq          17
      10: aload_0
      11: getfield      #56                 // Field endpoint:Ljava/net/URI;
      14: goto          23
      17: aload_1
      18: invokeinterface #1101,  1         // InterfaceMethod com/amazonaws/Request.getEndpoint:()Ljava/net/URI;
      23: astore        4
      25: aload_0
      26: aload         4
      28: invokevirtual #1102               // Method getSignerByURI:(Ljava/net/URI;)Lcom/amazonaws/auth/Signer;
      31: astore        5
      33: aload_0
      34: invokespecial #1103               // Method isSignerOverridden:()Z
      37: ifne          200
      40: aload         5
      42: instanceof    #1104               // class com/amazonaws/services/s3/internal/AWSS3V4Signer
      45: ifeq          161
      48: aload_0
      49: aload_1
      50: invokespecial #1105               // Method noExplicitRegionProvided:(Lcom/amazonaws/Request;)Z
      53: ifeq          161
      56: getstatic     #4                  // Field bucketRegionCache:Ljava/util/Map;
      59: aload_2
      60: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #204                // class java/lang/String
      68: astore        6
      70: aload         6
      72: ifnull        141
      75: aload_0
      76: aload_1
      77: aload_2
      78: aload_3
      79: aload         6
      81: invokestatic  #1106               // Method com/amazonaws/regions/RegionUtils.getRegion:(Ljava/lang/String;)Lcom/amazonaws/regions/Region;
      84: ldc           #59                 // String s3
      86: invokevirtual #1107               // Method com/amazonaws/regions/Region.getServiceEndpoint:(Ljava/lang/String;)Ljava/lang/String;
      89: aload_0
      90: getfield      #966                // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      93: invokestatic  #1108               // Method com/amazonaws/util/RuntimeHttpUtils.toUri:(Ljava/lang/String;Lcom/amazonaws/ClientConfiguration;)Ljava/net/URI;
      96: invokespecial #1109               // Method resolveRequestEndpoint:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;Ljava/net/URI;)V
      99: aload_1
     100: aload_1
     101: invokeinterface #915,  1          // InterfaceMethod com/amazonaws/Request.getResourcePath:()Ljava/lang/String;
     106: iconst_1
     107: invokestatic  #916                // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
     110: invokeinterface #917,  2          // InterfaceMethod com/amazonaws/Request.setResourcePath:(Ljava/lang/String;)V
     115: aload         5
     117: checkcast     #1104               // class com/amazonaws/services/s3/internal/AWSS3V4Signer
     120: astore        7
     122: aload         7
     124: aload_0
     125: invokevirtual #1110               // Method getServiceNameIntern:()Ljava/lang/String;
     128: invokevirtual #1111               // Method com/amazonaws/services/s3/internal/AWSS3V4Signer.setServiceName:(Ljava/lang/String;)V
     131: aload         7
     133: aload         6
     135: invokevirtual #1112               // Method com/amazonaws/services/s3/internal/AWSS3V4Signer.setRegionName:(Ljava/lang/String;)V
     138: aload         7
     140: areturn
     141: aload_1
     142: invokeinterface #464,  1          // InterfaceMethod com/amazonaws/Request.getOriginalRequest:()Lcom/amazonaws/AmazonWebServiceRequest;
     147: instanceof    #898                // class com/amazonaws/services/s3/model/GeneratePresignedUrlRequest
     150: ifeq          161
     153: aload_0
     154: aload_1
     155: aload_2
     156: aload_3
     157: invokespecial #1113               // Method createSigV2Signer:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/S3Signer;
     160: areturn
     161: aload_0
     162: invokevirtual #1114               // Method getSignerRegionOverride:()Ljava/lang/String;
     165: astore        6
     167: aload         6
     169: ifnull        200
     172: new           #1104               // class com/amazonaws/services/s3/internal/AWSS3V4Signer
     175: dup
     176: invokespecial #1115               // Method com/amazonaws/services/s3/internal/AWSS3V4Signer."<init>":()V
     179: astore        7
     181: aload         7
     183: aload_0
     184: invokevirtual #1110               // Method getServiceNameIntern:()Ljava/lang/String;
     187: invokevirtual #1111               // Method com/amazonaws/services/s3/internal/AWSS3V4Signer.setServiceName:(Ljava/lang/String;)V
     190: aload         7
     192: aload         6
     194: invokevirtual #1112               // Method com/amazonaws/services/s3/internal/AWSS3V4Signer.setRegionName:(Ljava/lang/String;)V
     197: aload         7
     199: areturn
     200: aload         5
     202: instanceof    #1116               // class com/amazonaws/services/s3/internal/S3Signer
     205: ifeq          216
     208: aload_0
     209: aload_1
     210: aload_2
     211: aload_3
     212: invokespecial #1113               // Method createSigV2Signer:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/S3Signer;
     215: areturn
     216: aload         5
     218: areturn

  private com.amazonaws.services.s3.internal.S3Signer createSigV2Signer(com.amazonaws.Request<?>, java.lang.String, java.lang.String);
    Code:
       0: new           #357                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #1117               // String /
      10: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_2
      14: ifnull        40
      17: new           #357                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      24: aload_2
      25: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc_w         #1117               // String /
      31: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: goto          43
      40: ldc_w         #1118               // String
      43: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_3
      47: ifnull        54
      50: aload_3
      51: goto          57
      54: ldc_w         #1118               // String
      57: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: astore        4
      65: new           #1116               // class com/amazonaws/services/s3/internal/S3Signer
      68: dup
      69: aload_1
      70: invokeinterface #1119,  1         // InterfaceMethod com/amazonaws/Request.getHttpMethod:()Lcom/amazonaws/http/HttpMethodName;
      75: invokevirtual #1120               // Method com/amazonaws/http/HttpMethodName.toString:()Ljava/lang/String;
      78: aload         4
      80: invokespecial #1121               // Method com/amazonaws/services/s3/internal/S3Signer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      83: areturn

  private java.lang.String getSignerRegion();
    Code:
       0: aload_0
       1: invokevirtual #1114               // Method getSignerRegionOverride:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     14
       9: aload_0
      10: getfield      #61                 // Field clientRegion:Ljava/lang/String;
      13: astore_1
      14: aload_1
      15: areturn

  private boolean isSignerOverridden();
    Code:
       0: aload_0
       1: getfield      #966                // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
       4: ifnull        21
       7: aload_0
       8: getfield      #966                // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      11: invokevirtual #1122               // Method com/amazonaws/ClientConfiguration.getSignerOverride:()Ljava/lang/String;
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private boolean noExplicitRegionProvided(com.amazonaws.Request<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1101,  1         // InterfaceMethod com/amazonaws/Request.getEndpoint:()Ljava/net/URI;
       7: invokespecial #1123               // Method isStandardEndpoint:(Ljava/net/URI;)Z
      10: ifeq          24
      13: aload_0
      14: invokespecial #1124               // Method getSignerRegion:()Ljava/lang/String;
      17: ifnonnull     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean isStandardEndpoint(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method java/net/URI.getHost:()Ljava/lang/String;
       4: ldc           #40                 // String s3.amazonaws.com
       6: invokevirtual #1125               // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       9: ireturn

  protected <T> void presignRequest(com.amazonaws.Request<T>, com.amazonaws.HttpMethod, java.lang.String, java.lang.String, java.util.Date, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1126               // Method beforeRequest:(Lcom/amazonaws/Request;)V
       5: new           #357                // class java/lang/StringBuilder
       8: dup
       9: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      12: ldc_w         #1117               // String /
      15: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_3
      19: ifnull        45
      22: new           #357                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      29: aload_3
      30: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc_w         #1117               // String /
      36: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: goto          48
      45: ldc_w         #1118               // String
      48: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload         4
      53: ifnull        65
      56: aload         4
      58: iconst_1
      59: invokestatic  #916                // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      62: goto          68
      65: ldc_w         #1118               // String
      68: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload         6
      73: ifnull        100
      76: new           #357                // class java/lang/StringBuilder
      79: dup
      80: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      83: ldc_w         #1127               // String ?
      86: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload         6
      91: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: goto          103
     100: ldc_w         #1118               // String
     103: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: astore        7
     111: aload         7
     113: ldc_w         #1128               // String (?<=/)/
     116: ldc_w         #1129               // String %2F
     119: invokevirtual #1130               // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     122: astore        7
     124: aload_0
     125: getfield      #30                 // Field awsCredentialsProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
     128: invokeinterface #937,  1          // InterfaceMethod com/amazonaws/auth/AWSCredentialsProvider.getCredentials:()Lcom/amazonaws/auth/AWSCredentials;
     133: astore        8
     135: aload_1
     136: invokeinterface #464,  1          // InterfaceMethod com/amazonaws/Request.getOriginalRequest:()Lcom/amazonaws/AmazonWebServiceRequest;
     141: astore        9
     143: aload         9
     145: ifnull        163
     148: aload         9
     150: invokevirtual #1131               // Method com/amazonaws/AmazonWebServiceRequest.getRequestCredentials:()Lcom/amazonaws/auth/AWSCredentials;
     153: ifnull        163
     156: aload         9
     158: invokevirtual #1131               // Method com/amazonaws/AmazonWebServiceRequest.getRequestCredentials:()Lcom/amazonaws/auth/AWSCredentials;
     161: astore        8
     163: new           #1132               // class com/amazonaws/services/s3/internal/S3QueryStringSigner
     166: dup
     167: aload_2
     168: invokevirtual #913                // Method com/amazonaws/HttpMethod.toString:()Ljava/lang/String;
     171: aload         7
     173: aload         5
     175: invokespecial #1133               // Method com/amazonaws/services/s3/internal/S3QueryStringSigner."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;)V
     178: aload_1
     179: aload         8
     181: invokevirtual #1134               // Method com/amazonaws/services/s3/internal/S3QueryStringSigner.sign:(Lcom/amazonaws/SignableRequest;Lcom/amazonaws/auth/AWSCredentials;)V
     184: aload_1
     185: invokeinterface #1135,  1         // InterfaceMethod com/amazonaws/Request.getHeaders:()Ljava/util/Map;
     190: ldc_w         #1136               // String x-amz-security-token
     193: invokeinterface #535,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     198: ifeq          246
     201: aload_1
     202: invokeinterface #1135,  1         // InterfaceMethod com/amazonaws/Request.getHeaders:()Ljava/util/Map;
     207: ldc_w         #1136               // String x-amz-security-token
     210: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     215: checkcast     #204                // class java/lang/String
     218: astore        10
     220: aload_1
     221: ldc_w         #1136               // String x-amz-security-token
     224: aload         10
     226: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     231: aload_1
     232: invokeinterface #1135,  1         // InterfaceMethod com/amazonaws/Request.getHeaders:()Ljava/util/Map;
     237: ldc_w         #1136               // String x-amz-security-token
     240: invokeinterface #431,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     245: pop
     246: return

  private <T> void beforeRequest(com.amazonaws.Request<T>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field requestHandler2s:Ljava/util/List;
       4: ifnull        44
       7: aload_0
       8: getfield      #44                 // Field requestHandler2s:Ljava/util/List;
      11: invokeinterface #530,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #531,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          44
      26: aload_2
      27: invokeinterface #532,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #1137               // class com/amazonaws/handlers/RequestHandler2
      35: astore_3
      36: aload_3
      37: aload_1
      38: invokevirtual #1138               // Method com/amazonaws/handlers/RequestHandler2.beforeRequest:(Lcom/amazonaws/Request;)V
      41: goto          17
      44: return

  protected static void populateRequestMetadata(com.amazonaws.Request<?>, com.amazonaws.services.s3.model.ObjectMetadata);
    Code:
       0: aload_1
       1: invokevirtual #1139               // Method com/amazonaws/services/s3/model/ObjectMetadata.getRawMetadata:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ifnull        70
       9: aload_2
      10: invokeinterface #920,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      15: invokeinterface #921,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #531,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          70
      30: aload_3
      31: invokeinterface #532,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #922                // class java/util/Map$Entry
      39: astore        4
      41: aload_0
      42: aload         4
      44: invokeinterface #923,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: checkcast     #204                // class java/lang/String
      52: aload         4
      54: invokeinterface #924,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: invokevirtual #1140               // Method java/lang/Object.toString:()Ljava/lang/String;
      62: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      67: goto          21
      70: aload_1
      71: invokevirtual #1141               // Method com/amazonaws/services/s3/model/ObjectMetadata.getHttpExpiresDate:()Ljava/util/Date;
      74: astore_3
      75: aload_3
      76: ifnull        92
      79: aload_0
      80: ldc_w         #1142               // String Expires
      83: aload_3
      84: invokestatic  #1143               // Method com/amazonaws/util/DateUtils.formatRFC822Date:(Ljava/util/Date;)Ljava/lang/String;
      87: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      92: aload_1
      93: invokevirtual #1144               // Method com/amazonaws/services/s3/model/ObjectMetadata.getUserMetadata:()Ljava/util/Map;
      96: astore        4
      98: aload         4
     100: ifnull        219
     103: aload         4
     105: invokeinterface #920,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     110: invokeinterface #921,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     115: astore        5
     117: aload         5
     119: invokeinterface #531,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          219
     127: aload         5
     129: invokeinterface #532,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     134: checkcast     #922                // class java/util/Map$Entry
     137: astore        6
     139: aload         6
     141: invokeinterface #923,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     146: checkcast     #204                // class java/lang/String
     149: astore        7
     151: aload         6
     153: invokeinterface #924,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     158: checkcast     #204                // class java/lang/String
     161: astore        8
     163: aload         7
     165: ifnull        175
     168: aload         7
     170: invokevirtual #217                // Method java/lang/String.trim:()Ljava/lang/String;
     173: astore        7
     175: aload         8
     177: ifnull        187
     180: aload         8
     182: invokevirtual #217                // Method java/lang/String.trim:()Ljava/lang/String;
     185: astore        8
     187: aload_0
     188: new           #357                // class java/lang/StringBuilder
     191: dup
     192: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     195: ldc_w         #1145               // String x-amz-meta-
     198: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload         7
     203: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     209: aload         8
     211: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     216: goto          117
     219: return

  protected static void populateRequesterPaysHeader(com.amazonaws.Request<?>, boolean);
    Code:
       0: iload_1
       1: ifeq          16
       4: aload_0
       5: ldc_w         #1146               // String x-amz-request-payer
       8: ldc_w         #1147               // String requester
      11: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      16: return

  private void populateRequestWithMfaDetails(com.amazonaws.Request<?>, com.amazonaws.services.s3.model.MultiFactorAuthentication);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokeinterface #1101,  1         // InterfaceMethod com/amazonaws/Request.getEndpoint:()Ljava/net/URI;
      11: invokevirtual #1148               // Method java/net/URI.toString:()Ljava/lang/String;
      14: astore_3
      15: aload_3
      16: ldc_w         #1149               // String http://
      19: invokevirtual #1150               // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      22: ifeq          59
      25: aload_3
      26: ldc_w         #1149               // String http://
      29: ldc_w         #1151               // String https://
      32: invokevirtual #1152               // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      35: astore        4
      37: aload_1
      38: aload         4
      40: invokestatic  #1153               // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      43: invokeinterface #1154,  2         // InterfaceMethod com/amazonaws/Request.setEndpoint:(Ljava/net/URI;)V
      48: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      51: ldc_w         #1155               // String Overriding current endpoint to use HTTPS as required by S3 for requests containing an MFA header
      54: invokeinterface #1156,  2         // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      59: aload_1
      60: ldc_w         #1157               // String x-amz-mfa
      63: new           #357                // class java/lang/StringBuilder
      66: dup
      67: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      70: aload_2
      71: invokevirtual #1158               // Method com/amazonaws/services/s3/model/MultiFactorAuthentication.getDeviceSerialNumber:()Ljava/lang/String;
      74: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc_w         #1159               // String
      80: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_2
      84: invokevirtual #1160               // Method com/amazonaws/services/s3/model/MultiFactorAuthentication.getToken:()Ljava/lang/String;
      87: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      98: return

  private static void populateRequestWithCopyObjectParameters(com.amazonaws.Request<? extends com.amazonaws.AmazonWebServiceRequest>, com.amazonaws.services.s3.model.CopyObjectRequest);
    Code:
       0: new           #357                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #1117               // String /
      10: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #552                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceBucketName:()Ljava/lang/String;
      17: iconst_1
      18: invokestatic  #916                // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      21: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc_w         #1117               // String /
      27: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #554                // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceKey:()Ljava/lang/String;
      34: iconst_1
      35: invokestatic  #916                // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      38: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore_2
      45: aload_1
      46: invokevirtual #1161               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceVersionId:()Ljava/lang/String;
      49: ifnull        80
      52: new           #357                // class java/lang/StringBuilder
      55: dup
      56: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      59: aload_2
      60: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc_w         #1162               // String ?versionId=
      66: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #1161               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceVersionId:()Ljava/lang/String;
      73: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: astore_2
      80: aload_0
      81: ldc_w         #1163               // String x-amz-copy-source
      84: aload_2
      85: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      90: aload_0
      91: ldc_w         #1164               // String x-amz-copy-source-if-modified-since
      94: aload_1
      95: invokevirtual #1165               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getModifiedSinceConstraint:()Ljava/util/Date;
      98: invokestatic  #369                // Method addDateHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/Date;)V
     101: aload_0
     102: ldc_w         #1166               // String x-amz-copy-source-if-unmodified-since
     105: aload_1
     106: invokevirtual #1167               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getUnmodifiedSinceConstraint:()Ljava/util/Date;
     109: invokestatic  #369                // Method addDateHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/Date;)V
     112: aload_0
     113: ldc_w         #1168               // String x-amz-copy-source-if-match
     116: aload_1
     117: invokevirtual #1169               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getMatchingETagConstraints:()Ljava/util/List;
     120: invokestatic  #374                // Method addStringListHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/List;)V
     123: aload_0
     124: ldc_w         #1170               // String x-amz-copy-source-if-none-match
     127: aload_1
     128: invokevirtual #1171               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getNonmatchingETagConstraints:()Ljava/util/List;
     131: invokestatic  #374                // Method addStringListHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/List;)V
     134: aload_1
     135: invokevirtual #1172               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
     138: ifnull        152
     141: aload_0
     142: aload_1
     143: invokevirtual #1172               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
     146: invokestatic  #221                // Method addAclHeaders:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/AccessControlList;)V
     149: goto          174
     152: aload_1
     153: invokevirtual #1173               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getCannedAccessControlList:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
     156: ifnull        174
     159: aload_0
     160: ldc           #224                // String x-amz-acl
     162: aload_1
     163: invokevirtual #1173               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getCannedAccessControlList:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
     166: invokevirtual #225                // Method com/amazonaws/services/s3/model/CannedAccessControlList.toString:()Ljava/lang/String;
     169: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     174: aload_1
     175: invokevirtual #1174               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getStorageClass:()Ljava/lang/String;
     178: ifnull        194
     181: aload_0
     182: ldc_w         #470                // String x-amz-storage-class
     185: aload_1
     186: invokevirtual #1174               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getStorageClass:()Ljava/lang/String;
     189: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     194: aload_1
     195: invokevirtual #1175               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getRedirectLocation:()Ljava/lang/String;
     198: ifnull        214
     201: aload_0
     202: ldc_w         #472                // String x-amz-website-redirect-location
     205: aload_1
     206: invokevirtual #1175               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getRedirectLocation:()Ljava/lang/String;
     209: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     214: aload_0
     215: aload_1
     216: invokevirtual #1176               // Method com/amazonaws/services/s3/model/CopyObjectRequest.isRequesterPays:()Z
     219: invokestatic  #315                // Method populateRequesterPaysHeader:(Lcom/amazonaws/Request;Z)V
     222: aload_1
     223: invokevirtual #1177               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getNewObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
     226: astore_3
     227: aload_3
     228: ifnull        248
     231: aload_0
     232: ldc_w         #1178               // String x-amz-metadata-directive
     235: ldc_w         #1179               // String REPLACE
     238: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     243: aload_0
     244: aload_3
     245: invokestatic  #488                // Method populateRequestMetadata:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     248: aload_0
     249: aload_1
     250: invokevirtual #1180               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     253: invokestatic  #1181               // Method populateSourceSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     256: aload_0
     257: aload_1
     258: invokevirtual #1182               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     261: invokestatic  #319                // Method populateSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     264: return

  private static void populateRequestWithCopyPartParameters(com.amazonaws.Request<?>, com.amazonaws.services.s3.model.CopyPartRequest);
    Code:
       0: new           #357                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #1117               // String /
      10: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #610                // Method com/amazonaws/services/s3/model/CopyPartRequest.getSourceBucketName:()Ljava/lang/String;
      17: iconst_1
      18: invokestatic  #916                // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      21: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc_w         #1117               // String /
      27: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #612                // Method com/amazonaws/services/s3/model/CopyPartRequest.getSourceKey:()Ljava/lang/String;
      34: iconst_1
      35: invokestatic  #916                // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      38: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore_2
      45: aload_1
      46: invokevirtual #1183               // Method com/amazonaws/services/s3/model/CopyPartRequest.getSourceVersionId:()Ljava/lang/String;
      49: ifnull        80
      52: new           #357                // class java/lang/StringBuilder
      55: dup
      56: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      59: aload_2
      60: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc_w         #1162               // String ?versionId=
      66: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #1183               // Method com/amazonaws/services/s3/model/CopyPartRequest.getSourceVersionId:()Ljava/lang/String;
      73: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: astore_2
      80: aload_0
      81: ldc_w         #1163               // String x-amz-copy-source
      84: aload_2
      85: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      90: aload_0
      91: ldc_w         #1164               // String x-amz-copy-source-if-modified-since
      94: aload_1
      95: invokevirtual #1184               // Method com/amazonaws/services/s3/model/CopyPartRequest.getModifiedSinceConstraint:()Ljava/util/Date;
      98: invokestatic  #369                // Method addDateHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/Date;)V
     101: aload_0
     102: ldc_w         #1166               // String x-amz-copy-source-if-unmodified-since
     105: aload_1
     106: invokevirtual #1185               // Method com/amazonaws/services/s3/model/CopyPartRequest.getUnmodifiedSinceConstraint:()Ljava/util/Date;
     109: invokestatic  #369                // Method addDateHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/Date;)V
     112: aload_0
     113: ldc_w         #1168               // String x-amz-copy-source-if-match
     116: aload_1
     117: invokevirtual #1186               // Method com/amazonaws/services/s3/model/CopyPartRequest.getMatchingETagConstraints:()Ljava/util/List;
     120: invokestatic  #374                // Method addStringListHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/List;)V
     123: aload_0
     124: ldc_w         #1170               // String x-amz-copy-source-if-none-match
     127: aload_1
     128: invokevirtual #1187               // Method com/amazonaws/services/s3/model/CopyPartRequest.getNonmatchingETagConstraints:()Ljava/util/List;
     131: invokestatic  #374                // Method addStringListHeader:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/util/List;)V
     134: aload_1
     135: invokevirtual #1188               // Method com/amazonaws/services/s3/model/CopyPartRequest.getFirstByte:()Ljava/lang/Long;
     138: ifnull        195
     141: aload_1
     142: invokevirtual #1189               // Method com/amazonaws/services/s3/model/CopyPartRequest.getLastByte:()Ljava/lang/Long;
     145: ifnull        195
     148: new           #357                // class java/lang/StringBuilder
     151: dup
     152: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     155: ldc_w         #359                // String bytes=
     158: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_1
     162: invokevirtual #1188               // Method com/amazonaws/services/s3/model/CopyPartRequest.getFirstByte:()Ljava/lang/Long;
     165: invokevirtual #502                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     168: ldc_w         #362                // String -
     171: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload_1
     175: invokevirtual #1189               // Method com/amazonaws/services/s3/model/CopyPartRequest.getLastByte:()Ljava/lang/Long;
     178: invokevirtual #502                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     181: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: astore_3
     185: aload_0
     186: ldc_w         #1190               // String x-amz-copy-source-range
     189: aload_3
     190: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     195: aload_0
     196: aload_1
     197: invokevirtual #1191               // Method com/amazonaws/services/s3/model/CopyPartRequest.getSourceSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     200: invokestatic  #1181               // Method populateSourceSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     203: aload_0
     204: aload_1
     205: invokevirtual #1192               // Method com/amazonaws/services/s3/model/CopyPartRequest.getDestinationSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     208: invokestatic  #319                // Method populateSSE_C:(Lcom/amazonaws/Request;Lcom/amazonaws/services/s3/model/SSECustomerKey;)V
     211: return

  private static void populateSSE_C(com.amazonaws.Request<?>, com.amazonaws.services.s3.model.SSECustomerKey);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: ldc_w         #1193               // String x-amz-server-side-encryption-customer-algorithm
       9: aload_1
      10: invokevirtual #1194               // Method com/amazonaws/services/s3/model/SSECustomerKey.getAlgorithm:()Ljava/lang/String;
      13: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      16: aload_0
      17: ldc_w         #1195               // String x-amz-server-side-encryption-customer-key
      20: aload_1
      21: invokevirtual #1196               // Method com/amazonaws/services/s3/model/SSECustomerKey.getKey:()Ljava/lang/String;
      24: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      27: aload_0
      28: ldc_w         #1197               // String x-amz-server-side-encryption-customer-key-MD5
      31: aload_1
      32: invokevirtual #1198               // Method com/amazonaws/services/s3/model/SSECustomerKey.getMd5:()Ljava/lang/String;
      35: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      38: aload_1
      39: invokevirtual #1196               // Method com/amazonaws/services/s3/model/SSECustomerKey.getKey:()Ljava/lang/String;
      42: ifnull        75
      45: aload_1
      46: invokevirtual #1198               // Method com/amazonaws/services/s3/model/SSECustomerKey.getMd5:()Ljava/lang/String;
      49: ifnonnull     75
      52: aload_1
      53: invokevirtual #1196               // Method com/amazonaws/services/s3/model/SSECustomerKey.getKey:()Ljava/lang/String;
      56: astore_2
      57: aload_2
      58: invokestatic  #1199               // Method com/amazonaws/util/Base64.decode:(Ljava/lang/String;)[B
      61: astore_3
      62: aload_0
      63: ldc_w         #1197               // String x-amz-server-side-encryption-customer-key-MD5
      66: aload_3
      67: invokestatic  #1200               // Method com/amazonaws/util/Md5Utils.md5AsBase64:([B)Ljava/lang/String;
      70: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      75: return

  private static void populateSourceSSE_C(com.amazonaws.Request<?>, com.amazonaws.services.s3.model.SSECustomerKey);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: ldc_w         #1201               // String x-amz-copy-source-server-side-encryption-customer-algorithm
       9: aload_1
      10: invokevirtual #1194               // Method com/amazonaws/services/s3/model/SSECustomerKey.getAlgorithm:()Ljava/lang/String;
      13: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      16: aload_0
      17: ldc_w         #1202               // String x-amz-copy-source-server-side-encryption-customer-key
      20: aload_1
      21: invokevirtual #1196               // Method com/amazonaws/services/s3/model/SSECustomerKey.getKey:()Ljava/lang/String;
      24: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      27: aload_0
      28: ldc_w         #1203               // String x-amz-copy-source-server-side-encryption-customer-key-MD5
      31: aload_1
      32: invokevirtual #1198               // Method com/amazonaws/services/s3/model/SSECustomerKey.getMd5:()Ljava/lang/String;
      35: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      38: aload_1
      39: invokevirtual #1196               // Method com/amazonaws/services/s3/model/SSECustomerKey.getKey:()Ljava/lang/String;
      42: ifnull        75
      45: aload_1
      46: invokevirtual #1198               // Method com/amazonaws/services/s3/model/SSECustomerKey.getMd5:()Ljava/lang/String;
      49: ifnonnull     75
      52: aload_1
      53: invokevirtual #1196               // Method com/amazonaws/services/s3/model/SSECustomerKey.getKey:()Ljava/lang/String;
      56: astore_2
      57: aload_2
      58: invokestatic  #1199               // Method com/amazonaws/util/Base64.decode:(Ljava/lang/String;)[B
      61: astore_3
      62: aload_0
      63: ldc_w         #1203               // String x-amz-copy-source-server-side-encryption-customer-key-MD5
      66: aload_3
      67: invokestatic  #1200               // Method com/amazonaws/util/Md5Utils.md5AsBase64:([B)Ljava/lang/String;
      70: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      75: return

  private static void populateSSE_KMS(com.amazonaws.Request<?>, com.amazonaws.services.s3.model.SSEAwsKeyManagementParams);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_0
       5: ldc_w         #929                // String x-amz-server-side-encryption
       8: aload_1
       9: invokevirtual #1204               // Method com/amazonaws/services/s3/model/SSEAwsKeyManagementParams.getEncryption:()Ljava/lang/String;
      12: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      15: aload_0
      16: ldc_w         #931                // String x-amz-server-side-encryption-aws-kms-key-id
      19: aload_1
      20: invokevirtual #1205               // Method com/amazonaws/services/s3/model/SSEAwsKeyManagementParams.getAwsKmsKeyId:()Ljava/lang/String;
      23: invokestatic  #926                // Method addHeaderIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      26: return

  private void addPartNumberIfNotNull(com.amazonaws.Request<?>, java.lang.Integer);
    Code:
       0: aload_2
       1: ifnull        17
       4: aload_1
       5: ldc_w         #625                // String partNumber
       8: aload_2
       9: invokevirtual #120                // Method java/lang/Integer.toString:()Ljava/lang/String;
      12: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      17: return

  private static void addHeaderIfNotNull(com.amazonaws.Request<?>, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  private static void addParameterIfNotNull(com.amazonaws.Request<?>, java.lang.String, java.lang.Integer);
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #120                // Method java/lang/Integer.toString:()Ljava/lang/String;
      10: invokestatic  #110                // Method addParameterIfNotNull:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)V
      13: return

  private static void addParameterIfNotNull(com.amazonaws.Request<?>, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  private static void addDateHeader(com.amazonaws.Request<?>, java.lang.String, java.util.Date);
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokestatic  #1206               // Method com/amazonaws/services/s3/internal/ServiceUtils.formatRfc822Date:(Ljava/util/Date;)Ljava/lang/String;
      10: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      15: return

  private static void addStringListHeader(com.amazonaws.Request<?>, java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_2
       1: ifnull        24
       4: aload_2
       5: invokeinterface #664,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      10: ifne          24
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokestatic  #1207               // Method com/amazonaws/services/s3/internal/ServiceUtils.join:(Ljava/util/List;)Ljava/lang/String;
      19: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      24: return

  private static void addResponseHeaderParameters(com.amazonaws.Request<?>, com.amazonaws.services.s3.model.ResponseHeaderOverrides);
    Code:
       0: aload_1
       1: ifnull        124
       4: aload_1
       5: invokevirtual #1208               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getCacheControl:()Ljava/lang/String;
       8: ifnull        24
      11: aload_0
      12: ldc_w         #1210               // String response-cache-control
      15: aload_1
      16: invokevirtual #1208               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getCacheControl:()Ljava/lang/String;
      19: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      24: aload_1
      25: invokevirtual #1211               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getContentDisposition:()Ljava/lang/String;
      28: ifnull        44
      31: aload_0
      32: ldc_w         #1212               // String response-content-disposition
      35: aload_1
      36: invokevirtual #1211               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getContentDisposition:()Ljava/lang/String;
      39: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      44: aload_1
      45: invokevirtual #1213               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getContentEncoding:()Ljava/lang/String;
      48: ifnull        64
      51: aload_0
      52: ldc_w         #1214               // String response-content-encoding
      55: aload_1
      56: invokevirtual #1213               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getContentEncoding:()Ljava/lang/String;
      59: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      64: aload_1
      65: invokevirtual #1215               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getContentLanguage:()Ljava/lang/String;
      68: ifnull        84
      71: aload_0
      72: ldc_w         #1216               // String response-content-language
      75: aload_1
      76: invokevirtual #1215               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getContentLanguage:()Ljava/lang/String;
      79: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      84: aload_1
      85: invokevirtual #1217               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getContentType:()Ljava/lang/String;
      88: ifnull        104
      91: aload_0
      92: ldc_w         #1218               // String response-content-type
      95: aload_1
      96: invokevirtual #1217               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getContentType:()Ljava/lang/String;
      99: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     104: aload_1
     105: invokevirtual #1219               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getExpires:()Ljava/lang/String;
     108: ifnull        124
     111: aload_0
     112: ldc_w         #1220               // String response-expires
     115: aload_1
     116: invokevirtual #1219               // Method com/amazonaws/services/s3/model/ResponseHeaderOverrides.getExpires:()Ljava/lang/String;
     119: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
     124: return

  public java.lang.String getResourceUrl(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1221               // Method getUrl:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;
       6: invokevirtual #1222               // Method java/net/URL.toString:()Ljava/lang/String;
       9: areturn
      10: astore_3
      11: aconst_null
      12: areturn
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Exception

  public java.net.URL getUrl(java.lang.String, java.lang.String);
    Code:
       0: new           #1223               // class com/amazonaws/DefaultRequest
       3: dup
       4: ldc_w         #1224               // String Amazon S3
       7: invokespecial #1225               // Method com/amazonaws/DefaultRequest."<init>":(Ljava/lang/String;)V
      10: astore_3
      11: aload_0
      12: aload_3
      13: aload_1
      14: aload_2
      15: aload_0
      16: getfield      #56                 // Field endpoint:Ljava/net/URI;
      19: invokespecial #1109               // Method resolveRequestEndpoint:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;Ljava/net/URI;)V
      22: aload_3
      23: invokestatic  #1226               // Method com/amazonaws/services/s3/internal/ServiceUtils.convertRequestToUrl:(Lcom/amazonaws/Request;)Ljava/net/URL;
      26: areturn

  public synchronized com.amazonaws.services.s3.model.Region getRegion();
    Code:
       0: aload_0
       1: getfield      #1227               // Field com/amazonaws/AmazonWebServiceClient.endpoint:Ljava/net/URI;
       4: invokevirtual #1228               // Method java/net/URI.getAuthority:()Ljava/lang/String;
       7: astore_1
       8: ldc           #40                 // String s3.amazonaws.com
      10: aload_1
      11: invokevirtual #233                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: getstatic     #231                // Field com/amazonaws/services/s3/model/Region.US_Standard:Lcom/amazonaws/services/s3/model/Region;
      20: areturn
      21: getstatic     #1229               // Field com/amazonaws/services/s3/model/Region.S3_REGIONAL_ENDPOINT_PATTERN:Ljava/util/regex/Pattern;
      24: aload_1
      25: invokevirtual #1230               // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      28: astore_2
      29: aload_2
      30: invokevirtual #1231               // Method java/util/regex/Matcher.matches:()Z
      33: ifeq          45
      36: aload_2
      37: iconst_1
      38: invokevirtual #1232               // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      41: invokestatic  #1233               // Method com/amazonaws/services/s3/model/Region.fromValue:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/Region;
      44: areturn
      45: new           #51                 // class java/lang/IllegalStateException
      48: dup
      49: new           #357                // class java/lang/StringBuilder
      52: dup
      53: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      56: ldc_w         #1234               // String S3 client with invalid S3 endpoint configured:
      59: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: athrow

  protected <X extends com.amazonaws.AmazonWebServiceRequest> com.amazonaws.Request<X> createRequest(java.lang.String, java.lang.String, X, com.amazonaws.http.HttpMethodName);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload_0
       7: getfield      #56                 // Field endpoint:Ljava/net/URI;
      10: invokevirtual #312                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;Ljava/net/URI;)Lcom/amazonaws/Request;
      13: areturn

  protected <X extends com.amazonaws.AmazonWebServiceRequest> com.amazonaws.Request<X> createRequest(java.lang.String, java.lang.String, X, com.amazonaws.http.HttpMethodName, java.net.URI);
    Code:
       0: aload_0
       1: getfield      #26                 // Field clientOptions:Lcom/amazonaws/services/s3/S3ClientOptions;
       4: invokevirtual #1100               // Method com/amazonaws/services/s3/S3ClientOptions.isAccelerateModeEnabled:()Z
       7: ifeq          29
      10: aload_3
      11: instanceof    #1235               // class com/amazonaws/services/s3/model/S3AccelerateUnsupported
      14: ifne          29
      17: ldc_w         #1236               // String s3-accelerate.amazonaws.com
      20: aload_0
      21: getfield      #966                // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      24: invokestatic  #1108               // Method com/amazonaws/util/RuntimeHttpUtils.toUri:(Ljava/lang/String;Lcom/amazonaws/ClientConfiguration;)Ljava/net/URI;
      27: astore        5
      29: new           #1223               // class com/amazonaws/DefaultRequest
      32: dup
      33: aload_3
      34: ldc_w         #1224               // String Amazon S3
      37: invokespecial #1237               // Method com/amazonaws/DefaultRequest."<init>":(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)V
      40: astore        6
      42: aload         6
      44: aload         4
      46: invokeinterface #1238,  2         // InterfaceMethod com/amazonaws/Request.setHttpMethod:(Lcom/amazonaws/http/HttpMethodName;)V
      51: aload         6
      53: getstatic     #1239               // Field com/amazonaws/services/s3/request/S3HandlerContextKeys.IS_CHUNKED_ENCODING_DISABLED:Lcom/amazonaws/handlers/HandlerContextKey;
      56: aload_0
      57: getfield      #26                 // Field clientOptions:Lcom/amazonaws/services/s3/S3ClientOptions;
      60: invokevirtual #1240               // Method com/amazonaws/services/s3/S3ClientOptions.isChunkedEncodingDisabled:()Z
      63: invokestatic  #1241               // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      66: invokeinterface #1242,  3         // InterfaceMethod com/amazonaws/Request.addHandlerContext:(Lcom/amazonaws/handlers/HandlerContextKey;Ljava/lang/Object;)V
      71: aload         6
      73: getstatic     #1243               // Field com/amazonaws/services/s3/request/S3HandlerContextKeys.IS_PAYLOAD_SIGNING_ENABLED:Lcom/amazonaws/handlers/HandlerContextKey;
      76: aload_0
      77: getfield      #26                 // Field clientOptions:Lcom/amazonaws/services/s3/S3ClientOptions;
      80: invokevirtual #1244               // Method com/amazonaws/services/s3/S3ClientOptions.isPayloadSigningEnabled:()Z
      83: invokestatic  #1241               // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      86: invokeinterface #1242,  3         // InterfaceMethod com/amazonaws/Request.addHandlerContext:(Lcom/amazonaws/handlers/HandlerContextKey;Ljava/lang/Object;)V
      91: aload_0
      92: aload         6
      94: aload_1
      95: aload_2
      96: aload         5
      98: invokespecial #1109               // Method resolveRequestEndpoint:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;Ljava/net/URI;)V
     101: aload         6
     103: areturn

  private void resolveRequestEndpoint(com.amazonaws.Request<?>, java.lang.String, java.lang.String, java.net.URI);
    Code:
       0: aload_0
       1: new           #1245               // class com/amazonaws/internal/IdentityEndpointBuilder
       4: dup
       5: aload         4
       7: invokespecial #1246               // Method com/amazonaws/internal/IdentityEndpointBuilder."<init>":(Ljava/net/URI;)V
      10: aload_2
      11: aload_3
      12: invokespecial #1247               // Method buildEndpointResolver:(Lcom/amazonaws/internal/ServiceEndpointBuilder;Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/S3RequestEndpointResolver;
      15: aload_1
      16: invokevirtual #1248               // Method com/amazonaws/services/s3/internal/S3RequestEndpointResolver.resolveRequestEndpoint:(Lcom/amazonaws/Request;)V
      19: return

  private com.amazonaws.services.s3.internal.S3RequestEndpointResolver buildDefaultEndpointResolver(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #1249               // class com/amazonaws/services/s3/internal/S3RequestEndpointResolver
       3: dup
       4: new           #1250               // class com/amazonaws/internal/DefaultServiceEndpointBuilder
       7: dup
       8: aload_0
       9: invokevirtual #1110               // Method getServiceNameIntern:()Ljava/lang/String;
      12: aload_1
      13: invokespecial #1251               // Method com/amazonaws/internal/DefaultServiceEndpointBuilder."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      16: aload_0
      17: getfield      #26                 // Field clientOptions:Lcom/amazonaws/services/s3/S3ClientOptions;
      20: invokevirtual #1252               // Method com/amazonaws/services/s3/S3ClientOptions.isPathStyleAccess:()Z
      23: aload_2
      24: aload_3
      25: invokespecial #1253               // Method com/amazonaws/services/s3/internal/S3RequestEndpointResolver."<init>":(Lcom/amazonaws/internal/ServiceEndpointBuilder;ZLjava/lang/String;Ljava/lang/String;)V
      28: areturn

  private com.amazonaws.services.s3.internal.S3RequestEndpointResolver buildEndpointResolver(com.amazonaws.internal.ServiceEndpointBuilder, java.lang.String, java.lang.String);
    Code:
       0: new           #1249               // class com/amazonaws/services/s3/internal/S3RequestEndpointResolver
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #26                 // Field clientOptions:Lcom/amazonaws/services/s3/S3ClientOptions;
       9: invokevirtual #1252               // Method com/amazonaws/services/s3/S3ClientOptions.isPathStyleAccess:()Z
      12: aload_2
      13: aload_3
      14: invokespecial #1253               // Method com/amazonaws/services/s3/internal/S3RequestEndpointResolver."<init>":(Lcom/amazonaws/internal/ServiceEndpointBuilder;ZLjava/lang/String;Ljava/lang/String;)V
      17: areturn

  private <X, Y extends com.amazonaws.AmazonWebServiceRequest> X invoke(com.amazonaws.Request<Y>, com.amazonaws.transform.Unmarshaller<X, java.io.InputStream>, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #21                 // class com/amazonaws/services/s3/internal/S3XmlResponseHandler
       5: dup
       6: aload_2
       7: invokespecial #22                 // Method com/amazonaws/services/s3/internal/S3XmlResponseHandler."<init>":(Lcom/amazonaws/transform/Unmarshaller;)V
      10: aload_3
      11: aload         4
      13: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      16: areturn

  protected final com.amazonaws.http.ExecutionContext createExecutionContext(com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1254               // Method isRequestMetricsEnabled:(Lcom/amazonaws/AmazonWebServiceRequest;)Z
       5: ifne          14
       8: invokestatic  #1255               // Method isProfilingEnabled:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_2
      20: new           #1256               // class com/amazonaws/services/s3/internal/S3ExecutionContext
      23: dup
      24: aload_0
      25: getfield      #44                 // Field requestHandler2s:Ljava/util/List;
      28: iload_2
      29: aload_0
      30: invokespecial #1257               // Method com/amazonaws/services/s3/internal/S3ExecutionContext."<init>":(Ljava/util/List;ZLcom/amazonaws/AmazonWebServiceClient;)V
      33: areturn

  private <X, Y extends com.amazonaws.AmazonWebServiceRequest> X invoke(com.amazonaws.Request<Y>, com.amazonaws.http.HttpResponseHandler<com.amazonaws.AmazonWebServiceResponse<X>>, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #464,  1          // InterfaceMethod com/amazonaws/Request.getOriginalRequest:()Lcom/amazonaws/AmazonWebServiceRequest;
       6: astore        5
       8: aload_0
       9: aload         5
      11: invokespecial #1258               // Method checkHttps:(Lcom/amazonaws/AmazonWebServiceRequest;)V
      14: aload_0
      15: aload         5
      17: invokevirtual #1259               // Method createExecutionContext:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/http/ExecutionContext;
      20: astore        6
      22: aload         6
      24: invokevirtual #1260               // Method com/amazonaws/http/ExecutionContext.getAwsRequestMetrics:()Lcom/amazonaws/util/AWSRequestMetrics;
      27: astore        7
      29: aload_1
      30: aload         7
      32: invokeinterface #1261,  2         // InterfaceMethod com/amazonaws/Request.setAWSRequestMetrics:(Lcom/amazonaws/util/AWSRequestMetrics;)V
      37: aload         7
      39: getstatic     #1262               // Field com/amazonaws/util/AWSRequestMetrics$Field.ClientExecuteTime:Lcom/amazonaws/util/AWSRequestMetrics$Field;
      42: invokevirtual #1263               // Method com/amazonaws/util/AWSRequestMetrics.startEvent:(Lcom/amazonaws/metrics/MetricType;)V
      45: aconst_null
      46: astore        8
      48: aload_1
      49: aload_0
      50: getfield      #1264               // Field timeOffset:I
      53: invokeinterface #1265,  2         // InterfaceMethod com/amazonaws/Request.setTimeOffset:(I)V
      58: aload_1
      59: aload_1
      60: invokeinterface #915,  1          // InterfaceMethod com/amazonaws/Request.getResourcePath:()Ljava/lang/String;
      65: iconst_1
      66: invokestatic  #916                // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      69: invokeinterface #917,  2          // InterfaceMethod com/amazonaws/Request.setResourcePath:(Ljava/lang/String;)V
      74: aload_1
      75: invokeinterface #1135,  1         // InterfaceMethod com/amazonaws/Request.getHeaders:()Ljava/util/Map;
      80: ldc_w         #654                // String Content-Type
      83: invokeinterface #535,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      88: ifne          103
      91: aload_1
      92: ldc_w         #654                // String Content-Type
      95: ldc_w         #487                // String application/octet-stream
      98: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     103: aload_0
     104: getfield      #30                 // Field awsCredentialsProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
     107: invokeinterface #937,  1          // InterfaceMethod com/amazonaws/auth/AWSCredentialsProvider.getCredentials:()Lcom/amazonaws/auth/AWSCredentials;
     112: astore        9
     114: aload         5
     116: invokevirtual #1131               // Method com/amazonaws/AmazonWebServiceRequest.getRequestCredentials:()Lcom/amazonaws/auth/AWSCredentials;
     119: ifnull        129
     122: aload         5
     124: invokevirtual #1131               // Method com/amazonaws/AmazonWebServiceRequest.getRequestCredentials:()Lcom/amazonaws/auth/AWSCredentials;
     127: astore        9
     129: aload_3
     130: ifnull        159
     133: aload_1
     134: invokeinterface #464,  1          // InterfaceMethod com/amazonaws/Request.getOriginalRequest:()Lcom/amazonaws/AmazonWebServiceRequest;
     139: instanceof    #208                // class com/amazonaws/services/s3/model/CreateBucketRequest
     142: ifne          159
     145: aload_0
     146: aload_1
     147: invokespecial #1105               // Method noExplicitRegionProvided:(Lcom/amazonaws/Request;)Z
     150: ifeq          159
     153: aload_0
     154: aload_3
     155: invokespecial #1266               // Method fetchRegionFromCache:(Ljava/lang/String;)Ljava/lang/String;
     158: pop
     159: aload_0
     160: aload_1
     161: aload_3
     162: aload         4
     164: invokevirtual #935                // Method createSigner:(Lcom/amazonaws/Request;Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/auth/Signer;
     167: astore        10
     169: aload         6
     171: aload         10
     173: invokevirtual #1267               // Method com/amazonaws/http/ExecutionContext.setSigner:(Lcom/amazonaws/auth/Signer;)V
     176: aload_0
     177: invokespecial #1103               // Method isSignerOverridden:()Z
     180: ifeq          214
     183: aload         10
     185: instanceof    #1104               // class com/amazonaws/services/s3/internal/AWSS3V4Signer
     188: ifne          214
     191: aload         6
     193: new           #1268               // class com/amazonaws/services/s3/internal/S3V4AuthErrorRetryStrategy
     196: dup
     197: aload_0
     198: aload_1
     199: invokestatic  #1269               // Method getProtocol:(Lcom/amazonaws/Request;)Ljava/lang/String;
     202: aload_3
     203: aload         4
     205: invokespecial #1270               // Method buildDefaultEndpointResolver:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/S3RequestEndpointResolver;
     208: invokespecial #1271               // Method com/amazonaws/services/s3/internal/S3V4AuthErrorRetryStrategy."<init>":(Lcom/amazonaws/services/s3/internal/S3RequestEndpointResolver;)V
     211: invokevirtual #1272               // Method com/amazonaws/http/ExecutionContext.setAuthErrorRetryStrategy:(Lcom/amazonaws/retry/internal/AuthErrorRetryStrategy;)V
     214: aload         6
     216: new           #11                 // class com/amazonaws/internal/StaticCredentialsProvider
     219: dup
     220: aload         9
     222: invokespecial #12                 // Method com/amazonaws/internal/StaticCredentialsProvider."<init>":(Lcom/amazonaws/auth/AWSCredentials;)V
     225: invokevirtual #1273               // Method com/amazonaws/http/ExecutionContext.setCredentialsProvider:(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
     228: aload_0
     229: getfield      #1073               // Field client:Lcom/amazonaws/http/AmazonHttpClient;
     232: aload_1
     233: aload_2
     234: aload_0
     235: getfield      #20                 // Field errorResponseHandler:Lcom/amazonaws/services/s3/internal/S3ErrorResponseHandler;
     238: aload         6
     240: invokevirtual #1274               // Method com/amazonaws/http/AmazonHttpClient.execute:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Lcom/amazonaws/http/HttpResponseHandler;Lcom/amazonaws/http/ExecutionContext;)Lcom/amazonaws/Response;
     243: astore        8
     245: aload         8
     247: invokevirtual #1275               // Method com/amazonaws/Response.getAwsResponse:()Ljava/lang/Object;
     250: astore        11
     252: aload_0
     253: aload         7
     255: aload_1
     256: aload         8
     258: invokevirtual #1276               // Method endClientExecution:(Lcom/amazonaws/util/AWSRequestMetrics;Lcom/amazonaws/Request;Lcom/amazonaws/Response;)V
     261: aload         11
     263: areturn
     264: astore        9
     266: aload         9
     268: ldc_w         #1278               // String If the request involves an input stream, the maximum stream buffer size can be configured via request.getRequestClientOptions().setReadLimit(int)
     271: invokevirtual #1279               // Method com/amazonaws/ResetException.setExtraInfo:(Ljava/lang/String;)V
     274: aload         9
     276: athrow
     277: astore        9
     279: aload         9
     281: invokevirtual #333                // Method com/amazonaws/services/s3/model/AmazonS3Exception.getStatusCode:()I
     284: sipush        301
     287: if_icmpne     360
     290: aload         9
     292: invokevirtual #1280               // Method com/amazonaws/services/s3/model/AmazonS3Exception.getAdditionalDetails:()Ljava/util/Map;
     295: ifnull        360
     298: aload         9
     300: invokevirtual #1280               // Method com/amazonaws/services/s3/model/AmazonS3Exception.getAdditionalDetails:()Ljava/util/Map;
     303: ldc_w         #1281               // String x-amz-bucket-region
     306: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     311: checkcast     #204                // class java/lang/String
     314: astore        10
     316: getstatic     #4                  // Field bucketRegionCache:Ljava/util/Map;
     319: aload_3
     320: aload         10
     322: invokeinterface #538,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     327: pop
     328: aload         9
     330: new           #357                // class java/lang/StringBuilder
     333: dup
     334: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     337: ldc_w         #1282               // String The bucket is in this region:
     340: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     343: aload         10
     345: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     348: ldc_w         #1283               // String .Please use this region to retry the request
     351: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     357: invokevirtual #1284               // Method com/amazonaws/services/s3/model/AmazonS3Exception.setErrorMessage:(Ljava/lang/String;)V
     360: aload         9
     362: athrow
     363: astore        12
     365: aload_0
     366: aload         7
     368: aload_1
     369: aload         8
     371: invokevirtual #1276               // Method endClientExecution:(Lcom/amazonaws/util/AWSRequestMetrics;Lcom/amazonaws/Request;Lcom/amazonaws/Response;)V
     374: aload         12
     376: athrow
    Exception table:
       from    to  target type
          48   252   264   Class com/amazonaws/ResetException
          48   252   277   Class com/amazonaws/services/s3/model/AmazonS3Exception
          48   252   363   any
         264   365   363   any

  public void enableRequesterPays(java.lang.String);
    Code:
       0: new           #1285               // class com/amazonaws/services/s3/model/RequestPaymentConfiguration
       3: dup
       4: getstatic     #1286               // Field com/amazonaws/services/s3/model/RequestPaymentConfiguration$Payer.Requester:Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration$Payer;
       7: invokespecial #1287               // Method com/amazonaws/services/s3/model/RequestPaymentConfiguration."<init>":(Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration$Payer;)V
      10: astore_2
      11: aload_0
      12: new           #1288               // class com/amazonaws/services/s3/model/SetRequestPaymentConfigurationRequest
      15: dup
      16: aload_1
      17: aload_2
      18: invokespecial #1289               // Method com/amazonaws/services/s3/model/SetRequestPaymentConfigurationRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration;)V
      21: invokespecial #1290               // Method setBucketRequestPayment:(Lcom/amazonaws/services/s3/model/SetRequestPaymentConfigurationRequest;)V
      24: return

  public void disableRequesterPays(java.lang.String);
    Code:
       0: new           #1285               // class com/amazonaws/services/s3/model/RequestPaymentConfiguration
       3: dup
       4: getstatic     #1291               // Field com/amazonaws/services/s3/model/RequestPaymentConfiguration$Payer.BucketOwner:Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration$Payer;
       7: invokespecial #1287               // Method com/amazonaws/services/s3/model/RequestPaymentConfiguration."<init>":(Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration$Payer;)V
      10: astore_2
      11: aload_0
      12: new           #1288               // class com/amazonaws/services/s3/model/SetRequestPaymentConfigurationRequest
      15: dup
      16: aload_1
      17: aload_2
      18: invokespecial #1289               // Method com/amazonaws/services/s3/model/SetRequestPaymentConfigurationRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration;)V
      21: invokespecial #1290               // Method setBucketRequestPayment:(Lcom/amazonaws/services/s3/model/SetRequestPaymentConfigurationRequest;)V
      24: return

  public boolean isRequesterPaysEnabled(java.lang.String);
    Code:
       0: aload_0
       1: new           #1292               // class com/amazonaws/services/s3/model/GetRequestPaymentConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #1293               // Method com/amazonaws/services/s3/model/GetRequestPaymentConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokespecial #1294               // Method getBucketRequestPayment:(Lcom/amazonaws/services/s3/model/GetRequestPaymentConfigurationRequest;)Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration;
      12: astore_2
      13: aload_2
      14: invokevirtual #1295               // Method com/amazonaws/services/s3/model/RequestPaymentConfiguration.getPayer:()Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration$Payer;
      17: getstatic     #1286               // Field com/amazonaws/services/s3/model/RequestPaymentConfiguration$Payer.Requester:Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration$Payer;
      20: if_acmpne     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private void setBucketRequestPayment(com.amazonaws.services.s3.model.SetRequestPaymentConfigurationRequest);
    Code:
       0: aload_1
       1: invokevirtual #1296               // Method com/amazonaws/services/s3/model/SetRequestPaymentConfigurationRequest.getBucketName:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #1297               // Method com/amazonaws/services/s3/model/SetRequestPaymentConfigurationRequest.getConfiguration:()Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration;
       9: astore_3
      10: aload_0
      11: aload_2
      12: ldc_w         #1298               // String The bucket name parameter must be specified while setting the Requester Pays.
      15: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_3
      20: ldc_w         #1299               // String The request payment configuration parameter must be specified when setting the Requester Pays.
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_2
      28: aconst_null
      29: aload_1
      30: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      33: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      36: astore        4
      38: aload         4
      40: ldc_w         #1300               // String requestPayment
      43: aconst_null
      44: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      49: aload         4
      51: ldc_w         #654                // String Content-Type
      54: ldc_w         #655                // String application/xml
      57: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      62: getstatic     #1301               // Field requestPaymentConfigurationXmlFactory:Lcom/amazonaws/services/s3/model/transform/RequestPaymentConfigurationXmlFactory;
      65: aload_3
      66: invokevirtual #1302               // Method com/amazonaws/services/s3/model/transform/RequestPaymentConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/RequestPaymentConfiguration;)[B
      69: astore        5
      71: aload         4
      73: new           #244                // class java/io/ByteArrayInputStream
      76: dup
      77: aload         5
      79: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
      82: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
      87: aload_0
      88: aload         4
      90: aload_0
      91: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      94: aload_2
      95: aconst_null
      96: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      99: pop
     100: return

  private com.amazonaws.services.s3.model.RequestPaymentConfiguration getBucketRequestPayment(com.amazonaws.services.s3.model.GetRequestPaymentConfigurationRequest);
    Code:
       0: aload_1
       1: invokevirtual #1303               // Method com/amazonaws/services/s3/model/GetRequestPaymentConfigurationRequest.getBucketName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: ldc_w         #1304               // String The bucket name parameter must be specified while getting the Request Payment Configuration.
      10: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aload_0
      14: aload_2
      15: aconst_null
      16: aload_1
      17: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      20: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      23: astore_3
      24: aload_3
      25: ldc_w         #1300               // String requestPayment
      28: aconst_null
      29: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      34: aload_3
      35: ldc_w         #654                // String Content-Type
      38: ldc_w         #655                // String application/xml
      41: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      46: aload_0
      47: aload_3
      48: new           #1305               // class com/amazonaws/services/s3/model/transform/Unmarshallers$RequestPaymentConfigurationUnmarshaller
      51: dup
      52: invokespecial #1306               // Method com/amazonaws/services/s3/model/transform/Unmarshallers$RequestPaymentConfigurationUnmarshaller."<init>":()V
      55: aload_2
      56: aconst_null
      57: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      60: checkcast     #1285               // class com/amazonaws/services/s3/model/RequestPaymentConfiguration
      63: areturn

  private void setZeroContentLength(com.amazonaws.Request<?>);
    Code:
       0: aload_1
       1: ldc_w         #477                // String Content-Length
       4: iconst_0
       5: invokestatic  #653                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       8: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      13: return

  private void checkHttps(com.amazonaws.AmazonWebServiceRequest);
    Code:
       0: aload_1
       1: instanceof    #1307               // class com/amazonaws/services/s3/model/SSECustomerKeyProvider
       4: ifeq          28
       7: aload_1
       8: checkcast     #1307               // class com/amazonaws/services/s3/model/SSECustomerKeyProvider
      11: astore_2
      12: aload_2
      13: invokeinterface #1308,  1         // InterfaceMethod com/amazonaws/services/s3/model/SSECustomerKeyProvider.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
      18: ifnull        25
      21: aload_0
      22: invokespecial #1309               // Method assertHttps:()V
      25: goto          91
      28: aload_1
      29: instanceof    #342                // class com/amazonaws/services/s3/model/CopyObjectRequest
      32: ifeq          61
      35: aload_1
      36: checkcast     #342                // class com/amazonaws/services/s3/model/CopyObjectRequest
      39: astore_2
      40: aload_2
      41: invokevirtual #1180               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
      44: ifnonnull     54
      47: aload_2
      48: invokevirtual #1182               // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
      51: ifnull        58
      54: aload_0
      55: invokespecial #1309               // Method assertHttps:()V
      58: goto          91
      61: aload_1
      62: instanceof    #1310               // class com/amazonaws/services/s3/model/CopyPartRequest
      65: ifeq          91
      68: aload_1
      69: checkcast     #1310               // class com/amazonaws/services/s3/model/CopyPartRequest
      72: astore_2
      73: aload_2
      74: invokevirtual #1191               // Method com/amazonaws/services/s3/model/CopyPartRequest.getSourceSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
      77: ifnonnull     87
      80: aload_2
      81: invokevirtual #1192               // Method com/amazonaws/services/s3/model/CopyPartRequest.getDestinationSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
      84: ifnull        91
      87: aload_0
      88: invokespecial #1309               // Method assertHttps:()V
      91: aload_1
      92: instanceof    #1311               // class com/amazonaws/services/s3/model/SSEAwsKeyManagementParamsProvider
      95: ifeq          116
      98: aload_1
      99: checkcast     #1311               // class com/amazonaws/services/s3/model/SSEAwsKeyManagementParamsProvider
     102: astore_2
     103: aload_2
     104: invokeinterface #1312,  1         // InterfaceMethod com/amazonaws/services/s3/model/SSEAwsKeyManagementParamsProvider.getSSEAwsKeyManagementParams:()Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
     109: ifnull        116
     112: aload_0
     113: invokespecial #1309               // Method assertHttps:()V
     116: return

  private void assertHttps();
    Code:
       0: aload_0
       1: getfield      #56                 // Field endpoint:Ljava/net/URI;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #1313               // Method java/net/URI.getScheme:()Ljava/lang/String;
      17: astore_2
      18: getstatic     #1314               // Field com/amazonaws/Protocol.HTTPS:Lcom/amazonaws/Protocol;
      21: invokevirtual #1315               // Method com/amazonaws/Protocol.toString:()Ljava/lang/String;
      24: aload_2
      25: invokevirtual #1316               // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      28: ifne          42
      31: new           #277                // class java/lang/IllegalArgumentException
      34: dup
      35: ldc_w         #1317               // String HTTPS must be used when sending customer encryption keys (SSE-C) to S3, in order to protect your encryption keys.
      38: invokespecial #279                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: return

  synchronized java.net.URI getEndpoint();
    Code:
       0: aload_0
       1: getfield      #56                 // Field endpoint:Ljava/net/URI;
       4: areturn

  private static java.lang.String getProtocol(com.amazonaws.Request<?>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #1101,  1         // InterfaceMethod com/amazonaws/Request.getEndpoint:()Ljava/net/URI;
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: aload_0
      16: invokeinterface #1101,  1         // InterfaceMethod com/amazonaws/Request.getEndpoint:()Ljava/net/URI;
      21: invokevirtual #1313               // Method java/net/URI.getScheme:()Ljava/lang/String;
      24: areturn

  protected final com.amazonaws.services.s3.model.InitiateMultipartUploadRequest newInitiateMultipartUploadRequest(com.amazonaws.services.s3.model.UploadObjectRequest);
    Code:
       0: new           #1318               // class com/amazonaws/services/s3/model/InitiateMultipartUploadRequest
       3: dup
       4: aload_1
       5: invokevirtual #1319               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getBucketName:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #1320               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getKey:()Ljava/lang/String;
      12: aload_1
      13: invokevirtual #1321               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      16: invokespecial #1322               // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
      19: aload_1
      20: invokevirtual #1323               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getRedirectLocation:()Ljava/lang/String;
      23: invokevirtual #1324               // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withRedirectLocation:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      26: aload_1
      27: invokevirtual #1325               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getSSEAwsKeyManagementParams:()Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
      30: invokevirtual #1326               // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withSSEAwsKeyManagementParams:(Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      33: aload_1
      34: invokevirtual #1327               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
      37: invokevirtual #1328               // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withSSECustomerKey:(Lcom/amazonaws/services/s3/model/SSECustomerKey;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      40: aload_1
      41: invokevirtual #1329               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getStorageClass:()Ljava/lang/String;
      44: invokevirtual #1330               // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withStorageClass:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      47: aload_1
      48: invokevirtual #1331               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
      51: invokevirtual #1332               // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withAccessControlList:(Lcom/amazonaws/services/s3/model/AccessControlList;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      54: aload_1
      55: invokevirtual #1333               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      58: invokevirtual #1334               // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withCannedACL:(Lcom/amazonaws/services/s3/model/CannedAccessControlList;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      61: aload_1
      62: invokevirtual #1335               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
      65: invokevirtual #1336               // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/AmazonWebServiceRequest;
      68: aload_1
      69: invokevirtual #1337               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      72: invokevirtual #1338               // Method com/amazonaws/AmazonWebServiceRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
      75: checkcast     #1318               // class com/amazonaws/services/s3/model/InitiateMultipartUploadRequest
      78: areturn

  private void putLocalObject(com.amazonaws.services.s3.model.UploadObjectRequest, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #1339               // Method com/amazonaws/services/s3/model/UploadObjectRequest.clone:()Lcom/amazonaws/services/s3/model/UploadObjectRequest;
       4: astore_3
       5: aload_3
       6: invokevirtual #1340               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getFile:()Ljava/io/File;
       9: astore        4
      11: aload_3
      12: invokevirtual #1341               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getInputStream:()Ljava/io/InputStream;
      15: astore        5
      17: aload         5
      19: ifnonnull     56
      22: aload         4
      24: ifnonnull     38
      27: new           #277                // class java/lang/IllegalArgumentException
      30: dup
      31: ldc_w         #1342               // String Either a file lor input stream must be specified
      34: invokespecial #279                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_3
      39: new           #1343               // class java/io/FileInputStream
      42: dup
      43: aload         4
      45: invokespecial #1344               // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      48: invokevirtual #1345               // Method com/amazonaws/services/s3/model/UploadObjectRequest.setInputStream:(Ljava/io/InputStream;)V
      51: aload_3
      52: aconst_null
      53: invokevirtual #1346               // Method com/amazonaws/services/s3/model/UploadObjectRequest.setFile:(Ljava/io/File;)V
      56: aload_3
      57: invokevirtual #1341               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getInputStream:()Ljava/io/InputStream;
      60: aload_2
      61: invokestatic  #1347               // Method com/amazonaws/util/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J
      64: pop2
      65: aload_3
      66: aload         4
      68: aload         5
      70: aload_3
      71: invokevirtual #1341               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getInputStream:()Ljava/io/InputStream;
      74: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      77: invokestatic  #492                // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
      80: aload_2
      81: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      84: invokestatic  #419                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      87: goto          117
      90: astore        6
      92: aload_3
      93: aload         4
      95: aload         5
      97: aload_3
      98: invokevirtual #1341               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getInputStream:()Ljava/io/InputStream;
     101: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     104: invokestatic  #492                // Method com/amazonaws/services/s3/model/S3DataSource$Utils.cleanupDataSource:(Lcom/amazonaws/services/s3/model/S3DataSource;Ljava/io/File;Ljava/io/InputStream;Ljava/io/InputStream;Lorg/apache/commons/logging/Log;)V
     107: aload_2
     108: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     111: invokestatic  #419                // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     114: aload         6
     116: athrow
     117: return
    Exception table:
       from    to  target type
          56    65    90   any
          90    92    90   any

  com.amazonaws.services.s3.model.CompleteMultipartUploadResult uploadObject(com.amazonaws.services.s3.model.UploadObjectRequest) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_1
       1: invokevirtual #1348               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getExecutorService:()Ljava/util/concurrent/ExecutorService;
       4: astore_2
       5: aload_2
       6: ifnonnull     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: istore_3
      15: aload_2
      16: ifnonnull     30
      19: aload_0
      20: getfield      #966                // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      23: invokevirtual #1349               // Method com/amazonaws/ClientConfiguration.getMaxConnections:()I
      26: invokestatic  #1350               // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      29: astore_2
      30: aload_1
      31: invokevirtual #1351               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getUploadObjectObserver:()Lcom/amazonaws/services/s3/UploadObjectObserver;
      34: astore        4
      36: aload         4
      38: ifnonnull     50
      41: new           #1352               // class com/amazonaws/services/s3/UploadObjectObserver
      44: dup
      45: invokespecial #1353               // Method com/amazonaws/services/s3/UploadObjectObserver."<init>":()V
      48: astore        4
      50: aload         4
      52: aload_1
      53: aload_0
      54: aload_0
      55: aload_2
      56: invokevirtual #1354               // Method com/amazonaws/services/s3/UploadObjectObserver.init:(Lcom/amazonaws/services/s3/model/UploadObjectRequest;Lcom/amazonaws/services/s3/internal/S3DirectSpi;Lcom/amazonaws/services/s3/AmazonS3;Ljava/util/concurrent/ExecutorService;)Lcom/amazonaws/services/s3/UploadObjectObserver;
      59: pop
      60: aload         4
      62: aload_1
      63: invokevirtual #1355               // Method com/amazonaws/services/s3/UploadObjectObserver.onUploadInitiation:(Lcom/amazonaws/services/s3/model/UploadObjectRequest;)Ljava/lang/String;
      66: pop
      67: new           #1356               // class java/util/ArrayList
      70: dup
      71: invokespecial #1357               // Method java/util/ArrayList."<init>":()V
      74: astore        5
      76: aload_1
      77: invokevirtual #1358               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getMultiFileOutputStream:()Lcom/amazonaws/services/s3/internal/MultiFileOutputStream;
      80: astore        6
      82: aload         6
      84: ifnonnull     96
      87: new           #1359               // class com/amazonaws/services/s3/internal/MultiFileOutputStream
      90: dup
      91: invokespecial #1360               // Method com/amazonaws/services/s3/internal/MultiFileOutputStream."<init>":()V
      94: astore        6
      96: aload         6
      98: aload         4
     100: aload_1
     101: invokevirtual #1361               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getPartSize:()J
     104: aload_1
     105: invokevirtual #1362               // Method com/amazonaws/services/s3/model/UploadObjectRequest.getDiskLimit:()J
     108: invokevirtual #1363               // Method com/amazonaws/services/s3/internal/MultiFileOutputStream.init:(Lcom/amazonaws/services/s3/UploadObjectObserver;JJ)Lcom/amazonaws/services/s3/internal/MultiFileOutputStream;
     111: pop
     112: aload_0
     113: aload_1
     114: aload         6
     116: invokespecial #1364               // Method putLocalObject:(Lcom/amazonaws/services/s3/model/UploadObjectRequest;Ljava/io/OutputStream;)V
     119: aload         4
     121: invokevirtual #1365               // Method com/amazonaws/services/s3/UploadObjectObserver.getFutures:()Ljava/util/List;
     124: invokeinterface #530,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     129: astore        7
     131: aload         7
     133: invokeinterface #531,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     138: ifeq          193
     141: aload         7
     143: invokeinterface #532,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     148: checkcast     #1366               // class java/util/concurrent/Future
     151: astore        8
     153: aload         8
     155: invokeinterface #1367,  1         // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
     160: checkcast     #1064               // class com/amazonaws/services/s3/model/UploadPartResult
     163: astore        9
     165: aload         5
     167: new           #1368               // class com/amazonaws/services/s3/model/PartETag
     170: dup
     171: aload         9
     173: invokevirtual #1369               // Method com/amazonaws/services/s3/model/UploadPartResult.getPartNumber:()I
     176: aload         9
     178: invokevirtual #1370               // Method com/amazonaws/services/s3/model/UploadPartResult.getETag:()Ljava/lang/String;
     181: invokespecial #1371               // Method com/amazonaws/services/s3/model/PartETag."<init>":(ILjava/lang/String;)V
     184: invokeinterface #1372,  2         // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     189: pop
     190: goto          131
     193: iload_3
     194: ifeq          204
     197: aload_2
     198: invokeinterface #1373,  1         // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
     203: pop
     204: aload         6
     206: invokevirtual #1374               // Method com/amazonaws/services/s3/internal/MultiFileOutputStream.cleanup:()V
     209: goto          233
     212: astore        10
     214: iload_3
     215: ifeq          225
     218: aload_2
     219: invokeinterface #1373,  1         // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
     224: pop
     225: aload         6
     227: invokevirtual #1374               // Method com/amazonaws/services/s3/internal/MultiFileOutputStream.cleanup:()V
     230: aload         10
     232: athrow
     233: aload         4
     235: aload         5
     237: invokevirtual #1375               // Method com/amazonaws/services/s3/UploadObjectObserver.onCompletion:(Ljava/util/List;)Lcom/amazonaws/services/s3/model/CompleteMultipartUploadResult;
     240: areturn
    Exception table:
       from    to  target type
          96   193   212   any
         212   214   212   any

  public void setBucketReplicationConfiguration(java.lang.String, com.amazonaws.services.s3.model.BucketReplicationConfiguration) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: new           #1376               // class com/amazonaws/services/s3/model/SetBucketReplicationConfigurationRequest
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #1377               // Method com/amazonaws/services/s3/model/SetBucketReplicationConfigurationRequest."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/model/BucketReplicationConfiguration;)V
      10: invokevirtual #1378               // Method setBucketReplicationConfiguration:(Lcom/amazonaws/services/s3/model/SetBucketReplicationConfigurationRequest;)V
      13: return

  public void setBucketReplicationConfiguration(com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #1379               // String The set bucket replication configuration request object must be specified.
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #1380               // Method com/amazonaws/services/s3/model/SetBucketReplicationConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: invokevirtual #1381               // Method com/amazonaws/services/s3/model/SetBucketReplicationConfigurationRequest.getReplicationConfiguration:()Lcom/amazonaws/services/s3/model/BucketReplicationConfiguration;
      17: astore_3
      18: aload_0
      19: aload_2
      20: ldc_w         #1382               // String The bucket name parameter must be specified when setting replication configuration.
      23: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: ldc_w         #1383               // String The replication configuration parameter must be specified when setting replication configuration.
      31: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: aload_2
      36: aconst_null
      37: aload_1
      38: getstatic     #219                // Field com/amazonaws/http/HttpMethodName.PUT:Lcom/amazonaws/http/HttpMethodName;
      41: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      44: astore        4
      46: aload         4
      48: ldc_w         #1384               // String replication
      51: aconst_null
      52: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      57: getstatic     #699                // Field bucketConfigurationXmlFactory:Lcom/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory;
      60: aload_3
      61: invokevirtual #1385               // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory.convertToXmlByteArray:(Lcom/amazonaws/services/s3/model/BucketReplicationConfiguration;)[B
      64: astore        5
      66: aload         4
      68: ldc_w         #477                // String Content-Length
      71: aload         5
      73: arraylength
      74: invokestatic  #653                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      77: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      82: aload         4
      84: ldc_w         #654                // String Content-Type
      87: ldc_w         #655                // String application/xml
      90: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      95: aload         4
      97: new           #244                // class java/io/ByteArrayInputStream
     100: dup
     101: aload         5
     103: invokespecial #246                // Method java/io/ByteArrayInputStream."<init>":([B)V
     106: invokeinterface #247,  2          // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     111: aload         4
     113: ldc_w         #658                // String Content-MD5
     116: aload         5
     118: invokestatic  #656                // Method com/amazonaws/util/Md5Utils.computeMD5Hash:([B)[B
     121: invokestatic  #657                // Method com/amazonaws/util/BinaryUtils.toBase64:([B)Ljava/lang/String;
     124: invokeinterface #226,  3          // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     129: goto          168
     132: astore        6
     134: new           #421                // class com/amazonaws/AmazonClientException
     137: dup
     138: new           #357                // class java/lang/StringBuilder
     141: dup
     142: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     145: ldc_w         #1386               // String Not able to compute MD5 of the replication rule configuration. Exception Message :
     148: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload         6
     153: invokevirtual #459                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     156: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: aload         6
     164: invokespecial #460                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     167: athrow
     168: aload_0
     169: aload         4
     171: aload_0
     172: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
     175: aload_2
     176: aconst_null
     177: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     180: pop
     181: return
    Exception table:
       from    to  target type
         111   129   132   Class java/lang/Exception

  public com.amazonaws.services.s3.model.BucketReplicationConfiguration getBucketReplicationConfiguration(java.lang.String) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: new           #1387               // class com/amazonaws/services/s3/model/GetBucketReplicationConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #1388               // Method com/amazonaws/services/s3/model/GetBucketReplicationConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #1389               // Method getBucketReplicationConfiguration:(Lcom/amazonaws/services/s3/model/GetBucketReplicationConfigurationRequest;)Lcom/amazonaws/services/s3/model/BucketReplicationConfiguration;
      12: areturn

  public com.amazonaws.services.s3.model.BucketReplicationConfiguration getBucketReplicationConfiguration(com.amazonaws.services.s3.model.GetBucketReplicationConfigurationRequest) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #1390               // String The bucket request parameter must be specified when retrieving replication configuration
       5: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #1391               // Method com/amazonaws/services/s3/model/GetBucketReplicationConfigurationRequest.getBucketName:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc_w         #1392               // String The bucket request must specify a bucket name when retrieving replication configuration
      18: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aconst_null
      24: aload_1
      25: getstatic     #104                // Field com/amazonaws/http/HttpMethodName.GET:Lcom/amazonaws/http/HttpMethodName;
      28: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      31: astore_3
      32: aload_3
      33: ldc_w         #1384               // String replication
      36: aconst_null
      37: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      42: aload_0
      43: aload_3
      44: new           #1393               // class com/amazonaws/services/s3/model/transform/Unmarshallers$BucketReplicationConfigurationUnmarshaller
      47: dup
      48: invokespecial #1394               // Method com/amazonaws/services/s3/model/transform/Unmarshallers$BucketReplicationConfigurationUnmarshaller."<init>":()V
      51: aload_2
      52: aconst_null
      53: invokespecial #125                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/transform/Unmarshaller;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #1395               // class com/amazonaws/services/s3/model/BucketReplicationConfiguration
      59: areturn

  public void deleteBucketReplicationConfiguration(java.lang.String) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_0
       1: new           #1396               // class com/amazonaws/services/s3/model/DeleteBucketReplicationConfigurationRequest
       4: dup
       5: aload_1
       6: invokespecial #1397               // Method com/amazonaws/services/s3/model/DeleteBucketReplicationConfigurationRequest."<init>":(Ljava/lang/String;)V
       9: invokevirtual #1398               // Method deleteBucketReplicationConfiguration:(Lcom/amazonaws/services/s3/model/DeleteBucketReplicationConfigurationRequest;)V
      12: return

  public void deleteBucketReplicationConfiguration(com.amazonaws.services.s3.model.DeleteBucketReplicationConfigurationRequest) throws com.amazonaws.AmazonServiceException, com.amazonaws.AmazonClientException;
    Code:
       0: aload_1
       1: invokevirtual #1399               // Method com/amazonaws/services/s3/model/DeleteBucketReplicationConfigurationRequest.getBucketName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: ldc_w         #1400               // String The bucket name parameter must be specified when deleting replication configuration
      10: invokespecial #70                 // Method rejectNull:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aload_0
      14: aload_2
      15: aconst_null
      16: aload_1
      17: getstatic     #430                // Field com/amazonaws/http/HttpMethodName.DELETE:Lcom/amazonaws/http/HttpMethodName;
      20: invokevirtual #105                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;)Lcom/amazonaws/Request;
      23: astore_3
      24: aload_3
      25: ldc_w         #1384               // String replication
      28: aconst_null
      29: invokeinterface #107,  3          // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      34: aload_0
      35: aload_3
      36: aload_0
      37: getfield      #23                 // Field voidResponseHandler:Lcom/amazonaws/services/s3/internal/S3XmlResponseHandler;
      40: aload_2
      41: aconst_null
      42: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      45: pop
      46: return

  java.net.URI resolveServiceEndpoint(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1124               // Method getSignerRegion:()Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #1103               // Method isSignerOverridden:()Z
      11: ifeq          19
      14: aload_0
      15: getfield      #56                 // Field endpoint:Ljava/net/URI;
      18: areturn
      19: aload_0
      20: aload_1
      21: invokespecial #1266               // Method fetchRegionFromCache:(Ljava/lang/String;)Ljava/lang/String;
      24: astore_2
      25: aload_2
      26: invokestatic  #1106               // Method com/amazonaws/regions/RegionUtils.getRegion:(Ljava/lang/String;)Lcom/amazonaws/regions/Region;
      29: astore_3
      30: aload_3
      31: ifnonnull     68
      34: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      37: new           #357                // class java/lang/StringBuilder
      40: dup
      41: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      44: ldc_w         #1401               // String Region information for
      47: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_2
      51: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc_w         #1402               // String  is not available. Please upgrade to latest version of AWS Java SDK
      57: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokeinterface #481,  2          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      68: aload_3
      69: ifnull        88
      72: aload_3
      73: ldc           #59                 // String s3
      75: invokevirtual #1107               // Method com/amazonaws/regions/Region.getServiceEndpoint:(Ljava/lang/String;)Ljava/lang/String;
      78: aload_0
      79: getfield      #966                // Field clientConfiguration:Lcom/amazonaws/ClientConfiguration;
      82: invokestatic  #1108               // Method com/amazonaws/util/RuntimeHttpUtils.toUri:(Ljava/lang/String;Lcom/amazonaws/ClientConfiguration;)Ljava/net/URI;
      85: goto          92
      88: aload_0
      89: getfield      #56                 // Field endpoint:Ljava/net/URI;
      92: areturn

  private java.lang.String fetchRegionFromCache(java.lang.String);
    Code:
       0: getstatic     #4                  // Field bucketRegionCache:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #204                // class java/lang/String
      12: astore_2
      13: aload_2
      14: ifnonnull     83
      17: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      20: invokeinterface #1403,  1         // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      25: ifeq          62
      28: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      31: new           #357                // class java/lang/StringBuilder
      34: dup
      35: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
      38: ldc_w         #1404               // String Bucket region cache doesn\'t have an entry for
      41: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc_w         #1405               // String . Trying to get bucket region from Amazon S3.
      51: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokeinterface #1406,  2         // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      62: aload_0
      63: aload_1
      64: invokespecial #1407               // Method getBucketRegionViaHeadRequest:(Ljava/lang/String;)Ljava/lang/String;
      67: astore_2
      68: aload_2
      69: ifnull        83
      72: getstatic     #4                  // Field bucketRegionCache:Ljava/util/Map;
      75: aload_1
      76: aload_2
      77: invokeinterface #538,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      86: invokeinterface #1403,  1         // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      91: ifeq          132
      94: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      97: new           #357                // class java/lang/StringBuilder
     100: dup
     101: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     104: ldc_w         #1408               // String Region for
     107: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_1
     111: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: ldc_w         #1409               // String  is
     117: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_2
     121: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokeinterface #1406,  2         // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     132: aload_2
     133: areturn

  private java.lang.String getBucketRegionViaHeadRequest(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: ldc_w         #1410               // String https://s3-us-west-1.amazonaws.com
       5: astore_3
       6: aload_0
       7: aload_1
       8: aconst_null
       9: new           #326                // class com/amazonaws/services/s3/model/HeadBucketRequest
      12: dup
      13: aload_1
      14: invokespecial #327                // Method com/amazonaws/services/s3/model/HeadBucketRequest."<init>":(Ljava/lang/String;)V
      17: getstatic     #311                // Field com/amazonaws/http/HttpMethodName.HEAD:Lcom/amazonaws/http/HttpMethodName;
      20: new           #1411               // class java/net/URI
      23: dup
      24: aload_3
      25: invokespecial #1412               // Method java/net/URI."<init>":(Ljava/lang/String;)V
      28: invokevirtual #312                // Method createRequest:(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/AmazonWebServiceRequest;Lcom/amazonaws/http/HttpMethodName;Ljava/net/URI;)Lcom/amazonaws/Request;
      31: astore        4
      33: aload_0
      34: aload         4
      36: new           #336                // class com/amazonaws/services/s3/model/transform/HeadBucketResultHandler
      39: dup
      40: invokespecial #337                // Method com/amazonaws/services/s3/model/transform/HeadBucketResultHandler."<init>":()V
      43: aload_1
      44: aconst_null
      45: invokespecial #248                // Method invoke:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponseHandler;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      48: checkcast     #338                // class com/amazonaws/services/s3/model/HeadBucketResult
      51: astore        5
      53: aload         5
      55: invokevirtual #1413               // Method com/amazonaws/services/s3/model/HeadBucketResult.getBucketRegion:()Ljava/lang/String;
      58: astore_2
      59: goto          101
      62: astore_3
      63: aload_3
      64: invokevirtual #1280               // Method com/amazonaws/services/s3/model/AmazonS3Exception.getAdditionalDetails:()Ljava/util/Map;
      67: ifnull        86
      70: aload_3
      71: invokevirtual #1280               // Method com/amazonaws/services/s3/model/AmazonS3Exception.getAdditionalDetails:()Ljava/util/Map;
      74: ldc_w         #1281               // String x-amz-bucket-region
      77: invokeinterface #539,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #204                // class java/lang/String
      85: astore_2
      86: goto          101
      89: astore_3
      90: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      93: ldc_w         #1415               // String Error while creating URI
      96: invokeinterface #481,  2          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     101: aload_2
     102: ifnonnull     150
     105: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     108: invokeinterface #1403,  1         // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     113: ifeq          150
     116: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     119: new           #357                // class java/lang/StringBuilder
     122: dup
     123: invokespecial #358                // Method java/lang/StringBuilder."<init>":()V
     126: ldc_w         #1416               // String Not able to derive region of the
     129: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_1
     133: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: ldc_w         #1417               // String  from the HEAD Bucket requests.
     139: invokevirtual #360                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #363                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokeinterface #1406,  2         // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     150: aload_2
     151: areturn
    Exception table:
       from    to  target type
           2    59    62   Class com/amazonaws/services/s3/model/AmazonS3Exception
           2    59    89   Class java/net/URISyntaxException

  static org.apache.commons.logging.Log access$000();
    Code:
       0: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
       3: areturn

  static com.amazonaws.services.s3.internal.SkipMd5CheckStrategy access$200(com.amazonaws.services.s3.AmazonS3Client);
    Code:
       0: aload_0
       1: getfield      #2                  // Field skipMd5CheckStrategy:Lcom/amazonaws/services/s3/internal/SkipMd5CheckStrategy;
       4: areturn

  static {};
    Code:
       0: new           #1418               // class com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory
       3: dup
       4: invokespecial #1419               // Method com/amazonaws/services/s3/AmazonS3ClientConfigurationFactory."<init>":()V
       7: putstatic     #8                  // Field configFactory:Lcom/amazonaws/services/s3/AmazonS3ClientConfigurationFactory;
      10: ldc           #58                 // class com/amazonaws/services/s3/AmazonS3Client
      12: invokestatic  #1420               // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      15: putstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      18: invokestatic  #1421               // Method com/amazonaws/services/s3/metrics/S3ServiceMetric.values:()[Lcom/amazonaws/services/s3/metrics/S3ServiceMetric;
      21: invokestatic  #1422               // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      24: invokestatic  #1423               // Method com/amazonaws/metrics/AwsSdkMetrics.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: ldc_w         #1424               // String S3SignerType
      31: ldc_w         #1116               // class com/amazonaws/services/s3/internal/S3Signer
      34: invokestatic  #1425               // Method com/amazonaws/auth/SignerFactory.registerSigner:(Ljava/lang/String;Ljava/lang/Class;)V
      37: ldc_w         #1426               // String AWSS3V4SignerType
      40: ldc_w         #1104               // class com/amazonaws/services/s3/internal/AWSS3V4Signer
      43: invokestatic  #1425               // Method com/amazonaws/auth/SignerFactory.registerSigner:(Ljava/lang/String;Ljava/lang/Class;)V
      46: new           #738                // class com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory
      49: dup
      50: invokespecial #739                // Method com/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory."<init>":()V
      53: putstatic     #699                // Field bucketConfigurationXmlFactory:Lcom/amazonaws/services/s3/model/transform/BucketConfigurationXmlFactory;
      56: new           #1427               // class com/amazonaws/services/s3/model/transform/RequestPaymentConfigurationXmlFactory
      59: dup
      60: invokespecial #1428               // Method com/amazonaws/services/s3/model/transform/RequestPaymentConfigurationXmlFactory."<init>":()V
      63: putstatic     #1301               // Field requestPaymentConfigurationXmlFactory:Lcom/amazonaws/services/s3/model/transform/RequestPaymentConfigurationXmlFactory;
      66: new           #1429               // class com/amazonaws/services/s3/AmazonS3Client$1
      69: dup
      70: sipush        300
      73: ldc_w         #1430               // float 1.1f
      76: iconst_1
      77: invokespecial #1431               // Method com/amazonaws/services/s3/AmazonS3Client$1."<init>":(IFZ)V
      80: invokestatic  #1432               // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      83: putstatic     #4                  // Field bucketRegionCache:Ljava/util/Map;
      86: return
}
