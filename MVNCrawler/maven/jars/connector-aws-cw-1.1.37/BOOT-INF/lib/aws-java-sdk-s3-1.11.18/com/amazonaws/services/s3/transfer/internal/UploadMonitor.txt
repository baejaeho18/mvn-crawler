Compiled from "UploadMonitor.java"
public class com.amazonaws.services.s3.transfer.internal.UploadMonitor implements java.util.concurrent.Callable<com.amazonaws.services.s3.transfer.model.UploadResult>, com.amazonaws.services.s3.transfer.internal.TransferMonitor {
  private final com.amazonaws.services.s3.AmazonS3 s3;

  private final com.amazonaws.services.s3.model.PutObjectRequest origReq;

  private final com.amazonaws.event.ProgressListenerChain listener;

  private final com.amazonaws.services.s3.transfer.internal.UploadCallable multipartUploadCallable;

  private final com.amazonaws.services.s3.transfer.internal.UploadImpl transfer;

  private final java.util.concurrent.ExecutorService threadPool;

  private final java.util.List<java.util.concurrent.Future<com.amazonaws.services.s3.model.PartETag>> futures;

  private boolean isUploadDone;

  private java.util.concurrent.Future<com.amazonaws.services.s3.transfer.model.UploadResult> future;

  public synchronized java.util.concurrent.Future<com.amazonaws.services.s3.transfer.model.UploadResult> getFuture();
    Code:
       0: aload_0
       1: getfield      #1                  // Field future:Ljava/util/concurrent/Future;
       4: areturn

  private synchronized void setFuture(java.util.concurrent.Future<com.amazonaws.services.s3.transfer.model.UploadResult>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field future:Ljava/util/concurrent/Future;
       5: return

  private synchronized void cancelFuture();
    Code:
       0: aload_0
       1: getfield      #1                  // Field future:Ljava/util/concurrent/Future;
       4: iconst_1
       5: invokeinterface #2,  2            // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      10: pop
      11: return

  public synchronized boolean isDone();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isUploadDone:Z
       4: ireturn

  private synchronized void markAllDone();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field isUploadDone:Z
       5: return

  public static com.amazonaws.services.s3.transfer.internal.UploadMonitor create(com.amazonaws.services.s3.transfer.TransferManager, com.amazonaws.services.s3.transfer.internal.UploadImpl, java.util.concurrent.ExecutorService, com.amazonaws.services.s3.transfer.internal.UploadCallable, com.amazonaws.services.s3.model.PutObjectRequest, com.amazonaws.event.ProgressListenerChain);
    Code:
       0: new           #4                  // class com/amazonaws/services/s3/transfer/internal/UploadMonitor
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: invokespecial #5                  // Method "<init>":(Lcom/amazonaws/services/s3/transfer/TransferManager;Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;Ljava/util/concurrent/ExecutorService;Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/event/ProgressListenerChain;)V
      15: astore        6
      17: aload         6
      19: aload_2
      20: aload         6
      22: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      27: invokespecial #7                  // Method setFuture:(Ljava/util/concurrent/Future;)V
      30: aload         6
      32: areturn

  private com.amazonaws.services.s3.transfer.internal.UploadMonitor(com.amazonaws.services.s3.transfer.TransferManager, com.amazonaws.services.s3.transfer.internal.UploadImpl, java.util.concurrent.ExecutorService, com.amazonaws.services.s3.transfer.internal.UploadCallable, com.amazonaws.services.s3.model.PutObjectRequest, com.amazonaws.event.ProgressListenerChain);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/ArrayList
       8: dup
       9: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      12: invokestatic  #11                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      15: putfield      #12                 // Field futures:Ljava/util/List;
      18: aload_0
      19: iconst_0
      20: putfield      #3                  // Field isUploadDone:Z
      23: aload_0
      24: aload_1
      25: invokevirtual #13                 // Method com/amazonaws/services/s3/transfer/TransferManager.getAmazonS3Client:()Lcom/amazonaws/services/s3/AmazonS3;
      28: putfield      #14                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      31: aload_0
      32: aload         4
      34: putfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
      37: aload_0
      38: aload         5
      40: putfield      #16                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      43: aload_0
      44: aload         6
      46: putfield      #17                 // Field listener:Lcom/amazonaws/event/ProgressListenerChain;
      49: aload_0
      50: aload_2
      51: putfield      #18                 // Field transfer:Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;
      54: aload_0
      55: aload_3
      56: putfield      #19                 // Field threadPool:Ljava/util/concurrent/ExecutorService;
      59: return

  public com.amazonaws.services.s3.transfer.model.UploadResult call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
       4: invokevirtual #20                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable.call:()Lcom/amazonaws/services/s3/transfer/model/UploadResult;
       7: astore_1
       8: aload_1
       9: ifnonnull     83
      12: aload_0
      13: getfield      #12                 // Field futures:Ljava/util/List;
      16: aload_0
      17: getfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
      20: invokevirtual #21                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable.getFutures:()Ljava/util/List;
      23: invokeinterface #22,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      28: pop
      29: aload_0
      30: aload_0
      31: getfield      #19                 // Field threadPool:Ljava/util/concurrent/ExecutorService;
      34: new           #23                 // class com/amazonaws/services/s3/transfer/internal/CompleteMultipartUpload
      37: dup
      38: aload_0
      39: getfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
      42: invokevirtual #24                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable.getMultipartUploadId:()Ljava/lang/String;
      45: aload_0
      46: getfield      #14                 // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      49: aload_0
      50: getfield      #16                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      53: aload_0
      54: getfield      #12                 // Field futures:Ljava/util/List;
      57: aload_0
      58: getfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
      61: invokevirtual #25                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable.getETags:()Ljava/util/List;
      64: aload_0
      65: getfield      #17                 // Field listener:Lcom/amazonaws/event/ProgressListenerChain;
      68: aload_0
      69: invokespecial #26                 // Method com/amazonaws/services/s3/transfer/internal/CompleteMultipartUpload."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/AmazonS3;Lcom/amazonaws/services/s3/model/PutObjectRequest;Ljava/util/List;Ljava/util/List;Lcom/amazonaws/event/ProgressListenerChain;Lcom/amazonaws/services/s3/transfer/internal/UploadMonitor;)V
      72: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      77: invokespecial #7                  // Method setFuture:(Ljava/util/concurrent/Future;)V
      80: goto          87
      83: aload_0
      84: invokevirtual #27                 // Method uploadComplete:()V
      87: aload_1
      88: areturn
      89: astore_1
      90: aload_0
      91: getfield      #18                 // Field transfer:Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;
      94: getstatic     #29                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Canceled:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      97: invokevirtual #30                 // Method com/amazonaws/services/s3/transfer/internal/UploadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
     100: aload_0
     101: getfield      #17                 // Field listener:Lcom/amazonaws/event/ProgressListenerChain;
     104: getstatic     #31                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_CANCELED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     107: invokestatic  #32                 // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     110: pop
     111: new           #33                 // class com/amazonaws/AmazonClientException
     114: dup
     115: ldc           #34                 // String Upload canceled
     117: invokespecial #35                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: astore_1
     122: aload_0
     123: getfield      #18                 // Field transfer:Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;
     126: getstatic     #37                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Failed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
     129: invokevirtual #30                 // Method com/amazonaws/services/s3/transfer/internal/UploadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
     132: aload_1
     133: athrow
    Exception table:
       from    to  target type
           0    88    89   Class java/util/concurrent/CancellationException
           0    88   121   Class java/lang/Exception

  void uploadComplete();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method markAllDone:()V
       4: aload_0
       5: getfield      #18                 // Field transfer:Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;
       8: getstatic     #39                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Completed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      11: invokevirtual #30                 // Method com/amazonaws/services/s3/transfer/internal/UploadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      14: aload_0
      15: getfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
      18: invokevirtual #40                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable.isMultipartUpload:()Z
      21: ifeq          35
      24: aload_0
      25: getfield      #17                 // Field listener:Lcom/amazonaws/event/ProgressListenerChain;
      28: getstatic     #41                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_COMPLETED_EVENT:Lcom/amazonaws/event/ProgressEventType;
      31: invokestatic  #32                 // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
      34: pop
      35: return

  com.amazonaws.services.s3.transfer.PauseResult<com.amazonaws.services.s3.transfer.PersistableUpload> pause(boolean);
    Code:
       0: aload_0
       1: getfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
       4: invokevirtual #42                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable.getPersistableUpload:()Lcom/amazonaws/services/s3/transfer/PersistableUpload;
       7: astore_2
       8: aload_2
       9: ifnonnull     48
      12: aload_0
      13: getfield      #18                 // Field transfer:Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;
      16: invokevirtual #43                 // Method com/amazonaws/services/s3/transfer/internal/UploadImpl.getState:()Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      19: iload_1
      20: invokestatic  #44                 // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.determinePauseStatus:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;Z)Lcom/amazonaws/services/s3/transfer/PauseStatus;
      23: astore_3
      24: iload_1
      25: ifeq          39
      28: aload_0
      29: invokespecial #45                 // Method cancelFutures:()V
      32: aload_0
      33: getfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
      36: invokevirtual #46                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable.performAbortMultipartUpload:()V
      39: new           #47                 // class com/amazonaws/services/s3/transfer/PauseResult
      42: dup
      43: aload_3
      44: invokespecial #48                 // Method com/amazonaws/services/s3/transfer/PauseResult."<init>":(Lcom/amazonaws/services/s3/transfer/PauseStatus;)V
      47: areturn
      48: aload_0
      49: invokespecial #45                 // Method cancelFutures:()V
      52: new           #47                 // class com/amazonaws/services/s3/transfer/PauseResult
      55: dup
      56: getstatic     #49                 // Field com/amazonaws/services/s3/transfer/PauseStatus.SUCCESS:Lcom/amazonaws/services/s3/transfer/PauseStatus;
      59: aload_2
      60: invokespecial #50                 // Method com/amazonaws/services/s3/transfer/PauseResult."<init>":(Lcom/amazonaws/services/s3/transfer/PauseStatus;Ljava/lang/Object;)V
      63: areturn

  private void cancelFutures();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method cancelFuture:()V
       4: aload_0
       5: getfield      #12                 // Field futures:Ljava/util/List;
       8: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_1
      14: aload_1
      15: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          44
      23: aload_1
      24: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #55                 // class java/util/concurrent/Future
      32: astore_2
      33: aload_2
      34: iconst_1
      35: invokeinterface #2,  2            // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      40: pop
      41: goto          14
      44: aload_0
      45: getfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
      48: invokevirtual #21                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable.getFutures:()Ljava/util/List;
      51: invokeinterface #56,  1           // InterfaceMethod java/util/List.clear:()V
      56: aload_0
      57: getfield      #12                 // Field futures:Ljava/util/List;
      60: invokeinterface #56,  1           // InterfaceMethod java/util/List.clear:()V
      65: return

  void performAbort();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method cancelFutures:()V
       4: aload_0
       5: getfield      #15                 // Field multipartUploadCallable:Lcom/amazonaws/services/s3/transfer/internal/UploadCallable;
       8: invokevirtual #46                 // Method com/amazonaws/services/s3/transfer/internal/UploadCallable.performAbortMultipartUpload:()V
      11: aload_0
      12: getfield      #17                 // Field listener:Lcom/amazonaws/event/ProgressListenerChain;
      15: getstatic     #31                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_CANCELED_EVENT:Lcom/amazonaws/event/ProgressEventType;
      18: invokestatic  #32                 // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
      21: pop
      22: return

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method call:()Lcom/amazonaws/services/s3/transfer/model/UploadResult;
       4: areturn
}
