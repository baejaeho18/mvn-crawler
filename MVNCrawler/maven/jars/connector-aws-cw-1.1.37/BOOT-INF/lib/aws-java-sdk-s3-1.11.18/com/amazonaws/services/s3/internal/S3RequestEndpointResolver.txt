Compiled from "S3RequestEndpointResolver.java"
public class com.amazonaws.services.s3.internal.S3RequestEndpointResolver {
  private final com.amazonaws.internal.ServiceEndpointBuilder endpointBuilder;

  private final boolean isPathStyleAccess;

  private final java.lang.String bucketName;

  private final java.lang.String key;

  public com.amazonaws.services.s3.internal.S3RequestEndpointResolver(com.amazonaws.internal.ServiceEndpointBuilder, boolean, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field endpointBuilder:Lcom/amazonaws/internal/ServiceEndpointBuilder;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field isPathStyleAccess:Z
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field bucketName:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field key:Ljava/lang/String;
      25: return

  static boolean isValidIpV4Address(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: ldc           #6                  // String \\.
       9: invokevirtual #7                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      12: astore_1
      13: aload_1
      14: arraylength
      15: iconst_4
      16: if_icmpeq     21
      19: iconst_0
      20: ireturn
      21: aload_1
      22: astore_2
      23: aload_2
      24: arraylength
      25: istore_3
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     76
      35: aload_2
      36: iload         4
      38: aaload
      39: astore        5
      41: aload         5
      43: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      46: istore        6
      48: iload         6
      50: iflt          61
      53: iload         6
      55: sipush        255
      58: if_icmple     63
      61: iconst_0
      62: ireturn
      63: goto          70
      66: astore        6
      68: iconst_0
      69: ireturn
      70: iinc          4, 1
      73: goto          29
      76: iconst_1
      77: ireturn
    Exception table:
       from    to  target type
          41    62    66   Class java/lang/NumberFormatException

  private static java.net.URI convertToVirtualHostEndpoint(java.net.URI, java.lang.String);
    Code:
       0: new           #10                 // class java/net/URI
       3: dup
       4: ldc           #11                 // String %s://%s.%s
       6: iconst_3
       7: anewarray     #12                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: invokevirtual #13                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_1
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: invokevirtual #14                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      27: aastore
      28: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: invokespecial #16                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      34: areturn
      35: astore_2
      36: new           #18                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #19                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #21                 // String Invalid bucket name:
      49: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: aload_2
      60: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: athrow
    Exception table:
       from    to  target type
           0    34    35   Class java/net/URISyntaxException

  public java.lang.String getBucketName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bucketName:Ljava/lang/String;
       4: areturn

  public void resolveRequestEndpoint(com.amazonaws.Request<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #25                 // Method resolveRequestEndpoint:(Lcom/amazonaws/Request;Ljava/lang/String;)V
       6: return

  public void resolveRequestEndpoint(com.amazonaws.Request<?>, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        54
       4: aload_2
       5: invokestatic  #26                 // Method com/amazonaws/regions/RegionUtils.getRegion:(Ljava/lang/String;)Lcom/amazonaws/regions/Region;
       8: astore_3
       9: aload_3
      10: ifnonnull     45
      13: new           #27                 // class com/amazonaws/AmazonClientException
      16: dup
      17: new           #19                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #28                 // String Not able to determine region for
      26: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #29                 // String .Please upgrade to a newer version of the SDK
      35: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #30                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #2                  // Field endpointBuilder:Lcom/amazonaws/internal/ServiceEndpointBuilder;
      49: aload_3
      50: invokevirtual #31                 // Method com/amazonaws/internal/ServiceEndpointBuilder.withRegion:(Lcom/amazonaws/regions/Region;)Lcom/amazonaws/internal/ServiceEndpointBuilder;
      53: pop
      54: aload_0
      55: getfield      #2                  // Field endpointBuilder:Lcom/amazonaws/internal/ServiceEndpointBuilder;
      58: invokevirtual #32                 // Method com/amazonaws/internal/ServiceEndpointBuilder.getServiceEndpoint:()Ljava/net/URI;
      61: astore_3
      62: aload_0
      63: aload_3
      64: invokespecial #33                 // Method shouldUseVirtualAddressing:(Ljava/net/URI;)Z
      67: ifeq          97
      70: aload_1
      71: aload_3
      72: aload_0
      73: getfield      #4                  // Field bucketName:Ljava/lang/String;
      76: invokestatic  #34                 // Method convertToVirtualHostEndpoint:(Ljava/net/URI;Ljava/lang/String;)Ljava/net/URI;
      79: invokeinterface #35,  2           // InterfaceMethod com/amazonaws/Request.setEndpoint:(Ljava/net/URI;)V
      84: aload_1
      85: aload_0
      86: invokespecial #36                 // Method getHostStyleResourcePath:()Ljava/lang/String;
      89: invokeinterface #37,  2           // InterfaceMethod com/amazonaws/Request.setResourcePath:(Ljava/lang/String;)V
      94: goto          121
      97: aload_1
      98: aload_3
      99: invokeinterface #35,  2           // InterfaceMethod com/amazonaws/Request.setEndpoint:(Ljava/net/URI;)V
     104: aload_0
     105: getfield      #4                  // Field bucketName:Ljava/lang/String;
     108: ifnull        121
     111: aload_1
     112: aload_0
     113: invokespecial #38                 // Method getPathStyleResourcePath:()Ljava/lang/String;
     116: invokeinterface #37,  2           // InterfaceMethod com/amazonaws/Request.setResourcePath:(Ljava/lang/String;)V
     121: return

  private boolean shouldUseVirtualAddressing(java.net.URI);
    Code:
       0: aload_0
       1: getfield      #3                  // Field isPathStyleAccess:Z
       4: ifne          31
       7: aload_0
       8: getfield      #4                  // Field bucketName:Ljava/lang/String;
      11: invokestatic  #39                 // Method com/amazonaws/services/s3/internal/BucketNameUtils.isDNSBucketName:(Ljava/lang/String;)Z
      14: ifeq          31
      17: aload_1
      18: invokevirtual #40                 // Method java/net/URI.getHost:()Ljava/lang/String;
      21: invokestatic  #41                 // Method isValidIpV4Address:(Ljava/lang/String;)Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  private java.lang.String getHostStyleResourcePath();
    Code:
       0: aload_0
       1: getfield      #5                  // Field key:Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: getfield      #5                  // Field key:Ljava/lang/String;
       9: ifnull        47
      12: aload_0
      13: getfield      #5                  // Field key:Ljava/lang/String;
      16: ldc           #42                 // String /
      18: invokevirtual #43                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      21: ifeq          47
      24: new           #19                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #42                 // String /
      33: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #5                  // Field key:Ljava/lang/String;
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: astore_1
      47: aload_1
      48: areturn

  private java.lang.String getPathStyleResourcePath();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #4                  // Field bucketName:Ljava/lang/String;
      11: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #42                 // String /
      16: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #5                  // Field key:Ljava/lang/String;
      23: ifnull        33
      26: aload_0
      27: getfield      #5                  // Field key:Ljava/lang/String;
      30: goto          35
      33: ldc           #44                 // String
      35: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn
}
