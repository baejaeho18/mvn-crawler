Compiled from "MultipleFileTransferMonitor.java"
public class com.amazonaws.services.s3.transfer.internal.MultipleFileTransferMonitor implements com.amazonaws.services.s3.transfer.internal.TransferMonitor {
  private final java.util.Collection<? extends com.amazonaws.services.s3.transfer.internal.AbstractTransfer> subTransfers;

  private final com.amazonaws.services.s3.transfer.internal.AbstractTransfer transfer;

  private final java.util.concurrent.Future<?> future;

  public com.amazonaws.services.s3.transfer.internal.MultipleFileTransferMonitor(com.amazonaws.services.s3.transfer.internal.AbstractTransfer, java.util.Collection<? extends com.amazonaws.services.s3.transfer.internal.AbstractTransfer>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field subTransfers:Ljava/util/Collection;
       9: aload_0
      10: aload_1
      11: putfield      #1                  // Field transfer:Lcom/amazonaws/services/s3/transfer/internal/AbstractTransfer;
      14: aload_0
      15: new           #4                  // class com/amazonaws/services/s3/transfer/internal/MultipleFileTransferMonitor$1
      18: dup
      19: aload_0
      20: invokespecial #5                  // Method com/amazonaws/services/s3/transfer/internal/MultipleFileTransferMonitor$1."<init>":(Lcom/amazonaws/services/s3/transfer/internal/MultipleFileTransferMonitor;)V
      23: putfield      #6                  // Field future:Ljava/util/concurrent/Future;
      26: return

  public java.util.concurrent.Future<?> getFuture();
    Code:
       0: aload_0
       1: getfield      #6                  // Field future:Ljava/util/concurrent/Future;
       4: areturn

  public synchronized boolean isDone();
    Code:
       0: aload_0
       1: getfield      #2                  // Field subTransfers:Ljava/util/Collection;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_1
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #10                 // class com/amazonaws/services/s3/transfer/Transfer
      28: astore_2
      29: aload_2
      30: invokeinterface #11,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/Transfer.isDone:()Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: goto          10
      43: iconst_1
      44: ireturn

  static java.util.Collection access$000(com.amazonaws.services.s3.transfer.internal.MultipleFileTransferMonitor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field subTransfers:Ljava/util/Collection;
       4: areturn

  static com.amazonaws.services.s3.transfer.internal.AbstractTransfer access$100(com.amazonaws.services.s3.transfer.internal.MultipleFileTransferMonitor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field transfer:Lcom/amazonaws/services/s3/transfer/internal/AbstractTransfer;
       4: areturn
}
