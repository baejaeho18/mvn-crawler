Compiled from "AbstractRepeatableCipherInputStream.java"
public abstract class com.amazonaws.services.s3.internal.AbstractRepeatableCipherInputStream<T> extends com.amazonaws.internal.SdkFilterInputStream {
  private final T cipherFactory;

  private final java.io.InputStream unencryptedDataStream;

  private boolean hasBeenAccessed;

  protected com.amazonaws.services.s3.internal.AbstractRepeatableCipherInputStream(java.io.InputStream, java.io.FilterInputStream, T);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method com/amazonaws/internal/SdkFilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field unencryptedDataStream:Ljava/io/InputStream;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field cipherFactory:Ljava/lang/Object;
      15: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #2                  // Field unencryptedDataStream:Ljava/io/InputStream;
       8: invokevirtual #5                  // Method java/io/InputStream.markSupported:()Z
      11: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #6                  // Field hasBeenAccessed:Z
       8: ifeq          21
      11: new           #7                  // class java/lang/UnsupportedOperationException
      14: dup
      15: ldc           #8                  // String Marking is only supported before your first call to read or skip.
      17: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field unencryptedDataStream:Ljava/io/InputStream;
      25: iload_1
      26: invokevirtual #10                 // Method java/io/InputStream.mark:(I)V
      29: return

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method abortIfNeeded:()V
       4: aload_0
       5: getfield      #2                  // Field unencryptedDataStream:Ljava/io/InputStream;
       8: invokevirtual #11                 // Method java/io/InputStream.reset:()V
      11: aload_0
      12: aload_0
      13: aload_0
      14: getfield      #2                  // Field unencryptedDataStream:Ljava/io/InputStream;
      17: aload_0
      18: getfield      #3                  // Field cipherFactory:Ljava/lang/Object;
      21: invokevirtual #12                 // Method createCipherInputStream:(Ljava/io/InputStream;Ljava/lang/Object;)Ljava/io/FilterInputStream;
      24: putfield      #13                 // Field in:Ljava/io/InputStream;
      27: aload_0
      28: iconst_0
      29: putfield      #6                  // Field hasBeenAccessed:Z
      32: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field hasBeenAccessed:Z
       5: aload_0
       6: invokespecial #14                 // Method com/amazonaws/internal/SdkFilterInputStream.read:()I
       9: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field hasBeenAccessed:Z
       5: aload_0
       6: aload_1
       7: invokespecial #15                 // Method com/amazonaws/internal/SdkFilterInputStream.read:([B)I
      10: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field hasBeenAccessed:Z
       5: aload_0
       6: aload_1
       7: iload_2
       8: iload_3
       9: invokespecial #16                 // Method com/amazonaws/internal/SdkFilterInputStream.read:([BII)I
      12: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field hasBeenAccessed:Z
       5: aload_0
       6: lload_1
       7: invokespecial #17                 // Method com/amazonaws/internal/SdkFilterInputStream.skip:(J)J
      10: lreturn

  protected abstract java.io.FilterInputStream createCipherInputStream(java.io.InputStream, T);
}
