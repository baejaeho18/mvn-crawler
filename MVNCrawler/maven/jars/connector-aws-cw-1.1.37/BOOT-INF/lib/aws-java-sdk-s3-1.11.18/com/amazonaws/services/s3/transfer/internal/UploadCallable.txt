Compiled from "UploadCallable.java"
public class com.amazonaws.services.s3.transfer.internal.UploadCallable implements java.util.concurrent.Callable<com.amazonaws.services.s3.transfer.model.UploadResult> {
  private final com.amazonaws.services.s3.AmazonS3 s3;

  private final java.util.concurrent.ExecutorService threadPool;

  private final com.amazonaws.services.s3.model.PutObjectRequest origReq;

  private java.lang.String multipartUploadId;

  private final com.amazonaws.services.s3.transfer.internal.UploadImpl upload;

  private static final org.apache.commons.logging.Log log;

  private final com.amazonaws.services.s3.transfer.TransferManagerConfiguration configuration;

  private final java.util.List<java.util.concurrent.Future<com.amazonaws.services.s3.model.PartETag>> futures;

  private final com.amazonaws.event.ProgressListenerChain listener;

  private final com.amazonaws.services.s3.transfer.TransferProgress transferProgress;

  private final java.util.List<com.amazonaws.services.s3.model.PartETag> eTagsToSkip;

  private com.amazonaws.services.s3.transfer.PersistableUpload persistableUpload;

  public com.amazonaws.services.s3.transfer.internal.UploadCallable(com.amazonaws.services.s3.transfer.TransferManager, java.util.concurrent.ExecutorService, com.amazonaws.services.s3.transfer.internal.UploadImpl, com.amazonaws.services.s3.model.PutObjectRequest, com.amazonaws.event.ProgressListenerChain, java.lang.String, com.amazonaws.services.s3.transfer.TransferProgress);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field futures:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/ArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #5                  // Field eTagsToSkip:Ljava/util/List;
      26: aload_0
      27: aload_1
      28: invokevirtual #6                  // Method com/amazonaws/services/s3/transfer/TransferManager.getAmazonS3Client:()Lcom/amazonaws/services/s3/AmazonS3;
      31: putfield      #7                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      34: aload_0
      35: aload_1
      36: invokevirtual #8                  // Method com/amazonaws/services/s3/transfer/TransferManager.getConfiguration:()Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      39: putfield      #9                  // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      42: aload_0
      43: aload_2
      44: putfield      #10                 // Field threadPool:Ljava/util/concurrent/ExecutorService;
      47: aload_0
      48: aload         4
      50: putfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      53: aload_0
      54: aload         5
      56: putfield      #12                 // Field listener:Lcom/amazonaws/event/ProgressListenerChain;
      59: aload_0
      60: aload_3
      61: putfield      #13                 // Field upload:Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;
      64: aload_0
      65: aload         6
      67: putfield      #14                 // Field multipartUploadId:Ljava/lang/String;
      70: aload_0
      71: aload         7
      73: putfield      #15                 // Field transferProgress:Lcom/amazonaws/services/s3/transfer/TransferProgress;
      76: return

  java.util.List<java.util.concurrent.Future<com.amazonaws.services.s3.model.PartETag>> getFutures();
    Code:
       0: aload_0
       1: getfield      #4                  // Field futures:Ljava/util/List;
       4: areturn

  java.util.List<com.amazonaws.services.s3.model.PartETag> getETags();
    Code:
       0: aload_0
       1: getfield      #5                  // Field eTagsToSkip:Ljava/util/List;
       4: areturn

  java.lang.String getMultipartUploadId();
    Code:
       0: aload_0
       1: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
       4: areturn

  public boolean isMultipartUpload();
    Code:
       0: aload_0
       1: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
       4: aload_0
       5: getfield      #9                  // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
       8: invokestatic  #16                 // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.shouldUseMultipartUpload:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;)Z
      11: ireturn

  public com.amazonaws.services.s3.transfer.model.UploadResult call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #13                 // Field upload:Lcom/amazonaws/services/s3/transfer/internal/UploadImpl;
       4: getstatic     #17                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.InProgress:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
       7: invokevirtual #18                 // Method com/amazonaws/services/s3/transfer/internal/UploadImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      10: aload_0
      11: invokevirtual #19                 // Method isMultipartUpload:()Z
      14: ifeq          33
      17: aload_0
      18: getfield      #12                 // Field listener:Lcom/amazonaws/event/ProgressListenerChain;
      21: getstatic     #20                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_STARTED_EVENT:Lcom/amazonaws/event/ProgressEventType;
      24: invokestatic  #21                 // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
      27: pop
      28: aload_0
      29: invokespecial #22                 // Method uploadInParts:()Lcom/amazonaws/services/s3/transfer/model/UploadResult;
      32: areturn
      33: aload_0
      34: invokespecial #23                 // Method uploadInOneChunk:()Lcom/amazonaws/services/s3/transfer/model/UploadResult;
      37: areturn

  private com.amazonaws.services.s3.transfer.model.UploadResult uploadInOneChunk();
    Code:
       0: aload_0
       1: getfield      #7                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
       4: aload_0
       5: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
       8: invokeinterface #24,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.putObject:(Lcom/amazonaws/services/s3/model/PutObjectRequest;)Lcom/amazonaws/services/s3/model/PutObjectResult;
      13: astore_1
      14: new           #25                 // class com/amazonaws/services/s3/transfer/model/UploadResult
      17: dup
      18: invokespecial #26                 // Method com/amazonaws/services/s3/transfer/model/UploadResult."<init>":()V
      21: astore_2
      22: aload_2
      23: aload_0
      24: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      27: invokevirtual #27                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getBucketName:()Ljava/lang/String;
      30: invokevirtual #28                 // Method com/amazonaws/services/s3/transfer/model/UploadResult.setBucketName:(Ljava/lang/String;)V
      33: aload_2
      34: aload_0
      35: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      38: invokevirtual #29                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
      41: invokevirtual #30                 // Method com/amazonaws/services/s3/transfer/model/UploadResult.setKey:(Ljava/lang/String;)V
      44: aload_2
      45: aload_1
      46: invokevirtual #31                 // Method com/amazonaws/services/s3/model/PutObjectResult.getETag:()Ljava/lang/String;
      49: invokevirtual #32                 // Method com/amazonaws/services/s3/transfer/model/UploadResult.setETag:(Ljava/lang/String;)V
      52: aload_2
      53: aload_1
      54: invokevirtual #33                 // Method com/amazonaws/services/s3/model/PutObjectResult.getVersionId:()Ljava/lang/String;
      57: invokevirtual #34                 // Method com/amazonaws/services/s3/transfer/model/UploadResult.setVersionId:(Ljava/lang/String;)V
      60: aload_2
      61: areturn

  private void captureUploadStateIfPossible();
    Code:
       0: aload_0
       1: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
       4: invokevirtual #35                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
       7: ifnonnull     67
      10: aload_0
      11: new           #36                 // class com/amazonaws/services/s3/transfer/PersistableUpload
      14: dup
      15: aload_0
      16: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      19: invokevirtual #27                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getBucketName:()Ljava/lang/String;
      22: aload_0
      23: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      26: invokevirtual #29                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
      29: aload_0
      30: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      33: invokevirtual #37                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getFile:()Ljava/io/File;
      36: invokevirtual #38                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      39: aload_0
      40: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
      43: aload_0
      44: getfield      #9                  // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      47: invokevirtual #39                 // Method com/amazonaws/services/s3/transfer/TransferManagerConfiguration.getMinimumUploadPartSize:()J
      50: aload_0
      51: getfield      #9                  // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      54: invokevirtual #40                 // Method com/amazonaws/services/s3/transfer/TransferManagerConfiguration.getMultipartUploadThreshold:()J
      57: invokespecial #41                 // Method com/amazonaws/services/s3/transfer/PersistableUpload."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJ)V
      60: putfield      #42                 // Field persistableUpload:Lcom/amazonaws/services/s3/transfer/PersistableUpload;
      63: aload_0
      64: invokespecial #43                 // Method notifyPersistableTransferAvailability:()V
      67: return

  public com.amazonaws.services.s3.transfer.PersistableUpload getPersistableUpload();
    Code:
       0: aload_0
       1: getfield      #42                 // Field persistableUpload:Lcom/amazonaws/services/s3/transfer/PersistableUpload;
       4: areturn

  private void notifyPersistableTransferAvailability();
    Code:
       0: aload_0
       1: getfield      #12                 // Field listener:Lcom/amazonaws/event/ProgressListenerChain;
       4: aload_0
       5: getfield      #42                 // Field persistableUpload:Lcom/amazonaws/services/s3/transfer/PersistableUpload;
       8: invokestatic  #44                 // Method com/amazonaws/services/s3/transfer/internal/S3ProgressPublisher.publishTransferPersistable:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/services/s3/transfer/PersistableTransfer;)Ljava/util/concurrent/Future;
      11: pop
      12: return

  private com.amazonaws.services.s3.transfer.model.UploadResult uploadInParts() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
       4: instanceof    #45                 // class com/amazonaws/services/s3/AmazonS3Encryption
       7: istore_1
       8: aload_0
       9: iload_1
      10: invokespecial #46                 // Method getOptimalPartSize:(Z)J
      13: lstore_2
      14: aload_0
      15: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
      18: ifnonnull     34
      21: aload_0
      22: aload_0
      23: aload_0
      24: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      27: iload_1
      28: invokespecial #47                 // Method initiateMultipartUpload:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Z)Ljava/lang/String;
      31: putfield      #14                 // Field multipartUploadId:Ljava/lang/String;
      34: new           #48                 // class com/amazonaws/services/s3/transfer/internal/UploadPartRequestFactory
      37: dup
      38: aload_0
      39: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      42: aload_0
      43: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
      46: lload_2
      47: invokespecial #49                 // Method com/amazonaws/services/s3/transfer/internal/UploadPartRequestFactory."<init>":(Lcom/amazonaws/services/s3/model/PutObjectRequest;Ljava/lang/String;J)V
      50: astore        4
      52: aload_0
      53: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      56: iload_1
      57: invokestatic  #50                 // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.isUploadParallelizable:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Z)Z
      60: ifeq          141
      63: aload_0
      64: invokespecial #51                 // Method captureUploadStateIfPossible:()V
      67: aload_0
      68: aload         4
      70: aload_0
      71: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
      74: invokespecial #52                 // Method uploadPartsInParallel:(Lcom/amazonaws/services/s3/transfer/internal/UploadPartRequestFactory;Ljava/lang/String;)V
      77: aconst_null
      78: astore        5
      80: aload_0
      81: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      84: invokevirtual #53                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
      87: ifnull        138
      90: aload_0
      91: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      94: invokevirtual #53                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
      97: invokevirtual #54                 // Method java/io/InputStream.close:()V
     100: goto          138
     103: astore        6
     105: getstatic     #56                 // Field log:Lorg/apache/commons/logging/Log;
     108: new           #57                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #59                 // String Unable to cleanly close input stream:
     117: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload         6
     122: invokevirtual #61                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     125: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: aload         6
     133: invokeinterface #63,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     138: aload         5
     140: areturn
     141: aload_0
     142: aload         4
     144: invokespecial #64                 // Method uploadPartsInSeries:(Lcom/amazonaws/services/s3/transfer/internal/UploadPartRequestFactory;)Lcom/amazonaws/services/s3/transfer/model/UploadResult;
     147: astore        5
     149: aload_0
     150: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
     153: invokevirtual #53                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
     156: ifnull        207
     159: aload_0
     160: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
     163: invokevirtual #53                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
     166: invokevirtual #54                 // Method java/io/InputStream.close:()V
     169: goto          207
     172: astore        6
     174: getstatic     #56                 // Field log:Lorg/apache/commons/logging/Log;
     177: new           #57                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #59                 // String Unable to cleanly close input stream:
     186: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: aload         6
     191: invokevirtual #61                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     194: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: aload         6
     202: invokeinterface #63,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     207: aload         5
     209: areturn
     210: astore        4
     212: aload_0
     213: getfield      #12                 // Field listener:Lcom/amazonaws/event/ProgressListenerChain;
     216: getstatic     #65                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_FAILED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     219: invokestatic  #21                 // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
     222: pop
     223: aload_0
     224: invokevirtual #66                 // Method performAbortMultipartUpload:()V
     227: aload         4
     229: athrow
     230: astore        7
     232: aload_0
     233: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
     236: invokevirtual #53                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
     239: ifnull        290
     242: aload_0
     243: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
     246: invokevirtual #53                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getInputStream:()Ljava/io/InputStream;
     249: invokevirtual #54                 // Method java/io/InputStream.close:()V
     252: goto          290
     255: astore        8
     257: getstatic     #56                 // Field log:Lorg/apache/commons/logging/Log;
     260: new           #57                 // class java/lang/StringBuilder
     263: dup
     264: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     267: ldc           #59                 // String Unable to cleanly close input stream:
     269: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: aload         8
     274: invokevirtual #61                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     277: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     280: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     283: aload         8
     285: invokeinterface #63,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     290: aload         7
     292: athrow
    Exception table:
       from    to  target type
          90   100   103   Class java/lang/Exception
         159   169   172   Class java/lang/Exception
          14    80   210   Class java/lang/Exception
         141   149   210   Class java/lang/Exception
          14    80   230   any
         141   149   230   any
         242   252   255   Class java/lang/Exception
         210   232   230   any

  void performAbortMultipartUpload();
    Code:
       0: aload_0
       1: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
       4: ifnull        41
       7: aload_0
       8: getfield      #7                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      11: new           #67                 // class com/amazonaws/services/s3/model/AbortMultipartUploadRequest
      14: dup
      15: aload_0
      16: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      19: invokevirtual #27                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getBucketName:()Ljava/lang/String;
      22: aload_0
      23: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      26: invokevirtual #29                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
      29: aload_0
      30: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
      33: invokespecial #68                 // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      36: invokeinterface #69,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.abortMultipartUpload:(Lcom/amazonaws/services/s3/model/AbortMultipartUploadRequest;)V
      41: goto          76
      44: astore_1
      45: getstatic     #56                 // Field log:Lorg/apache/commons/logging/Log;
      48: new           #57                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #70                 // String Unable to abort multipart upload, you may need to manually remove uploaded parts:
      57: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokevirtual #61                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      64: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: aload_1
      71: invokeinterface #71,  3           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      76: return
    Exception table:
       from    to  target type
           0    41    44   Class java/lang/Exception

  private long getOptimalPartSize(boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
       4: aload_0
       5: getfield      #9                  // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
       8: invokestatic  #72                 // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.calculateOptimalPartSize:(Lcom/amazonaws/services/s3/model/PutObjectRequest;Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;)J
      11: lstore_2
      12: iload_1
      13: ifeq          38
      16: lload_2
      17: ldc2_w        #73                 // long 32l
      20: lrem
      21: lconst_0
      22: lcmp
      23: ifle          38
      26: lload_2
      27: lload_2
      28: ldc2_w        #73                 // long 32l
      31: lrem
      32: lsub
      33: ldc2_w        #73                 // long 32l
      36: ladd
      37: lstore_2
      38: getstatic     #56                 // Field log:Lorg/apache/commons/logging/Log;
      41: new           #57                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #75                 // String Calculated optimal part size:
      50: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: lload_2
      54: invokevirtual #76                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      57: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #77,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      65: lload_2
      66: lreturn

  private com.amazonaws.services.s3.transfer.model.UploadResult uploadPartsInSeries(com.amazonaws.services.s3.transfer.internal.UploadPartRequestFactory);
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #78                 // Method com/amazonaws/services/s3/transfer/internal/UploadPartRequestFactory.hasMoreRequests:()Z
      12: ifeq          115
      15: aload_0
      16: getfield      #10                 // Field threadPool:Ljava/util/concurrent/ExecutorService;
      19: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
      24: ifeq          37
      27: new           #80                 // class java/util/concurrent/CancellationException
      30: dup
      31: ldc           #81                 // String TransferManager has been shutdown
      33: invokespecial #82                 // Method java/util/concurrent/CancellationException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_1
      38: invokevirtual #83                 // Method com/amazonaws/services/s3/transfer/internal/UploadPartRequestFactory.getNextUploadPartRequest:()Lcom/amazonaws/services/s3/model/UploadPartRequest;
      41: astore_3
      42: aload_3
      43: invokevirtual #84                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getInputStream:()Ljava/io/InputStream;
      46: astore        4
      48: aload         4
      50: ifnull        92
      53: aload         4
      55: invokevirtual #85                 // Method java/io/InputStream.markSupported:()Z
      58: ifeq          92
      61: aload_3
      62: invokevirtual #86                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartSize:()J
      65: ldc2_w        #88                 // long 2147483647l
      68: lcmp
      69: iflt          82
      72: aload         4
      74: ldc           #90                 // int 2147483647
      76: invokevirtual #91                 // Method java/io/InputStream.mark:(I)V
      79: goto          92
      82: aload         4
      84: aload_3
      85: invokevirtual #86                 // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartSize:()J
      88: l2i
      89: invokevirtual #91                 // Method java/io/InputStream.mark:(I)V
      92: aload_2
      93: aload_0
      94: getfield      #7                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      97: aload_3
      98: invokeinterface #92,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.uploadPart:(Lcom/amazonaws/services/s3/model/UploadPartRequest;)Lcom/amazonaws/services/s3/model/UploadPartResult;
     103: invokevirtual #93                 // Method com/amazonaws/services/s3/model/UploadPartResult.getPartETag:()Lcom/amazonaws/services/s3/model/PartETag;
     106: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     111: pop
     112: goto          8
     115: new           #95                 // class com/amazonaws/services/s3/model/CompleteMultipartUploadRequest
     118: dup
     119: aload_0
     120: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
     123: invokevirtual #27                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getBucketName:()Ljava/lang/String;
     126: aload_0
     127: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
     130: invokevirtual #29                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
     133: aload_0
     134: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
     137: aload_2
     138: invokespecial #96                 // Method com/amazonaws/services/s3/model/CompleteMultipartUploadRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
     141: aload_0
     142: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
     145: invokevirtual #97                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
     148: invokevirtual #98                 // Method com/amazonaws/services/s3/model/CompleteMultipartUploadRequest.withGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/AmazonWebServiceRequest;
     151: aload_0
     152: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
     155: invokevirtual #99                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
     158: invokevirtual #100                // Method com/amazonaws/AmazonWebServiceRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
     161: checkcast     #95                 // class com/amazonaws/services/s3/model/CompleteMultipartUploadRequest
     164: astore_3
     165: aload_0
     166: getfield      #7                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     169: aload_3
     170: invokeinterface #101,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.completeMultipartUpload:(Lcom/amazonaws/services/s3/model/CompleteMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/CompleteMultipartUploadResult;
     175: astore        4
     177: new           #25                 // class com/amazonaws/services/s3/transfer/model/UploadResult
     180: dup
     181: invokespecial #26                 // Method com/amazonaws/services/s3/transfer/model/UploadResult."<init>":()V
     184: astore        5
     186: aload         5
     188: aload         4
     190: invokevirtual #102                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadResult.getBucketName:()Ljava/lang/String;
     193: invokevirtual #28                 // Method com/amazonaws/services/s3/transfer/model/UploadResult.setBucketName:(Ljava/lang/String;)V
     196: aload         5
     198: aload         4
     200: invokevirtual #103                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadResult.getKey:()Ljava/lang/String;
     203: invokevirtual #30                 // Method com/amazonaws/services/s3/transfer/model/UploadResult.setKey:(Ljava/lang/String;)V
     206: aload         5
     208: aload         4
     210: invokevirtual #104                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadResult.getETag:()Ljava/lang/String;
     213: invokevirtual #32                 // Method com/amazonaws/services/s3/transfer/model/UploadResult.setETag:(Ljava/lang/String;)V
     216: aload         5
     218: aload         4
     220: invokevirtual #105                // Method com/amazonaws/services/s3/model/CompleteMultipartUploadResult.getVersionId:()Ljava/lang/String;
     223: invokevirtual #34                 // Method com/amazonaws/services/s3/transfer/model/UploadResult.setVersionId:(Ljava/lang/String;)V
     226: aload         5
     228: areturn

  private void uploadPartsInParallel(com.amazonaws.services.s3.transfer.internal.UploadPartRequestFactory, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #106                // Method identifyExistingPartsForResume:(Ljava/lang/String;)Ljava/util/Map;
       5: astore_3
       6: aload_1
       7: invokevirtual #78                 // Method com/amazonaws/services/s3/transfer/internal/UploadPartRequestFactory.hasMoreRequests:()Z
      10: ifeq          154
      13: aload_0
      14: getfield      #10                 // Field threadPool:Ljava/util/concurrent/ExecutorService;
      17: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
      22: ifeq          35
      25: new           #80                 // class java/util/concurrent/CancellationException
      28: dup
      29: ldc           #81                 // String TransferManager has been shutdown
      31: invokespecial #82                 // Method java/util/concurrent/CancellationException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_1
      36: invokevirtual #83                 // Method com/amazonaws/services/s3/transfer/internal/UploadPartRequestFactory.getNextUploadPartRequest:()Lcom/amazonaws/services/s3/model/UploadPartRequest;
      39: astore        4
      41: aload_3
      42: aload         4
      44: invokevirtual #107                // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartNumber:()I
      47: invokestatic  #108                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: invokeinterface #109,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      55: ifeq          119
      58: aload_3
      59: aload         4
      61: invokevirtual #107                // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartNumber:()I
      64: invokestatic  #108                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: invokeinterface #110,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #111                // class com/amazonaws/services/s3/model/PartSummary
      75: astore        5
      77: aload_0
      78: getfield      #5                  // Field eTagsToSkip:Ljava/util/List;
      81: new           #112                // class com/amazonaws/services/s3/model/PartETag
      84: dup
      85: aload         4
      87: invokevirtual #107                // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartNumber:()I
      90: aload         5
      92: invokevirtual #113                // Method com/amazonaws/services/s3/model/PartSummary.getETag:()Ljava/lang/String;
      95: invokespecial #114                // Method com/amazonaws/services/s3/model/PartETag."<init>":(ILjava/lang/String;)V
      98: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     103: pop
     104: aload_0
     105: getfield      #15                 // Field transferProgress:Lcom/amazonaws/services/s3/transfer/TransferProgress;
     108: aload         5
     110: invokevirtual #115                // Method com/amazonaws/services/s3/model/PartSummary.getSize:()J
     113: invokevirtual #116                // Method com/amazonaws/services/s3/transfer/TransferProgress.updateProgress:(J)V
     116: goto          6
     119: aload_0
     120: getfield      #4                  // Field futures:Ljava/util/List;
     123: aload_0
     124: getfield      #10                 // Field threadPool:Ljava/util/concurrent/ExecutorService;
     127: new           #117                // class com/amazonaws/services/s3/transfer/internal/UploadPartCallable
     130: dup
     131: aload_0
     132: getfield      #7                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     135: aload         4
     137: invokespecial #118                // Method com/amazonaws/services/s3/transfer/internal/UploadPartCallable."<init>":(Lcom/amazonaws/services/s3/AmazonS3;Lcom/amazonaws/services/s3/model/UploadPartRequest;)V
     140: invokeinterface #119,  2          // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
     145: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     150: pop
     151: goto          6
     154: return

  private java.util.Map<java.lang.Integer, com.amazonaws.services.s3.model.PartSummary> identifyExistingPartsForResume(java.lang.String);
    Code:
       0: new           #120                // class java/util/HashMap
       3: dup
       4: invokespecial #121                // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnonnull     14
      12: aload_2
      13: areturn
      14: iconst_0
      15: istore_3
      16: aload_0
      17: getfield      #7                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      20: new           #122                // class com/amazonaws/services/s3/model/ListPartsRequest
      23: dup
      24: aload_0
      25: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      28: invokevirtual #27                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getBucketName:()Ljava/lang/String;
      31: aload_0
      32: getfield      #11                 // Field origReq:Lcom/amazonaws/services/s3/model/PutObjectRequest;
      35: invokevirtual #29                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
      38: aload_1
      39: invokespecial #123                // Method com/amazonaws/services/s3/model/ListPartsRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      42: iload_3
      43: invokestatic  #108                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokevirtual #124                // Method com/amazonaws/services/s3/model/ListPartsRequest.withPartNumberMarker:(Ljava/lang/Integer;)Lcom/amazonaws/services/s3/model/ListPartsRequest;
      49: invokeinterface #125,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.listParts:(Lcom/amazonaws/services/s3/model/ListPartsRequest;)Lcom/amazonaws/services/s3/model/PartListing;
      54: astore        4
      56: aload         4
      58: invokevirtual #126                // Method com/amazonaws/services/s3/model/PartListing.getParts:()Ljava/util/List;
      61: invokeinterface #127,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      66: astore        5
      68: aload         5
      70: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          110
      78: aload         5
      80: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #111                // class com/amazonaws/services/s3/model/PartSummary
      88: astore        6
      90: aload_2
      91: aload         6
      93: invokevirtual #130                // Method com/amazonaws/services/s3/model/PartSummary.getPartNumber:()I
      96: invokestatic  #108                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      99: aload         6
     101: invokeinterface #131,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: goto          68
     110: aload         4
     112: invokevirtual #132                // Method com/amazonaws/services/s3/model/PartListing.isTruncated:()Z
     115: ifne          120
     118: aload_2
     119: areturn
     120: aload         4
     122: invokevirtual #133                // Method com/amazonaws/services/s3/model/PartListing.getNextPartNumberMarker:()Ljava/lang/Integer;
     125: invokevirtual #134                // Method java/lang/Integer.intValue:()I
     128: istore_3
     129: goto          16

  private java.lang.String initiateMultipartUpload(com.amazonaws.services.s3.model.PutObjectRequest, boolean);
    Code:
       0: aconst_null
       1: astore_3
       2: iload_2
       3: ifeq          60
       6: aload_1
       7: instanceof    #135                // class com/amazonaws/services/s3/model/EncryptedPutObjectRequest
      10: ifeq          60
      13: new           #136                // class com/amazonaws/services/s3/model/EncryptedInitiateMultipartUploadRequest
      16: dup
      17: aload_1
      18: invokevirtual #27                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getBucketName:()Ljava/lang/String;
      21: aload_1
      22: invokevirtual #29                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
      25: invokespecial #137                // Method com/amazonaws/services/s3/model/EncryptedInitiateMultipartUploadRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      28: aload_1
      29: invokevirtual #138                // Method com/amazonaws/services/s3/model/PutObjectRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      32: invokevirtual #139                // Method com/amazonaws/services/s3/model/EncryptedInitiateMultipartUploadRequest.withCannedACL:(Lcom/amazonaws/services/s3/model/CannedAccessControlList;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      35: aload_1
      36: invokevirtual #140                // Method com/amazonaws/services/s3/model/PutObjectRequest.getMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      39: invokevirtual #141                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withObjectMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      42: astore_3
      43: aload_3
      44: checkcast     #136                // class com/amazonaws/services/s3/model/EncryptedInitiateMultipartUploadRequest
      47: aload_1
      48: checkcast     #135                // class com/amazonaws/services/s3/model/EncryptedPutObjectRequest
      51: invokevirtual #142                // Method com/amazonaws/services/s3/model/EncryptedPutObjectRequest.getMaterialsDescription:()Ljava/util/Map;
      54: invokevirtual #143                // Method com/amazonaws/services/s3/model/EncryptedInitiateMultipartUploadRequest.setMaterialsDescription:(Ljava/util/Map;)V
      57: goto          90
      60: new           #144                // class com/amazonaws/services/s3/model/InitiateMultipartUploadRequest
      63: dup
      64: aload_1
      65: invokevirtual #27                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getBucketName:()Ljava/lang/String;
      68: aload_1
      69: invokevirtual #29                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getKey:()Ljava/lang/String;
      72: invokespecial #145                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      75: aload_1
      76: invokevirtual #138                // Method com/amazonaws/services/s3/model/PutObjectRequest.getCannedAcl:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      79: invokevirtual #146                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withCannedACL:(Lcom/amazonaws/services/s3/model/CannedAccessControlList;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      82: aload_1
      83: invokevirtual #140                // Method com/amazonaws/services/s3/model/PutObjectRequest.getMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      86: invokevirtual #141                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withObjectMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      89: astore_3
      90: aload_3
      91: invokestatic  #147                // Method com/amazonaws/services/s3/transfer/TransferManager.appendMultipartUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      94: pop
      95: aload_3
      96: aload_1
      97: invokevirtual #148                // Method com/amazonaws/services/s3/model/PutObjectRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
     100: invokevirtual #149                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withAccessControlList:(Lcom/amazonaws/services/s3/model/AccessControlList;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
     103: aload_1
     104: invokevirtual #150                // Method com/amazonaws/services/s3/model/PutObjectRequest.getStorageClass:()Ljava/lang/String;
     107: invokevirtual #151                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withStorageClass:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
     110: aload_1
     111: invokevirtual #152                // Method com/amazonaws/services/s3/model/PutObjectRequest.getRedirectLocation:()Ljava/lang/String;
     114: invokevirtual #153                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withRedirectLocation:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
     117: aload_1
     118: invokevirtual #35                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
     121: invokevirtual #154                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withSSECustomerKey:(Lcom/amazonaws/services/s3/model/SSECustomerKey;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
     124: aload_1
     125: invokevirtual #155                // Method com/amazonaws/services/s3/model/PutObjectRequest.getSSEAwsKeyManagementParams:()Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
     128: invokevirtual #156                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withSSEAwsKeyManagementParams:(Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
     131: aload_1
     132: invokevirtual #97                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
     135: invokevirtual #157                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/AmazonWebServiceRequest;
     138: aload_1
     139: invokevirtual #99                 // Method com/amazonaws/services/s3/model/PutObjectRequest.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
     142: invokevirtual #100                // Method com/amazonaws/AmazonWebServiceRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
     145: pop
     146: aload_0
     147: getfield      #7                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     150: aload_3
     151: invokeinterface #158,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.initiateMultipartUpload:(Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadResult;
     156: invokevirtual #159                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadResult.getUploadId:()Ljava/lang/String;
     159: astore        4
     161: getstatic     #56                 // Field log:Lorg/apache/commons/logging/Log;
     164: new           #57                 // class java/lang/StringBuilder
     167: dup
     168: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     171: ldc           #160                // String Initiated new multipart upload:
     173: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: aload         4
     178: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: invokeinterface #77,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     189: aload         4
     191: areturn

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #161                // Method call:()Lcom/amazonaws/services/s3/transfer/model/UploadResult;
       4: areturn

  static {};
    Code:
       0: ldc           #162                // class com/amazonaws/services/s3/transfer/internal/UploadCallable
       2: invokestatic  #163                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #56                 // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
