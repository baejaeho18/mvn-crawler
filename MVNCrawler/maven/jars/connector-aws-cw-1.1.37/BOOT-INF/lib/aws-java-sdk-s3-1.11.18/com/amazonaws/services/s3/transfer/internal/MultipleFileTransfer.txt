Compiled from "MultipleFileTransfer.java"
public abstract class com.amazonaws.services.s3.transfer.internal.MultipleFileTransfer<T extends com.amazonaws.services.s3.transfer.Transfer> extends com.amazonaws.services.s3.transfer.internal.AbstractTransfer {
  protected final java.util.Collection<? extends T> subTransfers;

  private java.util.concurrent.atomic.AtomicBoolean subTransferStarted;

  com.amazonaws.services.s3.transfer.internal.MultipleFileTransfer(java.lang.String, com.amazonaws.services.s3.transfer.TransferProgress, com.amazonaws.event.ProgressListenerChain, java.util.Collection<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method com/amazonaws/services/s3/transfer/internal/AbstractTransfer."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;)V
       7: aload_0
       8: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
      11: dup
      12: iconst_0
      13: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      16: putfield      #4                  // Field subTransferStarted:Ljava/util/concurrent/atomic/AtomicBoolean;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field subTransfers:Ljava/util/Collection;
      25: return

  public void collateFinalState();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #5                  // Field subTransfers:Ljava/util/Collection;
       6: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          68
      21: aload_2
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #9                  // class com/amazonaws/services/s3/transfer/Transfer
      30: astore_3
      31: aload_3
      32: invokeinterface #10,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/Transfer.getState:()Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      37: getstatic     #11                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Failed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      40: if_acmpne     51
      43: aload_0
      44: getstatic     #11                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Failed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      47: invokevirtual #12                 // Method setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      50: return
      51: aload_3
      52: invokeinterface #10,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/Transfer.getState:()Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      57: getstatic     #13                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Canceled:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      60: if_acmpne     65
      63: iconst_1
      64: istore_1
      65: goto          12
      68: iload_1
      69: ifeq          82
      72: aload_0
      73: getstatic     #13                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Canceled:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      76: invokevirtual #12                 // Method setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      79: goto          89
      82: aload_0
      83: getstatic     #14                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Completed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      86: invokevirtual #12                 // Method setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      89: return

  public void setState(com.amazonaws.services.s3.transfer.Transfer$TransferState);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method com/amazonaws/services/s3/transfer/internal/AbstractTransfer.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
       5: getstatic     #16                 // Field com/amazonaws/services/s3/transfer/internal/MultipleFileTransfer$1.$SwitchMap$com$amazonaws$services$s3$transfer$Transfer$TransferState:[I
       8: aload_1
       9: invokevirtual #17                 // Method com/amazonaws/services/s3/transfer/Transfer$TransferState.ordinal:()I
      12: iaload
      13: tableswitch   { // 1 to 5
                     1: 48
                     2: 58
                     3: 80
                     4: 90
                     5: 100
               default: 110
          }
      48: aload_0
      49: getstatic     #18                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_PREPARING_EVENT:Lcom/amazonaws/event/ProgressEventType;
      52: invokevirtual #19                 // Method fireProgressEvent:(Lcom/amazonaws/event/ProgressEventType;)V
      55: goto          110
      58: aload_0
      59: getfield      #4                  // Field subTransferStarted:Ljava/util/concurrent/atomic/AtomicBoolean;
      62: iconst_0
      63: iconst_1
      64: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      67: ifeq          110
      70: aload_0
      71: getstatic     #21                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_STARTED_EVENT:Lcom/amazonaws/event/ProgressEventType;
      74: invokevirtual #19                 // Method fireProgressEvent:(Lcom/amazonaws/event/ProgressEventType;)V
      77: goto          110
      80: aload_0
      81: getstatic     #22                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_COMPLETED_EVENT:Lcom/amazonaws/event/ProgressEventType;
      84: invokevirtual #19                 // Method fireProgressEvent:(Lcom/amazonaws/event/ProgressEventType;)V
      87: goto          110
      90: aload_0
      91: getstatic     #23                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_CANCELED_EVENT:Lcom/amazonaws/event/ProgressEventType;
      94: invokevirtual #19                 // Method fireProgressEvent:(Lcom/amazonaws/event/ProgressEventType;)V
      97: goto          110
     100: aload_0
     101: getstatic     #24                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_FAILED_EVENT:Lcom/amazonaws/event/ProgressEventType;
     104: invokevirtual #19                 // Method fireProgressEvent:(Lcom/amazonaws/event/ProgressEventType;)V
     107: goto          110
     110: return
}
