Compiled from "S3V4AuthErrorRetryStrategy.java"
public class com.amazonaws.services.s3.internal.S3V4AuthErrorRetryStrategy implements com.amazonaws.retry.internal.AuthErrorRetryStrategy {
  private static org.apache.commons.logging.Log log;

  private static final java.lang.String V4_REGION_WARNING;

  private final com.amazonaws.services.s3.internal.S3RequestEndpointResolver endpointResolver;

  private final com.amazonaws.internal.SdkPredicate<com.amazonaws.AmazonServiceException> sigV4RetryPredicate;

  public com.amazonaws.services.s3.internal.S3V4AuthErrorRetryStrategy(com.amazonaws.services.s3.internal.S3RequestEndpointResolver);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class com/amazonaws/services/s3/internal/IsSigV4RetryablePredicate
       5: dup
       6: invokespecial #2                  // Method com/amazonaws/services/s3/internal/IsSigV4RetryablePredicate."<init>":()V
       9: invokespecial #3                  // Method "<init>":(Lcom/amazonaws/services/s3/internal/S3RequestEndpointResolver;Lcom/amazonaws/internal/SdkPredicate;)V
      12: return

  com.amazonaws.services.s3.internal.S3V4AuthErrorRetryStrategy(com.amazonaws.services.s3.internal.S3RequestEndpointResolver, com.amazonaws.internal.SdkPredicate<com.amazonaws.AmazonServiceException>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field endpointResolver:Lcom/amazonaws/services/s3/internal/S3RequestEndpointResolver;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field sigV4RetryPredicate:Lcom/amazonaws/internal/SdkPredicate;
      14: return

  public com.amazonaws.retry.internal.AuthRetryParameters shouldRetryWithAuthParam(com.amazonaws.Request<?>, com.amazonaws.http.HttpResponse, com.amazonaws.AmazonServiceException);
    Code:
       0: aload_0
       1: getfield      #6                  // Field sigV4RetryPredicate:Lcom/amazonaws/internal/SdkPredicate;
       4: aload_3
       5: invokevirtual #7                  // Method com/amazonaws/internal/SdkPredicate.test:(Ljava/lang/Object;)Z
       8: ifne          13
      11: aconst_null
      12: areturn
      13: aload_2
      14: invokestatic  #8                  // Method hasServingRegionHeader:(Lcom/amazonaws/http/HttpResponse;)Z
      17: ifeq          27
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokespecial #9                  // Method redirectToRegionInHeader:(Lcom/amazonaws/Request;Lcom/amazonaws/http/HttpResponse;)Lcom/amazonaws/retry/internal/AuthRetryParameters;
      26: areturn
      27: aload_0
      28: invokespecial #10                 // Method canUseVirtualAddressing:()Z
      31: ifeq          39
      34: aload_0
      35: invokespecial #11                 // Method redirectToS3External:()Lcom/amazonaws/retry/internal/AuthRetryParameters;
      38: areturn
      39: new           #12                 // class com/amazonaws/AmazonClientException
      42: dup
      43: ldc           #14                 // String please use region-specific endpoint to access buckets located in regions that require V4 signing.
      45: aload_3
      46: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: athrow

  private boolean canUseVirtualAddressing();
    Code:
       0: aload_0
       1: getfield      #5                  // Field endpointResolver:Lcom/amazonaws/services/s3/internal/S3RequestEndpointResolver;
       4: invokevirtual #16                 // Method com/amazonaws/services/s3/internal/S3RequestEndpointResolver.getBucketName:()Ljava/lang/String;
       7: invokestatic  #17                 // Method com/amazonaws/services/s3/internal/BucketNameUtils.isDNSBucketName:(Ljava/lang/String;)Z
      10: ireturn

  private com.amazonaws.retry.internal.AuthRetryParameters redirectToRegionInHeader(com.amazonaws.Request<?>, com.amazonaws.http.HttpResponse);
    Code:
       0: aload_2
       1: invokestatic  #18                 // Method getServingRegionHeader:(Lcom/amazonaws/http/HttpResponse;)Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokespecial #19                 // Method buildSigV4Signer:(Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/AWSS3V4Signer;
      10: astore        4
      12: aload_0
      13: getfield      #5                  // Field endpointResolver:Lcom/amazonaws/services/s3/internal/S3RequestEndpointResolver;
      16: aload_1
      17: aload_3
      18: invokevirtual #20                 // Method com/amazonaws/services/s3/internal/S3RequestEndpointResolver.resolveRequestEndpoint:(Lcom/amazonaws/Request;Ljava/lang/String;)V
      21: aload_0
      22: aload         4
      24: aload_1
      25: invokeinterface #21,  1           // InterfaceMethod com/amazonaws/Request.getEndpoint:()Ljava/net/URI;
      30: invokespecial #22                 // Method buildRetryParams:(Lcom/amazonaws/services/s3/internal/AWSS3V4Signer;Ljava/net/URI;)Lcom/amazonaws/retry/internal/AuthRetryParameters;
      33: areturn

  private com.amazonaws.retry.internal.AuthRetryParameters redirectToS3External();
    Code:
       0: aload_0
       1: getstatic     #23                 // Field com/amazonaws/regions/Regions.US_EAST_1:Lcom/amazonaws/regions/Regions;
       4: invokevirtual #24                 // Method com/amazonaws/regions/Regions.getName:()Ljava/lang/String;
       7: invokespecial #19                 // Method buildSigV4Signer:(Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/AWSS3V4Signer;
      10: astore_1
      11: new           #25                 // class java/net/URI
      14: dup
      15: ldc           #26                 // String https://%s.s3-external-1.amazonaws.com
      17: iconst_1
      18: anewarray     #27                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_0
      24: getfield      #5                  // Field endpointResolver:Lcom/amazonaws/services/s3/internal/S3RequestEndpointResolver;
      27: invokevirtual #16                 // Method com/amazonaws/services/s3/internal/S3RequestEndpointResolver.getBucketName:()Ljava/lang/String;
      30: aastore
      31: invokestatic  #28                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokespecial #29                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      37: astore_2
      38: aload_0
      39: aload_1
      40: aload_2
      41: invokespecial #22                 // Method buildRetryParams:(Lcom/amazonaws/services/s3/internal/AWSS3V4Signer;Ljava/net/URI;)Lcom/amazonaws/retry/internal/AuthRetryParameters;
      44: areturn
      45: astore_2
      46: new           #12                 // class com/amazonaws/AmazonClientException
      49: dup
      50: ldc           #31                 // String Failed to re-send the request to \"s3-external-1.amazonaws.com\". please use region-specific endpoint to access buckets located in regions that require V4 signing.
      52: aload_2
      53: invokespecial #15                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      56: athrow
    Exception table:
       from    to  target type
          11    44    45   Class java/net/URISyntaxException

  private com.amazonaws.services.s3.internal.AWSS3V4Signer buildSigV4Signer(java.lang.String);
    Code:
       0: new           #32                 // class com/amazonaws/services/s3/internal/AWSS3V4Signer
       3: dup
       4: invokespecial #33                 // Method com/amazonaws/services/s3/internal/AWSS3V4Signer."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #34                 // Method com/amazonaws/services/s3/internal/AWSS3V4Signer.setRegionName:(Ljava/lang/String;)V
      13: aload_2
      14: ldc           #36                 // String s3
      16: invokevirtual #37                 // Method com/amazonaws/services/s3/internal/AWSS3V4Signer.setServiceName:(Ljava/lang/String;)V
      19: aload_2
      20: areturn

  private com.amazonaws.retry.internal.AuthRetryParameters buildRetryParams(com.amazonaws.services.s3.internal.AWSS3V4Signer, java.net.URI);
    Code:
       0: getstatic     #38                 // Field log:Lorg/apache/commons/logging/Log;
       3: new           #39                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #41                 // String Attempting to re-send the request to
      12: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_2
      16: invokevirtual #43                 // Method java/net/URI.getHost:()Ljava/lang/String;
      19: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #44                 // String  with AWS V4 authentication. To avoid this warning in the future,
      24: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #14                 // String please use region-specific endpoint to access buckets located in regions that require V4 signing.
      29: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokeinterface #46,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      40: new           #47                 // class com/amazonaws/retry/internal/AuthRetryParameters
      43: dup
      44: aload_1
      45: aload_2
      46: invokespecial #48                 // Method com/amazonaws/retry/internal/AuthRetryParameters."<init>":(Lcom/amazonaws/auth/Signer;Ljava/net/URI;)V
      49: areturn

  private static boolean hasServingRegionHeader(com.amazonaws.http.HttpResponse);
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method getServingRegionHeader:(Lcom/amazonaws/http/HttpResponse;)Ljava/lang/String;
       4: invokestatic  #49                 // Method com/amazonaws/util/StringUtils.isNullOrEmpty:(Ljava/lang/String;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static java.lang.String getServingRegionHeader(com.amazonaws.http.HttpResponse);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method com/amazonaws/http/HttpResponse.getHeaders:()Ljava/util/Map;
       4: ldc           #52                 // String x-amz-region
       6: invokeinterface #53,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #54                 // class java/lang/String
      14: areturn

  static {};
    Code:
       0: ldc           #13                 // class com/amazonaws/services/s3/internal/S3V4AuthErrorRetryStrategy
       2: invokestatic  #55                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #38                 // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
