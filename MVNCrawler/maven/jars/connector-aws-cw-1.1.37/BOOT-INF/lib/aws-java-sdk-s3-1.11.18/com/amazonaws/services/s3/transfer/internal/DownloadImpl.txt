Compiled from "DownloadImpl.java"
public class com.amazonaws.services.s3.transfer.internal.DownloadImpl extends com.amazonaws.services.s3.transfer.internal.AbstractTransfer implements com.amazonaws.services.s3.transfer.Download {
  private com.amazonaws.services.s3.model.S3Object s3Object;

  private com.amazonaws.services.s3.transfer.PersistableDownload persistableDownload;

  private java.lang.Integer lastFullyDownloadedPartNumber;

  private final com.amazonaws.services.s3.model.GetObjectRequest getObjectRequest;

  private final java.io.File file;

  private final com.amazonaws.services.s3.model.ObjectMetadata objectMetadata;

  private final com.amazonaws.event.ProgressListenerChain progressListenerChain;

  public com.amazonaws.services.s3.transfer.internal.DownloadImpl(java.lang.String, com.amazonaws.services.s3.transfer.TransferProgress, com.amazonaws.event.ProgressListenerChain, com.amazonaws.services.s3.model.S3Object, com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener, com.amazonaws.services.s3.model.GetObjectRequest, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aconst_null
      13: iconst_0
      14: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Lcom/amazonaws/services/s3/model/S3Object;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;Lcom/amazonaws/services/s3/model/ObjectMetadata;Z)V
      17: return

  public com.amazonaws.services.s3.transfer.internal.DownloadImpl(java.lang.String, com.amazonaws.services.s3.transfer.TransferProgress, com.amazonaws.event.ProgressListenerChain, com.amazonaws.services.s3.model.S3Object, com.amazonaws.services.s3.transfer.internal.TransferStateChangeListener, com.amazonaws.services.s3.model.GetObjectRequest, java.io.File, com.amazonaws.services.s3.model.ObjectMetadata, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         5
       6: invokespecial #2                  // Method com/amazonaws/services/s3/transfer/internal/AbstractTransfer."<init>":(Ljava/lang/String;Lcom/amazonaws/services/s3/transfer/TransferProgress;Lcom/amazonaws/event/ProgressListenerChain;Lcom/amazonaws/services/s3/transfer/internal/TransferStateChangeListener;)V
       9: aload_0
      10: aload         4
      12: putfield      #3                  // Field s3Object:Lcom/amazonaws/services/s3/model/S3Object;
      15: aload_0
      16: aload         8
      18: putfield      #4                  // Field objectMetadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
      21: aload_0
      22: aload         6
      24: putfield      #5                  // Field getObjectRequest:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      27: aload_0
      28: aload         7
      30: putfield      #6                  // Field file:Ljava/io/File;
      33: aload_0
      34: aload_3
      35: putfield      #7                  // Field progressListenerChain:Lcom/amazonaws/event/ProgressListenerChain;
      38: aload_0
      39: aload_0
      40: aload         6
      42: aload         7
      44: invokespecial #8                  // Method captureDownloadState:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;)Lcom/amazonaws/services/s3/transfer/PersistableDownload;
      47: putfield      #9                  // Field persistableDownload:Lcom/amazonaws/services/s3/transfer/PersistableDownload;
      50: aload_3
      51: aload_0
      52: getfield      #9                  // Field persistableDownload:Lcom/amazonaws/services/s3/transfer/PersistableDownload;
      55: invokestatic  #10                 // Method com/amazonaws/services/s3/transfer/internal/S3ProgressPublisher.publishTransferPersistable:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/services/s3/transfer/PersistableTransfer;)Ljava/util/concurrent/Future;
      58: pop
      59: return

  public synchronized com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata();
    Code:
       0: aload_0
       1: getfield      #3                  // Field s3Object:Lcom/amazonaws/services/s3/model/S3Object;
       4: ifnull        15
       7: aload_0
       8: getfield      #3                  // Field s3Object:Lcom/amazonaws/services/s3/model/S3Object;
      11: invokevirtual #11                 // Method com/amazonaws/services/s3/model/S3Object.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      14: areturn
      15: aload_0
      16: getfield      #4                  // Field objectMetadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
      19: areturn

  public java.lang.String getBucketName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field getObjectRequest:Lcom/amazonaws/services/s3/model/GetObjectRequest;
       4: invokevirtual #12                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #5                  // Field getObjectRequest:Lcom/amazonaws/services/s3/model/GetObjectRequest;
       4: invokevirtual #13                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
       7: areturn

  public void updatePersistableTransfer(java.lang.Integer);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: aload_1
       6: putfield      #14                 // Field lastFullyDownloadedPartNumber:Ljava/lang/Integer;
       9: aload_2
      10: monitorexit
      11: goto          19
      14: astore_3
      15: aload_2
      16: monitorexit
      17: aload_3
      18: athrow
      19: aload_0
      20: aload_0
      21: aload_0
      22: getfield      #5                  // Field getObjectRequest:Lcom/amazonaws/services/s3/model/GetObjectRequest;
      25: aload_0
      26: getfield      #6                  // Field file:Ljava/io/File;
      29: invokespecial #8                  // Method captureDownloadState:(Lcom/amazonaws/services/s3/model/GetObjectRequest;Ljava/io/File;)Lcom/amazonaws/services/s3/transfer/PersistableDownload;
      32: putfield      #9                  // Field persistableDownload:Lcom/amazonaws/services/s3/transfer/PersistableDownload;
      35: aload_0
      36: getfield      #7                  // Field progressListenerChain:Lcom/amazonaws/event/ProgressListenerChain;
      39: aload_0
      40: getfield      #9                  // Field persistableDownload:Lcom/amazonaws/services/s3/transfer/PersistableDownload;
      43: invokestatic  #10                 // Method com/amazonaws/services/s3/transfer/internal/S3ProgressPublisher.publishTransferPersistable:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/services/s3/transfer/PersistableTransfer;)Ljava/util/concurrent/Future;
      46: pop
      47: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  public synchronized java.lang.Integer getLastFullyDownloadedPartNumber();
    Code:
       0: aload_0
       1: getfield      #14                 // Field lastFullyDownloadedPartNumber:Ljava/lang/Integer;
       4: areturn

  public synchronized void abort() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
       4: invokeinterface #16,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.getFuture:()Ljava/util/concurrent/Future;
       9: iconst_1
      10: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      15: pop
      16: aload_0
      17: getfield      #3                  // Field s3Object:Lcom/amazonaws/services/s3/model/S3Object;
      20: ifnull        33
      23: aload_0
      24: getfield      #3                  // Field s3Object:Lcom/amazonaws/services/s3/model/S3Object;
      27: invokevirtual #18                 // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
      30: invokevirtual #19                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream.abort:()V
      33: aload_0
      34: getstatic     #20                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Canceled:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      37: invokevirtual #21                 // Method setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      40: return

  public synchronized void abortWithoutNotifyingStateChangeListener() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
       4: invokeinterface #16,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.getFuture:()Ljava/util/concurrent/Future;
       9: iconst_1
      10: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      15: pop
      16: aload_0
      17: getstatic     #20                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Canceled:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      20: putfield      #22                 // Field state:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
      23: return

  public synchronized void setS3Object(com.amazonaws.services.s3.model.S3Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field s3Object:Lcom/amazonaws/services/s3/model/S3Object;
       5: return

  public void setState(com.amazonaws.services.s3.transfer.Transfer$TransferState);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method com/amazonaws/services/s3/transfer/internal/AbstractTransfer.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
       5: aload_1
       6: getstatic     #24                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.Completed:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
       9: if_acmpne     19
      12: aload_0
      13: getstatic     #25                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_COMPLETED_EVENT:Lcom/amazonaws/event/ProgressEventType;
      16: invokevirtual #26                 // Method fireProgressEvent:(Lcom/amazonaws/event/ProgressEventType;)V
      19: return

  private com.amazonaws.services.s3.transfer.PersistableDownload captureDownloadState(com.amazonaws.services.s3.model.GetObjectRequest, java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
       4: ifnonnull     57
       7: new           #28                 // class com/amazonaws/services/s3/transfer/PersistableDownload
      10: dup
      11: aload_1
      12: invokevirtual #12                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getBucketName:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #13                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getKey:()Ljava/lang/String;
      19: aload_1
      20: invokevirtual #29                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getVersionId:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #30                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getRange:()[J
      27: aload_1
      28: invokevirtual #31                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getResponseHeaders:()Lcom/amazonaws/services/s3/model/ResponseHeaderOverrides;
      31: aload_1
      32: invokevirtual #32                 // Method com/amazonaws/services/s3/model/GetObjectRequest.isRequesterPays:()Z
      35: aload_2
      36: invokevirtual #33                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      39: aload_0
      40: invokevirtual #34                 // Method getLastFullyDownloadedPartNumber:()Ljava/lang/Integer;
      43: aload_0
      44: invokevirtual #35                 // Method getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      47: invokevirtual #36                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getLastModified:()Ljava/util/Date;
      50: invokevirtual #37                 // Method java/util/Date.getTime:()J
      53: invokespecial #38                 // Method com/amazonaws/services/s3/transfer/PersistableDownload."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[JLcom/amazonaws/services/s3/model/ResponseHeaderOverrides;ZLjava/lang/String;Ljava/lang/Integer;J)V
      56: areturn
      57: aconst_null
      58: areturn

  public com.amazonaws.services.s3.transfer.PersistableDownload pause() throws com.amazonaws.services.s3.transfer.exception.PauseException;
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: invokevirtual #39                 // Method getState:()Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
       6: astore_2
       7: aload_0
       8: getfield      #15                 // Field monitor:Lcom/amazonaws/services/s3/transfer/internal/TransferMonitor;
      11: invokeinterface #16,  1           // InterfaceMethod com/amazonaws/services/s3/transfer/internal/TransferMonitor.getFuture:()Ljava/util/concurrent/Future;
      16: iconst_1
      17: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      22: pop
      23: aload_0
      24: getfield      #9                  // Field persistableDownload:Lcom/amazonaws/services/s3/transfer/PersistableDownload;
      27: ifnonnull     43
      30: new           #40                 // class com/amazonaws/services/s3/transfer/exception/PauseException
      33: dup
      34: aload_2
      35: iload_1
      36: invokestatic  #41                 // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.determinePauseStatus:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;Z)Lcom/amazonaws/services/s3/transfer/PauseStatus;
      39: invokespecial #42                 // Method com/amazonaws/services/s3/transfer/exception/PauseException."<init>":(Lcom/amazonaws/services/s3/transfer/PauseStatus;)V
      42: athrow
      43: aload_0
      44: getfield      #9                  // Field persistableDownload:Lcom/amazonaws/services/s3/transfer/PersistableDownload;
      47: areturn
}
