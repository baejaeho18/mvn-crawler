Compiled from "BucketLifecycleConfiguration.java"
public class com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule implements java.io.Serializable {
  private java.lang.String id;

  private java.lang.String prefix;

  private java.lang.String status;

  private int expirationInDays;

  private boolean expiredObjectDeleteMarker;

  private int noncurrentVersionExpirationInDays;

  private java.util.Date expirationDate;

  private java.util.List<com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Transition> transitions;

  private java.util.List<com.amazonaws.services.s3.model.BucketLifecycleConfiguration$NoncurrentVersionTransition> noncurrentVersionTransitions;

  private com.amazonaws.services.s3.model.AbortIncompleteMultipartUpload abortIncompleteMultipartUpload;

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field expirationInDays:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field expiredObjectDeleteMarker:Z
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field noncurrentVersionExpirationInDays:I
      19: return

  public void setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field id:Ljava/lang/String;
       5: return

  public void setPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field prefix:Ljava/lang/String;
       5: return

  public void setExpirationInDays(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field expirationInDays:I
       5: return

  public void setNoncurrentVersionExpirationInDays(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field noncurrentVersionExpirationInDays:I
       5: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field id:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field id:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #6                  // Field prefix:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field prefix:Ljava/lang/String;
       5: aload_0
       6: areturn

  public int getExpirationInDays();
    Code:
       0: aload_0
       1: getfield      #2                  // Field expirationInDays:I
       4: ireturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withExpirationInDays(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field expirationInDays:I
       5: aload_0
       6: areturn

  public int getNoncurrentVersionExpirationInDays();
    Code:
       0: aload_0
       1: getfield      #4                  // Field noncurrentVersionExpirationInDays:I
       4: ireturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withNoncurrentVersionExpirationInDays(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #7                  // Method setNoncurrentVersionExpirationInDays:(I)V
       5: aload_0
       6: areturn

  public java.lang.String getStatus();
    Code:
       0: aload_0
       1: getfield      #8                  // Field status:Ljava/lang/String;
       4: areturn

  public void setStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field status:Ljava/lang/String;
       5: return

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setStatus:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setExpirationDate(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field expirationDate:Ljava/util/Date;
       5: return

  public java.util.Date getExpirationDate();
    Code:
       0: aload_0
       1: getfield      #10                 // Field expirationDate:Ljava/util/Date;
       4: areturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withExpirationDate(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field expirationDate:Ljava/util/Date;
       5: aload_0
       6: areturn

  public void setTransition(com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Transition);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #11                 // class com/amazonaws/services/s3/model/BucketLifecycleConfiguration$Transition
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      12: invokevirtual #13                 // Method setTransitions:(Ljava/util/List;)V
      15: return

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Transition getTransition();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getTransitions:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ifnull        38
       9: aload_1
      10: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      15: ifne          38
      18: aload_1
      19: aload_1
      20: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      25: iconst_1
      26: isub
      27: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      32: checkcast     #11                 // class com/amazonaws/services/s3/model/BucketLifecycleConfiguration$Transition
      35: goto          39
      38: aconst_null
      39: areturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withTransition(com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Transition);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #11                 // class com/amazonaws/services/s3/model/BucketLifecycleConfiguration$Transition
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      12: invokevirtual #13                 // Method setTransitions:(Ljava/util/List;)V
      15: aload_0
      16: areturn

  public void setNoncurrentVersionTransition(com.amazonaws.services.s3.model.BucketLifecycleConfiguration$NoncurrentVersionTransition);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #18                 // class com/amazonaws/services/s3/model/BucketLifecycleConfiguration$NoncurrentVersionTransition
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      12: invokevirtual #19                 // Method setNoncurrentVersionTransitions:(Ljava/util/List;)V
      15: return

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$NoncurrentVersionTransition getNoncurrentVersionTransition();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getNoncurrentVersionTransitions:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ifnull        38
       9: aload_1
      10: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      15: ifne          38
      18: aload_1
      19: aload_1
      20: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      25: iconst_1
      26: isub
      27: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      32: checkcast     #18                 // class com/amazonaws/services/s3/model/BucketLifecycleConfiguration$NoncurrentVersionTransition
      35: goto          39
      38: aconst_null
      39: areturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withNoncurrentVersionTransition(com.amazonaws.services.s3.model.BucketLifecycleConfiguration$NoncurrentVersionTransition);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #18                 // class com/amazonaws/services/s3/model/BucketLifecycleConfiguration$NoncurrentVersionTransition
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      12: invokevirtual #19                 // Method setNoncurrentVersionTransitions:(Ljava/util/List;)V
      15: aload_0
      16: areturn

  public java.util.List<com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Transition> getTransitions();
    Code:
       0: aload_0
       1: getfield      #21                 // Field transitions:Ljava/util/List;
       4: areturn

  public void setTransitions(java.util.List<com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Transition>);
    Code:
       0: aload_0
       1: new           #22                 // class java/util/ArrayList
       4: dup
       5: aload_1
       6: invokespecial #23                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       9: putfield      #21                 // Field transitions:Ljava/util/List;
      12: return

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withTransitions(java.util.List<com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Transition>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setTransitions:(Ljava/util/List;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule addTransition(com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Transition);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #24                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #25                 // String Transition cannot be null.
      10: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #21                 // Field transitions:Ljava/util/List;
      18: ifnonnull     32
      21: aload_0
      22: new           #22                 // class java/util/ArrayList
      25: dup
      26: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      29: putfield      #21                 // Field transitions:Ljava/util/List;
      32: aload_0
      33: getfield      #21                 // Field transitions:Ljava/util/List;
      36: aload_1
      37: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public java.util.List<com.amazonaws.services.s3.model.BucketLifecycleConfiguration$NoncurrentVersionTransition> getNoncurrentVersionTransitions();
    Code:
       0: aload_0
       1: getfield      #29                 // Field noncurrentVersionTransitions:Ljava/util/List;
       4: areturn

  public void setNoncurrentVersionTransitions(java.util.List<com.amazonaws.services.s3.model.BucketLifecycleConfiguration$NoncurrentVersionTransition>);
    Code:
       0: aload_0
       1: new           #22                 // class java/util/ArrayList
       4: dup
       5: aload_1
       6: invokespecial #23                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       9: putfield      #29                 // Field noncurrentVersionTransitions:Ljava/util/List;
      12: return

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withNoncurrentVersionTransitions(java.util.List<com.amazonaws.services.s3.model.BucketLifecycleConfiguration$NoncurrentVersionTransition>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method setNoncurrentVersionTransitions:(Ljava/util/List;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule addNoncurrentVersionTransition(com.amazonaws.services.s3.model.BucketLifecycleConfiguration$NoncurrentVersionTransition);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #24                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #30                 // String NoncurrentVersionTransition cannot be null.
      10: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #29                 // Field noncurrentVersionTransitions:Ljava/util/List;
      18: ifnonnull     32
      21: aload_0
      22: new           #22                 // class java/util/ArrayList
      25: dup
      26: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      29: putfield      #29                 // Field noncurrentVersionTransitions:Ljava/util/List;
      32: aload_0
      33: getfield      #29                 // Field noncurrentVersionTransitions:Ljava/util/List;
      36: aload_1
      37: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public com.amazonaws.services.s3.model.AbortIncompleteMultipartUpload getAbortIncompleteMultipartUpload();
    Code:
       0: aload_0
       1: getfield      #31                 // Field abortIncompleteMultipartUpload:Lcom/amazonaws/services/s3/model/AbortIncompleteMultipartUpload;
       4: areturn

  public void setAbortIncompleteMultipartUpload(com.amazonaws.services.s3.model.AbortIncompleteMultipartUpload);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field abortIncompleteMultipartUpload:Lcom/amazonaws/services/s3/model/AbortIncompleteMultipartUpload;
       5: return

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withAbortIncompleteMultipartUpload(com.amazonaws.services.s3.model.AbortIncompleteMultipartUpload);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method setAbortIncompleteMultipartUpload:(Lcom/amazonaws/services/s3/model/AbortIncompleteMultipartUpload;)V
       5: aload_0
       6: areturn

  public boolean isExpiredObjectDeleteMarker();
    Code:
       0: aload_0
       1: getfield      #3                  // Field expiredObjectDeleteMarker:Z
       4: ireturn

  public void setExpiredObjectDeleteMarker(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field expiredObjectDeleteMarker:Z
       5: return

  public com.amazonaws.services.s3.model.BucketLifecycleConfiguration$Rule withExpiredObjectDeleteMarker(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field expiredObjectDeleteMarker:Z
       5: aload_0
       6: areturn
}
