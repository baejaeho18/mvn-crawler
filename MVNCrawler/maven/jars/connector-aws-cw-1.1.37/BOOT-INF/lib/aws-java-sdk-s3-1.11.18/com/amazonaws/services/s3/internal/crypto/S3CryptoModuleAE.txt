Compiled from "S3CryptoModuleAE.java"
class com.amazonaws.services.s3.internal.crypto.S3CryptoModuleAE extends com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase<com.amazonaws.services.s3.internal.crypto.MultipartUploadCryptoContext> {
  com.amazonaws.services.s3.internal.crypto.S3CryptoModuleAE(com.amazonaws.services.kms.AWSKMSClient, com.amazonaws.services.s3.internal.S3Direct, com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #1                  // Method com/amazonaws/services/s3/internal/crypto/S3CryptoModuleBase."<init>":(Lcom/amazonaws/services/kms/AWSKMSClient;Lcom/amazonaws/services/s3/internal/S3Direct;Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      11: aload         5
      13: invokevirtual #2                  // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoMode:()Lcom/amazonaws/services/s3/model/CryptoMode;
      16: astore        6
      18: aload         6
      20: getstatic     #3                  // Field com/amazonaws/services/s3/model/CryptoMode.StrictAuthenticatedEncryption:Lcom/amazonaws/services/s3/model/CryptoMode;
      23: if_acmpeq     42
      26: aload         6
      28: getstatic     #4                  // Field com/amazonaws/services/s3/model/CryptoMode.AuthenticatedEncryption:Lcom/amazonaws/services/s3/model/CryptoMode;
      31: if_acmpeq     42
      34: new           #5                  // class java/lang/IllegalArgumentException
      37: dup
      38: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":()V
      41: athrow
      42: return

  com.amazonaws.services.s3.internal.crypto.S3CryptoModuleAE(com.amazonaws.services.s3.internal.S3Direct, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: new           #7                  // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       6: dup
       7: invokespecial #8                  // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
      10: aload_2
      11: aload_3
      12: invokespecial #9                  // Method "<init>":(Lcom/amazonaws/services/kms/AWSKMSClient;Lcom/amazonaws/services/s3/internal/S3Direct;Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      15: return

  com.amazonaws.services.s3.internal.crypto.S3CryptoModuleAE(com.amazonaws.services.kms.AWSKMSClient, com.amazonaws.services.s3.internal.S3Direct, com.amazonaws.services.s3.model.EncryptionMaterialsProvider, com.amazonaws.services.s3.model.CryptoConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #7                  // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       6: dup
       7: invokespecial #8                  // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
      10: aload_3
      11: aload         4
      13: invokespecial #9                  // Method "<init>":(Lcom/amazonaws/services/kms/AWSKMSClient;Lcom/amazonaws/services/s3/internal/S3Direct;Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;Lcom/amazonaws/services/s3/model/CryptoConfiguration;)V
      16: return

  protected boolean isStrict();
    Code:
       0: iconst_0
       1: ireturn

  public com.amazonaws.services.s3.model.S3Object getObjectSecurely(com.amazonaws.services.s3.model.GetObjectRequest);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #10                 // Field com/amazonaws/services/s3/AmazonS3EncryptionClient.USER_AGENT:Ljava/lang/String;
       5: invokevirtual #11                 // Method appendUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)Lcom/amazonaws/AmazonWebServiceRequest;
       8: pop
       9: aload_1
      10: invokevirtual #12                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getRange:()[J
      13: astore_2
      14: aload_0
      15: invokevirtual #13                 // Method isStrict:()Z
      18: ifeq          42
      21: aload_2
      22: ifnonnull     32
      25: aload_1
      26: invokevirtual #14                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getPartNumber:()Ljava/lang/Integer;
      29: ifnull        42
      32: new           #15                 // class java/lang/SecurityException
      35: dup
      36: ldc           #16                 // String Range get and getting a part are not allowed in strict crypto mode
      38: invokespecial #17                 // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: invokestatic  #18                 // Method getAdjustedCryptoRange:([J)[J
      46: astore_3
      47: aload_3
      48: ifnull        61
      51: aload_1
      52: aload_3
      53: iconst_0
      54: laload
      55: aload_3
      56: iconst_1
      57: laload
      58: invokevirtual #19                 // Method com/amazonaws/services/s3/model/GetObjectRequest.setRange:(JJ)V
      61: aload_0
      62: getfield      #20                 // Field s3:Lcom/amazonaws/services/s3/internal/S3Direct;
      65: aload_1
      66: invokevirtual #21                 // Method com/amazonaws/services/s3/internal/S3Direct.getObject:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)Lcom/amazonaws/services/s3/model/S3Object;
      69: astore        4
      71: aload         4
      73: ifnonnull     78
      76: aconst_null
      77: areturn
      78: aconst_null
      79: astore        5
      81: aload_1
      82: instanceof    #22                 // class com/amazonaws/services/s3/model/EncryptedGetObjectRequest
      85: ifeq          101
      88: aload_1
      89: checkcast     #22                 // class com/amazonaws/services/s3/model/EncryptedGetObjectRequest
      92: astore        6
      94: aload         6
      96: invokevirtual #23                 // Method com/amazonaws/services/s3/model/EncryptedGetObjectRequest.getInstructionFileSuffix:()Ljava/lang/String;
      99: astore        5
     101: aload         5
     103: ifnull        117
     106: aload         5
     108: invokevirtual #24                 // Method java/lang/String.trim:()Ljava/lang/String;
     111: invokevirtual #25                 // Method java/lang/String.isEmpty:()Z
     114: ifeq          129
     117: aload_0
     118: aload_1
     119: aload_2
     120: aload_3
     121: aload         4
     123: invokespecial #26                 // Method decipher:(Lcom/amazonaws/services/s3/model/GetObjectRequest;[J[JLcom/amazonaws/services/s3/model/S3Object;)Lcom/amazonaws/services/s3/model/S3Object;
     126: goto          140
     129: aload_0
     130: aload_1
     131: aload_2
     132: aload_3
     133: aload         4
     135: aload         5
     137: invokespecial #27                 // Method decipherWithInstFileSuffix:(Lcom/amazonaws/services/s3/model/GetObjectRequest;[J[JLcom/amazonaws/services/s3/model/S3Object;Ljava/lang/String;)Lcom/amazonaws/services/s3/model/S3Object;
     140: areturn
     141: astore        6
     143: aload         4
     145: aload_0
     146: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
     149: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     152: aload         6
     154: athrow
     155: astore        6
     157: aload         4
     159: aload_0
     160: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
     163: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     166: aload         6
     168: athrow
    Exception table:
       from    to  target type
         101   140   141   Class java/lang/RuntimeException
         101   140   155   Class java/lang/Error

  private com.amazonaws.services.s3.model.S3Object decipher(com.amazonaws.services.s3.model.GetObjectRequest, long[], long[], com.amazonaws.services.s3.model.S3Object);
    Code:
       0: new           #32                 // class com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper
       3: dup
       4: aload         4
       6: aload_1
       7: invokevirtual #33                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getS3ObjectId:()Lcom/amazonaws/services/s3/model/S3ObjectId;
      10: invokespecial #34                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper."<init>":(Lcom/amazonaws/services/s3/model/S3Object;Lcom/amazonaws/services/s3/model/S3ObjectId;)V
      13: astore        5
      15: aload         5
      17: invokevirtual #35                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.hasEncryptionInfo:()Z
      20: ifeq          33
      23: aload_0
      24: aload_1
      25: aload_2
      26: aload_3
      27: aload         5
      29: invokespecial #36                 // Method decipherWithMetadata:(Lcom/amazonaws/services/s3/model/GetObjectRequest;[J[JLcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;)Lcom/amazonaws/services/s3/model/S3Object;
      32: areturn
      33: aload_0
      34: aload_1
      35: invokevirtual #33                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getS3ObjectId:()Lcom/amazonaws/services/s3/model/S3ObjectId;
      38: aconst_null
      39: invokevirtual #37                 // Method fetchInstructionFile:(Lcom/amazonaws/services/s3/model/S3ObjectId;Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;
      42: astore        6
      44: aload         6
      46: ifnull        108
      49: aload         6
      51: invokevirtual #38                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.isInstructionFile:()Z
      54: ifeq          82
      57: aload_0
      58: aload_1
      59: aload_2
      60: aload_3
      61: aload         5
      63: aload         6
      65: invokespecial #39                 // Method decipherWithInstructionFile:(Lcom/amazonaws/services/s3/model/GetObjectRequest;[J[JLcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;)Lcom/amazonaws/services/s3/model/S3Object;
      68: astore        7
      70: aload         6
      72: aload_0
      73: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
      76: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      79: aload         7
      81: areturn
      82: aload         6
      84: aload_0
      85: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
      88: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      91: goto          108
      94: astore        8
      96: aload         6
      98: aload_0
      99: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
     102: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     105: aload         8
     107: athrow
     108: aload_0
     109: invokevirtual #13                 // Method isStrict:()Z
     112: ifne          125
     115: aload_0
     116: getfield      #40                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
     119: invokevirtual #41                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.isIgnoreMissingInstructionFile:()Z
     122: ifne          178
     125: aload         5
     127: aload_0
     128: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
     131: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     134: new           #15                 // class java/lang/SecurityException
     137: dup
     138: new           #42                 // class java/lang/StringBuilder
     141: dup
     142: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     145: ldc           #44                 // String Instruction file not found for S3 object with bucket name:
     147: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload         4
     152: invokevirtual #46                 // Method com/amazonaws/services/s3/model/S3Object.getBucketName:()Ljava/lang/String;
     155: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: ldc           #47                 // String , key:
     160: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: aload         4
     165: invokevirtual #48                 // Method com/amazonaws/services/s3/model/S3Object.getKey:()Ljava/lang/String;
     168: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     174: invokespecial #17                 // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
     177: athrow
     178: aload_0
     179: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
     182: ldc           #50                 // String Unable to detect encryption information for object \'%s\' in bucket \'%s\'. Returning object without decryption.
     184: iconst_2
     185: anewarray     #51                 // class java/lang/Object
     188: dup
     189: iconst_0
     190: aload         4
     192: invokevirtual #48                 // Method com/amazonaws/services/s3/model/S3Object.getKey:()Ljava/lang/String;
     195: aastore
     196: dup
     197: iconst_1
     198: aload         4
     200: invokevirtual #46                 // Method com/amazonaws/services/s3/model/S3Object.getBucketName:()Ljava/lang/String;
     203: aastore
     204: invokestatic  #52                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     207: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     212: aload_0
     213: aload         5
     215: aload_2
     216: aconst_null
     217: invokevirtual #54                 // Method adjustToDesiredRange:(Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;[JLjava/util/Map;)Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;
     220: astore        7
     222: aload         7
     224: invokevirtual #55                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getS3Object:()Lcom/amazonaws/services/s3/model/S3Object;
     227: areturn
    Exception table:
       from    to  target type
          49    70    94   any
          94    96    94   any

  private com.amazonaws.services.s3.model.S3Object decipherWithInstFileSuffix(com.amazonaws.services.s3.model.GetObjectRequest, long[], long[], com.amazonaws.services.s3.model.S3Object, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method com/amazonaws/services/s3/model/GetObjectRequest.getS3ObjectId:()Lcom/amazonaws/services/s3/model/S3ObjectId;
       4: astore        6
       6: aload_0
       7: aload         6
       9: aload         5
      11: invokevirtual #37                 // Method fetchInstructionFile:(Lcom/amazonaws/services/s3/model/S3ObjectId;Ljava/lang/String;)Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;
      14: astore        7
      16: aload         7
      18: ifnonnull     59
      21: new           #56                 // class com/amazonaws/AmazonClientException
      24: dup
      25: new           #42                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #57                 // String Instruction file with suffix
      34: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload         5
      39: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #58                 // String  is not found for
      44: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload         4
      49: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #60                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload         7
      61: invokevirtual #38                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.isInstructionFile:()Z
      64: ifeq          101
      67: aload_0
      68: aload_1
      69: aload_2
      70: aload_3
      71: new           #32                 // class com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper
      74: dup
      75: aload         4
      77: aload         6
      79: invokespecial #34                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper."<init>":(Lcom/amazonaws/services/s3/model/S3Object;Lcom/amazonaws/services/s3/model/S3ObjectId;)V
      82: aload         7
      84: invokespecial #39                 // Method decipherWithInstructionFile:(Lcom/amazonaws/services/s3/model/GetObjectRequest;[J[JLcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;)Lcom/amazonaws/services/s3/model/S3Object;
      87: astore        8
      89: aload         7
      91: aload_0
      92: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
      95: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      98: aload         8
     100: areturn
     101: new           #56                 // class com/amazonaws/AmazonClientException
     104: dup
     105: new           #42                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     112: ldc           #61                 // String Invalid Instruction file with suffix
     114: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload         5
     119: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc           #62                 // String  detected for
     124: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload         4
     129: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokespecial #60                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     138: athrow
     139: astore        9
     141: aload         7
     143: aload_0
     144: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
     147: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     150: aload         9
     152: athrow
    Exception table:
       from    to  target type
          59    89   139   any
         101   141   139   any

  private com.amazonaws.services.s3.model.S3Object decipherWithInstructionFile(com.amazonaws.services.s3.model.GetObjectRequest, long[], long[], com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper, com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper);
    Code:
       0: getstatic     #63                 // Field com/amazonaws/services/s3/model/ExtraMaterialsDescription.NONE:Lcom/amazonaws/services/s3/model/ExtraMaterialsDescription;
       3: astore        6
       5: aload_0
       6: invokevirtual #13                 // Method isStrict:()Z
       9: istore        7
      11: aload_1
      12: instanceof    #22                 // class com/amazonaws/services/s3/model/EncryptedGetObjectRequest
      15: ifeq          43
      18: aload_1
      19: checkcast     #22                 // class com/amazonaws/services/s3/model/EncryptedGetObjectRequest
      22: astore        8
      24: aload         8
      26: invokevirtual #64                 // Method com/amazonaws/services/s3/model/EncryptedGetObjectRequest.getExtraMaterialDescription:()Lcom/amazonaws/services/s3/model/ExtraMaterialsDescription;
      29: astore        6
      31: iload         7
      33: ifne          43
      36: aload         8
      38: invokevirtual #65                 // Method com/amazonaws/services/s3/model/EncryptedGetObjectRequest.isKeyWrapExpected:()Z
      41: istore        7
      43: aload         5
      45: invokevirtual #66                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.toJsonString:()Ljava/lang/String;
      48: astore        8
      50: aload         8
      52: ldc           #67                 // class java/util/Map
      54: invokestatic  #68                 // Method com/amazonaws/util/json/Jackson.fromJsonString:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      57: checkcast     #67                 // class java/util/Map
      60: invokestatic  #69                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      63: astore        9
      65: aload         9
      67: aload_0
      68: getfield      #70                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
      71: aload_0
      72: getfield      #40                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      75: invokevirtual #71                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoProvider:()Ljava/security/Provider;
      78: aload_3
      79: aload         6
      81: iload         7
      83: aload_0
      84: getfield      #72                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      87: invokestatic  #73                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.fromInstructionFile:(Ljava/util/Map;Lcom/amazonaws/services/s3/model/EncryptionMaterialsAccessor;Ljava/security/Provider;[JLcom/amazonaws/services/s3/model/ExtraMaterialsDescription;ZLcom/amazonaws/services/kms/AWSKMSClient;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      90: astore        10
      92: aload_0
      93: aload         10
      95: aload         4
      97: invokevirtual #74                 // Method securityCheck:(Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;)V
     100: aload_0
     101: aload         4
     103: aload         10
     105: aload_3
     106: invokespecial #75                 // Method decrypt:(Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;[J)Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;
     109: astore        11
     111: aload_0
     112: aload         11
     114: aload_2
     115: aload         9
     117: invokevirtual #54                 // Method adjustToDesiredRange:(Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;[JLjava/util/Map;)Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;
     120: astore        12
     122: aload         12
     124: invokevirtual #55                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getS3Object:()Lcom/amazonaws/services/s3/model/S3Object;
     127: areturn

  private com.amazonaws.services.s3.model.S3Object decipherWithMetadata(com.amazonaws.services.s3.model.GetObjectRequest, long[], long[], com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper);
    Code:
       0: getstatic     #63                 // Field com/amazonaws/services/s3/model/ExtraMaterialsDescription.NONE:Lcom/amazonaws/services/s3/model/ExtraMaterialsDescription;
       3: astore        5
       5: aload_0
       6: invokevirtual #13                 // Method isStrict:()Z
       9: istore        6
      11: aload_1
      12: instanceof    #22                 // class com/amazonaws/services/s3/model/EncryptedGetObjectRequest
      15: ifeq          43
      18: aload_1
      19: checkcast     #22                 // class com/amazonaws/services/s3/model/EncryptedGetObjectRequest
      22: astore        7
      24: aload         7
      26: invokevirtual #64                 // Method com/amazonaws/services/s3/model/EncryptedGetObjectRequest.getExtraMaterialDescription:()Lcom/amazonaws/services/s3/model/ExtraMaterialsDescription;
      29: astore        5
      31: iload         6
      33: ifne          43
      36: aload         7
      38: invokevirtual #65                 // Method com/amazonaws/services/s3/model/EncryptedGetObjectRequest.isKeyWrapExpected:()Z
      41: istore        6
      43: aload         4
      45: invokevirtual #76                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      48: aload_0
      49: getfield      #70                 // Field kekMaterialsProvider:Lcom/amazonaws/services/s3/model/EncryptionMaterialsProvider;
      52: aload_0
      53: getfield      #40                 // Field cryptoConfig:Lcom/amazonaws/services/s3/model/CryptoConfiguration;
      56: invokevirtual #71                 // Method com/amazonaws/services/s3/model/CryptoConfiguration.getCryptoProvider:()Ljava/security/Provider;
      59: aload_3
      60: aload         5
      62: iload         6
      64: aload_0
      65: getfield      #72                 // Field kms:Lcom/amazonaws/services/kms/AWSKMSClient;
      68: invokestatic  #77                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.fromObjectMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;Lcom/amazonaws/services/s3/model/EncryptionMaterialsAccessor;Ljava/security/Provider;[JLcom/amazonaws/services/s3/model/ExtraMaterialsDescription;ZLcom/amazonaws/services/kms/AWSKMSClient;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;
      71: astore        7
      73: aload_0
      74: aload         7
      76: aload         4
      78: invokevirtual #74                 // Method securityCheck:(Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;)V
      81: aload_0
      82: aload         4
      84: aload         7
      86: aload_3
      87: invokespecial #75                 // Method decrypt:(Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;[J)Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;
      90: astore        8
      92: aload_0
      93: aload         8
      95: aload_2
      96: aconst_null
      97: invokevirtual #54                 // Method adjustToDesiredRange:(Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;[JLjava/util/Map;)Lcom/amazonaws/services/s3/internal/crypto/S3ObjectWrapper;
     100: astore        9
     102: aload         9
     104: invokevirtual #55                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getS3Object:()Lcom/amazonaws/services/s3/model/S3Object;
     107: areturn

  protected final com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper adjustToDesiredRange(com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper, long[], java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aload_1
       5: areturn
       6: aload_1
       7: aload_3
       8: invokevirtual #78                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.encryptionSchemeOf:(Ljava/util/Map;)Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
      11: astore        4
      13: aload_1
      14: invokevirtual #76                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      17: invokevirtual #79                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getInstanceLength:()J
      20: lstore        5
      22: lload         5
      24: aload         4
      26: invokevirtual #80                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getTagLengthInBits:()I
      29: bipush        8
      31: idiv
      32: i2l
      33: lsub
      34: lconst_1
      35: lsub
      36: lstore        7
      38: aload_2
      39: iconst_1
      40: laload
      41: lload         7
      43: lcmp
      44: ifle          89
      47: aload_2
      48: iconst_1
      49: lload         7
      51: lastore
      52: aload_2
      53: iconst_0
      54: laload
      55: aload_2
      56: iconst_1
      57: laload
      58: lcmp
      59: ifle          89
      62: aload_1
      63: invokevirtual #81                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
      66: aload_0
      67: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
      70: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      73: aload_1
      74: new           #82                 // class java/io/ByteArrayInputStream
      77: dup
      78: iconst_0
      79: newarray       byte
      81: invokespecial #83                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      84: invokevirtual #84                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.setObjectContent:(Ljava/io/InputStream;)V
      87: aload_1
      88: areturn
      89: aload_2
      90: iconst_0
      91: laload
      92: aload_2
      93: iconst_1
      94: laload
      95: lcmp
      96: ifle          101
      99: aload_1
     100: areturn
     101: aload_1
     102: invokevirtual #81                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
     105: astore        9
     107: new           #85                 // class com/amazonaws/services/s3/internal/crypto/AdjustedRangeInputStream
     110: dup
     111: aload         9
     113: aload_2
     114: iconst_0
     115: laload
     116: aload_2
     117: iconst_1
     118: laload
     119: invokespecial #86                 // Method com/amazonaws/services/s3/internal/crypto/AdjustedRangeInputStream."<init>":(Ljava/io/InputStream;JJ)V
     122: astore        10
     124: aload_1
     125: new           #87                 // class com/amazonaws/services/s3/model/S3ObjectInputStream
     128: dup
     129: aload         10
     131: aload         9
     133: invokevirtual #88                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream.getHttpRequest:()Lorg/apache/http/client/methods/HttpRequestBase;
     136: invokespecial #89                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream."<init>":(Ljava/io/InputStream;Lorg/apache/http/client/methods/HttpRequestBase;)V
     139: invokevirtual #90                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.setObjectContent:(Lcom/amazonaws/services/s3/model/S3ObjectInputStream;)V
     142: aload_1
     143: areturn
     144: astore        9
     146: new           #56                 // class com/amazonaws/AmazonClientException
     149: dup
     150: new           #42                 // class java/lang/StringBuilder
     153: dup
     154: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     157: ldc           #92                 // String Error adjusting output to desired byte range:
     159: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload         9
     164: invokevirtual #93                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     167: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: invokespecial #60                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     176: athrow
    Exception table:
       from    to  target type
         101   143   144   Class java/io/IOException

  public com.amazonaws.services.s3.model.ObjectMetadata getObjectSecurely(com.amazonaws.services.s3.model.GetObjectRequest, java.io.File);
    Code:
       0: aload_0
       1: aload_2
       2: ldc           #94                 // String The destination file parameter must be specified when downloading an object directly to a file
       4: invokespecial #95                 // Method assertParameterNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: invokevirtual #96                 // Method getObjectSecurely:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)Lcom/amazonaws/services/s3/model/S3Object;
      12: astore_3
      13: aload_3
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aconst_null
      20: astore        4
      22: new           #97                 // class java/io/BufferedOutputStream
      25: dup
      26: new           #98                 // class java/io/FileOutputStream
      29: dup
      30: aload_2
      31: invokespecial #99                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      34: invokespecial #100                // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
      37: astore        4
      39: sipush        10240
      42: newarray       byte
      44: astore        5
      46: aload_3
      47: invokevirtual #101                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
      50: aload         5
      52: invokevirtual #102                // Method com/amazonaws/services/s3/model/S3ObjectInputStream.read:([B)I
      55: dup
      56: istore        6
      58: iconst_m1
      59: if_icmple     75
      62: aload         4
      64: aload         5
      66: iconst_0
      67: iload         6
      69: invokevirtual #103                // Method java/io/OutputStream.write:([BII)V
      72: goto          46
      75: aload         4
      77: aload_0
      78: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
      81: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      84: aload_3
      85: invokevirtual #101                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
      88: aload_0
      89: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
      92: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
      95: goto          158
      98: astore        5
     100: new           #56                 // class com/amazonaws/AmazonClientException
     103: dup
     104: new           #42                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #104                // String Unable to store object contents to disk:
     113: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload         5
     118: invokevirtual #93                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     121: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: aload         5
     129: invokespecial #105                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     132: athrow
     133: astore        7
     135: aload         4
     137: aload_0
     138: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
     141: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     144: aload_3
     145: invokevirtual #101                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
     148: aload_0
     149: getfield      #29                 // Field log:Lorg/apache/commons/logging/Log;
     152: invokestatic  #30                 // Method com/amazonaws/util/IOUtils.closeQuietly:(Ljava/io/Closeable;Lorg/apache/commons/logging/Log;)V
     155: aload         7
     157: athrow
     158: aload_3
     159: invokevirtual #106                // Method com/amazonaws/services/s3/model/S3Object.getObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
     162: areturn
    Exception table:
       from    to  target type
          22    75    98   Class java/io/IOException
          22    75   133   any
          98   135   133   any

  final com.amazonaws.services.s3.internal.crypto.MultipartUploadCryptoContext newUploadContext(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest, com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial);
    Code:
       0: new           #107                // class com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext
       3: dup
       4: aload_1
       5: invokevirtual #108                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getBucketName:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #109                // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.getKey:()Ljava/lang/String;
      12: aload_2
      13: invokespecial #110                // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext."<init>":(Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial;)V
      16: areturn

  final com.amazonaws.services.s3.internal.crypto.CipherLite cipherLiteForNextPart(com.amazonaws.services.s3.internal.crypto.MultipartUploadCryptoContext);
    Code:
       0: aload_1
       1: invokevirtual #111                // Method com/amazonaws/services/s3/internal/crypto/MultipartUploadCryptoContext.getCipherLite:()Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
       4: areturn

  final com.amazonaws.internal.SdkFilterInputStream wrapForMultipart(com.amazonaws.services.s3.internal.crypto.CipherLiteInputStream, long);
    Code:
       0: aload_1
       1: areturn

  final long computeLastPartSize(com.amazonaws.services.s3.model.UploadPartRequest);
    Code:
       0: aload_1
       1: invokevirtual #112                // Method com/amazonaws/services/s3/model/UploadPartRequest.getPartSize:()J
       4: aload_0
       5: getfield      #113                // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       8: invokevirtual #80                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getTagLengthInBits:()I
      11: bipush        8
      13: idiv
      14: i2l
      15: ladd
      16: lreturn

  final void updateUploadContext(com.amazonaws.services.s3.internal.crypto.MultipartUploadCryptoContext, com.amazonaws.internal.SdkFilterInputStream);
    Code:
       0: return

  private com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper decrypt(com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper, com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial, long[]);
    Code:
       0: aload_1
       1: invokevirtual #81                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
       4: astore        4
       6: aload_1
       7: new           #87                 // class com/amazonaws/services/s3/model/S3ObjectInputStream
      10: dup
      11: new           #114                // class com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream
      14: dup
      15: aload         4
      17: aload_2
      18: invokevirtual #115                // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoMaterial.getCipherLite:()Lcom/amazonaws/services/s3/internal/crypto/CipherLite;
      21: sipush        2048
      24: invokespecial #117                // Method com/amazonaws/services/s3/internal/crypto/CipherLiteInputStream."<init>":(Ljava/io/InputStream;Lcom/amazonaws/services/s3/internal/crypto/CipherLite;I)V
      27: aload         4
      29: invokevirtual #88                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream.getHttpRequest:()Lorg/apache/http/client/methods/HttpRequestBase;
      32: invokespecial #89                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream."<init>":(Ljava/io/InputStream;Lorg/apache/http/client/methods/HttpRequestBase;)V
      35: invokevirtual #90                 // Method com/amazonaws/services/s3/internal/crypto/S3ObjectWrapper.setObjectContent:(Lcom/amazonaws/services/s3/model/S3ObjectInputStream;)V
      38: aload_1
      39: areturn

  private void assertParameterNotNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: aload_2
       9: invokespecial #118                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      12: athrow
      13: return

  protected final long ciphertextLength(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #113                // Field contentCryptoScheme:Lcom/amazonaws/services/s3/internal/crypto/ContentCryptoScheme;
       5: invokevirtual #80                 // Method com/amazonaws/services/s3/internal/crypto/ContentCryptoScheme.getTagLengthInBits:()I
       8: bipush        8
      10: idiv
      11: i2l
      12: ladd
      13: lreturn

  static {};
    Code:
       0: invokestatic  #119                // Method com/amazonaws/services/s3/internal/crypto/CryptoRuntime.enableBouncyCastle:()V
       3: return
}
