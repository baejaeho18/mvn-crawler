Compiled from "CopyCallable.java"
public class com.amazonaws.services.s3.transfer.internal.CopyCallable implements java.util.concurrent.Callable<com.amazonaws.services.s3.transfer.model.CopyResult> {
  private final com.amazonaws.services.s3.AmazonS3 s3;

  private final java.util.concurrent.ExecutorService threadPool;

  private final com.amazonaws.services.s3.model.CopyObjectRequest copyObjectRequest;

  private java.lang.String multipartUploadId;

  private final com.amazonaws.services.s3.model.ObjectMetadata metadata;

  private final com.amazonaws.services.s3.transfer.internal.CopyImpl copy;

  private static final org.apache.commons.logging.Log log;

  private final com.amazonaws.services.s3.transfer.TransferManagerConfiguration configuration;

  private final java.util.List<java.util.concurrent.Future<com.amazonaws.services.s3.model.PartETag>> futures;

  private final com.amazonaws.event.ProgressListenerChain listenerChain;

  public com.amazonaws.services.s3.transfer.internal.CopyCallable(com.amazonaws.services.s3.transfer.TransferManager, java.util.concurrent.ExecutorService, com.amazonaws.services.s3.transfer.internal.CopyImpl, com.amazonaws.services.s3.model.CopyObjectRequest, com.amazonaws.services.s3.model.ObjectMetadata, com.amazonaws.event.ProgressListenerChain);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field futures:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method com/amazonaws/services/s3/transfer/TransferManager.getAmazonS3Client:()Lcom/amazonaws/services/s3/AmazonS3;
      20: putfield      #6                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      23: aload_0
      24: aload_1
      25: invokevirtual #7                  // Method com/amazonaws/services/s3/transfer/TransferManager.getConfiguration:()Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      28: putfield      #8                  // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      36: aload_0
      37: aload         4
      39: putfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      42: aload_0
      43: aload         5
      45: putfield      #11                 // Field metadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
      48: aload_0
      49: aload         6
      51: putfield      #12                 // Field listenerChain:Lcom/amazonaws/event/ProgressListenerChain;
      54: aload_0
      55: aload_3
      56: putfield      #13                 // Field copy:Lcom/amazonaws/services/s3/transfer/internal/CopyImpl;
      59: return

  java.util.List<java.util.concurrent.Future<com.amazonaws.services.s3.model.PartETag>> getFutures();
    Code:
       0: aload_0
       1: getfield      #4                  // Field futures:Ljava/util/List;
       4: areturn

  java.lang.String getMultipartUploadId();
    Code:
       0: aload_0
       1: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
       4: areturn

  public boolean isMultipartCopy();
    Code:
       0: aload_0
       1: getfield      #11                 // Field metadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
       4: invokevirtual #15                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentLength:()J
       7: aload_0
       8: getfield      #8                  // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
      11: invokevirtual #16                 // Method com/amazonaws/services/s3/transfer/TransferManagerConfiguration.getMultipartCopyThreshold:()J
      14: lcmp
      15: ifle          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public com.amazonaws.services.s3.transfer.model.CopyResult call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #13                 // Field copy:Lcom/amazonaws/services/s3/transfer/internal/CopyImpl;
       4: getstatic     #17                 // Field com/amazonaws/services/s3/transfer/Transfer$TransferState.InProgress:Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;
       7: invokevirtual #18                 // Method com/amazonaws/services/s3/transfer/internal/CopyImpl.setState:(Lcom/amazonaws/services/s3/transfer/Transfer$TransferState;)V
      10: aload_0
      11: invokevirtual #19                 // Method isMultipartCopy:()Z
      14: ifeq          34
      17: aload_0
      18: getfield      #12                 // Field listenerChain:Lcom/amazonaws/event/ProgressListenerChain;
      21: getstatic     #20                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_STARTED_EVENT:Lcom/amazonaws/event/ProgressEventType;
      24: invokestatic  #21                 // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
      27: pop
      28: aload_0
      29: invokespecial #22                 // Method copyInParts:()V
      32: aconst_null
      33: areturn
      34: aload_0
      35: invokespecial #23                 // Method copyInOneChunk:()Lcom/amazonaws/services/s3/transfer/model/CopyResult;
      38: areturn

  private com.amazonaws.services.s3.transfer.model.CopyResult copyInOneChunk();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
       4: aload_0
       5: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
       8: invokeinterface #24,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.copyObject:(Lcom/amazonaws/services/s3/model/CopyObjectRequest;)Lcom/amazonaws/services/s3/model/CopyObjectResult;
      13: astore_1
      14: new           #25                 // class com/amazonaws/services/s3/transfer/model/CopyResult
      17: dup
      18: invokespecial #26                 // Method com/amazonaws/services/s3/transfer/model/CopyResult."<init>":()V
      21: astore_2
      22: aload_2
      23: aload_0
      24: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      27: invokevirtual #27                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceBucketName:()Ljava/lang/String;
      30: invokevirtual #28                 // Method com/amazonaws/services/s3/transfer/model/CopyResult.setSourceBucketName:(Ljava/lang/String;)V
      33: aload_2
      34: aload_0
      35: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      38: invokevirtual #29                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSourceKey:()Ljava/lang/String;
      41: invokevirtual #30                 // Method com/amazonaws/services/s3/transfer/model/CopyResult.setSourceKey:(Ljava/lang/String;)V
      44: aload_2
      45: aload_0
      46: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      49: invokevirtual #31                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationBucketName:()Ljava/lang/String;
      52: invokevirtual #32                 // Method com/amazonaws/services/s3/transfer/model/CopyResult.setDestinationBucketName:(Ljava/lang/String;)V
      55: aload_2
      56: aload_0
      57: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      60: invokevirtual #33                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationKey:()Ljava/lang/String;
      63: invokevirtual #34                 // Method com/amazonaws/services/s3/transfer/model/CopyResult.setDestinationKey:(Ljava/lang/String;)V
      66: aload_2
      67: aload_1
      68: invokevirtual #35                 // Method com/amazonaws/services/s3/model/CopyObjectResult.getETag:()Ljava/lang/String;
      71: invokevirtual #36                 // Method com/amazonaws/services/s3/transfer/model/CopyResult.setETag:(Ljava/lang/String;)V
      74: aload_2
      75: aload_1
      76: invokevirtual #37                 // Method com/amazonaws/services/s3/model/CopyObjectResult.getVersionId:()Ljava/lang/String;
      79: invokevirtual #38                 // Method com/amazonaws/services/s3/transfer/model/CopyResult.setVersionId:(Ljava/lang/String;)V
      82: aload_2
      83: areturn

  private void copyInParts() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
       4: invokevirtual #31                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationBucketName:()Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      12: invokevirtual #33                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationKey:()Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: aload_0
      18: aload_0
      19: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      22: invokespecial #39                 // Method initiateMultipartUpload:(Lcom/amazonaws/services/s3/model/CopyObjectRequest;)Ljava/lang/String;
      25: putfield      #14                 // Field multipartUploadId:Ljava/lang/String;
      28: aload_0
      29: aload_0
      30: getfield      #11                 // Field metadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
      33: invokevirtual #15                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentLength:()J
      36: invokespecial #40                 // Method getOptimalPartSize:(J)J
      39: lstore_3
      40: new           #41                 // class com/amazonaws/services/s3/transfer/internal/CopyPartRequestFactory
      43: dup
      44: aload_0
      45: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
      48: aload_0
      49: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
      52: lload_3
      53: aload_0
      54: getfield      #11                 // Field metadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
      57: invokevirtual #15                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentLength:()J
      60: invokespecial #42                 // Method com/amazonaws/services/s3/transfer/internal/CopyPartRequestFactory."<init>":(Lcom/amazonaws/services/s3/model/CopyObjectRequest;Ljava/lang/String;JJ)V
      63: astore        5
      65: aload_0
      66: aload         5
      68: invokespecial #43                 // Method copyPartsInParallel:(Lcom/amazonaws/services/s3/transfer/internal/CopyPartRequestFactory;)V
      71: goto          150
      74: astore        5
      76: aload_0
      77: getfield      #12                 // Field listenerChain:Lcom/amazonaws/event/ProgressListenerChain;
      80: getstatic     #45                 // Field com/amazonaws/event/ProgressEventType.TRANSFER_FAILED_EVENT:Lcom/amazonaws/event/ProgressEventType;
      83: invokestatic  #21                 // Method com/amazonaws/event/SDKProgressPublisher.publishProgress:(Lcom/amazonaws/event/ProgressListener;Lcom/amazonaws/event/ProgressEventType;)Ljava/util/concurrent/Future;
      86: pop
      87: aload_0
      88: getfield      #6                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      91: new           #46                 // class com/amazonaws/services/s3/model/AbortMultipartUploadRequest
      94: dup
      95: aload_1
      96: aload_2
      97: aload_0
      98: getfield      #14                 // Field multipartUploadId:Ljava/lang/String;
     101: invokespecial #47                 // Method com/amazonaws/services/s3/model/AbortMultipartUploadRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     104: invokeinterface #48,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.abortMultipartUpload:(Lcom/amazonaws/services/s3/model/AbortMultipartUploadRequest;)V
     109: goto          147
     112: astore        6
     114: getstatic     #49                 // Field log:Lorg/apache/commons/logging/Log;
     117: new           #50                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #52                 // String Unable to abort multipart upload, you may need to manually remove uploaded parts:
     126: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload         6
     131: invokevirtual #54                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     134: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: aload         6
     142: invokeinterface #56,  3           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     147: aload         5
     149: athrow
     150: return
    Exception table:
       from    to  target type
          40    71    74   Class java/lang/Exception
          87   109   112   Class java/lang/Exception

  private long getOptimalPartSize(long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field copyObjectRequest:Lcom/amazonaws/services/s3/model/CopyObjectRequest;
       4: aload_0
       5: getfield      #8                  // Field configuration:Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;
       8: lload_1
       9: invokestatic  #57                 // Method com/amazonaws/services/s3/transfer/internal/TransferManagerUtils.calculateOptimalPartSizeForCopy:(Lcom/amazonaws/services/s3/model/CopyObjectRequest;Lcom/amazonaws/services/s3/transfer/TransferManagerConfiguration;J)J
      12: lstore_3
      13: getstatic     #49                 // Field log:Lorg/apache/commons/logging/Log;
      16: new           #50                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #58                 // String Calculated optimal part size:
      25: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: lload_3
      29: invokevirtual #59                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      32: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokeinterface #60,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      40: lload_3
      41: lreturn

  private void copyPartsInParallel(com.amazonaws.services.s3.transfer.internal.CopyPartRequestFactory);
    Code:
       0: aload_1
       1: invokevirtual #61                 // Method com/amazonaws/services/s3/transfer/internal/CopyPartRequestFactory.hasMoreRequests:()Z
       4: ifeq          68
       7: aload_0
       8: getfield      #9                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      11: invokeinterface #62,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
      16: ifeq          29
      19: new           #63                 // class java/util/concurrent/CancellationException
      22: dup
      23: ldc           #64                 // String TransferManager has been shutdown
      25: invokespecial #65                 // Method java/util/concurrent/CancellationException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_1
      30: invokevirtual #66                 // Method com/amazonaws/services/s3/transfer/internal/CopyPartRequestFactory.getNextCopyPartRequest:()Lcom/amazonaws/services/s3/model/CopyPartRequest;
      33: astore_2
      34: aload_0
      35: getfield      #4                  // Field futures:Ljava/util/List;
      38: aload_0
      39: getfield      #9                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      42: new           #67                 // class com/amazonaws/services/s3/transfer/internal/CopyPartCallable
      45: dup
      46: aload_0
      47: getfield      #6                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
      50: aload_2
      51: invokespecial #68                 // Method com/amazonaws/services/s3/transfer/internal/CopyPartCallable."<init>":(Lcom/amazonaws/services/s3/AmazonS3;Lcom/amazonaws/services/s3/model/CopyPartRequest;)V
      54: invokeinterface #69,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      59: invokeinterface #70,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          0
      68: return

  private java.lang.String initiateMultipartUpload(com.amazonaws.services.s3.model.CopyObjectRequest);
    Code:
       0: new           #71                 // class com/amazonaws/services/s3/model/InitiateMultipartUploadRequest
       3: dup
       4: aload_1
       5: invokevirtual #31                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationBucketName:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #33                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationKey:()Ljava/lang/String;
      12: invokespecial #72                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: aload_1
      16: invokevirtual #73                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getCannedAccessControlList:()Lcom/amazonaws/services/s3/model/CannedAccessControlList;
      19: invokevirtual #74                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withCannedACL:(Lcom/amazonaws/services/s3/model/CannedAccessControlList;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      22: astore_2
      23: aload_2
      24: aload_1
      25: invokevirtual #75                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getAccessControlList:()Lcom/amazonaws/services/s3/model/AccessControlList;
      28: invokevirtual #76                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withAccessControlList:(Lcom/amazonaws/services/s3/model/AccessControlList;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      31: aload_1
      32: invokevirtual #77                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getStorageClass:()Ljava/lang/String;
      35: invokevirtual #78                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withStorageClass:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      38: aload_1
      39: invokevirtual #79                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getDestinationSSECustomerKey:()Lcom/amazonaws/services/s3/model/SSECustomerKey;
      42: invokevirtual #80                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withSSECustomerKey:(Lcom/amazonaws/services/s3/model/SSECustomerKey;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      45: aload_1
      46: invokevirtual #81                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getSSEAwsKeyManagementParams:()Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;
      49: invokevirtual #82                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withSSEAwsKeyManagementParams:(Lcom/amazonaws/services/s3/model/SSEAwsKeyManagementParams;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;
      52: aload_1
      53: invokevirtual #83                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getGeneralProgressListener:()Lcom/amazonaws/event/ProgressListener;
      56: invokevirtual #84                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.withGeneralProgressListener:(Lcom/amazonaws/event/ProgressListener;)Lcom/amazonaws/AmazonWebServiceRequest;
      59: aload_1
      60: invokevirtual #85                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      63: invokevirtual #86                 // Method com/amazonaws/AmazonWebServiceRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
      66: pop
      67: aload_1
      68: invokevirtual #87                 // Method com/amazonaws/services/s3/model/CopyObjectRequest.getNewObjectMetadata:()Lcom/amazonaws/services/s3/model/ObjectMetadata;
      71: astore_3
      72: aload_3
      73: ifnonnull     84
      76: new           #88                 // class com/amazonaws/services/s3/model/ObjectMetadata
      79: dup
      80: invokespecial #89                 // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
      83: astore_3
      84: aload_3
      85: invokevirtual #90                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentType:()Ljava/lang/String;
      88: ifnonnull     102
      91: aload_3
      92: aload_0
      93: getfield      #11                 // Field metadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
      96: invokevirtual #90                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentType:()Ljava/lang/String;
      99: invokevirtual #91                 // Method com/amazonaws/services/s3/model/ObjectMetadata.setContentType:(Ljava/lang/String;)V
     102: aload_2
     103: aload_3
     104: invokevirtual #92                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadRequest.setObjectMetadata:(Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     107: aload_0
     108: aload_0
     109: getfield      #11                 // Field metadata:Lcom/amazonaws/services/s3/model/ObjectMetadata;
     112: aload_3
     113: invokespecial #93                 // Method populateMetadataWithEncryptionParams:(Lcom/amazonaws/services/s3/model/ObjectMetadata;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     116: aload_0
     117: getfield      #6                  // Field s3:Lcom/amazonaws/services/s3/AmazonS3;
     120: aload_2
     121: invokeinterface #94,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.initiateMultipartUpload:(Lcom/amazonaws/services/s3/model/InitiateMultipartUploadRequest;)Lcom/amazonaws/services/s3/model/InitiateMultipartUploadResult;
     126: invokevirtual #95                 // Method com/amazonaws/services/s3/model/InitiateMultipartUploadResult.getUploadId:()Ljava/lang/String;
     129: astore        4
     131: getstatic     #49                 // Field log:Lorg/apache/commons/logging/Log;
     134: new           #50                 // class java/lang/StringBuilder
     137: dup
     138: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     141: ldc           #96                 // String Initiated new multipart upload:
     143: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload         4
     148: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: invokeinterface #60,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     159: aload         4
     161: areturn

  private void populateMetadataWithEncryptionParams(com.amazonaws.services.s3.model.ObjectMetadata, com.amazonaws.services.s3.model.ObjectMetadata);
    Code:
       0: aload_1
       1: invokevirtual #97                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getUserMetadata:()Ljava/util/Map;
       4: astore_3
       5: aload_2
       6: invokevirtual #97                 // Method com/amazonaws/services/s3/model/ObjectMetadata.getUserMetadata:()Ljava/util/Map;
       9: astore        4
      11: bipush        9
      13: anewarray     #98                 // class java/lang/String
      16: dup
      17: iconst_0
      18: ldc           #100                // String x-amz-cek-alg
      20: aastore
      21: dup
      22: iconst_1
      23: ldc           #101                // String x-amz-iv
      25: aastore
      26: dup
      27: iconst_2
      28: ldc           #102                // String x-amz-key
      30: aastore
      31: dup
      32: iconst_3
      33: ldc           #103                // String x-amz-key-v2
      35: aastore
      36: dup
      37: iconst_4
      38: ldc           #104                // String x-amz-wrap-alg
      40: aastore
      41: dup
      42: iconst_5
      43: ldc           #105                // String x-amz-tag-len
      45: aastore
      46: dup
      47: bipush        6
      49: ldc           #106                // String x-amz-matdesc
      51: aastore
      52: dup
      53: bipush        7
      55: ldc           #107                // String x-amz-unencrypted-content-length
      57: aastore
      58: dup
      59: bipush        8
      61: ldc           #108                // String x-amz-unencrypted-content-md5
      63: aastore
      64: astore        5
      66: aload_3
      67: ifnull        152
      70: aload         4
      72: ifnonnull     90
      75: new           #109                // class java/util/HashMap
      78: dup
      79: invokespecial #110                // Method java/util/HashMap."<init>":()V
      82: astore        4
      84: aload_2
      85: aload         4
      87: invokevirtual #111                // Method com/amazonaws/services/s3/model/ObjectMetadata.setUserMetadata:(Ljava/util/Map;)V
      90: aload         5
      92: astore        7
      94: aload         7
      96: arraylength
      97: istore        8
      99: iconst_0
     100: istore        9
     102: iload         9
     104: iload         8
     106: if_icmpge     152
     109: aload         7
     111: iload         9
     113: aaload
     114: astore        10
     116: aload_3
     117: aload         10
     119: invokeinterface #112,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     124: checkcast     #98                 // class java/lang/String
     127: astore        6
     129: aload         6
     131: ifnull        146
     134: aload         4
     136: aload         10
     138: aload         6
     140: invokeinterface #113,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: iinc          9, 1
     149: goto          102
     152: return

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #114                // Method call:()Lcom/amazonaws/services/s3/transfer/model/CopyResult;
       4: areturn

  static {};
    Code:
       0: ldc           #115                // class com/amazonaws/services/s3/transfer/internal/CopyCallable
       2: invokestatic  #116                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #49                 // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
