Compiled from "PersistableTransfer.java"
public abstract class com.amazonaws.services.s3.transfer.PersistableTransfer {
  private static final com.fasterxml.jackson.databind.ObjectMapper MAPPER;

  public com.amazonaws.services.s3.transfer.PersistableTransfer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public final java.lang.String serialize();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/amazonaws/util/json/Jackson.toJsonString:(Ljava/lang/Object;)Ljava/lang/String;
       4: areturn

  public final void serialize(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #2                  // Method com/amazonaws/util/json/Jackson.toJsonString:(Ljava/lang/Object;)Ljava/lang/String;
       5: getstatic     #3                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
       8: invokevirtual #4                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: invokevirtual #5                  // Method java/io/OutputStream.write:([B)V
      14: aload_1
      15: invokevirtual #6                  // Method java/io/OutputStream.flush:()V
      18: return

  public static <T extends com.amazonaws.services.s3.transfer.PersistableTransfer> T deserializeFrom(java.io.InputStream);
    Code:
       0: getstatic     #7                  // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: aload_0
       4: invokevirtual #8                  // Method com/fasterxml/jackson/databind/ObjectMapper.readTree:(Ljava/io/InputStream;)Lcom/fasterxml/jackson/databind/JsonNode;
       7: astore_2
       8: aload_2
       9: ldc           #9                  // String pauseType
      11: invokevirtual #10                 // Method com/fasterxml/jackson/databind/JsonNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      14: astore_3
      15: aload_3
      16: ifnonnull     29
      19: new           #11                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #12                 // String Unrecognized serialized state
      25: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_3
      30: invokevirtual #14                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      33: astore_1
      34: goto          47
      37: astore_3
      38: new           #11                 // class java/lang/IllegalArgumentException
      41: dup
      42: aload_3
      43: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      46: athrow
      47: ldc           #18                 // String download
      49: aload_1
      50: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifeq          62
      56: ldc           #17                 // class com/amazonaws/services/s3/transfer/PersistableDownload
      58: astore_3
      59: goto          104
      62: ldc           #21                 // String upload
      64: aload_1
      65: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          77
      71: ldc           #20                 // class com/amazonaws/services/s3/transfer/PersistableUpload
      73: astore_3
      74: goto          104
      77: new           #22                 // class java/lang/UnsupportedOperationException
      80: dup
      81: new           #23                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #25                 // String Unsupported paused transfer type:
      90: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_1
      94: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: getstatic     #7                  // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
     107: aload_2
     108: aload_3
     109: invokevirtual #29                 // Method com/fasterxml/jackson/databind/ObjectMapper.treeToValue:(Lcom/fasterxml/jackson/core/TreeNode;Ljava/lang/Class;)Ljava/lang/Object;
     112: checkcast     #30                 // class com/amazonaws/services/s3/transfer/PersistableTransfer
     115: astore        4
     117: aload         4
     119: areturn
     120: astore        4
     122: new           #32                 // class java/lang/IllegalStateException
     125: dup
     126: aload         4
     128: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     131: athrow
    Exception table:
       from    to  target type
           0    34    37   Class java/lang/Exception
         104   119   120   Class com/fasterxml/jackson/core/JsonProcessingException

  public static <T extends com.amazonaws.services.s3.transfer.PersistableTransfer> T deserializeFrom(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #34                 // class java/io/ByteArrayInputStream
       9: dup
      10: aload_0
      11: getstatic     #3                  // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
      14: invokevirtual #4                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      17: invokespecial #35                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      20: astore_1
      21: aload_1
      22: invokestatic  #36                 // Method deserializeFrom:(Ljava/io/InputStream;)Lcom/amazonaws/services/s3/transfer/PersistableTransfer;
      25: astore_2
      26: aload_1
      27: invokevirtual #37                 // Method java/io/ByteArrayInputStream.close:()V
      30: goto          34
      33: astore_3
      34: aload_2
      35: areturn
      36: astore        4
      38: aload_1
      39: invokevirtual #37                 // Method java/io/ByteArrayInputStream.close:()V
      42: goto          47
      45: astore        5
      47: aload         4
      49: athrow
    Exception table:
       from    to  target type
          26    30    33   Class java/io/IOException
          21    26    36   any
          38    42    45   Class java/io/IOException
          36    38    36   any

  static {};
    Code:
       0: new           #39                 // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: invokespecial #40                 // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       7: putstatic     #7                  // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
      10: return
}
