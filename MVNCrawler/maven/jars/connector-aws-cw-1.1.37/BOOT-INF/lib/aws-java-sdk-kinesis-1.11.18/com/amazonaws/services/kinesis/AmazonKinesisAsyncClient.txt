Compiled from "AmazonKinesisAsyncClient.java"
public class com.amazonaws.services.kinesis.AmazonKinesisAsyncClient extends com.amazonaws.services.kinesis.AmazonKinesisClient implements com.amazonaws.services.kinesis.AmazonKinesisAsync {
  private static final int DEFAULT_THREAD_POOL_SIZE;

  private final java.util.concurrent.ExecutorService executorService;

  public com.amazonaws.services.kinesis.AmazonKinesisAsyncClient();
    Code:
       0: aload_0
       1: new           #1                  // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       4: dup
       5: invokespecial #2                  // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      11: return

  public com.amazonaws.services.kinesis.AmazonKinesisAsyncClient(com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: new           #1                  // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       4: dup
       5: invokespecial #2                  // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
       8: aload_1
       9: aload_1
      10: invokevirtual #4                  // Method com/amazonaws/ClientConfiguration.getMaxConnections:()I
      13: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      16: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      19: return

  public com.amazonaws.services.kinesis.AmazonKinesisAsyncClient(com.amazonaws.auth.AWSCredentials);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        50
       4: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
       7: invokespecial #8                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Ljava/util/concurrent/ExecutorService;)V
      10: return

  public com.amazonaws.services.kinesis.AmazonKinesisAsyncClient(com.amazonaws.auth.AWSCredentials, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #9                  // Field configFactory:Lcom/amazonaws/ClientConfigurationFactory;
       5: invokevirtual #10                 // Method com/amazonaws/ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       8: aload_2
       9: invokespecial #11                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      12: return

  public com.amazonaws.services.kinesis.AmazonKinesisAsyncClient(com.amazonaws.auth.AWSCredentials, com.amazonaws.ClientConfiguration, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method com/amazonaws/services/kinesis/AmazonKinesisClient."<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/ClientConfiguration;)V
       6: aload_0
       7: aload_3
       8: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      11: return

  public com.amazonaws.services.kinesis.AmazonKinesisAsyncClient(com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        50
       4: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
       7: invokespecial #14                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Ljava/util/concurrent/ExecutorService;)V
      10: return

  public com.amazonaws.services.kinesis.AmazonKinesisAsyncClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokevirtual #4                  // Method com/amazonaws/ClientConfiguration.getMaxConnections:()I
       7: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      10: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      13: return

  public com.amazonaws.services.kinesis.AmazonKinesisAsyncClient(com.amazonaws.auth.AWSCredentialsProvider, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #9                  // Field configFactory:Lcom/amazonaws/ClientConfigurationFactory;
       5: invokevirtual #10                 // Method com/amazonaws/ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       8: aload_2
       9: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      12: return

  public com.amazonaws.services.kinesis.AmazonKinesisAsyncClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method com/amazonaws/services/kinesis/AmazonKinesisClient."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;)V
       6: aload_0
       7: aload_3
       8: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      11: return

  com.amazonaws.services.kinesis.AmazonKinesisAsyncClient(com.amazonaws.client.AwsAsyncClientParams);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method com/amazonaws/services/kinesis/AmazonKinesisClient."<init>":(Lcom/amazonaws/client/AwsSyncClientParams;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #17                 // Method com/amazonaws/client/AwsAsyncClientParams.getExecutor:()Ljava/util/concurrent/ExecutorService;
      10: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      13: return

  public java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.AddTagsToStreamResult> addTagsToStreamAsync(com.amazonaws.services.kinesis.model.AddTagsToStreamRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #18                 // Method addTagsToStreamAsync:(Lcom/amazonaws/services/kinesis/model/AddTagsToStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.AddTagsToStreamResult> addTagsToStreamAsync(com.amazonaws.services.kinesis.model.AddTagsToStreamRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.AddTagsToStreamRequest, com.amazonaws.services.kinesis.model.AddTagsToStreamResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #19                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$1
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #20                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$1."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/AddTagsToStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.CreateStreamResult> createStreamAsync(com.amazonaws.services.kinesis.model.CreateStreamRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #22                 // Method createStreamAsync:(Lcom/amazonaws/services/kinesis/model/CreateStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.CreateStreamResult> createStreamAsync(com.amazonaws.services.kinesis.model.CreateStreamRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.CreateStreamRequest, com.amazonaws.services.kinesis.model.CreateStreamResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #23                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$2
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #24                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$2."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/CreateStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.CreateStreamResult> createStreamAsync(java.lang.String, java.lang.Integer);
    Code:
       0: aload_0
       1: new           #25                 // class com/amazonaws/services/kinesis/model/CreateStreamRequest
       4: dup
       5: invokespecial #26                 // Method com/amazonaws/services/kinesis/model/CreateStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #27                 // Method com/amazonaws/services/kinesis/model/CreateStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/CreateStreamRequest;
      12: aload_2
      13: invokevirtual #28                 // Method com/amazonaws/services/kinesis/model/CreateStreamRequest.withShardCount:(Ljava/lang/Integer;)Lcom/amazonaws/services/kinesis/model/CreateStreamRequest;
      16: invokevirtual #29                 // Method createStreamAsync:(Lcom/amazonaws/services/kinesis/model/CreateStreamRequest;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.CreateStreamResult> createStreamAsync(java.lang.String, java.lang.Integer, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.CreateStreamRequest, com.amazonaws.services.kinesis.model.CreateStreamResult>);
    Code:
       0: aload_0
       1: new           #25                 // class com/amazonaws/services/kinesis/model/CreateStreamRequest
       4: dup
       5: invokespecial #26                 // Method com/amazonaws/services/kinesis/model/CreateStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #27                 // Method com/amazonaws/services/kinesis/model/CreateStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/CreateStreamRequest;
      12: aload_2
      13: invokevirtual #28                 // Method com/amazonaws/services/kinesis/model/CreateStreamRequest.withShardCount:(Ljava/lang/Integer;)Lcom/amazonaws/services/kinesis/model/CreateStreamRequest;
      16: aload_3
      17: invokevirtual #22                 // Method createStreamAsync:(Lcom/amazonaws/services/kinesis/model/CreateStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      20: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DecreaseStreamRetentionPeriodResult> decreaseStreamRetentionPeriodAsync(com.amazonaws.services.kinesis.model.DecreaseStreamRetentionPeriodRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #30                 // Method decreaseStreamRetentionPeriodAsync:(Lcom/amazonaws/services/kinesis/model/DecreaseStreamRetentionPeriodRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DecreaseStreamRetentionPeriodResult> decreaseStreamRetentionPeriodAsync(com.amazonaws.services.kinesis.model.DecreaseStreamRetentionPeriodRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.DecreaseStreamRetentionPeriodRequest, com.amazonaws.services.kinesis.model.DecreaseStreamRetentionPeriodResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #31                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$3
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #32                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$3."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/DecreaseStreamRetentionPeriodRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DeleteStreamResult> deleteStreamAsync(com.amazonaws.services.kinesis.model.DeleteStreamRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #33                 // Method deleteStreamAsync:(Lcom/amazonaws/services/kinesis/model/DeleteStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DeleteStreamResult> deleteStreamAsync(com.amazonaws.services.kinesis.model.DeleteStreamRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.DeleteStreamRequest, com.amazonaws.services.kinesis.model.DeleteStreamResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #34                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$4
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #35                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$4."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/DeleteStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DeleteStreamResult> deleteStreamAsync(java.lang.String);
    Code:
       0: aload_0
       1: new           #36                 // class com/amazonaws/services/kinesis/model/DeleteStreamRequest
       4: dup
       5: invokespecial #37                 // Method com/amazonaws/services/kinesis/model/DeleteStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #38                 // Method com/amazonaws/services/kinesis/model/DeleteStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DeleteStreamRequest;
      12: invokevirtual #39                 // Method deleteStreamAsync:(Lcom/amazonaws/services/kinesis/model/DeleteStreamRequest;)Ljava/util/concurrent/Future;
      15: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DeleteStreamResult> deleteStreamAsync(java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.DeleteStreamRequest, com.amazonaws.services.kinesis.model.DeleteStreamResult>);
    Code:
       0: aload_0
       1: new           #36                 // class com/amazonaws/services/kinesis/model/DeleteStreamRequest
       4: dup
       5: invokespecial #37                 // Method com/amazonaws/services/kinesis/model/DeleteStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #38                 // Method com/amazonaws/services/kinesis/model/DeleteStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DeleteStreamRequest;
      12: aload_2
      13: invokevirtual #33                 // Method deleteStreamAsync:(Lcom/amazonaws/services/kinesis/model/DeleteStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      16: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DescribeStreamResult> describeStreamAsync(com.amazonaws.services.kinesis.model.DescribeStreamRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #40                 // Method describeStreamAsync:(Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DescribeStreamResult> describeStreamAsync(com.amazonaws.services.kinesis.model.DescribeStreamRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.DescribeStreamRequest, com.amazonaws.services.kinesis.model.DescribeStreamResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #41                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$5
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #42                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$5."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DescribeStreamResult> describeStreamAsync(java.lang.String);
    Code:
       0: aload_0
       1: new           #43                 // class com/amazonaws/services/kinesis/model/DescribeStreamRequest
       4: dup
       5: invokespecial #44                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #45                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      12: invokevirtual #46                 // Method describeStreamAsync:(Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;)Ljava/util/concurrent/Future;
      15: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DescribeStreamResult> describeStreamAsync(java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.DescribeStreamRequest, com.amazonaws.services.kinesis.model.DescribeStreamResult>);
    Code:
       0: aload_0
       1: new           #43                 // class com/amazonaws/services/kinesis/model/DescribeStreamRequest
       4: dup
       5: invokespecial #44                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #45                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      12: aload_2
      13: invokevirtual #40                 // Method describeStreamAsync:(Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      16: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DescribeStreamResult> describeStreamAsync(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #43                 // class com/amazonaws/services/kinesis/model/DescribeStreamRequest
       4: dup
       5: invokespecial #44                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #45                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      12: aload_2
      13: invokevirtual #47                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withExclusiveStartShardId:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      16: invokevirtual #46                 // Method describeStreamAsync:(Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DescribeStreamResult> describeStreamAsync(java.lang.String, java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.DescribeStreamRequest, com.amazonaws.services.kinesis.model.DescribeStreamResult>);
    Code:
       0: aload_0
       1: new           #43                 // class com/amazonaws/services/kinesis/model/DescribeStreamRequest
       4: dup
       5: invokespecial #44                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #45                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      12: aload_2
      13: invokevirtual #47                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withExclusiveStartShardId:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      16: aload_3
      17: invokevirtual #40                 // Method describeStreamAsync:(Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      20: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DescribeStreamResult> describeStreamAsync(java.lang.String, java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: new           #43                 // class com/amazonaws/services/kinesis/model/DescribeStreamRequest
       4: dup
       5: invokespecial #44                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #45                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      12: aload_2
      13: invokevirtual #48                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withLimit:(Ljava/lang/Integer;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      16: aload_3
      17: invokevirtual #47                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withExclusiveStartShardId:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      20: invokevirtual #46                 // Method describeStreamAsync:(Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;)Ljava/util/concurrent/Future;
      23: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DescribeStreamResult> describeStreamAsync(java.lang.String, java.lang.Integer, java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.DescribeStreamRequest, com.amazonaws.services.kinesis.model.DescribeStreamResult>);
    Code:
       0: aload_0
       1: new           #43                 // class com/amazonaws/services/kinesis/model/DescribeStreamRequest
       4: dup
       5: invokespecial #44                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest."<init>":()V
       8: aload_1
       9: invokevirtual #45                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      12: aload_2
      13: invokevirtual #48                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withLimit:(Ljava/lang/Integer;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      16: aload_3
      17: invokevirtual #47                 // Method com/amazonaws/services/kinesis/model/DescribeStreamRequest.withExclusiveStartShardId:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;
      20: aload         4
      22: invokevirtual #40                 // Method describeStreamAsync:(Lcom/amazonaws/services/kinesis/model/DescribeStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      25: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult> disableEnhancedMonitoringAsync(com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #49                 // Method disableEnhancedMonitoringAsync:(Lcom/amazonaws/services/kinesis/model/DisableEnhancedMonitoringRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult> disableEnhancedMonitoringAsync(com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringRequest, com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #50                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$6
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #51                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$6."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/DisableEnhancedMonitoringRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult> enableEnhancedMonitoringAsync(com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #52                 // Method enableEnhancedMonitoringAsync:(Lcom/amazonaws/services/kinesis/model/EnableEnhancedMonitoringRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult> enableEnhancedMonitoringAsync(com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringRequest, com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #53                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$7
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #54                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$7."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/EnableEnhancedMonitoringRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.GetRecordsResult> getRecordsAsync(com.amazonaws.services.kinesis.model.GetRecordsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #55                 // Method getRecordsAsync:(Lcom/amazonaws/services/kinesis/model/GetRecordsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.GetRecordsResult> getRecordsAsync(com.amazonaws.services.kinesis.model.GetRecordsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.GetRecordsRequest, com.amazonaws.services.kinesis.model.GetRecordsResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #56                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$8
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #57                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$8."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/GetRecordsRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.GetShardIteratorResult> getShardIteratorAsync(com.amazonaws.services.kinesis.model.GetShardIteratorRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #58                 // Method getShardIteratorAsync:(Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.GetShardIteratorResult> getShardIteratorAsync(com.amazonaws.services.kinesis.model.GetShardIteratorRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.GetShardIteratorRequest, com.amazonaws.services.kinesis.model.GetShardIteratorResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #59                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$9
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #60                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$9."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.GetShardIteratorResult> getShardIteratorAsync(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #61                 // class com/amazonaws/services/kinesis/model/GetShardIteratorRequest
       4: dup
       5: invokespecial #62                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest."<init>":()V
       8: aload_1
       9: invokevirtual #63                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      12: aload_2
      13: invokevirtual #64                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withShardId:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      16: aload_3
      17: invokevirtual #65                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withShardIteratorType:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      20: invokevirtual #66                 // Method getShardIteratorAsync:(Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;)Ljava/util/concurrent/Future;
      23: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.GetShardIteratorResult> getShardIteratorAsync(java.lang.String, java.lang.String, java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.GetShardIteratorRequest, com.amazonaws.services.kinesis.model.GetShardIteratorResult>);
    Code:
       0: aload_0
       1: new           #61                 // class com/amazonaws/services/kinesis/model/GetShardIteratorRequest
       4: dup
       5: invokespecial #62                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest."<init>":()V
       8: aload_1
       9: invokevirtual #63                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      12: aload_2
      13: invokevirtual #64                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withShardId:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      16: aload_3
      17: invokevirtual #65                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withShardIteratorType:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      20: aload         4
      22: invokevirtual #58                 // Method getShardIteratorAsync:(Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      25: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.GetShardIteratorResult> getShardIteratorAsync(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #61                 // class com/amazonaws/services/kinesis/model/GetShardIteratorRequest
       4: dup
       5: invokespecial #62                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest."<init>":()V
       8: aload_1
       9: invokevirtual #63                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      12: aload_2
      13: invokevirtual #64                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withShardId:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      16: aload_3
      17: invokevirtual #65                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withShardIteratorType:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      20: aload         4
      22: invokevirtual #67                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withStartingSequenceNumber:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      25: invokevirtual #66                 // Method getShardIteratorAsync:(Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;)Ljava/util/concurrent/Future;
      28: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.GetShardIteratorResult> getShardIteratorAsync(java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.GetShardIteratorRequest, com.amazonaws.services.kinesis.model.GetShardIteratorResult>);
    Code:
       0: aload_0
       1: new           #61                 // class com/amazonaws/services/kinesis/model/GetShardIteratorRequest
       4: dup
       5: invokespecial #62                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest."<init>":()V
       8: aload_1
       9: invokevirtual #63                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      12: aload_2
      13: invokevirtual #64                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withShardId:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      16: aload_3
      17: invokevirtual #65                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withShardIteratorType:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      20: aload         4
      22: invokevirtual #67                 // Method com/amazonaws/services/kinesis/model/GetShardIteratorRequest.withStartingSequenceNumber:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;
      25: aload         5
      27: invokevirtual #58                 // Method getShardIteratorAsync:(Lcom/amazonaws/services/kinesis/model/GetShardIteratorRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      30: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.IncreaseStreamRetentionPeriodResult> increaseStreamRetentionPeriodAsync(com.amazonaws.services.kinesis.model.IncreaseStreamRetentionPeriodRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #68                 // Method increaseStreamRetentionPeriodAsync:(Lcom/amazonaws/services/kinesis/model/IncreaseStreamRetentionPeriodRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.IncreaseStreamRetentionPeriodResult> increaseStreamRetentionPeriodAsync(com.amazonaws.services.kinesis.model.IncreaseStreamRetentionPeriodRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.IncreaseStreamRetentionPeriodRequest, com.amazonaws.services.kinesis.model.IncreaseStreamRetentionPeriodResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #69                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$10
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #70                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$10."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/IncreaseStreamRetentionPeriodRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListStreamsResult> listStreamsAsync(com.amazonaws.services.kinesis.model.ListStreamsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #71                 // Method listStreamsAsync:(Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListStreamsResult> listStreamsAsync(com.amazonaws.services.kinesis.model.ListStreamsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.ListStreamsRequest, com.amazonaws.services.kinesis.model.ListStreamsResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #72                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$11
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #73                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$11."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListStreamsResult> listStreamsAsync();
    Code:
       0: aload_0
       1: new           #74                 // class com/amazonaws/services/kinesis/model/ListStreamsRequest
       4: dup
       5: invokespecial #75                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest."<init>":()V
       8: invokevirtual #76                 // Method listStreamsAsync:(Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;)Ljava/util/concurrent/Future;
      11: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListStreamsResult> listStreamsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.ListStreamsRequest, com.amazonaws.services.kinesis.model.ListStreamsResult>);
    Code:
       0: aload_0
       1: new           #74                 // class com/amazonaws/services/kinesis/model/ListStreamsRequest
       4: dup
       5: invokespecial #75                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest."<init>":()V
       8: aload_1
       9: invokevirtual #71                 // Method listStreamsAsync:(Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      12: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListStreamsResult> listStreamsAsync(java.lang.String);
    Code:
       0: aload_0
       1: new           #74                 // class com/amazonaws/services/kinesis/model/ListStreamsRequest
       4: dup
       5: invokespecial #75                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest."<init>":()V
       8: aload_1
       9: invokevirtual #77                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest.withExclusiveStartStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;
      12: invokevirtual #76                 // Method listStreamsAsync:(Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;)Ljava/util/concurrent/Future;
      15: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListStreamsResult> listStreamsAsync(java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.ListStreamsRequest, com.amazonaws.services.kinesis.model.ListStreamsResult>);
    Code:
       0: aload_0
       1: new           #74                 // class com/amazonaws/services/kinesis/model/ListStreamsRequest
       4: dup
       5: invokespecial #75                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest."<init>":()V
       8: aload_1
       9: invokevirtual #77                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest.withExclusiveStartStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;
      12: aload_2
      13: invokevirtual #71                 // Method listStreamsAsync:(Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      16: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListStreamsResult> listStreamsAsync(java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: new           #74                 // class com/amazonaws/services/kinesis/model/ListStreamsRequest
       4: dup
       5: invokespecial #75                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest."<init>":()V
       8: aload_1
       9: invokevirtual #78                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest.withLimit:(Ljava/lang/Integer;)Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;
      12: aload_2
      13: invokevirtual #77                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest.withExclusiveStartStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;
      16: invokevirtual #76                 // Method listStreamsAsync:(Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListStreamsResult> listStreamsAsync(java.lang.Integer, java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.ListStreamsRequest, com.amazonaws.services.kinesis.model.ListStreamsResult>);
    Code:
       0: aload_0
       1: new           #74                 // class com/amazonaws/services/kinesis/model/ListStreamsRequest
       4: dup
       5: invokespecial #75                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest."<init>":()V
       8: aload_1
       9: invokevirtual #78                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest.withLimit:(Ljava/lang/Integer;)Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;
      12: aload_2
      13: invokevirtual #77                 // Method com/amazonaws/services/kinesis/model/ListStreamsRequest.withExclusiveStartStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;
      16: aload_3
      17: invokevirtual #71                 // Method listStreamsAsync:(Lcom/amazonaws/services/kinesis/model/ListStreamsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      20: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListTagsForStreamResult> listTagsForStreamAsync(com.amazonaws.services.kinesis.model.ListTagsForStreamRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #79                 // Method listTagsForStreamAsync:(Lcom/amazonaws/services/kinesis/model/ListTagsForStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.ListTagsForStreamResult> listTagsForStreamAsync(com.amazonaws.services.kinesis.model.ListTagsForStreamRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.ListTagsForStreamRequest, com.amazonaws.services.kinesis.model.ListTagsForStreamResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #80                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$12
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #81                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$12."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/ListTagsForStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.MergeShardsResult> mergeShardsAsync(com.amazonaws.services.kinesis.model.MergeShardsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #82                 // Method mergeShardsAsync:(Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.MergeShardsResult> mergeShardsAsync(com.amazonaws.services.kinesis.model.MergeShardsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.MergeShardsRequest, com.amazonaws.services.kinesis.model.MergeShardsResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #83                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$13
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #84                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$13."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.MergeShardsResult> mergeShardsAsync(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #85                 // class com/amazonaws/services/kinesis/model/MergeShardsRequest
       4: dup
       5: invokespecial #86                 // Method com/amazonaws/services/kinesis/model/MergeShardsRequest."<init>":()V
       8: aload_1
       9: invokevirtual #87                 // Method com/amazonaws/services/kinesis/model/MergeShardsRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;
      12: aload_2
      13: invokevirtual #88                 // Method com/amazonaws/services/kinesis/model/MergeShardsRequest.withShardToMerge:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;
      16: aload_3
      17: invokevirtual #89                 // Method com/amazonaws/services/kinesis/model/MergeShardsRequest.withAdjacentShardToMerge:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;
      20: invokevirtual #90                 // Method mergeShardsAsync:(Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;)Ljava/util/concurrent/Future;
      23: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.MergeShardsResult> mergeShardsAsync(java.lang.String, java.lang.String, java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.MergeShardsRequest, com.amazonaws.services.kinesis.model.MergeShardsResult>);
    Code:
       0: aload_0
       1: new           #85                 // class com/amazonaws/services/kinesis/model/MergeShardsRequest
       4: dup
       5: invokespecial #86                 // Method com/amazonaws/services/kinesis/model/MergeShardsRequest."<init>":()V
       8: aload_1
       9: invokevirtual #87                 // Method com/amazonaws/services/kinesis/model/MergeShardsRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;
      12: aload_2
      13: invokevirtual #88                 // Method com/amazonaws/services/kinesis/model/MergeShardsRequest.withShardToMerge:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;
      16: aload_3
      17: invokevirtual #89                 // Method com/amazonaws/services/kinesis/model/MergeShardsRequest.withAdjacentShardToMerge:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;
      20: aload         4
      22: invokevirtual #82                 // Method mergeShardsAsync:(Lcom/amazonaws/services/kinesis/model/MergeShardsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      25: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.PutRecordResult> putRecordAsync(com.amazonaws.services.kinesis.model.PutRecordRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #91                 // Method putRecordAsync:(Lcom/amazonaws/services/kinesis/model/PutRecordRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.PutRecordResult> putRecordAsync(com.amazonaws.services.kinesis.model.PutRecordRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.PutRecordRequest, com.amazonaws.services.kinesis.model.PutRecordResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #92                 // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$14
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #93                 // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$14."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/PutRecordRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.PutRecordResult> putRecordAsync(java.lang.String, java.nio.ByteBuffer, java.lang.String);
    Code:
       0: aload_0
       1: new           #94                 // class com/amazonaws/services/kinesis/model/PutRecordRequest
       4: dup
       5: invokespecial #95                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest."<init>":()V
       8: aload_1
       9: invokevirtual #96                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      12: aload_2
      13: invokevirtual #97                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withData:(Ljava/nio/ByteBuffer;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      16: aload_3
      17: invokevirtual #98                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withPartitionKey:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      20: invokevirtual #99                 // Method putRecordAsync:(Lcom/amazonaws/services/kinesis/model/PutRecordRequest;)Ljava/util/concurrent/Future;
      23: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.PutRecordResult> putRecordAsync(java.lang.String, java.nio.ByteBuffer, java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.PutRecordRequest, com.amazonaws.services.kinesis.model.PutRecordResult>);
    Code:
       0: aload_0
       1: new           #94                 // class com/amazonaws/services/kinesis/model/PutRecordRequest
       4: dup
       5: invokespecial #95                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest."<init>":()V
       8: aload_1
       9: invokevirtual #96                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      12: aload_2
      13: invokevirtual #97                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withData:(Ljava/nio/ByteBuffer;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      16: aload_3
      17: invokevirtual #98                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withPartitionKey:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      20: aload         4
      22: invokevirtual #91                 // Method putRecordAsync:(Lcom/amazonaws/services/kinesis/model/PutRecordRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      25: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.PutRecordResult> putRecordAsync(java.lang.String, java.nio.ByteBuffer, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #94                 // class com/amazonaws/services/kinesis/model/PutRecordRequest
       4: dup
       5: invokespecial #95                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest."<init>":()V
       8: aload_1
       9: invokevirtual #96                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      12: aload_2
      13: invokevirtual #97                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withData:(Ljava/nio/ByteBuffer;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      16: aload_3
      17: invokevirtual #98                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withPartitionKey:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      20: aload         4
      22: invokevirtual #100                // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withSequenceNumberForOrdering:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      25: invokevirtual #99                 // Method putRecordAsync:(Lcom/amazonaws/services/kinesis/model/PutRecordRequest;)Ljava/util/concurrent/Future;
      28: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.PutRecordResult> putRecordAsync(java.lang.String, java.nio.ByteBuffer, java.lang.String, java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.PutRecordRequest, com.amazonaws.services.kinesis.model.PutRecordResult>);
    Code:
       0: aload_0
       1: new           #94                 // class com/amazonaws/services/kinesis/model/PutRecordRequest
       4: dup
       5: invokespecial #95                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest."<init>":()V
       8: aload_1
       9: invokevirtual #96                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      12: aload_2
      13: invokevirtual #97                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withData:(Ljava/nio/ByteBuffer;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      16: aload_3
      17: invokevirtual #98                 // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withPartitionKey:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      20: aload         4
      22: invokevirtual #100                // Method com/amazonaws/services/kinesis/model/PutRecordRequest.withSequenceNumberForOrdering:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/PutRecordRequest;
      25: aload         5
      27: invokevirtual #91                 // Method putRecordAsync:(Lcom/amazonaws/services/kinesis/model/PutRecordRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      30: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.PutRecordsResult> putRecordsAsync(com.amazonaws.services.kinesis.model.PutRecordsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #101                // Method putRecordsAsync:(Lcom/amazonaws/services/kinesis/model/PutRecordsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.PutRecordsResult> putRecordsAsync(com.amazonaws.services.kinesis.model.PutRecordsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.PutRecordsRequest, com.amazonaws.services.kinesis.model.PutRecordsResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #102                // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$15
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #103                // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$15."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/PutRecordsRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.RemoveTagsFromStreamResult> removeTagsFromStreamAsync(com.amazonaws.services.kinesis.model.RemoveTagsFromStreamRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #104                // Method removeTagsFromStreamAsync:(Lcom/amazonaws/services/kinesis/model/RemoveTagsFromStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.RemoveTagsFromStreamResult> removeTagsFromStreamAsync(com.amazonaws.services.kinesis.model.RemoveTagsFromStreamRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.RemoveTagsFromStreamRequest, com.amazonaws.services.kinesis.model.RemoveTagsFromStreamResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #105                // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$16
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #106                // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$16."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/RemoveTagsFromStreamRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.SplitShardResult> splitShardAsync(com.amazonaws.services.kinesis.model.SplitShardRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #107                // Method splitShardAsync:(Lcom/amazonaws/services/kinesis/model/SplitShardRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.SplitShardResult> splitShardAsync(com.amazonaws.services.kinesis.model.SplitShardRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.SplitShardRequest, com.amazonaws.services.kinesis.model.SplitShardResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #108                // class com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$17
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #109                // Method com/amazonaws/services/kinesis/AmazonKinesisAsyncClient$17."<init>":(Lcom/amazonaws/services/kinesis/AmazonKinesisAsyncClient;Lcom/amazonaws/services/kinesis/model/SplitShardRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.SplitShardResult> splitShardAsync(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #110                // class com/amazonaws/services/kinesis/model/SplitShardRequest
       4: dup
       5: invokespecial #111                // Method com/amazonaws/services/kinesis/model/SplitShardRequest."<init>":()V
       8: aload_1
       9: invokevirtual #112                // Method com/amazonaws/services/kinesis/model/SplitShardRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/SplitShardRequest;
      12: aload_2
      13: invokevirtual #113                // Method com/amazonaws/services/kinesis/model/SplitShardRequest.withShardToSplit:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/SplitShardRequest;
      16: aload_3
      17: invokevirtual #114                // Method com/amazonaws/services/kinesis/model/SplitShardRequest.withNewStartingHashKey:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/SplitShardRequest;
      20: invokevirtual #115                // Method splitShardAsync:(Lcom/amazonaws/services/kinesis/model/SplitShardRequest;)Ljava/util/concurrent/Future;
      23: areturn

  public java.util.concurrent.Future<com.amazonaws.services.kinesis.model.SplitShardResult> splitShardAsync(java.lang.String, java.lang.String, java.lang.String, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.kinesis.model.SplitShardRequest, com.amazonaws.services.kinesis.model.SplitShardResult>);
    Code:
       0: aload_0
       1: new           #110                // class com/amazonaws/services/kinesis/model/SplitShardRequest
       4: dup
       5: invokespecial #111                // Method com/amazonaws/services/kinesis/model/SplitShardRequest."<init>":()V
       8: aload_1
       9: invokevirtual #112                // Method com/amazonaws/services/kinesis/model/SplitShardRequest.withStreamName:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/SplitShardRequest;
      12: aload_2
      13: invokevirtual #113                // Method com/amazonaws/services/kinesis/model/SplitShardRequest.withShardToSplit:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/SplitShardRequest;
      16: aload_3
      17: invokevirtual #114                // Method com/amazonaws/services/kinesis/model/SplitShardRequest.withNewStartingHashKey:(Ljava/lang/String;)Lcom/amazonaws/services/kinesis/model/SplitShardRequest;
      20: aload         4
      22: invokevirtual #107                // Method splitShardAsync:(Lcom/amazonaws/services/kinesis/model/SplitShardRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
      25: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: invokespecial #116                // Method com/amazonaws/services/kinesis/AmazonKinesisClient.shutdown:()V
       4: aload_0
       5: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       8: invokeinterface #117,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
      13: pop
      14: return
}
