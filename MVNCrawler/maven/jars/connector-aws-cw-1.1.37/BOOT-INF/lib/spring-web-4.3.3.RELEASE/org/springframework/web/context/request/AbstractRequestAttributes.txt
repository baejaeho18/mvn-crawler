Compiled from "AbstractRequestAttributes.java"
public abstract class org.springframework.web.context.request.AbstractRequestAttributes implements org.springframework.web.context.request.RequestAttributes {
  protected final java.util.Map<java.lang.String, java.lang.Runnable> requestDestructionCallbacks;

  private volatile boolean requestActive;

  public org.springframework.web.context.request.AbstractRequestAttributes();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: bipush        8
      11: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":(I)V
      14: putfield      #4                  // Field requestDestructionCallbacks:Ljava/util/Map;
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field requestActive:Z
      22: return

  public void requestCompleted();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method executeRequestDestructionCallbacks:()V
       4: aload_0
       5: invokevirtual #7                  // Method updateAccessedSessionAttributes:()V
       8: aload_0
       9: iconst_0
      10: putfield      #5                  // Field requestActive:Z
      13: return

  protected final boolean isRequestActive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestActive:Z
       4: ireturn

  protected final void registerRequestDestructionCallback(java.lang.String, java.lang.Runnable);
    Code:
       0: aload_1
       1: ldc           #8                  // String Name must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #10                 // String Callback must not be null
       9: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #4                  // Field requestDestructionCallbacks:Ljava/util/Map;
      16: dup
      17: astore_3
      18: monitorenter
      19: aload_0
      20: getfield      #4                  // Field requestDestructionCallbacks:Ljava/util/Map;
      23: aload_1
      24: aload_2
      25: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_3
      32: monitorexit
      33: goto          43
      36: astore        4
      38: aload_3
      39: monitorexit
      40: aload         4
      42: athrow
      43: return
    Exception table:
       from    to  target type
          19    33    36   any
          36    40    36   any

  protected final void removeRequestDestructionCallback(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #8                  // String Name must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field requestDestructionCallbacks:Ljava/util/Map;
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #4                  // Field requestDestructionCallbacks:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #12,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_2
      25: monitorexit
      26: goto          34
      29: astore_3
      30: aload_2
      31: monitorexit
      32: aload_3
      33: athrow
      34: return
    Exception table:
       from    to  target type
          13    26    29   any
          29    32    29   any

  private void executeRequestDestructionCallbacks();
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestDestructionCallbacks:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field requestDestructionCallbacks:Ljava/util/Map;
      11: invokeinterface #13,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      16: invokeinterface #14,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          50
      31: aload_2
      32: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #17                 // class java/lang/Runnable
      40: astore_3
      41: aload_3
      42: invokeinterface #18,  1           // InterfaceMethod java/lang/Runnable.run:()V
      47: goto          22
      50: aload_0
      51: getfield      #4                  // Field requestDestructionCallbacks:Ljava/util/Map;
      54: invokeinterface #19,  1           // InterfaceMethod java/util/Map.clear:()V
      59: aload_1
      60: monitorexit
      61: goto          71
      64: astore        4
      66: aload_1
      67: monitorexit
      68: aload         4
      70: athrow
      71: return
    Exception table:
       from    to  target type
           7    61    64   any
          64    68    64   any

  protected abstract void updateAccessedSessionAttributes();
}
