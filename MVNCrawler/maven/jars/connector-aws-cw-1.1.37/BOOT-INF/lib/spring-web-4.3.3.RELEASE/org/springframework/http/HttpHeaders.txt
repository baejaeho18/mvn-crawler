Compiled from "HttpHeaders.java"
public class org.springframework.http.HttpHeaders implements org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>, java.io.Serializable {
  private static final long serialVersionUID;

  public static final java.lang.String ACCEPT;

  public static final java.lang.String ACCEPT_CHARSET;

  public static final java.lang.String ACCEPT_ENCODING;

  public static final java.lang.String ACCEPT_LANGUAGE;

  public static final java.lang.String ACCEPT_RANGES;

  public static final java.lang.String ACCESS_CONTROL_ALLOW_CREDENTIALS;

  public static final java.lang.String ACCESS_CONTROL_ALLOW_HEADERS;

  public static final java.lang.String ACCESS_CONTROL_ALLOW_METHODS;

  public static final java.lang.String ACCESS_CONTROL_ALLOW_ORIGIN;

  public static final java.lang.String ACCESS_CONTROL_EXPOSE_HEADERS;

  public static final java.lang.String ACCESS_CONTROL_MAX_AGE;

  public static final java.lang.String ACCESS_CONTROL_REQUEST_HEADERS;

  public static final java.lang.String ACCESS_CONTROL_REQUEST_METHOD;

  public static final java.lang.String AGE;

  public static final java.lang.String ALLOW;

  public static final java.lang.String AUTHORIZATION;

  public static final java.lang.String CACHE_CONTROL;

  public static final java.lang.String CONNECTION;

  public static final java.lang.String CONTENT_ENCODING;

  public static final java.lang.String CONTENT_DISPOSITION;

  public static final java.lang.String CONTENT_LANGUAGE;

  public static final java.lang.String CONTENT_LENGTH;

  public static final java.lang.String CONTENT_LOCATION;

  public static final java.lang.String CONTENT_RANGE;

  public static final java.lang.String CONTENT_TYPE;

  public static final java.lang.String COOKIE;

  public static final java.lang.String DATE;

  public static final java.lang.String ETAG;

  public static final java.lang.String EXPECT;

  public static final java.lang.String EXPIRES;

  public static final java.lang.String FROM;

  public static final java.lang.String HOST;

  public static final java.lang.String IF_MATCH;

  public static final java.lang.String IF_MODIFIED_SINCE;

  public static final java.lang.String IF_NONE_MATCH;

  public static final java.lang.String IF_RANGE;

  public static final java.lang.String IF_UNMODIFIED_SINCE;

  public static final java.lang.String LAST_MODIFIED;

  public static final java.lang.String LINK;

  public static final java.lang.String LOCATION;

  public static final java.lang.String MAX_FORWARDS;

  public static final java.lang.String ORIGIN;

  public static final java.lang.String PRAGMA;

  public static final java.lang.String PROXY_AUTHENTICATE;

  public static final java.lang.String PROXY_AUTHORIZATION;

  public static final java.lang.String RANGE;

  public static final java.lang.String REFERER;

  public static final java.lang.String RETRY_AFTER;

  public static final java.lang.String SERVER;

  public static final java.lang.String SET_COOKIE;

  public static final java.lang.String SET_COOKIE2;

  public static final java.lang.String TE;

  public static final java.lang.String TRAILER;

  public static final java.lang.String TRANSFER_ENCODING;

  public static final java.lang.String UPGRADE;

  public static final java.lang.String USER_AGENT;

  public static final java.lang.String VARY;

  public static final java.lang.String VIA;

  public static final java.lang.String WARNING;

  public static final java.lang.String WWW_AUTHENTICATE;

  private static final java.lang.String[] DATE_FORMATS;

  private static final java.util.regex.Pattern ETAG_HEADER_VALUE_PATTERN;

  private static java.util.TimeZone GMT;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  public org.springframework.http.HttpHeaders();
    Code:
       0: aload_0
       1: new           #1                  // class org/springframework/util/LinkedCaseInsensitiveMap
       4: dup
       5: bipush        8
       7: getstatic     #2                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      10: invokespecial #3                  // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":(ILjava/util/Locale;)V
      13: iconst_0
      14: invokespecial #4                  // Method "<init>":(Ljava/util/Map;Z)V
      17: return

  private org.springframework.http.HttpHeaders(java.util.Map<java.lang.String, java.util.List<java.lang.String>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #6                  // String \'headers\' must not be null
       7: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: iload_2
      11: ifeq          111
      14: new           #1                  // class org/springframework/util/LinkedCaseInsensitiveMap
      17: dup
      18: aload_1
      19: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
      24: getstatic     #2                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      27: invokespecial #3                  // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":(ILjava/util/Locale;)V
      30: astore_3
      31: aload_1
      32: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      37: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          100
      54: aload         4
      56: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #13                 // class java/util/Map$Entry
      64: astore        5
      66: aload         5
      68: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      73: checkcast     #15                 // class java/util/List
      76: invokestatic  #16                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      79: astore        6
      81: aload_3
      82: aload         5
      84: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      89: aload         6
      91: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: goto          44
     100: aload_0
     101: aload_3
     102: invokestatic  #19                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     105: putfield      #20                 // Field headers:Ljava/util/Map;
     108: goto          116
     111: aload_0
     112: aload_1
     113: putfield      #20                 // Field headers:Ljava/util/Map;
     116: return

  public void setAccept(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: ldc           #22                 // String Accept
       3: aload_1
       4: invokestatic  #23                 // Method org/springframework/http/MediaType.toString:(Ljava/util/Collection;)Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.util.List<org.springframework.http.MediaType> getAccept();
    Code:
       0: aload_0
       1: ldc           #22                 // String Accept
       3: invokevirtual #25                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       6: invokestatic  #26                 // Method org/springframework/http/MediaType.parseMediaTypes:(Ljava/util/List;)Ljava/util/List;
       9: areturn

  public void setAccessControlAllowCredentials(boolean);
    Code:
       0: aload_0
       1: ldc           #27                 // String Access-Control-Allow-Credentials
       3: iload_1
       4: invokestatic  #28                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public boolean getAccessControlAllowCredentials();
    Code:
       0: aload_0
       1: ldc           #27                 // String Access-Control-Allow-Credentials
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #30                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       9: ireturn

  public void setAccessControlAllowHeaders(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #31                 // String Access-Control-Allow-Headers
       3: aload_0
       4: aload_1
       5: invokevirtual #32                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getAccessControlAllowHeaders();
    Code:
       0: aload_0
       1: ldc           #31                 // String Access-Control-Allow-Headers
       3: invokevirtual #33                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setAccessControlAllowMethods(java.util.List<org.springframework.http.HttpMethod>);
    Code:
       0: aload_0
       1: ldc           #34                 // String Access-Control-Allow-Methods
       3: aload_1
       4: invokestatic  #35                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.util.List<org.springframework.http.HttpMethod> getAccessControlAllowMethods();
    Code:
       0: new           #36                 // class java/util/ArrayList
       3: dup
       4: invokespecial #37                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: ldc           #34                 // String Access-Control-Allow-Methods
      11: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: ifnull        78
      19: aload_2
      20: ldc           #38                 // String ,
      22: invokestatic  #39                 // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: astore        4
      29: aload         4
      31: arraylength
      32: istore        5
      34: iconst_0
      35: istore        6
      37: iload         6
      39: iload         5
      41: if_icmpge     78
      44: aload         4
      46: iload         6
      48: aaload
      49: astore        7
      51: aload         7
      53: invokestatic  #40                 // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
      56: astore        8
      58: aload         8
      60: ifnull        72
      63: aload_1
      64: aload         8
      66: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: iinc          6, 1
      75: goto          37
      78: aload_1
      79: areturn

  public void setAccessControlAllowOrigin(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #42                 // String Access-Control-Allow-Origin
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getAccessControlAllowOrigin();
    Code:
       0: aload_0
       1: ldc           #42                 // String Access-Control-Allow-Origin
       3: invokevirtual #43                 // Method getFieldValues:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setAccessControlExposeHeaders(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #44                 // String Access-Control-Expose-Headers
       3: aload_0
       4: aload_1
       5: invokevirtual #32                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getAccessControlExposeHeaders();
    Code:
       0: aload_0
       1: ldc           #44                 // String Access-Control-Expose-Headers
       3: invokevirtual #33                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setAccessControlMaxAge(long);
    Code:
       0: aload_0
       1: ldc           #45                 // String Access-Control-Max-Age
       3: lload_1
       4: invokestatic  #46                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public long getAccessControlMaxAge();
    Code:
       0: aload_0
       1: ldc           #45                 // String Access-Control-Max-Age
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #47                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      15: goto          21
      18: ldc2_w        #48                 // long -1l
      21: lreturn

  public void setAccessControlRequestHeaders(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #50                 // String Access-Control-Request-Headers
       3: aload_0
       4: aload_1
       5: invokevirtual #32                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getAccessControlRequestHeaders();
    Code:
       0: aload_0
       1: ldc           #50                 // String Access-Control-Request-Headers
       3: invokevirtual #33                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setAccessControlRequestMethod(org.springframework.http.HttpMethod);
    Code:
       0: aload_0
       1: ldc           #51                 // String Access-Control-Request-Method
       3: aload_1
       4: invokevirtual #52                 // Method org/springframework/http/HttpMethod.name:()Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public org.springframework.http.HttpMethod getAccessControlRequestMethod();
    Code:
       0: aload_0
       1: ldc           #51                 // String Access-Control-Request-Method
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #40                 // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
       9: areturn

  public void setAcceptCharset(java.util.List<java.nio.charset.Charset>);
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #55,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          70
      24: aload_3
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #56                 // class java/nio/charset/Charset
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #57                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      41: getstatic     #2                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      44: invokevirtual #58                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      47: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_3
      52: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          67
      60: aload_2
      61: ldc           #60                 // String ,
      63: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: goto          15
      70: aload_0
      71: ldc           #61                 // String Accept-Charset
      73: aload_2
      74: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      80: return

  public java.util.List<java.nio.charset.Charset> getAcceptCharset();
    Code:
       0: aload_0
       1: ldc           #61                 // String Accept-Charset
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        115
      11: aload_1
      12: ldc           #38                 // String ,
      14: invokestatic  #39                 // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      17: astore_2
      18: new           #36                 // class java/util/ArrayList
      21: dup
      22: aload_2
      23: arraylength
      24: invokespecial #63                 // Method java/util/ArrayList."<init>":(I)V
      27: astore_3
      28: aload_2
      29: astore        4
      31: aload         4
      33: arraylength
      34: istore        5
      36: iconst_0
      37: istore        6
      39: iload         6
      41: iload         5
      43: if_icmpge     113
      46: aload         4
      48: iload         6
      50: aaload
      51: astore        7
      53: aload         7
      55: bipush        59
      57: invokevirtual #64                 // Method java/lang/String.indexOf:(I)I
      60: istore        8
      62: iload         8
      64: iconst_m1
      65: if_icmpne     75
      68: aload         7
      70: astore        9
      72: goto          85
      75: aload         7
      77: iconst_0
      78: iload         8
      80: invokevirtual #65                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      83: astore        9
      85: aload         9
      87: ldc           #66                 // String *
      89: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      92: ifne          107
      95: aload_3
      96: aload         9
      98: invokestatic  #68                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     101: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     106: pop
     107: iinc          6, 1
     110: goto          39
     113: aload_3
     114: areturn
     115: invokestatic  #69                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     118: areturn

  public void setAllow(java.util.Set<org.springframework.http.HttpMethod>);
    Code:
       0: aload_0
       1: ldc           #70                 // String Allow
       3: aload_1
       4: invokestatic  #35                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.util.Set<org.springframework.http.HttpMethod> getAllow();
    Code:
       0: aload_0
       1: ldc           #70                 // String Allow
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #71                 // Method org/springframework/util/StringUtils.isEmpty:(Ljava/lang/Object;)Z
      11: ifne          88
      14: aload_1
      15: ldc           #38                 // String ,
      17: invokestatic  #39                 // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      20: astore_2
      21: new           #36                 // class java/util/ArrayList
      24: dup
      25: aload_2
      26: arraylength
      27: invokespecial #63                 // Method java/util/ArrayList."<init>":(I)V
      30: astore_3
      31: aload_2
      32: astore        4
      34: aload         4
      36: arraylength
      37: istore        5
      39: iconst_0
      40: istore        6
      42: iload         6
      44: iload         5
      46: if_icmpge     83
      49: aload         4
      51: iload         6
      53: aaload
      54: astore        7
      56: aload         7
      58: invokestatic  #40                 // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
      61: astore        8
      63: aload         8
      65: ifnull        77
      68: aload_3
      69: aload         8
      71: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: iinc          6, 1
      80: goto          42
      83: aload_3
      84: invokestatic  #72                 // Method java/util/EnumSet.copyOf:(Ljava/util/Collection;)Ljava/util/EnumSet;
      87: areturn
      88: ldc           #73                 // class org/springframework/http/HttpMethod
      90: invokestatic  #74                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      93: areturn

  public void setCacheControl(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #75                 // String Cache-Control
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getCacheControl();
    Code:
       0: aload_0
       1: ldc           #75                 // String Cache-Control
       3: invokevirtual #43                 // Method getFieldValues:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setConnection(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #76                 // String Connection
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setConnection(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #76                 // String Connection
       3: aload_0
       4: aload_1
       5: invokevirtual #32                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getConnection();
    Code:
       0: aload_0
       1: ldc           #76                 // String Connection
       3: invokevirtual #33                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setContentDispositionFormData(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #77                 // Method setContentDispositionFormData:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
       7: return

  public void setContentDispositionFormData(java.lang.String, java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_1
       1: ldc           #78                 // String \'name\' must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #53                 // class java/lang/StringBuilder
       9: dup
      10: ldc           #79                 // String form-data; name=\"
      12: invokespecial #80                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      15: astore        4
      17: aload         4
      19: aload_1
      20: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: bipush        34
      25: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      28: pop
      29: aload_2
      30: ifnull        91
      33: aload_3
      34: ifnull        49
      37: aload_3
      38: invokevirtual #57                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      41: ldc           #82                 // String US-ASCII
      43: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          72
      49: aload         4
      51: ldc           #83                 // String ; filename=\"
      53: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload         4
      59: aload_2
      60: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: bipush        34
      65: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      68: pop
      69: goto          91
      72: aload         4
      74: ldc           #84                 // String ; filename*=
      76: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: aload         4
      82: aload_2
      83: aload_3
      84: invokestatic  #85                 // Method encodeHeaderFieldParam:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
      87: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: pop
      91: aload_0
      92: ldc           #86                 // String Content-Disposition
      94: aload         4
      96: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
     102: return

  public void setContentLength(long);
    Code:
       0: aload_0
       1: ldc           #87                 // String Content-Length
       3: lload_1
       4: invokestatic  #46                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public long getContentLength();
    Code:
       0: aload_0
       1: ldc           #87                 // String Content-Length
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #47                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      15: goto          21
      18: ldc2_w        #48                 // long -1l
      21: lreturn

  public void setContentType(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: invokevirtual #88                 // Method org/springframework/http/MediaType.isWildcardType:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #89                 // String \'Content-Type\' cannot contain wildcard type \'*\'
      14: invokestatic  #90                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      17: aload_1
      18: invokevirtual #91                 // Method org/springframework/http/MediaType.isWildcardSubtype:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #92                 // String \'Content-Type\' cannot contain wildcard subtype \'*\'
      31: invokestatic  #90                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      34: aload_0
      35: ldc           #93                 // String Content-Type
      37: aload_1
      38: invokevirtual #94                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      41: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      44: return

  public org.springframework.http.MediaType getContentType();
    Code:
       0: aload_0
       1: ldc           #93                 // String Content-Type
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #95                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      11: ifeq          21
      14: aload_1
      15: invokestatic  #96                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      18: goto          22
      21: aconst_null
      22: areturn

  public void setDate(long);
    Code:
       0: aload_0
       1: ldc           #97                 // String Date
       3: lload_1
       4: invokevirtual #98                 // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getDate();
    Code:
       0: aload_0
       1: ldc           #97                 // String Date
       3: invokevirtual #99                 // Method getFirstDate:(Ljava/lang/String;)J
       6: lreturn

  public void setETag(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_1
       5: ldc           #100                // String \"
       7: invokevirtual #101                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      10: ifne          22
      13: aload_1
      14: ldc           #102                // String W/
      16: invokevirtual #101                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ldc           #103                // String Invalid eTag, does not start with W/ or \"
      29: invokestatic  #90                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      32: aload_1
      33: ldc           #100                // String \"
      35: invokevirtual #104                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      38: ldc           #105                // String Invalid eTag, does not end with \"
      40: invokestatic  #90                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      43: aload_0
      44: ldc           #106                // String ETag
      46: aload_1
      47: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      50: return

  public java.lang.String getETag();
    Code:
       0: aload_0
       1: ldc           #106                // String ETag
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setExpires(long);
    Code:
       0: aload_0
       1: ldc           #107                // String Expires
       3: lload_1
       4: invokevirtual #98                 // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getExpires();
    Code:
       0: aload_0
       1: ldc           #107                // String Expires
       3: iconst_0
       4: invokespecial #108                // Method getFirstDate:(Ljava/lang/String;Z)J
       7: lreturn

  public void setIfMatch(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #109                // String If-Match
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setIfMatch(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #109                // String If-Match
       3: aload_0
       4: aload_1
       5: invokevirtual #32                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getIfMatch();
    Code:
       0: aload_0
       1: ldc           #109                // String If-Match
       3: invokevirtual #110                // Method getETagValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setIfModifiedSince(long);
    Code:
       0: aload_0
       1: ldc           #111                // String If-Modified-Since
       3: lload_1
       4: invokevirtual #98                 // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getIfModifiedSince();
    Code:
       0: aload_0
       1: ldc           #111                // String If-Modified-Since
       3: iconst_0
       4: invokespecial #108                // Method getFirstDate:(Ljava/lang/String;Z)J
       7: lreturn

  public void setIfNoneMatch(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #112                // String If-None-Match
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setIfNoneMatch(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #112                // String If-None-Match
       3: aload_0
       4: aload_1
       5: invokevirtual #32                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getIfNoneMatch();
    Code:
       0: aload_0
       1: ldc           #112                // String If-None-Match
       3: invokevirtual #110                // Method getETagValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setIfUnmodifiedSince(long);
    Code:
       0: aload_0
       1: ldc           #113                // String If-Unmodified-Since
       3: lload_1
       4: invokevirtual #98                 // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getIfUnmodifiedSince();
    Code:
       0: aload_0
       1: ldc           #113                // String If-Unmodified-Since
       3: iconst_0
       4: invokespecial #108                // Method getFirstDate:(Ljava/lang/String;Z)J
       7: lreturn

  public void setLastModified(long);
    Code:
       0: aload_0
       1: ldc           #114                // String Last-Modified
       3: lload_1
       4: invokevirtual #98                 // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getLastModified();
    Code:
       0: aload_0
       1: ldc           #114                // String Last-Modified
       3: iconst_0
       4: invokespecial #108                // Method getFirstDate:(Ljava/lang/String;Z)J
       7: lreturn

  public void setLocation(java.net.URI);
    Code:
       0: aload_0
       1: ldc           #115                // String Location
       3: aload_1
       4: invokevirtual #116                // Method java/net/URI.toASCIIString:()Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.net.URI getLocation();
    Code:
       0: aload_0
       1: ldc           #115                // String Location
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #117                // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      15: goto          19
      18: aconst_null
      19: areturn

  public void setOrigin(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #118                // String Origin
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getOrigin();
    Code:
       0: aload_0
       1: ldc           #118                // String Origin
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setPragma(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #119                // String Pragma
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getPragma();
    Code:
       0: aload_0
       1: ldc           #119                // String Pragma
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setRange(java.util.List<org.springframework.http.HttpRange>);
    Code:
       0: aload_1
       1: invokestatic  #120                // Method org/springframework/http/HttpRange.toString:(Ljava/util/Collection;)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: ldc           #121                // String Range
       8: aload_2
       9: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public java.util.List<org.springframework.http.HttpRange> getRange();
    Code:
       0: aload_0
       1: ldc           #121                // String Range
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #122                // Method org/springframework/http/HttpRange.parseRanges:(Ljava/lang/String;)Ljava/util/List;
      11: areturn

  public void setUpgrade(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #123                // String Upgrade
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getUpgrade();
    Code:
       0: aload_0
       1: ldc           #123                // String Upgrade
       3: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setVary(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #124                // String Vary
       3: aload_0
       4: aload_1
       5: invokevirtual #32                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getVary();
    Code:
       0: aload_0
       1: ldc           #124                // String Vary
       3: invokevirtual #33                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setDate(java.lang.String, long);
    Code:
       0: new           #125                // class java/text/SimpleDateFormat
       3: dup
       4: getstatic     #126                // Field DATE_FORMATS:[Ljava/lang/String;
       7: iconst_0
       8: aaload
       9: getstatic     #127                // Field java/util/Locale.US:Ljava/util/Locale;
      12: invokespecial #128                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      15: astore        4
      17: aload         4
      19: getstatic     #129                // Field GMT:Ljava/util/TimeZone;
      22: invokevirtual #130                // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      25: aload_0
      26: aload_1
      27: aload         4
      29: new           #131                // class java/util/Date
      32: dup
      33: lload_2
      34: invokespecial #132                // Method java/util/Date."<init>":(J)V
      37: invokevirtual #133                // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      40: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      43: return

  public long getFirstDate(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #108                // Method getFirstDate:(Ljava/lang/String;Z)J
       6: lreturn

  private long getFirstDate(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ifnonnull     14
      10: ldc2_w        #48                 // long -1l
      13: lreturn
      14: aload_3
      15: invokevirtual #134                // Method java/lang/String.length:()I
      18: iconst_3
      19: if_icmplt     89
      22: getstatic     #126                // Field DATE_FORMATS:[Ljava/lang/String;
      25: astore        4
      27: aload         4
      29: arraylength
      30: istore        5
      32: iconst_0
      33: istore        6
      35: iload         6
      37: iload         5
      39: if_icmpge     89
      42: aload         4
      44: iload         6
      46: aaload
      47: astore        7
      49: new           #125                // class java/text/SimpleDateFormat
      52: dup
      53: aload         7
      55: getstatic     #127                // Field java/util/Locale.US:Ljava/util/Locale;
      58: invokespecial #128                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      61: astore        8
      63: aload         8
      65: getstatic     #129                // Field GMT:Ljava/util/TimeZone;
      68: invokevirtual #130                // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      71: aload         8
      73: aload_3
      74: invokevirtual #135                // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      77: invokevirtual #136                // Method java/util/Date.getTime:()J
      80: lreturn
      81: astore        9
      83: iinc          6, 1
      86: goto          35
      89: iload_2
      90: ifeq          134
      93: new           #138                // class java/lang/IllegalArgumentException
      96: dup
      97: new           #53                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #139                // String Cannot parse date value \"
     106: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_3
     110: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: ldc           #140                // String \" for \"
     115: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_1
     119: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc           #141                // String \" header
     124: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #142                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: ldc2_w        #48                 // long -1l
     137: lreturn
    Exception table:
       from    to  target type
          71    80    81   Class java/text/ParseException

  public java.util.List<java.lang.String> getValuesAsList(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: ifnull        108
      10: new           #36                 // class java/util/ArrayList
      13: dup
      14: invokespecial #37                 // Method java/util/ArrayList."<init>":()V
      17: astore_3
      18: aload_2
      19: invokeinterface #55,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore        4
      26: aload         4
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          106
      36: aload         4
      38: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #143                // class java/lang/String
      46: astore        5
      48: aload         5
      50: ifnull        103
      53: aload         5
      55: ldc           #38                 // String ,
      57: invokestatic  #39                 // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      60: astore        6
      62: aload         6
      64: astore        7
      66: aload         7
      68: arraylength
      69: istore        8
      71: iconst_0
      72: istore        9
      74: iload         9
      76: iload         8
      78: if_icmpge     103
      81: aload         7
      83: iload         9
      85: aaload
      86: astore        10
      88: aload_3
      89: aload         10
      91: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: iinc          9, 1
     100: goto          74
     103: goto          26
     106: aload_3
     107: areturn
     108: invokestatic  #69                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     111: areturn

  protected java.util.List<java.lang.String> getETagValuesAsList(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: ifnull        171
      10: new           #36                 // class java/util/ArrayList
      13: dup
      14: invokespecial #37                 // Method java/util/ArrayList."<init>":()V
      17: astore_3
      18: aload_2
      19: invokeinterface #55,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore        4
      26: aload         4
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          169
      36: aload         4
      38: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #143                // class java/lang/String
      46: astore        5
      48: aload         5
      50: ifnull        166
      53: getstatic     #144                // Field ETAG_HEADER_VALUE_PATTERN:Ljava/util/regex/Pattern;
      56: aload         5
      58: invokevirtual #145                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      61: astore        6
      63: aload         6
      65: invokevirtual #146                // Method java/util/regex/Matcher.find:()Z
      68: ifeq          115
      71: ldc           #66                 // String *
      73: aload         6
      75: invokevirtual #147                // Method java/util/regex/Matcher.group:()Ljava/lang/String;
      78: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      81: ifeq          99
      84: aload_3
      85: aload         6
      87: invokevirtual #147                // Method java/util/regex/Matcher.group:()Ljava/lang/String;
      90: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      95: pop
      96: goto          63
      99: aload_3
     100: aload         6
     102: iconst_1
     103: invokevirtual #148                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     106: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     111: pop
     112: goto          63
     115: aload_3
     116: invokeinterface #149,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     121: ifeq          166
     124: new           #138                // class java/lang/IllegalArgumentException
     127: dup
     128: new           #53                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #150                // String Could not parse header \'
     137: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_1
     141: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #151                // String \' with value \'
     146: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload         5
     151: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: ldc           #152                // String \'
     156: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: invokespecial #142                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     165: athrow
     166: goto          26
     169: aload_3
     170: areturn
     171: invokestatic  #69                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     174: areturn

  protected java.lang.String getFieldValues(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_0
      11: aload_2
      12: invokevirtual #32                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
      15: goto          19
      18: aconst_null
      19: areturn

  protected java.lang.String toCommaDelimitedString(java.util.List<java.lang.String>);
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #55,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          61
      24: aload_3
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #143                // class java/lang/String
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_3
      43: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          58
      51: aload_2
      52: ldc           #60                 // String ,
      54: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: goto          15
      61: aload_2
      62: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: areturn

  public java.lang.String getFirst(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #153,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        31
      18: aload_2
      19: iconst_0
      20: invokeinterface #154,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #143                // class java/lang/String
      28: goto          32
      31: aconst_null
      32: areturn

  public void add(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #153,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class java/util/List
      13: astore_3
      14: aload_3
      15: ifnonnull     38
      18: new           #155                // class java/util/LinkedList
      21: dup
      22: invokespecial #156                // Method java/util/LinkedList."<init>":()V
      25: astore_3
      26: aload_0
      27: getfield      #20                 // Field headers:Ljava/util/Map;
      30: aload_1
      31: aload_3
      32: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_3
      39: aload_2
      40: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: return

  public void set(java.lang.String, java.lang.String);
    Code:
       0: new           #155                // class java/util/LinkedList
       3: dup
       4: invokespecial #156                // Method java/util/LinkedList."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: getfield      #20                 // Field headers:Ljava/util/Map;
      20: aload_1
      21: aload_3
      22: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void setAll(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          56
      21: aload_2
      22: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #13                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #143                // class java/lang/String
      41: aload_3
      42: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: checkcast     #143                // class java/lang/String
      50: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      53: goto          12
      56: return

  public java.util.Map<java.lang.String, java.lang.String> toSingleValueMap();
    Code:
       0: new           #157                // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #20                 // Field headers:Ljava/util/Map;
       8: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
      13: invokespecial #158                // Method java/util/LinkedHashMap."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #20                 // Field headers:Ljava/util/Map;
      21: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      26: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          80
      41: aload_2
      42: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #13                 // class java/util/Map$Entry
      50: astore_3
      51: aload_1
      52: aload_3
      53: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: aload_3
      59: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #15                 // class java/util/List
      67: iconst_0
      68: invokeinterface #154,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      73: invokevirtual #159                // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: goto          32
      80: aload_1
      81: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokeinterface #160,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #161,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #162,  2          // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.List<java.lang.String> get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #153,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class java/util/List
      13: areturn

  public java.util.List<java.lang.String> put(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #15                 // class java/util/List
      14: areturn

  public java.util.List<java.lang.String> remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #163,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class java/util/List
      13: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ? extends java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #164,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokeinterface #165,  1          // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokeinterface #166,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<java.util.List<java.lang.String>> values();
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokeinterface #167,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>> entrySet();
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #21                 // class org/springframework/http/HttpHeaders
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #21                 // class org/springframework/http/HttpHeaders
      20: astore_2
      21: aload_0
      22: getfield      #20                 // Field headers:Ljava/util/Map;
      25: aload_2
      26: getfield      #20                 // Field headers:Ljava/util/Map;
      29: invokeinterface #168,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokeinterface #169,  1          // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #20                 // Field headers:Ljava/util/Map;
       4: invokevirtual #170                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public static org.springframework.http.HttpHeaders readOnlyHttpHeaders(org.springframework.http.HttpHeaders);
    Code:
       0: new           #21                 // class org/springframework/http/HttpHeaders
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #4                  // Method "<init>":(Ljava/util/Map;Z)V
       9: areturn

  static java.lang.String encodeHeaderFieldParam(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: ldc           #171                // String Input String should not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #172                // String Charset should not be null
       9: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_1
      13: invokevirtual #57                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      16: ldc           #82                 // String US-ASCII
      18: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          26
      24: aload_0
      25: areturn
      26: aload_1
      27: invokevirtual #57                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      30: ldc           #173                // String UTF-8
      32: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifne          50
      38: aload_1
      39: invokevirtual #57                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      42: ldc           #174                // String ISO-8859-1
      44: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ldc           #175                // String Charset should be UTF-8 or ISO-8859-1
      57: invokestatic  #90                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      60: aload_0
      61: aload_1
      62: invokevirtual #176                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      65: astore_2
      66: aload_2
      67: arraylength
      68: istore_3
      69: new           #53                 // class java/lang/StringBuilder
      72: dup
      73: iload_3
      74: iconst_1
      75: ishl
      76: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
      79: astore        4
      81: aload         4
      83: aload_1
      84: invokevirtual #57                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      87: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: pop
      91: aload         4
      93: ldc           #178                // String \'\'
      95: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: aload_2
     100: astore        5
     102: aload         5
     104: arraylength
     105: istore        6
     107: iconst_0
     108: istore        7
     110: iload         7
     112: iload         6
     114: if_icmpge     206
     117: aload         5
     119: iload         7
     121: baload
     122: istore        8
     124: iload         8
     126: invokestatic  #179                // Method isRFC5987AttrChar:(B)Z
     129: ifeq          144
     132: aload         4
     134: iload         8
     136: i2c
     137: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     140: pop
     141: goto          200
     144: aload         4
     146: bipush        37
     148: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     151: pop
     152: iload         8
     154: iconst_4
     155: ishr
     156: bipush        15
     158: iand
     159: bipush        16
     161: invokestatic  #180                // Method java/lang/Character.forDigit:(II)C
     164: invokestatic  #181                // Method java/lang/Character.toUpperCase:(C)C
     167: istore        9
     169: iload         8
     171: bipush        15
     173: iand
     174: bipush        16
     176: invokestatic  #180                // Method java/lang/Character.forDigit:(II)C
     179: invokestatic  #181                // Method java/lang/Character.toUpperCase:(C)C
     182: istore        10
     184: aload         4
     186: iload         9
     188: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     191: pop
     192: aload         4
     194: iload         10
     196: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     199: pop
     200: iinc          7, 1
     203: goto          110
     206: aload         4
     208: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: areturn

  private static boolean isRFC5987AttrChar(byte);
    Code:
       0: iload_0
       1: bipush        48
       3: if_icmplt     12
       6: iload_0
       7: bipush        57
       9: if_icmple     108
      12: iload_0
      13: bipush        97
      15: if_icmplt     24
      18: iload_0
      19: bipush        122
      21: if_icmple     108
      24: iload_0
      25: bipush        65
      27: if_icmplt     36
      30: iload_0
      31: bipush        90
      33: if_icmple     108
      36: iload_0
      37: bipush        33
      39: if_icmpeq     108
      42: iload_0
      43: bipush        35
      45: if_icmpeq     108
      48: iload_0
      49: bipush        36
      51: if_icmpeq     108
      54: iload_0
      55: bipush        38
      57: if_icmpeq     108
      60: iload_0
      61: bipush        43
      63: if_icmpeq     108
      66: iload_0
      67: bipush        45
      69: if_icmpeq     108
      72: iload_0
      73: bipush        46
      75: if_icmpeq     108
      78: iload_0
      79: bipush        94
      81: if_icmpeq     108
      84: iload_0
      85: bipush        95
      87: if_icmpeq     108
      90: iload_0
      91: bipush        96
      93: if_icmpeq     108
      96: iload_0
      97: bipush        124
      99: if_icmpeq     108
     102: iload_0
     103: bipush        126
     105: if_icmpne     112
     108: iconst_1
     109: goto          113
     112: iconst_0
     113: ireturn

  public void set(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #143                // class java/lang/String
       5: aload_2
       6: checkcast     #143                // class java/lang/String
       9: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public void add(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #143                // class java/lang/String
       5: aload_2
       6: checkcast     #143                // class java/lang/String
       9: invokevirtual #182                // Method add:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public java.lang.Object getFirst(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #143                // class java/lang/String
       5: invokevirtual #29                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #183                // Method remove:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #143                // class java/lang/String
       5: aload_2
       6: checkcast     #15                 // class java/util/List
       9: invokevirtual #184                // Method put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  static {};
    Code:
       0: iconst_3
       1: anewarray     #143                // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #185                // String EEE, dd MMM yyyy HH:mm:ss zzz
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #186                // String EEE, dd-MMM-yy HH:mm:ss zzz
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #187                // String EEE MMM dd HH:mm:ss yyyy
      18: aastore
      19: putstatic     #126                // Field DATE_FORMATS:[Ljava/lang/String;
      22: ldc           #188                // String \\*|\\s*((W\\/)?(\"[^\"]*\"))\\s*,?
      24: invokestatic  #189                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      27: putstatic     #144                // Field ETAG_HEADER_VALUE_PATTERN:Ljava/util/regex/Pattern;
      30: ldc           #190                // String GMT
      32: invokestatic  #191                // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      35: putstatic     #129                // Field GMT:Ljava/util/TimeZone;
      38: return
}
