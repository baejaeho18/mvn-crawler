Compiled from "JaxWsPortClientInterceptor.java"
public class org.springframework.remoting.jaxws.JaxWsPortClientInterceptor extends org.springframework.remoting.jaxws.LocalJaxWsServiceFactory implements org.aopalliance.intercept.MethodInterceptor,org.springframework.beans.factory.BeanClassLoaderAware,org.springframework.beans.factory.InitializingBean {
  private javax.xml.ws.Service jaxWsService;

  private java.lang.String portName;

  private java.lang.String username;

  private java.lang.String password;

  private java.lang.String endpointAddress;

  private boolean maintainSession;

  private boolean useSoapAction;

  private java.lang.String soapActionUri;

  private java.util.Map<java.lang.String, java.lang.Object> customProperties;

  private javax.xml.ws.WebServiceFeature[] portFeatures;

  private java.lang.Object[] webServiceFeatures;

  private java.lang.Class<?> serviceInterface;

  private boolean lookupServiceOnStartup;

  private java.lang.ClassLoader beanClassLoader;

  private javax.xml.namespace.QName portQName;

  private java.lang.Object portStub;

  private final java.lang.Object preparationMonitor;

  public org.springframework.remoting.jaxws.JaxWsPortClientInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/remoting/jaxws/LocalJaxWsServiceFactory."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field lookupServiceOnStartup:Z
       9: aload_0
      10: invokestatic  #3                  // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      13: putfield      #4                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      16: aload_0
      17: new           #5                  // class java/lang/Object
      20: dup
      21: invokespecial #6                  // Method java/lang/Object."<init>":()V
      24: putfield      #7                  // Field preparationMonitor:Ljava/lang/Object;
      27: return

  public void setJaxWsService(javax.xml.ws.Service);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field jaxWsService:Ljavax/xml/ws/Service;
       5: return

  public javax.xml.ws.Service getJaxWsService();
    Code:
       0: aload_0
       1: getfield      #8                  // Field jaxWsService:Ljavax/xml/ws/Service;
       4: areturn

  public void setPortName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field portName:Ljava/lang/String;
       5: return

  public java.lang.String getPortName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field portName:Ljava/lang/String;
       4: areturn

  public void setUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field username:Ljava/lang/String;
       5: return

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #10                 // Field username:Ljava/lang/String;
       4: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field password:Ljava/lang/String;
       5: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #11                 // Field password:Ljava/lang/String;
       4: areturn

  public void setEndpointAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field endpointAddress:Ljava/lang/String;
       5: return

  public java.lang.String getEndpointAddress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field endpointAddress:Ljava/lang/String;
       4: areturn

  public void setMaintainSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field maintainSession:Z
       5: return

  public boolean isMaintainSession();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maintainSession:Z
       4: ireturn

  public void setUseSoapAction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field useSoapAction:Z
       5: return

  public boolean isUseSoapAction();
    Code:
       0: aload_0
       1: getfield      #14                 // Field useSoapAction:Z
       4: ireturn

  public void setSoapActionUri(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field soapActionUri:Ljava/lang/String;
       5: return

  public java.lang.String getSoapActionUri();
    Code:
       0: aload_0
       1: getfield      #15                 // Field soapActionUri:Ljava/lang/String;
       4: areturn

  public void setCustomProperties(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field customProperties:Ljava/util/Map;
       5: return

  public java.util.Map<java.lang.String, java.lang.Object> getCustomProperties();
    Code:
       0: aload_0
       1: getfield      #16                 // Field customProperties:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #17                 // class java/util/HashMap
      11: dup
      12: invokespecial #18                 // Method java/util/HashMap."<init>":()V
      15: putfield      #16                 // Field customProperties:Ljava/util/Map;
      18: aload_0
      19: getfield      #16                 // Field customProperties:Ljava/util/Map;
      22: areturn

  public void addCustomProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getCustomProperties:()Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void setPortFeatures(javax.xml.ws.WebServiceFeature...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field portFeatures:[Ljavax/xml/ws/WebServiceFeature;
       5: return

  public void setWebServiceFeatures(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field webServiceFeatures:[Ljava/lang/Object;
       5: return

  public void setServiceInterface(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_1
       5: invokevirtual #23                 // Method java/lang/Class.isInterface:()Z
       8: ifne          21
      11: new           #24                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #25                 // String \'serviceInterface\' must be an interface
      17: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #27                 // Field serviceInterface:Ljava/lang/Class;
      26: return

  public java.lang.Class<?> getServiceInterface();
    Code:
       0: aload_0
       1: getfield      #27                 // Field serviceInterface:Ljava/lang/Class;
       4: areturn

  public void setLookupServiceOnStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field lookupServiceOnStartup:Z
       5: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       5: return

  protected java.lang.ClassLoader getBeanClassLoader();
    Code:
       0: aload_0
       1: getfield      #4                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       4: areturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field lookupServiceOnStartup:Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #28                 // Method prepare:()V
      11: return

  public void prepare();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getServiceInterface:()Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #24                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #30                 // String Property \'serviceInterface\' is required
      15: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: ldc           #31                 // class javax/jws/WebService
      22: invokevirtual #32                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      25: checkcast     #31                 // class javax/jws/WebService
      28: astore_2
      29: aload_2
      30: ifnull        38
      33: aload_0
      34: aload_2
      35: invokevirtual #33                 // Method applyDefaultsFromAnnotation:(Ljavax/jws/WebService;)V
      38: aload_0
      39: invokevirtual #34                 // Method getJaxWsService:()Ljavax/xml/ws/Service;
      42: astore_3
      43: aload_3
      44: ifnonnull     52
      47: aload_0
      48: invokevirtual #35                 // Method createJaxWsService:()Ljavax/xml/ws/Service;
      51: astore_3
      52: aload_0
      53: aload_0
      54: aload_0
      55: invokevirtual #36                 // Method getPortName:()Ljava/lang/String;
      58: ifnull        68
      61: aload_0
      62: invokevirtual #36                 // Method getPortName:()Ljava/lang/String;
      65: goto          75
      68: aload_0
      69: invokevirtual #29                 // Method getServiceInterface:()Ljava/lang/Class;
      72: invokevirtual #37                 // Method java/lang/Class.getName:()Ljava/lang/String;
      75: invokevirtual #38                 // Method getQName:(Ljava/lang/String;)Ljavax/xml/namespace/QName;
      78: putfield      #39                 // Field portQName:Ljavax/xml/namespace/QName;
      81: aload_0
      82: aload_3
      83: aload_0
      84: invokevirtual #36                 // Method getPortName:()Ljava/lang/String;
      87: ifnull        97
      90: aload_0
      91: getfield      #39                 // Field portQName:Ljavax/xml/namespace/QName;
      94: goto          98
      97: aconst_null
      98: invokevirtual #40                 // Method getPortStub:(Ljavax/xml/ws/Service;Ljavax/xml/namespace/QName;)Ljava/lang/Object;
     101: astore        4
     103: aload_0
     104: aload         4
     106: invokevirtual #41                 // Method preparePortStub:(Ljava/lang/Object;)V
     109: aload_0
     110: aload         4
     112: putfield      #42                 // Field portStub:Ljava/lang/Object;
     115: return

  protected void applyDefaultsFromAnnotation(javax.jws.WebService);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getWsdlDocumentUrl:()Ljava/net/URL;
       4: ifnonnull     70
       7: aload_1
       8: invokeinterface #44,  1           // InterfaceMethod javax/jws/WebService.wsdlLocation:()Ljava/lang/String;
      13: astore_2
      14: aload_2
      15: invokestatic  #45                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      18: ifeq          70
      21: aload_0
      22: new           #46                 // class java/net/URL
      25: dup
      26: aload_2
      27: invokespecial #47                 // Method java/net/URL."<init>":(Ljava/lang/String;)V
      30: invokevirtual #48                 // Method setWsdlDocumentUrl:(Ljava/net/URL;)V
      33: goto          70
      36: astore_3
      37: new           #50                 // class java/lang/IllegalStateException
      40: dup
      41: new           #51                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #53                 // String Encountered invalid @Service wsdlLocation value [
      50: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #55                 // String ]
      59: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: aload_3
      66: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      69: athrow
      70: aload_0
      71: invokevirtual #58                 // Method getNamespaceUri:()Ljava/lang/String;
      74: ifnonnull     96
      77: aload_1
      78: invokeinterface #59,  1           // InterfaceMethod javax/jws/WebService.targetNamespace:()Ljava/lang/String;
      83: astore_2
      84: aload_2
      85: invokestatic  #45                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      88: ifeq          96
      91: aload_0
      92: aload_2
      93: invokevirtual #60                 // Method setNamespaceUri:(Ljava/lang/String;)V
      96: aload_0
      97: invokevirtual #61                 // Method getServiceName:()Ljava/lang/String;
     100: ifnonnull     122
     103: aload_1
     104: invokeinterface #62,  1           // InterfaceMethod javax/jws/WebService.serviceName:()Ljava/lang/String;
     109: astore_2
     110: aload_2
     111: invokestatic  #45                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
     114: ifeq          122
     117: aload_0
     118: aload_2
     119: invokevirtual #63                 // Method setServiceName:(Ljava/lang/String;)V
     122: aload_0
     123: invokevirtual #36                 // Method getPortName:()Ljava/lang/String;
     126: ifnonnull     148
     129: aload_1
     130: invokeinterface #64,  1           // InterfaceMethod javax/jws/WebService.portName:()Ljava/lang/String;
     135: astore_2
     136: aload_2
     137: invokestatic  #45                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
     140: ifeq          148
     143: aload_0
     144: aload_2
     145: invokevirtual #65                 // Method setPortName:(Ljava/lang/String;)V
     148: return
    Exception table:
       from    to  target type
          21    33    36   Class java/net/MalformedURLException

  protected boolean isPrepared();
    Code:
       0: aload_0
       1: getfield      #7                  // Field preparationMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #42                 // Field portStub:Ljava/lang/Object;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: aload_1
      20: monitorexit
      21: ireturn
      22: astore_2
      23: aload_1
      24: monitorexit
      25: aload_2
      26: athrow
    Exception table:
       from    to  target type
           7    21    22   any
          22    25    22   any

  protected final javax.xml.namespace.QName getPortQName();
    Code:
       0: aload_0
       1: getfield      #39                 // Field portQName:Ljavax/xml/namespace/QName;
       4: areturn

  protected java.lang.Object getPortStub(javax.xml.ws.Service, javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #21                 // Field portFeatures:[Ljavax/xml/ws/WebServiceFeature;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #22                 // Field webServiceFeatures:[Ljava/lang/Object;
      11: ifnull        93
      14: aload_0
      15: getfield      #21                 // Field portFeatures:[Ljavax/xml/ws/WebServiceFeature;
      18: astore_3
      19: aload_3
      20: ifnonnull     66
      23: aload_0
      24: getfield      #22                 // Field webServiceFeatures:[Ljava/lang/Object;
      27: arraylength
      28: anewarray     #66                 // class javax/xml/ws/WebServiceFeature
      31: astore_3
      32: iconst_0
      33: istore        4
      35: iload         4
      37: aload_0
      38: getfield      #22                 // Field webServiceFeatures:[Ljava/lang/Object;
      41: arraylength
      42: if_icmpge     66
      45: aload_3
      46: iload         4
      48: aload_0
      49: aload_0
      50: getfield      #22                 // Field webServiceFeatures:[Ljava/lang/Object;
      53: iload         4
      55: aaload
      56: invokespecial #67                 // Method convertWebServiceFeature:(Ljava/lang/Object;)Ljavax/xml/ws/WebServiceFeature;
      59: aastore
      60: iinc          4, 1
      63: goto          35
      66: aload_2
      67: ifnull        83
      70: aload_1
      71: aload_2
      72: aload_0
      73: invokevirtual #29                 // Method getServiceInterface:()Ljava/lang/Class;
      76: aload_3
      77: invokevirtual #68                 // Method javax/xml/ws/Service.getPort:(Ljavax/xml/namespace/QName;Ljava/lang/Class;[Ljavax/xml/ws/WebServiceFeature;)Ljava/lang/Object;
      80: goto          92
      83: aload_1
      84: aload_0
      85: invokevirtual #29                 // Method getServiceInterface:()Ljava/lang/Class;
      88: aload_3
      89: invokevirtual #69                 // Method javax/xml/ws/Service.getPort:(Ljava/lang/Class;[Ljavax/xml/ws/WebServiceFeature;)Ljava/lang/Object;
      92: areturn
      93: aload_2
      94: ifnull        109
      97: aload_1
      98: aload_2
      99: aload_0
     100: invokevirtual #29                 // Method getServiceInterface:()Ljava/lang/Class;
     103: invokevirtual #70                 // Method javax/xml/ws/Service.getPort:(Ljavax/xml/namespace/QName;Ljava/lang/Class;)Ljava/lang/Object;
     106: goto          117
     109: aload_1
     110: aload_0
     111: invokevirtual #29                 // Method getServiceInterface:()Ljava/lang/Class;
     114: invokevirtual #71                 // Method javax/xml/ws/Service.getPort:(Ljava/lang/Class;)Ljava/lang/Object;
     117: areturn

  private javax.xml.ws.WebServiceFeature convertWebServiceFeature(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #72                 // String WebServiceFeature specification object must not be null
       3: invokestatic  #73                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: instanceof    #66                 // class javax/xml/ws/WebServiceFeature
      10: ifeq          18
      13: aload_1
      14: checkcast     #66                 // class javax/xml/ws/WebServiceFeature
      17: areturn
      18: aload_1
      19: instanceof    #74                 // class java/lang/Class
      22: ifeq          36
      25: aload_1
      26: checkcast     #74                 // class java/lang/Class
      29: invokestatic  #75                 // Method org/springframework/beans/BeanUtils.instantiate:(Ljava/lang/Class;)Ljava/lang/Object;
      32: checkcast     #66                 // class javax/xml/ws/WebServiceFeature
      35: areturn
      36: aload_1
      37: instanceof    #76                 // class java/lang/String
      40: ifeq          96
      43: aload_0
      44: invokevirtual #77                 // Method getBeanClassLoader:()Ljava/lang/ClassLoader;
      47: aload_1
      48: checkcast     #76                 // class java/lang/String
      51: invokevirtual #78                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      54: astore_2
      55: aload_2
      56: invokestatic  #75                 // Method org/springframework/beans/BeanUtils.instantiate:(Ljava/lang/Class;)Ljava/lang/Object;
      59: checkcast     #66                 // class javax/xml/ws/WebServiceFeature
      62: areturn
      63: astore_2
      64: new           #24                 // class java/lang/IllegalArgumentException
      67: dup
      68: new           #51                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #80                 // String Could not load WebServiceFeature class [
      77: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_1
      81: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: ldc           #55                 // String ]
      86: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: new           #24                 // class java/lang/IllegalArgumentException
      99: dup
     100: new           #51                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #82                 // String Unknown WebServiceFeature specification type:
     109: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_1
     113: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     116: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     125: athrow
    Exception table:
       from    to  target type
          43    62    63   Class java/lang/ClassNotFoundException

  protected void preparePortStub(java.lang.Object);
    Code:
       0: new           #17                 // class java/util/HashMap
       3: dup
       4: invokespecial #18                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #84                 // Method getUsername:()Ljava/lang/String;
      12: astore_3
      13: aload_3
      14: ifnull        27
      17: aload_2
      18: ldc           #86                 // String javax.xml.ws.security.auth.username
      20: aload_3
      21: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_0
      28: invokevirtual #87                 // Method getPassword:()Ljava/lang/String;
      31: astore        4
      33: aload         4
      35: ifnull        49
      38: aload_2
      39: ldc           #88                 // String javax.xml.ws.security.auth.password
      41: aload         4
      43: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: aload_0
      50: invokevirtual #89                 // Method getEndpointAddress:()Ljava/lang/String;
      53: astore        5
      55: aload         5
      57: ifnull        71
      60: aload_2
      61: ldc           #90                 // String javax.xml.ws.service.endpoint.address
      63: aload         5
      65: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload_0
      72: invokevirtual #91                 // Method isMaintainSession:()Z
      75: ifeq          90
      78: aload_2
      79: ldc           #92                 // String javax.xml.ws.session.maintain
      81: getstatic     #93                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      84: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: aload_0
      91: invokevirtual #94                 // Method isUseSoapAction:()Z
      94: ifeq          109
      97: aload_2
      98: ldc           #95                 // String javax.xml.ws.soap.http.soapaction.use
     100: getstatic     #93                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     103: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: aload_0
     110: invokevirtual #96                 // Method getSoapActionUri:()Ljava/lang/String;
     113: astore        6
     115: aload         6
     117: ifnull        131
     120: aload_2
     121: ldc           #97                 // String javax.xml.ws.soap.http.soapaction.uri
     123: aload         6
     125: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload_2
     132: aload_0
     133: invokevirtual #19                 // Method getCustomProperties:()Ljava/util/Map;
     136: invokeinterface #98,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     141: aload_2
     142: invokeinterface #99,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     147: ifne          210
     150: aload_1
     151: instanceof    #85                 // class javax/xml/ws/BindingProvider
     154: ifne          195
     157: new           #100                // class org/springframework/remoting/RemoteLookupFailureException
     160: dup
     161: new           #51                 // class java/lang/StringBuilder
     164: dup
     165: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     168: ldc           #101                // String Port stub of class [
     170: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_1
     174: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     177: invokevirtual #37                 // Method java/lang/Class.getName:()Ljava/lang/String;
     180: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: ldc           #102                // String ] is not a customizable JAX-WS stub: it does not implement interface [javax.xml.ws.BindingProvider]
     185: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     191: invokespecial #103                // Method org/springframework/remoting/RemoteLookupFailureException."<init>":(Ljava/lang/String;)V
     194: athrow
     195: aload_1
     196: checkcast     #85                 // class javax/xml/ws/BindingProvider
     199: invokeinterface #104,  1          // InterfaceMethod javax/xml/ws/BindingProvider.getRequestContext:()Ljava/util/Map;
     204: aload_2
     205: invokeinterface #98,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     210: return

  protected java.lang.Object getPortStub();
    Code:
       0: aload_0
       1: getfield      #42                 // Field portStub:Ljava/lang/Object;
       4: areturn

  public java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #105,  1          // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getMethod:()Ljava/lang/reflect/Method;
       6: invokestatic  #106                // Method org/springframework/aop/support/AopUtils.isToStringMethod:(Ljava/lang/reflect/Method;)Z
       9: ifeq          52
      12: new           #51                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #107                // String JAX-WS proxy for port [
      21: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #36                 // Method getPortName:()Ljava/lang/String;
      28: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #108                // String ] of service [
      33: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #61                 // Method getServiceName:()Ljava/lang/String;
      40: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #55                 // String ]
      45: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn
      52: aload_0
      53: getfield      #7                  // Field preparationMonitor:Ljava/lang/Object;
      56: dup
      57: astore_2
      58: monitorenter
      59: aload_0
      60: invokevirtual #109                // Method isPrepared:()Z
      63: ifne          70
      66: aload_0
      67: invokevirtual #28                 // Method prepare:()V
      70: aload_2
      71: monitorexit
      72: goto          80
      75: astore_3
      76: aload_2
      77: monitorexit
      78: aload_3
      79: athrow
      80: aload_0
      81: aload_1
      82: invokevirtual #110                // Method doInvoke:(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
      85: areturn
    Exception table:
       from    to  target type
          59    72    75   any
          75    78    75   any

  protected java.lang.Object doInvoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #111                // Method getPortStub:()Ljava/lang/Object;
       6: invokevirtual #112                // Method doInvoke:(Lorg/aopalliance/intercept/MethodInvocation;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
      10: astore_2
      11: new           #114                // class org/springframework/remoting/jaxws/JaxWsSoapFaultException
      14: dup
      15: aload_2
      16: invokespecial #115                // Method org/springframework/remoting/jaxws/JaxWsSoapFaultException."<init>":(Ljavax/xml/ws/soap/SOAPFaultException;)V
      19: athrow
      20: astore_2
      21: new           #117                // class org/springframework/remoting/RemoteConnectFailureException
      24: dup
      25: new           #51                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #118                // String Could not connect to remote service [
      34: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: invokevirtual #89                 // Method getEndpointAddress:()Ljava/lang/String;
      41: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #55                 // String ]
      46: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: aload_2
      53: invokespecial #119                // Method org/springframework/remoting/RemoteConnectFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      56: athrow
      57: astore_2
      58: new           #121                // class org/springframework/remoting/RemoteAccessException
      61: dup
      62: new           #51                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #122                // String Could not access remote service at [
      71: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #89                 // Method getEndpointAddress:()Ljava/lang/String;
      78: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #55                 // String ]
      83: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload_2
      90: invokespecial #123                // Method org/springframework/remoting/RemoteAccessException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      93: athrow
    Exception table:
       from    to  target type
           0     9    10   Class javax/xml/ws/soap/SOAPFaultException
           0     9    20   Class javax/xml/ws/ProtocolException
           0     9    57   Class javax/xml/ws/WebServiceException

  protected java.lang.Object doInvoke(org.aopalliance.intercept.MethodInvocation, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #105,  1          // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getMethod:()Ljava/lang/reflect/Method;
       6: astore_3
       7: aload_3
       8: aload_2
       9: aload_1
      10: invokeinterface #124,  1          // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getArguments:()[Ljava/lang/Object;
      15: invokevirtual #125                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn
      19: astore        4
      21: aload         4
      23: invokevirtual #127                // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      26: athrow
      27: astore        4
      29: new           #129                // class org/springframework/remoting/RemoteProxyFailureException
      32: dup
      33: new           #51                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #130                // String Invocation of stub method failed:
      42: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_3
      46: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: aload         4
      54: invokespecial #131                // Method org/springframework/remoting/RemoteProxyFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: athrow
    Exception table:
       from    to  target type
           7    18    19   Class java/lang/reflect/InvocationTargetException
           7    18    27   Class java/lang/Throwable
}
