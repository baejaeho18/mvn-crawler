Compiled from "OkHttp3ClientHttpResponse.java"
class org.springframework.http.client.OkHttp3ClientHttpResponse extends org.springframework.http.client.AbstractClientHttpResponse {
  private final okhttp3.Response response;

  private org.springframework.http.HttpHeaders headers;

  public org.springframework.http.client.OkHttp3ClientHttpResponse(okhttp3.Response);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/client/AbstractClientHttpResponse."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Response must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field response:Lokhttp3/Response;
      15: return

  public int getRawStatusCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lokhttp3/Response;
       4: invokevirtual #5                  // Method okhttp3/Response.code:()I
       7: ireturn

  public java.lang.String getStatusText();
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lokhttp3/Response;
       4: invokevirtual #6                  // Method okhttp3/Response.message:()Ljava/lang/String;
       7: areturn

  public java.io.InputStream getBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lokhttp3/Response;
       4: invokevirtual #7                  // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
       7: invokevirtual #8                  // Method okhttp3/ResponseBody.byteStream:()Ljava/io/InputStream;
      10: areturn

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: ifnonnull     105
       7: new           #10                 // class org/springframework/http/HttpHeaders
      10: dup
      11: invokespecial #11                 // Method org/springframework/http/HttpHeaders."<init>":()V
      14: astore_1
      15: aload_0
      16: getfield      #4                  // Field response:Lokhttp3/Response;
      19: invokevirtual #12                 // Method okhttp3/Response.headers:()Lokhttp3/Headers;
      22: invokevirtual #13                 // Method okhttp3/Headers.names:()Ljava/util/Set;
      25: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      30: astore_2
      31: aload_2
      32: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          100
      40: aload_2
      41: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #17                 // class java/lang/String
      49: astore_3
      50: aload_0
      51: getfield      #4                  // Field response:Lokhttp3/Response;
      54: aload_3
      55: invokevirtual #18                 // Method okhttp3/Response.headers:(Ljava/lang/String;)Ljava/util/List;
      58: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: astore        4
      65: aload         4
      67: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          97
      75: aload         4
      77: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #17                 // class java/lang/String
      85: astore        5
      87: aload_1
      88: aload_3
      89: aload         5
      91: invokevirtual #20                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
      94: goto          65
      97: goto          31
     100: aload_0
     101: aload_1
     102: putfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
     105: aload_0
     106: getfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
     109: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lokhttp3/Response;
       4: invokevirtual #7                  // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
       7: invokevirtual #21                 // Method okhttp3/ResponseBody.close:()V
      10: return
}
