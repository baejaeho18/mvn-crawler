Compiled from "HttpComponentsClientHttpRequestFactory.java"
public class org.springframework.http.client.HttpComponentsClientHttpRequestFactory implements org.springframework.http.client.ClientHttpRequestFactory,org.springframework.beans.factory.DisposableBean {
  private static java.lang.Class<?> abstractHttpClientClass;

  private org.apache.http.client.HttpClient httpClient;

  private org.apache.http.client.config.RequestConfig requestConfig;

  private boolean bufferRequestBody;

  public org.springframework.http.client.HttpComponentsClientHttpRequestFactory();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/apache/http/impl/client/HttpClients.createSystem:()Lorg/apache/http/impl/client/CloseableHttpClient;
       4: invokespecial #2                  // Method "<init>":(Lorg/apache/http/client/HttpClient;)V
       7: return

  public org.springframework.http.client.HttpComponentsClientHttpRequestFactory(org.apache.http.client.HttpClient);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #4                  // Field bufferRequestBody:Z
       9: aload_1
      10: ldc           #5                  // String HttpClient must not be null
      12: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field httpClient:Lorg/apache/http/client/HttpClient;
      20: return

  public void setHttpClient(org.apache.http.client.HttpClient);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field httpClient:Lorg/apache/http/client/HttpClient;
       5: return

  public org.apache.http.client.HttpClient getHttpClient();
    Code:
       0: aload_0
       1: getfield      #7                  // Field httpClient:Lorg/apache/http/client/HttpClient;
       4: areturn

  public void setConnectTimeout(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #8                  // String Timeout must be a non-negative value
      11: invokestatic  #9                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: aload_0
      16: invokespecial #10                 // Method requestConfigBuilder:()Lorg/apache/http/client/config/RequestConfig$Builder;
      19: iload_1
      20: invokevirtual #11                 // Method org/apache/http/client/config/RequestConfig$Builder.setConnectTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      23: invokevirtual #12                 // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
      26: putfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      29: aload_0
      30: aload_0
      31: invokevirtual #14                 // Method getHttpClient:()Lorg/apache/http/client/HttpClient;
      34: iload_1
      35: invokespecial #15                 // Method setLegacyConnectionTimeout:(Lorg/apache/http/client/HttpClient;I)V
      38: return

  private void setLegacyConnectionTimeout(org.apache.http.client.HttpClient, int);
    Code:
       0: getstatic     #16                 // Field abstractHttpClientClass:Ljava/lang/Class;
       3: ifnull        31
       6: getstatic     #16                 // Field abstractHttpClientClass:Ljava/lang/Class;
       9: aload_1
      10: invokevirtual #17                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      13: ifeq          31
      16: aload_1
      17: invokeinterface #18,  1           // InterfaceMethod org/apache/http/client/HttpClient.getParams:()Lorg/apache/http/params/HttpParams;
      22: ldc           #20                 // String http.connection.timeout
      24: iload_2
      25: invokeinterface #21,  3           // InterfaceMethod org/apache/http/params/HttpParams.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;
      30: pop
      31: return

  public void setConnectionRequestTimeout(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #10                 // Method requestConfigBuilder:()Lorg/apache/http/client/config/RequestConfig$Builder;
       5: iload_1
       6: invokevirtual #22                 // Method org/apache/http/client/config/RequestConfig$Builder.setConnectionRequestTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
       9: invokevirtual #12                 // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
      12: putfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      15: return

  public void setReadTimeout(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #8                  // String Timeout must be a non-negative value
      11: invokestatic  #9                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: aload_0
      16: invokespecial #10                 // Method requestConfigBuilder:()Lorg/apache/http/client/config/RequestConfig$Builder;
      19: iload_1
      20: invokevirtual #23                 // Method org/apache/http/client/config/RequestConfig$Builder.setSocketTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      23: invokevirtual #12                 // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
      26: putfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      29: aload_0
      30: aload_0
      31: invokevirtual #14                 // Method getHttpClient:()Lorg/apache/http/client/HttpClient;
      34: iload_1
      35: invokespecial #24                 // Method setLegacySocketTimeout:(Lorg/apache/http/client/HttpClient;I)V
      38: return

  private void setLegacySocketTimeout(org.apache.http.client.HttpClient, int);
    Code:
       0: getstatic     #16                 // Field abstractHttpClientClass:Ljava/lang/Class;
       3: ifnull        31
       6: getstatic     #16                 // Field abstractHttpClientClass:Ljava/lang/Class;
       9: aload_1
      10: invokevirtual #17                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      13: ifeq          31
      16: aload_1
      17: invokeinterface #18,  1           // InterfaceMethod org/apache/http/client/HttpClient.getParams:()Lorg/apache/http/params/HttpParams;
      22: ldc           #25                 // String http.socket.timeout
      24: iload_2
      25: invokeinterface #21,  3           // InterfaceMethod org/apache/http/params/HttpParams.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;
      30: pop
      31: return

  public void setBufferRequestBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field bufferRequestBody:Z
       5: return

  public org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI, org.springframework.http.HttpMethod) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getHttpClient:()Lorg/apache/http/client/HttpClient;
       4: astore_3
       5: aload_3
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #26                 // String Synchronous execution requires an HttpClient to be set
      16: invokestatic  #27                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      19: aload_0
      20: aload_2
      21: aload_1
      22: invokevirtual #28                 // Method createHttpUriRequest:(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/apache/http/client/methods/HttpUriRequest;
      25: astore        4
      27: aload_0
      28: aload         4
      30: invokevirtual #29                 // Method postProcessHttpRequest:(Lorg/apache/http/client/methods/HttpUriRequest;)V
      33: aload_0
      34: aload_2
      35: aload_1
      36: invokevirtual #30                 // Method createHttpContext:(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/apache/http/protocol/HttpContext;
      39: astore        5
      41: aload         5
      43: ifnonnull     51
      46: invokestatic  #31                 // Method org/apache/http/client/protocol/HttpClientContext.create:()Lorg/apache/http/client/protocol/HttpClientContext;
      49: astore        5
      51: aload         5
      53: ldc           #33                 // String http.request-config
      55: invokeinterface #34,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      60: ifnonnull     114
      63: aconst_null
      64: astore        6
      66: aload         4
      68: instanceof    #35                 // class org/apache/http/client/methods/Configurable
      71: ifeq          86
      74: aload         4
      76: checkcast     #35                 // class org/apache/http/client/methods/Configurable
      79: invokeinterface #36,  1           // InterfaceMethod org/apache/http/client/methods/Configurable.getConfig:()Lorg/apache/http/client/config/RequestConfig;
      84: astore        6
      86: aload         6
      88: ifnonnull     98
      91: aload_0
      92: aload_3
      93: invokevirtual #37                 // Method createRequestConfig:(Ljava/lang/Object;)Lorg/apache/http/client/config/RequestConfig;
      96: astore        6
      98: aload         6
     100: ifnull        114
     103: aload         5
     105: ldc           #33                 // String http.request-config
     107: aload         6
     109: invokeinterface #38,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     114: aload_0
     115: getfield      #4                  // Field bufferRequestBody:Z
     118: ifeq          134
     121: new           #39                 // class org/springframework/http/client/HttpComponentsClientHttpRequest
     124: dup
     125: aload_3
     126: aload         4
     128: aload         5
     130: invokespecial #40                 // Method org/springframework/http/client/HttpComponentsClientHttpRequest."<init>":(Lorg/apache/http/client/HttpClient;Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)V
     133: areturn
     134: new           #41                 // class org/springframework/http/client/HttpComponentsStreamingClientHttpRequest
     137: dup
     138: aload_3
     139: aload         4
     141: aload         5
     143: invokespecial #42                 // Method org/springframework/http/client/HttpComponentsStreamingClientHttpRequest."<init>":(Lorg/apache/http/client/HttpClient;Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)V
     146: areturn

  private org.apache.http.client.config.RequestConfig$Builder requestConfigBuilder();
    Code:
       0: aload_0
       1: getfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
       4: ifnull        17
       7: aload_0
       8: getfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      11: invokestatic  #43                 // Method org/apache/http/client/config/RequestConfig.copy:(Lorg/apache/http/client/config/RequestConfig;)Lorg/apache/http/client/config/RequestConfig$Builder;
      14: goto          20
      17: invokestatic  #44                 // Method org/apache/http/client/config/RequestConfig.custom:()Lorg/apache/http/client/config/RequestConfig$Builder;
      20: areturn

  protected org.apache.http.client.config.RequestConfig createRequestConfig(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #35                 // class org/apache/http/client/methods/Configurable
       4: ifeq          23
       7: aload_1
       8: checkcast     #35                 // class org/apache/http/client/methods/Configurable
      11: invokeinterface #36,  1           // InterfaceMethod org/apache/http/client/methods/Configurable.getConfig:()Lorg/apache/http/client/config/RequestConfig;
      16: astore_2
      17: aload_0
      18: aload_2
      19: invokevirtual #45                 // Method mergeRequestConfig:(Lorg/apache/http/client/config/RequestConfig;)Lorg/apache/http/client/config/RequestConfig;
      22: areturn
      23: aload_0
      24: getfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      27: areturn

  protected org.apache.http.client.config.RequestConfig mergeRequestConfig(org.apache.http.client.config.RequestConfig);
    Code:
       0: aload_0
       1: getfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: aload_1
      10: invokestatic  #43                 // Method org/apache/http/client/config/RequestConfig.copy:(Lorg/apache/http/client/config/RequestConfig;)Lorg/apache/http/client/config/RequestConfig$Builder;
      13: astore_2
      14: aload_0
      15: getfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      18: invokevirtual #46                 // Method org/apache/http/client/config/RequestConfig.getConnectTimeout:()I
      21: istore_3
      22: iload_3
      23: iflt          32
      26: aload_2
      27: iload_3
      28: invokevirtual #11                 // Method org/apache/http/client/config/RequestConfig$Builder.setConnectTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      31: pop
      32: aload_0
      33: getfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      36: invokevirtual #47                 // Method org/apache/http/client/config/RequestConfig.getConnectionRequestTimeout:()I
      39: istore        4
      41: iload         4
      43: iflt          53
      46: aload_2
      47: iload         4
      49: invokevirtual #22                 // Method org/apache/http/client/config/RequestConfig$Builder.setConnectionRequestTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      52: pop
      53: aload_0
      54: getfield      #13                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      57: invokevirtual #48                 // Method org/apache/http/client/config/RequestConfig.getSocketTimeout:()I
      60: istore        5
      62: iload         5
      64: iflt          74
      67: aload_2
      68: iload         5
      70: invokevirtual #23                 // Method org/apache/http/client/config/RequestConfig$Builder.setSocketTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      73: pop
      74: aload_2
      75: invokevirtual #12                 // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
      78: areturn

  protected org.apache.http.client.methods.HttpUriRequest createHttpUriRequest(org.springframework.http.HttpMethod, java.net.URI);
    Code:
       0: getstatic     #49                 // Field org/springframework/http/client/HttpComponentsClientHttpRequestFactory$1.$SwitchMap$org$springframework$http$HttpMethod:[I
       3: aload_1
       4: invokevirtual #50                 // Method org/springframework/http/HttpMethod.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 8
                     1: 56
                     2: 65
                     3: 74
                     4: 83
                     5: 92
                     6: 101
                     7: 110
                     8: 119
               default: 128
          }
      56: new           #51                 // class org/apache/http/client/methods/HttpGet
      59: dup
      60: aload_2
      61: invokespecial #52                 // Method org/apache/http/client/methods/HttpGet."<init>":(Ljava/net/URI;)V
      64: areturn
      65: new           #53                 // class org/apache/http/client/methods/HttpHead
      68: dup
      69: aload_2
      70: invokespecial #54                 // Method org/apache/http/client/methods/HttpHead."<init>":(Ljava/net/URI;)V
      73: areturn
      74: new           #55                 // class org/apache/http/client/methods/HttpPost
      77: dup
      78: aload_2
      79: invokespecial #56                 // Method org/apache/http/client/methods/HttpPost."<init>":(Ljava/net/URI;)V
      82: areturn
      83: new           #57                 // class org/apache/http/client/methods/HttpPut
      86: dup
      87: aload_2
      88: invokespecial #58                 // Method org/apache/http/client/methods/HttpPut."<init>":(Ljava/net/URI;)V
      91: areturn
      92: new           #59                 // class org/apache/http/client/methods/HttpPatch
      95: dup
      96: aload_2
      97: invokespecial #60                 // Method org/apache/http/client/methods/HttpPatch."<init>":(Ljava/net/URI;)V
     100: areturn
     101: new           #61                 // class org/springframework/http/client/HttpComponentsClientHttpRequestFactory$HttpDelete
     104: dup
     105: aload_2
     106: invokespecial #62                 // Method org/springframework/http/client/HttpComponentsClientHttpRequestFactory$HttpDelete."<init>":(Ljava/net/URI;)V
     109: areturn
     110: new           #63                 // class org/apache/http/client/methods/HttpOptions
     113: dup
     114: aload_2
     115: invokespecial #64                 // Method org/apache/http/client/methods/HttpOptions."<init>":(Ljava/net/URI;)V
     118: areturn
     119: new           #65                 // class org/apache/http/client/methods/HttpTrace
     122: dup
     123: aload_2
     124: invokespecial #66                 // Method org/apache/http/client/methods/HttpTrace."<init>":(Ljava/net/URI;)V
     127: areturn
     128: new           #67                 // class java/lang/IllegalArgumentException
     131: dup
     132: new           #68                 // class java/lang/StringBuilder
     135: dup
     136: invokespecial #69                 // Method java/lang/StringBuilder."<init>":()V
     139: ldc           #70                 // String Invalid HTTP method:
     141: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_1
     145: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     148: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: invokespecial #74                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     154: athrow

  protected void postProcessHttpRequest(org.apache.http.client.methods.HttpUriRequest);
    Code:
       0: return

  protected org.apache.http.protocol.HttpContext createHttpContext(org.springframework.http.HttpMethod, java.net.URI);
    Code:
       0: aconst_null
       1: areturn

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field httpClient:Lorg/apache/http/client/HttpClient;
       4: instanceof    #75                 // class java/io/Closeable
       7: ifeq          22
      10: aload_0
      11: getfield      #7                  // Field httpClient:Lorg/apache/http/client/HttpClient;
      14: checkcast     #75                 // class java/io/Closeable
      17: invokeinterface #76,  1           // InterfaceMethod java/io/Closeable.close:()V
      22: return

  static {};
    Code:
       0: ldc           #77                 // String org.apache.http.impl.client.AbstractHttpClient
       2: ldc           #78                 // class org/springframework/http/client/HttpComponentsClientHttpRequestFactory
       4: invokevirtual #79                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #80                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      10: putstatic     #16                 // Field abstractHttpClientClass:Ljava/lang/Class;
      13: goto          17
      16: astore_0
      17: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/ClassNotFoundException
}
