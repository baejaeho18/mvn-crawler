Compiled from "AbstractRequestLoggingFilter.java"
public abstract class org.springframework.web.filter.AbstractRequestLoggingFilter extends org.springframework.web.filter.OncePerRequestFilter {
  public static final java.lang.String DEFAULT_BEFORE_MESSAGE_PREFIX;

  public static final java.lang.String DEFAULT_BEFORE_MESSAGE_SUFFIX;

  public static final java.lang.String DEFAULT_AFTER_MESSAGE_PREFIX;

  public static final java.lang.String DEFAULT_AFTER_MESSAGE_SUFFIX;

  private static final int DEFAULT_MAX_PAYLOAD_LENGTH;

  private boolean includeQueryString;

  private boolean includeClientInfo;

  private boolean includeHeaders;

  private boolean includePayload;

  private int maxPayloadLength;

  private java.lang.String beforeMessagePrefix;

  private java.lang.String beforeMessageSuffix;

  private java.lang.String afterMessagePrefix;

  private java.lang.String afterMessageSuffix;

  public org.springframework.web.filter.AbstractRequestLoggingFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field includeQueryString:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field includeClientInfo:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field includeHeaders:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field includePayload:Z
      24: aload_0
      25: bipush        50
      27: putfield      #7                  // Field maxPayloadLength:I
      30: aload_0
      31: ldc           #8                  // String Before request [
      33: putfield      #9                  // Field beforeMessagePrefix:Ljava/lang/String;
      36: aload_0
      37: ldc           #10                 // String ]
      39: putfield      #11                 // Field beforeMessageSuffix:Ljava/lang/String;
      42: aload_0
      43: ldc           #12                 // String After request [
      45: putfield      #13                 // Field afterMessagePrefix:Ljava/lang/String;
      48: aload_0
      49: ldc           #10                 // String ]
      51: putfield      #14                 // Field afterMessageSuffix:Ljava/lang/String;
      54: return

  public void setIncludeQueryString(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field includeQueryString:Z
       5: return

  protected boolean isIncludeQueryString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field includeQueryString:Z
       4: ireturn

  public void setIncludeClientInfo(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field includeClientInfo:Z
       5: return

  protected boolean isIncludeClientInfo();
    Code:
       0: aload_0
       1: getfield      #3                  // Field includeClientInfo:Z
       4: ireturn

  public void setIncludeHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field includeHeaders:Z
       5: return

  public boolean isIncludeHeaders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field includeHeaders:Z
       4: ireturn

  public void setIncludePayload(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field includePayload:Z
       5: return

  protected boolean isIncludePayload();
    Code:
       0: aload_0
       1: getfield      #5                  // Field includePayload:Z
       4: ireturn

  public void setMaxPayloadLength(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #15                 // String \'maxPayloadLength\' should be larger than or equal to 0
      11: invokestatic  #16                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #7                  // Field maxPayloadLength:I
      19: return

  protected int getMaxPayloadLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxPayloadLength:I
       4: ireturn

  public void setBeforeMessagePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field beforeMessagePrefix:Ljava/lang/String;
       5: return

  public void setBeforeMessageSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field beforeMessageSuffix:Ljava/lang/String;
       5: return

  public void setAfterMessagePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field afterMessagePrefix:Ljava/lang/String;
       5: return

  public void setAfterMessageSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field afterMessageSuffix:Ljava/lang/String;
       5: return

  protected boolean shouldNotFilterAsyncDispatch();
    Code:
       0: iconst_0
       1: ireturn

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method isAsyncDispatch:(Ljavax/servlet/http/HttpServletRequest;)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore        4
      15: aload_1
      16: astore        5
      18: aload_0
      19: invokevirtual #18                 // Method isIncludePayload:()Z
      22: ifeq          47
      25: iload         4
      27: ifeq          47
      30: aload_1
      31: instanceof    #19                 // class org/springframework/web/util/ContentCachingRequestWrapper
      34: ifne          47
      37: new           #19                 // class org/springframework/web/util/ContentCachingRequestWrapper
      40: dup
      41: aload_1
      42: invokespecial #20                 // Method org/springframework/web/util/ContentCachingRequestWrapper."<init>":(Ljavax/servlet/http/HttpServletRequest;)V
      45: astore        5
      47: aload_0
      48: aload         5
      50: invokevirtual #21                 // Method shouldLog:(Ljavax/servlet/http/HttpServletRequest;)Z
      53: istore        6
      55: iload         6
      57: ifeq          77
      60: iload         4
      62: ifeq          77
      65: aload_0
      66: aload         5
      68: aload_0
      69: aload         5
      71: invokespecial #22                 // Method getBeforeMessage:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      74: invokevirtual #23                 // Method beforeRequest:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
      77: aload_3
      78: aload         5
      80: aload_2
      81: invokeinterface #24,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      86: iload         6
      88: ifeq          146
      91: aload_0
      92: aload         5
      94: invokevirtual #25                 // Method isAsyncStarted:(Ljavax/servlet/http/HttpServletRequest;)Z
      97: ifne          146
     100: aload_0
     101: aload         5
     103: aload_0
     104: aload         5
     106: invokespecial #26                 // Method getAfterMessage:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
     109: invokevirtual #27                 // Method afterRequest:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
     112: goto          146
     115: astore        7
     117: iload         6
     119: ifeq          143
     122: aload_0
     123: aload         5
     125: invokevirtual #25                 // Method isAsyncStarted:(Ljavax/servlet/http/HttpServletRequest;)Z
     128: ifne          143
     131: aload_0
     132: aload         5
     134: aload_0
     135: aload         5
     137: invokespecial #26                 // Method getAfterMessage:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
     140: invokevirtual #27                 // Method afterRequest:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
     143: aload         7
     145: athrow
     146: return
    Exception table:
       from    to  target type
          77    86   115   any
         115   117   115   any

  private java.lang.String getBeforeMessage(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #9                  // Field beforeMessagePrefix:Ljava/lang/String;
       6: aload_0
       7: getfield      #11                 // Field beforeMessageSuffix:Ljava/lang/String;
      10: invokevirtual #28                 // Method createMessage:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  private java.lang.String getAfterMessage(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #13                 // Field afterMessagePrefix:Ljava/lang/String;
       6: aload_0
       7: getfield      #14                 // Field afterMessageSuffix:Ljava/lang/String;
      10: invokevirtual #28                 // Method createMessage:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  protected java.lang.String createMessage(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String);
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_2
      12: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: aload         4
      18: ldc           #32                 // String uri=
      20: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokeinterface #33,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      29: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_0
      34: invokevirtual #34                 // Method isIncludeQueryString:()Z
      37: ifeq          66
      40: aload_1
      41: invokeinterface #35,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      46: astore        5
      48: aload         5
      50: ifnull        66
      53: aload         4
      55: bipush        63
      57: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: aload         5
      62: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_0
      67: invokevirtual #37                 // Method isIncludeClientInfo:()Z
      70: ifeq          160
      73: aload_1
      74: invokeinterface #38,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteAddr:()Ljava/lang/String;
      79: astore        5
      81: aload         5
      83: invokestatic  #39                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      86: ifeq          102
      89: aload         4
      91: ldc           #40                 // String ;client=
      93: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload         5
      98: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: pop
     102: aload_1
     103: iconst_0
     104: invokeinterface #41,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
     109: astore        6
     111: aload         6
     113: ifnull        134
     116: aload         4
     118: ldc           #42                 // String ;session=
     120: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload         6
     125: invokeinterface #43,  1           // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
     130: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: pop
     134: aload_1
     135: invokeinterface #44,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteUser:()Ljava/lang/String;
     140: astore        7
     142: aload         7
     144: ifnull        160
     147: aload         4
     149: ldc           #45                 // String ;user=
     151: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload         7
     156: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: pop
     160: aload_0
     161: invokevirtual #46                 // Method isIncludeHeaders:()Z
     164: ifeq          189
     167: aload         4
     169: ldc           #47                 // String ;headers=
     171: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: new           #48                 // class org/springframework/http/server/ServletServerHttpRequest
     177: dup
     178: aload_1
     179: invokespecial #49                 // Method org/springframework/http/server/ServletServerHttpRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;)V
     182: invokevirtual #50                 // Method org/springframework/http/server/ServletServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
     185: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     188: pop
     189: aload_0
     190: invokevirtual #18                 // Method isIncludePayload:()Z
     193: ifeq          278
     196: aload_1
     197: ldc           #19                 // class org/springframework/web/util/ContentCachingRequestWrapper
     199: invokestatic  #52                 // Method org/springframework/web/util/WebUtils.getNativeRequest:(Ljavax/servlet/ServletRequest;Ljava/lang/Class;)Ljava/lang/Object;
     202: checkcast     #19                 // class org/springframework/web/util/ContentCachingRequestWrapper
     205: astore        5
     207: aload         5
     209: ifnull        278
     212: aload         5
     214: invokevirtual #53                 // Method org/springframework/web/util/ContentCachingRequestWrapper.getContentAsByteArray:()[B
     217: astore        6
     219: aload         6
     221: arraylength
     222: ifle          278
     225: aload         6
     227: arraylength
     228: aload_0
     229: invokevirtual #54                 // Method getMaxPayloadLength:()I
     232: invokestatic  #55                 // Method java/lang/Math.min:(II)I
     235: istore        7
     237: new           #56                 // class java/lang/String
     240: dup
     241: aload         6
     243: iconst_0
     244: iload         7
     246: aload         5
     248: invokevirtual #57                 // Method org/springframework/web/util/ContentCachingRequestWrapper.getCharacterEncoding:()Ljava/lang/String;
     251: invokespecial #58                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
     254: astore        8
     256: goto          265
     259: astore        9
     261: ldc           #60                 // String [unknown]
     263: astore        8
     265: aload         4
     267: ldc           #61                 // String ;payload=
     269: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: aload         8
     274: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     277: pop
     278: aload         4
     280: aload_3
     281: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     284: pop
     285: aload         4
     287: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     290: areturn
    Exception table:
       from    to  target type
         237   256   259   Class java/io/UnsupportedEncodingException

  protected boolean shouldLog(javax.servlet.http.HttpServletRequest);
    Code:
       0: iconst_1
       1: ireturn

  protected abstract void beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String);

  protected abstract void afterRequest(javax.servlet.http.HttpServletRequest, java.lang.String);
}
