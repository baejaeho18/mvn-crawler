Compiled from "Netty4ClientHttpRequestFactory.java"
public class org.springframework.http.client.Netty4ClientHttpRequestFactory implements org.springframework.http.client.ClientHttpRequestFactory,org.springframework.http.client.AsyncClientHttpRequestFactory,org.springframework.beans.factory.InitializingBean,org.springframework.beans.factory.DisposableBean {
  public static final int DEFAULT_MAX_RESPONSE_SIZE;

  private final io.netty.channel.EventLoopGroup eventLoopGroup;

  private final boolean defaultEventLoopGroup;

  private int maxResponseSize;

  private io.netty.handler.ssl.SslContext sslContext;

  private int connectTimeout;

  private int readTimeout;

  private volatile io.netty.bootstrap.Bootstrap bootstrap;

  public org.springframework.http.client.Netty4ClientHttpRequestFactory();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #6                  // int 10485760
       7: putfield      #2                  // Field maxResponseSize:I
      10: aload_0
      11: iconst_m1
      12: putfield      #7                  // Field connectTimeout:I
      15: aload_0
      16: iconst_m1
      17: putfield      #1                  // Field readTimeout:I
      20: invokestatic  #8                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      23: invokevirtual #9                  // Method java/lang/Runtime.availableProcessors:()I
      26: iconst_2
      27: imul
      28: istore_1
      29: aload_0
      30: new           #10                 // class io/netty/channel/nio/NioEventLoopGroup
      33: dup
      34: iload_1
      35: invokespecial #11                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(I)V
      38: putfield      #12                 // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
      41: aload_0
      42: iconst_1
      43: putfield      #13                 // Field defaultEventLoopGroup:Z
      46: return

  public org.springframework.http.client.Netty4ClientHttpRequestFactory(io.netty.channel.EventLoopGroup);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #6                  // int 10485760
       7: putfield      #2                  // Field maxResponseSize:I
      10: aload_0
      11: iconst_m1
      12: putfield      #7                  // Field connectTimeout:I
      15: aload_0
      16: iconst_m1
      17: putfield      #1                  // Field readTimeout:I
      20: aload_1
      21: ldc           #14                 // String EventLoopGroup must not be null
      23: invokestatic  #15                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_1
      28: putfield      #12                 // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
      31: aload_0
      32: iconst_0
      33: putfield      #13                 // Field defaultEventLoopGroup:Z
      36: return

  public void setMaxResponseSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxResponseSize:I
       5: return

  public void setSslContext(io.netty.handler.ssl.SslContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field sslContext:Lio/netty/handler/ssl/SslContext;
       5: return

  public void setConnectTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field connectTimeout:I
       5: return

  public void setReadTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field readTimeout:I
       5: return

  private io.netty.bootstrap.Bootstrap getBootstrap();
    Code:
       0: aload_0
       1: getfield      #16                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
       4: ifnonnull     51
       7: new           #17                 // class io/netty/bootstrap/Bootstrap
      10: dup
      11: invokespecial #18                 // Method io/netty/bootstrap/Bootstrap."<init>":()V
      14: astore_1
      15: aload_1
      16: aload_0
      17: getfield      #12                 // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
      20: invokevirtual #19                 // Method io/netty/bootstrap/Bootstrap.group:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/AbstractBootstrap;
      23: checkcast     #17                 // class io/netty/bootstrap/Bootstrap
      26: ldc           #20                 // class io/netty/channel/socket/nio/NioSocketChannel
      28: invokevirtual #21                 // Method io/netty/bootstrap/Bootstrap.channel:(Ljava/lang/Class;)Lio/netty/bootstrap/AbstractBootstrap;
      31: checkcast     #17                 // class io/netty/bootstrap/Bootstrap
      34: new           #22                 // class org/springframework/http/client/Netty4ClientHttpRequestFactory$1
      37: dup
      38: aload_0
      39: invokespecial #23                 // Method org/springframework/http/client/Netty4ClientHttpRequestFactory$1."<init>":(Lorg/springframework/http/client/Netty4ClientHttpRequestFactory;)V
      42: invokevirtual #24                 // Method io/netty/bootstrap/Bootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/AbstractBootstrap;
      45: pop
      46: aload_0
      47: aload_1
      48: putfield      #16                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
      51: aload_0
      52: getfield      #16                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
      55: areturn

  protected void configureChannel(io.netty.channel.socket.SocketChannelConfig);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectTimeout:I
       4: iflt          18
       7: aload_1
       8: aload_0
       9: getfield      #7                  // Field connectTimeout:I
      12: invokeinterface #25,  2           // InterfaceMethod io/netty/channel/socket/SocketChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/socket/SocketChannelConfig;
      17: pop
      18: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method getBootstrap:()Lio/netty/bootstrap/Bootstrap;
       4: pop
       5: return

  public org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI, org.springframework.http.HttpMethod) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #27                 // Method createRequestInternal:(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/Netty4ClientHttpRequest;
       6: areturn

  public org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(java.net.URI, org.springframework.http.HttpMethod) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #27                 // Method createRequestInternal:(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/Netty4ClientHttpRequest;
       6: areturn

  private org.springframework.http.client.Netty4ClientHttpRequest createRequestInternal(java.net.URI, org.springframework.http.HttpMethod);
    Code:
       0: new           #28                 // class org/springframework/http/client/Netty4ClientHttpRequest
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method getBootstrap:()Lio/netty/bootstrap/Bootstrap;
       8: aload_1
       9: aload_2
      10: invokespecial #29                 // Method org/springframework/http/client/Netty4ClientHttpRequest."<init>":(Lio/netty/bootstrap/Bootstrap;Ljava/net/URI;Lorg/springframework/http/HttpMethod;)V
      13: areturn

  public void destroy() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field defaultEventLoopGroup:Z
       4: ifeq          22
       7: aload_0
       8: getfield      #12                 // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
      11: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
      16: invokeinterface #31,  1           // InterfaceMethod io/netty/util/concurrent/Future.sync:()Lio/netty/util/concurrent/Future;
      21: pop
      22: return

  static io.netty.handler.ssl.SslContext access$000(org.springframework.http.client.Netty4ClientHttpRequestFactory);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sslContext:Lio/netty/handler/ssl/SslContext;
       4: areturn

  static int access$100(org.springframework.http.client.Netty4ClientHttpRequestFactory);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxResponseSize:I
       4: ireturn

  static int access$200(org.springframework.http.client.Netty4ClientHttpRequestFactory);
    Code:
       0: aload_0
       1: getfield      #1                  // Field readTimeout:I
       4: ireturn
}
