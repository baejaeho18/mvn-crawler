Compiled from "SearchProductsRequest.java"
public class com.amazonaws.services.servicecatalog.model.SearchProductsRequest extends com.amazonaws.AmazonWebServiceRequest implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String acceptLanguage;

  private java.util.Map<java.lang.String, java.util.List<java.lang.String>> filters;

  private java.lang.Integer pageSize;

  private java.lang.String sortBy;

  private java.lang.String sortOrder;

  private java.lang.String pageToken;

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: return

  public void setAcceptLanguage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field acceptLanguage:Ljava/lang/String;
       5: return

  public java.lang.String getAcceptLanguage();
    Code:
       0: aload_0
       1: getfield      #2                  // Field acceptLanguage:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest withAcceptLanguage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setAcceptLanguage:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getFilters();
    Code:
       0: aload_0
       1: getfield      #4                  // Field filters:Ljava/util/Map;
       4: areturn

  public void setFilters(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field filters:Ljava/util/Map;
       5: return

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest withFilters(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setFilters:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest addFiltersEntry(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #4                  // Field filters:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #6                  // class java/util/HashMap
      12: dup
      13: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      16: putfield      #4                  // Field filters:Ljava/util/Map;
      19: aload_0
      20: getfield      #4                  // Field filters:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #9                  // class java/lang/IllegalArgumentException
      35: dup
      36: new           #10                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #12                 // String Duplicated keys (
      45: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #14                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #15                 // String ) are provided.
      57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #4                  // Field filters:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest clearFiltersEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #4                  // Field filters:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setPageSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field pageSize:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getPageSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field pageSize:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest withPageSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setPageSize:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setSortBy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field sortBy:Ljava/lang/String;
       5: return

  public java.lang.String getSortBy();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sortBy:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest withSortBy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method setSortBy:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSortBy(com.amazonaws.services.servicecatalog.model.ProductViewSortBy);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method com/amazonaws/services/servicecatalog/model/ProductViewSortBy.toString:()Ljava/lang/String;
       5: putfield      #21                 // Field sortBy:Ljava/lang/String;
       8: return

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest withSortBy(com.amazonaws.services.servicecatalog.model.ProductViewSortBy);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setSortBy:(Lcom/amazonaws/services/servicecatalog/model/ProductViewSortBy;)V
       5: aload_0
       6: areturn

  public void setSortOrder(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field sortOrder:Ljava/lang/String;
       5: return

  public java.lang.String getSortOrder();
    Code:
       0: aload_0
       1: getfield      #25                 // Field sortOrder:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest withSortOrder(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setSortOrder:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSortOrder(com.amazonaws.services.servicecatalog.model.SortOrder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method com/amazonaws/services/servicecatalog/model/SortOrder.toString:()Ljava/lang/String;
       5: putfield      #25                 // Field sortOrder:Ljava/lang/String;
       8: return

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest withSortOrder(com.amazonaws.services.servicecatalog.model.SortOrder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setSortOrder:(Lcom/amazonaws/services/servicecatalog/model/SortOrder;)V
       5: aload_0
       6: areturn

  public void setPageToken(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field pageToken:Ljava/lang/String;
       5: return

  public java.lang.String getPageToken();
    Code:
       0: aload_0
       1: getfield      #29                 // Field pageToken:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest withPageToken(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setPageToken:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #31                 // String {
      11: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #32                 // Method getAcceptLanguage:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #10                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #33                 // String AcceptLanguage:
      32: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #32                 // Method getAcceptLanguage:()Ljava/lang/String;
      39: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #34                 // String ,
      44: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #35                 // Method getFilters:()Ljava/util/Map;
      58: ifnull        93
      61: aload_1
      62: new           #10                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #36                 // String Filters:
      71: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #35                 // Method getFilters:()Ljava/util/Map;
      78: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #34                 // String ,
      83: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #38                 // Method getPageSize:()Ljava/lang/Integer;
      97: ifnull        132
     100: aload_1
     101: new           #10                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #39                 // String PageSize:
     110: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #38                 // Method getPageSize:()Ljava/lang/Integer;
     117: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #34                 // String ,
     122: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #40                 // Method getSortBy:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #10                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #41                 // String SortBy:
     149: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #40                 // Method getSortBy:()Ljava/lang/String;
     156: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #34                 // String ,
     161: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #42                 // Method getSortOrder:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #10                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #43                 // String SortOrder:
     188: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #42                 // Method getSortOrder:()Ljava/lang/String;
     195: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #34                 // String ,
     200: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #44                 // Method getPageToken:()Ljava/lang/String;
     214: ifnull        244
     217: aload_1
     218: new           #10                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #45                 // String PageToken:
     227: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #44                 // Method getPageToken:()Ljava/lang/String;
     234: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     240: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: pop
     244: aload_1
     245: ldc           #46                 // String }
     247: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: pop
     251: aload_1
     252: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     255: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #47                 // class com/amazonaws/services/servicecatalog/model/SearchProductsRequest
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #47                 // class com/amazonaws/services/servicecatalog/model/SearchProductsRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #32                 // Method getAcceptLanguage:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #32                 // Method getAcceptLanguage:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #32                 // Method getAcceptLanguage:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #32                 // Method getAcceptLanguage:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #32                 // Method getAcceptLanguage:()Ljava/lang/String;
      72: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #35                 // Method getFilters:()Ljava/util/Map;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #35                 // Method getFilters:()Ljava/util/Map;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #35                 // Method getFilters:()Ljava/util/Map;
     114: ifnull        135
     117: aload_2
     118: invokevirtual #35                 // Method getFilters:()Ljava/util/Map;
     121: aload_0
     122: invokevirtual #35                 // Method getFilters:()Ljava/util/Map;
     125: invokeinterface #49,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     130: ifne          135
     133: iconst_0
     134: ireturn
     135: aload_2
     136: invokevirtual #38                 // Method getPageSize:()Ljava/lang/Integer;
     139: ifnonnull     146
     142: iconst_1
     143: goto          147
     146: iconst_0
     147: aload_0
     148: invokevirtual #38                 // Method getPageSize:()Ljava/lang/Integer;
     151: ifnonnull     158
     154: iconst_1
     155: goto          159
     158: iconst_0
     159: ixor
     160: ifeq          165
     163: iconst_0
     164: ireturn
     165: aload_2
     166: invokevirtual #38                 // Method getPageSize:()Ljava/lang/Integer;
     169: ifnull        188
     172: aload_2
     173: invokevirtual #38                 // Method getPageSize:()Ljava/lang/Integer;
     176: aload_0
     177: invokevirtual #38                 // Method getPageSize:()Ljava/lang/Integer;
     180: invokevirtual #50                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     183: ifne          188
     186: iconst_0
     187: ireturn
     188: aload_2
     189: invokevirtual #40                 // Method getSortBy:()Ljava/lang/String;
     192: ifnonnull     199
     195: iconst_1
     196: goto          200
     199: iconst_0
     200: aload_0
     201: invokevirtual #40                 // Method getSortBy:()Ljava/lang/String;
     204: ifnonnull     211
     207: iconst_1
     208: goto          212
     211: iconst_0
     212: ixor
     213: ifeq          218
     216: iconst_0
     217: ireturn
     218: aload_2
     219: invokevirtual #40                 // Method getSortBy:()Ljava/lang/String;
     222: ifnull        241
     225: aload_2
     226: invokevirtual #40                 // Method getSortBy:()Ljava/lang/String;
     229: aload_0
     230: invokevirtual #40                 // Method getSortBy:()Ljava/lang/String;
     233: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     236: ifne          241
     239: iconst_0
     240: ireturn
     241: aload_2
     242: invokevirtual #42                 // Method getSortOrder:()Ljava/lang/String;
     245: ifnonnull     252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: aload_0
     254: invokevirtual #42                 // Method getSortOrder:()Ljava/lang/String;
     257: ifnonnull     264
     260: iconst_1
     261: goto          265
     264: iconst_0
     265: ixor
     266: ifeq          271
     269: iconst_0
     270: ireturn
     271: aload_2
     272: invokevirtual #42                 // Method getSortOrder:()Ljava/lang/String;
     275: ifnull        294
     278: aload_2
     279: invokevirtual #42                 // Method getSortOrder:()Ljava/lang/String;
     282: aload_0
     283: invokevirtual #42                 // Method getSortOrder:()Ljava/lang/String;
     286: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     289: ifne          294
     292: iconst_0
     293: ireturn
     294: aload_2
     295: invokevirtual #44                 // Method getPageToken:()Ljava/lang/String;
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: aload_0
     307: invokevirtual #44                 // Method getPageToken:()Ljava/lang/String;
     310: ifnonnull     317
     313: iconst_1
     314: goto          318
     317: iconst_0
     318: ixor
     319: ifeq          324
     322: iconst_0
     323: ireturn
     324: aload_2
     325: invokevirtual #44                 // Method getPageToken:()Ljava/lang/String;
     328: ifnull        347
     331: aload_2
     332: invokevirtual #44                 // Method getPageToken:()Ljava/lang/String;
     335: aload_0
     336: invokevirtual #44                 // Method getPageToken:()Ljava/lang/String;
     339: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     342: ifne          347
     345: iconst_0
     346: ireturn
     347: iconst_1
     348: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #32                 // Method getAcceptLanguage:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #32                 // Method getAcceptLanguage:()Ljava/lang/String;
      24: invokevirtual #51                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #35                 // Method getFilters:()Ljava/util/Map;
      37: ifnonnull     44
      40: iconst_0
      41: goto          53
      44: aload_0
      45: invokevirtual #35                 // Method getFilters:()Ljava/util/Map;
      48: invokeinterface #52,  1           // InterfaceMethod java/util/Map.hashCode:()I
      53: iadd
      54: istore_2
      55: bipush        31
      57: iload_2
      58: imul
      59: aload_0
      60: invokevirtual #38                 // Method getPageSize:()Ljava/lang/Integer;
      63: ifnonnull     70
      66: iconst_0
      67: goto          77
      70: aload_0
      71: invokevirtual #38                 // Method getPageSize:()Ljava/lang/Integer;
      74: invokevirtual #53                 // Method java/lang/Integer.hashCode:()I
      77: iadd
      78: istore_2
      79: bipush        31
      81: iload_2
      82: imul
      83: aload_0
      84: invokevirtual #40                 // Method getSortBy:()Ljava/lang/String;
      87: ifnonnull     94
      90: iconst_0
      91: goto          101
      94: aload_0
      95: invokevirtual #40                 // Method getSortBy:()Ljava/lang/String;
      98: invokevirtual #51                 // Method java/lang/String.hashCode:()I
     101: iadd
     102: istore_2
     103: bipush        31
     105: iload_2
     106: imul
     107: aload_0
     108: invokevirtual #42                 // Method getSortOrder:()Ljava/lang/String;
     111: ifnonnull     118
     114: iconst_0
     115: goto          125
     118: aload_0
     119: invokevirtual #42                 // Method getSortOrder:()Ljava/lang/String;
     122: invokevirtual #51                 // Method java/lang/String.hashCode:()I
     125: iadd
     126: istore_2
     127: bipush        31
     129: iload_2
     130: imul
     131: aload_0
     132: invokevirtual #44                 // Method getPageToken:()Ljava/lang/String;
     135: ifnonnull     142
     138: iconst_0
     139: goto          149
     142: aload_0
     143: invokevirtual #44                 // Method getPageToken:()Ljava/lang/String;
     146: invokevirtual #51                 // Method java/lang/String.hashCode:()I
     149: iadd
     150: istore_2
     151: iload_2
     152: ireturn

  public com.amazonaws.services.servicecatalog.model.SearchProductsRequest clone();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method com/amazonaws/AmazonWebServiceRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
       4: checkcast     #47                 // class com/amazonaws/services/servicecatalog/model/SearchProductsRequest
       7: areturn

  public com.amazonaws.AmazonWebServiceRequest clone();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method clone:()Lcom/amazonaws/services/servicecatalog/model/SearchProductsRequest;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method clone:()Lcom/amazonaws/services/servicecatalog/model/SearchProductsRequest;
       4: areturn
}
