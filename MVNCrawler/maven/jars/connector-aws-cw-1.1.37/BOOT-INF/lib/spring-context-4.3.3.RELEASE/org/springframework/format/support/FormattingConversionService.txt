Compiled from "FormattingConversionService.java"
public class org.springframework.format.support.FormattingConversionService extends org.springframework.core.convert.support.GenericConversionService implements org.springframework.format.FormatterRegistry,org.springframework.context.EmbeddedValueResolverAware {
  private org.springframework.util.StringValueResolver embeddedValueResolver;

  private final java.util.Map<org.springframework.format.support.FormattingConversionService$AnnotationConverterKey, org.springframework.core.convert.converter.GenericConverter> cachedPrinters;

  private final java.util.Map<org.springframework.format.support.FormattingConversionService$AnnotationConverterKey, org.springframework.core.convert.converter.GenericConverter> cachedParsers;

  public org.springframework.format.support.FormattingConversionService();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/core/convert/support/GenericConversionService."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        64
      11: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #2                  // Field cachedPrinters:Ljava/util/Map;
      17: aload_0
      18: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: bipush        64
      24: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      27: putfield      #1                  // Field cachedParsers:Ljava/util/Map;
      30: return

  public void setEmbeddedValueResolver(org.springframework.util.StringValueResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field embeddedValueResolver:Lorg/springframework/util/StringValueResolver;
       5: return

  public void addFormatter(org.springframework.format.Formatter<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #7                  // Method getFieldType:(Lorg/springframework/format/Formatter;)Ljava/lang/Class;
       5: aload_1
       6: invokevirtual #8                  // Method addFormatterForFieldType:(Ljava/lang/Class;Lorg/springframework/format/Formatter;)V
       9: return

  public void addFormatterForFieldType(java.lang.Class<?>, org.springframework.format.Formatter<?>);
    Code:
       0: aload_0
       1: new           #9                  // class org/springframework/format/support/FormattingConversionService$PrinterConverter
       4: dup
       5: aload_1
       6: aload_2
       7: aload_0
       8: invokespecial #10                 // Method org/springframework/format/support/FormattingConversionService$PrinterConverter."<init>":(Ljava/lang/Class;Lorg/springframework/format/Printer;Lorg/springframework/core/convert/ConversionService;)V
      11: invokevirtual #11                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      14: aload_0
      15: new           #12                 // class org/springframework/format/support/FormattingConversionService$ParserConverter
      18: dup
      19: aload_1
      20: aload_2
      21: aload_0
      22: invokespecial #13                 // Method org/springframework/format/support/FormattingConversionService$ParserConverter."<init>":(Ljava/lang/Class;Lorg/springframework/format/Parser;Lorg/springframework/core/convert/ConversionService;)V
      25: invokevirtual #11                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      28: return

  public void addFormatterForFieldType(java.lang.Class<?>, org.springframework.format.Printer<?>, org.springframework.format.Parser<?>);
    Code:
       0: aload_0
       1: new           #9                  // class org/springframework/format/support/FormattingConversionService$PrinterConverter
       4: dup
       5: aload_1
       6: aload_2
       7: aload_0
       8: invokespecial #10                 // Method org/springframework/format/support/FormattingConversionService$PrinterConverter."<init>":(Ljava/lang/Class;Lorg/springframework/format/Printer;Lorg/springframework/core/convert/ConversionService;)V
      11: invokevirtual #11                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      14: aload_0
      15: new           #12                 // class org/springframework/format/support/FormattingConversionService$ParserConverter
      18: dup
      19: aload_1
      20: aload_3
      21: aload_0
      22: invokespecial #13                 // Method org/springframework/format/support/FormattingConversionService$ParserConverter."<init>":(Ljava/lang/Class;Lorg/springframework/format/Parser;Lorg/springframework/core/convert/ConversionService;)V
      25: invokevirtual #11                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      28: return

  public void addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method getAnnotationType:(Lorg/springframework/format/AnnotationFormatterFactory;)Ljava/lang/Class;
       4: astore_2
       5: aload_0
       6: getfield      #6                  // Field embeddedValueResolver:Lorg/springframework/util/StringValueResolver;
       9: ifnull        32
      12: aload_1
      13: instanceof    #15                 // class org/springframework/context/EmbeddedValueResolverAware
      16: ifeq          32
      19: aload_1
      20: checkcast     #15                 // class org/springframework/context/EmbeddedValueResolverAware
      23: aload_0
      24: getfield      #6                  // Field embeddedValueResolver:Lorg/springframework/util/StringValueResolver;
      27: invokeinterface #16,  2           // InterfaceMethod org/springframework/context/EmbeddedValueResolverAware.setEmbeddedValueResolver:(Lorg/springframework/util/StringValueResolver;)V
      32: aload_1
      33: invokeinterface #17,  1           // InterfaceMethod org/springframework/format/AnnotationFormatterFactory.getFieldTypes:()Ljava/util/Set;
      38: astore_3
      39: aload_3
      40: invokeinterface #18,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      45: astore        4
      47: aload         4
      49: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          104
      57: aload         4
      59: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #21                 // class java/lang/Class
      67: astore        5
      69: aload_0
      70: new           #22                 // class org/springframework/format/support/FormattingConversionService$AnnotationPrinterConverter
      73: dup
      74: aload_0
      75: aload_2
      76: aload_1
      77: aload         5
      79: invokespecial #23                 // Method org/springframework/format/support/FormattingConversionService$AnnotationPrinterConverter."<init>":(Lorg/springframework/format/support/FormattingConversionService;Ljava/lang/Class;Lorg/springframework/format/AnnotationFormatterFactory;Ljava/lang/Class;)V
      82: invokevirtual #11                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      85: aload_0
      86: new           #24                 // class org/springframework/format/support/FormattingConversionService$AnnotationParserConverter
      89: dup
      90: aload_0
      91: aload_2
      92: aload_1
      93: aload         5
      95: invokespecial #25                 // Method org/springframework/format/support/FormattingConversionService$AnnotationParserConverter."<init>":(Lorg/springframework/format/support/FormattingConversionService;Ljava/lang/Class;Lorg/springframework/format/AnnotationFormatterFactory;Ljava/lang/Class;)V
      98: invokevirtual #11                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
     101: goto          47
     104: return

  static java.lang.Class<?> getFieldType(org.springframework.format.Formatter<?>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #27                 // class org/springframework/format/Formatter
       6: invokestatic  #28                 // Method org/springframework/core/GenericTypeResolver.resolveTypeArgument:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_1
      10: aload_1
      11: ifnonnull     52
      14: new           #29                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #30                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #32                 // String Unable to extract parameterized field type argument from Formatter [
      27: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
      37: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #35                 // String ]; does the formatter parameterize the <T> generic type?
      42: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_1
      53: areturn

  static java.lang.Class<? extends java.lang.annotation.Annotation> getAnnotationType(org.springframework.format.AnnotationFormatterFactory<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #38                 // class org/springframework/format/AnnotationFormatterFactory
       6: invokestatic  #28                 // Method org/springframework/core/GenericTypeResolver.resolveTypeArgument:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_1
      10: aload_1
      11: ifnonnull     52
      14: new           #29                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #30                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #39                 // String Unable to extract parameterized Annotation type argument from AnnotationFormatterFactory [
      27: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
      37: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #40                 // String ]; does the factory parameterize the <A extends Annotation> generic type?
      42: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_1
      53: areturn

  static java.util.Map access$000(org.springframework.format.support.FormattingConversionService);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cachedPrinters:Ljava/util/Map;
       4: areturn

  static java.util.Map access$100(org.springframework.format.support.FormattingConversionService);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cachedParsers:Ljava/util/Map;
       4: areturn
}
