Compiled from "GlassFishLoadTimeWeaver.java"
public class org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver implements org.springframework.instrument.classloading.LoadTimeWeaver {
  private static final java.lang.String INSTRUMENTABLE_LOADER_CLASS_NAME;

  private final java.lang.ClassLoader classLoader;

  private final java.lang.reflect.Method addTransformerMethod;

  private final java.lang.reflect.Method copyMethod;

  public org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/ClassLoader;)V
       7: return

  public org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String ClassLoader must not be null
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_1
      11: ldc           #7                  // String org.glassfish.api.deployment.InstrumentableClassLoader
      13: invokevirtual #8                  // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      16: astore_2
      17: goto          32
      20: astore_3
      21: new           #10                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #11                 // String Could not initialize GlassFishLoadTimeWeaver because GlassFish API classes are not available
      27: aload_3
      28: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      31: athrow
      32: aload_0
      33: aload_2
      34: ldc           #13                 // String addTransformer
      36: iconst_1
      37: anewarray     #14                 // class java/lang/Class
      40: dup
      41: iconst_0
      42: ldc           #15                 // class java/lang/instrument/ClassFileTransformer
      44: aastore
      45: invokevirtual #16                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      48: putfield      #17                 // Field addTransformerMethod:Ljava/lang/reflect/Method;
      51: aload_0
      52: aload_2
      53: ldc           #18                 // String copy
      55: iconst_0
      56: anewarray     #14                 // class java/lang/Class
      59: invokevirtual #16                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      62: putfield      #19                 // Field copyMethod:Ljava/lang/reflect/Method;
      65: goto          80
      68: astore_3
      69: new           #10                 // class java/lang/IllegalStateException
      72: dup
      73: ldc           #11                 // String Could not initialize GlassFishLoadTimeWeaver because GlassFish API classes are not available
      75: aload_3
      76: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      79: athrow
      80: aconst_null
      81: astore_3
      82: aload_1
      83: astore        4
      85: aload         4
      87: ifnull        116
      90: aload_3
      91: ifnonnull     116
      94: aload_2
      95: aload         4
      97: invokevirtual #21                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     100: ifeq          106
     103: aload         4
     105: astore_3
     106: aload         4
     108: invokevirtual #22                 // Method java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;
     111: astore        4
     113: goto          85
     116: aload_3
     117: ifnonnull     159
     120: new           #23                 // class java/lang/IllegalArgumentException
     123: dup
     124: new           #24                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     131: aload_1
     132: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     135: ldc           #27                 // String  and its parents are not suitable ClassLoaders: A [
     137: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_2
     141: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
     144: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: ldc           #30                 // String ] implementation is required.
     149: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: aload_0
     160: aload_3
     161: putfield      #33                 // Field classLoader:Ljava/lang/ClassLoader;
     164: return
    Exception table:
       from    to  target type
          10    17    20   Class java/lang/ClassNotFoundException
          32    65    68   Class java/lang/Exception

  public void addTransformer(java.lang.instrument.ClassFileTransformer);
    Code:
       0: aload_0
       1: getfield      #17                 // Field addTransformerMethod:Ljava/lang/reflect/Method;
       4: aload_0
       5: getfield      #33                 // Field classLoader:Ljava/lang/ClassLoader;
       8: iconst_1
       9: anewarray     #34                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokevirtual #35                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: goto          50
      23: astore_2
      24: new           #10                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #37                 // String GlassFish addTransformer method threw exception
      30: aload_2
      31: invokevirtual #38                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      34: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: athrow
      38: astore_2
      39: new           #10                 // class java/lang/IllegalStateException
      42: dup
      43: ldc           #39                 // String Could not invoke GlassFish addTransformer method
      45: aload_2
      46: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: athrow
      50: return
    Exception table:
       from    to  target type
           0    20    23   Class java/lang/reflect/InvocationTargetException
           0    20    38   Class java/lang/Exception

  public java.lang.ClassLoader getInstrumentableClassLoader();
    Code:
       0: aload_0
       1: getfield      #33                 // Field classLoader:Ljava/lang/ClassLoader;
       4: areturn

  public java.lang.ClassLoader getThrowawayClassLoader();
    Code:
       0: new           #40                 // class org/springframework/core/OverridingClassLoader
       3: dup
       4: aload_0
       5: getfield      #33                 // Field classLoader:Ljava/lang/ClassLoader;
       8: aload_0
       9: getfield      #19                 // Field copyMethod:Ljava/lang/reflect/Method;
      12: aload_0
      13: getfield      #33                 // Field classLoader:Ljava/lang/ClassLoader;
      16: iconst_0
      17: anewarray     #34                 // class java/lang/Object
      20: invokevirtual #35                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #41                 // class java/lang/ClassLoader
      26: invokespecial #42                 // Method org/springframework/core/OverridingClassLoader."<init>":(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)V
      29: areturn
      30: astore_1
      31: new           #10                 // class java/lang/IllegalStateException
      34: dup
      35: ldc           #43                 // String GlassFish copy method threw exception
      37: aload_1
      38: invokevirtual #38                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      41: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
      45: astore_1
      46: new           #10                 // class java/lang/IllegalStateException
      49: dup
      50: ldc           #44                 // String Could not invoke GlassFish copy method
      52: aload_1
      53: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      56: athrow
    Exception table:
       from    to  target type
           0    29    30   Class java/lang/reflect/InvocationTargetException
           0    29    45   Class java/lang/Exception
}
