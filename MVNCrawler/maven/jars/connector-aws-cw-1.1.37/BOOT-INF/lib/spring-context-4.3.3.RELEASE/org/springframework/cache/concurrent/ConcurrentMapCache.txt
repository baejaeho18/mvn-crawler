Compiled from "ConcurrentMapCache.java"
public class org.springframework.cache.concurrent.ConcurrentMapCache extends org.springframework.cache.support.AbstractValueAdaptingCache {
  private final java.lang.String name;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, java.lang.Object> store;

  private final org.springframework.core.serializer.support.SerializationDelegate serialization;

  public org.springframework.cache.concurrent.ConcurrentMapCache(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/util/concurrent/ConcurrentHashMap
       5: dup
       6: sipush        256
       9: invokespecial #2                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      12: iconst_1
      13: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/util/concurrent/ConcurrentMap;Z)V
      16: return

  public org.springframework.cache.concurrent.ConcurrentMapCache(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/util/concurrent/ConcurrentHashMap
       5: dup
       6: sipush        256
       9: invokespecial #2                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      12: iload_2
      13: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/util/concurrent/ConcurrentMap;Z)V
      16: return

  public org.springframework.cache.concurrent.ConcurrentMapCache(java.lang.String, java.util.concurrent.ConcurrentMap<java.lang.Object, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aconst_null
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Ljava/util/concurrent/ConcurrentMap;ZLorg/springframework/core/serializer/support/SerializationDelegate;)V
       8: return

  protected org.springframework.cache.concurrent.ConcurrentMapCache(java.lang.String, java.util.concurrent.ConcurrentMap<java.lang.Object, java.lang.Object>, boolean, org.springframework.core.serializer.support.SerializationDelegate);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #5                  // Method org/springframework/cache/support/AbstractValueAdaptingCache."<init>":(Z)V
       5: aload_1
       6: ldc           #6                  // String Name must not be null
       8: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_2
      12: ldc           #8                  // String Store must not be null
      14: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_0
      18: aload_1
      19: putfield      #9                  // Field name:Ljava/lang/String;
      22: aload_0
      23: aload_2
      24: putfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
      27: aload_0
      28: aload         4
      30: putfield      #11                 // Field serialization:Lorg/springframework/core/serializer/support/SerializationDelegate;
      33: return

  public final boolean isStoreByValue();
    Code:
       0: aload_0
       1: getfield      #11                 // Field serialization:Lorg/springframework/core/serializer/support/SerializationDelegate;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field name:Ljava/lang/String;
       4: areturn

  public final java.util.concurrent.ConcurrentMap<java.lang.Object, java.lang.Object> getNativeCache();
    Code:
       0: aload_0
       1: getfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  protected java.lang.Object lookup(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public <T> T get(java.lang.Object, java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          24
      13: aload_0
      14: aload_1
      15: invokevirtual #14                 // Method get:(Ljava/lang/Object;)Lorg/springframework/cache/Cache$ValueWrapper;
      18: invokeinterface #15,  1           // InterfaceMethod org/springframework/cache/Cache$ValueWrapper.get:()Ljava/lang/Object;
      23: areturn
      24: aload_0
      25: getfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
      28: dup
      29: astore_3
      30: monitorenter
      31: aload_0
      32: getfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
      35: aload_1
      36: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      41: ifeq          57
      44: aload_0
      45: aload_1
      46: invokevirtual #14                 // Method get:(Ljava/lang/Object;)Lorg/springframework/cache/Cache$ValueWrapper;
      49: invokeinterface #15,  1           // InterfaceMethod org/springframework/cache/Cache$ValueWrapper.get:()Ljava/lang/Object;
      54: aload_3
      55: monitorexit
      56: areturn
      57: aload_2
      58: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      63: astore        4
      65: goto          82
      68: astore        5
      70: new           #18                 // class org/springframework/cache/Cache$ValueRetrievalException
      73: dup
      74: aload_1
      75: aload_2
      76: aload         5
      78: invokespecial #19                 // Method org/springframework/cache/Cache$ValueRetrievalException."<init>":(Ljava/lang/Object;Ljava/util/concurrent/Callable;Ljava/lang/Throwable;)V
      81: athrow
      82: aload_0
      83: aload_1
      84: aload         4
      86: invokevirtual #20                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)V
      89: aload         4
      91: aload_3
      92: monitorexit
      93: areturn
      94: astore        6
      96: aload_3
      97: monitorexit
      98: aload         6
     100: athrow
    Exception table:
       from    to  target type
          57    65    68   Class java/lang/Exception
          31    56    94   any
          57    93    94   any
          94    98    94   any

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: aload_2
       7: invokevirtual #21                 // Method toStoreValue:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #22,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public org.springframework.cache.Cache$ValueWrapper putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: aload_2
       7: invokevirtual #21                 // Method toStoreValue:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokevirtual #24                 // Method toValueWrapper:(Ljava/lang/Object;)Lorg/springframework/cache/Cache$ValueWrapper;
      21: areturn

  public void evict(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #10                 // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  protected java.lang.Object toStoreValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method org/springframework/cache/support/AbstractValueAdaptingCache.toStoreValue:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_2
       6: aload_0
       7: getfield      #11                 // Field serialization:Lorg/springframework/core/serializer/support/SerializationDelegate;
      10: ifnull        53
      13: aload_0
      14: aload_2
      15: invokespecial #28                 // Method serializeValue:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn
      19: astore_3
      20: new           #29                 // class java/lang/IllegalArgumentException
      23: dup
      24: new           #30                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #32                 // String Failed to serialize cache value \'
      33: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #35                 // String \'. Does it implement Serializable?
      42: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: aload_3
      49: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      52: athrow
      53: aload_2
      54: areturn
    Exception table:
       from    to  target type
          13    18    19   Class java/lang/Exception

  private java.lang.Object serializeValue(java.lang.Object) throws java.io.IOException;
    Code:
       0: new           #38                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #39                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #11                 // Field serialization:Lorg/springframework/core/serializer/support/SerializationDelegate;
      12: aload_1
      13: aload_2
      14: invokevirtual #40                 // Method org/springframework/core/serializer/support/SerializationDelegate.serialize:(Ljava/lang/Object;Ljava/io/OutputStream;)V
      17: aload_2
      18: invokevirtual #41                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      21: astore_3
      22: aload_2
      23: invokevirtual #42                 // Method java/io/ByteArrayOutputStream.close:()V
      26: aload_3
      27: areturn
      28: astore        4
      30: aload_2
      31: invokevirtual #42                 // Method java/io/ByteArrayOutputStream.close:()V
      34: aload         4
      36: athrow
    Exception table:
       from    to  target type
           8    22    28   any
          28    30    28   any

  protected java.lang.Object fromStoreValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field serialization:Lorg/springframework/core/serializer/support/SerializationDelegate;
       4: ifnull        51
       7: aload_0
       8: aload_0
       9: aload_1
      10: invokespecial #43                 // Method deserializeValue:(Ljava/lang/Object;)Ljava/lang/Object;
      13: invokespecial #44                 // Method org/springframework/cache/support/AbstractValueAdaptingCache.fromStoreValue:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: astore_2
      18: new           #29                 // class java/lang/IllegalArgumentException
      21: dup
      22: new           #30                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #45                 // String Failed to deserialize cache value \'
      31: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #46                 // String \'
      40: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: aload_2
      47: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      50: athrow
      51: aload_0
      52: aload_1
      53: invokespecial #44                 // Method org/springframework/cache/support/AbstractValueAdaptingCache.fromStoreValue:(Ljava/lang/Object;)Ljava/lang/Object;
      56: areturn
    Exception table:
       from    to  target type
           7    16    17   Class java/lang/Exception

  private java.lang.Object deserializeValue(java.lang.Object) throws java.io.IOException;
    Code:
       0: new           #47                 // class java/io/ByteArrayInputStream
       3: dup
       4: aload_1
       5: checkcast     #48                 // class "[B"
       8: checkcast     #48                 // class "[B"
      11: invokespecial #49                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      14: astore_2
      15: aload_0
      16: getfield      #11                 // Field serialization:Lorg/springframework/core/serializer/support/SerializationDelegate;
      19: aload_2
      20: invokevirtual #50                 // Method org/springframework/core/serializer/support/SerializationDelegate.deserialize:(Ljava/io/InputStream;)Ljava/lang/Object;
      23: astore_3
      24: aload_2
      25: invokevirtual #51                 // Method java/io/ByteArrayInputStream.close:()V
      28: aload_3
      29: areturn
      30: astore        4
      32: aload_2
      33: invokevirtual #51                 // Method java/io/ByteArrayInputStream.close:()V
      36: aload         4
      38: athrow
    Exception table:
       from    to  target type
          15    24    30   any
          30    32    30   any

  public java.lang.Object getNativeCache();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getNativeCache:()Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
