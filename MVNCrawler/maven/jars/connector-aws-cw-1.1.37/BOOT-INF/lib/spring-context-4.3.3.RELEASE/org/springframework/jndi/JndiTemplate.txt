Compiled from "JndiTemplate.java"
public class org.springframework.jndi.JndiTemplate {
  protected final org.apache.commons.logging.Log logger;

  private java.util.Properties environment;

  public org.springframework.jndi.JndiTemplate();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public org.springframework.jndi.JndiTemplate(java.util.Properties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field environment:Ljava/util/Properties;
      20: return

  public void setEnvironment(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field environment:Ljava/util/Properties;
       5: return

  public java.util.Properties getEnvironment();
    Code:
       0: aload_0
       1: getfield      #5                  // Field environment:Ljava/util/Properties;
       4: areturn

  public <T> T execute(org.springframework.jndi.JndiCallback<T>) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getContext:()Ljavax/naming/Context;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokeinterface #7,  2            // InterfaceMethod org/springframework/jndi/JndiCallback.doInContext:(Ljavax/naming/Context;)Ljava/lang/Object;
      12: astore_3
      13: aload_0
      14: aload_2
      15: invokevirtual #8                  // Method releaseContext:(Ljavax/naming/Context;)V
      18: aload_3
      19: areturn
      20: astore        4
      22: aload_0
      23: aload_2
      24: invokevirtual #8                  // Method releaseContext:(Ljavax/naming/Context;)V
      27: aload         4
      29: athrow
    Exception table:
       from    to  target type
           5    13    20   any
          20    22    20   any

  public javax.naming.Context getContext() throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method createInitialContext:()Ljavax/naming/Context;
       4: areturn

  public void releaseContext(javax.naming.Context);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_1
       5: invokeinterface #10,  1           // InterfaceMethod javax/naming/Context.close:()V
      10: goto          26
      13: astore_2
      14: aload_0
      15: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      18: ldc           #12                 // String Could not close JNDI InitialContext
      20: aload_2
      21: invokeinterface #13,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      26: return
    Exception table:
       from    to  target type
           4    10    13   Class javax/naming/NamingException

  protected javax.naming.Context createInitialContext() throws javax.naming.NamingException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #14                 // Method getEnvironment:()Ljava/util/Properties;
       6: astore_2
       7: aload_2
       8: ifnull        28
      11: new           #15                 // class java/util/Hashtable
      14: dup
      15: aload_2
      16: invokevirtual #16                 // Method java/util/Properties.size:()I
      19: invokespecial #17                 // Method java/util/Hashtable."<init>":(I)V
      22: astore_1
      23: aload_2
      24: aload_1
      25: invokestatic  #18                 // Method org/springframework/util/CollectionUtils.mergePropertiesIntoMap:(Ljava/util/Properties;Ljava/util/Map;)V
      28: new           #19                 // class javax/naming/InitialContext
      31: dup
      32: aload_1
      33: invokespecial #20                 // Method javax/naming/InitialContext."<init>":(Ljava/util/Hashtable;)V
      36: areturn

  public java.lang.Object lookup(java.lang.String) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #22                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #24                 // String Looking up JNDI object with name [
      25: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #26                 // String ]
      34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #28,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_0
      46: new           #29                 // class org/springframework/jndi/JndiTemplate$1
      49: dup
      50: aload_0
      51: aload_1
      52: invokespecial #30                 // Method org/springframework/jndi/JndiTemplate$1."<init>":(Lorg/springframework/jndi/JndiTemplate;Ljava/lang/String;)V
      55: invokevirtual #31                 // Method execute:(Lorg/springframework/jndi/JndiCallback;)Ljava/lang/Object;
      58: areturn

  public <T> T lookup(java.lang.String, java.lang.Class<T>) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method lookup:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_2
       7: ifnull        40
      10: aload_2
      11: aload_3
      12: invokevirtual #33                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      15: ifne          40
      18: new           #34                 // class org/springframework/jndi/TypeMismatchNamingException
      21: dup
      22: aload_1
      23: aload_2
      24: aload_3
      25: ifnull        35
      28: aload_3
      29: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: goto          36
      35: aconst_null
      36: invokespecial #35                 // Method org/springframework/jndi/TypeMismatchNamingException."<init>":(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      39: athrow
      40: aload_3
      41: areturn

  public void bind(java.lang.String, java.lang.Object) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #22                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #36                 // String Binding JNDI object with name [
      25: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #26                 // String ]
      34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #28,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_0
      46: new           #37                 // class org/springframework/jndi/JndiTemplate$2
      49: dup
      50: aload_0
      51: aload_1
      52: aload_2
      53: invokespecial #38                 // Method org/springframework/jndi/JndiTemplate$2."<init>":(Lorg/springframework/jndi/JndiTemplate;Ljava/lang/String;Ljava/lang/Object;)V
      56: invokevirtual #31                 // Method execute:(Lorg/springframework/jndi/JndiCallback;)Ljava/lang/Object;
      59: pop
      60: return

  public void rebind(java.lang.String, java.lang.Object) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #22                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #39                 // String Rebinding JNDI object with name [
      25: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #26                 // String ]
      34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #28,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_0
      46: new           #40                 // class org/springframework/jndi/JndiTemplate$3
      49: dup
      50: aload_0
      51: aload_1
      52: aload_2
      53: invokespecial #41                 // Method org/springframework/jndi/JndiTemplate$3."<init>":(Lorg/springframework/jndi/JndiTemplate;Ljava/lang/String;Ljava/lang/Object;)V
      56: invokevirtual #31                 // Method execute:(Lorg/springframework/jndi/JndiCallback;)Ljava/lang/Object;
      59: pop
      60: return

  public void unbind(java.lang.String) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #22                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #42                 // String Unbinding JNDI object with name [
      25: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #26                 // String ]
      34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #28,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_0
      46: new           #43                 // class org/springframework/jndi/JndiTemplate$4
      49: dup
      50: aload_0
      51: aload_1
      52: invokespecial #44                 // Method org/springframework/jndi/JndiTemplate$4."<init>":(Lorg/springframework/jndi/JndiTemplate;Ljava/lang/String;)V
      55: invokevirtual #31                 // Method execute:(Lorg/springframework/jndi/JndiCallback;)Ljava/lang/Object;
      58: pop
      59: return
}
