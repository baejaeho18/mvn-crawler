Compiled from "BuddhistChronology.java"
public final class org.joda.time.chrono.BuddhistChronology extends org.joda.time.chrono.AssembledChronology {
  private static final long serialVersionUID;

  public static final int BE;

  private static final org.joda.time.DateTimeField ERA_FIELD;

  private static final int BUDDHIST_OFFSET;

  private static final java.util.concurrent.ConcurrentHashMap<org.joda.time.DateTimeZone, org.joda.time.chrono.BuddhistChronology> cCache;

  private static final org.joda.time.chrono.BuddhistChronology INSTANCE_UTC;

  public static org.joda.time.chrono.BuddhistChronology getInstanceUTC();
    Code:
       0: getstatic     #1                  // Field INSTANCE_UTC:Lorg/joda/time/chrono/BuddhistChronology;
       3: areturn

  public static org.joda.time.chrono.BuddhistChronology getInstance();
    Code:
       0: invokestatic  #2                  // Method org/joda/time/DateTimeZone.getDefault:()Lorg/joda/time/DateTimeZone;
       3: invokestatic  #3                  // Method getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
       6: areturn

  public static org.joda.time.chrono.BuddhistChronology getInstance(org.joda.time.DateTimeZone);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #2                  // Method org/joda/time/DateTimeZone.getDefault:()Lorg/joda/time/DateTimeZone;
       7: astore_0
       8: getstatic     #4                  // Field cCache:Ljava/util/concurrent/ConcurrentHashMap;
      11: aload_0
      12: invokevirtual #5                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #6                  // class org/joda/time/chrono/BuddhistChronology
      18: astore_1
      19: aload_1
      20: ifnonnull     87
      23: new           #6                  // class org/joda/time/chrono/BuddhistChronology
      26: dup
      27: aload_0
      28: aconst_null
      29: invokestatic  #7                  // Method org/joda/time/chrono/GJChronology.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;)Lorg/joda/time/chrono/GJChronology;
      32: aconst_null
      33: invokespecial #8                  // Method "<init>":(Lorg/joda/time/Chronology;Ljava/lang/Object;)V
      36: astore_1
      37: new           #9                  // class org/joda/time/DateTime
      40: dup
      41: iconst_1
      42: iconst_1
      43: iconst_1
      44: iconst_0
      45: iconst_0
      46: iconst_0
      47: iconst_0
      48: aload_1
      49: invokespecial #10                 // Method org/joda/time/DateTime."<init>":(IIIIIIILorg/joda/time/Chronology;)V
      52: astore_2
      53: new           #6                  // class org/joda/time/chrono/BuddhistChronology
      56: dup
      57: aload_1
      58: aload_2
      59: aconst_null
      60: invokestatic  #11                 // Method org/joda/time/chrono/LimitChronology.getInstance:(Lorg/joda/time/Chronology;Lorg/joda/time/ReadableDateTime;Lorg/joda/time/ReadableDateTime;)Lorg/joda/time/chrono/LimitChronology;
      63: ldc           #12                 // String
      65: invokespecial #8                  // Method "<init>":(Lorg/joda/time/Chronology;Ljava/lang/Object;)V
      68: astore_1
      69: getstatic     #4                  // Field cCache:Ljava/util/concurrent/ConcurrentHashMap;
      72: aload_0
      73: aload_1
      74: invokevirtual #13                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #6                  // class org/joda/time/chrono/BuddhistChronology
      80: astore_3
      81: aload_3
      82: ifnull        87
      85: aload_3
      86: astore_1
      87: aload_1
      88: areturn

  private org.joda.time.chrono.BuddhistChronology(org.joda.time.Chronology, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #14                 // Method org/joda/time/chrono/AssembledChronology."<init>":(Lorg/joda/time/Chronology;Ljava/lang/Object;)V
       6: return

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getBase:()Lorg/joda/time/Chronology;
       4: astore_1
       5: aload_1
       6: ifnonnull     15
       9: invokestatic  #16                 // Method getInstanceUTC:()Lorg/joda/time/chrono/BuddhistChronology;
      12: goto          22
      15: aload_1
      16: invokevirtual #17                 // Method org/joda/time/Chronology.getZone:()Lorg/joda/time/DateTimeZone;
      19: invokestatic  #3                  // Method getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
      22: areturn

  public org.joda.time.Chronology withUTC();
    Code:
       0: getstatic     #1                  // Field INSTANCE_UTC:Lorg/joda/time/chrono/BuddhistChronology;
       3: areturn

  public org.joda.time.Chronology withZone(org.joda.time.DateTimeZone);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #2                  // Method org/joda/time/DateTimeZone.getDefault:()Lorg/joda/time/DateTimeZone;
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #18                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      13: if_acmpne     18
      16: aload_0
      17: areturn
      18: aload_1
      19: invokestatic  #3                  // Method getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
      22: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #6                  // class org/joda/time/chrono/BuddhistChronology
      11: ifeq          31
      14: aload_1
      15: checkcast     #6                  // class org/joda/time/chrono/BuddhistChronology
      18: astore_2
      19: aload_0
      20: invokevirtual #18                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      23: aload_2
      24: invokevirtual #18                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      27: invokevirtual #19                 // Method org/joda/time/DateTimeZone.equals:(Ljava/lang/Object;)Z
      30: ireturn
      31: iconst_0
      32: ireturn

  public int hashCode();
    Code:
       0: ldc           #20                 // String Buddhist
       2: invokevirtual #21                 // Method java/lang/String.hashCode:()I
       5: bipush        11
       7: imul
       8: aload_0
       9: invokevirtual #18                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      12: invokevirtual #22                 // Method org/joda/time/DateTimeZone.hashCode:()I
      15: iadd
      16: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #23                 // String BuddhistChronology
       2: astore_1
       3: aload_0
       4: invokevirtual #18                 // Method getZone:()Lorg/joda/time/DateTimeZone;
       7: astore_2
       8: aload_2
       9: ifnull        44
      12: new           #24                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_1
      20: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: bipush        91
      25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      28: aload_2
      29: invokevirtual #28                 // Method org/joda/time/DateTimeZone.getID:()Ljava/lang/String;
      32: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: bipush        93
      37: invokevirtual #27                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      40: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: astore_1
      44: aload_1
      45: areturn

  protected void assemble(org.joda.time.chrono.AssembledChronology$Fields);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getParam:()Ljava/lang/Object;
       4: ifnonnull     221
       7: aload_1
       8: invokestatic  #31                 // Method org/joda/time/DurationFieldType.eras:()Lorg/joda/time/DurationFieldType;
      11: invokestatic  #32                 // Method org/joda/time/field/UnsupportedDurationField.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;
      14: putfield      #33                 // Field org/joda/time/chrono/AssembledChronology$Fields.eras:Lorg/joda/time/DurationField;
      17: aload_1
      18: getfield      #34                 // Field org/joda/time/chrono/AssembledChronology$Fields.year:Lorg/joda/time/DateTimeField;
      21: astore_2
      22: aload_1
      23: new           #35                 // class org/joda/time/field/OffsetDateTimeField
      26: dup
      27: new           #36                 // class org/joda/time/field/SkipUndoDateTimeField
      30: dup
      31: aload_0
      32: aload_2
      33: invokespecial #37                 // Method org/joda/time/field/SkipUndoDateTimeField."<init>":(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeField;)V
      36: sipush        543
      39: invokespecial #38                 // Method org/joda/time/field/OffsetDateTimeField."<init>":(Lorg/joda/time/DateTimeField;I)V
      42: putfield      #34                 // Field org/joda/time/chrono/AssembledChronology$Fields.year:Lorg/joda/time/DateTimeField;
      45: aload_1
      46: getfield      #39                 // Field org/joda/time/chrono/AssembledChronology$Fields.yearOfEra:Lorg/joda/time/DateTimeField;
      49: astore_2
      50: aload_1
      51: new           #40                 // class org/joda/time/field/DelegatedDateTimeField
      54: dup
      55: aload_1
      56: getfield      #34                 // Field org/joda/time/chrono/AssembledChronology$Fields.year:Lorg/joda/time/DateTimeField;
      59: aload_1
      60: getfield      #33                 // Field org/joda/time/chrono/AssembledChronology$Fields.eras:Lorg/joda/time/DurationField;
      63: invokestatic  #41                 // Method org/joda/time/DateTimeFieldType.yearOfEra:()Lorg/joda/time/DateTimeFieldType;
      66: invokespecial #42                 // Method org/joda/time/field/DelegatedDateTimeField."<init>":(Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;)V
      69: putfield      #39                 // Field org/joda/time/chrono/AssembledChronology$Fields.yearOfEra:Lorg/joda/time/DateTimeField;
      72: aload_1
      73: getfield      #43                 // Field org/joda/time/chrono/AssembledChronology$Fields.weekyear:Lorg/joda/time/DateTimeField;
      76: astore_2
      77: aload_1
      78: new           #35                 // class org/joda/time/field/OffsetDateTimeField
      81: dup
      82: new           #36                 // class org/joda/time/field/SkipUndoDateTimeField
      85: dup
      86: aload_0
      87: aload_2
      88: invokespecial #37                 // Method org/joda/time/field/SkipUndoDateTimeField."<init>":(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeField;)V
      91: sipush        543
      94: invokespecial #38                 // Method org/joda/time/field/OffsetDateTimeField."<init>":(Lorg/joda/time/DateTimeField;I)V
      97: putfield      #43                 // Field org/joda/time/chrono/AssembledChronology$Fields.weekyear:Lorg/joda/time/DateTimeField;
     100: new           #35                 // class org/joda/time/field/OffsetDateTimeField
     103: dup
     104: aload_1
     105: getfield      #39                 // Field org/joda/time/chrono/AssembledChronology$Fields.yearOfEra:Lorg/joda/time/DateTimeField;
     108: bipush        99
     110: invokespecial #38                 // Method org/joda/time/field/OffsetDateTimeField."<init>":(Lorg/joda/time/DateTimeField;I)V
     113: astore_2
     114: aload_1
     115: new           #44                 // class org/joda/time/field/DividedDateTimeField
     118: dup
     119: aload_2
     120: aload_1
     121: getfield      #33                 // Field org/joda/time/chrono/AssembledChronology$Fields.eras:Lorg/joda/time/DurationField;
     124: invokestatic  #45                 // Method org/joda/time/DateTimeFieldType.centuryOfEra:()Lorg/joda/time/DateTimeFieldType;
     127: bipush        100
     129: invokespecial #46                 // Method org/joda/time/field/DividedDateTimeField."<init>":(Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;I)V
     132: putfield      #47                 // Field org/joda/time/chrono/AssembledChronology$Fields.centuryOfEra:Lorg/joda/time/DateTimeField;
     135: aload_1
     136: aload_1
     137: getfield      #47                 // Field org/joda/time/chrono/AssembledChronology$Fields.centuryOfEra:Lorg/joda/time/DateTimeField;
     140: invokevirtual #48                 // Method org/joda/time/DateTimeField.getDurationField:()Lorg/joda/time/DurationField;
     143: putfield      #49                 // Field org/joda/time/chrono/AssembledChronology$Fields.centuries:Lorg/joda/time/DurationField;
     146: new           #50                 // class org/joda/time/field/RemainderDateTimeField
     149: dup
     150: aload_1
     151: getfield      #47                 // Field org/joda/time/chrono/AssembledChronology$Fields.centuryOfEra:Lorg/joda/time/DateTimeField;
     154: checkcast     #44                 // class org/joda/time/field/DividedDateTimeField
     157: invokespecial #51                 // Method org/joda/time/field/RemainderDateTimeField."<init>":(Lorg/joda/time/field/DividedDateTimeField;)V
     160: astore_2
     161: aload_1
     162: new           #35                 // class org/joda/time/field/OffsetDateTimeField
     165: dup
     166: aload_2
     167: invokestatic  #52                 // Method org/joda/time/DateTimeFieldType.yearOfCentury:()Lorg/joda/time/DateTimeFieldType;
     170: iconst_1
     171: invokespecial #53                 // Method org/joda/time/field/OffsetDateTimeField."<init>":(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;I)V
     174: putfield      #54                 // Field org/joda/time/chrono/AssembledChronology$Fields.yearOfCentury:Lorg/joda/time/DateTimeField;
     177: new           #50                 // class org/joda/time/field/RemainderDateTimeField
     180: dup
     181: aload_1
     182: getfield      #43                 // Field org/joda/time/chrono/AssembledChronology$Fields.weekyear:Lorg/joda/time/DateTimeField;
     185: aload_1
     186: getfield      #49                 // Field org/joda/time/chrono/AssembledChronology$Fields.centuries:Lorg/joda/time/DurationField;
     189: invokestatic  #55                 // Method org/joda/time/DateTimeFieldType.weekyearOfCentury:()Lorg/joda/time/DateTimeFieldType;
     192: bipush        100
     194: invokespecial #56                 // Method org/joda/time/field/RemainderDateTimeField."<init>":(Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;I)V
     197: astore_2
     198: aload_1
     199: new           #35                 // class org/joda/time/field/OffsetDateTimeField
     202: dup
     203: aload_2
     204: invokestatic  #55                 // Method org/joda/time/DateTimeFieldType.weekyearOfCentury:()Lorg/joda/time/DateTimeFieldType;
     207: iconst_1
     208: invokespecial #53                 // Method org/joda/time/field/OffsetDateTimeField."<init>":(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;I)V
     211: putfield      #57                 // Field org/joda/time/chrono/AssembledChronology$Fields.weekyearOfCentury:Lorg/joda/time/DateTimeField;
     214: aload_1
     215: getstatic     #58                 // Field ERA_FIELD:Lorg/joda/time/DateTimeField;
     218: putfield      #59                 // Field org/joda/time/chrono/AssembledChronology$Fields.era:Lorg/joda/time/DateTimeField;
     221: return

  static {};
    Code:
       0: new           #60                 // class org/joda/time/chrono/BasicSingleEraDateTimeField
       3: dup
       4: ldc           #61                 // String BE
       6: invokespecial #62                 // Method org/joda/time/chrono/BasicSingleEraDateTimeField."<init>":(Ljava/lang/String;)V
       9: putstatic     #58                 // Field ERA_FIELD:Lorg/joda/time/DateTimeField;
      12: new           #63                 // class java/util/concurrent/ConcurrentHashMap
      15: dup
      16: invokespecial #64                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      19: putstatic     #4                  // Field cCache:Ljava/util/concurrent/ConcurrentHashMap;
      22: getstatic     #65                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
      25: invokestatic  #3                  // Method getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
      28: putstatic     #1                  // Field INSTANCE_UTC:Lorg/joda/time/chrono/BuddhistChronology;
      31: return
}
