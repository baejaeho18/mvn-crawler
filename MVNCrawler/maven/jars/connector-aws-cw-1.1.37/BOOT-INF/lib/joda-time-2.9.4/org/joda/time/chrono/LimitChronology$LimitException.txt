Compiled from "LimitChronology.java"
class org.joda.time.chrono.LimitChronology$LimitException extends java.lang.IllegalArgumentException {
  private static final long serialVersionUID;

  private final boolean iIsLow;

  final org.joda.time.chrono.LimitChronology this$0;

  org.joda.time.chrono.LimitChronology$LimitException(org.joda.time.chrono.LimitChronology, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/joda/time/chrono/LimitChronology;
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field iIsLow:Z
      15: return

  public java.lang.String getMessage();
    Code:
       0: new           #4                  // class java/lang/StringBuffer
       3: dup
       4: bipush        85
       6: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(I)V
       9: astore_1
      10: aload_1
      11: ldc           #6                  // String The
      13: invokevirtual #7                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: pop
      17: aload_0
      18: invokespecial #8                  // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
      21: astore_2
      22: aload_2
      23: ifnull        39
      26: aload_1
      27: bipush        32
      29: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      32: pop
      33: aload_1
      34: aload_2
      35: invokevirtual #7                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: pop
      39: aload_1
      40: ldc           #10                 // String  instant is
      42: invokevirtual #7                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      45: pop
      46: invokestatic  #11                 // Method org/joda/time/format/ISODateTimeFormat.dateTime:()Lorg/joda/time/format/DateTimeFormatter;
      49: astore_3
      50: aload_3
      51: aload_0
      52: getfield      #1                  // Field this$0:Lorg/joda/time/chrono/LimitChronology;
      55: invokevirtual #12                 // Method org/joda/time/chrono/LimitChronology.getBase:()Lorg/joda/time/Chronology;
      58: invokevirtual #13                 // Method org/joda/time/format/DateTimeFormatter.withChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;
      61: astore_3
      62: aload_0
      63: getfield      #3                  // Field iIsLow:Z
      66: ifeq          94
      69: aload_1
      70: ldc           #14                 // String below the supported minimum of
      72: invokevirtual #7                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      75: pop
      76: aload_3
      77: aload_1
      78: aload_0
      79: getfield      #1                  // Field this$0:Lorg/joda/time/chrono/LimitChronology;
      82: invokevirtual #15                 // Method org/joda/time/chrono/LimitChronology.getLowerLimit:()Lorg/joda/time/DateTime;
      85: invokevirtual #16                 // Method org/joda/time/DateTime.getMillis:()J
      88: invokevirtual #17                 // Method org/joda/time/format/DateTimeFormatter.printTo:(Ljava/lang/StringBuffer;J)V
      91: goto          116
      94: aload_1
      95: ldc           #18                 // String above the supported maximum of
      97: invokevirtual #7                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     100: pop
     101: aload_3
     102: aload_1
     103: aload_0
     104: getfield      #1                  // Field this$0:Lorg/joda/time/chrono/LimitChronology;
     107: invokevirtual #19                 // Method org/joda/time/chrono/LimitChronology.getUpperLimit:()Lorg/joda/time/DateTime;
     110: invokevirtual #16                 // Method org/joda/time/DateTime.getMillis:()J
     113: invokevirtual #17                 // Method org/joda/time/format/DateTimeFormatter.printTo:(Ljava/lang/StringBuffer;J)V
     116: aload_1
     117: ldc           #20                 // String  (
     119: invokevirtual #7                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     122: pop
     123: aload_1
     124: aload_0
     125: getfield      #1                  // Field this$0:Lorg/joda/time/chrono/LimitChronology;
     128: invokevirtual #12                 // Method org/joda/time/chrono/LimitChronology.getBase:()Lorg/joda/time/Chronology;
     131: invokevirtual #21                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     134: pop
     135: aload_1
     136: bipush        41
     138: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     141: pop
     142: aload_1
     143: invokevirtual #22                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     146: areturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #25                 // String IllegalArgumentException:
       9: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #27                 // Method getMessage:()Ljava/lang/String;
      16: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
}
