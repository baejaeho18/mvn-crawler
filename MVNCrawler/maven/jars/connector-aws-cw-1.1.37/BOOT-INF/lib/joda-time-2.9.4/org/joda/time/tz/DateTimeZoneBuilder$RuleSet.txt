Compiled from "DateTimeZoneBuilder.java"
final class org.joda.time.tz.DateTimeZoneBuilder$RuleSet {
  private static final int YEAR_LIMIT;

  private int iStandardOffset;

  private java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder$Rule> iRules;

  private java.lang.String iInitialNameKey;

  private int iInitialSaveMillis;

  private int iUpperYear;

  private org.joda.time.tz.DateTimeZoneBuilder$OfYear iUpperOfYear;

  org.joda.time.tz.DateTimeZoneBuilder$RuleSet();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: bipush        10
      11: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      14: putfield      #4                  // Field iRules:Ljava/util/ArrayList;
      17: aload_0
      18: ldc           #5                  // int 2147483647
      20: putfield      #6                  // Field iUpperYear:I
      23: return

  org.joda.time.tz.DateTimeZoneBuilder$RuleSet(org.joda.time.tz.DateTimeZoneBuilder$RuleSet);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #7                  // Field iStandardOffset:I
       9: putfield      #7                  // Field iStandardOffset:I
      12: aload_0
      13: new           #2                  // class java/util/ArrayList
      16: dup
      17: aload_1
      18: getfield      #4                  // Field iRules:Ljava/util/ArrayList;
      21: invokespecial #8                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      24: putfield      #4                  // Field iRules:Ljava/util/ArrayList;
      27: aload_0
      28: aload_1
      29: getfield      #9                  // Field iInitialNameKey:Ljava/lang/String;
      32: putfield      #9                  // Field iInitialNameKey:Ljava/lang/String;
      35: aload_0
      36: aload_1
      37: getfield      #10                 // Field iInitialSaveMillis:I
      40: putfield      #10                 // Field iInitialSaveMillis:I
      43: aload_0
      44: aload_1
      45: getfield      #6                  // Field iUpperYear:I
      48: putfield      #6                  // Field iUpperYear:I
      51: aload_0
      52: aload_1
      53: getfield      #11                 // Field iUpperOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
      56: putfield      #11                 // Field iUpperOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
      59: return

  public int getStandardOffset();
    Code:
       0: aload_0
       1: getfield      #7                  // Field iStandardOffset:I
       4: ireturn

  public void setStandardOffset(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field iStandardOffset:I
       5: return

  public void setFixedSavings(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field iInitialNameKey:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #10                 // Field iInitialSaveMillis:I
      10: return

  public void addRule(org.joda.time.tz.DateTimeZoneBuilder$Rule);
    Code:
       0: aload_0
       1: getfield      #4                  // Field iRules:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #12                 // Method java/util/ArrayList.contains:(Ljava/lang/Object;)Z
       8: ifne          20
      11: aload_0
      12: getfield      #4                  // Field iRules:Ljava/util/ArrayList;
      15: aload_1
      16: invokevirtual #13                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      19: pop
      20: return

  public void setUpperLimit(int, org.joda.time.tz.DateTimeZoneBuilder$OfYear);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field iUpperYear:I
       5: aload_0
       6: aload_2
       7: putfield      #11                 // Field iUpperOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
      10: return

  public org.joda.time.tz.DateTimeZoneBuilder$Transition firstTransition(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field iInitialNameKey:Ljava/lang/String;
       4: ifnull        33
       7: new           #14                 // class org/joda/time/tz/DateTimeZoneBuilder$Transition
      10: dup
      11: lload_1
      12: aload_0
      13: getfield      #9                  // Field iInitialNameKey:Ljava/lang/String;
      16: aload_0
      17: getfield      #7                  // Field iStandardOffset:I
      20: aload_0
      21: getfield      #10                 // Field iInitialSaveMillis:I
      24: iadd
      25: aload_0
      26: getfield      #7                  // Field iStandardOffset:I
      29: invokespecial #15                 // Method org/joda/time/tz/DateTimeZoneBuilder$Transition."<init>":(JLjava/lang/String;II)V
      32: areturn
      33: new           #2                  // class java/util/ArrayList
      36: dup
      37: aload_0
      38: getfield      #4                  // Field iRules:Ljava/util/ArrayList;
      41: invokespecial #8                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      44: astore_3
      45: ldc2_w        #16                 // long -9223372036854775808l
      48: lstore        4
      50: iconst_0
      51: istore        6
      53: aconst_null
      54: astore        7
      56: aload_0
      57: lload         4
      59: iload         6
      61: invokevirtual #18                 // Method nextTransition:(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;
      64: dup
      65: astore        8
      67: ifnull        222
      70: aload         8
      72: invokevirtual #19                 // Method org/joda/time/tz/DateTimeZoneBuilder$Transition.getMillis:()J
      75: lstore        4
      77: lload         4
      79: lload_1
      80: lcmp
      81: ifne          99
      84: new           #14                 // class org/joda/time/tz/DateTimeZoneBuilder$Transition
      87: dup
      88: lload_1
      89: aload         8
      91: invokespecial #20                 // Method org/joda/time/tz/DateTimeZoneBuilder$Transition."<init>":(JLorg/joda/time/tz/DateTimeZoneBuilder$Transition;)V
      94: astore        7
      96: goto          222
      99: lload         4
     101: lload_1
     102: lcmp
     103: ifle          200
     106: aload         7
     108: ifnonnull     169
     111: aload_3
     112: invokevirtual #21                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     115: astore        9
     117: aload         9
     119: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          169
     127: aload         9
     129: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     134: checkcast     #24                 // class org/joda/time/tz/DateTimeZoneBuilder$Rule
     137: astore        10
     139: aload         10
     141: invokevirtual #25                 // Method org/joda/time/tz/DateTimeZoneBuilder$Rule.getSaveMillis:()I
     144: ifne          166
     147: new           #14                 // class org/joda/time/tz/DateTimeZoneBuilder$Transition
     150: dup
     151: lload_1
     152: aload         10
     154: aload_0
     155: getfield      #7                  // Field iStandardOffset:I
     158: invokespecial #26                 // Method org/joda/time/tz/DateTimeZoneBuilder$Transition."<init>":(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V
     161: astore        7
     163: goto          169
     166: goto          117
     169: aload         7
     171: ifnonnull     222
     174: new           #14                 // class org/joda/time/tz/DateTimeZoneBuilder$Transition
     177: dup
     178: lload_1
     179: aload         8
     181: invokevirtual #27                 // Method org/joda/time/tz/DateTimeZoneBuilder$Transition.getNameKey:()Ljava/lang/String;
     184: aload_0
     185: getfield      #7                  // Field iStandardOffset:I
     188: aload_0
     189: getfield      #7                  // Field iStandardOffset:I
     192: invokespecial #15                 // Method org/joda/time/tz/DateTimeZoneBuilder$Transition."<init>":(JLjava/lang/String;II)V
     195: astore        7
     197: goto          222
     200: new           #14                 // class org/joda/time/tz/DateTimeZoneBuilder$Transition
     203: dup
     204: lload_1
     205: aload         8
     207: invokespecial #20                 // Method org/joda/time/tz/DateTimeZoneBuilder$Transition."<init>":(JLorg/joda/time/tz/DateTimeZoneBuilder$Transition;)V
     210: astore        7
     212: aload         8
     214: invokevirtual #28                 // Method org/joda/time/tz/DateTimeZoneBuilder$Transition.getSaveMillis:()I
     217: istore        6
     219: goto          56
     222: aload_0
     223: aload_3
     224: putfield      #4                  // Field iRules:Ljava/util/ArrayList;
     227: aload         7
     229: areturn

  public org.joda.time.tz.DateTimeZoneBuilder$Transition nextTransition(long, int);
    Code:
       0: invokestatic  #29                 // Method org/joda/time/chrono/ISOChronology.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;
       3: astore        4
       5: aconst_null
       6: astore        5
       8: ldc2_w        #30                 // long 9223372036854775807l
      11: lstore        6
      13: aload_0
      14: getfield      #4                  // Field iRules:Ljava/util/ArrayList;
      17: invokevirtual #32                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      20: astore        8
      22: aload         8
      24: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          93
      32: aload         8
      34: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #24                 // class org/joda/time/tz/DateTimeZoneBuilder$Rule
      42: astore        9
      44: aload         9
      46: lload_1
      47: aload_0
      48: getfield      #7                  // Field iStandardOffset:I
      51: iload_3
      52: invokevirtual #33                 // Method org/joda/time/tz/DateTimeZoneBuilder$Rule.next:(JII)J
      55: lstore        10
      57: lload         10
      59: lload_1
      60: lcmp
      61: ifgt          74
      64: aload         8
      66: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.remove:()V
      71: goto          22
      74: lload         10
      76: lload         6
      78: lcmp
      79: ifgt          90
      82: aload         9
      84: astore        5
      86: lload         10
      88: lstore        6
      90: goto          22
      93: aload         5
      95: ifnonnull     100
      98: aconst_null
      99: areturn
     100: aload         4
     102: invokevirtual #35                 // Method org/joda/time/Chronology.year:()Lorg/joda/time/DateTimeField;
     105: lload         6
     107: invokevirtual #36                 // Method org/joda/time/DateTimeField.get:(J)I
     110: getstatic     #37                 // Field YEAR_LIMIT:I
     113: if_icmplt     118
     116: aconst_null
     117: areturn
     118: aload_0
     119: getfield      #6                  // Field iUpperYear:I
     122: ldc           #5                  // int 2147483647
     124: if_icmpge     155
     127: aload_0
     128: getfield      #11                 // Field iUpperOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
     131: aload_0
     132: getfield      #6                  // Field iUpperYear:I
     135: aload_0
     136: getfield      #7                  // Field iStandardOffset:I
     139: iload_3
     140: invokevirtual #38                 // Method org/joda/time/tz/DateTimeZoneBuilder$OfYear.setInstant:(III)J
     143: lstore        9
     145: lload         6
     147: lload         9
     149: lcmp
     150: iflt          155
     153: aconst_null
     154: areturn
     155: new           #14                 // class org/joda/time/tz/DateTimeZoneBuilder$Transition
     158: dup
     159: lload         6
     161: aload         5
     163: aload_0
     164: getfield      #7                  // Field iStandardOffset:I
     167: invokespecial #26                 // Method org/joda/time/tz/DateTimeZoneBuilder$Transition."<init>":(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V
     170: areturn

  public long getUpperLimit(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iUpperYear:I
       4: ldc           #5                  // int 2147483647
       6: if_icmpne     13
       9: ldc2_w        #30                 // long 9223372036854775807l
      12: lreturn
      13: aload_0
      14: getfield      #11                 // Field iUpperOfYear:Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
      17: aload_0
      18: getfield      #6                  // Field iUpperYear:I
      21: aload_0
      22: getfield      #7                  // Field iStandardOffset:I
      25: iload_1
      26: invokevirtual #38                 // Method org/joda/time/tz/DateTimeZoneBuilder$OfYear.setInstant:(III)J
      29: lreturn

  public org.joda.time.tz.DateTimeZoneBuilder$DSTZone buildTailZone(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field iRules:Ljava/util/ArrayList;
       4: invokevirtual #39                 // Method java/util/ArrayList.size:()I
       7: iconst_2
       8: if_icmpne     74
      11: aload_0
      12: getfield      #4                  // Field iRules:Ljava/util/ArrayList;
      15: iconst_0
      16: invokevirtual #40                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      19: checkcast     #24                 // class org/joda/time/tz/DateTimeZoneBuilder$Rule
      22: astore_2
      23: aload_0
      24: getfield      #4                  // Field iRules:Ljava/util/ArrayList;
      27: iconst_1
      28: invokevirtual #40                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      31: checkcast     #24                 // class org/joda/time/tz/DateTimeZoneBuilder$Rule
      34: astore_3
      35: aload_2
      36: invokevirtual #41                 // Method org/joda/time/tz/DateTimeZoneBuilder$Rule.getToYear:()I
      39: ldc           #5                  // int 2147483647
      41: if_icmpne     74
      44: aload_3
      45: invokevirtual #41                 // Method org/joda/time/tz/DateTimeZoneBuilder$Rule.getToYear:()I
      48: ldc           #5                  // int 2147483647
      50: if_icmpne     74
      53: new           #42                 // class org/joda/time/tz/DateTimeZoneBuilder$DSTZone
      56: dup
      57: aload_1
      58: aload_0
      59: getfield      #7                  // Field iStandardOffset:I
      62: aload_2
      63: getfield      #43                 // Field org/joda/time/tz/DateTimeZoneBuilder$Rule.iRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      66: aload_3
      67: getfield      #43                 // Field org/joda/time/tz/DateTimeZoneBuilder$Rule.iRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      70: invokespecial #44                 // Method org/joda/time/tz/DateTimeZoneBuilder$DSTZone."<init>":(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V
      73: areturn
      74: aconst_null
      75: areturn

  static {};
    Code:
       0: invokestatic  #45                 // Method org/joda/time/DateTimeUtils.currentTimeMillis:()J
       3: lstore_0
       4: invokestatic  #29                 // Method org/joda/time/chrono/ISOChronology.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;
       7: invokevirtual #46                 // Method org/joda/time/chrono/ISOChronology.year:()Lorg/joda/time/DateTimeField;
      10: lload_0
      11: invokevirtual #36                 // Method org/joda/time/DateTimeField.get:(J)I
      14: bipush        100
      16: iadd
      17: putstatic     #37                 // Field YEAR_LIMIT:I
      20: return
}
