Compiled from "Base64Data.java"
public final class com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data extends com.sun.xml.bind.v2.runtime.output.Pcdata {
  private javax.activation.DataHandler dataHandler;

  private byte[] data;

  private int dataLen;

  private java.lang.String mimeType;

  static final boolean $assertionsDisabled;

  public com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/sun/xml/bind/v2/runtime/output/Pcdata."<init>":()V
       4: return

  public void set(byte[], int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field data:[B
       5: aload_0
       6: iload_2
       7: putfield      #1                  // Field dataLen:I
      10: aload_0
      11: aconst_null
      12: putfield      #4                  // Field dataHandler:Ljavax/activation/DataHandler;
      15: aload_0
      16: aload_3
      17: putfield      #5                  // Field mimeType:Ljava/lang/String;
      20: return

  public void set(byte[], java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: arraylength
       4: aload_2
       5: invokevirtual #6                  // Method set:([BILjava/lang/String;)V
       8: return

  public void set(javax.activation.DataHandler);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #8                  // class java/lang/AssertionError
      13: dup
      14: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #4                  // Field dataHandler:Ljavax/activation/DataHandler;
      23: aload_0
      24: aconst_null
      25: putfield      #2                  // Field data:[B
      28: return

  public javax.activation.DataHandler getDataHandler();
    Code:
       0: aload_0
       1: getfield      #4                  // Field dataHandler:Ljavax/activation/DataHandler;
       4: ifnonnull     26
       7: aload_0
       8: new           #10                 // class javax/activation/DataHandler
      11: dup
      12: new           #11                 // class com/sun/xml/bind/v2/runtime/unmarshaller/Base64Data$1
      15: dup
      16: aload_0
      17: invokespecial #12                 // Method com/sun/xml/bind/v2/runtime/unmarshaller/Base64Data$1."<init>":(Lcom/sun/xml/bind/v2/runtime/unmarshaller/Base64Data;)V
      20: invokespecial #13                 // Method javax/activation/DataHandler."<init>":(Ljavax/activation/DataSource;)V
      23: putfield      #4                  // Field dataHandler:Ljavax/activation/DataHandler;
      26: aload_0
      27: getfield      #4                  // Field dataHandler:Ljavax/activation/DataHandler;
      30: areturn

  public byte[] getExact();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #1                  // Field dataLen:I
       9: aload_0
      10: getfield      #2                  // Field data:[B
      13: arraylength
      14: if_icmpeq     43
      17: aload_0
      18: getfield      #1                  // Field dataLen:I
      21: newarray       byte
      23: astore_1
      24: aload_0
      25: getfield      #2                  // Field data:[B
      28: iconst_0
      29: aload_1
      30: iconst_0
      31: aload_0
      32: getfield      #1                  // Field dataLen:I
      35: invokestatic  #15                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: aload_0
      39: aload_1
      40: putfield      #2                  // Field data:[B
      43: aload_0
      44: getfield      #2                  // Field data:[B
      47: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field dataHandler:Ljavax/activation/DataHandler;
       4: ifnull        15
       7: aload_0
       8: getfield      #4                  // Field dataHandler:Ljavax/activation/DataHandler;
      11: invokevirtual #16                 // Method javax/activation/DataHandler.getInputStream:()Ljava/io/InputStream;
      14: areturn
      15: new           #17                 // class java/io/ByteArrayInputStream
      18: dup
      19: aload_0
      20: getfield      #2                  // Field data:[B
      23: iconst_0
      24: aload_0
      25: getfield      #1                  // Field dataLen:I
      28: invokespecial #18                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      31: areturn

  public boolean hasData();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public byte[] get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: ifnonnull     65
       7: new           #19                 // class com/sun/xml/bind/v2/util/ByteArrayOutputStreamEx
      10: dup
      11: sipush        1024
      14: invokespecial #20                 // Method com/sun/xml/bind/v2/util/ByteArrayOutputStreamEx."<init>":(I)V
      17: astore_1
      18: aload_0
      19: getfield      #4                  // Field dataHandler:Ljavax/activation/DataHandler;
      22: invokevirtual #21                 // Method javax/activation/DataHandler.getDataSource:()Ljavax/activation/DataSource;
      25: invokeinterface #22,  1           // InterfaceMethod javax/activation/DataSource.getInputStream:()Ljava/io/InputStream;
      30: astore_2
      31: aload_1
      32: aload_2
      33: invokevirtual #23                 // Method com/sun/xml/bind/v2/util/ByteArrayOutputStreamEx.readFrom:(Ljava/io/InputStream;)V
      36: aload_2
      37: invokevirtual #24                 // Method java/io/InputStream.close:()V
      40: aload_0
      41: aload_1
      42: invokevirtual #25                 // Method com/sun/xml/bind/v2/util/ByteArrayOutputStreamEx.getBuffer:()[B
      45: putfield      #2                  // Field data:[B
      48: aload_0
      49: aload_1
      50: invokevirtual #26                 // Method com/sun/xml/bind/v2/util/ByteArrayOutputStreamEx.size:()I
      53: putfield      #1                  // Field dataLen:I
      56: goto          65
      59: astore_1
      60: aload_0
      61: iconst_0
      62: putfield      #1                  // Field dataLen:I
      65: aload_0
      66: getfield      #2                  // Field data:[B
      69: areturn
    Exception table:
       from    to  target type
           7    56    59   Class java/io/IOException

  public int getDataLen();
    Code:
       0: aload_0
       1: getfield      #1                  // Field dataLen:I
       4: ireturn

  public java.lang.String getMimeType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mimeType:Ljava/lang/String;
       4: ifnonnull     10
       7: ldc           #28                 // String application/octet-stream
       9: areturn
      10: aload_0
      11: getfield      #5                  // Field mimeType:Ljava/lang/String;
      14: areturn

  public int length();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #1                  // Field dataLen:I
       9: iconst_2
      10: iadd
      11: iconst_3
      12: idiv
      13: iconst_4
      14: imul
      15: ireturn

  public char charAt(int);
    Code:
       0: iload_1
       1: iconst_4
       2: irem
       3: istore_2
       4: iload_1
       5: iconst_4
       6: idiv
       7: iconst_3
       8: imul
       9: istore_3
      10: iload_2
      11: tableswitch   { // 0 to 3
                     0: 40
                     1: 52
                     2: 100
                     3: 168
               default: 196
          }
      40: aload_0
      41: getfield      #2                  // Field data:[B
      44: iload_3
      45: baload
      46: iconst_2
      47: ishr
      48: invokestatic  #29                 // Method com/sun/xml/bind/DatatypeConverterImpl.encode:(I)C
      51: ireturn
      52: iload_3
      53: iconst_1
      54: iadd
      55: aload_0
      56: getfield      #1                  // Field dataLen:I
      59: if_icmpge     75
      62: aload_0
      63: getfield      #2                  // Field data:[B
      66: iload_3
      67: iconst_1
      68: iadd
      69: baload
      70: istore        4
      72: goto          78
      75: iconst_0
      76: istore        4
      78: aload_0
      79: getfield      #2                  // Field data:[B
      82: iload_3
      83: baload
      84: iconst_3
      85: iand
      86: iconst_4
      87: ishl
      88: iload         4
      90: iconst_4
      91: ishr
      92: bipush        15
      94: iand
      95: ior
      96: invokestatic  #29                 // Method com/sun/xml/bind/DatatypeConverterImpl.encode:(I)C
      99: ireturn
     100: iload_3
     101: iconst_1
     102: iadd
     103: aload_0
     104: getfield      #1                  // Field dataLen:I
     107: if_icmpge     165
     110: aload_0
     111: getfield      #2                  // Field data:[B
     114: iload_3
     115: iconst_1
     116: iadd
     117: baload
     118: istore        4
     120: iload_3
     121: iconst_2
     122: iadd
     123: aload_0
     124: getfield      #1                  // Field dataLen:I
     127: if_icmpge     143
     130: aload_0
     131: getfield      #2                  // Field data:[B
     134: iload_3
     135: iconst_2
     136: iadd
     137: baload
     138: istore        5
     140: goto          146
     143: iconst_0
     144: istore        5
     146: iload         4
     148: bipush        15
     150: iand
     151: iconst_2
     152: ishl
     153: iload         5
     155: bipush        6
     157: ishr
     158: iconst_3
     159: iand
     160: ior
     161: invokestatic  #29                 // Method com/sun/xml/bind/DatatypeConverterImpl.encode:(I)C
     164: ireturn
     165: bipush        61
     167: ireturn
     168: iload_3
     169: iconst_2
     170: iadd
     171: aload_0
     172: getfield      #1                  // Field dataLen:I
     175: if_icmpge     193
     178: aload_0
     179: getfield      #2                  // Field data:[B
     182: iload_3
     183: iconst_2
     184: iadd
     185: baload
     186: bipush        63
     188: iand
     189: invokestatic  #29                 // Method com/sun/xml/bind/DatatypeConverterImpl.encode:(I)C
     192: ireturn
     193: bipush        61
     195: ireturn
     196: new           #30                 // class java/lang/IllegalStateException
     199: dup
     200: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":()V
     203: athrow

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_0
       9: invokevirtual #14                 // Method get:()[B
      12: pop
      13: iload_1
      14: istore        4
      16: iload         4
      18: iload_2
      19: if_icmpge     39
      22: aload_3
      23: aload_0
      24: iload         4
      26: invokevirtual #34                 // Method charAt:(I)C
      29: invokevirtual #35                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      32: pop
      33: iinc          4, 1
      36: goto          16
      39: aload_3
      40: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #2                  // Field data:[B
       9: iconst_0
      10: aload_0
      11: getfield      #1                  // Field dataLen:I
      14: invokestatic  #36                 // Method com/sun/xml/bind/DatatypeConverterImpl._printBase64Binary:([BII)Ljava/lang/String;
      17: areturn

  public void writeTo(char[], int);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #2                  // Field data:[B
       9: iconst_0
      10: aload_0
      11: getfield      #1                  // Field dataLen:I
      14: aload_1
      15: iload_2
      16: invokestatic  #37                 // Method com/sun/xml/bind/DatatypeConverterImpl._printBase64Binary:([BII[CI)I
      19: pop
      20: return

  public void writeTo(com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method get:()[B
       4: pop
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field data:[B
      10: aload_0
      11: getfield      #1                  // Field dataLen:I
      14: invokevirtual #38                 // Method com/sun/xml/bind/v2/runtime/output/UTF8XmlOutput.text:([BI)V
      17: return

  public void writeTo(javax.xml.stream.XMLStreamWriter) throws java.io.IOException, javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #2                  // Field data:[B
       9: iconst_0
      10: aload_0
      11: getfield      #1                  // Field dataLen:I
      14: aload_1
      15: invokestatic  #39                 // Method com/sun/xml/bind/DatatypeConverterImpl._printBase64Binary:([BIILjavax/xml/stream/XMLStreamWriter;)V
      18: return

  static byte[] access$000(com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data);
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: areturn

  static int access$100(com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data);
    Code:
       0: aload_0
       1: getfield      #1                  // Field dataLen:I
       4: ireturn

  static {};
    Code:
       0: ldc_w         #40                 // class com/sun/xml/bind/v2/runtime/unmarshaller/Base64Data
       3: invokevirtual #41                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #7                  // Field $assertionsDisabled:Z
      17: return
}
