Compiled from "JaxBeanInfo.java"
public abstract class com.sun.xml.bind.v2.runtime.JaxBeanInfo<BeanT> {
  protected boolean isNilIncluded;

  protected short flag;

  private static final short FLAG_IS_ELEMENT;

  private static final short FLAG_IS_IMMUTABLE;

  private static final short FLAG_HAS_ELEMENT_ONLY_CONTENTMODEL;

  private static final short FLAG_HAS_BEFORE_UNMARSHAL_METHOD;

  private static final short FLAG_HAS_AFTER_UNMARSHAL_METHOD;

  private static final short FLAG_HAS_BEFORE_MARSHAL_METHOD;

  private static final short FLAG_HAS_AFTER_MARSHAL_METHOD;

  private static final short FLAG_HAS_LIFECYCLE_EVENTS;

  private com.sun.xml.bind.v2.runtime.LifecycleMethods lcm;

  public final java.lang.Class<BeanT> jaxbType;

  private final java.lang.Object typeName;

  private static final java.lang.Class[] unmarshalEventParams;

  private static java.lang.Class[] marshalEventParams;

  private static final java.util.logging.Logger logger;

  protected com.sun.xml.bind.v2.runtime.JaxBeanInfo(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo, java.lang.Class<BeanT>, javax.xml.namespace.QName[], boolean, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: invokespecial #1                  // Method "<init>":(Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;Lcom/sun/xml/bind/v2/model/runtime/RuntimeTypeInfo;Ljava/lang/Class;Ljava/lang/Object;ZZZ)V
      15: return

  protected com.sun.xml.bind.v2.runtime.JaxBeanInfo(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo, java.lang.Class<BeanT>, javax.xml.namespace.QName, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: invokespecial #1                  // Method "<init>":(Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;Lcom/sun/xml/bind/v2/model/runtime/RuntimeTypeInfo;Ljava/lang/Class;Ljava/lang/Object;ZZZ)V
      15: return

  protected com.sun.xml.bind.v2.runtime.JaxBeanInfo(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo, java.lang.Class<BeanT>, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: checkcast     #2                  // class java/lang/Object
       8: iload         4
      10: iload         5
      12: iload         6
      14: invokespecial #1                  // Method "<init>":(Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;Lcom/sun/xml/bind/v2/model/runtime/RuntimeTypeInfo;Ljava/lang/Class;Ljava/lang/Object;ZZZ)V
      17: return

  private com.sun.xml.bind.v2.runtime.JaxBeanInfo(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo, java.lang.Class<BeanT>, java.lang.Object, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field isNilIncluded:Z
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
      14: aload_1
      15: getfield      #6                  // Field com/sun/xml/bind/v2/runtime/JAXBContextImpl.beanInfos:Ljava/util/Map;
      18: aload_2
      19: aload_0
      20: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: aload_3
      28: putfield      #8                  // Field jaxbType:Ljava/lang/Class;
      31: aload_0
      32: aload         4
      34: putfield      #9                  // Field typeName:Ljava/lang/Object;
      37: aload_0
      38: iload         5
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: iload         6
      50: ifeq          57
      53: iconst_2
      54: goto          58
      57: iconst_0
      58: ior
      59: iload         7
      61: ifeq          70
      64: sipush        128
      67: goto          71
      70: iconst_0
      71: ior
      72: i2s
      73: putfield      #10                 // Field flag:S
      76: return

  public final boolean hasBeforeUnmarshalMethod();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flag:S
       4: bipush        8
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final boolean hasAfterUnmarshalMethod();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flag:S
       4: bipush        16
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final boolean hasBeforeMarshalMethod();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flag:S
       4: bipush        32
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final boolean hasAfterMarshalMethod();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flag:S
       4: bipush        64
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final boolean isElement();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flag:S
       4: iconst_1
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public final boolean isImmutable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flag:S
       4: iconst_2
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public final boolean hasElementOnlyContentModel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flag:S
       4: iconst_4
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  protected final void hasElementOnlyContentModel(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: dup
       6: getfield      #10                 // Field flag:S
       9: iconst_4
      10: ior
      11: i2s
      12: putfield      #10                 // Field flag:S
      15: goto          30
      18: aload_0
      19: dup
      20: getfield      #10                 // Field flag:S
      23: bipush        -5
      25: iand
      26: i2s
      27: putfield      #10                 // Field flag:S
      30: return

  public boolean isNilIncluded();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isNilIncluded:Z
       4: ireturn

  public boolean lookForLifecycleMethods();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flag:S
       4: sipush        128
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public abstract java.lang.String getElementNamespaceURI(BeanT);

  public abstract java.lang.String getElementLocalName(BeanT);

  public java.util.Collection<javax.xml.namespace.QName> getTypeNames();
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeName:Ljava/lang/Object;
       4: ifnonnull     11
       7: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: getfield      #9                  // Field typeName:Ljava/lang/Object;
      15: instanceof    #12                 // class javax/xml/namespace/QName
      18: ifeq          32
      21: aload_0
      22: getfield      #9                  // Field typeName:Ljava/lang/Object;
      25: checkcast     #12                 // class javax/xml/namespace/QName
      28: invokestatic  #13                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      31: areturn
      32: aload_0
      33: getfield      #9                  // Field typeName:Ljava/lang/Object;
      36: checkcast     #14                 // class "[Ljavax/xml/namespace/QName;"
      39: checkcast     #14                 // class "[Ljavax/xml/namespace/QName;"
      42: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      45: areturn

  public javax.xml.namespace.QName getTypeName(BeanT);
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeName:Ljava/lang/Object;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #9                  // Field typeName:Ljava/lang/Object;
      13: instanceof    #12                 // class javax/xml/namespace/QName
      16: ifeq          27
      19: aload_0
      20: getfield      #9                  // Field typeName:Ljava/lang/Object;
      23: checkcast     #12                 // class javax/xml/namespace/QName
      26: areturn
      27: aload_0
      28: getfield      #9                  // Field typeName:Ljava/lang/Object;
      31: checkcast     #14                 // class "[Ljavax/xml/namespace/QName;"
      34: checkcast     #14                 // class "[Ljavax/xml/namespace/QName;"
      37: iconst_0
      38: aaload
      39: areturn

  public abstract BeanT createInstance(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException, org.xml.sax.SAXException;

  public abstract boolean reset(BeanT, com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext) throws org.xml.sax.SAXException;

  public abstract java.lang.String getId(BeanT, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException;

  public abstract void serializeBody(BeanT, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException;

  public abstract void serializeAttributes(BeanT, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException;

  public abstract void serializeRoot(BeanT, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException;

  public abstract void serializeURIs(BeanT, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException;

  public abstract com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl, boolean);

  public abstract com.sun.xml.bind.v2.runtime.Transducer<BeanT> getTransducer();

  protected void link(com.sun.xml.bind.v2.runtime.JAXBContextImpl);
    Code:
       0: return

  public void wrapUp();
    Code:
       0: return

  private java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class<BeanT>);
    Code:
       0: new           #16                 // class com/sun/xml/bind/v2/runtime/JaxBeanInfo$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #17                 // Method com/sun/xml/bind/v2/runtime/JaxBeanInfo$1."<init>":(Lcom/sun/xml/bind/v2/runtime/JaxBeanInfo;Ljava/lang/Class;)V
       9: invokestatic  #18                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: checkcast     #19                 // class "[Ljava/lang/reflect/Method;"
      15: areturn

  protected final void setLifecycleFlags();
    Code:
       0: aload_0
       1: getfield      #8                  // Field jaxbType:Ljava/lang/Class;
       4: astore_1
       5: aload_0
       6: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
       9: ifnonnull     23
      12: aload_0
      13: new           #20                 // class com/sun/xml/bind/v2/runtime/LifecycleMethods
      16: dup
      17: invokespecial #21                 // Method com/sun/xml/bind/v2/runtime/LifecycleMethods."<init>":()V
      20: putfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
      23: aload_1
      24: ifnull        232
      27: aload_0
      28: aload_1
      29: invokespecial #22                 // Method getDeclaredMethods:(Ljava/lang/Class;)[Ljava/lang/reflect/Method;
      32: astore_2
      33: aload_2
      34: arraylength
      35: istore_3
      36: iconst_0
      37: istore        4
      39: iload         4
      41: iload_3
      42: if_icmpge     224
      45: aload_2
      46: iload         4
      48: aaload
      49: astore        5
      51: aload         5
      53: invokevirtual #23                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      56: astore        6
      58: aload_0
      59: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
      62: getfield      #24                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.beforeUnmarshal:Ljava/lang/reflect/Method;
      65: ifnonnull     98
      68: aload         6
      70: ldc           #25                 // String beforeUnmarshal
      72: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifeq          98
      78: aload_0
      79: aload         5
      81: getstatic     #27                 // Field unmarshalEventParams:[Ljava/lang/Class;
      84: invokespecial #28                 // Method match:(Ljava/lang/reflect/Method;[Ljava/lang/Class;)Z
      87: ifeq          98
      90: aload_0
      91: aload         5
      93: bipush        8
      95: invokespecial #29                 // Method cacheLifecycleMethod:(Ljava/lang/reflect/Method;S)V
      98: aload_0
      99: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
     102: getfield      #30                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.afterUnmarshal:Ljava/lang/reflect/Method;
     105: ifnonnull     138
     108: aload         6
     110: ldc           #31                 // String afterUnmarshal
     112: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     115: ifeq          138
     118: aload_0
     119: aload         5
     121: getstatic     #27                 // Field unmarshalEventParams:[Ljava/lang/Class;
     124: invokespecial #28                 // Method match:(Ljava/lang/reflect/Method;[Ljava/lang/Class;)Z
     127: ifeq          138
     130: aload_0
     131: aload         5
     133: bipush        16
     135: invokespecial #29                 // Method cacheLifecycleMethod:(Ljava/lang/reflect/Method;S)V
     138: aload_0
     139: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
     142: getfield      #32                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.beforeMarshal:Ljava/lang/reflect/Method;
     145: ifnonnull     178
     148: aload         6
     150: ldc           #33                 // String beforeMarshal
     152: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     155: ifeq          178
     158: aload_0
     159: aload         5
     161: getstatic     #34                 // Field marshalEventParams:[Ljava/lang/Class;
     164: invokespecial #28                 // Method match:(Ljava/lang/reflect/Method;[Ljava/lang/Class;)Z
     167: ifeq          178
     170: aload_0
     171: aload         5
     173: bipush        32
     175: invokespecial #29                 // Method cacheLifecycleMethod:(Ljava/lang/reflect/Method;S)V
     178: aload_0
     179: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
     182: getfield      #35                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.afterMarshal:Ljava/lang/reflect/Method;
     185: ifnonnull     218
     188: aload         6
     190: ldc           #36                 // String afterMarshal
     192: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     195: ifeq          218
     198: aload_0
     199: aload         5
     201: getstatic     #34                 // Field marshalEventParams:[Ljava/lang/Class;
     204: invokespecial #28                 // Method match:(Ljava/lang/reflect/Method;[Ljava/lang/Class;)Z
     207: ifeq          218
     210: aload_0
     211: aload         5
     213: bipush        64
     215: invokespecial #29                 // Method cacheLifecycleMethod:(Ljava/lang/reflect/Method;S)V
     218: iinc          4, 1
     221: goto          39
     224: aload_1
     225: invokevirtual #37                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     228: astore_1
     229: goto          23
     232: goto          270
     235: astore_1
     236: getstatic     #39                 // Field logger:Ljava/util/logging/Logger;
     239: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     242: getstatic     #41                 // Field com/sun/xml/bind/v2/runtime/Messages.UNABLE_TO_DISCOVER_EVENTHANDLER:Lcom/sun/xml/bind/v2/runtime/Messages;
     245: iconst_2
     246: anewarray     #2                  // class java/lang/Object
     249: dup
     250: iconst_0
     251: aload_0
     252: getfield      #8                  // Field jaxbType:Ljava/lang/Class;
     255: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
     258: aastore
     259: dup
     260: iconst_1
     261: aload_1
     262: aastore
     263: invokevirtual #43                 // Method com/sun/xml/bind/v2/runtime/Messages.format:([Ljava/lang/Object;)Ljava/lang/String;
     266: aload_1
     267: invokevirtual #44                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     270: return
    Exception table:
       from    to  target type
           0   232   235   Class java/lang/SecurityException

  private boolean match(java.lang.reflect.Method, java.lang.Class[]);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: aload_2
       5: invokestatic  #46                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
       8: ireturn

  private void cacheLifecycleMethod(java.lang.reflect.Method, short);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
       4: ifnonnull     18
       7: aload_0
       8: new           #20                 // class com/sun/xml/bind/v2/runtime/LifecycleMethods
      11: dup
      12: invokespecial #21                 // Method com/sun/xml/bind/v2/runtime/LifecycleMethods."<init>":()V
      15: putfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
      18: aload_1
      19: iconst_1
      20: invokevirtual #47                 // Method java/lang/reflect/Method.setAccessible:(Z)V
      23: aload_0
      24: dup
      25: getfield      #10                 // Field flag:S
      28: iload_2
      29: ior
      30: i2s
      31: putfield      #10                 // Field flag:S
      34: iload_2
      35: lookupswitch  { // 4
                     8: 76
                    16: 87
                    32: 98
                    64: 109
               default: 117
          }
      76: aload_0
      77: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
      80: aload_1
      81: putfield      #24                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.beforeUnmarshal:Ljava/lang/reflect/Method;
      84: goto          117
      87: aload_0
      88: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
      91: aload_1
      92: putfield      #30                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.afterUnmarshal:Ljava/lang/reflect/Method;
      95: goto          117
      98: aload_0
      99: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
     102: aload_1
     103: putfield      #32                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.beforeMarshal:Ljava/lang/reflect/Method;
     106: goto          117
     109: aload_0
     110: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
     113: aload_1
     114: putfield      #35                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.afterMarshal:Ljava/lang/reflect/Method;
     117: return

  public final com.sun.xml.bind.v2.runtime.LifecycleMethods getLifecycleMethods();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lcm:Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
       4: areturn

  public final void invokeBeforeUnmarshalMethod(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl, java.lang.Object, java.lang.Object) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getLifecycleMethods:()Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
       4: getfield      #24                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.beforeUnmarshal:Ljava/lang/reflect/Method;
       7: astore        4
       9: aload_0
      10: aload         4
      12: aload_2
      13: aload_1
      14: aload_3
      15: invokespecial #49                 // Method invokeUnmarshallCallback:(Ljava/lang/reflect/Method;Ljava/lang/Object;Lcom/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallerImpl;Ljava/lang/Object;)V
      18: return

  public final void invokeAfterUnmarshalMethod(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl, java.lang.Object, java.lang.Object) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getLifecycleMethods:()Lcom/sun/xml/bind/v2/runtime/LifecycleMethods;
       4: getfield      #30                 // Field com/sun/xml/bind/v2/runtime/LifecycleMethods.afterUnmarshal:Ljava/lang/reflect/Method;
       7: astore        4
       9: aload_0
      10: aload         4
      12: aload_2
      13: aload_1
      14: aload_3
      15: invokespecial #49                 // Method invokeUnmarshallCallback:(Ljava/lang/reflect/Method;Ljava/lang/Object;Lcom/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallerImpl;Ljava/lang/Object;)V
      18: return

  private void invokeUnmarshallCallback(java.lang.reflect.Method, java.lang.Object, com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl, java.lang.Object) throws org.xml.sax.SAXException;
    Code:
       0: aload_1
       1: aload_2
       2: iconst_2
       3: anewarray     #2                  // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_3
       9: aastore
      10: dup
      11: iconst_1
      12: aload         4
      14: aastore
      15: invokevirtual #50                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: goto          47
      22: astore        5
      24: invokestatic  #52                 // Method com/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallingContext.getInstance:()Lcom/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallingContext;
      27: aload         5
      29: iconst_0
      30: invokevirtual #53                 // Method com/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallingContext.handleError:(Ljava/lang/Exception;Z)V
      33: goto          47
      36: astore        5
      38: invokestatic  #52                 // Method com/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallingContext.getInstance:()Lcom/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallingContext;
      41: aload         5
      43: iconst_0
      44: invokevirtual #53                 // Method com/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallingContext.handleError:(Ljava/lang/Exception;Z)V
      47: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/IllegalAccessException
           0    19    36   Class java/lang/reflect/InvocationTargetException

  static {};
    Code:
       0: iconst_2
       1: anewarray     #55                 // class java/lang/Class
       4: dup
       5: iconst_0
       6: ldc_w         #56                 // class javax/xml/bind/Unmarshaller
       9: aastore
      10: dup
      11: iconst_1
      12: ldc_w         #2                  // class java/lang/Object
      15: aastore
      16: putstatic     #27                 // Field unmarshalEventParams:[Ljava/lang/Class;
      19: iconst_1
      20: anewarray     #55                 // class java/lang/Class
      23: dup
      24: iconst_0
      25: ldc_w         #57                 // class javax/xml/bind/Marshaller
      28: aastore
      29: putstatic     #34                 // Field marshalEventParams:[Ljava/lang/Class;
      32: invokestatic  #58                 // Method com/sun/xml/bind/Util.getClassLogger:()Ljava/util/logging/Logger;
      35: putstatic     #39                 // Field logger:Ljava/util/logging/Logger;
      38: return
}
