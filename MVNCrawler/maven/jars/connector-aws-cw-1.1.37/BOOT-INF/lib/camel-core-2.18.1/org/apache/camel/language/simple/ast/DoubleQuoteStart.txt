Compiled from "DoubleQuoteStart.java"
public class org.apache.camel.language.simple.ast.DoubleQuoteStart extends org.apache.camel.language.simple.ast.BaseSimpleNode implements org.apache.camel.language.simple.ast.BlockStart {
  private final org.apache.camel.language.simple.ast.CompositeNodes block;

  public org.apache.camel.language.simple.ast.DoubleQuoteStart(org.apache.camel.language.simple.types.SimpleToken);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/apache/camel/language/simple/ast/BaseSimpleNode."<init>":(Lorg/apache/camel/language/simple/types/SimpleToken;)V
       5: aload_0
       6: new           #15                 // class org/apache/camel/language/simple/ast/CompositeNodes
       9: dup
      10: aload_1
      11: invokespecial #16                 // Method org/apache/camel/language/simple/ast/CompositeNodes."<init>":(Lorg/apache/camel/language/simple/types/SimpleToken;)V
      14: putfield      #18                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
      17: return

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #31                 // String \"
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #18                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
      16: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #31                 // String \"
      21: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public org.apache.camel.Expression createExpression(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #18                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
       6: ifnull        18
       9: aload_0
      10: getfield      #18                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
      13: aload_1
      14: invokevirtual #44                 // Method org/apache/camel/language/simple/ast/CompositeNodes.createExpression:(Ljava/lang/String;)Lorg/apache/camel/Expression;
      17: astore_2
      18: aload_2
      19: ifnonnull     28
      22: ldc           #48                 // String
      24: invokestatic  #54                 // Method org/apache/camel/builder/ExpressionBuilder.constantExpression:(Ljava/lang/Object;)Lorg/apache/camel/Expression;
      27: astore_2
      28: aload_2
      29: areturn

  public boolean acceptAndAddNode(org.apache.camel.language.simple.ast.SimpleNode);
    Code:
       0: aload_0
       1: getfield      #18                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
       4: aload_1
       5: invokevirtual #64                 // Method org/apache/camel/language/simple/ast/CompositeNodes.addChild:(Lorg/apache/camel/language/simple/ast/SimpleNode;)V
       8: iconst_1
       9: ireturn
}
