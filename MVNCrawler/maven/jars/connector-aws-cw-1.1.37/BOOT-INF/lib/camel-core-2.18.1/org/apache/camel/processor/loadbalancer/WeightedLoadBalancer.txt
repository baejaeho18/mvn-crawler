Compiled from "WeightedLoadBalancer.java"
public abstract class org.apache.camel.processor.loadbalancer.WeightedLoadBalancer extends org.apache.camel.processor.loadbalancer.QueueLoadBalancer {
  transient int lastIndex;

  private java.util.List<java.lang.Integer> distributionRatioList;

  private java.util.List<org.apache.camel.processor.loadbalancer.DistributionRatio> runtimeRatios;

  public org.apache.camel.processor.loadbalancer.WeightedLoadBalancer(java.util.List<java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/camel/processor/loadbalancer/QueueLoadBalancer."<init>":()V
       4: aload_0
       5: new           #19                 // class java/util/ArrayList
       8: dup
       9: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #22                 // Field distributionRatioList:Ljava/util/List;
      15: aload_0
      16: new           #19                 // class java/util/ArrayList
      19: dup
      20: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #24                 // Field runtimeRatios:Ljava/util/List;
      26: aload_0
      27: aload_1
      28: invokevirtual #27                 // Method deepCloneDistributionRatios:(Ljava/util/List;)V
      31: aload_0
      32: aload_1
      33: invokevirtual #30                 // Method loadRuntimeRatios:(Ljava/util/List;)V
      36: return

  protected void deepCloneDistributionRatios(java.util.List<java.lang.Integer>);
    Code:
       0: aload_1
       1: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          40
      16: aload_2
      17: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #51                 // class java/lang/Integer
      25: astore_3
      26: aload_0
      27: getfield      #22                 // Field distributionRatioList:Ljava/util/List;
      30: aload_3
      31: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      36: pop
      37: goto          7
      40: return

  public int getLastChosenProcessorIndex();
    Code:
       0: aload_0
       1: getfield      #61                 // Field lastIndex:I
       4: ireturn

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #66                 // Method org/apache/camel/processor/loadbalancer/QueueLoadBalancer.doStart:()V
       4: aload_0
       5: invokevirtual #70                 // Method getProcessors:()Ljava/util/List;
       8: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
      13: aload_0
      14: invokevirtual #76                 // Method getDistributionRatioList:()Ljava/util/List;
      17: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
      22: if_icmpeq     77
      25: new           #78                 // class java/lang/IllegalArgumentException
      28: dup
      29: new           #80                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #81                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #83                 // String Loadbalacing with
      38: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #70                 // Method getProcessors:()Ljava/util/List;
      45: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
      50: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #92                 // String  should match number of distributions
      55: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: invokevirtual #76                 // Method getDistributionRatioList:()Ljava/util/List;
      62: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
      67: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #99                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: return

  protected void loadRuntimeRatios(java.util.List<java.lang.Integer>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          58
      18: aload_3
      19: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #51                 // class java/lang/Integer
      27: astore        4
      29: aload_0
      30: getfield      #24                 // Field runtimeRatios:Ljava/util/List;
      33: new           #101                // class org/apache/camel/processor/loadbalancer/DistributionRatio
      36: dup
      37: iload_2
      38: iinc          2, 1
      41: aload         4
      43: invokevirtual #104                // Method java/lang/Integer.intValue:()I
      46: invokespecial #107                // Method org/apache/camel/processor/loadbalancer/DistributionRatio."<init>":(II)V
      49: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          9
      58: return

  protected boolean isRuntimeRatiosZeroed();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #24                 // Field runtimeRatios:Ljava/util/List;
       6: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          43
      21: aload_2
      22: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #101                // class org/apache/camel/processor/loadbalancer/DistributionRatio
      30: astore_3
      31: aload_3
      32: invokevirtual #112                // Method org/apache/camel/processor/loadbalancer/DistributionRatio.getRuntimeWeight:()I
      35: ifle          40
      38: iconst_0
      39: istore_1
      40: goto          12
      43: iload_1
      44: ireturn

  protected void resetRuntimeRatios();
    Code:
       0: aload_0
       1: getfield      #24                 // Field runtimeRatios:Ljava/util/List;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          40
      19: aload_1
      20: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #101                // class org/apache/camel/processor/loadbalancer/DistributionRatio
      28: astore_2
      29: aload_2
      30: aload_2
      31: invokevirtual #120                // Method org/apache/camel/processor/loadbalancer/DistributionRatio.getDistributionWeight:()I
      34: invokevirtual #124                // Method org/apache/camel/processor/loadbalancer/DistributionRatio.setRuntimeWeight:(I)V
      37: goto          10
      40: return

  public java.util.List<java.lang.Integer> getDistributionRatioList();
    Code:
       0: aload_0
       1: getfield      #22                 // Field distributionRatioList:Ljava/util/List;
       4: areturn

  public void setDistributionRatioList(java.util.List<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field distributionRatioList:Ljava/util/List;
       5: return

  public java.util.List<org.apache.camel.processor.loadbalancer.DistributionRatio> getRuntimeRatios();
    Code:
       0: aload_0
       1: getfield      #24                 // Field runtimeRatios:Ljava/util/List;
       4: areturn

  public void setRuntimeRatios(java.util.ArrayList<org.apache.camel.processor.loadbalancer.DistributionRatio>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field runtimeRatios:Ljava/util/List;
       5: return
}
