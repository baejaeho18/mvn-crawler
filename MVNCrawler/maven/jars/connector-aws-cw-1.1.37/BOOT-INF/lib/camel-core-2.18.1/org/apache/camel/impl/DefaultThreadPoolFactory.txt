Compiled from "DefaultThreadPoolFactory.java"
public class org.apache.camel.impl.DefaultThreadPoolFactory implements org.apache.camel.spi.ThreadPoolFactory {
  public org.apache.camel.impl.DefaultThreadPoolFactory();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: return

  public java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
       4: areturn

  public java.util.concurrent.ExecutorService newThreadPool(org.apache.camel.spi.ThreadPoolProfile, java.util.concurrent.ThreadFactory);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method org/apache/camel/spi/ThreadPoolProfile.getAllowCoreThreadTimeOut:()Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_1
       8: invokevirtual #34                 // Method org/apache/camel/spi/ThreadPoolProfile.getAllowCoreThreadTimeOut:()Ljava/lang/Boolean;
      11: invokevirtual #40                 // Method java/lang/Boolean.booleanValue:()Z
      14: goto          18
      17: iconst_0
      18: istore_3
      19: aload_0
      20: aload_1
      21: invokevirtual #44                 // Method org/apache/camel/spi/ThreadPoolProfile.getPoolSize:()Ljava/lang/Integer;
      24: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      27: aload_1
      28: invokevirtual #53                 // Method org/apache/camel/spi/ThreadPoolProfile.getMaxPoolSize:()Ljava/lang/Integer;
      31: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      34: aload_1
      35: invokevirtual #57                 // Method org/apache/camel/spi/ThreadPoolProfile.getKeepAliveTime:()Ljava/lang/Long;
      38: invokevirtual #63                 // Method java/lang/Long.longValue:()J
      41: aload_1
      42: invokevirtual #67                 // Method org/apache/camel/spi/ThreadPoolProfile.getTimeUnit:()Ljava/util/concurrent/TimeUnit;
      45: aload_1
      46: invokevirtual #70                 // Method org/apache/camel/spi/ThreadPoolProfile.getMaxQueueSize:()Ljava/lang/Integer;
      49: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      52: iload_3
      53: aload_1
      54: invokevirtual #74                 // Method org/apache/camel/spi/ThreadPoolProfile.getRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;
      57: aload_2
      58: invokevirtual #77                 // Method newThreadPool:(IIJLjava/util/concurrent/TimeUnit;IZLjava/util/concurrent/RejectedExecutionHandler;Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      61: areturn

  public java.util.concurrent.ExecutorService newThreadPool(int, int, long, java.util.concurrent.TimeUnit, int, boolean, java.util.concurrent.RejectedExecutionHandler, java.util.concurrent.ThreadFactory) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_1
       1: ifge          31
       4: new           #84                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #86                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #89                 // String CorePoolSize must be >= 0, was
      17: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #96                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_2
      32: iload_1
      33: if_icmpge     72
      36: new           #84                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #86                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #105                // String MaxPoolSize must be >= corePoolSize, was
      49: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_2
      53: invokevirtual #96                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #107                // String  >=
      58: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: iload_1
      62: invokevirtual #96                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: iload_1
      73: ifne          97
      76: iload         6
      78: ifgt          97
      81: new           #109                // class java/util/concurrent/SynchronousQueue
      84: dup
      85: invokespecial #110                // Method java/util/concurrent/SynchronousQueue."<init>":()V
      88: astore        10
      90: iconst_1
      91: istore_1
      92: iconst_1
      93: istore_2
      94: goto          125
      97: iload         6
      99: ifgt          114
     102: new           #109                // class java/util/concurrent/SynchronousQueue
     105: dup
     106: invokespecial #110                // Method java/util/concurrent/SynchronousQueue."<init>":()V
     109: astore        10
     111: goto          125
     114: new           #112                // class java/util/concurrent/LinkedBlockingQueue
     117: dup
     118: iload         6
     120: invokespecial #115                // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
     123: astore        10
     125: new           #119                // class org/apache/camel/util/concurrent/RejectableThreadPoolExecutor
     128: dup
     129: iload_1
     130: iload_2
     131: lload_3
     132: aload         5
     134: aload         10
     136: invokespecial #122                // Method org/apache/camel/util/concurrent/RejectableThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V
     139: astore        11
     141: aload         11
     143: aload         9
     145: invokevirtual #126                // Method java/util/concurrent/ThreadPoolExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
     148: aload         11
     150: iload         7
     152: invokevirtual #130                // Method java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
     155: aload         8
     157: ifnonnull     169
     160: new           #9                  // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
     163: dup
     164: invokespecial #131                // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
     167: astore        8
     169: aload         11
     171: aload         8
     173: invokevirtual #135                // Method java/util/concurrent/ThreadPoolExecutor.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
     176: aload         11
     178: areturn

  public java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(org.apache.camel.spi.ThreadPoolProfile, java.util.concurrent.ThreadFactory);
    Code:
       0: aload_1
       1: invokevirtual #74                 // Method org/apache/camel/spi/ThreadPoolProfile.getRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;
       4: astore_3
       5: aload_3
       6: ifnonnull     17
       9: new           #9                  // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
      12: dup
      13: invokespecial #131                // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
      16: astore_3
      17: new           #156                // class org/apache/camel/util/concurrent/RejectableScheduledThreadPoolExecutor
      20: dup
      21: aload_1
      22: invokevirtual #44                 // Method org/apache/camel/spi/ThreadPoolProfile.getPoolSize:()Ljava/lang/Integer;
      25: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      28: aload_2
      29: aload_3
      30: invokespecial #159                // Method org/apache/camel/util/concurrent/RejectableScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
      33: astore        4
      35: aload         4
      37: iconst_1
      38: invokevirtual #164                // Method java/util/concurrent/ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy:(Z)V
      41: aload_1
      42: invokevirtual #53                 // Method org/apache/camel/spi/ThreadPoolProfile.getMaxPoolSize:()Ljava/lang/Integer;
      45: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      48: ifle          69
      51: new           #166                // class org/apache/camel/util/concurrent/SizedScheduledExecutorService
      54: dup
      55: aload         4
      57: aload_1
      58: invokevirtual #70                 // Method org/apache/camel/spi/ThreadPoolProfile.getMaxQueueSize:()Ljava/lang/Integer;
      61: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      64: i2l
      65: invokespecial #169                // Method org/apache/camel/util/concurrent/SizedScheduledExecutorService."<init>":(Ljava/util/concurrent/ScheduledThreadPoolExecutor;J)V
      68: areturn
      69: aload         4
      71: areturn
}
