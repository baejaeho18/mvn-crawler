Compiled from "LocalCacheFactory.java"
class org.apache.camel.com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWAW<K, V> extends org.apache.camel.com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWA<K, V> {
  private final org.apache.camel.com.github.benmanes.caffeine.cache.WriteOrderDeque<org.apache.camel.com.github.benmanes.caffeine.cache.Node<K, V>> writeOrderDeque;

  private volatile long expiresAfterWriteNanos;

  org.apache.camel.com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWAW(org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V>, org.apache.camel.com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #19                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/LocalCacheFactory$WILiSMWA."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheLoader;Z)V
       7: aload_0
       8: new           #21                 // class org/apache/camel/com/github/benmanes/caffeine/cache/WriteOrderDeque
      11: dup
      12: invokespecial #24                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/WriteOrderDeque."<init>":()V
      15: putfield      #26                 // Field writeOrderDeque:Lorg/apache/camel/com/github/benmanes/caffeine/cache/WriteOrderDeque;
      18: aload_0
      19: aload_1
      20: invokevirtual #32                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine.getExpiresAfterWriteNanos:()J
      23: putfield      #34                 // Field expiresAfterWriteNanos:J
      26: return

  protected final org.apache.camel.com.github.benmanes.caffeine.cache.WriteOrderDeque<org.apache.camel.com.github.benmanes.caffeine.cache.Node<K, V>> writeOrderDeque();
    Code:
       0: aload_0
       1: getfield      #26                 // Field writeOrderDeque:Lorg/apache/camel/com/github/benmanes/caffeine/cache/WriteOrderDeque;
       4: areturn

  protected final boolean expiresAfterWrite();
    Code:
       0: iconst_1
       1: ireturn

  protected final long expiresAfterWriteNanos();
    Code:
       0: aload_0
       1: getfield      #34                 // Field expiresAfterWriteNanos:J
       4: lreturn

  protected final void setExpiresAfterWriteNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #34                 // Field expiresAfterWriteNanos:J
       5: return
}
