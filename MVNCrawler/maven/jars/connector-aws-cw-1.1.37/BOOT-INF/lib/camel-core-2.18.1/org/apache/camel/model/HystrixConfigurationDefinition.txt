Compiled from "HystrixConfigurationDefinition.java"
public class org.apache.camel.model.HystrixConfigurationDefinition extends org.apache.camel.model.IdentifiedType {
  public static final java.lang.String DEFAULT_GROUP_KEY;

  private org.apache.camel.model.HystrixDefinition parent;

  private java.lang.String groupKey;

  private java.lang.String threadPoolKey;

  private java.lang.Boolean circuitBreakerEnabled;

  private java.lang.Integer circuitBreakerErrorThresholdPercentage;

  private java.lang.Boolean circuitBreakerForceClosed;

  private java.lang.Boolean circuitBreakerForceOpen;

  private java.lang.Integer circuitBreakerRequestVolumeThreshold;

  private java.lang.Integer circuitBreakerSleepWindowInMilliseconds;

  private java.lang.Integer executionIsolationSemaphoreMaxConcurrentRequests;

  private java.lang.String executionIsolationStrategy;

  private java.lang.Boolean executionIsolationThreadInterruptOnTimeout;

  private java.lang.Integer executionTimeoutInMilliseconds;

  private java.lang.Boolean executionTimeoutEnabled;

  private java.lang.Integer fallbackIsolationSemaphoreMaxConcurrentRequests;

  private java.lang.Boolean fallbackEnabled;

  private java.lang.Integer metricsHealthSnapshotIntervalInMilliseconds;

  private java.lang.Integer metricsRollingPercentileBucketSize;

  private java.lang.Boolean metricsRollingPercentileEnabled;

  private java.lang.Integer metricsRollingPercentileWindowInMilliseconds;

  private java.lang.Integer metricsRollingPercentileWindowBuckets;

  private java.lang.Integer metricsRollingStatisticalWindowInMilliseconds;

  private java.lang.Integer metricsRollingStatisticalWindowBuckets;

  private java.lang.Boolean requestLogEnabled;

  private java.lang.Integer corePoolSize;

  private java.lang.Integer keepAliveTime;

  private java.lang.Integer maxQueueSize;

  private java.lang.Integer queueSizeRejectionThreshold;

  private java.lang.Integer threadPoolRollingNumberStatisticalWindowInMilliseconds;

  private java.lang.Integer threadPoolRollingNumberStatisticalWindowBuckets;

  public org.apache.camel.model.HystrixConfigurationDefinition();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method org/apache/camel/model/IdentifiedType."<init>":()V
       4: return

  public org.apache.camel.model.HystrixConfigurationDefinition(org.apache.camel.model.HystrixDefinition);
    Code:
       0: aload_0
       1: invokespecial #75                 // Method org/apache/camel/model/IdentifiedType."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #80                 // Field parent:Lorg/apache/camel/model/HystrixDefinition;
       9: return

  public java.lang.String getGroupKey();
    Code:
       0: aload_0
       1: getfield      #84                 // Field groupKey:Ljava/lang/String;
       4: areturn

  public void setGroupKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field groupKey:Ljava/lang/String;
       5: return

  public java.lang.String getThreadPoolKey();
    Code:
       0: aload_0
       1: getfield      #89                 // Field threadPoolKey:Ljava/lang/String;
       4: areturn

  public void setThreadPoolKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field threadPoolKey:Ljava/lang/String;
       5: return

  public java.lang.Boolean getCircuitBreakerEnabled();
    Code:
       0: aload_0
       1: getfield      #94                 // Field circuitBreakerEnabled:Ljava/lang/Boolean;
       4: areturn

  public void setCircuitBreakerEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field circuitBreakerEnabled:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getCircuitBreakerErrorThresholdPercentage();
    Code:
       0: aload_0
       1: getfield      #100                // Field circuitBreakerErrorThresholdPercentage:Ljava/lang/Integer;
       4: areturn

  public void setCircuitBreakerErrorThresholdPercentage(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field circuitBreakerErrorThresholdPercentage:Ljava/lang/Integer;
       5: return

  public java.lang.Boolean getCircuitBreakerForceClosed();
    Code:
       0: aload_0
       1: getfield      #105                // Field circuitBreakerForceClosed:Ljava/lang/Boolean;
       4: areturn

  public void setCircuitBreakerForceClosed(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #105                // Field circuitBreakerForceClosed:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getCircuitBreakerForceOpen();
    Code:
       0: aload_0
       1: getfield      #109                // Field circuitBreakerForceOpen:Ljava/lang/Boolean;
       4: areturn

  public void setCircuitBreakerForceOpen(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #109                // Field circuitBreakerForceOpen:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getCircuitBreakerRequestVolumeThreshold();
    Code:
       0: aload_0
       1: getfield      #113                // Field circuitBreakerRequestVolumeThreshold:Ljava/lang/Integer;
       4: areturn

  public void setCircuitBreakerRequestVolumeThreshold(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #113                // Field circuitBreakerRequestVolumeThreshold:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getCircuitBreakerSleepWindowInMilliseconds();
    Code:
       0: aload_0
       1: getfield      #117                // Field circuitBreakerSleepWindowInMilliseconds:Ljava/lang/Integer;
       4: areturn

  public void setCircuitBreakerSleepWindowInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field circuitBreakerSleepWindowInMilliseconds:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getExecutionIsolationSemaphoreMaxConcurrentRequests();
    Code:
       0: aload_0
       1: getfield      #121                // Field executionIsolationSemaphoreMaxConcurrentRequests:Ljava/lang/Integer;
       4: areturn

  public void setExecutionIsolationSemaphoreMaxConcurrentRequests(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #121                // Field executionIsolationSemaphoreMaxConcurrentRequests:Ljava/lang/Integer;
       5: return

  public java.lang.String getExecutionIsolationStrategy();
    Code:
       0: aload_0
       1: getfield      #125                // Field executionIsolationStrategy:Ljava/lang/String;
       4: areturn

  public void setExecutionIsolationStrategy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #125                // Field executionIsolationStrategy:Ljava/lang/String;
       5: return

  public java.lang.Boolean getExecutionIsolationThreadInterruptOnTimeout();
    Code:
       0: aload_0
       1: getfield      #129                // Field executionIsolationThreadInterruptOnTimeout:Ljava/lang/Boolean;
       4: areturn

  public void setExecutionIsolationThreadInterruptOnTimeout(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #129                // Field executionIsolationThreadInterruptOnTimeout:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getExecutionTimeoutInMilliseconds();
    Code:
       0: aload_0
       1: getfield      #133                // Field executionTimeoutInMilliseconds:Ljava/lang/Integer;
       4: areturn

  public void setExecutionTimeoutInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #133                // Field executionTimeoutInMilliseconds:Ljava/lang/Integer;
       5: return

  public java.lang.Boolean getExecutionTimeoutEnabled();
    Code:
       0: aload_0
       1: getfield      #137                // Field executionTimeoutEnabled:Ljava/lang/Boolean;
       4: areturn

  public void setExecutionTimeoutEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #137                // Field executionTimeoutEnabled:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getFallbackIsolationSemaphoreMaxConcurrentRequests();
    Code:
       0: aload_0
       1: getfield      #141                // Field fallbackIsolationSemaphoreMaxConcurrentRequests:Ljava/lang/Integer;
       4: areturn

  public void setFallbackIsolationSemaphoreMaxConcurrentRequests(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #141                // Field fallbackIsolationSemaphoreMaxConcurrentRequests:Ljava/lang/Integer;
       5: return

  public java.lang.Boolean getFallbackEnabled();
    Code:
       0: aload_0
       1: getfield      #145                // Field fallbackEnabled:Ljava/lang/Boolean;
       4: areturn

  public void setFallbackEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field fallbackEnabled:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getMetricsHealthSnapshotIntervalInMilliseconds();
    Code:
       0: aload_0
       1: getfield      #149                // Field metricsHealthSnapshotIntervalInMilliseconds:Ljava/lang/Integer;
       4: areturn

  public void setMetricsHealthSnapshotIntervalInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #149                // Field metricsHealthSnapshotIntervalInMilliseconds:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMetricsRollingPercentileBucketSize();
    Code:
       0: aload_0
       1: getfield      #153                // Field metricsRollingPercentileBucketSize:Ljava/lang/Integer;
       4: areturn

  public void setMetricsRollingPercentileBucketSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field metricsRollingPercentileBucketSize:Ljava/lang/Integer;
       5: return

  public java.lang.Boolean getMetricsRollingPercentileEnabled();
    Code:
       0: aload_0
       1: getfield      #157                // Field metricsRollingPercentileEnabled:Ljava/lang/Boolean;
       4: areturn

  public void setMetricsRollingPercentileEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #157                // Field metricsRollingPercentileEnabled:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getMetricsRollingPercentileWindowInMilliseconds();
    Code:
       0: aload_0
       1: getfield      #161                // Field metricsRollingPercentileWindowInMilliseconds:Ljava/lang/Integer;
       4: areturn

  public void setMetricsRollingPercentileWindowInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #161                // Field metricsRollingPercentileWindowInMilliseconds:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMetricsRollingPercentileWindowBuckets();
    Code:
       0: aload_0
       1: getfield      #165                // Field metricsRollingPercentileWindowBuckets:Ljava/lang/Integer;
       4: areturn

  public void setMetricsRollingPercentileWindowBuckets(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #165                // Field metricsRollingPercentileWindowBuckets:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMetricsRollingStatisticalWindowInMilliseconds();
    Code:
       0: aload_0
       1: getfield      #169                // Field metricsRollingStatisticalWindowInMilliseconds:Ljava/lang/Integer;
       4: areturn

  public void setMetricsRollingStatisticalWindowInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #169                // Field metricsRollingStatisticalWindowInMilliseconds:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMetricsRollingStatisticalWindowBuckets();
    Code:
       0: aload_0
       1: getfield      #173                // Field metricsRollingStatisticalWindowBuckets:Ljava/lang/Integer;
       4: areturn

  public void setMetricsRollingStatisticalWindowBuckets(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #173                // Field metricsRollingStatisticalWindowBuckets:Ljava/lang/Integer;
       5: return

  public java.lang.Boolean getRequestLogEnabled();
    Code:
       0: aload_0
       1: getfield      #177                // Field requestLogEnabled:Ljava/lang/Boolean;
       4: areturn

  public void setRequestLogEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #177                // Field requestLogEnabled:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getCorePoolSize();
    Code:
       0: aload_0
       1: getfield      #181                // Field corePoolSize:Ljava/lang/Integer;
       4: areturn

  public void setCorePoolSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #181                // Field corePoolSize:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #185                // Field keepAliveTime:Ljava/lang/Integer;
       4: areturn

  public void setKeepAliveTime(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #185                // Field keepAliveTime:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #189                // Field maxQueueSize:Ljava/lang/Integer;
       4: areturn

  public void setMaxQueueSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #189                // Field maxQueueSize:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getQueueSizeRejectionThreshold();
    Code:
       0: aload_0
       1: getfield      #193                // Field queueSizeRejectionThreshold:Ljava/lang/Integer;
       4: areturn

  public void setQueueSizeRejectionThreshold(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #193                // Field queueSizeRejectionThreshold:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getThreadPoolRollingNumberStatisticalWindowInMilliseconds();
    Code:
       0: aload_0
       1: getfield      #197                // Field threadPoolRollingNumberStatisticalWindowInMilliseconds:Ljava/lang/Integer;
       4: areturn

  public void setThreadPoolRollingNumberStatisticalWindowInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #197                // Field threadPoolRollingNumberStatisticalWindowInMilliseconds:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getThreadPoolRollingNumberStatisticalWindowBuckets();
    Code:
       0: aload_0
       1: getfield      #201                // Field threadPoolRollingNumberStatisticalWindowBuckets:Ljava/lang/Integer;
       4: areturn

  public void setThreadPoolRollingNumberStatisticalWindowBuckets(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #201                // Field threadPoolRollingNumberStatisticalWindowBuckets:Ljava/lang/Integer;
       5: return

  public org.apache.camel.model.HystrixConfigurationDefinition groupKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #205                // Method setGroupKey:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition threadPoolKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #207                // Method setThreadPoolKey:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition circuitBreakerEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field circuitBreakerEnabled:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition circuitBreakerErrorThresholdPercentage(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field circuitBreakerErrorThresholdPercentage:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition circuitBreakerForceClosed(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #105                // Field circuitBreakerForceClosed:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition circuitBreakerForceOpen(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #109                // Field circuitBreakerForceOpen:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition circuitBreakerRequestVolumeThreshold(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #113                // Field circuitBreakerRequestVolumeThreshold:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition circuitBreakerSleepWindowInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field circuitBreakerSleepWindowInMilliseconds:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition executionIsolationSemaphoreMaxConcurrentRequests(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #121                // Field executionIsolationSemaphoreMaxConcurrentRequests:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition executionIsolationStrategy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #125                // Field executionIsolationStrategy:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition executionIsolationThreadInterruptOnTimeout(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #129                // Field executionIsolationThreadInterruptOnTimeout:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition executionTimeoutInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #133                // Field executionTimeoutInMilliseconds:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition executionTimeoutEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #137                // Field executionTimeoutEnabled:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition fallbackIsolationSemaphoreMaxConcurrentRequests(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #141                // Field fallbackIsolationSemaphoreMaxConcurrentRequests:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition fallbackEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field fallbackEnabled:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition metricsHealthSnapshotIntervalInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #149                // Field metricsHealthSnapshotIntervalInMilliseconds:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition metricsRollingPercentileBucketSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field metricsRollingPercentileBucketSize:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition metricsRollingPercentileEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #157                // Field metricsRollingPercentileEnabled:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition metricsRollingPercentileWindowInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #161                // Field metricsRollingPercentileWindowInMilliseconds:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition metricsRollingPercentileWindowBuckets(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #165                // Field metricsRollingPercentileWindowBuckets:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition metricsRollingStatisticalWindowInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #169                // Field metricsRollingStatisticalWindowInMilliseconds:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition metricsRollingStatisticalWindowBuckets(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #173                // Field metricsRollingStatisticalWindowBuckets:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition requestLogEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #177                // Field requestLogEnabled:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition corePoolSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #181                // Field corePoolSize:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition keepAliveTime(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #185                // Field keepAliveTime:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition maxQueueSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #189                // Field maxQueueSize:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition queueSizeRejectionThreshold(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #193                // Field queueSizeRejectionThreshold:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition threadPoolRollingNumberStatisticalWindowInMilliseconds(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #197                // Field threadPoolRollingNumberStatisticalWindowInMilliseconds:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixConfigurationDefinition threadPoolRollingNumberStatisticalWindowBuckets(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #201                // Field threadPoolRollingNumberStatisticalWindowBuckets:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.camel.model.HystrixDefinition end();
    Code:
       0: aload_0
       1: getfield      #80                 // Field parent:Lorg/apache/camel/model/HystrixDefinition;
       4: areturn
}
