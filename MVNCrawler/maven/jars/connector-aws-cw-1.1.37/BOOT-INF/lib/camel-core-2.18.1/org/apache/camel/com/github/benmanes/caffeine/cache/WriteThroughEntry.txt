Compiled from "WriteThroughEntry.java"
final class org.apache.camel.com.github.benmanes.caffeine.cache.WriteThroughEntry<K, V> extends java.util.AbstractMap$SimpleEntry<K, V> {
  static final long serialVersionUID;

  private final java.util.concurrent.ConcurrentMap<K, V> map;

  org.apache.camel.com.github.benmanes.caffeine.cache.WriteThroughEntry(java.util.concurrent.ConcurrentMap<K, V>, K, V);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #26                 // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #32                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #34                 // class java/util/concurrent/ConcurrentMap
      14: putfield      #36                 // Field map:Ljava/util/concurrent/ConcurrentMap;
      17: return

  public V setValue(V);
    Code:
       0: aload_0
       1: getfield      #36                 // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_0
       5: invokevirtual #49                 // Method getKey:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #53,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: aload_1
      17: invokespecial #55                 // Method java/util/AbstractMap$SimpleEntry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  java.lang.Object writeReplace();
    Code:
       0: new           #5                  // class java/util/AbstractMap$SimpleEntry
       3: dup
       4: aload_0
       5: invokespecial #59                 // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/util/Map$Entry;)V
       8: areturn
}
