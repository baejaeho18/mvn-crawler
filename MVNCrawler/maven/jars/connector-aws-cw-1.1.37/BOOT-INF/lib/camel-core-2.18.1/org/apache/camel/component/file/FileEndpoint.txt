Compiled from "FileEndpoint.java"
public class org.apache.camel.component.file.FileEndpoint extends org.apache.camel.component.file.GenericFileEndpoint<java.io.File> {
  private static final java.lang.Integer CHMOD_WRITE_MASK;

  private static final java.lang.Integer CHMOD_READ_MASK;

  private static final java.lang.Integer CHMOD_EXECUTE_MASK;

  private final org.apache.camel.component.file.FileOperations operations;

  private java.io.File file;

  private boolean copyAndDeleteOnRenameFail;

  private boolean renameUsingCopy;

  private boolean forceWrites;

  private boolean probeContentType;

  private java.lang.String extendedAttributes;

  private java.lang.String chmod;

  private java.lang.String chmodDirectory;

  public org.apache.camel.component.file.FileEndpoint();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method org/apache/camel/component/file/GenericFileEndpoint."<init>":()V
       4: aload_0
       5: new           #50                 // class org/apache/camel/component/file/FileOperations
       8: dup
       9: aload_0
      10: invokespecial #53                 // Method org/apache/camel/component/file/FileOperations."<init>":(Lorg/apache/camel/component/file/FileEndpoint;)V
      13: putfield      #55                 // Field operations:Lorg/apache/camel/component/file/FileOperations;
      16: aload_0
      17: iconst_1
      18: putfield      #57                 // Field copyAndDeleteOnRenameFail:Z
      21: aload_0
      22: iconst_1
      23: putfield      #59                 // Field forceWrites:Z
      26: aload_0
      27: ldc           #61                 // String markerFile
      29: putfield      #64                 // Field readLock:Ljava/lang/String;
      32: return

  public org.apache.camel.component.file.FileEndpoint(java.lang.String, org.apache.camel.Component);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #69                 // Method org/apache/camel/component/file/GenericFileEndpoint."<init>":(Ljava/lang/String;Lorg/apache/camel/Component;)V
       6: aload_0
       7: new           #50                 // class org/apache/camel/component/file/FileOperations
      10: dup
      11: aload_0
      12: invokespecial #53                 // Method org/apache/camel/component/file/FileOperations."<init>":(Lorg/apache/camel/component/file/FileEndpoint;)V
      15: putfield      #55                 // Field operations:Lorg/apache/camel/component/file/FileOperations;
      18: aload_0
      19: iconst_1
      20: putfield      #57                 // Field copyAndDeleteOnRenameFail:Z
      23: aload_0
      24: iconst_1
      25: putfield      #59                 // Field forceWrites:Z
      28: aload_0
      29: ldc           #61                 // String markerFile
      31: putfield      #64                 // Field readLock:Ljava/lang/String;
      34: return

  public org.apache.camel.component.file.FileConsumer createConsumer(org.apache.camel.Processor) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #55                 // Field operations:Lorg/apache/camel/component/file/FileOperations;
       4: ldc           #77                 // String operations
       6: invokestatic  #83                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #85                 // Field file:Ljava/io/File;
      14: ldc           #86                 // String file
      16: invokestatic  #83                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: getfield      #85                 // Field file:Ljava/io/File;
      24: invokevirtual #92                 // Method java/io/File.exists:()Z
      27: ifne          145
      30: aload_0
      31: getfield      #85                 // Field file:Ljava/io/File;
      34: invokevirtual #95                 // Method java/io/File.isDirectory:()Z
      37: ifne          145
      40: aload_0
      41: invokevirtual #98                 // Method isAutoCreate:()Z
      44: ifeq          108
      47: aload_0
      48: getfield      #102                // Field log:Lorg/slf4j/Logger;
      51: ldc           #104                // String Creating non existing starting directory: {}
      53: aload_0
      54: getfield      #85                 // Field file:Ljava/io/File;
      57: invokeinterface #110,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      62: aload_0
      63: getfield      #85                 // Field file:Ljava/io/File;
      66: invokestatic  #116                // Method org/apache/camel/util/FileUtil.isAbsolute:(Ljava/io/File;)Z
      69: istore_2
      70: aload_0
      71: getfield      #55                 // Field operations:Lorg/apache/camel/component/file/FileOperations;
      74: aload_0
      75: getfield      #85                 // Field file:Ljava/io/File;
      78: invokevirtual #120                // Method java/io/File.getPath:()Ljava/lang/String;
      81: iload_2
      82: invokevirtual #124                // Method org/apache/camel/component/file/FileOperations.buildDirectory:(Ljava/lang/String;Z)Z
      85: istore_3
      86: iload_3
      87: ifne          105
      90: aload_0
      91: getfield      #102                // Field log:Lorg/slf4j/Logger;
      94: ldc           #126                // String Cannot auto create starting directory: {}
      96: aload_0
      97: getfield      #85                 // Field file:Ljava/io/File;
     100: invokeinterface #129,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     105: goto          145
     108: aload_0
     109: invokevirtual #132                // Method isStartingDirectoryMustExist:()Z
     112: ifeq          145
     115: new           #134                // class java/io/FileNotFoundException
     118: dup
     119: new           #136                // class java/lang/StringBuilder
     122: dup
     123: invokespecial #137                // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #139                // String Starting directory does not exist:
     128: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: getfield      #85                 // Field file:Ljava/io/File;
     135: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: invokevirtual #149                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #152                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     144: athrow
     145: aload_0
     146: aload_1
     147: aload_0
     148: getfield      #55                 // Field operations:Lorg/apache/camel/component/file/FileOperations;
     151: invokevirtual #156                // Method newFileConsumer:(Lorg/apache/camel/Processor;Lorg/apache/camel/component/file/GenericFileOperations;)Lorg/apache/camel/component/file/FileConsumer;
     154: astore_2
     155: aload_0
     156: invokevirtual #159                // Method isDelete:()Z
     159: ifeq          179
     162: aload_0
     163: invokevirtual #163                // Method getMove:()Lorg/apache/camel/Expression;
     166: ifnull        179
     169: new           #165                // class java/lang/IllegalArgumentException
     172: dup
     173: ldc           #167                // String You cannot set both delete=true and move options
     175: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     178: athrow
     179: aload_0
     180: invokevirtual #173                // Method isNoop:()Z
     183: ifeq          212
     186: aload_0
     187: invokevirtual #176                // Method isIdempotentSet:()Z
     190: ifne          212
     193: aload_0
     194: getfield      #102                // Field log:Lorg/slf4j/Logger;
     197: ldc           #178                // String Endpoint is configured with noop=true so forcing endpoint to be idempotent as well
     199: invokeinterface #181,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     204: aload_0
     205: iconst_1
     206: invokestatic  #187                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     209: invokevirtual #191                // Method setIdempotent:(Ljava/lang/Boolean;)V
     212: aload_0
     213: invokevirtual #176                // Method isIdempotentSet:()Z
     216: ifeq          257
     219: aload_0
     220: invokevirtual #195                // Method isIdempotent:()Ljava/lang/Boolean;
     223: invokevirtual #198                // Method java/lang/Boolean.booleanValue:()Z
     226: ifeq          257
     229: aload_0
     230: getfield      #202                // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
     233: ifnonnull     257
     236: aload_0
     237: getfield      #102                // Field log:Lorg/slf4j/Logger;
     240: ldc           #204                // String Using default memory based idempotent repository with cache max size: 1000
     242: invokeinterface #181,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     247: aload_0
     248: sipush        1000
     251: invokestatic  #210                // Method org/apache/camel/processor/idempotent/MemoryIdempotentRepository.memoryIdempotentRepository:(I)Lorg/apache/camel/spi/IdempotentRepository;
     254: putfield      #202                // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
     257: aload_2
     258: aload_0
     259: invokevirtual #214                // Method getMaxMessagesPerPoll:()I
     262: invokevirtual #218                // Method org/apache/camel/component/file/FileConsumer.setMaxMessagesPerPoll:(I)V
     265: aload_2
     266: aload_0
     267: invokevirtual #221                // Method isEagerMaxMessagesPerPoll:()Z
     270: invokevirtual #225                // Method org/apache/camel/component/file/FileConsumer.setEagerLimitMaxMessagesPerPoll:(Z)V
     273: aload_0
     274: aload_2
     275: invokevirtual #229                // Method configureConsumer:(Lorg/apache/camel/Consumer;)V
     278: aload_2
     279: areturn

  public org.apache.camel.component.file.GenericFileProducer<java.io.File> createProducer() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #55                 // Field operations:Lorg/apache/camel/component/file/FileOperations;
       4: ldc           #77                 // String operations
       6: invokestatic  #83                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokevirtual #240                // Method getFileExist:()Lorg/apache/camel/component/file/GenericFileExist;
      14: getstatic     #246                // Field org/apache/camel/component/file/GenericFileExist.Append:Lorg/apache/camel/component/file/GenericFileExist;
      17: if_acmpne     44
      20: aload_0
      21: invokevirtual #249                // Method getTempPrefix:()Ljava/lang/String;
      24: ifnonnull     34
      27: aload_0
      28: invokevirtual #252                // Method getTempFileName:()Lorg/apache/camel/Expression;
      31: ifnull        44
      34: new           #165                // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #254                // String You cannot set both fileExist=Append and tempPrefix/tempFileName options
      40: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: invokevirtual #240                // Method getFileExist:()Lorg/apache/camel/component/file/GenericFileExist;
      48: getstatic     #257                // Field org/apache/camel/component/file/GenericFileExist.Move:Lorg/apache/camel/component/file/GenericFileExist;
      51: if_acmpne     72
      54: aload_0
      55: invokevirtual #260                // Method getMoveExisting:()Lorg/apache/camel/Expression;
      58: ifnonnull     72
      61: new           #165                // class java/lang/IllegalArgumentException
      64: dup
      65: ldc_w         #262                // String You must configure moveExisting option when fileExist=Move
      68: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: invokevirtual #260                // Method getMoveExisting:()Lorg/apache/camel/Expression;
      76: ifnull        100
      79: aload_0
      80: invokevirtual #240                // Method getFileExist:()Lorg/apache/camel/component/file/GenericFileExist;
      83: getstatic     #257                // Field org/apache/camel/component/file/GenericFileExist.Move:Lorg/apache/camel/component/file/GenericFileExist;
      86: if_acmpeq     100
      89: new           #165                // class java/lang/IllegalArgumentException
      92: dup
      93: ldc_w         #264                // String You must configure fileExist=Move when moveExisting has been set
      96: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: new           #266                // class org/apache/camel/component/file/GenericFileProducer
     103: dup
     104: aload_0
     105: aload_0
     106: getfield      #55                 // Field operations:Lorg/apache/camel/component/file/FileOperations;
     109: invokespecial #269                // Method org/apache/camel/component/file/GenericFileProducer."<init>":(Lorg/apache/camel/component/file/GenericFileEndpoint;Lorg/apache/camel/component/file/GenericFileOperations;)V
     112: areturn

  public org.apache.camel.Exchange createExchange(org.apache.camel.component.file.GenericFile<java.io.File>);
    Code:
       0: aload_0
       1: invokevirtual #274                // Method createExchange:()Lorg/apache/camel/Exchange;
       4: astore_2
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: aload_2
      11: invokevirtual #280                // Method org/apache/camel/component/file/GenericFile.bindToExchange:(Lorg/apache/camel/Exchange;)V
      14: aload_2
      15: areturn

  protected org.apache.camel.component.file.FileConsumer newFileConsumer(org.apache.camel.Processor, org.apache.camel.component.file.GenericFileOperations<java.io.File>);
    Code:
       0: new           #170                // class org/apache/camel/component/file/FileConsumer
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #289                // Method org/apache/camel/component/file/FileConsumer."<init>":(Lorg/apache/camel/component/file/FileEndpoint;Lorg/apache/camel/Processor;Lorg/apache/camel/component/file/GenericFileOperations;)V
      10: areturn

  public java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #85                 // Field file:Ljava/io/File;
       4: areturn

  public void setFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field file:Ljava/io/File;
       5: aload_0
       6: invokevirtual #299                // Method getConfiguration:()Lorg/apache/camel/component/file/GenericFileConfiguration;
       9: aload_1
      10: invokestatic  #116                // Method org/apache/camel/util/FileUtil.isAbsolute:(Ljava/io/File;)Z
      13: ifeq          23
      16: aload_1
      17: invokevirtual #302                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      20: goto          27
      23: aload_1
      24: invokevirtual #120                // Method java/io/File.getPath:()Ljava/lang/String;
      27: invokevirtual #309                // Method org/apache/camel/component/file/GenericFileConfiguration.setDirectory:(Ljava/lang/String;)V
      30: return

  public java.lang.String getScheme();
    Code:
       0: ldc           #86                 // String file
       2: areturn

  protected java.lang.String createEndpointUri();
    Code:
       0: aload_0
       1: invokevirtual #313                // Method getFile:()Ljava/io/File;
       4: invokevirtual #317                // Method java/io/File.toURI:()Ljava/net/URI;
       7: invokevirtual #320                // Method java/net/URI.toString:()Ljava/lang/String;
      10: areturn

  public char getFileSeparator();
    Code:
       0: getstatic     #326                // Field java/io/File.separatorChar:C
       3: ireturn

  public boolean isAbsolute(java.lang.String);
    Code:
       0: new           #88                 // class java/io/File
       3: dup
       4: aload_1
       5: invokespecial #328                // Method java/io/File."<init>":(Ljava/lang/String;)V
       8: invokestatic  #116                // Method org/apache/camel/util/FileUtil.isAbsolute:(Ljava/io/File;)Z
      11: ireturn

  public boolean isCopyAndDeleteOnRenameFail();
    Code:
       0: aload_0
       1: getfield      #57                 // Field copyAndDeleteOnRenameFail:Z
       4: ireturn

  public void setCopyAndDeleteOnRenameFail(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field copyAndDeleteOnRenameFail:Z
       5: return

  public boolean isRenameUsingCopy();
    Code:
       0: aload_0
       1: getfield      #333                // Field renameUsingCopy:Z
       4: ireturn

  public void setRenameUsingCopy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #333                // Field renameUsingCopy:Z
       5: return

  public boolean isForceWrites();
    Code:
       0: aload_0
       1: getfield      #59                 // Field forceWrites:Z
       4: ireturn

  public void setForceWrites(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #59                 // Field forceWrites:Z
       5: return

  public boolean isProbeContentType();
    Code:
       0: aload_0
       1: getfield      #339                // Field probeContentType:Z
       4: ireturn

  public void setProbeContentType(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #339                // Field probeContentType:Z
       5: return

  public java.lang.String getExtendedAttributes();
    Code:
       0: aload_0
       1: getfield      #343                // Field extendedAttributes:Ljava/lang/String;
       4: areturn

  public void setExtendedAttributes(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #343                // Field extendedAttributes:Ljava/lang/String;
       5: return

  public boolean chmodPermissionsAreValid(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        20
       4: aload_1
       5: invokevirtual #348                // Method java/lang/String.length:()I
       8: iconst_3
       9: if_icmplt     20
      12: aload_1
      13: invokevirtual #348                // Method java/lang/String.length:()I
      16: iconst_4
      17: if_icmple     22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: invokevirtual #351                // Method java/lang/String.trim:()Ljava/lang/String;
      26: aload_1
      27: invokevirtual #348                // Method java/lang/String.length:()I
      30: iconst_3
      31: isub
      32: invokevirtual #355                // Method java/lang/String.substring:(I)Ljava/lang/String;
      35: astore_2
      36: iconst_0
      37: istore_3
      38: iload_3
      39: aload_2
      40: invokevirtual #348                // Method java/lang/String.length:()I
      43: if_icmpge     88
      46: aload_2
      47: iload_3
      48: invokevirtual #359                // Method java/lang/String.charAt:(I)C
      51: invokestatic  #364                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      54: astore        4
      56: aload         4
      58: invokevirtual #367                // Method java/lang/Character.charValue:()C
      61: invokestatic  #371                // Method java/lang/Character.isDigit:(C)Z
      64: ifeq          80
      67: aload         4
      69: invokevirtual #372                // Method java/lang/Character.toString:()Ljava/lang/String;
      72: invokestatic  #378                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      75: bipush        7
      77: if_icmple     82
      80: iconst_0
      81: ireturn
      82: iinc          3, 1
      85: goto          38
      88: iconst_1
      89: ireturn

  public java.util.Set<java.nio.file.attribute.PosixFilePermission> getPermissions();
    Code:
       0: new           #387                // class java/util/HashSet
       3: dup
       4: invokespecial #388                // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #390                // Field chmod:Ljava/lang/String;
      12: invokestatic  #394                // Method org/apache/camel/util/ObjectHelper.isEmpty:(Ljava/lang/Object;)Z
      15: ifeq          20
      18: aload_1
      19: areturn
      20: aload_0
      21: getfield      #390                // Field chmod:Ljava/lang/String;
      24: aload_0
      25: getfield      #390                // Field chmod:Ljava/lang/String;
      28: invokevirtual #348                // Method java/lang/String.length:()I
      31: iconst_3
      32: isub
      33: invokevirtual #355                // Method java/lang/String.substring:(I)Ljava/lang/String;
      36: astore_2
      37: aload_2
      38: iconst_0
      39: iconst_1
      40: invokevirtual #399                // Method java/lang/String.substring:(II)Ljava/lang/String;
      43: invokestatic  #378                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      46: invokestatic  #402                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: astore_3
      50: aload_2
      51: iconst_1
      52: iconst_2
      53: invokevirtual #399                // Method java/lang/String.substring:(II)Ljava/lang/String;
      56: invokestatic  #378                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      59: invokestatic  #402                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: astore        4
      64: aload_2
      65: iconst_2
      66: iconst_3
      67: invokevirtual #399                // Method java/lang/String.substring:(II)Ljava/lang/String;
      70: invokestatic  #378                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      73: invokestatic  #402                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: astore        5
      78: aload_3
      79: invokevirtual #405                // Method java/lang/Integer.intValue:()I
      82: getstatic     #407                // Field CHMOD_WRITE_MASK:Ljava/lang/Integer;
      85: invokevirtual #405                // Method java/lang/Integer.intValue:()I
      88: iand
      89: ifle          102
      92: aload_1
      93: getstatic     #413                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      96: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     101: pop
     102: aload_3
     103: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     106: getstatic     #418                // Field CHMOD_READ_MASK:Ljava/lang/Integer;
     109: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     112: iand
     113: ifle          126
     116: aload_1
     117: getstatic     #421                // Field java/nio/file/attribute/PosixFilePermission.OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;
     120: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     125: pop
     126: aload_3
     127: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     130: getstatic     #423                // Field CHMOD_EXECUTE_MASK:Ljava/lang/Integer;
     133: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     136: iand
     137: ifle          150
     140: aload_1
     141: getstatic     #426                // Field java/nio/file/attribute/PosixFilePermission.OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
     144: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     149: pop
     150: aload         4
     152: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     155: getstatic     #407                // Field CHMOD_WRITE_MASK:Ljava/lang/Integer;
     158: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     161: iand
     162: ifle          175
     165: aload_1
     166: getstatic     #429                // Field java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
     169: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     174: pop
     175: aload         4
     177: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     180: getstatic     #418                // Field CHMOD_READ_MASK:Ljava/lang/Integer;
     183: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     186: iand
     187: ifle          200
     190: aload_1
     191: getstatic     #432                // Field java/nio/file/attribute/PosixFilePermission.GROUP_READ:Ljava/nio/file/attribute/PosixFilePermission;
     194: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     199: pop
     200: aload         4
     202: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     205: getstatic     #423                // Field CHMOD_EXECUTE_MASK:Ljava/lang/Integer;
     208: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     211: iand
     212: ifle          225
     215: aload_1
     216: getstatic     #435                // Field java/nio/file/attribute/PosixFilePermission.GROUP_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
     219: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     224: pop
     225: aload         5
     227: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     230: getstatic     #407                // Field CHMOD_WRITE_MASK:Ljava/lang/Integer;
     233: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     236: iand
     237: ifle          250
     240: aload_1
     241: getstatic     #438                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
     244: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     249: pop
     250: aload         5
     252: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     255: getstatic     #418                // Field CHMOD_READ_MASK:Ljava/lang/Integer;
     258: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     261: iand
     262: ifle          275
     265: aload_1
     266: getstatic     #441                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_READ:Ljava/nio/file/attribute/PosixFilePermission;
     269: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     274: pop
     275: aload         5
     277: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     280: getstatic     #423                // Field CHMOD_EXECUTE_MASK:Ljava/lang/Integer;
     283: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     286: iand
     287: ifle          300
     290: aload_1
     291: getstatic     #444                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
     294: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     299: pop
     300: aload_1
     301: areturn

  public java.lang.String getChmod();
    Code:
       0: aload_0
       1: getfield      #390                // Field chmod:Ljava/lang/String;
       4: areturn

  public void setChmod(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokestatic  #456                // Method org/apache/camel/util/ObjectHelper.isNotEmpty:(Ljava/lang/Object;)Z
       4: ifeq          26
       7: aload_0
       8: aload_1
       9: invokevirtual #458                // Method chmodPermissionsAreValid:(Ljava/lang/String;)Z
      12: ifeq          26
      15: aload_0
      16: aload_1
      17: invokevirtual #351                // Method java/lang/String.trim:()Ljava/lang/String;
      20: putfield      #390                // Field chmod:Ljava/lang/String;
      23: goto          60
      26: new           #165                // class java/lang/IllegalArgumentException
      29: dup
      30: new           #136                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #137                // Method java/lang/StringBuilder."<init>":()V
      37: ldc_w         #460                // String chmod option [
      40: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc_w         #462                // String ] is not valid
      50: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #149                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: return

  public java.util.Set<java.nio.file.attribute.PosixFilePermission> getDirectoryPermissions();
    Code:
       0: new           #387                // class java/util/HashSet
       3: dup
       4: invokespecial #388                // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #465                // Field chmodDirectory:Ljava/lang/String;
      12: invokestatic  #394                // Method org/apache/camel/util/ObjectHelper.isEmpty:(Ljava/lang/Object;)Z
      15: ifeq          20
      18: aload_1
      19: areturn
      20: aload_0
      21: getfield      #465                // Field chmodDirectory:Ljava/lang/String;
      24: aload_0
      25: getfield      #465                // Field chmodDirectory:Ljava/lang/String;
      28: invokevirtual #348                // Method java/lang/String.length:()I
      31: iconst_3
      32: isub
      33: invokevirtual #355                // Method java/lang/String.substring:(I)Ljava/lang/String;
      36: astore_2
      37: aload_2
      38: iconst_0
      39: iconst_1
      40: invokevirtual #399                // Method java/lang/String.substring:(II)Ljava/lang/String;
      43: invokestatic  #378                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      46: invokestatic  #402                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: astore_3
      50: aload_2
      51: iconst_1
      52: iconst_2
      53: invokevirtual #399                // Method java/lang/String.substring:(II)Ljava/lang/String;
      56: invokestatic  #378                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      59: invokestatic  #402                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: astore        4
      64: aload_2
      65: iconst_2
      66: iconst_3
      67: invokevirtual #399                // Method java/lang/String.substring:(II)Ljava/lang/String;
      70: invokestatic  #378                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      73: invokestatic  #402                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: astore        5
      78: aload_3
      79: invokevirtual #405                // Method java/lang/Integer.intValue:()I
      82: getstatic     #407                // Field CHMOD_WRITE_MASK:Ljava/lang/Integer;
      85: invokevirtual #405                // Method java/lang/Integer.intValue:()I
      88: iand
      89: ifle          102
      92: aload_1
      93: getstatic     #413                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      96: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     101: pop
     102: aload_3
     103: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     106: getstatic     #418                // Field CHMOD_READ_MASK:Ljava/lang/Integer;
     109: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     112: iand
     113: ifle          126
     116: aload_1
     117: getstatic     #421                // Field java/nio/file/attribute/PosixFilePermission.OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;
     120: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     125: pop
     126: aload_3
     127: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     130: getstatic     #423                // Field CHMOD_EXECUTE_MASK:Ljava/lang/Integer;
     133: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     136: iand
     137: ifle          150
     140: aload_1
     141: getstatic     #426                // Field java/nio/file/attribute/PosixFilePermission.OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
     144: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     149: pop
     150: aload         4
     152: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     155: getstatic     #407                // Field CHMOD_WRITE_MASK:Ljava/lang/Integer;
     158: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     161: iand
     162: ifle          175
     165: aload_1
     166: getstatic     #429                // Field java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
     169: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     174: pop
     175: aload         4
     177: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     180: getstatic     #418                // Field CHMOD_READ_MASK:Ljava/lang/Integer;
     183: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     186: iand
     187: ifle          200
     190: aload_1
     191: getstatic     #432                // Field java/nio/file/attribute/PosixFilePermission.GROUP_READ:Ljava/nio/file/attribute/PosixFilePermission;
     194: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     199: pop
     200: aload         4
     202: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     205: getstatic     #423                // Field CHMOD_EXECUTE_MASK:Ljava/lang/Integer;
     208: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     211: iand
     212: ifle          225
     215: aload_1
     216: getstatic     #435                // Field java/nio/file/attribute/PosixFilePermission.GROUP_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
     219: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     224: pop
     225: aload         5
     227: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     230: getstatic     #407                // Field CHMOD_WRITE_MASK:Ljava/lang/Integer;
     233: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     236: iand
     237: ifle          250
     240: aload_1
     241: getstatic     #438                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
     244: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     249: pop
     250: aload         5
     252: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     255: getstatic     #418                // Field CHMOD_READ_MASK:Ljava/lang/Integer;
     258: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     261: iand
     262: ifle          275
     265: aload_1
     266: getstatic     #441                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_READ:Ljava/nio/file/attribute/PosixFilePermission;
     269: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     274: pop
     275: aload         5
     277: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     280: getstatic     #423                // Field CHMOD_EXECUTE_MASK:Ljava/lang/Integer;
     283: invokevirtual #405                // Method java/lang/Integer.intValue:()I
     286: iand
     287: ifle          300
     290: aload_1
     291: getstatic     #444                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
     294: invokeinterface #416,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     299: pop
     300: aload_1
     301: areturn

  public java.lang.String getChmodDirectory();
    Code:
       0: aload_0
       1: getfield      #465                // Field chmodDirectory:Ljava/lang/String;
       4: areturn

  public void setChmodDirectory(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokestatic  #456                // Method org/apache/camel/util/ObjectHelper.isNotEmpty:(Ljava/lang/Object;)Z
       4: ifeq          26
       7: aload_0
       8: aload_1
       9: invokevirtual #458                // Method chmodPermissionsAreValid:(Ljava/lang/String;)Z
      12: ifeq          26
      15: aload_0
      16: aload_1
      17: invokevirtual #351                // Method java/lang/String.trim:()Ljava/lang/String;
      20: putfield      #465                // Field chmodDirectory:Ljava/lang/String;
      23: goto          60
      26: new           #165                // class java/lang/IllegalArgumentException
      29: dup
      30: new           #136                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #137                // Method java/lang/StringBuilder."<init>":()V
      37: ldc_w         #469                // String chmodDirectory option [
      40: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc_w         #462                // String ] is not valid
      50: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #149                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: return

  public org.apache.camel.component.file.GenericFileConsumer createConsumer(org.apache.camel.Processor) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #472                // Method createConsumer:(Lorg/apache/camel/Processor;)Lorg/apache/camel/component/file/FileConsumer;
       5: areturn

  public org.apache.camel.Consumer createConsumer(org.apache.camel.Processor) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #472                // Method createConsumer:(Lorg/apache/camel/Processor;)Lorg/apache/camel/component/file/FileConsumer;
       5: areturn

  public org.apache.camel.Producer createProducer() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #476                // Method createProducer:()Lorg/apache/camel/component/file/GenericFileProducer;
       4: areturn

  static {};
    Code:
       0: iconst_2
       1: invokestatic  #402                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: putstatic     #407                // Field CHMOD_WRITE_MASK:Ljava/lang/Integer;
       7: iconst_4
       8: invokestatic  #402                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: putstatic     #418                // Field CHMOD_READ_MASK:Ljava/lang/Integer;
      14: iconst_1
      15: invokestatic  #402                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: putstatic     #423                // Field CHMOD_EXECUTE_MASK:Ljava/lang/Integer;
      21: return
}
