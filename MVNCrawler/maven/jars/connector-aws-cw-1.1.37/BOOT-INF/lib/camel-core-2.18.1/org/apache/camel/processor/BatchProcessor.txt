Compiled from "BatchProcessor.java"
public class org.apache.camel.processor.BatchProcessor extends org.apache.camel.support.ServiceSupport implements org.apache.camel.AsyncProcessor, org.apache.camel.Navigate<org.apache.camel.Processor>, org.apache.camel.spi.IdAware {
  public static final long DEFAULT_BATCH_TIMEOUT;

  public static final int DEFAULT_BATCH_SIZE;

  private static final org.slf4j.Logger LOG;

  private java.lang.String id;

  private long batchTimeout;

  private int batchSize;

  private int outBatchSize;

  private boolean groupExchanges;

  private boolean batchConsumer;

  private boolean ignoreInvalidExchanges;

  private boolean reverse;

  private boolean allowDuplicates;

  private org.apache.camel.Predicate completionPredicate;

  private org.apache.camel.Expression expression;

  private final org.apache.camel.CamelContext camelContext;

  private final org.apache.camel.Processor processor;

  private final java.util.Collection<org.apache.camel.Exchange> collection;

  private org.apache.camel.spi.ExceptionHandler exceptionHandler;

  private final org.apache.camel.processor.BatchProcessor$BatchSender sender;

  public org.apache.camel.processor.BatchProcessor(org.apache.camel.CamelContext, org.apache.camel.Processor, java.util.Collection<org.apache.camel.Exchange>, org.apache.camel.Expression);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method org/apache/camel/support/ServiceSupport."<init>":()V
       4: aload_0
       5: ldc2_w        #19                 // long 1000l
       8: putfield      #58                 // Field batchTimeout:J
      11: aload_0
      12: bipush        100
      14: putfield      #60                 // Field batchSize:I
      17: aload_1
      18: ldc           #61                 // String camelContext
      20: invokestatic  #67                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: pop
      24: aload_2
      25: ldc           #68                 // String processor
      27: invokestatic  #67                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      30: pop
      31: aload_3
      32: ldc           #69                 // String collection
      34: invokestatic  #67                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: pop
      38: aload         4
      40: ldc           #70                 // String expression
      42: invokestatic  #67                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      45: pop
      46: aload_0
      47: aload_1
      48: putfield      #72                 // Field camelContext:Lorg/apache/camel/CamelContext;
      51: aload_0
      52: aload_2
      53: putfield      #74                 // Field processor:Lorg/apache/camel/Processor;
      56: aload_0
      57: aload_3
      58: putfield      #76                 // Field collection:Ljava/util/Collection;
      61: aload_0
      62: aload         4
      64: putfield      #78                 // Field expression:Lorg/apache/camel/Expression;
      67: aload_0
      68: new           #15                 // class org/apache/camel/processor/BatchProcessor$BatchSender
      71: dup
      72: aload_0
      73: invokespecial #81                 // Method org/apache/camel/processor/BatchProcessor$BatchSender."<init>":(Lorg/apache/camel/processor/BatchProcessor;)V
      76: putfield      #83                 // Field sender:Lorg/apache/camel/processor/BatchProcessor$BatchSender;
      79: aload_0
      80: new           #85                 // class org/apache/camel/support/LoggingExceptionHandler
      83: dup
      84: aload_1
      85: aload_0
      86: invokevirtual #91                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      89: invokespecial #94                 // Method org/apache/camel/support/LoggingExceptionHandler."<init>":(Lorg/apache/camel/CamelContext;Ljava/lang/Class;)V
      92: putfield      #96                 // Field exceptionHandler:Lorg/apache/camel/spi/ExceptionHandler;
      95: return

  public java.lang.String toString();
    Code:
       0: new           #102                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #105                // String BatchProcessor[to:
       9: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #74                 // Field processor:Lorg/apache/camel/Processor;
      16: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #114                // String ]
      21: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public org.apache.camel.Expression getExpression();
    Code:
       0: aload_0
       1: getfield      #78                 // Field expression:Lorg/apache/camel/Expression;
       4: areturn

  public org.apache.camel.spi.ExceptionHandler getExceptionHandler();
    Code:
       0: aload_0
       1: getfield      #96                 // Field exceptionHandler:Lorg/apache/camel/spi/ExceptionHandler;
       4: areturn

  public void setExceptionHandler(org.apache.camel.spi.ExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field exceptionHandler:Lorg/apache/camel/spi/ExceptionHandler;
       5: return

  public int getBatchSize();
    Code:
       0: aload_0
       1: getfield      #60                 // Field batchSize:I
       4: ireturn

  public void setBatchSize(int);
    Code:
       0: iload_1
       1: ifgt          23
       4: getstatic     #128                // Field LOG:Lorg/slf4j/Logger;
       7: ldc           #130                // String Disabling batch size, will only be triggered by timeout
       9: invokeinterface #136,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      14: aload_0
      15: ldc           #137                // int 2147483647
      17: putfield      #60                 // Field batchSize:I
      20: goto          28
      23: aload_0
      24: iload_1
      25: putfield      #60                 // Field batchSize:I
      28: return

  public int getOutBatchSize();
    Code:
       0: aload_0
       1: getfield      #140                // Field outBatchSize:I
       4: ireturn

  public void setOutBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #140                // Field outBatchSize:I
       5: return

  public long getBatchTimeout();
    Code:
       0: aload_0
       1: getfield      #58                 // Field batchTimeout:J
       4: lreturn

  public void setBatchTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #58                 // Field batchTimeout:J
       5: return

  public boolean isGroupExchanges();
    Code:
       0: aload_0
       1: getfield      #149                // Field groupExchanges:Z
       4: ireturn

  public void setGroupExchanges(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #149                // Field groupExchanges:Z
       5: return

  public boolean isBatchConsumer();
    Code:
       0: aload_0
       1: getfield      #154                // Field batchConsumer:Z
       4: ireturn

  public void setBatchConsumer(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #154                // Field batchConsumer:Z
       5: return

  public boolean isIgnoreInvalidExchanges();
    Code:
       0: aload_0
       1: getfield      #158                // Field ignoreInvalidExchanges:Z
       4: ireturn

  public void setIgnoreInvalidExchanges(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #158                // Field ignoreInvalidExchanges:Z
       5: return

  public boolean isReverse();
    Code:
       0: aload_0
       1: getfield      #162                // Field reverse:Z
       4: ireturn

  public void setReverse(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #162                // Field reverse:Z
       5: return

  public boolean isAllowDuplicates();
    Code:
       0: aload_0
       1: getfield      #166                // Field allowDuplicates:Z
       4: ireturn

  public void setAllowDuplicates(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #166                // Field allowDuplicates:Z
       5: return

  public org.apache.camel.Predicate getCompletionPredicate();
    Code:
       0: aload_0
       1: getfield      #171                // Field completionPredicate:Lorg/apache/camel/Predicate;
       4: areturn

  public void setCompletionPredicate(org.apache.camel.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #171                // Field completionPredicate:Lorg/apache/camel/Predicate;
       5: return

  public org.apache.camel.Processor getProcessor();
    Code:
       0: aload_0
       1: getfield      #74                 // Field processor:Lorg/apache/camel/Processor;
       4: areturn

  public java.util.List<org.apache.camel.Processor> next();
    Code:
       0: aload_0
       1: invokevirtual #180                // Method hasNext:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: new           #182                // class java/util/ArrayList
      12: dup
      13: iconst_1
      14: invokespecial #184                // Method java/util/ArrayList."<init>":(I)V
      17: astore_1
      18: aload_1
      19: aload_0
      20: getfield      #74                 // Field processor:Lorg/apache/camel/Processor;
      23: invokeinterface #190,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_1
      30: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #74                 // Field processor:Lorg/apache/camel/Processor;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #196                // Field id:Ljava/lang/String;
       4: areturn

  public void setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #196                // Field id:Ljava/lang/String;
       5: return

  private boolean isInBatchCompleted(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #60                 // Field batchSize:I
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private boolean isOutBatchCompleted();
    Code:
       0: aload_0
       1: getfield      #140                // Field outBatchSize:I
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #76                 // Field collection:Ljava/util/Collection;
      13: invokeinterface #206,  1          // InterfaceMethod java/util/Collection.size:()I
      18: ifle          41
      21: aload_0
      22: getfield      #76                 // Field collection:Ljava/util/Collection;
      25: invokeinterface #206,  1          // InterfaceMethod java/util/Collection.size:()I
      30: aload_0
      31: getfield      #140                // Field outBatchSize:I
      34: if_icmplt     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  protected void processExchange(org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #74                 // Field processor:Lorg/apache/camel/Processor;
       4: aload_1
       5: invokeinterface #215,  2          // InterfaceMethod org/apache/camel/Processor.process:(Lorg/apache/camel/Exchange;)V
      10: aload_1
      11: invokeinterface #221,  1          // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
      16: ifnull        53
      19: aload_0
      20: invokevirtual #223                // Method getExceptionHandler:()Lorg/apache/camel/spi/ExceptionHandler;
      23: new           #102                // class java/lang/StringBuilder
      26: dup
      27: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #225                // String Error processing aggregated exchange:
      32: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: aload_1
      43: invokeinterface #221,  1          // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
      48: invokeinterface #231,  3          // InterfaceMethod org/apache/camel/spi/ExceptionHandler.handleException:(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: iconst_1
       1: anewarray     #87                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #74                 // Field processor:Lorg/apache/camel/Processor;
      10: aastore
      11: invokestatic  #240                // Method org/apache/camel/util/ServiceHelper.startServices:([Ljava/lang/Object;)V
      14: aload_0
      15: getfield      #83                 // Field sender:Lorg/apache/camel/processor/BatchProcessor$BatchSender;
      18: invokevirtual #243                // Method org/apache/camel/processor/BatchProcessor$BatchSender.start:()V
      21: return

  protected void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #83                 // Field sender:Lorg/apache/camel/processor/BatchProcessor$BatchSender;
       4: invokevirtual #247                // Method org/apache/camel/processor/BatchProcessor$BatchSender.cancel:()V
       7: iconst_1
       8: anewarray     #87                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #74                 // Field processor:Lorg/apache/camel/Processor;
      17: aastore
      18: invokestatic  #250                // Method org/apache/camel/util/ServiceHelper.stopServices:([Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #76                 // Field collection:Ljava/util/Collection;
      25: invokeinterface #253,  1          // InterfaceMethod java/util/Collection.clear:()V
      30: return

  public void process(org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #258                // Method org/apache/camel/util/AsyncProcessorHelper.process:(Lorg/apache/camel/AsyncProcessor;Lorg/apache/camel/Exchange;)V
       5: return

  public boolean process(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: invokevirtual #263                // Method isBatchConsumer:()Z
       4: ifeq          57
       7: aload_1
       8: ldc_w         #265                // String CamelBatchSize
      11: ldc_w         #267                // class java/lang/Integer
      14: invokeinterface #271,  3          // InterfaceMethod org/apache/camel/Exchange.getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #267                // class java/lang/Integer
      22: invokevirtual #274                // Method java/lang/Integer.intValue:()I
      25: istore_3
      26: aload_0
      27: getfield      #60                 // Field batchSize:I
      30: iload_3
      31: if_icmpeq     57
      34: aload_0
      35: iload_3
      36: putfield      #60                 // Field batchSize:I
      39: getstatic     #128                // Field LOG:Lorg/slf4j/Logger;
      42: ldc_w         #276                // String Using batch consumer completion, so setting batch size to: {}
      45: aload_0
      46: getfield      #60                 // Field batchSize:I
      49: invokestatic  #280                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: invokeinterface #284,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      57: aload_0
      58: aload_1
      59: invokespecial #288                // Method isValid:(Lorg/apache/camel/Exchange;)Z
      62: ifne          99
      65: aload_0
      66: invokevirtual #290                // Method isIgnoreInvalidExchanges:()Z
      69: ifeq          87
      72: getstatic     #128                // Field LOG:Lorg/slf4j/Logger;
      75: ldc_w         #292                // String Invalid Exchange. This Exchange will be ignored: {}
      78: aload_1
      79: invokeinterface #294,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      84: goto          107
      87: new           #296                // class org/apache/camel/CamelExchangeException
      90: dup
      91: ldc_w         #298                // String Exchange is not valid to be used by the BatchProcessor
      94: aload_1
      95: invokespecial #301                // Method org/apache/camel/CamelExchangeException."<init>":(Ljava/lang/String;Lorg/apache/camel/Exchange;)V
      98: athrow
      99: aload_0
     100: getfield      #83                 // Field sender:Lorg/apache/camel/processor/BatchProcessor$BatchSender;
     103: aload_1
     104: invokevirtual #304                // Method org/apache/camel/processor/BatchProcessor$BatchSender.enqueueExchange:(Lorg/apache/camel/Exchange;)V
     107: goto          118
     110: astore_3
     111: aload_1
     112: aload_3
     113: invokeinterface #308,  2          // InterfaceMethod org/apache/camel/Exchange.setException:(Ljava/lang/Throwable;)V
     118: aload_2
     119: iconst_1
     120: invokeinterface #313,  2          // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
     125: iconst_1
     126: ireturn
    Exception table:
       from    to  target type
           0   107   110   Class java/lang/Throwable

  private boolean isValid(org.apache.camel.Exchange);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #78                 // Field expression:Lorg/apache/camel/Expression;
       6: aload_1
       7: ldc           #87                 // class java/lang/Object
       9: invokeinterface #323,  3          // InterfaceMethod org/apache/camel/Expression.evaluate:(Lorg/apache/camel/Exchange;Ljava/lang/Class;)Ljava/lang/Object;
      14: astore_2
      15: goto          19
      18: astore_3
      19: aload_2
      20: ifnull        27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn
    Exception table:
       from    to  target type
           2    15    18   Class java/lang/Exception

  static org.apache.camel.CamelContext access$000(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #72                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: areturn

  static long access$100(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #58                 // Field batchTimeout:J
       4: lreturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #128                // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.Collection access$300(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #76                 // Field collection:Ljava/util/Collection;
       4: areturn

  static int access$400(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #60                 // Field batchSize:I
       4: ireturn

  static boolean access$500(org.apache.camel.processor.BatchProcessor, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #340                // Method isInBatchCompleted:(I)Z
       5: ireturn

  static boolean access$600(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: invokespecial #345                // Method isOutBatchCompleted:()Z
       4: ireturn

  static org.apache.camel.Predicate access$700(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #171                // Field completionPredicate:Lorg/apache/camel/Predicate;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/processor/BatchProcessor
       2: invokestatic  #354                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #128                // Field LOG:Lorg/slf4j/Logger;
       8: return
}
