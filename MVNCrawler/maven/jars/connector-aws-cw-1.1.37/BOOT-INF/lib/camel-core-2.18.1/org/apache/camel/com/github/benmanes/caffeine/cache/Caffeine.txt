Compiled from "Caffeine.java"
public final class org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> {
  static final java.util.logging.Logger logger;

  static final java.util.function.Supplier<org.apache.camel.com.github.benmanes.caffeine.cache.stats.StatsCounter> ENABLED_STATS_COUNTER_SUPPLIER;

  static final int UNSET_INT;

  static final int DEFAULT_INITIAL_CAPACITY;

  static final int DEFAULT_EXPIRATION_NANOS;

  static final int DEFAULT_REFRESH_NANOS;

  boolean strictParsing;

  long maximumSize;

  long maximumWeight;

  int initialCapacity;

  long refreshNanos;

  long expireAfterWriteNanos;

  long expireAfterAccessNanos;

  org.apache.camel.com.github.benmanes.caffeine.cache.RemovalListener<? super K, ? super V> removalListener;

  java.util.function.Supplier<org.apache.camel.com.github.benmanes.caffeine.cache.stats.StatsCounter> statsCounterSupplier;

  org.apache.camel.com.github.benmanes.caffeine.cache.CacheWriter<? super K, ? super V> writer;

  org.apache.camel.com.github.benmanes.caffeine.cache.Weigher<? super K, ? super V> weigher;

  java.util.concurrent.Executor executor;

  org.apache.camel.com.github.benmanes.caffeine.cache.Ticker ticker;

  org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine$Strength keyStrength;

  org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine$Strength valueStrength;

  private org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #88                 // Field strictParsing:Z
       9: aload_0
      10: ldc2_w        #89                 // long -1l
      13: putfield      #92                 // Field maximumSize:J
      16: aload_0
      17: ldc2_w        #89                 // long -1l
      20: putfield      #94                 // Field maximumWeight:J
      23: aload_0
      24: iconst_m1
      25: putfield      #96                 // Field initialCapacity:I
      28: aload_0
      29: ldc2_w        #89                 // long -1l
      32: putfield      #98                 // Field refreshNanos:J
      35: aload_0
      36: ldc2_w        #89                 // long -1l
      39: putfield      #100                // Field expireAfterWriteNanos:J
      42: aload_0
      43: ldc2_w        #89                 // long -1l
      46: putfield      #102                // Field expireAfterAccessNanos:J
      49: return

  static void requireArgument(boolean, java.lang.String, java.lang.Object...);
    Code:
       0: iload_0
       1: ifne          17
       4: new           #109                // class java/lang/IllegalArgumentException
       7: dup
       8: aload_1
       9: aload_2
      10: invokestatic  #115                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: invokespecial #118                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  static void requireArgument(boolean);
    Code:
       0: iload_0
       1: ifne          12
       4: new           #109                // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: return

  static void requireState(boolean);
    Code:
       0: iload_0
       1: ifne          12
       4: new           #128                // class java/lang/IllegalStateException
       7: dup
       8: invokespecial #129                // Method java/lang/IllegalStateException."<init>":()V
      11: athrow
      12: return

  static void requireState(boolean, java.lang.String, java.lang.Object...);
    Code:
       0: iload_0
       1: ifne          17
       4: new           #128                // class java/lang/IllegalStateException
       7: dup
       8: aload_1
       9: aload_2
      10: invokestatic  #115                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: invokespecial #130                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public static org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<java.lang.Object, java.lang.Object> newBuilder();
    Code:
       0: new           #2                  // class org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine
       3: dup
       4: invokespecial #134                // Method "<init>":()V
       7: areturn

  public static org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<java.lang.Object, java.lang.Object> from(org.apache.camel.com.github.benmanes.caffeine.cache.CaffeineSpec);
    Code:
       0: aload_0
       1: invokevirtual #141                // Method org/apache/camel/com/github/benmanes/caffeine/cache/CaffeineSpec.toBuilder:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;
       4: astore_1
       5: aload_1
       6: iconst_0
       7: putfield      #88                 // Field strictParsing:Z
      10: aload_1
      11: areturn

  public static org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<java.lang.Object, java.lang.Object> from(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #150                // Method org/apache/camel/com/github/benmanes/caffeine/cache/CaffeineSpec.parse:(Ljava/lang/String;)Lorg/apache/camel/com/github/benmanes/caffeine/cache/CaffeineSpec;
       4: invokestatic  #152                // Method from:(Lorg/apache/camel/com/github/benmanes/caffeine/cache/CaffeineSpec;)Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;
       7: areturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> initialCapacity(int);
    Code:
       0: aload_0
       1: getfield      #96                 // Field initialCapacity:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #156                // String initial capacity was already set to %s
      15: iconst_1
      16: anewarray     #5                  // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: getfield      #96                 // Field initialCapacity:I
      25: invokestatic  #162                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      32: iload_1
      33: iflt          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: invokestatic  #166                // Method requireArgument:(Z)V
      44: aload_0
      45: iload_1
      46: putfield      #96                 // Field initialCapacity:I
      49: aload_0
      50: areturn

  boolean hasInitialCapacity();
    Code:
       0: aload_0
       1: getfield      #96                 // Field initialCapacity:I
       4: iconst_m1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  int getInitialCapacity();
    Code:
       0: aload_0
       1: invokevirtual #172                // Method hasInitialCapacity:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #96                 // Field initialCapacity:I
      11: goto          15
      14: iconst_0
      15: ireturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> executor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #175                // Field executor:Ljava/util/concurrent/Executor;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #177                // String executor was already set to %s
      14: iconst_1
      15: anewarray     #5                  // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #175                // Field executor:Ljava/util/concurrent/Executor;
      24: aastore
      25: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: invokestatic  #183                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #185                // class java/util/concurrent/Executor
      36: putfield      #175                // Field executor:Ljava/util/concurrent/Executor;
      39: aload_0
      40: areturn

  java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #175                // Field executor:Ljava/util/concurrent/Executor;
       4: ifnonnull     13
       7: invokestatic  #193                // Method java/util/concurrent/ForkJoinPool.commonPool:()Ljava/util/concurrent/ForkJoinPool;
      10: goto          17
      13: aload_0
      14: getfield      #175                // Field executor:Ljava/util/concurrent/Executor;
      17: areturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> maximumSize(long);
    Code:
       0: aload_0
       1: getfield      #92                 // Field maximumSize:J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #196                // String maximum size was already set to %s
      18: iconst_1
      19: anewarray     #5                  // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #92                 // Field maximumSize:J
      28: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #94                 // Field maximumWeight:J
      39: ldc2_w        #89                 // long -1l
      42: lcmp
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ldc           #203                // String maximum weight was already set to %s
      53: iconst_1
      54: anewarray     #5                  // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_0
      60: getfield      #94                 // Field maximumWeight:J
      63: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      66: aastore
      67: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      70: aload_0
      71: getfield      #205                // Field weigher:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
      74: ifnonnull     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ldc           #207                // String maximum size can not be combined with weigher
      84: iconst_0
      85: anewarray     #5                  // class java/lang/Object
      88: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      91: lload_1
      92: lconst_0
      93: lcmp
      94: iflt          101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: ldc           #209                // String maximum size must not be negative
     104: iconst_0
     105: anewarray     #5                  // class java/lang/Object
     108: invokestatic  #211                // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     111: aload_0
     112: lload_1
     113: putfield      #92                 // Field maximumSize:J
     116: aload_0
     117: areturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> maximumWeight(long);
    Code:
       0: aload_0
       1: getfield      #94                 // Field maximumWeight:J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #203                // String maximum weight was already set to %s
      18: iconst_1
      19: anewarray     #5                  // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #94                 // Field maximumWeight:J
      28: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #92                 // Field maximumSize:J
      39: ldc2_w        #89                 // long -1l
      42: lcmp
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ldc           #196                // String maximum size was already set to %s
      53: iconst_1
      54: anewarray     #5                  // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_0
      60: getfield      #92                 // Field maximumSize:J
      63: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      66: aastore
      67: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      70: aload_0
      71: lload_1
      72: putfield      #94                 // Field maximumWeight:J
      75: lload_1
      76: lconst_0
      77: lcmp
      78: iflt          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: ldc           #213                // String maximum weight must not be negative
      88: iconst_0
      89: anewarray     #5                  // class java/lang/Object
      92: invokestatic  #211                // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      95: aload_0
      96: areturn

  public <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K1, V1> weigher(org.apache.camel.com.github.benmanes.caffeine.cache.Weigher<? super K1, ? super V1>);
    Code:
       0: aload_1
       1: invokestatic  #183                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #205                // Field weigher:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
       9: ifnonnull     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #216                // String weigher was already set to %s
      19: iconst_1
      20: anewarray     #5                  // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #205                // Field weigher:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
      29: aastore
      30: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #88                 // Field strictParsing:Z
      37: ifeq          51
      40: aload_0
      41: getfield      #92                 // Field maximumSize:J
      44: ldc2_w        #89                 // long -1l
      47: lcmp
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ldc           #218                // String weigher can not be combined with maximum size
      58: iconst_1
      59: anewarray     #5                  // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_0
      65: getfield      #92                 // Field maximumSize:J
      68: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      71: aastore
      72: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      75: aload_0
      76: astore_2
      77: aload_2
      78: aload_1
      79: putfield      #205                // Field weigher:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
      82: aload_2
      83: areturn

  boolean evicts();
    Code:
       0: aload_0
       1: invokevirtual #226                // Method getMaximum:()J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  boolean isWeighted();
    Code:
       0: aload_0
       1: getfield      #205                // Field weigher:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  long getMaximum();
    Code:
       0: aload_0
       1: invokevirtual #229                // Method isWeighted:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #94                 // Field maximumWeight:J
      11: goto          18
      14: aload_0
      15: getfield      #92                 // Field maximumSize:J
      18: lreturn

  <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.Weigher<K1, V1> getWeigher(boolean);
    Code:
       0: aload_0
       1: invokevirtual #229                // Method isWeighted:()Z
       4: ifeq          27
       7: aload_0
       8: getfield      #205                // Field weigher:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
      11: invokestatic  #237                // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Weigher.singletonWeigher:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
      14: if_acmpeq     27
      17: aload_0
      18: getfield      #205                // Field weigher:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
      21: invokestatic  #241                // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Weigher.boundedWeigher:(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;)Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
      24: goto          30
      27: invokestatic  #237                // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Weigher.singletonWeigher:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
      30: astore_2
      31: iload_1
      32: ifeq          46
      35: new           #11                 // class org/apache/camel/com/github/benmanes/caffeine/cache/Async$AsyncWeigher
      38: dup
      39: aload_2
      40: invokespecial #244                // Method org/apache/camel/com/github/benmanes/caffeine/cache/Async$AsyncWeigher."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;)V
      43: goto          47
      46: aload_2
      47: areturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> weakKeys();
    Code:
       0: aload_0
       1: getfield      #250                // Field keyStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #252                // String Key strength was already set to %s
      14: iconst_1
      15: anewarray     #5                  // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #250                // Field keyStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      24: aastore
      25: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #254                // Field writer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter;
      32: ifnonnull     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ldc_w         #256                // String Weak keys may not be used with CacheWriter
      43: iconst_0
      44: anewarray     #5                  // class java/lang/Object
      47: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      50: aload_0
      51: getstatic     #259                // Field org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength.WEAK:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      54: putfield      #250                // Field keyStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      57: aload_0
      58: areturn

  boolean isStrongKeys();
    Code:
       0: aload_0
       1: getfield      #250                // Field keyStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean isWeakKeys();
    Code:
       0: aload_0
       1: getfield      #250                // Field keyStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: getstatic     #259                // Field org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength.WEAK:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> weakValues();
    Code:
       0: aload_0
       1: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc_w         #266                // String Value strength was already set to %s
      15: iconst_1
      16: anewarray     #5                  // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      25: aastore
      26: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      29: aload_0
      30: getstatic     #259                // Field org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength.WEAK:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      33: putfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      36: aload_0
      37: areturn

  boolean isStrongValues();
    Code:
       0: aload_0
       1: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean isWeakValues();
    Code:
       0: aload_0
       1: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: getstatic     #259                // Field org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength.WEAK:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  boolean isSoftValues();
    Code:
       0: aload_0
       1: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: getstatic     #272                // Field org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength.SOFT:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> softValues();
    Code:
       0: aload_0
       1: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc_w         #266                // String Value strength was already set to %s
      15: iconst_1
      16: anewarray     #5                  // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      25: aastore
      26: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      29: aload_0
      30: getstatic     #272                // Field org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength.SOFT:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      33: putfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      36: aload_0
      37: areturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> expireAfterWrite(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #100                // Field expireAfterWriteNanos:J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc_w         #277                // String expireAfterWrite was already set to %s ns
      19: iconst_1
      20: anewarray     #5                  // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #100                // Field expireAfterWriteNanos:J
      29: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: aastore
      33: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      36: lload_1
      37: lconst_0
      38: lcmp
      39: iflt          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ldc_w         #279                // String duration cannot be negative: %s %s
      50: iconst_2
      51: anewarray     #5                  // class java/lang/Object
      54: dup
      55: iconst_0
      56: lload_1
      57: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      60: aastore
      61: dup
      62: iconst_1
      63: aload_3
      64: aastore
      65: invokestatic  #211                // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      68: aload_0
      69: aload_3
      70: lload_1
      71: invokevirtual #285                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      74: putfield      #100                // Field expireAfterWriteNanos:J
      77: aload_0
      78: areturn

  long getExpiresAfterWriteNanos();
    Code:
       0: aload_0
       1: invokevirtual #292                // Method expiresAfterWrite:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #100                // Field expireAfterWriteNanos:J
      11: goto          15
      14: lconst_0
      15: lreturn

  boolean expiresAfterWrite();
    Code:
       0: aload_0
       1: getfield      #100                // Field expireAfterWriteNanos:J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> expireAfterAccess(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #102                // Field expireAfterAccessNanos:J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc_w         #295                // String expireAfterAccess was already set to %s ns
      19: iconst_1
      20: anewarray     #5                  // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #102                // Field expireAfterAccessNanos:J
      29: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: aastore
      33: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      36: lload_1
      37: lconst_0
      38: lcmp
      39: iflt          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ldc_w         #279                // String duration cannot be negative: %s %s
      50: iconst_2
      51: anewarray     #5                  // class java/lang/Object
      54: dup
      55: iconst_0
      56: lload_1
      57: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      60: aastore
      61: dup
      62: iconst_1
      63: aload_3
      64: aastore
      65: invokestatic  #211                // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      68: aload_0
      69: aload_3
      70: lload_1
      71: invokevirtual #285                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      74: putfield      #102                // Field expireAfterAccessNanos:J
      77: aload_0
      78: areturn

  long getExpiresAfterAccessNanos();
    Code:
       0: aload_0
       1: invokevirtual #299                // Method expiresAfterAccess:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #102                // Field expireAfterAccessNanos:J
      11: goto          15
      14: lconst_0
      15: lreturn

  boolean expiresAfterAccess();
    Code:
       0: aload_0
       1: getfield      #102                // Field expireAfterAccessNanos:J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> refreshAfterWrite(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: invokestatic  #183                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #98                 // Field refreshNanos:J
       9: ldc2_w        #89                 // long -1l
      12: lcmp
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc_w         #302                // String refresh was already set to %s ns
      24: iconst_1
      25: anewarray     #5                  // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_0
      31: getfield      #98                 // Field refreshNanos:J
      34: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      37: aastore
      38: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      41: lload_1
      42: lconst_0
      43: lcmp
      44: ifle          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ldc_w         #304                // String duration must be positive: %s %s
      55: iconst_2
      56: anewarray     #5                  // class java/lang/Object
      59: dup
      60: iconst_0
      61: lload_1
      62: invokestatic  #201                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      65: aastore
      66: dup
      67: iconst_1
      68: aload_3
      69: aastore
      70: invokestatic  #211                // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      73: aload_0
      74: aload_3
      75: lload_1
      76: invokevirtual #285                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      79: putfield      #98                 // Field refreshNanos:J
      82: aload_0
      83: areturn

  long getRefreshAfterWriteNanos();
    Code:
       0: aload_0
       1: invokevirtual #308                // Method refreshes:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #98                 // Field refreshNanos:J
      11: goto          15
      14: lconst_0
      15: lreturn

  boolean refreshes();
    Code:
       0: aload_0
       1: getfield      #98                 // Field refreshNanos:J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> ticker(org.apache.camel.com.github.benmanes.caffeine.cache.Ticker);
    Code:
       0: aload_0
       1: getfield      #311                // Field ticker:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc_w         #313                // String Ticker was already set to %s
      15: iconst_1
      16: anewarray     #5                  // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: getfield      #311                // Field ticker:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      25: aastore
      26: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      29: aload_0
      30: aload_1
      31: invokestatic  #183                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #315                // class org/apache/camel/com/github/benmanes/caffeine/cache/Ticker
      37: putfield      #311                // Field ticker:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      40: aload_0
      41: areturn

  org.apache.camel.com.github.benmanes.caffeine.cache.Ticker getTicker();
    Code:
       0: aload_0
       1: invokevirtual #299                // Method expiresAfterAccess:()Z
       4: ifne          28
       7: aload_0
       8: invokevirtual #292                // Method expiresAfterWrite:()Z
      11: ifne          28
      14: aload_0
      15: invokevirtual #308                // Method refreshes:()Z
      18: ifne          28
      21: aload_0
      22: invokevirtual #320                // Method isRecordingStats:()Z
      25: ifeq          48
      28: aload_0
      29: getfield      #311                // Field ticker:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      32: ifnonnull     41
      35: invokestatic  #323                // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Ticker.systemTicker:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      38: goto          51
      41: aload_0
      42: getfield      #311                // Field ticker:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      45: goto          51
      48: invokestatic  #326                // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Ticker.disabledTicker:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      51: areturn

  public <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K1, V1> removalListener(org.apache.camel.com.github.benmanes.caffeine.cache.RemovalListener<? super K1, ? super V1>);
    Code:
       0: aload_0
       1: getfield      #329                // Field removalListener:Lorg/apache/camel/com/github/benmanes/caffeine/cache/RemovalListener;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #331                // Method requireState:(Z)V
      15: aload_0
      16: astore_2
      17: aload_2
      18: aload_1
      19: invokestatic  #183                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #333                // class org/apache/camel/com/github/benmanes/caffeine/cache/RemovalListener
      25: putfield      #329                // Field removalListener:Lorg/apache/camel/com/github/benmanes/caffeine/cache/RemovalListener;
      28: aload_2
      29: areturn

  <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.RemovalListener<K1, V1> getRemovalListener(boolean);
    Code:
       0: aload_0
       1: getfield      #329                // Field removalListener:Lorg/apache/camel/com/github/benmanes/caffeine/cache/RemovalListener;
       4: astore_2
       5: iload_1
       6: ifeq          28
       9: aload_2
      10: ifnull        28
      13: new           #16                 // class org/apache/camel/com/github/benmanes/caffeine/cache/Async$AsyncRemovalListener
      16: dup
      17: aload_2
      18: aload_0
      19: invokevirtual #338                // Method getExecutor:()Ljava/util/concurrent/Executor;
      22: invokespecial #341                // Method org/apache/camel/com/github/benmanes/caffeine/cache/Async$AsyncRemovalListener."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/RemovalListener;Ljava/util/concurrent/Executor;)V
      25: astore_3
      26: aload_3
      27: areturn
      28: aload_2
      29: areturn

  public <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K1, V1> writer(org.apache.camel.com.github.benmanes.caffeine.cache.CacheWriter<? super K1, ? super V1>);
    Code:
       0: aload_0
       1: getfield      #254                // Field writer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc_w         #348                // String Writer was already set to %s
      15: iconst_1
      16: anewarray     #5                  // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: getfield      #254                // Field writer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter;
      25: aastore
      26: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #250                // Field keyStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      33: ifnonnull     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc_w         #256                // String Weak keys may not be used with CacheWriter
      44: iconst_0
      45: anewarray     #5                  // class java/lang/Object
      48: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      51: aload_0
      52: astore_2
      53: aload_2
      54: aload_1
      55: invokestatic  #183                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #350                // class org/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter
      61: putfield      #254                // Field writer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter;
      64: aload_2
      65: areturn

  <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.CacheWriter<K1, V1> getCacheWriter();
    Code:
       0: aload_0
       1: getfield      #254                // Field writer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter;
       4: astore_1
       5: aload_0
       6: getfield      #254                // Field writer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter;
       9: ifnonnull     18
      12: invokestatic  #356                // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter.disabledWriter:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter;
      15: goto          19
      18: aload_1
      19: areturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> recordStats();
    Code:
       0: aload_0
       1: getfield      #361                // Field statsCounterSupplier:Ljava/util/function/Supplier;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc_w         #363                // String Statistics recording was already set
      15: iconst_0
      16: anewarray     #5                  // class java/lang/Object
      19: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      22: aload_0
      23: getstatic     #365                // Field ENABLED_STATS_COUNTER_SUPPLIER:Ljava/util/function/Supplier;
      26: putfield      #361                // Field statsCounterSupplier:Ljava/util/function/Supplier;
      29: aload_0
      30: areturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V> recordStats(java.util.function.Supplier<? extends org.apache.camel.com.github.benmanes.caffeine.cache.stats.StatsCounter>);
    Code:
       0: aload_0
       1: getfield      #361                // Field statsCounterSupplier:Ljava/util/function/Supplier;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc_w         #363                // String Statistics recording was already set
      15: iconst_0
      16: anewarray     #5                  // class java/lang/Object
      19: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      22: aload_1
      23: invokestatic  #183                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_0
      28: aload_1
      29: invokedynamic #386,  0            // InvokeDynamic #0:get:(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;
      34: putfield      #361                // Field statsCounterSupplier:Ljava/util/function/Supplier;
      37: aload_0
      38: areturn

  boolean isRecordingStats();
    Code:
       0: aload_0
       1: getfield      #361                // Field statsCounterSupplier:Ljava/util/function/Supplier;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  java.util.function.Supplier<? extends org.apache.camel.com.github.benmanes.caffeine.cache.stats.StatsCounter> getStatsCounterSupplier();
    Code:
       0: aload_0
       1: getfield      #361                // Field statsCounterSupplier:Ljava/util/function/Supplier;
       4: ifnonnull     15
       7: invokedynamic #397,  0            // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      12: goto          19
      15: aload_0
      16: getfield      #361                // Field statsCounterSupplier:Ljava/util/function/Supplier;
      19: areturn

  boolean isBounded();
    Code:
       0: aload_0
       1: getfield      #92                 // Field maximumSize:J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifne          58
      11: aload_0
      12: getfield      #94                 // Field maximumWeight:J
      15: ldc2_w        #89                 // long -1l
      18: lcmp
      19: ifne          58
      22: aload_0
      23: getfield      #102                // Field expireAfterAccessNanos:J
      26: ldc2_w        #89                 // long -1l
      29: lcmp
      30: ifne          58
      33: aload_0
      34: getfield      #100                // Field expireAfterWriteNanos:J
      37: ldc2_w        #89                 // long -1l
      40: lcmp
      41: ifne          58
      44: aload_0
      45: getfield      #250                // Field keyStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      48: ifnonnull     58
      51: aload_0
      52: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
      55: ifnull        62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn

  public <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.Cache<K1, V1> build();
    Code:
       0: aload_0
       1: invokevirtual #405                // Method requireWeightWithWeigher:()V
       4: aload_0
       5: invokevirtual #408                // Method requireNonLoadingCache:()V
       8: aload_0
       9: astore_1
      10: aload_0
      11: invokevirtual #410                // Method isBounded:()Z
      14: ifne          24
      17: aload_0
      18: invokevirtual #308                // Method refreshes:()Z
      21: ifeq          35
      24: new           #19                 // class org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache
      27: dup
      28: aload_1
      29: invokespecial #413                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;)V
      32: goto          43
      35: new           #24                 // class org/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalManualCache
      38: dup
      39: aload_1
      40: invokespecial #414                // Method org/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalManualCache."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;)V
      43: areturn

  public <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.LoadingCache<K1, V1> build(org.apache.camel.com.github.benmanes.caffeine.cache.CacheLoader<? super K1, V1>);
    Code:
       0: aload_0
       1: invokevirtual #405                // Method requireWeightWithWeigher:()V
       4: aload_0
       5: astore_2
       6: aload_0
       7: invokevirtual #410                // Method isBounded:()Z
      10: ifne          20
      13: aload_0
      14: invokevirtual #308                // Method refreshes:()Z
      17: ifeq          32
      20: new           #29                 // class org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalLoadingCache
      23: dup
      24: aload_2
      25: aload_1
      26: invokespecial #420                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalLoadingCache."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheLoader;)V
      29: goto          41
      32: new           #32                 // class org/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalLoadingCache
      35: dup
      36: aload_2
      37: aload_1
      38: invokespecial #421                // Method org/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalLoadingCache."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheLoader;)V
      41: areturn

  public <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.AsyncLoadingCache<K1, V1> buildAsync(org.apache.camel.com.github.benmanes.caffeine.cache.CacheLoader<? super K1, V1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #431                // Method buildAsync:(Lorg/apache/camel/com/github/benmanes/caffeine/cache/AsyncCacheLoader;)Lorg/apache/camel/com/github/benmanes/caffeine/cache/AsyncLoadingCache;
       5: areturn

  public <K1 extends K, V1 extends V> org.apache.camel.com.github.benmanes.caffeine.cache.AsyncLoadingCache<K1, V1> buildAsync(org.apache.camel.com.github.benmanes.caffeine.cache.AsyncCacheLoader<? super K1, V1>);
    Code:
       0: aload_0
       1: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #331                // Method requireState:(Z)V
      15: aload_0
      16: getfield      #254                // Field writer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter;
      19: ifnonnull     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: invokestatic  #331                // Method requireState:(Z)V
      30: aload_0
      31: invokevirtual #405                // Method requireWeightWithWeigher:()V
      34: aload_1
      35: invokestatic  #183                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_0
      40: astore_2
      41: aload_0
      42: invokevirtual #410                // Method isBounded:()Z
      45: ifne          55
      48: aload_0
      49: invokevirtual #308                // Method refreshes:()Z
      52: ifeq          67
      55: new           #35                 // class org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalAsyncLoadingCache
      58: dup
      59: aload_2
      60: aload_1
      61: invokespecial #434                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalAsyncLoadingCache."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;Lorg/apache/camel/com/github/benmanes/caffeine/cache/AsyncCacheLoader;)V
      64: goto          76
      67: new           #38                 // class org/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalAsyncLoadingCache
      70: dup
      71: aload_2
      72: aload_1
      73: invokespecial #435                // Method org/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalAsyncLoadingCache."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;Lorg/apache/camel/com/github/benmanes/caffeine/cache/AsyncCacheLoader;)V
      76: areturn

  void requireNonLoadingCache();
    Code:
       0: aload_0
       1: getfield      #98                 // Field refreshNanos:J
       4: ldc2_w        #89                 // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc_w         #441                // String refreshAfterWrite requires a LoadingCache
      19: iconst_0
      20: anewarray     #5                  // class java/lang/Object
      23: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      26: return

  void requireWeightWithWeigher();
    Code:
       0: aload_0
       1: getfield      #205                // Field weigher:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Weigher;
       4: ifnonnull     36
       7: aload_0
       8: getfield      #94                 // Field maximumWeight:J
      11: ldc2_w        #89                 // long -1l
      14: lcmp
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc_w         #443                // String maximumWeight requires weigher
      26: iconst_0
      27: anewarray     #5                  // class java/lang/Object
      30: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      33: goto          95
      36: aload_0
      37: getfield      #88                 // Field strictParsing:Z
      40: ifeq          72
      43: aload_0
      44: getfield      #94                 // Field maximumWeight:J
      47: ldc2_w        #89                 // long -1l
      50: lcmp
      51: ifeq          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ldc_w         #445                // String weigher requires maximumWeight
      62: iconst_0
      63: anewarray     #5                  // class java/lang/Object
      66: invokestatic  #164                // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      69: goto          95
      72: aload_0
      73: getfield      #94                 // Field maximumWeight:J
      76: ldc2_w        #89                 // long -1l
      79: lcmp
      80: ifne          95
      83: getstatic     #447                // Field logger:Ljava/util/logging/Logger;
      86: getstatic     #453                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      89: ldc_w         #455                // String ignoring weigher specified without maximumWeight
      92: invokevirtual #461                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      95: return

  public java.lang.String toString();
    Code:
       0: new           #465                // class java/lang/StringBuilder
       3: dup
       4: bipush        64
       6: invokespecial #468                // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #472                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #477                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: bipush        123
      23: invokevirtual #484                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      26: pop
      27: aload_1
      28: invokevirtual #487                // Method java/lang/StringBuilder.length:()I
      31: istore_2
      32: aload_0
      33: getfield      #96                 // Field initialCapacity:I
      36: iconst_m1
      37: if_icmpeq     61
      40: aload_1
      41: ldc_w         #489                // String initialCapacity=
      44: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: getfield      #96                 // Field initialCapacity:I
      51: invokevirtual #492                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: ldc_w         #494                // String ,
      57: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_0
      62: getfield      #92                 // Field maximumSize:J
      65: ldc2_w        #89                 // long -1l
      68: lcmp
      69: ifeq          93
      72: aload_1
      73: ldc_w         #496                // String maximumSize=
      76: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #92                 // Field maximumSize:J
      83: invokevirtual #499                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      86: ldc_w         #494                // String ,
      89: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: getfield      #94                 // Field maximumWeight:J
      97: ldc2_w        #89                 // long -1l
     100: lcmp
     101: ifeq          125
     104: aload_1
     105: ldc_w         #501                // String maximumWeight=
     108: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: getfield      #94                 // Field maximumWeight:J
     115: invokevirtual #499                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     118: ldc_w         #494                // String ,
     121: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: pop
     125: aload_0
     126: getfield      #100                // Field expireAfterWriteNanos:J
     129: ldc2_w        #89                 // long -1l
     132: lcmp
     133: ifeq          157
     136: aload_1
     137: ldc_w         #503                // String expireAfterWrite=
     140: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_0
     144: getfield      #100                // Field expireAfterWriteNanos:J
     147: invokevirtual #499                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     150: ldc_w         #505                // String ns,
     153: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: pop
     157: aload_0
     158: getfield      #102                // Field expireAfterAccessNanos:J
     161: ldc2_w        #89                 // long -1l
     164: lcmp
     165: ifeq          189
     168: aload_1
     169: ldc_w         #507                // String expireAfterAccess=
     172: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: aload_0
     176: getfield      #102                // Field expireAfterAccessNanos:J
     179: invokevirtual #499                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     182: ldc_w         #505                // String ns,
     185: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: pop
     189: aload_0
     190: getfield      #98                 // Field refreshNanos:J
     193: ldc2_w        #89                 // long -1l
     196: lcmp
     197: ifeq          221
     200: aload_1
     201: ldc_w         #509                // String refreshNanos=
     204: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: aload_0
     208: getfield      #98                 // Field refreshNanos:J
     211: invokevirtual #499                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     214: ldc_w         #505                // String ns,
     217: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: pop
     221: aload_0
     222: getfield      #250                // Field keyStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
     225: ifnull        255
     228: aload_1
     229: ldc_w         #511                // String keyStrength=
     232: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     235: aload_0
     236: getfield      #250                // Field keyStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
     239: invokevirtual #513                // Method org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength.toString:()Ljava/lang/String;
     242: invokevirtual #516                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     245: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: ldc_w         #494                // String ,
     251: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: pop
     255: aload_0
     256: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
     259: ifnull        289
     262: aload_1
     263: ldc_w         #518                // String valueStrength=
     266: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: getfield      #264                // Field valueStrength:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength;
     273: invokevirtual #513                // Method org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine$Strength.toString:()Ljava/lang/String;
     276: invokevirtual #516                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     279: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     282: ldc_w         #494                // String ,
     285: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     288: pop
     289: aload_0
     290: getfield      #329                // Field removalListener:Lorg/apache/camel/com/github/benmanes/caffeine/cache/RemovalListener;
     293: ifnull        304
     296: aload_1
     297: ldc_w         #520                // String removalListener,
     300: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     303: pop
     304: aload_0
     305: getfield      #254                // Field writer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheWriter;
     308: ifnull        319
     311: aload_1
     312: ldc_w         #522                // String writer,
     315: invokevirtual #481                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     318: pop
     319: aload_1
     320: invokevirtual #487                // Method java/lang/StringBuilder.length:()I
     323: iload_2
     324: if_icmple     338
     327: aload_1
     328: aload_1
     329: invokevirtual #487                // Method java/lang/StringBuilder.length:()I
     332: iconst_2
     333: isub
     334: invokevirtual #525                // Method java/lang/StringBuilder.deleteCharAt:(I)Ljava/lang/StringBuilder;
     337: pop
     338: aload_1
     339: bipush        125
     341: invokevirtual #484                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     344: invokevirtual #526                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     347: areturn

  private static org.apache.camel.com.github.benmanes.caffeine.cache.stats.StatsCounter lambda$recordStats$0(java.util.function.Supplier);
    Code:
       0: aload_0
       1: invokeinterface #531,  1          // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       6: checkcast     #391                // class org/apache/camel/com/github/benmanes/caffeine/cache/stats/StatsCounter
       9: invokestatic  #535                // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/stats/StatsCounter.guardedStatsCounter:(Lorg/apache/camel/com/github/benmanes/caffeine/cache/stats/StatsCounter;)Lorg/apache/camel/com/github/benmanes/caffeine/cache/stats/StatsCounter;
      12: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine
       2: invokevirtual #539                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #543                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #447                // Field logger:Ljava/util/logging/Logger;
      11: invokedynamic #548,  0            // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      16: putstatic     #365                // Field ENABLED_STATS_COUNTER_SUPPLIER:Ljava/util/function/Supplier;
      19: return
}
