Compiled from "UnboundedLocalCache.java"
final class org.apache.camel.com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedPolicy<K, V> implements org.apache.camel.com.github.benmanes.caffeine.cache.Policy<K, V> {
  private final boolean isRecordingStats;

  org.apache.camel.com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedPolicy(boolean);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #26                 // Field isRecordingStats:Z
       9: return

  public boolean isRecordingStats();
    Code:
       0: aload_0
       1: getfield      #26                 // Field isRecordingStats:Z
       4: ireturn

  public java.util.Optional<org.apache.camel.com.github.benmanes.caffeine.cache.Policy$Eviction<K, V>> eviction();
    Code:
       0: invokestatic  #37                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  public java.util.Optional<org.apache.camel.com.github.benmanes.caffeine.cache.Policy$Expiration<K, V>> expireAfterAccess();
    Code:
       0: invokestatic  #37                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  public java.util.Optional<org.apache.camel.com.github.benmanes.caffeine.cache.Policy$Expiration<K, V>> expireAfterWrite();
    Code:
       0: invokestatic  #37                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  public java.util.Optional<org.apache.camel.com.github.benmanes.caffeine.cache.Policy$Expiration<K, V>> refreshAfterWrite();
    Code:
       0: invokestatic  #37                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn
}
