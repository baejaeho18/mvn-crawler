Compiled from "CircuitBreakerLoadBalancer.java"
public class org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer extends org.apache.camel.processor.loadbalancer.LoadBalancerSupport implements org.apache.camel.Traceable,org.apache.camel.CamelContextAware {
  private static final int STATE_CLOSED;

  private static final int STATE_HALF_OPEN;

  private static final int STATE_OPEN;

  private final java.util.List<java.lang.Class<?>> exceptions;

  private org.apache.camel.CamelContext camelContext;

  private int threshold;

  private long halfOpenAfter;

  private long lastFailure;

  private java.util.concurrent.atomic.AtomicInteger failures;

  private java.util.concurrent.atomic.AtomicInteger state;

  private final org.apache.camel.processor.loadbalancer.ExceptionFailureStatistics statistics;

  public org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #38                 // Method "<init>":(Ljava/util/List;)V
       5: return

  public org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/apache/camel/processor/loadbalancer/LoadBalancerSupport."<init>":()V
       4: aload_0
       5: new           #44                 // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #45                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: new           #44                 // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: iconst_0
      21: invokespecial #50                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      24: putfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
      27: aload_0
      28: new           #54                 // class org/apache/camel/processor/loadbalancer/ExceptionFailureStatistics
      31: dup
      32: invokespecial #55                 // Method org/apache/camel/processor/loadbalancer/ExceptionFailureStatistics."<init>":()V
      35: putfield      #57                 // Field statistics:Lorg/apache/camel/processor/loadbalancer/ExceptionFailureStatistics;
      38: aload_0
      39: aload_1
      40: putfield      #59                 // Field exceptions:Ljava/util/List;
      43: aload_0
      44: getfield      #57                 // Field statistics:Lorg/apache/camel/processor/loadbalancer/ExceptionFailureStatistics;
      47: aload_1
      48: invokevirtual #62                 // Method org/apache/camel/processor/loadbalancer/ExceptionFailureStatistics.init:(Ljava/util/List;)V
      51: return

  public void setHalfOpenAfter(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #66                 // Field halfOpenAfter:J
       5: return

  public long getHalfOpenAfter();
    Code:
       0: aload_0
       1: getfield      #66                 // Field halfOpenAfter:J
       4: lreturn

  public void setThreshold(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #71                 // Field threshold:I
       5: return

  public int getThreshold();
    Code:
       0: aload_0
       1: getfield      #71                 // Field threshold:I
       4: ireturn

  public int getState();
    Code:
       0: aload_0
       1: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public org.apache.camel.CamelContext getCamelContext();
    Code:
       0: aload_0
       1: getfield      #81                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: areturn

  public void setCamelContext(org.apache.camel.CamelContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #81                 // Field camelContext:Lorg/apache/camel/CamelContext;
       5: return

  public java.util.List<java.lang.Class<?>> getExceptions();
    Code:
       0: aload_0
       1: getfield      #59                 // Field exceptions:Ljava/util/List;
       4: areturn

  protected boolean hasFailed(org.apache.camel.Exchange);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore_2
       8: aload_1
       9: invokeinterface #93,  1           // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
      14: ifnull        107
      17: aload_0
      18: getfield      #59                 // Field exceptions:Ljava/util/List;
      21: ifnull        36
      24: aload_0
      25: getfield      #59                 // Field exceptions:Ljava/util/List;
      28: invokeinterface #99,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      33: ifeq          41
      36: iconst_1
      37: istore_2
      38: goto          90
      41: aload_0
      42: getfield      #59                 // Field exceptions:Ljava/util/List;
      45: invokeinterface #103,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore_3
      51: aload_3
      52: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          90
      60: aload_3
      61: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #114                // class java/lang/Class
      69: astore        4
      71: aload_1
      72: aload         4
      74: invokeinterface #117,  2          // InterfaceMethod org/apache/camel/Exchange.getException:(Ljava/lang/Class;)Ljava/lang/Object;
      79: ifnull        87
      82: iconst_1
      83: istore_2
      84: goto          90
      87: goto          51
      90: iload_2
      91: ifeq          107
      94: aload_0
      95: getfield      #57                 // Field statistics:Lorg/apache/camel/processor/loadbalancer/ExceptionFailureStatistics;
      98: aload_1
      99: invokeinterface #93,  1           // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
     104: invokevirtual #121                // Method org/apache/camel/processor/loadbalancer/ExceptionFailureStatistics.onHandledFailure:(Ljava/lang/Exception;)V
     107: aload_0
     108: getfield      #125                // Field log:Lorg/slf4j/Logger;
     111: ldc           #127                // String Failed: {} for exchangeId: {}
     113: iload_2
     114: invokestatic  #133                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     117: aload_1
     118: invokeinterface #137,  1          // InterfaceMethod org/apache/camel/Exchange.getExchangeId:()Ljava/lang/String;
     123: invokeinterface #143,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     128: iload_2
     129: ireturn

  public boolean isRunAllowed();
    Code:
       0: aload_0
       1: getfield      #81                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: invokeinterface #157,  1          // InterfaceMethod org/apache/camel/CamelContext.getShutdownStrategy:()Lorg/apache/camel/spi/ShutdownStrategy;
       9: aload_0
      10: invokeinterface #163,  2          // InterfaceMethod org/apache/camel/spi/ShutdownStrategy.forceShutdown:(Lorg/apache/camel/Service;)Z
      15: istore_1
      16: iload_1
      17: ifeq          31
      20: aload_0
      21: getfield      #125                // Field log:Lorg/slf4j/Logger;
      24: ldc           #165                // String Run not allowed as ShutdownStrategy is forcing shutting down
      26: invokeinterface #168,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      31: iload_1
      32: ifne          46
      35: aload_0
      36: invokespecial #170                // Method org/apache/camel/processor/loadbalancer/LoadBalancerSupport.isRunAllowed:()Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public boolean process(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: invokevirtual #173                // Method isRunAllowed:()Z
       4: ifne          52
       7: aload_0
       8: getfield      #125                // Field log:Lorg/slf4j/Logger;
      11: ldc           #175                // String Run not allowed, will reject executing exchange: {}
      13: aload_1
      14: invokeinterface #178,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      19: aload_1
      20: invokeinterface #93,  1           // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
      25: ifnonnull     43
      28: aload_1
      29: new           #180                // class java/util/concurrent/RejectedExecutionException
      32: dup
      33: ldc           #182                // String Run is not allowed
      35: invokespecial #184                // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      38: invokeinterface #188,  2          // InterfaceMethod org/apache/camel/Exchange.setException:(Ljava/lang/Throwable;)V
      43: aload_2
      44: iconst_1
      45: invokeinterface #194,  2          // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
      50: iconst_1
      51: ireturn
      52: aload_0
      53: aload_1
      54: aload_2
      55: invokespecial #197                // Method calculateState:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
      58: ireturn

  private boolean calculateState(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: iconst_1
       8: if_icmpne     41
      11: aload_0
      12: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
      15: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      18: ifne          31
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokespecial #202                // Method closeCircuit:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
      27: istore_3
      28: goto          235
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokespecial #205                // Method openCircuit:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
      37: istore_3
      38: goto          235
      41: aload_0
      42: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
      45: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      48: iconst_2
      49: if_icmpne     102
      52: aload_0
      53: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
      56: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      59: aload_0
      60: getfield      #71                 // Field threshold:I
      63: if_icmplt     92
      66: invokestatic  #210                // Method java/lang/System.currentTimeMillis:()J
      69: aload_0
      70: getfield      #212                // Field lastFailure:J
      73: lsub
      74: aload_0
      75: getfield      #66                 // Field halfOpenAfter:J
      78: lcmp
      79: ifge          92
      82: aload_0
      83: aload_1
      84: aload_2
      85: invokespecial #205                // Method openCircuit:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
      88: istore_3
      89: goto          235
      92: aload_0
      93: aload_1
      94: aload_2
      95: invokespecial #215                // Method halfOpenCircuit:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
      98: istore_3
      99: goto          235
     102: aload_0
     103: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
     106: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     109: ifne          202
     112: aload_0
     113: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
     116: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     119: aload_0
     120: getfield      #71                 // Field threshold:I
     123: if_icmplt     152
     126: invokestatic  #210                // Method java/lang/System.currentTimeMillis:()J
     129: aload_0
     130: getfield      #212                // Field lastFailure:J
     133: lsub
     134: aload_0
     135: getfield      #66                 // Field halfOpenAfter:J
     138: lcmp
     139: ifge          152
     142: aload_0
     143: aload_1
     144: aload_2
     145: invokespecial #205                // Method openCircuit:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
     148: istore_3
     149: goto          235
     152: aload_0
     153: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
     156: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     159: aload_0
     160: getfield      #71                 // Field threshold:I
     163: if_icmplt     192
     166: invokestatic  #210                // Method java/lang/System.currentTimeMillis:()J
     169: aload_0
     170: getfield      #212                // Field lastFailure:J
     173: lsub
     174: aload_0
     175: getfield      #66                 // Field halfOpenAfter:J
     178: lcmp
     179: iflt          192
     182: aload_0
     183: aload_1
     184: aload_2
     185: invokespecial #215                // Method halfOpenCircuit:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
     188: istore_3
     189: goto          235
     192: aload_0
     193: aload_1
     194: aload_2
     195: invokespecial #202                // Method closeCircuit:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
     198: istore_3
     199: goto          235
     202: new           #217                // class java/lang/IllegalStateException
     205: dup
     206: new           #219                // class java/lang/StringBuilder
     209: dup
     210: invokespecial #220                // Method java/lang/StringBuilder."<init>":()V
     213: ldc           #222                // String Unrecognised circuitBreaker state
     215: invokevirtual #226                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: aload_0
     219: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
     222: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     225: invokevirtual #229                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     228: invokevirtual #232                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     231: invokespecial #233                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     234: athrow
     235: iload_3
     236: ireturn

  private boolean openCircuit(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #237                // Method rejectExchange:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
       6: istore_3
       7: aload_0
       8: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
      11: iconst_2
      12: invokevirtual #240                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      15: aload_0
      16: invokespecial #243                // Method logState:()V
      19: iload_3
      20: ireturn

  private boolean halfOpenCircuit(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #246                // Method executeProcessor:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
       6: istore_3
       7: aload_0
       8: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
      11: iconst_1
      12: invokevirtual #240                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      15: aload_0
      16: invokespecial #243                // Method logState:()V
      19: iload_3
      20: ireturn

  private boolean closeCircuit(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #246                // Method executeProcessor:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
       6: istore_3
       7: aload_0
       8: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
      11: iconst_0
      12: invokevirtual #240                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      15: aload_0
      16: invokespecial #243                // Method logState:()V
      19: iload_3
      20: ireturn

  private void logState();
    Code:
       0: aload_0
       1: getfield      #125                // Field log:Lorg/slf4j/Logger;
       4: invokeinterface #249,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       9: ifeq          25
      12: aload_0
      13: getfield      #125                // Field log:Lorg/slf4j/Logger;
      16: aload_0
      17: invokevirtual #252                // Method dumpState:()Ljava/lang/String;
      20: invokeinterface #255,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      25: return

  public java.lang.String dumpState();
    Code:
       0: aload_0
       1: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_1
       8: iload_1
       9: invokestatic  #259                // Method stateAsString:(I)Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: getfield      #212                // Field lastFailure:J
      17: lconst_0
      18: lcmp
      19: ifle          64
      22: ldc_w         #261                // String State %s, failures %d, closed since %d
      25: iconst_3
      26: anewarray     #263                // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_2
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
      39: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      42: invokestatic  #268                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: aastore
      46: dup
      47: iconst_2
      48: invokestatic  #210                // Method java/lang/System.currentTimeMillis:()J
      51: aload_0
      52: getfield      #212                // Field lastFailure:J
      55: lsub
      56: invokestatic  #273                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      59: aastore
      60: invokestatic  #279                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      63: areturn
      64: ldc_w         #281                // String State %s, failures %d
      67: iconst_2
      68: anewarray     #263                // class java/lang/Object
      71: dup
      72: iconst_0
      73: aload_2
      74: aastore
      75: dup
      76: iconst_1
      77: aload_0
      78: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
      81: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      84: invokestatic  #268                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: aastore
      88: invokestatic  #279                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      91: areturn

  private boolean executeProcessor(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: invokevirtual #286                // Method getProcessors:()Ljava/util/List;
       4: iconst_0
       5: invokeinterface #289,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #291                // class org/apache/camel/Processor
      13: astore_3
      14: aload_3
      15: ifnonnull     29
      18: new           #217                // class java/lang/IllegalStateException
      21: dup
      22: ldc_w         #293                // String No processors could be chosen to process CircuitBreaker
      25: invokespecial #233                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_1
      30: ldc_w         #295                // String CamelCircuitBreakerState
      33: aload_0
      34: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
      37: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      40: invokestatic  #259                // Method stateAsString:(I)Ljava/lang/String;
      43: invokeinterface #298,  3          // InterfaceMethod org/apache/camel/Exchange.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      48: aload_3
      49: invokestatic  #304                // Method org/apache/camel/util/AsyncProcessorConverterHelper.convert:(Lorg/apache/camel/Processor;)Lorg/apache/camel/AsyncProcessor;
      52: astore        4
      54: aload         4
      56: aload_1
      57: new           #11                 // class org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer$CircuitBreakerCallback
      60: dup
      61: aload_0
      62: aload_1
      63: aload_2
      64: invokespecial #307                // Method org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer$CircuitBreakerCallback."<init>":(Lorg/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer;Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)V
      67: invokeinterface #311,  3          // InterfaceMethod org/apache/camel/AsyncProcessor.process:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
      72: istore        5
      74: iload         5
      76: ifeq          120
      79: aload_0
      80: aload_1
      81: invokevirtual #313                // Method hasFailed:(Lorg/apache/camel/Exchange;)Z
      84: istore        6
      86: iload         6
      88: ifne          102
      91: aload_0
      92: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
      95: iconst_0
      96: invokevirtual #240                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      99: goto          117
     102: aload_0
     103: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
     106: invokevirtual #316                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     109: pop
     110: aload_0
     111: invokestatic  #210                // Method java/lang/System.currentTimeMillis:()J
     114: putfield      #212                // Field lastFailure:J
     117: goto          140
     120: aload_0
     121: getfield      #125                // Field log:Lorg/slf4j/Logger;
     124: ldc_w         #318                // String Processing exchangeId: {} is continued being processed asynchronously
     127: aload_1
     128: invokeinterface #137,  1          // InterfaceMethod org/apache/camel/Exchange.getExchangeId:()Ljava/lang/String;
     133: invokeinterface #178,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     138: iconst_0
     139: ireturn
     140: aload_0
     141: getfield      #125                // Field log:Lorg/slf4j/Logger;
     144: ldc_w         #320                // String Processing exchangeId: {} is continued being processed synchronously
     147: aload_1
     148: invokeinterface #137,  1          // InterfaceMethod org/apache/camel/Exchange.getExchangeId:()Ljava/lang/String;
     153: invokeinterface #178,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     158: aload_2
     159: iconst_1
     160: invokeinterface #194,  2          // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
     165: iconst_1
     166: ireturn

  private boolean rejectExchange(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_1
       1: new           #180                // class java/util/concurrent/RejectedExecutionException
       4: dup
       5: new           #219                // class java/lang/StringBuilder
       8: dup
       9: invokespecial #220                // Method java/lang/StringBuilder."<init>":()V
      12: ldc_w         #328                // String CircuitBreaker Open: failures:
      15: invokevirtual #226                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
      22: invokevirtual #331                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc_w         #333                // String , lastFailure:
      28: invokevirtual #226                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #212                // Field lastFailure:J
      35: invokevirtual #336                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      38: invokevirtual #232                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #184                // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      44: invokeinterface #188,  2          // InterfaceMethod org/apache/camel/Exchange.setException:(Ljava/lang/Throwable;)V
      49: aload_2
      50: iconst_1
      51: invokeinterface #194,  2          // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
      56: iconst_1
      57: ireturn

  private static java.lang.String stateAsString(int);
    Code:
       0: iload_0
       1: ifne          8
       4: ldc_w         #338                // String closed
       7: areturn
       8: iload_0
       9: iconst_1
      10: if_icmpne     17
      13: ldc_w         #340                // String half opened
      16: areturn
      17: ldc_w         #342                // String opened
      20: areturn

  public java.lang.String toString();
    Code:
       0: new           #219                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #220                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #344                // String CircuitBreakerLoadBalancer[
      10: invokevirtual #226                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: invokevirtual #286                // Method getProcessors:()Ljava/util/List;
      17: invokevirtual #331                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc_w         #346                // String ]
      23: invokevirtual #226                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #232                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.String getTraceLabel();
    Code:
       0: ldc_w         #349                // String circuitbreaker
       3: areturn

  public org.apache.camel.processor.loadbalancer.ExceptionFailureStatistics getExceptionFailureStatistics();
    Code:
       0: aload_0
       1: getfield      #57                 // Field statistics:Lorg/apache/camel/processor/loadbalancer/ExceptionFailureStatistics;
       4: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_0
       5: invokevirtual #240                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: aload_0
       9: getfield      #52                 // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
      12: iconst_0
      13: invokevirtual #240                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      16: aload_0
      17: getfield      #57                 // Field statistics:Lorg/apache/camel/processor/loadbalancer/ExceptionFailureStatistics;
      20: invokevirtual #354                // Method org/apache/camel/processor/loadbalancer/ExceptionFailureStatistics.reset:()V
      23: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #359                // Method org/apache/camel/processor/loadbalancer/LoadBalancerSupport.doStart:()V
       4: aload_0
       5: invokevirtual #360                // Method reset:()V
       8: return

  protected void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #363                // Method org/apache/camel/processor/loadbalancer/LoadBalancerSupport.doStop:()V
       4: return

  static java.util.concurrent.atomic.AtomicInteger access$000(org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer);
    Code:
       0: aload_0
       1: getfield      #47                 // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static long access$102(org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #212                // Field lastFailure:J
       6: lreturn
}
