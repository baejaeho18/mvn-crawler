Compiled from "DefaultServicePool.java"
public abstract class org.apache.camel.impl.DefaultServicePool<Key, Service> extends org.apache.camel.support.ServiceSupport implements org.apache.camel.spi.ServicePool<Key, Service> {
  protected final org.slf4j.Logger log;

  protected final java.util.concurrent.ConcurrentMap<Key, java.util.concurrent.BlockingQueue<Service>> pool;

  protected int capacity;

  protected org.apache.camel.impl.DefaultServicePool();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/apache/camel/support/ServiceSupport."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #33                 // Field log:Lorg/slf4j/Logger;
      15: aload_0
      16: new           #35                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #36                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: bipush        100
      29: putfield      #40                 // Field capacity:I
      32: return

  public org.apache.camel.impl.DefaultServicePool(int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/apache/camel/support/ServiceSupport."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #33                 // Field log:Lorg/slf4j/Logger;
      15: aload_0
      16: new           #35                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #36                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: bipush        100
      29: putfield      #40                 // Field capacity:I
      32: aload_0
      33: iload_1
      34: putfield      #40                 // Field capacity:I
      37: return

  public int getCapacity();
    Code:
       0: aload_0
       1: getfield      #40                 // Field capacity:I
       4: ireturn

  public void setCapacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field capacity:I
       5: return

  public synchronized int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
       6: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      11: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          48
      26: aload_2
      27: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #72                 // class java/util/concurrent/BlockingQueue
      35: astore_3
      36: iload_1
      37: aload_3
      38: invokeinterface #74,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      43: iadd
      44: istore_1
      45: goto          17
      48: iload_1
      49: ireturn

  public synchronized Service addAndAcquire(Key, Service);
    Code:
       0: aload_0
       1: getfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #83,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #72                 // class java/util/concurrent/BlockingQueue
      13: astore_3
      14: aload_3
      15: ifnonnull     42
      18: new           #85                 // class java/util/concurrent/ArrayBlockingQueue
      21: dup
      22: aload_0
      23: getfield      #40                 // Field capacity:I
      26: invokespecial #87                 // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      29: astore_3
      30: aload_0
      31: getfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
      34: aload_1
      35: aload_3
      36: invokeinterface #90,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_0
      43: getfield      #33                 // Field log:Lorg/slf4j/Logger;
      46: ldc           #92                 // String AddAndAcquire key: {} service: {}
      48: aload_1
      49: aload_2
      50: invokeinterface #98,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      55: aload_3
      56: invokeinterface #74,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      61: aload_0
      62: getfield      #40                 // Field capacity:I
      65: if_icmplt     78
      68: new           #100                // class java/lang/IllegalStateException
      71: dup
      72: ldc           #102                // String Queue full
      74: invokespecial #105                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_2
      79: areturn

  public synchronized Service acquire(Key);
    Code:
       0: aload_0
       1: getfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #83,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #72                 // class java/util/concurrent/BlockingQueue
      13: astore_2
      14: aload_2
      15: ifnull        27
      18: aload_2
      19: invokeinterface #114,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.isEmpty:()Z
      24: ifeq          41
      27: aload_0
      28: getfield      #33                 // Field log:Lorg/slf4j/Logger;
      31: ldc           #116                // String No free services in pool to acquire for key: {}
      33: aload_1
      34: invokeinterface #119,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      39: aconst_null
      40: areturn
      41: aload_2
      42: invokeinterface #122,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      47: astore_3
      48: aload_0
      49: getfield      #33                 // Field log:Lorg/slf4j/Logger;
      52: ldc           #124                // String Acquire: {} service: {}
      54: aload_1
      55: aload_3
      56: invokeinterface #98,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      61: aload_3
      62: areturn

  public synchronized void release(Key, Service);
    Code:
       0: aload_0
       1: getfield      #33                 // Field log:Lorg/slf4j/Logger;
       4: ldc           #130                // String Release: {} service: {}
       6: aload_1
       7: aload_2
       8: invokeinterface #98,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      13: aload_0
      14: getfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
      17: aload_1
      18: invokeinterface #83,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #72                 // class java/util/concurrent/BlockingQueue
      26: astore_3
      27: aload_3
      28: ifnull        39
      31: aload_3
      32: aload_2
      33: invokeinterface #134,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      38: pop
      39: return

  public void purge();
    Code:
       0: aload_0
       1: getfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #138,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #33                 // Field log:Lorg/slf4j/Logger;
       4: ldc           #143                // String Starting service pool: {}
       6: aload_0
       7: invokeinterface #146,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  protected void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #33                 // Field log:Lorg/slf4j/Logger;
       4: ldc           #149                // String Stopping service pool: {}
       6: aload_0
       7: invokeinterface #146,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      21: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_1
      27: aload_1
      28: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          75
      36: aload_1
      37: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #72                 // class java/util/concurrent/BlockingQueue
      45: astore_2
      46: new           #151                // class java/util/ArrayList
      49: dup
      50: invokespecial #152                // Method java/util/ArrayList."<init>":()V
      53: astore_3
      54: aload_2
      55: aload_3
      56: invokeinterface #156,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.drainTo:(Ljava/util/Collection;)I
      61: pop
      62: aload_3
      63: invokestatic  #162                // Method org/apache/camel/util/ServiceHelper.stopServices:(Ljava/util/Collection;)V
      66: aload_2
      67: invokeinterface #163,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
      72: goto          27
      75: aload_0
      76: getfield      #38                 // Field pool:Ljava/util/concurrent/ConcurrentMap;
      79: invokeinterface #138,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      84: return
}
