Compiled from "RouteContext.java"
public interface org.apache.camel.spi.RouteContext extends org.apache.camel.RuntimeConfiguration,org.apache.camel.EndpointAware {
  public abstract org.apache.camel.model.FromDefinition getFrom();

  public abstract org.apache.camel.model.RouteDefinition getRoute();

  public abstract org.apache.camel.CamelContext getCamelContext();

  public abstract org.apache.camel.Endpoint resolveEndpoint(java.lang.String);

  public abstract org.apache.camel.Endpoint resolveEndpoint(java.lang.String, java.lang.String);

  public abstract <T> T lookup(java.lang.String, java.lang.Class<T>);

  public abstract <T> T mandatoryLookup(java.lang.String, java.lang.Class<T>);

  public abstract <T> java.util.Map<java.lang.String, T> lookupByType(java.lang.Class<T>);

  public abstract void commit();

  public abstract void addEventDrivenProcessor(org.apache.camel.Processor);

  public abstract java.util.List<org.apache.camel.spi.InterceptStrategy> getInterceptStrategies();

  public abstract void setInterceptStrategies(java.util.List<org.apache.camel.spi.InterceptStrategy>);

  public abstract void addInterceptStrategy(org.apache.camel.spi.InterceptStrategy);

  public abstract void setManagedInterceptStrategy(org.apache.camel.spi.InterceptStrategy);

  public abstract org.apache.camel.spi.InterceptStrategy getManagedInterceptStrategy();

  public abstract void setIsRouteAdded(boolean);

  public abstract boolean isRouteAdded();

  public abstract java.util.List<org.apache.camel.spi.RoutePolicy> getRoutePolicyList();

  public abstract void setRoutePolicyList(java.util.List<org.apache.camel.spi.RoutePolicy>);

  public abstract int getAndIncrement(org.apache.camel.model.ProcessorDefinition<?>);
}
