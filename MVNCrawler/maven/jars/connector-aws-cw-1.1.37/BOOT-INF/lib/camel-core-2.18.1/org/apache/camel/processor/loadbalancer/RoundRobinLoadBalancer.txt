Compiled from "RoundRobinLoadBalancer.java"
public class org.apache.camel.processor.loadbalancer.RoundRobinLoadBalancer extends org.apache.camel.processor.loadbalancer.QueueLoadBalancer {
  private int counter;

  public org.apache.camel.processor.loadbalancer.RoundRobinLoadBalancer();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method org/apache/camel/processor/loadbalancer/QueueLoadBalancer."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #13                 // Field counter:I
       9: return

  protected synchronized org.apache.camel.Processor chooseProcessor(java.util.List<org.apache.camel.Processor>, org.apache.camel.Exchange);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod java/util/List.size:()I
       6: istore_3
       7: aload_0
       8: dup
       9: getfield      #13                 // Field counter:I
      12: iconst_1
      13: iadd
      14: dup_x1
      15: putfield      #13                 // Field counter:I
      18: iload_3
      19: if_icmplt     27
      22: aload_0
      23: iconst_0
      24: putfield      #13                 // Field counter:I
      27: aload_1
      28: aload_0
      29: getfield      #13                 // Field counter:I
      32: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      37: checkcast     #29                 // class org/apache/camel/Processor
      40: areturn

  public int getLastChosenProcessorIndex();
    Code:
       0: aload_0
       1: getfield      #13                 // Field counter:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #39                 // String RoundRobinLoadBalancer
       2: areturn
}
