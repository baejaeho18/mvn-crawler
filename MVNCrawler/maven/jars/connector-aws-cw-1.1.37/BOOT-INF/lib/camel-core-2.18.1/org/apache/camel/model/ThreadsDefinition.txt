Compiled from "ThreadsDefinition.java"
public class org.apache.camel.model.ThreadsDefinition extends org.apache.camel.model.OutputDefinition<org.apache.camel.model.ThreadsDefinition> implements org.apache.camel.model.ExecutorServiceAwareDefinition<org.apache.camel.model.ThreadsDefinition> {
  private java.util.concurrent.ExecutorService executorService;

  private java.lang.String executorServiceRef;

  private java.lang.Integer poolSize;

  private java.lang.Integer maxPoolSize;

  private java.lang.Long keepAliveTime;

  private java.util.concurrent.TimeUnit timeUnit;

  private java.lang.Integer maxQueueSize;

  private java.lang.Boolean allowCoreThreadTimeOut;

  private java.lang.String threadName;

  private org.apache.camel.ThreadPoolRejectedPolicy rejectedPolicy;

  private java.lang.Boolean callerRunsWhenRejected;

  public org.apache.camel.model.ThreadsDefinition();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method org/apache/camel/model/OutputDefinition."<init>":()V
       4: aload_0
       5: ldc           #50                 // String Threads
       7: putfield      #52                 // Field threadName:Ljava/lang/String;
      10: return

  public org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getThreadName:()Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: invokevirtual #62                 // Method getThreadName:()Ljava/lang/String;
      11: goto          16
      14: ldc           #50                 // String Threads
      16: astore_2
      17: aload_1
      18: aload_0
      19: iconst_1
      20: invokestatic  #70                 // Method org/apache/camel/model/ProcessorDefinitionHelper.willCreateNewThreadPool:(Lorg/apache/camel/spi/RouteContext;Lorg/apache/camel/model/ExecutorServiceAwareDefinition;Z)Z
      23: istore_3
      24: aload_1
      25: aload_2
      26: aload_0
      27: iconst_0
      28: invokestatic  #74                 // Method org/apache/camel/model/ProcessorDefinitionHelper.getConfiguredExecutorService:(Lorg/apache/camel/spi/RouteContext;Ljava/lang/String;Lorg/apache/camel/model/ExecutorServiceAwareDefinition;Z)Ljava/util/concurrent/ExecutorService;
      31: astore        4
      33: aload_0
      34: aload_1
      35: invokevirtual #78                 // Method resolveRejectedPolicy:(Lorg/apache/camel/spi/RouteContext;)Lorg/apache/camel/ThreadPoolRejectedPolicy;
      38: astore        5
      40: aload         5
      42: ifnonnull     75
      45: aload_0
      46: getfield      #80                 // Field callerRunsWhenRejected:Ljava/lang/Boolean;
      49: ifnull        62
      52: aload_0
      53: getfield      #80                 // Field callerRunsWhenRejected:Ljava/lang/Boolean;
      56: invokevirtual #86                 // Method java/lang/Boolean.booleanValue:()Z
      59: ifeq          70
      62: getstatic     #95                 // Field org/apache/camel/ThreadPoolRejectedPolicy.CallerRuns:Lorg/apache/camel/ThreadPoolRejectedPolicy;
      65: astore        5
      67: goto          75
      70: getstatic     #98                 // Field org/apache/camel/ThreadPoolRejectedPolicy.Abort:Lorg/apache/camel/ThreadPoolRejectedPolicy;
      73: astore        5
      75: aload_0
      76: getfield      #102                // Field log:Lorg/slf4j/Logger;
      79: ldc           #104                // String Using ThreadPoolRejectedPolicy: {}
      81: aload         5
      83: invokeinterface #110,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      88: aload         4
      90: ifnonnull     181
      93: aload_1
      94: invokeinterface #114,  1          // InterfaceMethod org/apache/camel/spi/RouteContext.getCamelContext:()Lorg/apache/camel/CamelContext;
      99: invokeinterface #120,  1          // InterfaceMethod org/apache/camel/CamelContext.getExecutorServiceManager:()Lorg/apache/camel/spi/ExecutorServiceManager;
     104: astore        6
     106: new           #122                // class org/apache/camel/builder/ThreadPoolProfileBuilder
     109: dup
     110: aload_2
     111: invokespecial #125                // Method org/apache/camel/builder/ThreadPoolProfileBuilder."<init>":(Ljava/lang/String;)V
     114: aload_0
     115: invokevirtual #129                // Method getPoolSize:()Ljava/lang/Integer;
     118: invokevirtual #132                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.poolSize:(Ljava/lang/Integer;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     121: aload_0
     122: invokevirtual #135                // Method getMaxPoolSize:()Ljava/lang/Integer;
     125: invokevirtual #137                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.maxPoolSize:(Ljava/lang/Integer;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     128: aload_0
     129: invokevirtual #141                // Method getKeepAliveTime:()Ljava/lang/Long;
     132: aload_0
     133: invokevirtual #145                // Method getTimeUnit:()Ljava/util/concurrent/TimeUnit;
     136: invokevirtual #148                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.keepAliveTime:(Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     139: aload_0
     140: invokevirtual #151                // Method getMaxQueueSize:()Ljava/lang/Integer;
     143: invokevirtual #153                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.maxQueueSize:(Ljava/lang/Integer;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     146: aload         5
     148: invokevirtual #156                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.rejectedPolicy:(Lorg/apache/camel/ThreadPoolRejectedPolicy;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     151: aload_0
     152: invokevirtual #160                // Method getAllowCoreThreadTimeOut:()Ljava/lang/Boolean;
     155: invokevirtual #163                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.allowCoreThreadTimeOut:(Ljava/lang/Boolean;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     158: invokevirtual #167                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.build:()Lorg/apache/camel/spi/ThreadPoolProfile;
     161: astore        7
     163: aload         6
     165: aload_0
     166: aload_2
     167: aload         7
     169: invokeinterface #173,  4          // InterfaceMethod org/apache/camel/spi/ExecutorServiceManager.newThreadPool:(Ljava/lang/Object;Ljava/lang/String;Lorg/apache/camel/spi/ThreadPoolProfile;)Ljava/util/concurrent/ExecutorService;
     174: astore        4
     176: iconst_1
     177: istore_3
     178: goto          329
     181: aload_0
     182: invokevirtual #62                 // Method getThreadName:()Ljava/lang/String;
     185: ifnull        210
     188: aload_0
     189: invokevirtual #62                 // Method getThreadName:()Ljava/lang/String;
     192: ldc           #50                 // String Threads
     194: invokevirtual #177                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     197: ifne          210
     200: new           #179                // class java/lang/IllegalArgumentException
     203: dup
     204: ldc           #181                // String ThreadName and executorServiceRef options cannot be used together.
     206: invokespecial #182                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     209: athrow
     210: aload_0
     211: invokevirtual #129                // Method getPoolSize:()Ljava/lang/Integer;
     214: ifnull        227
     217: new           #179                // class java/lang/IllegalArgumentException
     220: dup
     221: ldc           #184                // String PoolSize and executorServiceRef options cannot be used together.
     223: invokespecial #182                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     226: athrow
     227: aload_0
     228: invokevirtual #135                // Method getMaxPoolSize:()Ljava/lang/Integer;
     231: ifnull        244
     234: new           #179                // class java/lang/IllegalArgumentException
     237: dup
     238: ldc           #186                // String MaxPoolSize and executorServiceRef options cannot be used together.
     240: invokespecial #182                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     243: athrow
     244: aload_0
     245: invokevirtual #141                // Method getKeepAliveTime:()Ljava/lang/Long;
     248: ifnull        261
     251: new           #179                // class java/lang/IllegalArgumentException
     254: dup
     255: ldc           #188                // String KeepAliveTime and executorServiceRef options cannot be used together.
     257: invokespecial #182                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     260: athrow
     261: aload_0
     262: invokevirtual #145                // Method getTimeUnit:()Ljava/util/concurrent/TimeUnit;
     265: ifnull        278
     268: new           #179                // class java/lang/IllegalArgumentException
     271: dup
     272: ldc           #190                // String TimeUnit and executorServiceRef options cannot be used together.
     274: invokespecial #182                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     277: athrow
     278: aload_0
     279: invokevirtual #151                // Method getMaxQueueSize:()Ljava/lang/Integer;
     282: ifnull        295
     285: new           #179                // class java/lang/IllegalArgumentException
     288: dup
     289: ldc           #192                // String MaxQueueSize and executorServiceRef options cannot be used together.
     291: invokespecial #182                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     294: athrow
     295: aload_0
     296: invokevirtual #196                // Method getRejectedPolicy:()Lorg/apache/camel/ThreadPoolRejectedPolicy;
     299: ifnull        312
     302: new           #179                // class java/lang/IllegalArgumentException
     305: dup
     306: ldc           #198                // String RejectedPolicy and executorServiceRef options cannot be used together.
     308: invokespecial #182                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     311: athrow
     312: aload_0
     313: invokevirtual #160                // Method getAllowCoreThreadTimeOut:()Ljava/lang/Boolean;
     316: ifnull        329
     319: new           #179                // class java/lang/IllegalArgumentException
     322: dup
     323: ldc           #200                // String AllowCoreThreadTimeOut and executorServiceRef options cannot be used together.
     325: invokespecial #182                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     328: athrow
     329: new           #202                // class org/apache/camel/processor/ThreadsProcessor
     332: dup
     333: aload_1
     334: invokeinterface #114,  1          // InterfaceMethod org/apache/camel/spi/RouteContext.getCamelContext:()Lorg/apache/camel/CamelContext;
     339: aload         4
     341: iload_3
     342: aload         5
     344: invokespecial #205                // Method org/apache/camel/processor/ThreadsProcessor."<init>":(Lorg/apache/camel/CamelContext;Ljava/util/concurrent/ExecutorService;ZLorg/apache/camel/ThreadPoolRejectedPolicy;)V
     347: astore        6
     349: new           #207                // class java/util/ArrayList
     352: dup
     353: iconst_2
     354: invokespecial #210                // Method java/util/ArrayList."<init>":(I)V
     357: astore        7
     359: aload         7
     361: aload         6
     363: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     368: pop
     369: aload         7
     371: aload_0
     372: aload_1
     373: iconst_1
     374: invokevirtual #219                // Method createChildProcessor:(Lorg/apache/camel/spi/RouteContext;Z)Lorg/apache/camel/Processor;
     377: invokeinterface #215,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     382: pop
     383: new           #20                 // class org/apache/camel/model/ThreadsDefinition$1
     386: dup
     387: aload_0
     388: aload_1
     389: invokeinterface #114,  1          // InterfaceMethod org/apache/camel/spi/RouteContext.getCamelContext:()Lorg/apache/camel/CamelContext;
     394: aload         7
     396: invokespecial #222                // Method org/apache/camel/model/ThreadsDefinition$1."<init>":(Lorg/apache/camel/model/ThreadsDefinition;Lorg/apache/camel/CamelContext;Ljava/util/Collection;)V
     399: areturn

  protected org.apache.camel.ThreadPoolRejectedPolicy resolveRejectedPolicy(org.apache.camel.spi.RouteContext);
    Code:
       0: aload_0
       1: invokevirtual #240                // Method getExecutorServiceRef:()Ljava/lang/String;
       4: ifnull        44
       7: aload_0
       8: invokevirtual #196                // Method getRejectedPolicy:()Lorg/apache/camel/ThreadPoolRejectedPolicy;
      11: ifnonnull     44
      14: aload_1
      15: invokeinterface #114,  1          // InterfaceMethod org/apache/camel/spi/RouteContext.getCamelContext:()Lorg/apache/camel/CamelContext;
      20: invokeinterface #120,  1          // InterfaceMethod org/apache/camel/CamelContext.getExecutorServiceManager:()Lorg/apache/camel/spi/ExecutorServiceManager;
      25: aload_0
      26: invokevirtual #240                // Method getExecutorServiceRef:()Ljava/lang/String;
      29: invokeinterface #244,  2          // InterfaceMethod org/apache/camel/spi/ExecutorServiceManager.getThreadPoolProfile:(Ljava/lang/String;)Lorg/apache/camel/spi/ThreadPoolProfile;
      34: astore_2
      35: aload_2
      36: ifnull        44
      39: aload_2
      40: invokevirtual #247                // Method org/apache/camel/spi/ThreadPoolProfile.getRejectedPolicy:()Lorg/apache/camel/ThreadPoolRejectedPolicy;
      43: areturn
      44: aload_0
      45: invokevirtual #196                // Method getRejectedPolicy:()Lorg/apache/camel/ThreadPoolRejectedPolicy;
      48: areturn

  public java.lang.String getLabel();
    Code:
       0: ldc           #250                // String threads
       2: areturn

  public java.lang.String toString();
    Code:
       0: new           #253                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #254                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #256                // String Threads[
      10: invokevirtual #260                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: invokevirtual #264                // Method getOutputs:()Ljava/util/List;
      17: invokevirtual #267                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc_w         #269                // String ]
      23: invokevirtual #260                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #271                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public org.apache.camel.model.ThreadsDefinition executorService(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #276                // Method setExecutorService:(Ljava/util/concurrent/ExecutorService;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition executorServiceRef(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #280                // Method setExecutorServiceRef:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition poolSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #287                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #291                // Method setPoolSize:(Ljava/lang/Integer;)V
       8: aload_0
       9: areturn

  public org.apache.camel.model.ThreadsDefinition maxPoolSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #287                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #295                // Method setMaxPoolSize:(Ljava/lang/Integer;)V
       8: aload_0
       9: areturn

  public org.apache.camel.model.ThreadsDefinition keepAliveTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #301                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: invokevirtual #305                // Method setKeepAliveTime:(Ljava/lang/Long;)V
       8: aload_0
       9: areturn

  public org.apache.camel.model.ThreadsDefinition timeUnit(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #311                // Method setTimeUnit:(Ljava/util/concurrent/TimeUnit;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition maxQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #287                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #315                // Method setMaxQueueSize:(Ljava/lang/Integer;)V
       8: aload_0
       9: areturn

  public org.apache.camel.model.ThreadsDefinition rejectedPolicy(org.apache.camel.ThreadPoolRejectedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #320                // Method setRejectedPolicy:(Lorg/apache/camel/ThreadPoolRejectedPolicy;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition threadName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #323                // Method setThreadName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition callerRunsWhenRejected(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #327                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokevirtual #331                // Method setCallerRunsWhenRejected:(Ljava/lang/Boolean;)V
       8: aload_0
       9: areturn

  public org.apache.camel.model.ThreadsDefinition allowCoreThreadTimeOut(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #327                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokevirtual #334                // Method setAllowCoreThreadTimeOut:(Ljava/lang/Boolean;)V
       8: aload_0
       9: areturn

  public java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #338                // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public void setExecutorService(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #338                // Field executorService:Ljava/util/concurrent/ExecutorService;
       5: return

  public java.lang.String getExecutorServiceRef();
    Code:
       0: aload_0
       1: getfield      #340                // Field executorServiceRef:Ljava/lang/String;
       4: areturn

  public void setExecutorServiceRef(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #340                // Field executorServiceRef:Ljava/lang/String;
       5: return

  public java.lang.Integer getPoolSize();
    Code:
       0: aload_0
       1: getfield      #342                // Field poolSize:Ljava/lang/Integer;
       4: areturn

  public void setPoolSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #342                // Field poolSize:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMaxPoolSize();
    Code:
       0: aload_0
       1: getfield      #344                // Field maxPoolSize:Ljava/lang/Integer;
       4: areturn

  public void setMaxPoolSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #344                // Field maxPoolSize:Ljava/lang/Integer;
       5: return

  public java.lang.Long getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #346                // Field keepAliveTime:Ljava/lang/Long;
       4: areturn

  public void setKeepAliveTime(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #346                // Field keepAliveTime:Ljava/lang/Long;
       5: return

  public java.util.concurrent.TimeUnit getTimeUnit();
    Code:
       0: aload_0
       1: getfield      #348                // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  public void setTimeUnit(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #348                // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       5: return

  public java.lang.Integer getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #350                // Field maxQueueSize:Ljava/lang/Integer;
       4: areturn

  public void setMaxQueueSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #350                // Field maxQueueSize:Ljava/lang/Integer;
       5: return

  public java.lang.String getThreadName();
    Code:
       0: aload_0
       1: getfield      #52                 // Field threadName:Ljava/lang/String;
       4: areturn

  public void setThreadName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field threadName:Ljava/lang/String;
       5: return

  public org.apache.camel.ThreadPoolRejectedPolicy getRejectedPolicy();
    Code:
       0: aload_0
       1: getfield      #352                // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
       4: areturn

  public void setRejectedPolicy(org.apache.camel.ThreadPoolRejectedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #352                // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
       5: return

  public java.lang.Boolean getCallerRunsWhenRejected();
    Code:
       0: aload_0
       1: getfield      #80                 // Field callerRunsWhenRejected:Ljava/lang/Boolean;
       4: areturn

  public void setCallerRunsWhenRejected(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field callerRunsWhenRejected:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getAllowCoreThreadTimeOut();
    Code:
       0: aload_0
       1: getfield      #355                // Field allowCoreThreadTimeOut:Ljava/lang/Boolean;
       4: areturn

  public void setAllowCoreThreadTimeOut(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #355                // Field allowCoreThreadTimeOut:Ljava/lang/Boolean;
       5: return

  public org.apache.camel.model.ProcessorDefinition executorServiceRef(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #358                // Method executorServiceRef:(Ljava/lang/String;)Lorg/apache/camel/model/ThreadsDefinition;
       5: areturn

  public org.apache.camel.model.ProcessorDefinition executorService(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #361                // Method executorService:(Ljava/util/concurrent/ExecutorService;)Lorg/apache/camel/model/ThreadsDefinition;
       5: areturn
}
