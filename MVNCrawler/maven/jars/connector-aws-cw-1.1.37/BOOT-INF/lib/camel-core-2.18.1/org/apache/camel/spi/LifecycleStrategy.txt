Compiled from "LifecycleStrategy.java"
public interface org.apache.camel.spi.LifecycleStrategy {
  public abstract void onContextStart(org.apache.camel.CamelContext) throws org.apache.camel.VetoCamelContextStartException;

  public abstract void onContextStop(org.apache.camel.CamelContext);

  public abstract void onComponentAdd(java.lang.String, org.apache.camel.Component);

  public abstract void onComponentRemove(java.lang.String, org.apache.camel.Component);

  public abstract void onEndpointAdd(org.apache.camel.Endpoint);

  public abstract void onEndpointRemove(org.apache.camel.Endpoint);

  public abstract void onServiceAdd(org.apache.camel.CamelContext, org.apache.camel.Service, org.apache.camel.Route);

  public abstract void onServiceRemove(org.apache.camel.CamelContext, org.apache.camel.Service, org.apache.camel.Route);

  public abstract void onRoutesAdd(java.util.Collection<org.apache.camel.Route>);

  public abstract void onRoutesRemove(java.util.Collection<org.apache.camel.Route>);

  public abstract void onRouteContextCreate(org.apache.camel.spi.RouteContext);

  public abstract void onErrorHandlerAdd(org.apache.camel.spi.RouteContext, org.apache.camel.Processor, org.apache.camel.ErrorHandlerFactory);

  public abstract void onErrorHandlerRemove(org.apache.camel.spi.RouteContext, org.apache.camel.Processor, org.apache.camel.ErrorHandlerFactory);

  public abstract void onThreadPoolAdd(org.apache.camel.CamelContext, java.util.concurrent.ThreadPoolExecutor, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract void onThreadPoolRemove(org.apache.camel.CamelContext, java.util.concurrent.ThreadPoolExecutor);
}
