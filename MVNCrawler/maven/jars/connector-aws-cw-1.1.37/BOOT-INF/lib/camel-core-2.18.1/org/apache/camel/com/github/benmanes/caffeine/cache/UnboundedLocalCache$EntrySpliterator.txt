Compiled from "UnboundedLocalCache.java"
final class org.apache.camel.com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator<K, V> implements java.util.Spliterator<java.util.Map$Entry<K, V>> {
  final java.util.Spliterator<java.util.Map$Entry<K, V>> spliterator;

  final org.apache.camel.com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, V> cache;

  org.apache.camel.com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator(org.apache.camel.com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: getfield      #33                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
       6: invokevirtual #39                 // Method java/util/concurrent/ConcurrentHashMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #44,  1           // InterfaceMethod java/util/Set.spliterator:()Ljava/util/Spliterator;
      14: invokespecial #47                 // Method "<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache;Ljava/util/Spliterator;)V
      17: return

  org.apache.camel.com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator(org.apache.camel.com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, V>, java.util.Spliterator<java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: invokestatic  #59                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #7                  // class java/util/Spliterator
      12: putfield      #61                 // Field spliterator:Ljava/util/Spliterator;
      15: aload_0
      16: aload_1
      17: invokestatic  #59                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #15                 // class org/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache
      23: putfield      #63                 // Field cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache;
      26: return

  public void forEachRemaining(java.util.function.Consumer<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #59                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #61                 // Field spliterator:Ljava/util/Spliterator;
       9: aload_0
      10: aload_1
      11: invokedynamic #85,  0             // InvokeDynamic #0:accept:(Lorg/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
      16: invokeinterface #87,  2           // InterfaceMethod java/util/Spliterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      21: return

  public boolean tryAdvance(java.util.function.Consumer<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #59                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #61                 // Field spliterator:Ljava/util/Spliterator;
       9: aload_0
      10: aload_1
      11: invokedynamic #97,  0             // InvokeDynamic #1:accept:(Lorg/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
      16: invokeinterface #99,  2           // InterfaceMethod java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z
      21: ireturn

  public org.apache.camel.com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator<K, V> trySplit();
    Code:
       0: aload_0
       1: getfield      #61                 // Field spliterator:Ljava/util/Spliterator;
       4: invokeinterface #103,  1          // InterfaceMethod java/util/Spliterator.trySplit:()Ljava/util/Spliterator;
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: aconst_null
      15: goto          30
      18: new           #2                  // class org/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator
      21: dup
      22: aload_0
      23: getfield      #63                 // Field cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache;
      26: aload_1
      27: invokespecial #47                 // Method "<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache;Ljava/util/Spliterator;)V
      30: areturn

  public long estimateSize();
    Code:
       0: aload_0
       1: getfield      #61                 // Field spliterator:Ljava/util/Spliterator;
       4: invokeinterface #108,  1          // InterfaceMethod java/util/Spliterator.estimateSize:()J
       9: lreturn

  public int characteristics();
    Code:
       0: aload_0
       1: getfield      #61                 // Field spliterator:Ljava/util/Spliterator;
       4: invokeinterface #112,  1          // InterfaceMethod java/util/Spliterator.characteristics:()I
       9: ireturn

  public java.util.Spliterator trySplit();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method trySplit:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator;
       4: areturn

  private void lambda$tryAdvance$1(java.util.function.Consumer, java.util.Map$Entry);
    Code:
       0: new           #116                // class org/apache/camel/com/github/benmanes/caffeine/cache/WriteThroughEntry
       3: dup
       4: aload_0
       5: getfield      #63                 // Field cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache;
       8: aload_2
       9: invokeinterface #120,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      14: aload_2
      15: invokeinterface #123,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      20: invokespecial #126                // Method org/apache/camel/com/github/benmanes/caffeine/cache/WriteThroughEntry."<init>":(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)V
      23: astore_3
      24: aload_1
      25: aload_3
      26: invokeinterface #130,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      31: return

  private void lambda$forEachRemaining$0(java.util.function.Consumer, java.util.Map$Entry);
    Code:
       0: new           #116                // class org/apache/camel/com/github/benmanes/caffeine/cache/WriteThroughEntry
       3: dup
       4: aload_0
       5: getfield      #63                 // Field cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/UnboundedLocalCache;
       8: aload_2
       9: invokeinterface #120,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      14: aload_2
      15: invokeinterface #123,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      20: invokespecial #126                // Method org/apache/camel/com/github/benmanes/caffeine/cache/WriteThroughEntry."<init>":(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)V
      23: astore_3
      24: aload_1
      25: aload_3
      26: invokeinterface #130,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      31: return
}
