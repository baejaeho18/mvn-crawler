Compiled from "BoundedLocalCache.java"
final class org.apache.camel.com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedRefreshAfterWrite implements org.apache.camel.com.github.benmanes.caffeine.cache.Policy$Expiration<K, V> {
  final org.apache.camel.com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy this$0;

  org.apache.camel.com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedRefreshAfterWrite(org.apache.camel.com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       5: aload_0
       6: invokespecial #31                 // Method java/lang/Object."<init>":()V
       9: return

  public java.util.OptionalLong ageOf(K, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: getfield      #44                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.nodeFactory:Lorg/apache/camel/com/github/benmanes/caffeine/cache/NodeFactory;
      10: aload_1
      11: invokevirtual #50                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_3
      15: aload_0
      16: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      19: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      22: getfield      #54                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
      25: aload_3
      26: invokevirtual #59                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #61                 // class org/apache/camel/com/github/benmanes/caffeine/cache/Node
      32: astore        4
      34: aload         4
      36: ifnonnull     43
      39: invokestatic  #67                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      42: areturn
      43: aload_0
      44: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      47: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      50: invokevirtual #71                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.expirationTicker:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      53: invokeinterface #77,  1           // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Ticker.read:()J
      58: aload         4
      60: invokeinterface #80,  1           // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      65: lsub
      66: lstore        5
      68: lload         5
      70: aload_0
      71: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      74: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      77: invokevirtual #83                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.refreshAfterWriteNanos:()J
      80: lcmp
      81: ifle          90
      84: invokestatic  #67                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      87: goto          102
      90: aload_2
      91: lload         5
      93: getstatic     #89                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      96: invokevirtual #93                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      99: invokestatic  #97                 // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
     102: areturn

  public long getExpiresAfter(java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       5: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
       8: invokevirtual #83                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.refreshAfterWriteNanos:()J
      11: getstatic     #89                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      14: invokevirtual #93                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      17: lreturn

  public void setExpiresAfter(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #117                // Method org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      14: aload_0
      15: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      18: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      21: aload_3
      22: lload_1
      23: invokevirtual #121                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      26: invokevirtual #125                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.setRefreshAfterWriteNanos:(J)V
      29: aload_0
      30: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      33: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      36: invokevirtual #128                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleAfterWrite:()V
      39: return

  public java.util.Map<K, V> oldest(int);
    Code:
       0: aload_0
       1: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: invokevirtual #135                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.expiresAfterWrite:()Z
      10: ifeq          35
      13: aload_0
      14: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      17: invokevirtual #139                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.expireAfterWrite:()Ljava/util/Optional;
      20: invokevirtual #144                // Method java/util/Optional.get:()Ljava/lang/Object;
      23: checkcast     #7                  // class org/apache/camel/com/github/benmanes/caffeine/cache/Policy$Expiration
      26: iload_1
      27: invokeinterface #146,  2          // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Policy$Expiration.oldest:(I)Ljava/util/Map;
      32: goto          41
      35: aload_0
      36: iload_1
      37: iconst_1
      38: invokevirtual #150                // Method sortedByWriteTime:(IZ)Ljava/util/Map;
      41: areturn

  public java.util.Map<K, V> youngest(int);
    Code:
       0: aload_0
       1: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: invokevirtual #135                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.expiresAfterWrite:()Z
      10: ifeq          35
      13: aload_0
      14: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      17: invokevirtual #139                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.expireAfterWrite:()Ljava/util/Optional;
      20: invokevirtual #144                // Method java/util/Optional.get:()Ljava/lang/Object;
      23: checkcast     #7                  // class org/apache/camel/com/github/benmanes/caffeine/cache/Policy$Expiration
      26: iload_1
      27: invokeinterface #157,  2          // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Policy$Expiration.youngest:(I)Ljava/util/Map;
      32: goto          41
      35: aload_0
      36: iload_1
      37: iconst_0
      38: invokevirtual #150                // Method sortedByWriteTime:(IZ)Ljava/util/Map;
      41: areturn

  java.util.Map<K, V> sortedByWriteTime(int, boolean);
    Code:
       0: invokedynamic #173,  0            // InvokeDynamic #0:applyAsLong:()Ljava/util/function/ToLongFunction;
       5: invokestatic  #179                // InterfaceMethod java/util/Comparator.comparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;
       8: astore_3
       9: aload_0
      10: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      13: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      16: getfield      #54                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
      19: invokevirtual #183                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      22: invokeinterface #189,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      27: invokeinterface #195,  1          // InterfaceMethod java/util/stream/Stream.parallel:()Ljava/util/stream/BaseStream;
      32: checkcast     #191                // class java/util/stream/Stream
      35: iload_2
      36: ifeq          43
      39: aload_3
      40: goto          49
      43: aload_3
      44: invokeinterface #199,  1          // InterfaceMethod java/util/Comparator.reversed:()Ljava/util/Comparator;
      49: invokeinterface #203,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      54: iload_1
      55: i2l
      56: invokeinterface #206,  3          // InterfaceMethod java/util/stream/Stream.limit:(J)Ljava/util/stream/Stream;
      61: invokeinterface #210,  1          // InterfaceMethod java/util/stream/Stream.iterator:()Ljava/util/Iterator;
      66: astore        4
      68: aload_0
      69: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      72: getfield      #40                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      75: aload         4
      77: aload_0
      78: getfield      #28                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      81: getfield      #214                // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.transformer:Ljava/util/function/Function;
      84: iload_1
      85: invokevirtual #218                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.snapshot:(Ljava/util/Iterator;Ljava/util/function/Function;I)Ljava/util/Map;
      88: areturn
}
