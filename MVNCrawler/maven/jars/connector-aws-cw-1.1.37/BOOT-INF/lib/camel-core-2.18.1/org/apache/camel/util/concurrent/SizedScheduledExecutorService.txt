Compiled from "SizedScheduledExecutorService.java"
public class org.apache.camel.util.concurrent.SizedScheduledExecutorService implements java.util.concurrent.ScheduledExecutorService {
  private static final org.slf4j.Logger LOG;

  private final java.util.concurrent.ScheduledThreadPoolExecutor delegate;

  private final long queueSize;

  public org.apache.camel.util.concurrent.SizedScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor, long);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       9: aload_0
      10: lload_2
      11: putfield      #22                 // Field queueSize:J
      14: return

  public java.util.concurrent.ScheduledThreadPoolExecutor getScheduledThreadPoolExecutor();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: areturn

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(java.util.concurrent.Callable<V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          19
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: lload_2
      13: aload         4
      15: invokevirtual #36                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      18: areturn
      19: new           #38                 // class java/util/concurrent/RejectedExecutionException
      22: dup
      23: ldc           #40                 // String Task rejected due queue size limit reached
      25: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      28: athrow

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          19
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: lload_2
      13: aload         4
      15: invokevirtual #52                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      18: areturn
      19: new           #38                 // class java/util/concurrent/RejectedExecutionException
      22: dup
      23: ldc           #40                 // String Task rejected due queue size limit reached
      25: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      28: athrow

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: lload_2
      13: lload         4
      15: aload         6
      17: invokevirtual #57                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      20: areturn
      21: new           #38                 // class java/util/concurrent/RejectedExecutionException
      24: dup
      25: ldc           #40                 // String Task rejected due queue size limit reached
      27: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      30: athrow

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: lload_2
      13: lload         4
      15: aload         6
      17: invokevirtual #62                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      20: areturn
      21: new           #38                 // class java/util/concurrent/RejectedExecutionException
      24: dup
      25: ldc           #40                 // String Task rejected due queue size limit reached
      27: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      30: athrow

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: lload_1
       5: aload_3
       6: invokevirtual #68                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #73                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getActiveCount:()I
       7: ireturn

  public long getCompletedTaskCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #77                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getCompletedTaskCount:()J
       7: lreturn

  public int getCorePoolSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #80                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getCorePoolSize:()I
       7: ireturn

  public long getKeepAliveTime(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: aload_1
       5: invokevirtual #84                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J
       8: lreturn

  public int getLargestPoolSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #87                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getLargestPoolSize:()I
       7: ireturn

  public int getMaximumPoolSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #90                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getMaximumPoolSize:()I
       7: ireturn

  public int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #93                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getPoolSize:()I
       7: ireturn

  public java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #97                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;
       7: areturn

  public long getTaskCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #100                // Method java/util/concurrent/ScheduledThreadPoolExecutor.getTaskCount:()J
       7: lreturn

  public java.util.concurrent.ThreadFactory getThreadFactory();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #104                // Method java/util/concurrent/ScheduledThreadPoolExecutor.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       7: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          16
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: invokevirtual #108                // Method java/util/concurrent/ScheduledThreadPoolExecutor.invokeAll:(Ljava/util/Collection;)Ljava/util/List;
      15: areturn
      16: new           #38                 // class java/util/concurrent/RejectedExecutionException
      19: dup
      20: ldc           #40                 // String Task rejected due queue size limit reached
      22: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      25: athrow

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          19
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: lload_2
      13: aload         4
      15: invokevirtual #114                // Method java/util/concurrent/ScheduledThreadPoolExecutor.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
      18: areturn
      19: new           #38                 // class java/util/concurrent/RejectedExecutionException
      22: dup
      23: ldc           #40                 // String Task rejected due queue size limit reached
      25: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      28: athrow

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          16
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: invokevirtual #120                // Method java/util/concurrent/ScheduledThreadPoolExecutor.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;
      15: areturn
      16: new           #38                 // class java/util/concurrent/RejectedExecutionException
      19: dup
      20: ldc           #40                 // String Task rejected due queue size limit reached
      22: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      25: athrow

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          19
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: lload_2
      13: aload         4
      15: invokevirtual #125                // Method java/util/concurrent/ScheduledThreadPoolExecutor.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      18: areturn
      19: new           #38                 // class java/util/concurrent/RejectedExecutionException
      22: dup
      23: ldc           #40                 // String Task rejected due queue size limit reached
      25: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      28: athrow

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #128                // Method java/util/concurrent/ScheduledThreadPoolExecutor.isShutdown:()Z
       7: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #131                // Method java/util/concurrent/ScheduledThreadPoolExecutor.isTerminated:()Z
       7: ireturn

  public boolean isTerminating();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #134                // Method java/util/concurrent/ScheduledThreadPoolExecutor.isTerminating:()Z
       7: ireturn

  public int prestartAllCoreThreads();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #137                // Method java/util/concurrent/ScheduledThreadPoolExecutor.prestartAllCoreThreads:()I
       7: ireturn

  public boolean prestartCoreThread();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #140                // Method java/util/concurrent/ScheduledThreadPoolExecutor.prestartCoreThread:()Z
       7: ireturn

  public void purge();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #143                // Method java/util/concurrent/ScheduledThreadPoolExecutor.purge:()V
       7: return

  public void setCorePoolSize(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #147                // Method java/util/concurrent/ScheduledThreadPoolExecutor.setCorePoolSize:(I)V
       8: return

  public void setKeepAliveTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: lload_1
       5: aload_3
       6: invokevirtual #153                // Method java/util/concurrent/ScheduledThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
       9: return

  public void setMaximumPoolSize(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #157                // Method java/util/concurrent/ScheduledThreadPoolExecutor.setMaximumPoolSize:(I)V
       8: return

  public void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: aload_1
       5: invokevirtual #162                // Method java/util/concurrent/ScheduledThreadPoolExecutor.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
       8: return

  public void setThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: aload_1
       5: invokevirtual #168                // Method java/util/concurrent/ScheduledThreadPoolExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
       8: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #173                // Method java/util/concurrent/ScheduledThreadPoolExecutor.shutdown:()V
       7: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #177                // Method java/util/concurrent/ScheduledThreadPoolExecutor.shutdownNow:()Ljava/util/List;
       7: areturn

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          16
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: invokevirtual #181                // Method java/util/concurrent/ScheduledThreadPoolExecutor.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      15: areturn
      16: new           #38                 // class java/util/concurrent/RejectedExecutionException
      19: dup
      20: ldc           #40                 // String Task rejected due queue size limit reached
      22: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      25: athrow

  public java.util.concurrent.Future<?> submit(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          16
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: invokevirtual #185                // Method java/util/concurrent/ScheduledThreadPoolExecutor.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      15: areturn
      16: new           #38                 // class java/util/concurrent/RejectedExecutionException
      19: dup
      20: ldc           #40                 // String Task rejected due queue size limit reached
      22: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      25: athrow

  public <T> java.util.concurrent.Future<T> submit(java.lang.Runnable, T);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          17
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: aload_2
      13: invokevirtual #188                // Method java/util/concurrent/ScheduledThreadPoolExecutor.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
      16: areturn
      17: new           #38                 // class java/util/concurrent/RejectedExecutionException
      20: dup
      21: ldc           #40                 // String Task rejected due queue size limit reached
      23: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      26: athrow

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method canScheduleOrExecute:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: aload_1
      12: invokevirtual #195                // Method java/util/concurrent/ScheduledThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      15: goto          28
      18: new           #38                 // class java/util/concurrent/RejectedExecutionException
      21: dup
      22: ldc           #40                 // String Task rejected due queue size limit reached
      24: invokespecial #43                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: return

  public void allowCoreThreadTimeOut(boolean);
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #199                // Method java/util/concurrent/ScheduledThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
       8: return

  public boolean allowsCoreThreadTimeOut();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #204                // Method java/util/concurrent/ScheduledThreadPoolExecutor.allowsCoreThreadTimeOut:()Z
       7: ireturn

  protected boolean canScheduleOrExecute();
    Code:
       0: aload_0
       1: getfield      #22                 // Field queueSize:J
       4: lconst_0
       5: lcmp
       6: ifgt          11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      15: invokevirtual #208                // Method java/util/concurrent/ScheduledThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      18: invokeinterface #213,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      23: istore_1
      24: iload_1
      25: i2l
      26: aload_0
      27: getfield      #22                 // Field queueSize:J
      30: lcmp
      31: ifge          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore_2
      40: getstatic     #215                // Field LOG:Lorg/slf4j/Logger;
      43: invokeinterface #220,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      48: ifeq          89
      51: getstatic     #215                // Field LOG:Lorg/slf4j/Logger;
      54: ldc           #222                // String canScheduleOrExecute {} < {} -> {}
      56: iconst_3
      57: anewarray     #4                  // class java/lang/Object
      60: dup
      61: iconst_0
      62: iload_1
      63: invokestatic  #228                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: aastore
      67: dup
      68: iconst_1
      69: aload_0
      70: getfield      #22                 // Field queueSize:J
      73: invokestatic  #233                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      76: aastore
      77: dup
      78: iconst_2
      79: iload_2
      80: invokestatic  #238                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      83: aastore
      84: invokeinterface #242,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      89: iload_2
      90: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #104                // Method java/util/concurrent/ScheduledThreadPoolExecutor.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       7: instanceof    #247                // class org/apache/camel/util/concurrent/CamelThreadFactory
      10: ifeq          61
      13: aload_0
      14: getfield      #20                 // Field delegate:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      17: invokevirtual #104                // Method java/util/concurrent/ScheduledThreadPoolExecutor.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      20: checkcast     #247                // class org/apache/camel/util/concurrent/CamelThreadFactory
      23: invokevirtual #250                // Method org/apache/camel/util/concurrent/CamelThreadFactory.getName:()Ljava/lang/String;
      26: astore_1
      27: new           #252                // class java/lang/StringBuilder
      30: dup
      31: invokespecial #253                // Method java/lang/StringBuilder."<init>":()V
      34: aload_0
      35: invokespecial #255                // Method java/lang/Object.toString:()Ljava/lang/String;
      38: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc_w         #261                // String [
      44: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc_w         #263                // String ]
      54: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #264                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: areturn
      61: aload_0
      62: invokespecial #255                // Method java/lang/Object.toString:()Ljava/lang/String;
      65: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/util/concurrent/SizedScheduledExecutorService
       2: invokestatic  #273                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #215                // Field LOG:Lorg/slf4j/Logger;
       8: return
}
