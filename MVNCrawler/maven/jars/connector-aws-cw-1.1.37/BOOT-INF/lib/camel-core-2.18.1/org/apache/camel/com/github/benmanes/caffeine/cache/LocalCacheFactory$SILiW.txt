Compiled from "LocalCacheFactory.java"
class org.apache.camel.com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiW<K, V> extends org.apache.camel.com.github.benmanes.caffeine.cache.LocalCacheFactory$SILi<K, V> {
  private final org.apache.camel.com.github.benmanes.caffeine.cache.Ticker ticker;

  private final org.apache.camel.com.github.benmanes.caffeine.cache.WriteOrderDeque<org.apache.camel.com.github.benmanes.caffeine.cache.Node<K, V>> writeOrderDeque;

  private volatile long expiresAfterWriteNanos;

  private final org.apache.camel.com.github.benmanes.caffeine.cache.WriteBuffer<java.lang.Runnable> writeBuffer;

  org.apache.camel.com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiW(org.apache.camel.com.github.benmanes.caffeine.cache.Caffeine<K, V>, org.apache.camel.com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #24                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/LocalCacheFactory$SILi."<init>":(Lorg/apache/camel/com/github/benmanes/caffeine/cache/Caffeine;Lorg/apache/camel/com/github/benmanes/caffeine/cache/CacheLoader;Z)V
       7: aload_0
       8: aload_1
       9: invokevirtual #30                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine.getTicker:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      12: putfield      #32                 // Field ticker:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      15: aload_0
      16: new           #34                 // class org/apache/camel/com/github/benmanes/caffeine/cache/WriteOrderDeque
      19: dup
      20: invokespecial #37                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/WriteOrderDeque."<init>":()V
      23: putfield      #39                 // Field writeOrderDeque:Lorg/apache/camel/com/github/benmanes/caffeine/cache/WriteOrderDeque;
      26: aload_0
      27: aload_1
      28: invokevirtual #43                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine.getExpiresAfterWriteNanos:()J
      31: putfield      #45                 // Field expiresAfterWriteNanos:J
      34: aload_0
      35: new           #47                 // class org/apache/camel/com/github/benmanes/caffeine/cache/WriteBuffer
      38: dup
      39: iconst_4
      40: getstatic     #51                 // Field WRITE_BUFFER_MAX:I
      43: invokespecial #54                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/WriteBuffer."<init>":(II)V
      46: putfield      #56                 // Field writeBuffer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/WriteBuffer;
      49: return

  public final org.apache.camel.com.github.benmanes.caffeine.cache.Ticker expirationTicker();
    Code:
       0: aload_0
       1: getfield      #32                 // Field ticker:Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
       4: areturn

  protected final org.apache.camel.com.github.benmanes.caffeine.cache.WriteOrderDeque<org.apache.camel.com.github.benmanes.caffeine.cache.Node<K, V>> writeOrderDeque();
    Code:
       0: aload_0
       1: getfield      #39                 // Field writeOrderDeque:Lorg/apache/camel/com/github/benmanes/caffeine/cache/WriteOrderDeque;
       4: areturn

  protected final boolean expiresAfterWrite();
    Code:
       0: iconst_1
       1: ireturn

  protected final long expiresAfterWriteNanos();
    Code:
       0: aload_0
       1: getfield      #45                 // Field expiresAfterWriteNanos:J
       4: lreturn

  protected final void setExpiresAfterWriteNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #45                 // Field expiresAfterWriteNanos:J
       5: return

  protected final org.apache.camel.com.github.benmanes.caffeine.cache.WriteBuffer<java.lang.Runnable> writeBuffer();
    Code:
       0: aload_0
       1: getfield      #56                 // Field writeBuffer:Lorg/apache/camel/com/github/benmanes/caffeine/cache/WriteBuffer;
       4: areturn

  protected final boolean buffersWrites();
    Code:
       0: iconst_1
       1: ireturn
}
