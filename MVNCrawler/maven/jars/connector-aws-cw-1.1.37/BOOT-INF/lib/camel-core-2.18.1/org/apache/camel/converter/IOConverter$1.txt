Compiled from "IOConverter.java"
final class org.apache.camel.converter.IOConverter$1 extends java.io.InputStream {
  private java.nio.ByteBuffer bufferBytes;

  private java.nio.CharBuffer bufferedChars;

  final java.io.BufferedReader val$reader;

  final java.nio.charset.Charset val$defaultStreamCharset;

  org.apache.camel.converter.IOConverter$1(java.io.BufferedReader, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field val$reader:Ljava/io/BufferedReader;
       5: aload_0
       6: aload_2
       7: putfield      #24                 // Field val$defaultStreamCharset:Ljava/nio/charset/Charset;
      10: aload_0
      11: invokespecial #27                 // Method java/io/InputStream."<init>":()V
      14: aload_0
      15: sipush        4096
      18: invokestatic  #33                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      21: putfield      #35                 // Field bufferedChars:Ljava/nio/CharBuffer;
      24: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field bufferBytes:Ljava/nio/ByteBuffer;
       4: ifnull        17
       7: aload_0
       8: getfield      #43                 // Field bufferBytes:Ljava/nio/ByteBuffer;
      11: invokevirtual #48                 // Method java/nio/ByteBuffer.remaining:()I
      14: ifgt          67
      17: aload_0
      18: getfield      #35                 // Field bufferedChars:Ljava/nio/CharBuffer;
      21: invokevirtual #52                 // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      24: pop
      25: aload_0
      26: getfield      #22                 // Field val$reader:Ljava/io/BufferedReader;
      29: aload_0
      30: getfield      #35                 // Field bufferedChars:Ljava/nio/CharBuffer;
      33: invokevirtual #57                 // Method java/io/BufferedReader.read:(Ljava/nio/CharBuffer;)I
      36: istore_1
      37: aload_0
      38: getfield      #35                 // Field bufferedChars:Ljava/nio/CharBuffer;
      41: invokevirtual #60                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      44: pop
      45: iload_1
      46: iconst_m1
      47: if_icmpne     52
      50: iconst_m1
      51: ireturn
      52: aload_0
      53: aload_0
      54: getfield      #24                 // Field val$defaultStreamCharset:Ljava/nio/charset/Charset;
      57: aload_0
      58: getfield      #35                 // Field bufferedChars:Ljava/nio/CharBuffer;
      61: invokevirtual #66                 // Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
      64: putfield      #43                 // Field bufferBytes:Ljava/nio/ByteBuffer;
      67: aload_0
      68: getfield      #43                 // Field bufferBytes:Ljava/nio/ByteBuffer;
      71: invokevirtual #70                 // Method java/nio/ByteBuffer.get:()B
      74: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field val$reader:Ljava/io/BufferedReader;
       4: invokevirtual #75                 // Method java/io/BufferedReader.close:()V
       7: return

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field val$reader:Ljava/io/BufferedReader;
       4: invokevirtual #78                 // Method java/io/BufferedReader.reset:()V
       7: return
}
