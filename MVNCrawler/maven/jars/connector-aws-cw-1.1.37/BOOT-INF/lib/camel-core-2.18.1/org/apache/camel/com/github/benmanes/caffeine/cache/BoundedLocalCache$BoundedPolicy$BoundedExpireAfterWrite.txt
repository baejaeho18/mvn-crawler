Compiled from "BoundedLocalCache.java"
final class org.apache.camel.com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedExpireAfterWrite implements org.apache.camel.com.github.benmanes.caffeine.cache.Policy$Expiration<K, V> {
  final org.apache.camel.com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy this$0;

  org.apache.camel.com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedExpireAfterWrite(org.apache.camel.com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       5: aload_0
       6: invokespecial #26                 // Method java/lang/Object."<init>":()V
       9: return

  public java.util.OptionalLong ageOf(K, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #35                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: getfield      #39                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.nodeFactory:Lorg/apache/camel/com/github/benmanes/caffeine/cache/NodeFactory;
      10: aload_1
      11: invokevirtual #45                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_3
      15: aload_0
      16: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      19: getfield      #35                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      22: getfield      #49                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
      25: aload_3
      26: invokevirtual #54                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #56                 // class org/apache/camel/com/github/benmanes/caffeine/cache/Node
      32: astore        4
      34: aload         4
      36: ifnonnull     43
      39: invokestatic  #62                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      42: areturn
      43: aload_0
      44: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      47: getfield      #35                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      50: invokevirtual #66                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.expirationTicker:()Lorg/apache/camel/com/github/benmanes/caffeine/cache/Ticker;
      53: invokeinterface #72,  1           // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Ticker.read:()J
      58: aload         4
      60: invokeinterface #75,  1           // InterfaceMethod org/apache/camel/com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      65: lsub
      66: lstore        5
      68: lload         5
      70: aload_0
      71: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      74: getfield      #35                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      77: invokevirtual #78                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.expiresAfterWriteNanos:()J
      80: lcmp
      81: ifle          90
      84: invokestatic  #62                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      87: goto          102
      90: aload_2
      91: lload         5
      93: getstatic     #84                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      96: invokevirtual #88                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      99: invokestatic  #92                 // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
     102: areturn

  public long getExpiresAfter(java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       5: getfield      #35                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
       8: invokevirtual #78                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.expiresAfterWriteNanos:()J
      11: getstatic     #84                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      14: invokevirtual #88                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      17: lreturn

  public void setExpiresAfter(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #112                // Method org/apache/camel/com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      14: aload_0
      15: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      18: getfield      #35                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      21: aload_3
      22: lload_1
      23: invokevirtual #116                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      26: invokevirtual #120                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.setExpiresAfterWriteNanos:(J)V
      29: aload_0
      30: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      33: getfield      #35                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
      36: invokevirtual #123                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleAfterWrite:()V
      39: return

  public java.util.Map<K, V> oldest(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #35                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: iload_1
       8: aload_0
       9: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      12: getfield      #130                // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.transformer:Ljava/util/function/Function;
      15: iconst_1
      16: invokevirtual #134                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.expireAfterWriteOrder:(ILjava/util/function/Function;Z)Ljava/util/Map;
      19: areturn

  public java.util.Map<K, V> youngest(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #35                 // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: iload_1
       8: aload_0
       9: getfield      #23                 // Field this$0:Lorg/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      12: getfield      #130                // Field org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.transformer:Ljava/util/function/Function;
      15: iconst_0
      16: invokevirtual #134                // Method org/apache/camel/com/github/benmanes/caffeine/cache/BoundedLocalCache.expireAfterWriteOrder:(ILjava/util/function/Function;Z)Ljava/util/Map;
      19: areturn
}
