Compiled from "ExceptionFailureStatistics.java"
public class org.apache.camel.processor.loadbalancer.ExceptionFailureStatistics {
  private final java.util.Map<java.lang.Class<?>, java.util.concurrent.atomic.AtomicLong> counters;

  private final java.util.concurrent.atomic.AtomicLong fallbackCounter;

  public org.apache.camel.processor.loadbalancer.ExceptionFailureStatistics();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #16                 // class java/util/HashMap
       8: dup
       9: invokespecial #17                 // Method java/util/HashMap."<init>":()V
      12: putfield      #19                 // Field counters:Ljava/util/Map;
      15: aload_0
      16: new           #21                 // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #22                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #24                 // Field fallbackCounter:Ljava/util/concurrent/atomic/AtomicLong;
      26: return

  public void init(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_1
       1: ifnull        51
       4: aload_1
       5: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          51
      20: aload_2
      21: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #46                 // class java/lang/Class
      29: astore_3
      30: aload_0
      31: getfield      #19                 // Field counters:Ljava/util/Map;
      34: aload_3
      35: new           #21                 // class java/util/concurrent/atomic/AtomicLong
      38: dup
      39: invokespecial #22                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      42: invokeinterface #52,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: goto          11
      51: return

  public java.util.Iterator<java.lang.Class<?>> getExceptions();
    Code:
       0: aload_0
       1: getfield      #19                 // Field counters:Ljava/util/Map;
       4: invokeinterface #63,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #66,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public long getFailureCounter(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field counters:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #21                 // class java/util/concurrent/atomic/AtomicLong
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      22: lreturn
      23: aload_0
      24: getfield      #24                 // Field fallbackCounter:Ljava/util/concurrent/atomic/AtomicLong;
      27: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      30: lreturn

  public void onHandledFailure(java.lang.Exception);
    Code:
       0: aload_1
       1: invokevirtual #82                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_0
       6: getfield      #19                 // Field counters:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #21                 // class java/util/concurrent/atomic/AtomicLong
      18: astore_3
      19: aload_3
      20: ifnull        31
      23: aload_3
      24: invokevirtual #85                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      27: pop2
      28: goto          39
      31: aload_0
      32: getfield      #24                 // Field fallbackCounter:Ljava/util/concurrent/atomic/AtomicLong;
      35: invokevirtual #85                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      38: pop2
      39: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #19                 // Field counters:Ljava/util/Map;
       4: invokeinterface #92,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #95,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_1
      25: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #21                 // class java/util/concurrent/atomic/AtomicLong
      33: astore_2
      34: aload_2
      35: lconst_0
      36: invokevirtual #99                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      39: goto          15
      42: aload_0
      43: getfield      #24                 // Field fallbackCounter:Ljava/util/concurrent/atomic/AtomicLong;
      46: lconst_0
      47: invokevirtual #99                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      50: return
}
