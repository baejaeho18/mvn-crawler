Compiled from "BoundedBuffer.java"
final class org.apache.camel.com.github.benmanes.caffeine.cache.BoundedBuffer$RingBuffer<E> extends org.apache.camel.com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef implements org.apache.camel.com.github.benmanes.caffeine.cache.Buffer<E> {
  final java.util.concurrent.atomic.AtomicReferenceArray<E> buffer;

  public org.apache.camel.com.github.benmanes.caffeine.cache.BoundedBuffer$RingBuffer(E);
    Code:
       0: aload_0
       1: bipush        16
       3: invokespecial #22                 // Method org/apache/camel/com/github/benmanes/caffeine/cache/BBHeader$ReadAndWriteCounterRef."<init>":(I)V
       6: aload_0
       7: new           #24                 // class java/util/concurrent/atomic/AtomicReferenceArray
      10: dup
      11: sipush        256
      14: invokespecial #25                 // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      17: putfield      #27                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      20: aload_0
      21: getfield      #27                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      24: iconst_0
      25: aload_1
      26: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
      29: return

  public int offer(E);
    Code:
       0: aload_0
       1: getfield      #43                 // Field readCounter:J
       4: lstore_2
       5: aload_0
       6: invokevirtual #47                 // Method relaxedWriteCounter:()J
       9: lstore        4
      11: lload         4
      13: lload_2
      14: lsub
      15: lstore        6
      17: lload         6
      19: ldc2_w        #48                 // long 256l
      22: lcmp
      23: iflt          28
      26: iconst_1
      27: ireturn
      28: aload_0
      29: lload         4
      31: lload         4
      33: ldc2_w        #50                 // long 16l
      36: ladd
      37: invokevirtual #55                 // Method casWriteCounter:(JJ)Z
      40: ifeq          64
      43: lload         4
      45: ldc2_w        #56                 // long 255l
      48: land
      49: l2i
      50: istore        8
      52: aload_0
      53: getfield      #27                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      56: iload         8
      58: aload_1
      59: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
      62: iconst_0
      63: ireturn
      64: iconst_m1
      65: ireturn

  public void drainTo(java.util.function.Consumer<E>);
    Code:
       0: aload_0
       1: getfield      #43                 // Field readCounter:J
       4: lstore_2
       5: aload_0
       6: invokevirtual #47                 // Method relaxedWriteCounter:()J
       9: lstore        4
      11: lload         4
      13: lload_2
      14: lsub
      15: lstore        6
      17: lload         6
      19: lconst_0
      20: lcmp
      21: ifne          25
      24: return
      25: lload_2
      26: ldc2_w        #56                 // long 255l
      29: land
      30: l2i
      31: istore        8
      33: aload_0
      34: getfield      #27                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      37: iload         8
      39: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
      42: astore        9
      44: aload         9
      46: ifnonnull     52
      49: goto          83
      52: aload_0
      53: getfield      #27                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      56: iload         8
      58: aconst_null
      59: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
      62: aload_1
      63: aload         9
      65: invokeinterface #75,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      70: lload_2
      71: ldc2_w        #50                 // long 16l
      74: ladd
      75: lstore_2
      76: lload_2
      77: lload         4
      79: lcmp
      80: ifne          25
      83: aload_0
      84: lload_2
      85: invokevirtual #79                 // Method lazySetReadCounter:(J)V
      88: return

  public int reads();
    Code:
       0: aload_0
       1: getfield      #43                 // Field readCounter:J
       4: l2i
       5: bipush        16
       7: idiv
       8: ireturn

  public int writes();
    Code:
       0: aload_0
       1: getfield      #88                 // Field writeCounter:J
       4: l2i
       5: bipush        16
       7: idiv
       8: ireturn
}
