Compiled from "CircuitBreakerLoadBalancerDefinition.java"
public class org.apache.camel.model.loadbalancer.CircuitBreakerLoadBalancerDefinition extends org.apache.camel.model.LoadBalancerDefinition {
  private java.util.List<java.lang.Class<?>> exceptionTypes;

  private java.util.List<java.lang.String> exceptions;

  private java.lang.Long halfOpenAfter;

  private java.lang.Integer threshold;

  public org.apache.camel.model.loadbalancer.CircuitBreakerLoadBalancerDefinition();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method org/apache/camel/model/LoadBalancerDefinition."<init>":()V
       4: aload_0
       5: new           #34                 // class java/util/ArrayList
       8: dup
       9: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #37                 // Field exceptionTypes:Ljava/util/List;
      15: aload_0
      16: new           #34                 // class java/util/ArrayList
      19: dup
      20: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #39                 // Field exceptions:Ljava/util/List;
      26: return

  protected int getMaximumNumberOfOutputs();
    Code:
       0: iconst_1
       1: ireturn

  protected org.apache.camel.processor.loadbalancer.LoadBalancer createLoadBalancer(org.apache.camel.spi.RouteContext);
    Code:
       0: new           #34                 // class java/util/ArrayList
       3: dup
       4: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #37                 // Field exceptionTypes:Ljava/util/List;
      12: invokeinterface #51,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      17: ifne          34
      20: aload_2
      21: aload_0
      22: getfield      #37                 // Field exceptionTypes:Ljava/util/List;
      25: invokeinterface #55,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      30: pop
      31: goto          184
      34: aload_0
      35: getfield      #39                 // Field exceptions:Ljava/util/List;
      38: invokeinterface #51,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      43: ifne          184
      46: aload_0
      47: getfield      #39                 // Field exceptions:Ljava/util/List;
      50: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      55: astore_3
      56: aload_3
      57: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          184
      65: aload_3
      66: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #70                 // class java/lang/String
      74: astore        4
      76: aload_1
      77: invokeinterface #76,  1           // InterfaceMethod org/apache/camel/spi/RouteContext.getCamelContext:()Lorg/apache/camel/CamelContext;
      82: invokeinterface #82,  1           // InterfaceMethod org/apache/camel/CamelContext.getClassResolver:()Lorg/apache/camel/spi/ClassResolver;
      87: aload         4
      89: invokeinterface #88,  2           // InterfaceMethod org/apache/camel/spi/ClassResolver.resolveClass:(Ljava/lang/String;)Ljava/lang/Class;
      94: astore        5
      96: aload         5
      98: ifnonnull     134
     101: new           #90                 // class java/lang/IllegalArgumentException
     104: dup
     105: new           #92                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
     112: ldc           #95                 // String Cannot find class:
     114: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload         4
     119: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc           #101                // String  in the classpath
     124: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #108                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: ldc           #112                // class java/lang/Throwable
     136: aload         5
     138: invokestatic  #118                // Method org/apache/camel/util/ObjectHelper.isAssignableFrom:(Ljava/lang/Class;Ljava/lang/Class;)Z
     141: ifne          172
     144: new           #90                 // class java/lang/IllegalArgumentException
     147: dup
     148: new           #92                 // class java/lang/StringBuilder
     151: dup
     152: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
     155: ldc           #120                // String Class is not an instance of Throwable:
     157: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload         5
     162: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     165: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: invokespecial #108                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     171: athrow
     172: aload_2
     173: aload         5
     175: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     180: pop
     181: goto          56
     184: aload_2
     185: invokeinterface #51,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     190: ifeq          205
     193: new           #129                // class org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer
     196: dup
     197: invokespecial #130                // Method org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer."<init>":()V
     200: astore        6
     202: goto          215
     205: new           #129                // class org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer
     208: dup
     209: aload_2
     210: invokespecial #133                // Method org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer."<init>":(Ljava/util/List;)V
     213: astore        6
     215: aload_0
     216: invokevirtual #137                // Method getHalfOpenAfter:()Ljava/lang/Long;
     219: ifnull        234
     222: aload         6
     224: aload_0
     225: invokevirtual #137                // Method getHalfOpenAfter:()Ljava/lang/Long;
     228: invokevirtual #143                // Method java/lang/Long.longValue:()J
     231: invokevirtual #147                // Method org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer.setHalfOpenAfter:(J)V
     234: aload_0
     235: invokevirtual #151                // Method getThreshold:()Ljava/lang/Integer;
     238: ifnull        253
     241: aload         6
     243: aload_0
     244: invokevirtual #151                // Method getThreshold:()Ljava/lang/Integer;
     247: invokevirtual #156                // Method java/lang/Integer.intValue:()I
     250: invokevirtual #160                // Method org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer.setThreshold:(I)V
     253: aload         6
     255: areturn

  public java.lang.Long getHalfOpenAfter();
    Code:
       0: aload_0
       1: getfield      #171                // Field halfOpenAfter:Ljava/lang/Long;
       4: areturn

  public void setHalfOpenAfter(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #171                // Field halfOpenAfter:Ljava/lang/Long;
       5: return

  public java.lang.Integer getThreshold();
    Code:
       0: aload_0
       1: getfield      #174                // Field threshold:Ljava/lang/Integer;
       4: areturn

  public void setThreshold(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #174                // Field threshold:Ljava/lang/Integer;
       5: return

  public java.util.List<java.lang.String> getExceptions();
    Code:
       0: aload_0
       1: getfield      #39                 // Field exceptions:Ljava/util/List;
       4: areturn

  public void setExceptions(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field exceptions:Ljava/util/List;
       5: return

  public java.util.List<java.lang.Class<?>> getExceptionTypes();
    Code:
       0: aload_0
       1: getfield      #37                 // Field exceptionTypes:Ljava/util/List;
       4: areturn

  public void setExceptionTypes(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field exceptionTypes:Ljava/util/List;
       5: return

  public java.lang.String toString();
    Code:
       0: ldc           #182                // String CircuitBreakerLoadBalancer
       2: areturn
}
