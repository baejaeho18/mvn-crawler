Compiled from "SimpleFunctionStart.java"
public class org.apache.camel.language.simple.ast.SimpleFunctionStart extends org.apache.camel.language.simple.ast.BaseSimpleNode implements org.apache.camel.language.simple.ast.BlockStart {
  private org.apache.camel.language.simple.ast.CompositeNodes block;

  public org.apache.camel.language.simple.ast.SimpleFunctionStart(org.apache.camel.language.simple.types.SimpleToken);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/apache/camel/language/simple/ast/BaseSimpleNode."<init>":(Lorg/apache/camel/language/simple/types/SimpleToken;)V
       5: aload_0
       6: new           #17                 // class org/apache/camel/language/simple/ast/CompositeNodes
       9: dup
      10: aload_1
      11: invokespecial #18                 // Method org/apache/camel/language/simple/ast/CompositeNodes."<init>":(Lorg/apache/camel/language/simple/types/SimpleToken;)V
      14: putfield      #20                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
      17: return

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #33                 // String ${
       9: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #20                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
      16: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #42                 // String }
      21: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public org.apache.camel.Expression createExpression(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
       4: invokevirtual #50                 // Method org/apache/camel/language/simple/ast/CompositeNodes.getChildren:()Ljava/util/List;
       7: invokeinterface #56,  1           // InterfaceMethod java/util/List.size:()I
      12: iconst_1
      13: if_icmpne     41
      16: aload_0
      17: getfield      #20                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
      20: invokevirtual #50                 // Method org/apache/camel/language/simple/ast/CompositeNodes.getChildren:()Ljava/util/List;
      23: iconst_0
      24: invokeinterface #60,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      29: instanceof    #62                 // class org/apache/camel/language/simple/ast/LiteralNode
      32: ifeq          41
      35: aload_0
      36: aload_1
      37: invokespecial #65                 // Method doCreateLiteralExpression:(Ljava/lang/String;)Lorg/apache/camel/Expression;
      40: areturn
      41: aload_0
      42: aload_1
      43: invokespecial #68                 // Method doCreateCompositeExpression:(Ljava/lang/String;)Lorg/apache/camel/Expression;
      46: areturn

  private org.apache.camel.Expression doCreateLiteralExpression(java.lang.String);
    Code:
       0: new           #72                 // class org/apache/camel/language/simple/ast/SimpleFunctionExpression
       3: dup
       4: aload_0
       5: invokevirtual #76                 // Method getToken:()Lorg/apache/camel/language/simple/types/SimpleToken;
       8: invokespecial #77                 // Method org/apache/camel/language/simple/ast/SimpleFunctionExpression."<init>":(Lorg/apache/camel/language/simple/types/SimpleToken;)V
      11: astore_2
      12: aload_0
      13: getfield      #20                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
      16: invokevirtual #50                 // Method org/apache/camel/language/simple/ast/CompositeNodes.getChildren:()Ljava/util/List;
      19: iconst_0
      20: invokeinterface #60,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #62                 // class org/apache/camel/language/simple/ast/LiteralNode
      28: astore_3
      29: aload_2
      30: aload_3
      31: invokeinterface #80,  1           // InterfaceMethod org/apache/camel/language/simple/ast/LiteralNode.getText:()Ljava/lang/String;
      36: invokevirtual #84                 // Method org/apache/camel/language/simple/ast/SimpleFunctionExpression.addText:(Ljava/lang/String;)V
      39: aload_2
      40: aload_1
      41: invokevirtual #86                 // Method org/apache/camel/language/simple/ast/SimpleFunctionExpression.createExpression:(Ljava/lang/String;)Lorg/apache/camel/Expression;
      44: areturn

  private org.apache.camel.Expression doCreateCompositeExpression(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method getToken:()Lorg/apache/camel/language/simple/types/SimpleToken;
       4: astore_2
       5: new           #9                  // class org/apache/camel/language/simple/ast/SimpleFunctionStart$1
       8: dup
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokespecial #93                 // Method org/apache/camel/language/simple/ast/SimpleFunctionStart$1."<init>":(Lorg/apache/camel/language/simple/ast/SimpleFunctionStart;Ljava/lang/String;Lorg/apache/camel/language/simple/types/SimpleToken;)V
      15: areturn

  public boolean acceptAndAddNode(org.apache.camel.language.simple.ast.SimpleNode);
    Code:
       0: aload_1
       1: instanceof    #62                 // class org/apache/camel/language/simple/ast/LiteralNode
       4: ifne          28
       7: aload_1
       8: instanceof    #2                  // class org/apache/camel/language/simple/ast/SimpleFunctionStart
      11: ifne          28
      14: aload_1
      15: instanceof    #97                 // class org/apache/camel/language/simple/ast/SingleQuoteStart
      18: ifne          28
      21: aload_1
      22: instanceof    #99                 // class org/apache/camel/language/simple/ast/DoubleQuoteStart
      25: ifeq          38
      28: aload_0
      29: getfield      #20                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
      32: aload_1
      33: invokevirtual #103                // Method org/apache/camel/language/simple/ast/CompositeNodes.addChild:(Lorg/apache/camel/language/simple/ast/SimpleNode;)V
      36: iconst_1
      37: ireturn
      38: iconst_0
      39: ireturn

  static org.apache.camel.language.simple.ast.CompositeNodes access$000(org.apache.camel.language.simple.ast.SimpleFunctionStart);
    Code:
       0: aload_0
       1: getfield      #20                 // Field block:Lorg/apache/camel/language/simple/ast/CompositeNodes;
       4: areturn
}
