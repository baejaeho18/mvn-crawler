Compiled from "FileIdempotentRepositoryReadLockStrategy.java"
public class org.apache.camel.component.file.strategy.FileIdempotentRepositoryReadLockStrategy extends org.apache.camel.support.ServiceSupport implements org.apache.camel.component.file.GenericFileExclusiveReadLockStrategy<java.io.File>, org.apache.camel.CamelContextAware {
  private static final transient org.slf4j.Logger LOG;

  private org.apache.camel.component.file.GenericFileEndpoint<java.io.File> endpoint;

  private org.apache.camel.LoggingLevel readLockLoggingLevel;

  private org.apache.camel.CamelContext camelContext;

  private org.apache.camel.spi.IdempotentRepository<java.lang.String> idempotentRepository;

  private boolean removeOnRollback;

  private boolean removeOnCommit;

  public org.apache.camel.component.file.strategy.FileIdempotentRepositoryReadLockStrategy();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method org/apache/camel/support/ServiceSupport."<init>":()V
       4: aload_0
       5: getstatic     #34                 // Field org/apache/camel/LoggingLevel.WARN:Lorg/apache/camel/LoggingLevel;
       8: putfield      #36                 // Field readLockLoggingLevel:Lorg/apache/camel/LoggingLevel;
      11: aload_0
      12: iconst_1
      13: putfield      #38                 // Field removeOnRollback:Z
      16: return

  public void prepareOnStartup(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFileEndpoint<java.io.File>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #46                 // Field endpoint:Lorg/apache/camel/component/file/GenericFileEndpoint;
       5: getstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #50                 // String Using FileIdempotentRepositoryReadLockStrategy: {} on endpoint: {}
      10: aload_0
      11: getfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
      14: aload_2
      15: invokeinterface #58,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  public boolean acquireExclusiveReadLock(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFile<java.io.File>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #69                 // Method org/apache/camel/component/file/GenericFile.getFile:()Ljava/lang/Object;
       4: checkcast     #71                 // class java/io/File
       7: astore        4
       9: aload         4
      11: invokevirtual #75                 // Method java/io/File.exists:()Z
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_0
      20: aload_2
      21: invokevirtual #79                 // Method asKey:(Lorg/apache/camel/component/file/GenericFile;)Ljava/lang/String;
      24: astore        5
      26: aload_0
      27: getfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
      30: aload         5
      32: invokeinterface #85,  2           // InterfaceMethod org/apache/camel/spi/IdempotentRepository.add:(Ljava/lang/Object;)Z
      37: istore        6
      39: iload         6
      41: ifne          73
      44: getstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
      47: aload_0
      48: getfield      #36                 // Field readLockLoggingLevel:Lorg/apache/camel/LoggingLevel;
      51: new           #87                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #90                 // String Cannot acquire read lock. Will skip the file:
      60: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_2
      64: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokestatic  #107                // Method org/apache/camel/util/CamelLogger.log:(Lorg/slf4j/Logger;Lorg/apache/camel/LoggingLevel;Ljava/lang/String;)V
      73: iload         6
      75: ireturn

  public void releaseExclusiveReadLockOnAbort(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFile<java.io.File>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: return

  public void releaseExclusiveReadLockOnRollback(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFile<java.io.File>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #79                 // Method asKey:(Lorg/apache/camel/component/file/GenericFile;)Ljava/lang/String;
       5: astore        4
       7: aload_0
       8: getfield      #38                 // Field removeOnRollback:Z
      11: ifeq          29
      14: aload_0
      15: getfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
      18: aload         4
      20: invokeinterface #125,  2          // InterfaceMethod org/apache/camel/spi/IdempotentRepository.remove:(Ljava/lang/Object;)Z
      25: pop
      26: goto          41
      29: aload_0
      30: getfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
      33: aload         4
      35: invokeinterface #128,  2          // InterfaceMethod org/apache/camel/spi/IdempotentRepository.confirm:(Ljava/lang/Object;)Z
      40: pop
      41: return

  public void releaseExclusiveReadLockOnCommit(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFile<java.io.File>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #79                 // Method asKey:(Lorg/apache/camel/component/file/GenericFile;)Ljava/lang/String;
       5: astore        4
       7: aload_0
       8: getfield      #131                // Field removeOnCommit:Z
      11: ifeq          29
      14: aload_0
      15: getfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
      18: aload         4
      20: invokeinterface #125,  2          // InterfaceMethod org/apache/camel/spi/IdempotentRepository.remove:(Ljava/lang/Object;)Z
      25: pop
      26: goto          41
      29: aload_0
      30: getfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
      33: aload         4
      35: invokeinterface #128,  2          // InterfaceMethod org/apache/camel/spi/IdempotentRepository.confirm:(Ljava/lang/Object;)Z
      40: pop
      41: return

  public void setTimeout(long);
    Code:
       0: return

  public void setCheckInterval(long);
    Code:
       0: return

  public void setReadLockLoggingLevel(org.apache.camel.LoggingLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field readLockLoggingLevel:Lorg/apache/camel/LoggingLevel;
       5: return

  public void setMarkerFiler(boolean);
    Code:
       0: return

  public void setDeleteOrphanLockFiles(boolean);
    Code:
       0: return

  public org.apache.camel.CamelContext getCamelContext();
    Code:
       0: aload_0
       1: getfield      #148                // Field camelContext:Lorg/apache/camel/CamelContext;
       4: areturn

  public void setCamelContext(org.apache.camel.CamelContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #148                // Field camelContext:Lorg/apache/camel/CamelContext;
       5: return

  public org.apache.camel.spi.IdempotentRepository<java.lang.String> getIdempotentRepository();
    Code:
       0: aload_0
       1: getfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
       4: areturn

  public void setIdempotentRepository(org.apache.camel.spi.IdempotentRepository<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
       5: return

  public boolean isRemoveOnRollback();
    Code:
       0: aload_0
       1: getfield      #38                 // Field removeOnRollback:Z
       4: ireturn

  public void setRemoveOnRollback(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field removeOnRollback:Z
       5: return

  public boolean isRemoveOnCommit();
    Code:
       0: aload_0
       1: getfield      #131                // Field removeOnCommit:Z
       4: ireturn

  public void setRemoveOnCommit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #131                // Field removeOnCommit:Z
       5: return

  protected java.lang.String asKey(org.apache.camel.component.file.GenericFile<java.io.File>);
    Code:
       0: aload_1
       1: invokevirtual #161                // Method org/apache/camel/component/file/GenericFile.getAbsoluteFilePath:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #46                 // Field endpoint:Lorg/apache/camel/component/file/GenericFileEndpoint;
       9: invokevirtual #167                // Method org/apache/camel/component/file/GenericFileEndpoint.getIdempotentKey:()Lorg/apache/camel/Expression;
      12: ifnull        43
      15: aload_0
      16: getfield      #46                 // Field endpoint:Lorg/apache/camel/component/file/GenericFileEndpoint;
      19: aload_1
      20: invokevirtual #171                // Method org/apache/camel/component/file/GenericFileEndpoint.createExchange:(Lorg/apache/camel/component/file/GenericFile;)Lorg/apache/camel/Exchange;
      23: astore_3
      24: aload_0
      25: getfield      #46                 // Field endpoint:Lorg/apache/camel/component/file/GenericFileEndpoint;
      28: invokevirtual #167                // Method org/apache/camel/component/file/GenericFileEndpoint.getIdempotentKey:()Lorg/apache/camel/Expression;
      31: aload_3
      32: ldc           #109                // class java/lang/String
      34: invokeinterface #177,  3          // InterfaceMethod org/apache/camel/Expression.evaluate:(Lorg/apache/camel/Exchange;Ljava/lang/Class;)Ljava/lang/Object;
      39: checkcast     #109                // class java/lang/String
      42: astore_2
      43: aload_2
      44: areturn

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #148                // Field camelContext:Lorg/apache/camel/CamelContext;
       4: ldc           #180                // String camelContext
       6: aload_0
       7: invokestatic  #186                // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
      15: ldc           #187                // String idempotentRepository
      17: aload_0
      18: invokestatic  #186                // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: getfield      #148                // Field camelContext:Lorg/apache/camel/CamelContext;
      26: aload_0
      27: getfield      #52                 // Field idempotentRepository:Lorg/apache/camel/spi/IdempotentRepository;
      30: iconst_1
      31: invokeinterface #193,  3          // InterfaceMethod org/apache/camel/CamelContext.addService:(Ljava/lang/Object;Z)V
      36: return

  protected void doStop() throws java.lang.Exception;
    Code:
       0: return

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/component/file/strategy/FileIdempotentRepositoryReadLockStrategy
       2: invokestatic  #201                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
