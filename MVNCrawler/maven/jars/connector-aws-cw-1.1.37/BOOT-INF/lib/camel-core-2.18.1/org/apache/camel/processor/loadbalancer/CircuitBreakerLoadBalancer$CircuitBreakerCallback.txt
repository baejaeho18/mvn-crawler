Compiled from "CircuitBreakerLoadBalancer.java"
class org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback implements org.apache.camel.AsyncCallback {
  private final org.apache.camel.AsyncCallback callback;

  private final org.apache.camel.Exchange exchange;

  final org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer this$0;

  org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer$CircuitBreakerCallback(org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer, org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer;
       5: aload_0
       6: invokespecial #23                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_3
      11: putfield      #25                 // Field callback:Lorg/apache/camel/AsyncCallback;
      14: aload_0
      15: aload_2
      16: putfield      #27                 // Field exchange:Lorg/apache/camel/Exchange;
      19: return

  public void done(boolean);
    Code:
       0: iload_1
       1: ifne          56
       4: aload_0
       5: getfield      #20                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer;
       8: aload_0
       9: getfield      #27                 // Field exchange:Lorg/apache/camel/Exchange;
      12: invokevirtual #35                 // Method org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer.hasFailed:(Lorg/apache/camel/Exchange;)Z
      15: istore_2
      16: iload_2
      17: ifne          34
      20: aload_0
      21: getfield      #20                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer;
      24: invokestatic  #39                 // Method org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer.access$000:(Lorg/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer;)Ljava/util/concurrent/atomic/AtomicInteger;
      27: iconst_0
      28: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      31: goto          56
      34: aload_0
      35: getfield      #20                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer;
      38: invokestatic  #39                 // Method org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer.access$000:(Lorg/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer;)Ljava/util/concurrent/atomic/AtomicInteger;
      41: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      44: pop
      45: aload_0
      46: getfield      #20                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer;
      49: invokestatic  #55                 // Method java/lang/System.currentTimeMillis:()J
      52: invokestatic  #59                 // Method org/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer.access$102:(Lorg/apache/camel/processor/loadbalancer/CircuitBreakerLoadBalancer;J)J
      55: pop2
      56: aload_0
      57: getfield      #25                 // Field callback:Lorg/apache/camel/AsyncCallback;
      60: iload_1
      61: invokeinterface #61,  2           // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
      66: return
}
