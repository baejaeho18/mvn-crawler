Compiled from "ManagedBacklogDebugger.java"
public class org.apache.camel.management.mbean.ManagedBacklogDebugger implements org.apache.camel.api.management.mbean.ManagedBacklogDebuggerMBean {
  private final org.apache.camel.CamelContext camelContext;

  private final org.apache.camel.processor.interceptor.BacklogDebugger backlogDebugger;

  public org.apache.camel.management.mbean.ManagedBacklogDebugger(org.apache.camel.CamelContext, org.apache.camel.processor.interceptor.BacklogDebugger);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field camelContext:Lorg/apache/camel/CamelContext;
       9: aload_0
      10: aload_2
      11: putfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
      14: return

  public void init(org.apache.camel.spi.ManagementStrategy);
    Code:
       0: return

  public org.apache.camel.CamelContext getContext();
    Code:
       0: aload_0
       1: getfield      #21                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: areturn

  public org.apache.camel.processor.interceptor.BacklogDebugger getBacklogDebugger();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: areturn

  public java.lang.String getCamelId();
    Code:
       0: aload_0
       1: getfield      #21                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: invokeinterface #40,  1           // InterfaceMethod org/apache/camel/CamelContext.getName:()Ljava/lang/String;
       9: areturn

  public java.lang.String getCamelManagementName();
    Code:
       0: aload_0
       1: getfield      #21                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: invokeinterface #44,  1           // InterfaceMethod org/apache/camel/CamelContext.getManagementName:()Ljava/lang/String;
       9: areturn

  public java.lang.String getLoggingLevel();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #49                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.getLoggingLevel:()Ljava/lang/String;
       7: areturn

  public void setLoggingLevel(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #53                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.setLoggingLevel:(Ljava/lang/String;)V
       8: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #59                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.isEnabled:()Z
       7: ireturn

  public void enableDebugger();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #62                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.enableDebugger:()V
       7: return

  public void disableDebugger();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #65                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.disableDebugger:()V
       7: return

  public void addBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #68                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.addBreakpoint:(Ljava/lang/String;)V
       8: return

  public void addConditionalBreakpoint(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #73                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.addConditionalBreakpoint:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public void removeBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #78                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.removeBreakpoint:(Ljava/lang/String;)V
       8: return

  public void removeAllBreakpoints();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #81                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.removeAllBreakpoints:()V
       7: return

  public java.util.Set<java.lang.String> getBreakpoints();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #85                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.getBreakpoints:()Ljava/util/Set;
       7: areturn

  public void resumeBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #88                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.resumeBreakpoint:(Ljava/lang/String;)V
       8: return

  public void setMessageBodyOnBreakpoint(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: aload_2
       6: invokevirtual #92                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.setMessageBodyOnBreakpoint:(Ljava/lang/String;Ljava/lang/Object;)V
       9: return

  public void setMessageBodyOnBreakpoint(java.lang.String, java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: invokeinterface #101,  1          // InterfaceMethod org/apache/camel/CamelContext.getClassResolver:()Lorg/apache/camel/spi/ClassResolver;
       9: aload_3
      10: invokeinterface #107,  2          // InterfaceMethod org/apache/camel/spi/ClassResolver.resolveMandatoryClass:(Ljava/lang/String;)Ljava/lang/Class;
      15: astore        4
      17: aload_0
      18: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
      21: aload_1
      22: aload_2
      23: aload         4
      25: invokevirtual #110                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setMessageBodyOnBreakpoint:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)V
      28: goto          39
      31: astore        4
      33: aload         4
      35: invokestatic  #116                // Method org/apache/camel/util/ObjectHelper.wrapRuntimeCamelException:(Ljava/lang/Throwable;)Lorg/apache/camel/RuntimeCamelException;
      38: athrow
      39: return
    Exception table:
       from    to  target type
           0    28    31   Class java/lang/ClassNotFoundException

  public void removeMessageBodyOnBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #125                // Method org/apache/camel/processor/interceptor/BacklogDebugger.removeMessageBodyOnBreakpoint:(Ljava/lang/String;)V
       8: return

  public void setMessageHeaderOnBreakpoint(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #131                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setMessageHeaderOnBreakpoint:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      10: goto          21
      13: astore        4
      15: aload         4
      17: invokestatic  #116                // Method org/apache/camel/util/ObjectHelper.wrapRuntimeCamelException:(Ljava/lang/Throwable;)Lorg/apache/camel/RuntimeCamelException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0    10    13   Class org/apache/camel/NoTypeConversionAvailableException

  public void setMessageHeaderOnBreakpoint(java.lang.String, java.lang.String, java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: invokeinterface #101,  1          // InterfaceMethod org/apache/camel/CamelContext.getClassResolver:()Lorg/apache/camel/spi/ClassResolver;
       9: aload         4
      11: invokeinterface #107,  2          // InterfaceMethod org/apache/camel/spi/ClassResolver.resolveMandatoryClass:(Ljava/lang/String;)Ljava/lang/Class;
      16: astore        5
      18: aload_0
      19: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
      22: aload_1
      23: aload_2
      24: aload_3
      25: aload         5
      27: invokevirtual #140                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setMessageHeaderOnBreakpoint:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)V
      30: goto          41
      33: astore        5
      35: aload         5
      37: invokestatic  #116                // Method org/apache/camel/util/ObjectHelper.wrapRuntimeCamelException:(Ljava/lang/Throwable;)Lorg/apache/camel/RuntimeCamelException;
      40: athrow
      41: return
    Exception table:
       from    to  target type
           0    30    33   Class java/lang/Exception

  public void removeMessageHeaderOnBreakpoint(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: aload_2
       6: invokevirtual #145                // Method org/apache/camel/processor/interceptor/BacklogDebugger.removeMessageHeaderOnBreakpoint:(Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public void resumeAll();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #148                // Method org/apache/camel/processor/interceptor/BacklogDebugger.resumeAll:()V
       7: return

  public void stepBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #151                // Method org/apache/camel/processor/interceptor/BacklogDebugger.stepBreakpoint:(Ljava/lang/String;)V
       8: return

  public boolean isSingleStepMode();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #154                // Method org/apache/camel/processor/interceptor/BacklogDebugger.isSingleStepMode:()Z
       7: ireturn

  public void step();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #157                // Method org/apache/camel/processor/interceptor/BacklogDebugger.step:()V
       7: return

  public java.util.Set<java.lang.String> getSuspendedBreakpointNodeIds();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #160                // Method org/apache/camel/processor/interceptor/BacklogDebugger.getSuspendedBreakpointNodeIds:()Ljava/util/Set;
       7: areturn

  public void disableBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #163                // Method org/apache/camel/processor/interceptor/BacklogDebugger.disableBreakpoint:(Ljava/lang/String;)V
       8: return

  public void enableBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #166                // Method org/apache/camel/processor/interceptor/BacklogDebugger.enableBreakpoint:(Ljava/lang/String;)V
       8: return

  public int getBodyMaxChars();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #170                // Method org/apache/camel/processor/interceptor/BacklogDebugger.getBodyMaxChars:()I
       7: ireturn

  public void setBodyMaxChars(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: iload_1
       5: invokevirtual #174                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setBodyMaxChars:(I)V
       8: return

  public boolean isBodyIncludeStreams();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #179                // Method org/apache/camel/processor/interceptor/BacklogDebugger.isBodyIncludeStreams:()Z
       7: ireturn

  public void setBodyIncludeStreams(boolean);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: iload_1
       5: invokevirtual #183                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setBodyIncludeStreams:(Z)V
       8: return

  public boolean isBodyIncludeFiles();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #188                // Method org/apache/camel/processor/interceptor/BacklogDebugger.isBodyIncludeFiles:()Z
       7: ireturn

  public void setBodyIncludeFiles(boolean);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: iload_1
       5: invokevirtual #191                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setBodyIncludeFiles:(Z)V
       8: return

  public java.lang.String dumpTracedMessagesAsXml(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #196                // Method org/apache/camel/processor/interceptor/BacklogDebugger.dumpTracedMessagesAsXml:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public long getDebugCounter();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #200                // Method org/apache/camel/processor/interceptor/BacklogDebugger.getDebugCounter:()J
       7: lreturn

  public void resetDebugCounter();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #203                // Method org/apache/camel/processor/interceptor/BacklogDebugger.resetDebugCounter:()V
       7: return

  public java.lang.String validateConditionalBreakpoint(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #21                 // Field camelContext:Lorg/apache/camel/CamelContext;
       6: aload_1
       7: invokeinterface #209,  2          // InterfaceMethod org/apache/camel/CamelContext.resolveLanguage:(Ljava/lang/String;)Lorg/apache/camel/spi/Language;
      12: astore_3
      13: aload_3
      14: aload_2
      15: invokeinterface #215,  2          // InterfaceMethod org/apache/camel/spi/Language.createPredicate:(Ljava/lang/String;)Lorg/apache/camel/Predicate;
      20: pop
      21: aconst_null
      22: areturn
      23: astore        4
      25: aload_3
      26: ifnonnull     35
      29: aload         4
      31: invokevirtual #220                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      34: areturn
      35: new           #222                // class java/lang/StringBuilder
      38: dup
      39: invokespecial #223                // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #225                // String Invalid syntax
      44: invokevirtual #229                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_2
      48: invokevirtual #229                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #231                // String  due:
      53: invokevirtual #229                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         4
      58: invokevirtual #220                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      61: invokevirtual #229                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #234                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn
    Exception table:
       from    to  target type
           2    22    23   Class java/lang/Exception

  public long getFallbackTimeout();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #239                // Method org/apache/camel/processor/interceptor/BacklogDebugger.getFallbackTimeout:()J
       7: lreturn

  public void setFallbackTimeout(long);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: lload_1
       5: invokevirtual #243                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setFallbackTimeout:(J)V
       8: return
}
