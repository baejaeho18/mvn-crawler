Compiled from "GenericFileRenameExclusiveReadLockStrategy.java"
public class org.apache.camel.component.file.strategy.GenericFileRenameExclusiveReadLockStrategy<T> implements org.apache.camel.component.file.GenericFileExclusiveReadLockStrategy<T> {
  private static final org.slf4j.Logger LOG;

  private long timeout;

  private long checkInterval;

  private org.apache.camel.LoggingLevel readLockLoggingLevel;

  public org.apache.camel.component.file.strategy.GenericFileRenameExclusiveReadLockStrategy();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #24                 // Field org/apache/camel/LoggingLevel.WARN:Lorg/apache/camel/LoggingLevel;
       8: putfield      #26                 // Field readLockLoggingLevel:Lorg/apache/camel/LoggingLevel;
      11: return

  public void prepareOnStartup(org.apache.camel.component.file.GenericFileOperations<T>, org.apache.camel.component.file.GenericFileEndpoint<T>) throws java.lang.Exception;
    Code:
       0: return

  public boolean acquireExclusiveReadLock(org.apache.camel.component.file.GenericFileOperations<T>, org.apache.camel.component.file.GenericFile<T>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #47                 // String Waiting for exclusive read lock to file: {}
       5: aload_2
       6: invokeinterface #53,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      11: new           #55                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_2
      19: invokevirtual #62                 // Method org/apache/camel/component/file/GenericFile.getFileName:()Ljava/lang/String;
      22: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #68                 // String .camelExclusiveReadLock
      27: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: astore        4
      35: aload_2
      36: aload_2
      37: invokevirtual #75                 // Method org/apache/camel/component/file/GenericFile.copyFrom:(Lorg/apache/camel/component/file/GenericFile;)Lorg/apache/camel/component/file/GenericFile;
      40: astore        5
      42: aload         5
      44: aload         4
      46: invokevirtual #79                 // Method org/apache/camel/component/file/GenericFile.changeFileName:(Ljava/lang/String;)V
      49: new           #81                 // class org/apache/camel/util/StopWatch
      52: dup
      53: invokespecial #82                 // Method org/apache/camel/util/StopWatch."<init>":()V
      56: astore        6
      58: iconst_0
      59: istore        7
      61: iload         7
      63: ifne          236
      66: aload_0
      67: getfield      #90                 // Field timeout:J
      70: lconst_0
      71: lcmp
      72: ifle          135
      75: aload         6
      77: invokevirtual #94                 // Method org/apache/camel/util/StopWatch.taken:()J
      80: lstore        8
      82: lload         8
      84: aload_0
      85: getfield      #90                 // Field timeout:J
      88: lcmp
      89: ifle          135
      92: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      95: aload_0
      96: getfield      #26                 // Field readLockLoggingLevel:Lorg/apache/camel/LoggingLevel;
      99: new           #55                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #96                 // String Cannot acquire read lock within
     108: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: getfield      #90                 // Field timeout:J
     115: invokevirtual #99                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     118: ldc           #101                // String  millis. Will skip the file:
     120: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_2
     124: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokestatic  #110                // Method org/apache/camel/util/CamelLogger.log:(Lorg/slf4j/Logger;Lorg/apache/camel/LoggingLevel;Ljava/lang/String;)V
     133: iconst_0
     134: ireturn
     135: aload_1
     136: aload_2
     137: invokevirtual #113                // Method org/apache/camel/component/file/GenericFile.getAbsoluteFilePath:()Ljava/lang/String;
     140: aload         5
     142: invokevirtual #113                // Method org/apache/camel/component/file/GenericFile.getAbsoluteFilePath:()Ljava/lang/String;
     145: invokeinterface #117,  3          // InterfaceMethod org/apache/camel/component/file/GenericFileOperations.renameFile:(Ljava/lang/String;Ljava/lang/String;)Z
     150: istore        7
     152: goto          185
     155: astore        10
     157: aload         10
     159: invokevirtual #121                // Method org/apache/camel/component/file/GenericFileOperationFailedException.getCause:()Ljava/lang/Throwable;
     162: ifnull        182
     165: aload         10
     167: invokevirtual #121                // Method org/apache/camel/component/file/GenericFileOperationFailedException.getCause:()Ljava/lang/Throwable;
     170: instanceof    #123                // class java/io/FileNotFoundException
     173: ifeq          182
     176: iconst_0
     177: istore        7
     179: goto          185
     182: aload         10
     184: athrow
     185: iload         7
     187: ifeq          220
     190: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
     193: ldc           #125                // String Acquired exclusive read lock to file: {}
     195: aload_2
     196: invokeinterface #53,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     201: aload_1
     202: aload         5
     204: invokevirtual #113                // Method org/apache/camel/component/file/GenericFile.getAbsoluteFilePath:()Ljava/lang/String;
     207: aload_2
     208: invokevirtual #113                // Method org/apache/camel/component/file/GenericFile.getAbsoluteFilePath:()Ljava/lang/String;
     211: invokeinterface #117,  3          // InterfaceMethod org/apache/camel/component/file/GenericFileOperations.renameFile:(Ljava/lang/String;Ljava/lang/String;)Z
     216: pop
     217: goto          61
     220: aload_0
     221: invokespecial #129                // Method sleep:()Z
     224: istore        10
     226: iload         10
     228: ifeq          233
     231: iconst_0
     232: ireturn
     233: goto          61
     236: iconst_1
     237: ireturn
    Exception table:
       from    to  target type
         135   152   155   Class org/apache/camel/component/file/GenericFileOperationFailedException

  public void releaseExclusiveReadLockOnAbort(org.apache.camel.component.file.GenericFileOperations<T>, org.apache.camel.component.file.GenericFile<T>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: return

  public void releaseExclusiveReadLockOnRollback(org.apache.camel.component.file.GenericFileOperations<T>, org.apache.camel.component.file.GenericFile<T>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: return

  public void releaseExclusiveReadLockOnCommit(org.apache.camel.component.file.GenericFileOperations<T>, org.apache.camel.component.file.GenericFile<T>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: return

  private boolean sleep();
    Code:
       0: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #153                // String Exclusive read lock not granted. Sleeping for {} millis.
       5: aload_0
       6: getfield      #155                // Field checkInterval:J
       9: invokestatic  #161                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokeinterface #53,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #155                // Field checkInterval:J
      21: invokestatic  #166                // Method java/lang/Thread.sleep:(J)V
      24: iconst_0
      25: ireturn
      26: astore_1
      27: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #168                // String Sleep interrupted while waiting for exclusive read lock, so breaking out
      32: invokeinterface #171,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      37: iconst_1
      38: ireturn
    Exception table:
       from    to  target type
          17    25    26   Class java/lang/InterruptedException

  public long getTimeout();
    Code:
       0: aload_0
       1: getfield      #90                 // Field timeout:J
       4: lreturn

  public void setTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #90                 // Field timeout:J
       5: return

  public void setCheckInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #155                // Field checkInterval:J
       5: return

  public void setReadLockLoggingLevel(org.apache.camel.LoggingLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field readLockLoggingLevel:Lorg/apache/camel/LoggingLevel;
       5: return

  public void setMarkerFiler(boolean);
    Code:
       0: return

  public void setDeleteOrphanLockFiles(boolean);
    Code:
       0: return

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/component/file/strategy/GenericFileRenameExclusiveReadLockStrategy
       2: invokestatic  #190                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
