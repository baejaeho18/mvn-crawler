Compiled from "ShardList.java"
class org.apache.camel.component.aws.ddbstream.ShardList {
  private final org.slf4j.Logger log;

  private final java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Shard> shards;

  org.apache.camel.component.aws.ddbstream.ShardList();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // class org/apache/camel/component/aws/ddbstream/ShardList
       7: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      10: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      13: aload_0
      14: new           #5                  // class java/util/HashMap
      17: dup
      18: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      21: putfield      #7                  // Field shards:Ljava/util/Map;
      24: return

  void addAll(java.util.Collection<com.amazonaws.services.dynamodbv2.model.Shard>);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_2
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #11                 // class com/amazonaws/services/dynamodbv2/model/Shard
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #12                 // Method add:(Lcom/amazonaws/services/dynamodbv2/model/Shard;)V
      31: goto          7
      34: return

  void add(com.amazonaws.services.dynamodbv2.model.Shard);
    Code:
       0: aload_0
       1: getfield      #7                  // Field shards:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #13                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getShardId:()Ljava/lang/String;
       8: aload_1
       9: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  com.amazonaws.services.dynamodbv2.model.Shard nextAfter(com.amazonaws.services.dynamodbv2.model.Shard);
    Code:
       0: aload_0
       1: getfield      #7                  // Field shards:Ljava/util/Map;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          53
      24: aload_2
      25: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #11                 // class com/amazonaws/services/dynamodbv2/model/Shard
      33: astore_3
      34: aload_1
      35: invokevirtual #13                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getShardId:()Ljava/lang/String;
      38: aload_3
      39: invokevirtual #16                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getParentShardId:()Ljava/lang/String;
      42: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifeq          50
      48: aload_3
      49: areturn
      50: goto          15
      53: new           #18                 // class java/lang/IllegalStateException
      56: dup
      57: new           #19                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #21                 // String Unable to find the next shard for
      66: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: ldc           #24                 // String  in
      75: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: getfield      #7                  // Field shards:Ljava/util/Map;
      82: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      91: athrow

  com.amazonaws.services.dynamodbv2.model.Shard first();
    Code:
       0: aload_0
       1: getfield      #7                  // Field shards:Ljava/util/Map;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          55
      24: aload_1
      25: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #11                 // class com/amazonaws/services/dynamodbv2/model/Shard
      33: astore_2
      34: aload_0
      35: getfield      #7                  // Field shards:Ljava/util/Map;
      38: aload_2
      39: invokevirtual #16                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getParentShardId:()Ljava/lang/String;
      42: invokeinterface #27,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      47: ifne          52
      50: aload_2
      51: areturn
      52: goto          15
      55: new           #18                 // class java/lang/IllegalStateException
      58: dup
      59: new           #19                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #28                 // String Unable to find an unparented shard in
      68: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: getfield      #7                  // Field shards:Ljava/util/Map;
      75: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      84: athrow

  com.amazonaws.services.dynamodbv2.model.Shard last();
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: invokespecial #6                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field shards:Ljava/util/Map;
      12: invokeinterface #15,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          57
      32: aload_2
      33: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #11                 // class com/amazonaws/services/dynamodbv2/model/Shard
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokevirtual #16                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getParentShardId:()Ljava/lang/String;
      47: aload_3
      48: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: goto          23
      57: aload_0
      58: getfield      #7                  // Field shards:Ljava/util/Map;
      61: invokeinterface #15,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      66: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      71: astore_2
      72: aload_2
      73: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      78: ifeq          109
      81: aload_2
      82: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: checkcast     #11                 // class com/amazonaws/services/dynamodbv2/model/Shard
      90: astore_3
      91: aload_1
      92: aload_3
      93: invokevirtual #13                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getShardId:()Ljava/lang/String;
      96: invokeinterface #27,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     101: ifne          106
     104: aload_3
     105: areturn
     106: goto          72
     109: new           #18                 // class java/lang/IllegalStateException
     112: dup
     113: new           #19                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #29                 // String Unable to find a shard with no children
     122: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_0
     126: getfield      #7                  // Field shards:Ljava/util/Map;
     129: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     138: athrow

  com.amazonaws.services.dynamodbv2.model.Shard afterSeq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #30                 // Field org/apache/camel/component/aws/ddbstream/BigIntComparisons$Conditions.LT:Lorg/apache/camel/component/aws/ddbstream/BigIntComparisons$Conditions;
       5: invokevirtual #31                 // Method atAfterSeq:(Ljava/lang/String;Lorg/apache/camel/component/aws/ddbstream/BigIntComparisons;)Lcom/amazonaws/services/dynamodbv2/model/Shard;
       8: areturn

  com.amazonaws.services.dynamodbv2.model.Shard atSeq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #32                 // Field org/apache/camel/component/aws/ddbstream/BigIntComparisons$Conditions.LTEQ:Lorg/apache/camel/component/aws/ddbstream/BigIntComparisons$Conditions;
       5: invokevirtual #31                 // Method atAfterSeq:(Ljava/lang/String;Lorg/apache/camel/component/aws/ddbstream/BigIntComparisons;)Lcom/amazonaws/services/dynamodbv2/model/Shard;
       8: areturn

  com.amazonaws.services.dynamodbv2.model.Shard atAfterSeq(java.lang.String, org.apache.camel.component.aws.ddbstream.BigIntComparisons);
    Code:
       0: new           #33                 // class java/math/BigInteger
       3: dup
       4: aload_1
       5: invokespecial #34                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: new           #35                 // class java/util/ArrayList
      12: dup
      13: invokespecial #36                 // Method java/util/ArrayList."<init>":()V
      16: astore        4
      18: aload         4
      20: aload_0
      21: getfield      #7                  // Field shards:Ljava/util/Map;
      24: invokeinterface #15,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      29: invokeinterface #37,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      34: pop
      35: aload         4
      37: getstatic     #38                 // Field org/apache/camel/component/aws/ddbstream/ShardList$StartingSequenceNumberComparator.INSTANCE:Lorg/apache/camel/component/aws/ddbstream/ShardList$StartingSequenceNumberComparator;
      40: invokestatic  #39                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      43: aload         4
      45: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore        5
      52: aload         5
      54: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          120
      62: aload         5
      64: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #11                 // class com/amazonaws/services/dynamodbv2/model/Shard
      72: astore        6
      74: aload         6
      76: invokevirtual #41                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getSequenceNumberRange:()Lcom/amazonaws/services/dynamodbv2/model/SequenceNumberRange;
      79: invokevirtual #42                 // Method com/amazonaws/services/dynamodbv2/model/SequenceNumberRange.getEndingSequenceNumber:()Ljava/lang/String;
      82: ifnull        117
      85: new           #33                 // class java/math/BigInteger
      88: dup
      89: aload         6
      91: invokevirtual #41                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getSequenceNumberRange:()Lcom/amazonaws/services/dynamodbv2/model/SequenceNumberRange;
      94: invokevirtual #42                 // Method com/amazonaws/services/dynamodbv2/model/SequenceNumberRange.getEndingSequenceNumber:()Ljava/lang/String;
      97: invokespecial #34                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
     100: astore        7
     102: aload_2
     103: aload_3
     104: aload         7
     106: invokeinterface #43,  3           // InterfaceMethod org/apache/camel/component/aws/ddbstream/BigIntComparisons.matches:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Z
     111: ifeq          117
     114: aload         6
     116: areturn
     117: goto          52
     120: aload_0
     121: getfield      #7                  // Field shards:Ljava/util/Map;
     124: invokeinterface #44,  1           // InterfaceMethod java/util/Map.size:()I
     129: ifle          152
     132: aload         4
     134: aload         4
     136: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
     141: iconst_1
     142: isub
     143: invokeinterface #46,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     148: checkcast     #11                 // class com/amazonaws/services/dynamodbv2/model/Shard
     151: areturn
     152: new           #18                 // class java/lang/IllegalStateException
     155: dup
     156: new           #19                 // class java/lang/StringBuilder
     159: dup
     160: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     163: ldc           #47                 // String Unable to find a shard with appropriate sequence numbers for
     165: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_1
     169: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: ldc           #24                 // String  in
     174: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: aload_0
     178: getfield      #7                  // Field shards:Ljava/util/Map;
     181: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     184: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     190: athrow

  void removeOlderThan(com.amazonaws.services.dynamodbv2.model.Shard);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getParentShardId:()Ljava/lang/String;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: aload_2
       8: ifnull        48
      11: aload_0
      12: getfield      #7                  // Field shards:Ljava/util/Map;
      15: aload_2
      16: invokeinterface #48,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #11                 // class com/amazonaws/services/dynamodbv2/model/Shard
      24: astore        4
      26: aload         4
      28: ifnonnull     36
      31: aconst_null
      32: astore_2
      33: goto          45
      36: iinc          3, 1
      39: aload         4
      41: invokevirtual #16                 // Method com/amazonaws/services/dynamodbv2/model/Shard.getParentShardId:()Ljava/lang/String;
      44: astore_2
      45: goto          7
      48: aload_0
      49: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      52: ldc           #49                 // String removed {} shards from the store, new size is {}
      54: iload_3
      55: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: aload_0
      59: getfield      #7                  // Field shards:Ljava/util/Map;
      62: invokeinterface #44,  1           // InterfaceMethod java/util/Map.size:()I
      67: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: invokeinterface #51,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      75: return

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #52                 // String ShardList{shards=
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field shards:Ljava/util/Map;
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #53                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
