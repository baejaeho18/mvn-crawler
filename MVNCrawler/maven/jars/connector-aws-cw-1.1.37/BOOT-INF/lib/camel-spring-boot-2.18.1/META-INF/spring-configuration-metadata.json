{
  "groups": [{
    "name": "camel.springboot",
    "type": "org.apache.camel.spring.boot.CamelConfigurationProperties",
    "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties"
  }],
  "properties": [
    {
      "name": "camel.springboot.allow-use-original-message",
      "type": "java.lang.Boolean",
      "description": "Sets whether to allow access to the original message from Camel's error handler,\n or from org.apache.camel.spi.UnitOfWork.getOriginalInMessage().\n Turning this off can optimize performance, as defensive copy of the original message is not needed.\n\n Default is true.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.auto-startup",
      "type": "java.lang.Boolean",
      "description": "Sets whether the object should automatically start when Camel starts.\n Important: Currently only routes can be disabled, as CamelContext's are always started.\n Note: When setting auto startup false on CamelContext then that takes precedence\n and no routes is started. You would need to start CamelContext explicit using\n the org.apache.camel.CamelContext.start() method, to start the context, and then\n you would need to start the routes manually using CamelContext.startRoute(String).\n\n Default is true to always start up.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.consumer-template-cache-size",
      "type": "java.lang.Integer",
      "description": "Consumer template endpoints cache size.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": 1000
    },
    {
      "name": "camel.springboot.endpoint-runtime-statistics-enabled",
      "type": "java.lang.Boolean",
      "description": "Sets whether endpoint runtime statistics is enabled (gathers runtime usage of each incoming and outgoing endpoints).\n\n The default value is true.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.file-configurations",
      "type": "java.lang.String",
      "description": "Directory to load additional configuration files that contains\n configuration values that takes precedence over any other configuration.\n This can be used to refer to files that may have secret configuration that\n has been mounted on the file system for containers.\n <p/>\n You must use either <tt>file:<\/tt> or <tt>classpath:<\/tt> as prefix to load\n from file system or classpath. Then you can specify a pattern to load\n from sub directories and a name pattern such as <tt>file:/var/app/secret/*.properties<\/tt>",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties"
    },
    {
      "name": "camel.springboot.handle-fault",
      "type": "java.lang.Boolean",
      "description": "Sets whether fault handling is enabled or not.\n\n Default is false.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.jmx-create-connector",
      "type": "java.lang.Boolean",
      "description": "Whether JMX connector is created, allowing clients to connect remotely\n\n The default value is false.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.jmx-enabled",
      "type": "java.lang.Boolean",
      "description": "Enable JMX in your Camel application.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.jmx-management-name-pattern",
      "type": "java.lang.String",
      "description": "The naming pattern for creating the CamelContext JMX management name.\n\n The default pattern is #name#",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": "#name#"
    },
    {
      "name": "camel.springboot.jmx-management-statistics-level",
      "type": "org.apache.camel.ManagementStatisticsLevel",
      "description": "Sets the JMX statistics level\n The level can be set to Extended to gather additional information\n\n The default value is Default.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties"
    },
    {
      "name": "camel.springboot.log-debug-max-chars",
      "type": "java.lang.Integer",
      "description": "Is used to limit the maximum length of the logging Camel message bodies. If the message body\n is longer than the limit, the log message is clipped. Use a value of 0 or negative to have unlimited length.\n Use for example 1000 to log at at most 1000 chars.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": 0
    },
    {
      "name": "camel.springboot.log-exhausted-message-body",
      "type": "java.lang.Boolean",
      "description": "Sets whether to log exhausted message body with message history.\n\n Default is false.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.main-run-controller",
      "type": "java.lang.Boolean",
      "description": "Whether to use the main run controller to ensure the Spring-Boot application\n keeps running until being stopped or the JVM terminated.\n You typically only need this if you run Spring-Boot standalone.\n If you run Spring-Boot with spring-boot-starter-web then the web container keeps the JVM running.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.message-history",
      "type": "java.lang.Boolean",
      "description": "Sets whether message history is enabled or not.\n\n Default is true.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.name",
      "type": "java.lang.String",
      "description": "Sets the name of the CamelContext.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties"
    },
    {
      "name": "camel.springboot.producer-template-cache-size",
      "type": "java.lang.Integer",
      "description": "Producer template endpoints cache size.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": 1000
    },
    {
      "name": "camel.springboot.stream-caching",
      "type": "java.lang.Boolean",
      "description": "Sets whether stream caching is enabled or not.\n\n Default is false.\n\n @deprecated use {@link #streamCachingEnabled}",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false,
      "deprecated": true,
      "deprecation": {}
    },
    {
      "name": "camel.springboot.stream-caching-any-spool-rules",
      "type": "java.lang.Boolean",
      "description": "Sets whether if just any of the {@link org.apache.camel.spi.StreamCachingStrategy.SpoolRule} rules\n returns <tt>true<\/tt> then shouldSpoolCache(long) returns <tt>true<\/tt>.\n If this option is <tt>false<\/tt>, then <b>all<\/b> the {@link org.apache.camel.spi.StreamCachingStrategy.SpoolRule} must\n return <tt>true<\/tt>.\n <p/>\n The default value is <tt>false<\/tt> which means that all the rules must return <tt>true<\/tt>.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.stream-caching-buffer-size",
      "type": "java.lang.Integer",
      "description": "Sets the stream caching buffer size to use when allocating in-memory buffers used for in-memory stream caches.\n <p/>\n The default size is {@link org.apache.camel.util.IOHelper#DEFAULT_BUFFER_SIZE}",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": 0
    },
    {
      "name": "camel.springboot.stream-caching-enabled",
      "type": "java.lang.Boolean",
      "description": "Sets whether stream caching is enabled or not.\n\n Default is false.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.stream-caching-remove-spool-directory-when-stopping",
      "type": "java.lang.Boolean",
      "description": "Whether to remove stream caching temporary directory when stopping.\n <p/>\n This option is default <tt>true<\/tt>",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.stream-caching-spool-chiper",
      "type": "java.lang.String",
      "description": "Sets a stream caching chiper name to use when spooling to disk to write with encryption.\n <p/>\n By default the data is not encrypted.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties"
    },
    {
      "name": "camel.springboot.stream-caching-spool-directory",
      "type": "java.lang.String",
      "description": "Sets the stream caching spool (temporary) directory to use for overflow and spooling to disk.\n <p/>\n If no spool directory has been explicit configured, then a temporary directory\n is created in the <tt>java.io.tmpdir<\/tt> directory.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties"
    },
    {
      "name": "camel.springboot.stream-caching-spool-threshold",
      "type": "java.lang.Long",
      "description": "Stream caching threshold in bytes when overflow to disk is activated.\n <p/>\n The default threshold is {@link org.apache.camel.StreamCache#DEFAULT_SPOOL_THRESHOLD} bytes (eg 128kb).\n Use <tt>-1<\/tt> to disable overflow to disk.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": 0
    },
    {
      "name": "camel.springboot.stream-caching-spool-used-heap-memory-limit",
      "type": "java.lang.String",
      "description": "Sets what the upper bounds should be when streamCachingSpoolUsedHeapMemoryThreshold is in use.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties"
    },
    {
      "name": "camel.springboot.stream-caching-spool-used-heap-memory-threshold",
      "type": "java.lang.Integer",
      "description": "Sets a percentage (1-99) of used heap memory threshold to activate stream caching spooling to disk.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": 0
    },
    {
      "name": "camel.springboot.stream-caching-statistics-enabled",
      "type": "java.lang.Boolean",
      "description": "Sets whether stream caching statistics is enabled.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.trace-formatter-show-body",
      "type": "java.lang.Boolean",
      "description": "Tracer should output message body",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.trace-formatter-show-bread-crumb",
      "type": "java.lang.Boolean",
      "description": "Tracer should output breadcrumb",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.trace-formatter-show-exception",
      "type": "java.lang.Boolean",
      "description": "Tracer should output exception",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.trace-formatter-show-exchange-id",
      "type": "java.lang.Boolean",
      "description": "Tracer should output exchange id",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.trace-formatter-show-exchange-pattern",
      "type": "java.lang.Boolean",
      "description": "Tracer should output message exchange pattern (MEP)",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.trace-formatter-show-headers",
      "type": "java.lang.Boolean",
      "description": "Tracer should output message headers",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.trace-formatter-show-node",
      "type": "java.lang.Boolean",
      "description": "Tracer should output EIP node",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.trace-formatter-show-properties",
      "type": "java.lang.Boolean",
      "description": "Tracer should output exchange properties",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.trace-formatter-show-route-id",
      "type": "java.lang.Boolean",
      "description": "Tracer should output route id",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.trace-formatter-show-short-exchange-id",
      "type": "java.lang.Boolean",
      "description": "Tracer should output short exchange id",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.tracer-formatter-bread-crumb-length",
      "type": "java.lang.Integer",
      "description": "Tracer maximum length of breadcrumb ids",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties"
    },
    {
      "name": "camel.springboot.tracer-formatter-max-chars",
      "type": "java.lang.Integer",
      "description": "Tracer maximum characters in total",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": 10000
    },
    {
      "name": "camel.springboot.tracer-formatter-node-length",
      "type": "java.lang.Integer",
      "description": "Tracer maximum length of node",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties"
    },
    {
      "name": "camel.springboot.tracer-formatter-show-body-type",
      "type": "java.lang.Boolean",
      "description": "Tracer should output message body type",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.tracing",
      "type": "java.lang.Boolean",
      "description": "Sets whether tracing is enabled or not.\n\n Default is false.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": false
    },
    {
      "name": "camel.springboot.type-conversion",
      "type": "java.lang.Boolean",
      "description": "Enables enhanced Camel/Spring type conversion.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": true
    },
    {
      "name": "camel.springboot.xml-rests",
      "type": "java.lang.String",
      "description": "Directory to scan for adding additional XML rests.\n You can turn this off by setting the value to false.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": "classpath:camel-rest/*.xml"
    },
    {
      "name": "camel.springboot.xml-routes",
      "type": "java.lang.String",
      "description": "Directory to scan for adding additional XML routes.\n You can turn this off by setting the value to false.",
      "sourceType": "org.apache.camel.spring.boot.CamelConfigurationProperties",
      "defaultValue": "classpath:camel/*.xml"
    }
  ],
  "hints": []
}