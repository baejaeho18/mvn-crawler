Compiled from "AnnotationCustomizableTypeExcludeFilter.java"
public abstract class org.springframework.boot.test.autoconfigure.filter.AnnotationCustomizableTypeExcludeFilter extends org.springframework.boot.context.TypeExcludeFilter implements org.springframework.beans.factory.BeanClassLoaderAware {
  private java.lang.ClassLoader classLoader;

  public org.springframework.boot.test.autoconfigure.filter.AnnotationCustomizableTypeExcludeFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/context/TypeExcludeFilter."<init>":()V
       4: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public boolean match(org.springframework.core.type.classreading.MetadataReader, org.springframework.core.type.classreading.MetadataReaderFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method hasAnnotation:()Z
       4: ifeq          31
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #4                  // Method include:(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z
      13: ifeq          25
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokevirtual #5                  // Method exclude:(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn
      31: iconst_0
      32: ireturn

  protected boolean include(org.springframework.core.type.classreading.MetadataReader, org.springframework.core.type.classreading.MetadataReaderFactory) throws java.io.IOException;
    Code:
       0: new           #6                  // class org/springframework/boot/test/autoconfigure/filter/FilterAnnotations
       3: dup
       4: aload_0
       5: getfield      #2                  // Field classLoader:Ljava/lang/ClassLoader;
       8: aload_0
       9: getstatic     #7                  // Field org/springframework/boot/test/autoconfigure/filter/AnnotationCustomizableTypeExcludeFilter$FilterType.INCLUDE:Lorg/springframework/boot/test/autoconfigure/filter/AnnotationCustomizableTypeExcludeFilter$FilterType;
      12: invokevirtual #8                  // Method getFilters:(Lorg/springframework/boot/test/autoconfigure/filter/AnnotationCustomizableTypeExcludeFilter$FilterType;)[Lorg/springframework/context/annotation/ComponentScan$Filter;
      15: invokespecial #9                  // Method org/springframework/boot/test/autoconfigure/filter/FilterAnnotations."<init>":(Ljava/lang/ClassLoader;[Lorg/springframework/context/annotation/ComponentScan$Filter;)V
      18: aload_1
      19: aload_2
      20: invokevirtual #10                 // Method org/springframework/boot/test/autoconfigure/filter/FilterAnnotations.anyMatches:(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z
      23: ifeq          28
      26: iconst_1
      27: ireturn
      28: aload_0
      29: invokevirtual #11                 // Method isUseDefaultFilters:()Z
      32: ifeq          46
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokevirtual #12                 // Method defaultInclude:(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: iconst_0
      47: ireturn

  protected boolean defaultInclude(org.springframework.core.type.classreading.MetadataReader, org.springframework.core.type.classreading.MetadataReaderFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getDefaultIncludes:()Ljava/util/Set;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          46
      19: aload_3
      20: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #17                 // class java/lang/Class
      28: astore        4
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload         4
      35: invokevirtual #18                 // Method isTypeOrAnnotated:(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;Ljava/lang/Class;)Z
      38: ifeq          43
      41: iconst_1
      42: ireturn
      43: goto          10
      46: iconst_0
      47: ireturn

  protected boolean exclude(org.springframework.core.type.classreading.MetadataReader, org.springframework.core.type.classreading.MetadataReaderFactory) throws java.io.IOException;
    Code:
       0: new           #6                  // class org/springframework/boot/test/autoconfigure/filter/FilterAnnotations
       3: dup
       4: aload_0
       5: getfield      #2                  // Field classLoader:Ljava/lang/ClassLoader;
       8: aload_0
       9: getstatic     #19                 // Field org/springframework/boot/test/autoconfigure/filter/AnnotationCustomizableTypeExcludeFilter$FilterType.EXCLUDE:Lorg/springframework/boot/test/autoconfigure/filter/AnnotationCustomizableTypeExcludeFilter$FilterType;
      12: invokevirtual #8                  // Method getFilters:(Lorg/springframework/boot/test/autoconfigure/filter/AnnotationCustomizableTypeExcludeFilter$FilterType;)[Lorg/springframework/context/annotation/ComponentScan$Filter;
      15: invokespecial #9                  // Method org/springframework/boot/test/autoconfigure/filter/FilterAnnotations."<init>":(Ljava/lang/ClassLoader;[Lorg/springframework/context/annotation/ComponentScan$Filter;)V
      18: aload_1
      19: aload_2
      20: invokevirtual #10                 // Method org/springframework/boot/test/autoconfigure/filter/FilterAnnotations.anyMatches:(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z
      23: ireturn

  protected final boolean isTypeOrAnnotated(org.springframework.core.type.classreading.MetadataReader, org.springframework.core.type.classreading.MetadataReaderFactory, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: new           #20                 // class org/springframework/core/type/filter/AnnotationTypeFilter
       3: dup
       4: aload_3
       5: invokespecial #21                 // Method org/springframework/core/type/filter/AnnotationTypeFilter."<init>":(Ljava/lang/Class;)V
       8: astore        4
      10: new           #22                 // class org/springframework/core/type/filter/AssignableTypeFilter
      13: dup
      14: aload_3
      15: invokespecial #23                 // Method org/springframework/core/type/filter/AssignableTypeFilter."<init>":(Ljava/lang/Class;)V
      18: astore        5
      20: aload         4
      22: aload_1
      23: aload_2
      24: invokevirtual #24                 // Method org/springframework/core/type/filter/AnnotationTypeFilter.match:(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z
      27: ifne          40
      30: aload         5
      32: aload_1
      33: aload_2
      34: invokevirtual #25                 // Method org/springframework/core/type/filter/AssignableTypeFilter.match:(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  protected abstract boolean hasAnnotation();

  protected abstract org.springframework.context.annotation.ComponentScan$Filter[] getFilters(org.springframework.boot.test.autoconfigure.filter.AnnotationCustomizableTypeExcludeFilter$FilterType);

  protected abstract boolean isUseDefaultFilters();

  protected abstract java.util.Set<java.lang.Class<?>> getDefaultIncludes();
}
