Compiled from "JsonStream.java"
public class org.apache.camel.jsonpath.JsonStream extends java.io.FilterInputStream {
  private static final byte[] BOM_UTF_32BE;

  private static final byte[] BOM_UTF_32LE;

  private static final byte[] BOM_UTF_32_2143;

  private static final byte[] BOM_UTF_32_3412;

  private static final byte[] BOM_UTF_16BE;

  private static final byte[] BOM_UTF_16LE;

  private static final byte[] BOM_UTF_8;

  private final byte[] fourByteBuffer;

  private int inputIndex;

  private int inputEnd;

  private final java.nio.charset.Charset encoding;

  public org.apache.camel.jsonpath.JsonStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_4
       7: newarray       byte
       9: putfield      #2                  // Field fourByteBuffer:[B
      12: aload_1
      13: ifnonnull     26
      16: new           #3                  // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #4                  // String input stream is null
      22: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: aload_0
      28: iconst_0
      29: dup_x1
      30: putfield      #6                  // Field inputIndex:I
      33: putfield      #7                  // Field inputEnd:I
      36: aconst_null
      37: astore_2
      38: aload_0
      39: iconst_4
      40: invokespecial #8                  // Method loadAtLeast:(I)Z
      43: ifeq          72
      46: aload_0
      47: invokespecial #9                  // Method getEncodingFromBOM:()Ljava/nio/charset/Charset;
      50: astore_2
      51: aload_2
      52: ifnonnull     85
      55: aload_0
      56: invokespecial #10                 // Method getUTF32EncodingFromNullPattern:()Ljava/nio/charset/Charset;
      59: astore_2
      60: aload_2
      61: ifnonnull     85
      64: aload_0
      65: invokespecial #11                 // Method getUTF16EncodingFromNullPattern:()Ljava/nio/charset/Charset;
      68: astore_2
      69: goto          85
      72: aload_0
      73: iconst_2
      74: invokespecial #8                  // Method loadAtLeast:(I)Z
      77: ifeq          85
      80: aload_0
      81: invokespecial #11                 // Method getUTF16EncodingFromNullPattern:()Ljava/nio/charset/Charset;
      84: astore_2
      85: aload_2
      86: ifnonnull     95
      89: ldc           #12                 // String UTF-8
      91: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      94: astore_2
      95: aload_0
      96: aload_2
      97: putfield      #14                 // Field encoding:Ljava/nio/charset/Charset;
     100: return

  public java.nio.charset.Charset getEncoding();
    Code:
       0: aload_0
       1: getfield      #14                 // Field encoding:Ljava/nio/charset/Charset;
       4: areturn

  private boolean loadAtLeast(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field inputEnd:I
       4: aload_0
       5: getfield      #6                  // Field inputIndex:I
       8: isub
       9: istore_2
      10: iload_2
      11: iload_1
      12: if_icmpge     65
      15: aload_0
      16: getfield      #15                 // Field in:Ljava/io/InputStream;
      19: aload_0
      20: getfield      #2                  // Field fourByteBuffer:[B
      23: aload_0
      24: getfield      #7                  // Field inputEnd:I
      27: aload_0
      28: getfield      #2                  // Field fourByteBuffer:[B
      31: arraylength
      32: aload_0
      33: getfield      #7                  // Field inputEnd:I
      36: isub
      37: invokevirtual #16                 // Method java/io/InputStream.read:([BII)I
      40: istore_3
      41: iload_3
      42: iconst_1
      43: if_icmpge     48
      46: iconst_0
      47: ireturn
      48: aload_0
      49: dup
      50: getfield      #7                  // Field inputEnd:I
      53: iload_3
      54: iadd
      55: putfield      #7                  // Field inputEnd:I
      58: iload_2
      59: iload_3
      60: iadd
      61: istore_2
      62: goto          10
      65: iconst_1
      66: ireturn

  private java.nio.charset.Charset getEncodingFromBOM() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field fourByteBuffer:[B
       4: getstatic     #17                 // Field BOM_UTF_32BE:[B
       7: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
      10: ifeq          24
      13: aload_0
      14: iconst_4
      15: putfield      #6                  // Field inputIndex:I
      18: ldc           #19                 // String UTF-32BE
      20: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      23: areturn
      24: aload_0
      25: getfield      #2                  // Field fourByteBuffer:[B
      28: getstatic     #20                 // Field BOM_UTF_32LE:[B
      31: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
      34: ifeq          48
      37: aload_0
      38: iconst_4
      39: putfield      #6                  // Field inputIndex:I
      42: ldc           #21                 // String UTF-32LE
      44: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      47: areturn
      48: aload_0
      49: getfield      #2                  // Field fourByteBuffer:[B
      52: getstatic     #22                 // Field BOM_UTF_32_2143:[B
      55: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
      58: ifeq          68
      61: aload_0
      62: ldc           #23                 // String 2143
      64: invokespecial #24                 // Method getExceptionUnsupportedUCS4:(Ljava/lang/String;)Ljava/io/CharConversionException;
      67: athrow
      68: aload_0
      69: getfield      #2                  // Field fourByteBuffer:[B
      72: getstatic     #25                 // Field BOM_UTF_32_3412:[B
      75: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
      78: ifeq          88
      81: aload_0
      82: ldc           #26                 // String 3412
      84: invokespecial #24                 // Method getExceptionUnsupportedUCS4:(Ljava/lang/String;)Ljava/io/CharConversionException;
      87: athrow
      88: aload_0
      89: getfield      #2                  // Field fourByteBuffer:[B
      92: iconst_2
      93: invokestatic  #27                 // Method java/util/Arrays.copyOf:([BI)[B
      96: astore_1
      97: aload_1
      98: getstatic     #28                 // Field BOM_UTF_16BE:[B
     101: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
     104: ifeq          118
     107: aload_0
     108: iconst_2
     109: putfield      #6                  // Field inputIndex:I
     112: ldc           #29                 // String UTF-16BE
     114: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     117: areturn
     118: aload_1
     119: getstatic     #30                 // Field BOM_UTF_16LE:[B
     122: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
     125: ifeq          139
     128: aload_0
     129: iconst_2
     130: putfield      #6                  // Field inputIndex:I
     133: ldc           #31                 // String UTF-16LE
     135: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     138: areturn
     139: aload_0
     140: getfield      #2                  // Field fourByteBuffer:[B
     143: iconst_3
     144: invokestatic  #27                 // Method java/util/Arrays.copyOf:([BI)[B
     147: astore_2
     148: aload_2
     149: getstatic     #32                 // Field BOM_UTF_8:[B
     152: invokestatic  #18                 // Method java/util/Arrays.equals:([B[B)Z
     155: ifeq          169
     158: aload_0
     159: iconst_3
     160: putfield      #6                  // Field inputIndex:I
     163: ldc           #12                 // String UTF-8
     165: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     168: areturn
     169: aconst_null
     170: areturn

  private java.nio.charset.Charset getUTF32EncodingFromNullPattern() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field fourByteBuffer:[B
       4: iconst_0
       5: baload
       6: ifne          33
       9: aload_0
      10: getfield      #2                  // Field fourByteBuffer:[B
      13: iconst_1
      14: baload
      15: ifne          33
      18: aload_0
      19: getfield      #2                  // Field fourByteBuffer:[B
      22: iconst_2
      23: baload
      24: ifne          33
      27: ldc           #19                 // String UTF-32BE
      29: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      32: areturn
      33: aload_0
      34: getfield      #2                  // Field fourByteBuffer:[B
      37: iconst_1
      38: baload
      39: ifne          66
      42: aload_0
      43: getfield      #2                  // Field fourByteBuffer:[B
      46: iconst_2
      47: baload
      48: ifne          66
      51: aload_0
      52: getfield      #2                  // Field fourByteBuffer:[B
      55: iconst_3
      56: baload
      57: ifne          66
      60: ldc           #21                 // String UTF-32LE
      62: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      65: areturn
      66: aload_0
      67: getfield      #2                  // Field fourByteBuffer:[B
      70: iconst_0
      71: baload
      72: ifne          100
      75: aload_0
      76: getfield      #2                  // Field fourByteBuffer:[B
      79: iconst_2
      80: baload
      81: ifne          100
      84: aload_0
      85: getfield      #2                  // Field fourByteBuffer:[B
      88: iconst_3
      89: baload
      90: ifne          100
      93: aload_0
      94: ldc           #26                 // String 3412
      96: invokespecial #24                 // Method getExceptionUnsupportedUCS4:(Ljava/lang/String;)Ljava/io/CharConversionException;
      99: athrow
     100: aload_0
     101: getfield      #2                  // Field fourByteBuffer:[B
     104: iconst_0
     105: baload
     106: ifne          134
     109: aload_0
     110: getfield      #2                  // Field fourByteBuffer:[B
     113: iconst_1
     114: baload
     115: ifne          134
     118: aload_0
     119: getfield      #2                  // Field fourByteBuffer:[B
     122: iconst_3
     123: baload
     124: ifne          134
     127: aload_0
     128: ldc           #23                 // String 2143
     130: invokespecial #24                 // Method getExceptionUnsupportedUCS4:(Ljava/lang/String;)Ljava/io/CharConversionException;
     133: athrow
     134: aconst_null
     135: areturn

  private java.nio.charset.Charset getUTF16EncodingFromNullPattern();
    Code:
       0: aload_0
       1: getfield      #2                  // Field fourByteBuffer:[B
       4: iconst_0
       5: baload
       6: ifne          15
       9: ldc           #29                 // String UTF-16BE
      11: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      14: areturn
      15: aload_0
      16: getfield      #2                  // Field fourByteBuffer:[B
      19: iconst_1
      20: baload
      21: ifne          30
      24: ldc           #31                 // String UTF-16LE
      26: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      29: areturn
      30: aconst_null
      31: areturn

  private java.io.CharConversionException getExceptionUnsupportedUCS4(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #33                 // class java/io/CharConversionException
       3: dup
       4: new           #34                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #36                 // String Unsupported UCS-4 endianness (
      13: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #38                 // String ) detected
      22: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #40                 // Method java/io/CharConversionException."<init>":(Ljava/lang/String;)V
      31: areturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputIndex:I
       4: aload_0
       5: getfield      #7                  // Field inputEnd:I
       8: if_icmpge     33
      11: aload_0
      12: getfield      #2                  // Field fourByteBuffer:[B
      15: aload_0
      16: getfield      #6                  // Field inputIndex:I
      19: baload
      20: istore_1
      21: aload_0
      22: dup
      23: getfield      #6                  // Field inputIndex:I
      26: iconst_1
      27: iadd
      28: putfield      #6                  // Field inputIndex:I
      31: iload_1
      32: ireturn
      33: aload_0
      34: getfield      #15                 // Field in:Ljava/io/InputStream;
      37: invokevirtual #41                 // Method java/io/InputStream.read:()I
      40: ireturn
      41: astore_1
      42: iconst_m1
      43: ireturn
    Exception table:
       from    to  target type
          33    40    41   Class java/io/EOFException

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputIndex:I
       4: aload_0
       5: getfield      #7                  // Field inputEnd:I
       8: if_icmpge     100
      11: aload_1
      12: arraylength
      13: aload_0
      14: getfield      #7                  // Field inputEnd:I
      17: aload_0
      18: getfield      #6                  // Field inputIndex:I
      21: isub
      22: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      25: istore_2
      26: iconst_0
      27: istore_3
      28: iload_3
      29: iload_2
      30: if_icmpge     61
      33: aload_1
      34: iload_3
      35: aload_0
      36: getfield      #2                  // Field fourByteBuffer:[B
      39: aload_0
      40: getfield      #6                  // Field inputIndex:I
      43: baload
      44: bastore
      45: aload_0
      46: dup
      47: getfield      #6                  // Field inputIndex:I
      50: iconst_1
      51: iadd
      52: putfield      #6                  // Field inputIndex:I
      55: iinc          3, 1
      58: goto          28
      61: aload_1
      62: arraylength
      63: iload_2
      64: isub
      65: istore_3
      66: iload_3
      67: ifne          72
      70: iload_2
      71: ireturn
      72: aload_0
      73: getfield      #15                 // Field in:Ljava/io/InputStream;
      76: aload_1
      77: iload_2
      78: iload_3
      79: invokevirtual #16                 // Method java/io/InputStream.read:([BII)I
      82: istore        4
      84: iload         4
      86: ifge          91
      89: iload_2
      90: ireturn
      91: iload_2
      92: iload         4
      94: iadd
      95: ireturn
      96: astore        4
      98: iload_2
      99: ireturn
     100: aload_0
     101: aload_1
     102: iconst_0
     103: aload_1
     104: arraylength
     105: invokevirtual #44                 // Method read:([BII)I
     108: ireturn
    Exception table:
       from    to  target type
          72    90    96   Class java/io/EOFException
          91    95    96   Class java/io/EOFException

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputIndex:I
       4: aload_0
       5: getfield      #7                  // Field inputEnd:I
       8: if_icmpge     118
      11: aload_1
      12: arraylength
      13: aload_0
      14: getfield      #7                  // Field inputEnd:I
      17: aload_0
      18: getfield      #6                  // Field inputIndex:I
      21: isub
      22: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      25: istore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: iload         4
      34: if_icmpge     68
      37: aload_1
      38: iload_2
      39: iload         5
      41: iadd
      42: aload_0
      43: getfield      #2                  // Field fourByteBuffer:[B
      46: aload_0
      47: getfield      #6                  // Field inputIndex:I
      50: baload
      51: bastore
      52: aload_0
      53: dup
      54: getfield      #6                  // Field inputIndex:I
      57: iconst_1
      58: iadd
      59: putfield      #6                  // Field inputIndex:I
      62: iinc          5, 1
      65: goto          30
      68: aload_1
      69: arraylength
      70: iload         4
      72: isub
      73: istore        5
      75: iload         5
      77: ifne          83
      80: iload         4
      82: ireturn
      83: aload_0
      84: getfield      #15                 // Field in:Ljava/io/InputStream;
      87: aload_1
      88: iload         4
      90: iload_2
      91: iadd
      92: iload         5
      94: invokevirtual #16                 // Method java/io/InputStream.read:([BII)I
      97: istore        6
      99: iload         6
     101: ifge          107
     104: iload         4
     106: ireturn
     107: iload         4
     109: iload         6
     111: iadd
     112: ireturn
     113: astore        6
     115: iload         4
     117: ireturn
     118: aload_0
     119: getfield      #15                 // Field in:Ljava/io/InputStream;
     122: aload_1
     123: iload_2
     124: iload_3
     125: invokevirtual #16                 // Method java/io/InputStream.read:([BII)I
     128: ireturn
     129: astore        4
     131: iconst_m1
     132: ireturn
    Exception table:
       from    to  target type
          83   106   113   Class java/io/EOFException
         107   112   113   Class java/io/EOFException
         118   128   129   Class java/io/EOFException

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputIndex:I
       4: aload_0
       5: getfield      #7                  // Field inputEnd:I
       8: if_icmpge     83
      11: lload_1
      12: aload_0
      13: getfield      #7                  // Field inputEnd:I
      16: aload_0
      17: getfield      #6                  // Field inputIndex:I
      20: isub
      21: i2l
      22: invokestatic  #45                 // Method java/lang/Math.min:(JJ)J
      25: lstore_3
      26: iconst_0
      27: istore        5
      29: iload         5
      31: i2l
      32: lload_3
      33: lcmp
      34: ifge          53
      37: aload_0
      38: dup
      39: getfield      #6                  // Field inputIndex:I
      42: iconst_1
      43: iadd
      44: putfield      #6                  // Field inputIndex:I
      47: iinc          5, 1
      50: goto          29
      53: lload_1
      54: lload_3
      55: lsub
      56: lstore        5
      58: lload         5
      60: lconst_0
      61: lcmp
      62: ifne          67
      65: lload_3
      66: lreturn
      67: aload_0
      68: getfield      #15                 // Field in:Ljava/io/InputStream;
      71: lload         5
      73: invokevirtual #46                 // Method java/io/InputStream.skip:(J)J
      76: lstore        7
      78: lload         7
      80: lload_3
      81: ladd
      82: lreturn
      83: aload_0
      84: getfield      #15                 // Field in:Ljava/io/InputStream;
      87: lload_1
      88: invokevirtual #46                 // Method java/io/InputStream.skip:(J)J
      91: lreturn

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: new           #47                 // class java/io/IOException
       3: dup
       4: ldc           #48                 // String reset not supported
       6: invokespecial #49                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_0
       6: bastore
       7: dup
       8: iconst_1
       9: iconst_0
      10: bastore
      11: dup
      12: iconst_2
      13: bipush        -2
      15: bastore
      16: dup
      17: iconst_3
      18: iconst_m1
      19: bastore
      20: putstatic     #17                 // Field BOM_UTF_32BE:[B
      23: iconst_4
      24: newarray       byte
      26: dup
      27: iconst_0
      28: iconst_m1
      29: bastore
      30: dup
      31: iconst_1
      32: bipush        -2
      34: bastore
      35: dup
      36: iconst_2
      37: iconst_0
      38: bastore
      39: dup
      40: iconst_3
      41: iconst_0
      42: bastore
      43: putstatic     #20                 // Field BOM_UTF_32LE:[B
      46: iconst_4
      47: newarray       byte
      49: dup
      50: iconst_0
      51: iconst_0
      52: bastore
      53: dup
      54: iconst_1
      55: iconst_0
      56: bastore
      57: dup
      58: iconst_2
      59: iconst_m1
      60: bastore
      61: dup
      62: iconst_3
      63: bipush        -2
      65: bastore
      66: putstatic     #22                 // Field BOM_UTF_32_2143:[B
      69: iconst_4
      70: newarray       byte
      72: dup
      73: iconst_0
      74: bipush        -2
      76: bastore
      77: dup
      78: iconst_1
      79: iconst_m1
      80: bastore
      81: dup
      82: iconst_2
      83: iconst_0
      84: bastore
      85: dup
      86: iconst_3
      87: iconst_0
      88: bastore
      89: putstatic     #25                 // Field BOM_UTF_32_3412:[B
      92: iconst_2
      93: newarray       byte
      95: dup
      96: iconst_0
      97: bipush        -2
      99: bastore
     100: dup
     101: iconst_1
     102: iconst_m1
     103: bastore
     104: putstatic     #28                 // Field BOM_UTF_16BE:[B
     107: iconst_2
     108: newarray       byte
     110: dup
     111: iconst_0
     112: iconst_m1
     113: bastore
     114: dup
     115: iconst_1
     116: bipush        -2
     118: bastore
     119: putstatic     #30                 // Field BOM_UTF_16LE:[B
     122: iconst_3
     123: newarray       byte
     125: dup
     126: iconst_0
     127: bipush        -17
     129: bastore
     130: dup
     131: iconst_1
     132: bipush        -69
     134: bastore
     135: dup
     136: iconst_2
     137: bipush        -65
     139: bastore
     140: putstatic     #32                 // Field BOM_UTF_8:[B
     143: return
}
