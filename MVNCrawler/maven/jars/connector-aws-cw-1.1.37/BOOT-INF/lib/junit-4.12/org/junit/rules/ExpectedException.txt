Compiled from "ExpectedException.java"
public class org.junit.rules.ExpectedException implements org.junit.rules.TestRule {
  private final org.junit.rules.ExpectedExceptionMatcherBuilder matcherBuilder;

  private java.lang.String missingExceptionMessage;

  public static org.junit.rules.ExpectedException none();
    Code:
       0: new           #4                  // class org/junit/rules/ExpectedException
       3: dup
       4: invokespecial #5                  // Method "<init>":()V
       7: areturn

  private org.junit.rules.ExpectedException();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class org/junit/rules/ExpectedExceptionMatcherBuilder
       8: dup
       9: invokespecial #8                  // Method org/junit/rules/ExpectedExceptionMatcherBuilder."<init>":()V
      12: putfield      #9                  // Field matcherBuilder:Lorg/junit/rules/ExpectedExceptionMatcherBuilder;
      15: aload_0
      16: ldc           #10                 // String Expected test to throw %s
      18: putfield      #11                 // Field missingExceptionMessage:Ljava/lang/String;
      21: return

  public org.junit.rules.ExpectedException handleAssertionErrors();
    Code:
       0: aload_0
       1: areturn

  public org.junit.rules.ExpectedException handleAssumptionViolatedExceptions();
    Code:
       0: aload_0
       1: areturn

  public org.junit.rules.ExpectedException reportMissingExceptionWithMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field missingExceptionMessage:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runner.Description);
    Code:
       0: new           #12                 // class org/junit/rules/ExpectedException$ExpectedExceptionStatement
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #13                 // Method org/junit/rules/ExpectedException$ExpectedExceptionStatement."<init>":(Lorg/junit/rules/ExpectedException;Lorg/junit/runners/model/Statement;)V
       9: areturn

  public void expect(org.hamcrest.Matcher<?>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field matcherBuilder:Lorg/junit/rules/ExpectedExceptionMatcherBuilder;
       4: aload_1
       5: invokevirtual #14                 // Method org/junit/rules/ExpectedExceptionMatcherBuilder.add:(Lorg/hamcrest/Matcher;)V
       8: return

  public void expect(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method org/hamcrest/CoreMatchers.instanceOf:(Ljava/lang/Class;)Lorg/hamcrest/Matcher;
       5: invokevirtual #16                 // Method expect:(Lorg/hamcrest/Matcher;)V
       8: return

  public void expectMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method org/hamcrest/CoreMatchers.containsString:(Ljava/lang/String;)Lorg/hamcrest/Matcher;
       5: invokevirtual #18                 // Method expectMessage:(Lorg/hamcrest/Matcher;)V
       8: return

  public void expectMessage(org.hamcrest.Matcher<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #19                 // Method org/junit/internal/matchers/ThrowableMessageMatcher.hasMessage:(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
       5: invokevirtual #16                 // Method expect:(Lorg/hamcrest/Matcher;)V
       8: return

  public void expectCause(org.hamcrest.Matcher<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method org/junit/internal/matchers/ThrowableCauseMatcher.hasCause:(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
       5: invokevirtual #16                 // Method expect:(Lorg/hamcrest/Matcher;)V
       8: return

  private void handleException(java.lang.Throwable) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method isAnyExceptionExpected:()Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #9                  // Field matcherBuilder:Lorg/junit/rules/ExpectedExceptionMatcherBuilder;
      12: invokevirtual #21                 // Method org/junit/rules/ExpectedExceptionMatcherBuilder.build:()Lorg/hamcrest/Matcher;
      15: invokestatic  #22                 // Method org/junit/Assert.assertThat:(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
      18: goto          23
      21: aload_1
      22: athrow
      23: return

  private boolean isAnyExceptionExpected();
    Code:
       0: aload_0
       1: getfield      #9                  // Field matcherBuilder:Lorg/junit/rules/ExpectedExceptionMatcherBuilder;
       4: invokevirtual #23                 // Method org/junit/rules/ExpectedExceptionMatcherBuilder.expectsThrowable:()Z
       7: ireturn

  private void failDueToMissingException() throws java.lang.AssertionError;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method missingExceptionMessage:()Ljava/lang/String;
       4: invokestatic  #25                 // Method org/junit/Assert.fail:(Ljava/lang/String;)V
       7: return

  private java.lang.String missingExceptionMessage();
    Code:
       0: aload_0
       1: getfield      #9                  // Field matcherBuilder:Lorg/junit/rules/ExpectedExceptionMatcherBuilder;
       4: invokevirtual #21                 // Method org/junit/rules/ExpectedExceptionMatcherBuilder.build:()Lorg/hamcrest/Matcher;
       7: invokestatic  #26                 // Method org/hamcrest/StringDescription.toString:(Lorg/hamcrest/SelfDescribing;)Ljava/lang/String;
      10: astore_1
      11: aload_0
      12: getfield      #11                 // Field missingExceptionMessage:Ljava/lang/String;
      15: iconst_1
      16: anewarray     #27                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_1
      22: aastore
      23: invokestatic  #28                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: areturn

  static void access$000(org.junit.rules.ExpectedException, java.lang.Throwable) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method handleException:(Ljava/lang/Throwable;)V
       5: return

  static boolean access$100(org.junit.rules.ExpectedException);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method isAnyExceptionExpected:()Z
       4: ireturn

  static void access$200(org.junit.rules.ExpectedException) throws java.lang.AssertionError;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method failDueToMissingException:()V
       4: return
}
