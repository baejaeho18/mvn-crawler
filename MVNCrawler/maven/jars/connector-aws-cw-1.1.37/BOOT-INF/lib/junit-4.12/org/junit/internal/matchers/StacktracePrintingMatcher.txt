Compiled from "StacktracePrintingMatcher.java"
public class org.junit.internal.matchers.StacktracePrintingMatcher<T extends java.lang.Throwable> extends org.hamcrest.TypeSafeMatcher<T> {
  private final org.hamcrest.Matcher<T> throwableMatcher;

  public org.junit.internal.matchers.StacktracePrintingMatcher(org.hamcrest.Matcher<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hamcrest/TypeSafeMatcher."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field throwableMatcher:Lorg/hamcrest/Matcher;
       9: return

  public void describeTo(org.hamcrest.Description);
    Code:
       0: aload_0
       1: getfield      #2                  // Field throwableMatcher:Lorg/hamcrest/Matcher;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod org/hamcrest/Matcher.describeTo:(Lorg/hamcrest/Description;)V
      10: return

  protected boolean matchesSafely(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field throwableMatcher:Lorg/hamcrest/Matcher;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod org/hamcrest/Matcher.matches:(Ljava/lang/Object;)Z
      10: ireturn

  protected void describeMismatchSafely(T, org.hamcrest.Description);
    Code:
       0: aload_0
       1: getfield      #2                  // Field throwableMatcher:Lorg/hamcrest/Matcher;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod org/hamcrest/Matcher.describeMismatch:(Ljava/lang/Object;Lorg/hamcrest/Description;)V
      11: aload_2
      12: ldc           #6                  // String \nStacktrace was:
      14: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
      19: pop
      20: aload_2
      21: aload_0
      22: aload_1
      23: invokespecial #8                  // Method readStacktrace:(Ljava/lang/Throwable;)Ljava/lang/String;
      26: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
      31: pop
      32: return

  private java.lang.String readStacktrace(java.lang.Throwable);
    Code:
       0: new           #9                  // class java/io/StringWriter
       3: dup
       4: invokespecial #10                 // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: aload_1
       9: new           #11                 // class java/io/PrintWriter
      12: dup
      13: aload_2
      14: invokespecial #12                 // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      17: invokevirtual #13                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V
      20: aload_2
      21: invokevirtual #14                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      24: areturn

  public static <T extends java.lang.Throwable> org.hamcrest.Matcher<T> isThrowable(org.hamcrest.Matcher<T>);
    Code:
       0: new           #15                 // class org/junit/internal/matchers/StacktracePrintingMatcher
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method "<init>":(Lorg/hamcrest/Matcher;)V
       8: areturn

  public static <T extends java.lang.Exception> org.hamcrest.Matcher<T> isException(org.hamcrest.Matcher<T>);
    Code:
       0: new           #15                 // class org/junit/internal/matchers/StacktracePrintingMatcher
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method "<init>":(Lorg/hamcrest/Matcher;)V
       8: areturn

  protected void describeMismatchSafely(java.lang.Object, org.hamcrest.Description);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class java/lang/Throwable
       5: aload_2
       6: invokevirtual #18                 // Method describeMismatchSafely:(Ljava/lang/Throwable;Lorg/hamcrest/Description;)V
       9: return

  protected boolean matchesSafely(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class java/lang/Throwable
       5: invokevirtual #19                 // Method matchesSafely:(Ljava/lang/Throwable;)Z
       8: ireturn
}
