Compiled from "FilterHandler.java"
public class io.undertow.servlet.handlers.FilterHandler implements io.undertow.server.HttpHandler {
  private final java.util.Map<javax.servlet.DispatcherType, java.util.List<io.undertow.servlet.core.ManagedFilter>> filters;

  private final java.util.Map<javax.servlet.DispatcherType, java.lang.Boolean> asyncSupported;

  private final boolean allowNonStandardWrappers;

  private final io.undertow.server.HttpHandler next;

  public io.undertow.servlet.handlers.FilterHandler(java.util.Map<javax.servlet.DispatcherType, java.util.List<io.undertow.servlet.core.ManagedFilter>>, boolean, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #2                  // Field allowNonStandardWrappers:Z
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field next:Lio/undertow/server/HttpHandler;
      14: aload_0
      15: new           #4                  // class java/util/EnumMap
      18: dup
      19: aload_1
      20: invokespecial #5                  // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
      23: putfield      #6                  // Field filters:Ljava/util/Map;
      26: new           #4                  // class java/util/EnumMap
      29: dup
      30: ldc           #7                  // class javax/servlet/DispatcherType
      32: invokespecial #8                  // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      35: astore        4
      37: aload_1
      38: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      43: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      48: astore        5
      50: aload         5
      52: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          157
      60: aload         5
      62: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #13                 // class java/util/Map$Entry
      70: astore        6
      72: iconst_1
      73: istore        7
      75: aload         6
      77: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      82: checkcast     #15                 // class java/util/List
      85: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      90: astore        8
      92: aload         8
      94: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      99: ifeq          134
     102: aload         8
     104: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #17                 // class io/undertow/servlet/core/ManagedFilter
     112: astore        9
     114: aload         9
     116: invokevirtual #18                 // Method io/undertow/servlet/core/ManagedFilter.getFilterInfo:()Lio/undertow/servlet/api/FilterInfo;
     119: invokevirtual #19                 // Method io/undertow/servlet/api/FilterInfo.isAsyncSupported:()Z
     122: ifne          131
     125: iconst_0
     126: istore        7
     128: goto          134
     131: goto          92
     134: aload         4
     136: aload         6
     138: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     143: iload         7
     145: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     148: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     153: pop
     154: goto          50
     157: aload_0
     158: aload         4
     160: putfield      #23                 // Field asyncSupported:Ljava/util/Map;
     163: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: getstatic     #24                 // Field io/undertow/servlet/handlers/ServletRequestContext.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #26                 // class io/undertow/servlet/handlers/ServletRequestContext
      10: astore_2
      11: aload_2
      12: invokevirtual #27                 // Method io/undertow/servlet/handlers/ServletRequestContext.getServletRequest:()Ljavax/servlet/ServletRequest;
      15: astore_3
      16: aload_2
      17: invokevirtual #28                 // Method io/undertow/servlet/handlers/ServletRequestContext.getServletResponse:()Ljavax/servlet/ServletResponse;
      20: astore        4
      22: aload_2
      23: invokevirtual #29                 // Method io/undertow/servlet/handlers/ServletRequestContext.getDispatcherType:()Ljavax/servlet/DispatcherType;
      26: astore        5
      28: aload_0
      29: getfield      #23                 // Field asyncSupported:Ljava/util/Map;
      32: aload         5
      34: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #31                 // class java/lang/Boolean
      42: astore        6
      44: aload         6
      46: ifnull        62
      49: aload         6
      51: invokevirtual #32                 // Method java/lang/Boolean.booleanValue:()Z
      54: ifne          62
      57: aload_2
      58: iconst_0
      59: invokevirtual #33                 // Method io/undertow/servlet/handlers/ServletRequestContext.setAsyncSupported:(Z)V
      62: aload_0
      63: getfield      #6                  // Field filters:Ljava/util/Map;
      66: aload         5
      68: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #15                 // class java/util/List
      76: astore        7
      78: aload         7
      80: ifnonnull     96
      83: aload_0
      84: getfield      #3                  // Field next:Lio/undertow/server/HttpHandler;
      87: aload_1
      88: invokeinterface #34,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      93: goto          125
      96: new           #35                 // class io/undertow/servlet/handlers/FilterHandler$FilterChainImpl
      99: dup
     100: aload_1
     101: aload         7
     103: aload_0
     104: getfield      #3                  // Field next:Lio/undertow/server/HttpHandler;
     107: aload_0
     108: getfield      #2                  // Field allowNonStandardWrappers:Z
     111: aconst_null
     112: invokespecial #36                 // Method io/undertow/servlet/handlers/FilterHandler$FilterChainImpl."<init>":(Lio/undertow/server/HttpServerExchange;Ljava/util/List;Lio/undertow/server/HttpHandler;ZLio/undertow/servlet/handlers/FilterHandler$1;)V
     115: astore        8
     117: aload         8
     119: aload_3
     120: aload         4
     122: invokevirtual #37                 // Method io/undertow/servlet/handlers/FilterHandler$FilterChainImpl.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     125: return
}
