Compiled from "ServletInfo.java"
public class io.undertow.servlet.api.ServletInfo implements java.lang.Cloneable {
  private final java.lang.Class<? extends javax.servlet.Servlet> servletClass;

  private final java.lang.String name;

  private final java.util.List<java.lang.String> mappings;

  private final java.util.Map<java.lang.String, java.lang.String> initParams;

  private final java.util.List<io.undertow.servlet.api.SecurityRoleRef> securityRoleRefs;

  private final java.util.List<io.undertow.server.HandlerWrapper> handlerChainWrappers;

  private io.undertow.servlet.api.InstanceFactory<? extends javax.servlet.Servlet> instanceFactory;

  private java.lang.String jspFile;

  private java.lang.Integer loadOnStartup;

  private boolean enabled;

  private boolean asyncSupported;

  private java.lang.String runAs;

  private javax.servlet.MultipartConfigElement multipartConfig;

  private io.undertow.servlet.api.ServletSecurityInfo servletSecurityInfo;

  private java.util.concurrent.Executor executor;

  private boolean requireWelcomeFileMapping;

  public io.undertow.servlet.api.ServletInfo(java.lang.String, java.lang.Class<? extends javax.servlet.Servlet>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field mappings:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field initParams:Ljava/util/Map;
      26: aload_0
      27: new           #2                  // class java/util/ArrayList
      30: dup
      31: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #8                  // Field securityRoleRefs:Ljava/util/List;
      37: aload_0
      38: new           #2                  // class java/util/ArrayList
      41: dup
      42: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      45: putfield      #9                  // Field handlerChainWrappers:Ljava/util/List;
      48: aload_1
      49: ifnonnull     63
      52: getstatic     #10                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      55: ldc           #11                 // String name
      57: invokeinterface #12,  2           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      62: athrow
      63: aload_2
      64: ifnonnull     81
      67: getstatic     #10                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      70: ldc           #13                 // String servletClass
      72: ldc           #14                 // String Servlet
      74: aload_1
      75: invokeinterface #15,  4           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      80: athrow
      81: ldc           #16                 // class javax/servlet/Servlet
      83: aload_2
      84: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      87: ifne          101
      90: getstatic     #10                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      93: aload_1
      94: aload_2
      95: invokeinterface #18,  3           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.servletMustImplementServlet:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/IllegalArgumentException;
     100: athrow
     101: aload_2
     102: iconst_0
     103: anewarray     #19                 // class java/lang/Class
     106: invokevirtual #20                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     109: astore_3
     110: aload_3
     111: iconst_1
     112: invokevirtual #21                 // Method java/lang/reflect/Constructor.setAccessible:(Z)V
     115: aload_0
     116: new           #22                 // class io/undertow/servlet/util/ConstructorInstanceFactory
     119: dup
     120: aload_3
     121: invokespecial #23                 // Method io/undertow/servlet/util/ConstructorInstanceFactory."<init>":(Ljava/lang/reflect/Constructor;)V
     124: putfield      #24                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
     127: aload_0
     128: aload_1
     129: putfield      #25                 // Field name:Ljava/lang/String;
     132: aload_0
     133: aload_2
     134: putfield      #26                 // Field servletClass:Ljava/lang/Class;
     137: goto          153
     140: astore_3
     141: getstatic     #10                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
     144: ldc           #14                 // String Servlet
     146: aload_2
     147: invokeinterface #28,  3           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.componentMustHaveDefaultConstructor:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/IllegalArgumentException;
     152: athrow
     153: return
    Exception table:
       from    to  target type
         101   137   140   Class java/lang/NoSuchMethodException

  public io.undertow.servlet.api.ServletInfo(java.lang.String, java.lang.Class<? extends javax.servlet.Servlet>, io.undertow.servlet.api.InstanceFactory<? extends javax.servlet.Servlet>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field mappings:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field initParams:Ljava/util/Map;
      26: aload_0
      27: new           #2                  // class java/util/ArrayList
      30: dup
      31: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #8                  // Field securityRoleRefs:Ljava/util/List;
      37: aload_0
      38: new           #2                  // class java/util/ArrayList
      41: dup
      42: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      45: putfield      #9                  // Field handlerChainWrappers:Ljava/util/List;
      48: aload_1
      49: ifnonnull     63
      52: getstatic     #10                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      55: ldc           #11                 // String name
      57: invokeinterface #12,  2           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      62: athrow
      63: aload_2
      64: ifnonnull     81
      67: getstatic     #10                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      70: ldc           #13                 // String servletClass
      72: ldc           #14                 // String Servlet
      74: aload_1
      75: invokeinterface #15,  4           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      80: athrow
      81: ldc           #16                 // class javax/servlet/Servlet
      83: aload_2
      84: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      87: ifne          101
      90: getstatic     #10                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      93: aload_1
      94: aload_2
      95: invokeinterface #18,  3           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.servletMustImplementServlet:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/IllegalArgumentException;
     100: athrow
     101: aload_0
     102: aload_3
     103: putfield      #24                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
     106: aload_0
     107: aload_1
     108: putfield      #25                 // Field name:Ljava/lang/String;
     111: aload_0
     112: aload_2
     113: putfield      #26                 // Field servletClass:Ljava/lang/Class;
     116: return

  public void validate();
    Code:
       0: return

  public io.undertow.servlet.api.ServletInfo clone();
    Code:
       0: new           #29                 // class io/undertow/servlet/api/ServletInfo
       3: dup
       4: aload_0
       5: getfield      #25                 // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #26                 // Field servletClass:Ljava/lang/Class;
      12: aload_0
      13: getfield      #24                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
      16: invokespecial #30                 // Method "<init>":(Ljava/lang/String;Ljava/lang/Class;Lio/undertow/servlet/api/InstanceFactory;)V
      19: aload_0
      20: getfield      #31                 // Field jspFile:Ljava/lang/String;
      23: invokevirtual #32                 // Method setJspFile:(Ljava/lang/String;)Lio/undertow/servlet/api/ServletInfo;
      26: aload_0
      27: getfield      #33                 // Field loadOnStartup:Ljava/lang/Integer;
      30: invokevirtual #34                 // Method setLoadOnStartup:(Ljava/lang/Integer;)Lio/undertow/servlet/api/ServletInfo;
      33: aload_0
      34: getfield      #35                 // Field enabled:Z
      37: invokevirtual #36                 // Method setEnabled:(Z)Lio/undertow/servlet/api/ServletInfo;
      40: aload_0
      41: getfield      #37                 // Field asyncSupported:Z
      44: invokevirtual #38                 // Method setAsyncSupported:(Z)Lio/undertow/servlet/api/ServletInfo;
      47: aload_0
      48: getfield      #39                 // Field runAs:Ljava/lang/String;
      51: invokevirtual #40                 // Method setRunAs:(Ljava/lang/String;)Lio/undertow/servlet/api/ServletInfo;
      54: aload_0
      55: getfield      #41                 // Field multipartConfig:Ljavax/servlet/MultipartConfigElement;
      58: invokevirtual #42                 // Method setMultipartConfig:(Ljavax/servlet/MultipartConfigElement;)Lio/undertow/servlet/api/ServletInfo;
      61: aload_0
      62: getfield      #43                 // Field executor:Ljava/util/concurrent/Executor;
      65: invokevirtual #44                 // Method setExecutor:(Ljava/util/concurrent/Executor;)Lio/undertow/servlet/api/ServletInfo;
      68: aload_0
      69: getfield      #45                 // Field requireWelcomeFileMapping:Z
      72: invokevirtual #46                 // Method setRequireWelcomeFileMapping:(Z)Lio/undertow/servlet/api/ServletInfo;
      75: astore_1
      76: aload_1
      77: getfield      #4                  // Field mappings:Ljava/util/List;
      80: aload_0
      81: getfield      #4                  // Field mappings:Ljava/util/List;
      84: invokeinterface #47,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      89: pop
      90: aload_1
      91: getfield      #7                  // Field initParams:Ljava/util/Map;
      94: aload_0
      95: getfield      #7                  // Field initParams:Ljava/util/Map;
      98: invokeinterface #48,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     103: aload_1
     104: getfield      #8                  // Field securityRoleRefs:Ljava/util/List;
     107: aload_0
     108: getfield      #8                  // Field securityRoleRefs:Ljava/util/List;
     111: invokeinterface #47,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     116: pop
     117: aload_1
     118: getfield      #9                  // Field handlerChainWrappers:Ljava/util/List;
     121: aload_0
     122: getfield      #9                  // Field handlerChainWrappers:Ljava/util/List;
     125: invokeinterface #47,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     130: pop
     131: aload_0
     132: getfield      #49                 // Field servletSecurityInfo:Lio/undertow/servlet/api/ServletSecurityInfo;
     135: ifnull        149
     138: aload_1
     139: aload_0
     140: getfield      #49                 // Field servletSecurityInfo:Lio/undertow/servlet/api/ServletSecurityInfo;
     143: invokevirtual #50                 // Method io/undertow/servlet/api/ServletSecurityInfo.clone:()Lio/undertow/servlet/api/ServletSecurityInfo;
     146: putfield      #49                 // Field servletSecurityInfo:Lio/undertow/servlet/api/ServletSecurityInfo;
     149: aload_1
     150: areturn

  public java.lang.Class<? extends javax.servlet.Servlet> getServletClass();
    Code:
       0: aload_0
       1: getfield      #26                 // Field servletClass:Ljava/lang/Class;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #25                 // Field name:Ljava/lang/String;
       4: areturn

  public void setInstanceFactory(io.undertow.servlet.api.InstanceFactory<? extends javax.servlet.Servlet>);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #10                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
       7: ldc           #51                 // String instanceFactory
       9: invokeinterface #12,  2           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #24                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
      20: return

  public io.undertow.servlet.api.InstanceFactory<? extends javax.servlet.Servlet> getInstanceFactory();
    Code:
       0: aload_0
       1: getfield      #24                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
       4: areturn

  public java.util.List<java.lang.String> getMappings();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mappings:Ljava/util/List;
       4: invokestatic  #52                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public io.undertow.servlet.api.ServletInfo addMapping(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #53                 // String /
       3: invokevirtual #54                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifne          57
       9: aload_1
      10: ldc           #55                 // String *
      12: invokevirtual #54                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: ifne          57
      18: aload_1
      19: invokevirtual #56                 // Method java/lang/String.isEmpty:()Z
      22: ifne          57
      25: aload_0
      26: getfield      #4                  // Field mappings:Ljava/util/List;
      29: new           #57                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #53                 // String /
      38: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: goto          68
      57: aload_0
      58: getfield      #4                  // Field mappings:Ljava/util/List;
      61: aload_1
      62: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: aload_0
      69: areturn

  public io.undertow.servlet.api.ServletInfo addMappings(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #62,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_2
      17: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #65                 // class java/lang/String
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #66                 // Method addMapping:(Ljava/lang/String;)Lio/undertow/servlet/api/ServletInfo;
      31: pop
      32: goto          7
      35: aload_0
      36: areturn

  public io.undertow.servlet.api.ServletInfo addMappings(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     33
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokevirtual #66                 // Method addMapping:(Ljava/lang/String;)Lio/undertow/servlet/api/ServletInfo;
      26: pop
      27: iinc          4, 1
      30: goto          8
      33: aload_0
      34: areturn

  public io.undertow.servlet.api.ServletInfo addInitParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field initParams:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #67,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public java.util.Map<java.lang.String, java.lang.String> getInitParams();
    Code:
       0: aload_0
       1: getfield      #7                  // Field initParams:Ljava/util/Map;
       4: invokestatic  #68                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public java.lang.String getJspFile();
    Code:
       0: aload_0
       1: getfield      #31                 // Field jspFile:Ljava/lang/String;
       4: areturn

  public io.undertow.servlet.api.ServletInfo setJspFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field jspFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Integer getLoadOnStartup();
    Code:
       0: aload_0
       1: getfield      #33                 // Field loadOnStartup:Ljava/lang/Integer;
       4: areturn

  public io.undertow.servlet.api.ServletInfo setLoadOnStartup(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field loadOnStartup:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public boolean isAsyncSupported();
    Code:
       0: aload_0
       1: getfield      #37                 // Field asyncSupported:Z
       4: ireturn

  public io.undertow.servlet.api.ServletInfo setAsyncSupported(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field asyncSupported:Z
       5: aload_0
       6: areturn

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #35                 // Field enabled:Z
       4: ireturn

  public io.undertow.servlet.api.ServletInfo setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field enabled:Z
       5: aload_0
       6: areturn

  public java.lang.String getRunAs();
    Code:
       0: aload_0
       1: getfield      #39                 // Field runAs:Ljava/lang/String;
       4: areturn

  public io.undertow.servlet.api.ServletInfo setRunAs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field runAs:Ljava/lang/String;
       5: aload_0
       6: areturn

  public javax.servlet.MultipartConfigElement getMultipartConfig();
    Code:
       0: aload_0
       1: getfield      #41                 // Field multipartConfig:Ljavax/servlet/MultipartConfigElement;
       4: areturn

  public io.undertow.servlet.api.ServletInfo setMultipartConfig(javax.servlet.MultipartConfigElement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field multipartConfig:Ljavax/servlet/MultipartConfigElement;
       5: aload_0
       6: areturn

  public void addSecurityRoleRef(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field securityRoleRefs:Ljava/util/List;
       4: new           #69                 // class io/undertow/servlet/api/SecurityRoleRef
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #70                 // Method io/undertow/servlet/api/SecurityRoleRef."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: return

  public java.util.List<io.undertow.servlet.api.SecurityRoleRef> getSecurityRoleRefs();
    Code:
       0: aload_0
       1: getfield      #8                  // Field securityRoleRefs:Ljava/util/List;
       4: invokestatic  #52                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public io.undertow.servlet.api.ServletInfo addHandlerChainWrapper(io.undertow.server.HandlerWrapper);
    Code:
       0: aload_0
       1: getfield      #9                  // Field handlerChainWrappers:Ljava/util/List;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public java.util.List<io.undertow.server.HandlerWrapper> getHandlerChainWrappers();
    Code:
       0: aload_0
       1: getfield      #9                  // Field handlerChainWrappers:Ljava/util/List;
       4: invokestatic  #52                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public io.undertow.servlet.api.ServletSecurityInfo getServletSecurityInfo();
    Code:
       0: aload_0
       1: getfield      #49                 // Field servletSecurityInfo:Lio/undertow/servlet/api/ServletSecurityInfo;
       4: areturn

  public io.undertow.servlet.api.ServletInfo setServletSecurityInfo(io.undertow.servlet.api.ServletSecurityInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field servletSecurityInfo:Lio/undertow/servlet/api/ServletSecurityInfo;
       5: aload_0
       6: areturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #43                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  public io.undertow.servlet.api.ServletInfo setExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field executor:Ljava/util/concurrent/Executor;
       5: aload_0
       6: areturn

  public boolean isRequireWelcomeFileMapping();
    Code:
       0: aload_0
       1: getfield      #45                 // Field requireWelcomeFileMapping:Z
       4: ireturn

  public io.undertow.servlet.api.ServletInfo setRequireWelcomeFileMapping(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field requireWelcomeFileMapping:Z
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #57                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #71                 // String ServletInfo{mappings=
       9: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field mappings:Ljava/util/List;
      16: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #73                 // String , servletClass=
      21: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #26                 // Field servletClass:Ljava/lang/Class;
      28: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #74                 // String , name=\'
      33: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #25                 // Field name:Ljava/lang/String;
      40: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: bipush        39
      45: invokevirtual #75                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: bipush        125
      50: invokevirtual #75                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      53: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method clone:()Lio/undertow/servlet/api/ServletInfo;
       4: areturn
}
