Compiled from "FilterRegistrationImpl.java"
public class io.undertow.servlet.spec.FilterRegistrationImpl implements javax.servlet.FilterRegistration,javax.servlet.FilterRegistration$Dynamic {
  private final io.undertow.servlet.api.FilterInfo filterInfo;

  private final io.undertow.servlet.api.Deployment deployment;

  private final io.undertow.servlet.spec.ServletContextImpl servletContext;

  public io.undertow.servlet.spec.FilterRegistrationImpl(io.undertow.servlet.api.FilterInfo, io.undertow.servlet.api.Deployment, io.undertow.servlet.spec.ServletContextImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field deployment:Lio/undertow/servlet/api/Deployment;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field servletContext:Lio/undertow/servlet/spec/ServletContextImpl;
      19: return

  public void addMappingForServletNames(java.util.EnumSet<javax.servlet.DispatcherType>, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field servletContext:Lio/undertow/servlet/spec/ServletContextImpl;
       4: aload_0
       5: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
       8: aload_1
       9: iload_2
      10: aload_3
      11: invokevirtual #5                  // Method io/undertow/servlet/spec/ServletContextImpl.addMappingForServletNames:(Lio/undertow/servlet/api/FilterInfo;Ljava/util/EnumSet;Z[Ljava/lang/String;)V
      14: return

  public java.util.Collection<java.lang.String> getServletNameMappings();
    Code:
       0: aload_0
       1: getfield      #3                  // Field deployment:Lio/undertow/servlet/api/Deployment;
       4: invokeinterface #6,  1            // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentInfo:()Lio/undertow/servlet/api/DeploymentInfo;
       9: astore_1
      10: new           #7                  // class java/util/ArrayList
      13: dup
      14: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      17: astore_2
      18: aload_1
      19: invokevirtual #9                  // Method io/undertow/servlet/api/DeploymentInfo.getFilterMappings:()Ljava/util/List;
      22: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          92
      37: aload_3
      38: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #13                 // class io/undertow/servlet/api/FilterMappingInfo
      46: astore        4
      48: aload         4
      50: invokevirtual #14                 // Method io/undertow/servlet/api/FilterMappingInfo.getMappingType:()Lio/undertow/servlet/api/FilterMappingInfo$MappingType;
      53: getstatic     #15                 // Field io/undertow/servlet/api/FilterMappingInfo$MappingType.SERVLET:Lio/undertow/servlet/api/FilterMappingInfo$MappingType;
      56: if_acmpne     89
      59: aload         4
      61: invokevirtual #16                 // Method io/undertow/servlet/api/FilterMappingInfo.getFilterName:()Ljava/lang/String;
      64: aload_0
      65: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
      68: invokevirtual #17                 // Method io/undertow/servlet/api/FilterInfo.getName:()Ljava/lang/String;
      71: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      74: ifeq          89
      77: aload_2
      78: aload         4
      80: invokevirtual #19                 // Method io/undertow/servlet/api/FilterMappingInfo.getMapping:()Ljava/lang/String;
      83: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      88: pop
      89: goto          28
      92: aload_2
      93: areturn

  public void addMappingForUrlPatterns(java.util.EnumSet<javax.servlet.DispatcherType>, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field servletContext:Lio/undertow/servlet/spec/ServletContextImpl;
       4: aload_0
       5: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
       8: aload_1
       9: iload_2
      10: aload_3
      11: invokevirtual #21                 // Method io/undertow/servlet/spec/ServletContextImpl.addMappingForUrlPatterns:(Lio/undertow/servlet/api/FilterInfo;Ljava/util/EnumSet;Z[Ljava/lang/String;)V
      14: return

  public java.util.Collection<java.lang.String> getUrlPatternMappings();
    Code:
       0: aload_0
       1: getfield      #3                  // Field deployment:Lio/undertow/servlet/api/Deployment;
       4: invokeinterface #6,  1            // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentInfo:()Lio/undertow/servlet/api/DeploymentInfo;
       9: astore_1
      10: new           #7                  // class java/util/ArrayList
      13: dup
      14: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      17: astore_2
      18: aload_1
      19: invokevirtual #9                  // Method io/undertow/servlet/api/DeploymentInfo.getFilterMappings:()Ljava/util/List;
      22: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          92
      37: aload_3
      38: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #13                 // class io/undertow/servlet/api/FilterMappingInfo
      46: astore        4
      48: aload         4
      50: invokevirtual #14                 // Method io/undertow/servlet/api/FilterMappingInfo.getMappingType:()Lio/undertow/servlet/api/FilterMappingInfo$MappingType;
      53: getstatic     #22                 // Field io/undertow/servlet/api/FilterMappingInfo$MappingType.URL:Lio/undertow/servlet/api/FilterMappingInfo$MappingType;
      56: if_acmpne     89
      59: aload         4
      61: invokevirtual #16                 // Method io/undertow/servlet/api/FilterMappingInfo.getFilterName:()Ljava/lang/String;
      64: aload_0
      65: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
      68: invokevirtual #17                 // Method io/undertow/servlet/api/FilterInfo.getName:()Ljava/lang/String;
      71: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      74: ifeq          89
      77: aload_2
      78: aload         4
      80: invokevirtual #19                 // Method io/undertow/servlet/api/FilterMappingInfo.getMapping:()Ljava/lang/String;
      83: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      88: pop
      89: goto          28
      92: aload_2
      93: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
       4: invokevirtual #17                 // Method io/undertow/servlet/api/FilterInfo.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getClassName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
       4: invokevirtual #23                 // Method io/undertow/servlet/api/FilterInfo.getFilterClass:()Ljava/lang/Class;
       7: invokevirtual #24                 // Method java/lang/Class.getName:()Ljava/lang/String;
      10: areturn

  public boolean setInitParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
       4: invokevirtual #25                 // Method io/undertow/servlet/api/FilterInfo.getInitParams:()Ljava/util/Map;
       7: aload_1
       8: invokeinterface #26,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
      22: aload_1
      23: aload_2
      24: invokevirtual #27                 // Method io/undertow/servlet/api/FilterInfo.addInitParam:(Ljava/lang/String;Ljava/lang/String;)Lio/undertow/servlet/api/FilterInfo;
      27: pop
      28: iconst_1
      29: ireturn

  public java.lang.String getInitParameter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
       4: invokevirtual #25                 // Method io/undertow/servlet/api/FilterInfo.getInitParams:()Ljava/util/Map;
       7: aload_1
       8: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #29                 // class java/lang/String
      16: areturn

  public java.util.Set<java.lang.String> setInitParameters(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #30                 // class java/util/HashSet
       3: dup
       4: invokespecial #31                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #32,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          84
      29: aload_3
      30: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #34                 // class java/util/Map$Entry
      38: astore        4
      40: aload_0
      41: aload         4
      43: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: checkcast     #29                 // class java/lang/String
      51: aload         4
      53: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: checkcast     #29                 // class java/lang/String
      61: invokevirtual #37                 // Method setInitParameter:(Ljava/lang/String;Ljava/lang/String;)Z
      64: ifne          81
      67: aload_2
      68: aload         4
      70: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      75: invokeinterface #38,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      80: pop
      81: goto          20
      84: aload_2
      85: areturn

  public java.util.Map<java.lang.String, java.lang.String> getInitParameters();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
       4: invokevirtual #25                 // Method io/undertow/servlet/api/FilterInfo.getInitParams:()Ljava/util/Map;
       7: areturn

  public void setAsyncSupported(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field filterInfo:Lio/undertow/servlet/api/FilterInfo;
       4: iload_1
       5: invokevirtual #39                 // Method io/undertow/servlet/api/FilterInfo.setAsyncSupported:(Z)Lio/undertow/servlet/api/FilterInfo;
       8: pop
       9: return
}
