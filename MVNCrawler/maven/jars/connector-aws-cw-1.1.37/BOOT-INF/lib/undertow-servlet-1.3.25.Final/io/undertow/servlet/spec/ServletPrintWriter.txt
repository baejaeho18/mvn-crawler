Compiled from "ServletPrintWriter.java"
public class io.undertow.servlet.spec.ServletPrintWriter {
  private static final char[] EMPTY_CHAR;

  private final io.undertow.servlet.spec.ServletOutputStreamImpl outputStream;

  private final java.lang.String charset;

  private java.nio.charset.CharsetEncoder charsetEncoder;

  private boolean error;

  private boolean closed;

  private char[] underflow;

  public io.undertow.servlet.spec.ServletPrintWriter(io.undertow.servlet.spec.ServletOutputStreamImpl, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field error:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field closed:Z
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field charset:Ljava/lang/String;
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      24: aload_2
      25: ldc           #6                  // String utf-8
      27: invokevirtual #7                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      30: ifne          46
      33: aload_2
      34: ldc           #8                  // String iso-8859-1
      36: invokevirtual #7                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      39: ifne          46
      42: aload_0
      43: invokespecial #9                  // Method createEncoder:()V
      46: return

  private void createEncoder();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field charset:Ljava/lang/String;
       5: invokestatic  #10                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       8: invokevirtual #11                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      11: putfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      14: aload_0
      15: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      18: getstatic     #13                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      21: invokevirtual #14                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      24: pop
      25: aload_0
      26: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      29: getstatic     #13                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      32: invokevirtual #15                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      35: pop
      36: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
       4: invokevirtual #16                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flush:()V
       7: goto          16
      10: astore_1
      11: aload_0
      12: iconst_1
      13: putfield      #2                  // Field error:Z
      16: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
       4: invokevirtual #18                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.getServletRequestContext:()Lio/undertow/servlet/handlers/ServletRequestContext;
       7: invokevirtual #19                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
      10: invokevirtual #20                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getDispatcherType:()Ljavax/servlet/DispatcherType;
      13: getstatic     #21                 // Field javax/servlet/DispatcherType.INCLUDE:Ljavax/servlet/DispatcherType;
      16: if_acmpne     20
      19: return
      20: aload_0
      21: getfield      #3                  // Field closed:Z
      24: ifeq          28
      27: return
      28: aload_0
      29: iconst_1
      30: putfield      #3                  // Field closed:Z
      33: iconst_0
      34: istore_1
      35: aload_0
      36: getfield      #22                 // Field underflow:[C
      39: ifnonnull     52
      42: getstatic     #23                 // Field EMPTY_CHAR:[C
      45: invokestatic  #24                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;
      48: astore_2
      49: goto          65
      52: aload_0
      53: getfield      #22                 // Field underflow:[C
      56: invokestatic  #24                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;
      59: astore_2
      60: aload_0
      61: aconst_null
      62: putfield      #22                 // Field underflow:[C
      65: aload_0
      66: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      69: ifnull        143
      72: aload_0
      73: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      76: invokevirtual #25                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.underlyingBuffer:()Ljava/nio/ByteBuffer;
      79: astore_3
      80: aload_3
      81: ifnonnull     90
      84: aload_0
      85: iconst_1
      86: putfield      #2                  // Field error:Z
      89: return
      90: aload_0
      91: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      94: aload_2
      95: aload_3
      96: iconst_1
      97: invokevirtual #26                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     100: astore        4
     102: aload         4
     104: invokevirtual #27                 // Method java/nio/charset/CoderResult.isOverflow:()Z
     107: ifeq          137
     110: aload_0
     111: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     114: invokevirtual #28                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
     117: aload_3
     118: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
     121: ifne          139
     124: aload_0
     125: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     128: invokevirtual #30                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.close:()V
     131: aload_0
     132: iconst_1
     133: putfield      #2                  // Field error:Z
     136: return
     137: iconst_1
     138: istore_1
     139: iload_1
     140: ifeq          72
     143: aload_0
     144: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     147: invokevirtual #30                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.close:()V
     150: goto          159
     153: astore_1
     154: aload_0
     155: iconst_1
     156: putfield      #2                  // Field error:Z
     159: return
    Exception table:
       from    to  target type
          33    89   153   Class java/io/IOException
          90   136   153   Class java/io/IOException
         137   150   153   Class java/io/IOException

  public boolean checkError();
    Code:
       0: aload_0
       1: getfield      #2                  // Field error:Z
       4: ireturn

  public void write(java.nio.CharBuffer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
       4: invokevirtual #25                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.underlyingBuffer:()Ljava/nio/ByteBuffer;
       7: astore_2
       8: aload_2
       9: ifnonnull     18
      12: aload_0
      13: iconst_1
      14: putfield      #2                  // Field error:Z
      17: return
      18: aload_2
      19: invokevirtual #31                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      22: ifne          45
      25: aload_0
      26: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      29: invokevirtual #28                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
      32: aload_2
      33: invokevirtual #31                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      36: ifne          45
      39: aload_0
      40: iconst_1
      41: putfield      #2                  // Field error:Z
      44: return
      45: aload_0
      46: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      49: ifnonnull     56
      52: aload_0
      53: invokespecial #9                  // Method createEncoder:()V
      56: aload_0
      57: getfield      #22                 // Field underflow:[C
      60: ifnonnull     68
      63: aload_1
      64: astore_3
      65: goto          125
      68: aload_0
      69: getfield      #22                 // Field underflow:[C
      72: arraylength
      73: aload_1
      74: invokevirtual #32                 // Method java/nio/CharBuffer.remaining:()I
      77: iadd
      78: newarray       char
      80: astore        4
      82: aload_0
      83: getfield      #22                 // Field underflow:[C
      86: iconst_0
      87: aload         4
      89: iconst_0
      90: aload_0
      91: getfield      #22                 // Field underflow:[C
      94: arraylength
      95: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: aload_1
      99: aload         4
     101: aload_0
     102: getfield      #22                 // Field underflow:[C
     105: arraylength
     106: aload_1
     107: invokevirtual #32                 // Method java/nio/CharBuffer.remaining:()I
     110: invokevirtual #34                 // Method java/nio/CharBuffer.get:([CII)Ljava/nio/CharBuffer;
     113: pop
     114: aload         4
     116: invokestatic  #24                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;
     119: astore_3
     120: aload_0
     121: aconst_null
     122: putfield      #22                 // Field underflow:[C
     125: iconst_m1
     126: istore        4
     128: aload_3
     129: invokevirtual #35                 // Method java/nio/CharBuffer.hasRemaining:()Z
     132: ifeq          297
     135: aload_2
     136: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
     139: istore        5
     141: aload_0
     142: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
     145: aload_3
     146: aload_2
     147: iconst_0
     148: invokevirtual #26                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     151: astore        6
     153: aload_0
     154: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     157: iload         5
     159: aload_2
     160: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
     163: isub
     164: i2l
     165: invokevirtual #36                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.updateWritten:(J)V
     168: aload         6
     170: invokevirtual #27                 // Method java/nio/charset/CoderResult.isOverflow:()Z
     173: ifne          183
     176: aload_2
     177: invokevirtual #31                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     180: ifne          203
     183: aload_0
     184: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     187: invokevirtual #28                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
     190: aload_2
     191: invokevirtual #31                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     194: ifne          203
     197: aload_0
     198: iconst_1
     199: putfield      #2                  // Field error:Z
     202: return
     203: aload         6
     205: invokevirtual #37                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
     208: ifeq          231
     211: aload_0
     212: aload_3
     213: invokevirtual #32                 // Method java/nio/CharBuffer.remaining:()I
     216: newarray       char
     218: putfield      #22                 // Field underflow:[C
     221: aload_3
     222: aload_0
     223: getfield      #22                 // Field underflow:[C
     226: invokevirtual #38                 // Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
     229: pop
     230: return
     231: aload         6
     233: invokevirtual #39                 // Method java/nio/charset/CoderResult.isError:()Z
     236: ifeq          245
     239: aload_0
     240: iconst_1
     241: putfield      #2                  // Field error:Z
     244: return
     245: aload         6
     247: invokevirtual #40                 // Method java/nio/charset/CoderResult.isUnmappable:()Z
     250: ifeq          259
     253: aload_0
     254: iconst_1
     255: putfield      #2                  // Field error:Z
     258: return
     259: iload         4
     261: aload_3
     262: invokevirtual #32                 // Method java/nio/CharBuffer.remaining:()I
     265: if_icmpne     288
     268: aload_0
     269: aload_3
     270: invokevirtual #32                 // Method java/nio/CharBuffer.remaining:()I
     273: newarray       char
     275: putfield      #22                 // Field underflow:[C
     278: aload_3
     279: aload_0
     280: getfield      #22                 // Field underflow:[C
     283: invokevirtual #38                 // Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
     286: pop
     287: return
     288: aload_3
     289: invokevirtual #32                 // Method java/nio/CharBuffer.remaining:()I
     292: istore        4
     294: goto          128
     297: goto          306
     300: astore_3
     301: aload_0
     302: iconst_1
     303: putfield      #2                  // Field error:Z
     306: return
    Exception table:
       from    to  target type
          18    44   300   Class java/io/IOException
          45   202   300   Class java/io/IOException
         203   230   300   Class java/io/IOException
         231   244   300   Class java/io/IOException
         245   258   300   Class java/io/IOException
         259   287   300   Class java/io/IOException
         288   297   300   Class java/io/IOException

  public void write(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2c
       3: invokestatic  #41                 // Method java/lang/Character.toString:(C)Ljava/lang/String;
       6: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
       9: return

  public void write(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
       4: ifnonnull     192
       7: aload_0
       8: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      11: invokevirtual #25                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.underlyingBuffer:()Ljava/nio/ByteBuffer;
      14: astore        4
      16: aload         4
      18: ifnonnull     27
      21: aload_0
      22: iconst_1
      23: putfield      #2                  // Field error:Z
      26: return
      27: aload         4
      29: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
      32: istore        5
      34: iconst_1
      35: istore        6
      37: iload_2
      38: iload_3
      39: iadd
      40: istore        7
      42: iload_2
      43: istore        8
      45: iload         8
      47: iload         5
      49: iadd
      50: istore        9
      52: iload         6
      54: ifeq          141
      57: iload         8
      59: iload         7
      61: if_icmpge     141
      64: iload         7
      66: iload         9
      68: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      71: istore        10
      73: iload         8
      75: iload         10
      77: if_icmpge     114
      80: aload_1
      81: iload         8
      83: caload
      84: istore        11
      86: iload         11
      88: bipush        127
      90: if_icmple     99
      93: iconst_0
      94: istore        6
      96: goto          114
      99: aload         4
     101: iload         11
     103: i2b
     104: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     107: pop
     108: iinc          8, 1
     111: goto          73
     114: iload         8
     116: iload         9
     118: if_icmpne     138
     121: aload_0
     122: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     125: invokevirtual #28                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
     128: iload         8
     130: aload         4
     132: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
     135: iadd
     136: istore        9
     138: goto          52
     141: aload_0
     142: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     145: iload         5
     147: aload         4
     149: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
     152: isub
     153: i2l
     154: invokevirtual #36                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.updateWritten:(J)V
     157: iload         6
     159: ifeq          163
     162: return
     163: aload_1
     164: iload         8
     166: iload_3
     167: iload         8
     169: iload_2
     170: isub
     171: isub
     172: invokestatic  #45                 // Method java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
     175: astore        10
     177: aload_0
     178: aload         10
     180: invokevirtual #46                 // Method write:(Ljava/nio/CharBuffer;)V
     183: return
     184: astore        4
     186: aload_0
     187: iconst_0
     188: putfield      #2                  // Field error:Z
     191: return
     192: aload_1
     193: iload_2
     194: iload_3
     195: invokestatic  #45                 // Method java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
     198: astore        4
     200: aload_0
     201: aload         4
     203: invokevirtual #46                 // Method write:(Ljava/nio/CharBuffer;)V
     206: return
    Exception table:
       from    to  target type
           7    26   184   Class java/io/IOException
          27   162   184   Class java/io/IOException
         163   183   184   Class java/io/IOException

  public void write(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #47                 // Method write:([CII)V
       8: return

  public void write(java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
       4: ifnonnull     173
       7: aload_0
       8: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      11: invokevirtual #25                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.underlyingBuffer:()Ljava/nio/ByteBuffer;
      14: astore        4
      16: aload         4
      18: ifnonnull     27
      21: aload_0
      22: iconst_1
      23: putfield      #2                  // Field error:Z
      26: return
      27: aload         4
      29: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
      32: istore        5
      34: iconst_1
      35: istore        6
      37: iload_2
      38: iload_3
      39: iadd
      40: istore        7
      42: iload_2
      43: istore        8
      45: iload         8
      47: iload         5
      49: iadd
      50: istore        9
      52: iload         8
      54: iload         7
      56: if_icmpge     119
      59: iload         8
      61: iload         9
      63: if_icmpne     83
      66: aload_0
      67: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      70: invokevirtual #28                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
      73: iload         8
      75: aload         4
      77: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
      80: iadd
      81: istore        9
      83: aload_1
      84: iload         8
      86: invokevirtual #48                 // Method java/lang/String.charAt:(I)C
      89: istore        10
      91: iload         10
      93: bipush        127
      95: if_icmple     104
      98: iconst_0
      99: istore        6
     101: goto          119
     104: aload         4
     106: iload         10
     108: i2b
     109: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     112: pop
     113: iinc          8, 1
     116: goto          52
     119: aload_0
     120: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     123: iload         5
     125: aload         4
     127: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
     130: isub
     131: i2l
     132: invokevirtual #36                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.updateWritten:(J)V
     135: iload         6
     137: ifeq          141
     140: return
     141: aload_1
     142: invokevirtual #49                 // Method java/lang/String.toCharArray:()[C
     145: iload         8
     147: iload_3
     148: iload         8
     150: iload_2
     151: isub
     152: isub
     153: invokestatic  #45                 // Method java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
     156: astore        10
     158: aload_0
     159: aload         10
     161: invokevirtual #46                 // Method write:(Ljava/nio/CharBuffer;)V
     164: return
     165: astore        4
     167: aload_0
     168: iconst_0
     169: putfield      #2                  // Field error:Z
     172: return
     173: aload_1
     174: iload_2
     175: iload_2
     176: iload_3
     177: iadd
     178: invokestatic  #50                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
     181: astore        4
     183: aload_0
     184: aload         4
     186: invokevirtual #46                 // Method write:(Ljava/nio/CharBuffer;)V
     189: return
    Exception table:
       from    to  target type
           7    26   165   Class java/io/IOException
          27   140   165   Class java/io/IOException
         141   164   165   Class java/io/IOException

  public void write(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #51                 // Method java/lang/String.length:()I
       7: invokevirtual #52                 // Method write:(Ljava/lang/String;II)V
      10: return

  public void print(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #53                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       5: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #41                 // Method java/lang/Character.toString:(C)Ljava/lang/String;
       5: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #54                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       5: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #55                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       5: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #56                 // Method java/lang/Float.toString:(F)Ljava/lang/String;
       5: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #57                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
       5: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;
       5: invokevirtual #46                 // Method write:(Ljava/nio/CharBuffer;)V
       8: return

  public void print(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     10
       5: ldc           #58                 // String null
       7: goto          11
      10: aload_1
      11: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
      14: return

  public void print(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     10
       5: ldc           #58                 // String null
       7: goto          14
      10: aload_1
      11: invokevirtual #59                 // Method java/lang/Object.toString:()Ljava/lang/String;
      14: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
      17: return

  public void println();
    Code:
       0: aload_0
       1: bipush        10
       3: invokevirtual #60                 // Method print:(C)V
       6: return

  public void println(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method print:(Z)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #60                 // Method print:(C)V
      11: return

  public void println(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method print:(C)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #60                 // Method print:(C)V
      11: return

  public void println(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method print:(I)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #60                 // Method print:(C)V
      11: return

  public void println(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #63                 // Method print:(J)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #60                 // Method print:(C)V
      11: return

  public void println(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokevirtual #64                 // Method print:(F)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #60                 // Method print:(C)V
      11: return

  public void println(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #65                 // Method print:(D)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #60                 // Method print:(C)V
      11: return

  public void println(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method print:([C)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #60                 // Method print:(C)V
      11: return

  public void println(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method print:(Ljava/lang/String;)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #60                 // Method print:(C)V
      11: return

  public void println(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method print:(Ljava/lang/Object;)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #60                 // Method print:(C)V
      11: return

  public void printf(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       6: invokevirtual #67                 // Method print:(Ljava/lang/String;)V
       9: return

  public void printf(java.util.Locale, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #70                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       7: invokevirtual #67                 // Method print:(Ljava/lang/String;)V
      10: return

  public void format(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #71                 // Method printf:(Ljava/lang/String;[Ljava/lang/Object;)V
       6: return

  public void format(java.util.Locale, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #72                 // Method printf:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)V
       7: return

  public void append(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: ldc           #58                 // String null
       7: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
      10: goto          23
      13: aload_0
      14: aload_1
      15: invokeinterface #73,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      20: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
      23: return

  public void append(java.lang.CharSequence, int, int);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: ldc           #58                 // String null
       6: goto          10
       9: aload_1
      10: astore        4
      12: aload_0
      13: aload         4
      15: iload_2
      16: iload_3
      17: invokeinterface #74,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      22: invokeinterface #73,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      27: invokevirtual #42                 // Method write:(Ljava/lang/String;)V
      30: return

  public void append(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #75                 // Method write:(I)V
       5: return

  static {};
    Code:
       0: iconst_0
       1: newarray       char
       3: putstatic     #23                 // Field EMPTY_CHAR:[C
       6: return
}
