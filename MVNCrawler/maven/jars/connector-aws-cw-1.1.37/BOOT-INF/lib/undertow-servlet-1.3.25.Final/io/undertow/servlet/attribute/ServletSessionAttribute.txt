Compiled from "ServletSessionAttribute.java"
public class io.undertow.servlet.attribute.ServletSessionAttribute implements io.undertow.attribute.ExchangeAttribute {
  private final java.lang.String attributeName;

  public io.undertow.servlet.attribute.ServletSessionAttribute(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field attributeName:Ljava/lang/String;
       9: return

  public java.lang.String readAttribute(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: getstatic     #3                  // Field io/undertow/servlet/handlers/ServletRequestContext.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #5                  // class io/undertow/servlet/handlers/ServletRequestContext
      10: astore_2
      11: aload_2
      12: ifnull        68
      15: aload_2
      16: invokevirtual #6                  // Method io/undertow/servlet/handlers/ServletRequestContext.getServletRequest:()Ljavax/servlet/ServletRequest;
      19: astore_3
      20: aload_3
      21: instanceof    #7                  // class javax/servlet/http/HttpServletRequest
      24: ifeq          68
      27: aload_3
      28: checkcast     #7                  // class javax/servlet/http/HttpServletRequest
      31: iconst_0
      32: invokeinterface #8,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
      37: astore        4
      39: aload         4
      41: ifnull        68
      44: aload         4
      46: aload_0
      47: getfield      #2                  // Field attributeName:Ljava/lang/String;
      50: invokeinterface #9,  2            // InterfaceMethod javax/servlet/http/HttpSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      55: astore        5
      57: aload         5
      59: ifnull        68
      62: aload         5
      64: invokevirtual #10                 // Method java/lang/Object.toString:()Ljava/lang/String;
      67: areturn
      68: aconst_null
      69: areturn

  public void writeAttribute(io.undertow.server.HttpServerExchange, java.lang.String) throws io.undertow.attribute.ReadOnlyAttributeException;
    Code:
       0: aload_1
       1: getstatic     #3                  // Field io/undertow/servlet/handlers/ServletRequestContext.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #5                  // class io/undertow/servlet/handlers/ServletRequestContext
      10: astore_3
      11: aload_3
      12: ifnull        59
      15: aload_3
      16: invokevirtual #6                  // Method io/undertow/servlet/handlers/ServletRequestContext.getServletRequest:()Ljavax/servlet/ServletRequest;
      19: astore        4
      21: aload         4
      23: instanceof    #7                  // class javax/servlet/http/HttpServletRequest
      26: ifeq          59
      29: aload         4
      31: checkcast     #7                  // class javax/servlet/http/HttpServletRequest
      34: iconst_0
      35: invokeinterface #8,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
      40: astore        5
      42: aload         5
      44: ifnull        59
      47: aload         5
      49: aload_0
      50: getfield      #2                  // Field attributeName:Ljava/lang/String;
      53: aload_2
      54: invokeinterface #11,  3           // InterfaceMethod javax/servlet/http/HttpSession.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      59: return
}
