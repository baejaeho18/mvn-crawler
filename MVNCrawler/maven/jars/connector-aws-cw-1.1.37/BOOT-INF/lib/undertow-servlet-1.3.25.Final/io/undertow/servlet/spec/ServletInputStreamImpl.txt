Compiled from "ServletInputStreamImpl.java"
public class io.undertow.servlet.spec.ServletInputStreamImpl extends javax.servlet.ServletInputStream {
  private final io.undertow.servlet.spec.HttpServletRequestImpl request;

  private final org.xnio.channels.StreamSourceChannel channel;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private volatile javax.servlet.ReadListener listener;

  private volatile io.undertow.servlet.spec.ServletInputStreamImpl$ServletInputStreamChannelListener internalListener;

  private static final int FLAG_READY;

  private static final int FLAG_CLOSED;

  private static final int FLAG_FINISHED;

  private static final int FLAG_ON_DATA_READ_CALLED;

  private int state;

  private io.undertow.servlet.spec.AsyncContextImpl asyncContext;

  private io.undertow.connector.PooledByteBuffer pooled;

  public io.undertow.servlet.spec.ServletInputStreamImpl(io.undertow.servlet.spec.HttpServletRequestImpl);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method javax/servlet/ServletInputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field request:Lio/undertow/servlet/spec/HttpServletRequestImpl;
       9: aload_1
      10: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      13: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.isRequestChannelAvailable:()Z
      16: ifeq          33
      19: aload_0
      20: aload_1
      21: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      24: invokevirtual #12                 // Method io/undertow/server/HttpServerExchange.getRequestChannel:()Lorg/xnio/channels/StreamSourceChannel;
      27: putfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      30: goto          51
      33: aload_0
      34: new           #13                 // class org/xnio/channels/EmptyStreamSourceChannel
      37: dup
      38: aload_1
      39: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      42: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      45: invokespecial #15                 // Method org/xnio/channels/EmptyStreamSourceChannel."<init>":(Lorg/xnio/XnioIoThread;)V
      48: putfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      51: aload_0
      52: aload_1
      53: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      56: invokevirtual #16                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      59: invokevirtual #17                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      62: putfield      #18                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      65: return

  public boolean isFinished();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_4
       5: invokestatic  #20                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public boolean isReady();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_1
       5: invokestatic  #20                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          22
      11: aload_0
      12: invokevirtual #21                 // Method isFinished:()Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public void setReadListener(javax.servlet.ReadListener);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
       7: invokeinterface #23,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.listenerCannotBeNull:()Ljava/lang/NullPointerException;
      12: athrow
      13: aload_0
      14: getfield      #1                  // Field listener:Ljavax/servlet/ReadListener;
      17: ifnull        29
      20: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      23: invokeinterface #24,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.listenerAlreadySet:()Ljava/lang/IllegalStateException;
      28: athrow
      29: aload_0
      30: getfield      #2                  // Field request:Lio/undertow/servlet/spec/HttpServletRequestImpl;
      33: invokevirtual #25                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.isAsyncStarted:()Z
      36: ifne          48
      39: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      42: invokeinterface #26,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.asyncNotStarted:()Ljava/lang/IllegalStateException;
      47: athrow
      48: aload_0
      49: aload_0
      50: getfield      #2                  // Field request:Lio/undertow/servlet/spec/HttpServletRequestImpl;
      53: invokevirtual #27                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getAsyncContext:()Lio/undertow/servlet/spec/AsyncContextImpl;
      56: putfield      #6                  // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
      59: aload_0
      60: aload_1
      61: putfield      #1                  // Field listener:Ljavax/servlet/ReadListener;
      64: aload_0
      65: getfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      68: invokeinterface #28,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      73: aload_0
      74: new           #29                 // class io/undertow/servlet/spec/ServletInputStreamImpl$ServletInputStreamChannelListener
      77: dup
      78: aload_0
      79: aconst_null
      80: invokespecial #30                 // Method io/undertow/servlet/spec/ServletInputStreamImpl$ServletInputStreamChannelListener."<init>":(Lio/undertow/servlet/spec/ServletInputStreamImpl;Lio/undertow/servlet/spec/ServletInputStreamImpl$1;)V
      83: dup_x1
      84: putfield      #7                  // Field internalListener:Lio/undertow/servlet/spec/ServletInputStreamImpl$ServletInputStreamChannelListener;
      87: invokeinterface #31,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      92: aload_0
      93: getfield      #6                  // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
      96: new           #32                 // class io/undertow/servlet/spec/ServletInputStreamImpl$1
      99: dup
     100: aload_0
     101: invokespecial #33                 // Method io/undertow/servlet/spec/ServletInputStreamImpl$1."<init>":(Lio/undertow/servlet/spec/ServletInputStreamImpl;)V
     104: invokevirtual #34                 // Method io/undertow/servlet/spec/AsyncContextImpl.addAsyncTask:(Ljava/lang/Runnable;)V
     107: return

  public int read() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokevirtual #35                 // Method read:([B)I
       9: istore_2
      10: iload_2
      11: iconst_m1
      12: if_icmpne     17
      15: iconst_m1
      16: ireturn
      17: aload_1
      18: iconst_0
      19: baload
      20: sipush        255
      23: iand
      24: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #36                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_2
       5: invokestatic  #20                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      14: invokeinterface #37,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: getfield      #1                  // Field listener:Ljavax/servlet/ReadListener;
      24: ifnull        47
      27: aload_0
      28: getfield      #5                  // Field state:I
      31: iconst_1
      32: invokestatic  #38                 // Method org/xnio/Bits.anyAreClear:(II)Z
      35: ifeq          51
      38: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      41: invokeinterface #39,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotReady:()Ljava/lang/IllegalStateException;
      46: athrow
      47: aload_0
      48: invokespecial #40                 // Method readIntoBuffer:()V
      51: aload_0
      52: getfield      #5                  // Field state:I
      55: iconst_4
      56: invokestatic  #20                 // Method org/xnio/Bits.anyAreSet:(II)Z
      59: ifeq          64
      62: iconst_m1
      63: ireturn
      64: iload_3
      65: ifne          70
      68: iconst_0
      69: ireturn
      70: aload_0
      71: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      74: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      79: astore        4
      81: aload_1
      82: iload_2
      83: iload_3
      84: invokestatic  #42                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      87: aload         4
      89: invokestatic  #43                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      92: istore        5
      94: aload         4
      96: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      99: ifne          127
     102: aload_0
     103: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     106: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     111: aload_0
     112: aconst_null
     113: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     116: aload_0
     117: getfield      #1                  // Field listener:Ljavax/servlet/ReadListener;
     120: ifnull        127
     123: aload_0
     124: invokespecial #4                  // Method readIntoBufferNonBlocking:()V
     127: iload         5
     129: ireturn

  private void readIntoBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     90
       7: aload_0
       8: getfield      #5                  // Field state:I
      11: iconst_4
      12: invokestatic  #20                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifne          90
      18: aload_0
      19: aload_0
      20: getfield      #18                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      23: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      28: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      31: aload_0
      32: getfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      35: aload_0
      36: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      39: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      44: invokestatic  #47                 // Method org/xnio/channels/Channels.readBlocking:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I
      47: istore_1
      48: aload_0
      49: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      52: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      57: invokevirtual #48                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      60: pop
      61: iload_1
      62: iconst_m1
      63: if_icmpne     90
      66: aload_0
      67: dup
      68: getfield      #5                  // Field state:I
      71: iconst_4
      72: ior
      73: putfield      #5                  // Field state:I
      76: aload_0
      77: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      80: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      85: aload_0
      86: aconst_null
      87: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      90: return

  private void readIntoBufferNonBlocking() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     254
       7: aload_0
       8: getfield      #5                  // Field state:I
      11: iconst_4
      12: invokestatic  #20                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifne          254
      18: aload_0
      19: aload_0
      20: getfield      #18                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      23: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      28: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      31: aload_0
      32: getfield      #1                  // Field listener:Ljavax/servlet/ReadListener;
      35: ifnonnull     121
      38: aload_0
      39: getfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      42: aload_0
      43: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      46: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      51: invokeinterface #49,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      56: istore_1
      57: iload_1
      58: ifne          76
      61: aload_0
      62: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      65: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      70: aload_0
      71: aconst_null
      72: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      75: return
      76: aload_0
      77: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      80: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      85: invokevirtual #48                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      88: pop
      89: iload_1
      90: iconst_m1
      91: if_icmpne     118
      94: aload_0
      95: dup
      96: getfield      #5                  // Field state:I
      99: iconst_4
     100: ior
     101: putfield      #5                  // Field state:I
     104: aload_0
     105: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     108: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     113: aload_0
     114: aconst_null
     115: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     118: goto          254
     121: aload_0
     122: getfield      #5                  // Field state:I
     125: iconst_1
     126: invokestatic  #38                 // Method org/xnio/Bits.anyAreClear:(II)Z
     129: ifeq          141
     132: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
     135: invokeinterface #39,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotReady:()Ljava/lang/IllegalStateException;
     140: athrow
     141: aload_0
     142: getfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     145: aload_0
     146: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     149: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     154: invokeinterface #49,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     159: istore_1
     160: aload_0
     161: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     164: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     169: invokevirtual #48                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     172: pop
     173: iload_1
     174: iconst_m1
     175: if_icmpne     205
     178: aload_0
     179: dup
     180: getfield      #5                  // Field state:I
     183: iconst_4
     184: ior
     185: putfield      #5                  // Field state:I
     188: aload_0
     189: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     192: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     197: aload_0
     198: aconst_null
     199: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     202: goto          254
     205: iload_1
     206: ifne          254
     209: aload_0
     210: dup
     211: getfield      #5                  // Field state:I
     214: bipush        -2
     216: iand
     217: putfield      #5                  // Field state:I
     220: aload_0
     221: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     224: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     229: aload_0
     230: aconst_null
     231: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     234: aload_0
     235: getfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     238: invokeinterface #50,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getIoThread:()Lorg/xnio/XnioIoThread;
     243: new           #51                 // class io/undertow/servlet/spec/ServletInputStreamImpl$2
     246: dup
     247: aload_0
     248: invokespecial #52                 // Method io/undertow/servlet/spec/ServletInputStreamImpl$2."<init>":(Lio/undertow/servlet/spec/ServletInputStreamImpl;)V
     251: invokevirtual #53                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
     254: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_2
       5: invokestatic  #20                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      14: invokeinterface #37,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: invokespecial #4                  // Method readIntoBufferNonBlocking:()V
      24: aload_0
      25: getfield      #5                  // Field state:I
      28: iconst_4
      29: invokestatic  #20                 // Method org/xnio/Bits.anyAreSet:(II)Z
      32: ifeq          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      41: ifnonnull     46
      44: iconst_0
      45: ireturn
      46: aload_0
      47: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      50: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      55: invokevirtual #54                 // Method java/nio/ByteBuffer.remaining:()I
      58: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_2
       5: invokestatic  #20                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: aload_0
      14: getfield      #5                  // Field state:I
      17: iconst_2
      18: ior
      19: putfield      #5                  // Field state:I
      22: aload_0
      23: getfield      #5                  // Field state:I
      26: iconst_4
      27: invokestatic  #55                 // Method org/xnio/Bits.allAreClear:(II)Z
      30: ifeq          61
      33: aload_0
      34: invokespecial #40                 // Method readIntoBuffer:()V
      37: aload_0
      38: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      41: ifnull        22
      44: aload_0
      45: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      48: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      53: aload_0
      54: aconst_null
      55: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      58: goto          22
      61: aload_0
      62: dup
      63: getfield      #5                  // Field state:I
      66: iconst_4
      67: ior
      68: putfield      #5                  // Field state:I
      71: aload_0
      72: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      75: ifnull        92
      78: aload_0
      79: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      82: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      87: aload_0
      88: aconst_null
      89: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      92: aload_0
      93: getfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      96: invokeinterface #56,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
     101: goto          147
     104: astore_1
     105: aload_0
     106: dup
     107: getfield      #5                  // Field state:I
     110: iconst_4
     111: ior
     112: putfield      #5                  // Field state:I
     115: aload_0
     116: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     119: ifnull        136
     122: aload_0
     123: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     126: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     131: aload_0
     132: aconst_null
     133: putfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     136: aload_0
     137: getfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     140: invokeinterface #56,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
     145: aload_1
     146: athrow
     147: return
    Exception table:
       from    to  target type
          22    61   104   any

  static org.xnio.channels.StreamSourceChannel access$100(io.undertow.servlet.spec.ServletInputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #8                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: areturn

  static io.undertow.servlet.spec.ServletInputStreamImpl$ServletInputStreamChannelListener access$200(io.undertow.servlet.spec.ServletInputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field internalListener:Lio/undertow/servlet/spec/ServletInputStreamImpl$ServletInputStreamChannelListener;
       4: areturn

  static io.undertow.servlet.spec.AsyncContextImpl access$300(io.undertow.servlet.spec.ServletInputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
       4: areturn

  static int access$400(io.undertow.servlet.spec.ServletInputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: ireturn

  static int access$402(io.undertow.servlet.spec.ServletInputStreamImpl, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #5                  // Field state:I
       6: ireturn

  static void access$500(io.undertow.servlet.spec.ServletInputStreamImpl) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method readIntoBufferNonBlocking:()V
       4: return

  static io.undertow.connector.PooledByteBuffer access$600(io.undertow.servlet.spec.ServletInputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pooled:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static io.undertow.servlet.spec.HttpServletRequestImpl access$700(io.undertow.servlet.spec.ServletInputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field request:Lio/undertow/servlet/spec/HttpServletRequestImpl;
       4: areturn

  static javax.servlet.ReadListener access$800(io.undertow.servlet.spec.ServletInputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listener:Ljavax/servlet/ReadListener;
       4: areturn
}
