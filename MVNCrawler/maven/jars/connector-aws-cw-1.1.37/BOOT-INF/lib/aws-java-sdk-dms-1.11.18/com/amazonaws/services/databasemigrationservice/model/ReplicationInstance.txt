Compiled from "ReplicationInstance.java"
public class com.amazonaws.services.databasemigrationservice.model.ReplicationInstance implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String replicationInstanceIdentifier;

  private java.lang.String replicationInstanceClass;

  private java.lang.String replicationInstanceStatus;

  private java.lang.Integer allocatedStorage;

  private java.util.Date instanceCreateTime;

  private java.util.List<com.amazonaws.services.databasemigrationservice.model.VpcSecurityGroupMembership> vpcSecurityGroups;

  private java.lang.String availabilityZone;

  private com.amazonaws.services.databasemigrationservice.model.ReplicationSubnetGroup replicationSubnetGroup;

  private java.lang.String preferredMaintenanceWindow;

  private com.amazonaws.services.databasemigrationservice.model.ReplicationPendingModifiedValues pendingModifiedValues;

  private java.lang.Boolean multiAZ;

  private java.lang.String engineVersion;

  private java.lang.Boolean autoMinorVersionUpgrade;

  private java.lang.String kmsKeyId;

  private java.lang.String replicationInstanceArn;

  private java.lang.String replicationInstancePublicIpAddress;

  private java.lang.String replicationInstancePrivateIpAddress;

  private java.util.List<java.lang.String> replicationInstancePublicIpAddresses;

  private java.util.List<java.lang.String> replicationInstancePrivateIpAddresses;

  private java.lang.Boolean publiclyAccessible;

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setReplicationInstanceIdentifier(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field replicationInstanceIdentifier:Ljava/lang/String;
       5: return

  public java.lang.String getReplicationInstanceIdentifier();
    Code:
       0: aload_0
       1: getfield      #2                  // Field replicationInstanceIdentifier:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstanceIdentifier(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setReplicationInstanceIdentifier:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReplicationInstanceClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field replicationInstanceClass:Ljava/lang/String;
       5: return

  public java.lang.String getReplicationInstanceClass();
    Code:
       0: aload_0
       1: getfield      #4                  // Field replicationInstanceClass:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstanceClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setReplicationInstanceClass:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReplicationInstanceStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field replicationInstanceStatus:Ljava/lang/String;
       5: return

  public java.lang.String getReplicationInstanceStatus();
    Code:
       0: aload_0
       1: getfield      #6                  // Field replicationInstanceStatus:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstanceStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setReplicationInstanceStatus:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setAllocatedStorage(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field allocatedStorage:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getAllocatedStorage();
    Code:
       0: aload_0
       1: getfield      #8                  // Field allocatedStorage:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withAllocatedStorage(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setAllocatedStorage:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setInstanceCreateTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field instanceCreateTime:Ljava/util/Date;
       5: return

  public java.util.Date getInstanceCreateTime();
    Code:
       0: aload_0
       1: getfield      #10                 // Field instanceCreateTime:Ljava/util/Date;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withInstanceCreateTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setInstanceCreateTime:(Ljava/util/Date;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.databasemigrationservice.model.VpcSecurityGroupMembership> getVpcSecurityGroups();
    Code:
       0: aload_0
       1: getfield      #12                 // Field vpcSecurityGroups:Ljava/util/List;
       4: areturn

  public void setVpcSecurityGroups(java.util.Collection<com.amazonaws.services.databasemigrationservice.model.VpcSecurityGroupMembership>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #12                 // Field vpcSecurityGroups:Ljava/util/List;
       9: return
      10: aload_0
      11: new           #13                 // class java/util/ArrayList
      14: dup
      15: aload_1
      16: invokespecial #14                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: putfield      #12                 // Field vpcSecurityGroups:Ljava/util/List;
      22: return

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withVpcSecurityGroups(com.amazonaws.services.databasemigrationservice.model.VpcSecurityGroupMembership...);
    Code:
       0: aload_0
       1: getfield      #12                 // Field vpcSecurityGroups:Ljava/util/List;
       4: ifnonnull     20
       7: aload_0
       8: new           #13                 // class java/util/ArrayList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #15                 // Method java/util/ArrayList."<init>":(I)V
      17: invokevirtual #16                 // Method setVpcSecurityGroups:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     58
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #12                 // Field vpcSecurityGroups:Ljava/util/List;
      44: aload         5
      46: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: iinc          4, 1
      55: goto          28
      58: aload_0
      59: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withVpcSecurityGroups(java.util.Collection<com.amazonaws.services.databasemigrationservice.model.VpcSecurityGroupMembership>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method setVpcSecurityGroups:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setAvailabilityZone(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field availabilityZone:Ljava/lang/String;
       5: return

  public java.lang.String getAvailabilityZone();
    Code:
       0: aload_0
       1: getfield      #18                 // Field availabilityZone:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withAvailabilityZone(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method setAvailabilityZone:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReplicationSubnetGroup(com.amazonaws.services.databasemigrationservice.model.ReplicationSubnetGroup);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field replicationSubnetGroup:Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
       5: return

  public com.amazonaws.services.databasemigrationservice.model.ReplicationSubnetGroup getReplicationSubnetGroup();
    Code:
       0: aload_0
       1: getfield      #20                 // Field replicationSubnetGroup:Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationSubnetGroup(com.amazonaws.services.databasemigrationservice.model.ReplicationSubnetGroup);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method setReplicationSubnetGroup:(Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;)V
       5: aload_0
       6: areturn

  public void setPreferredMaintenanceWindow(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field preferredMaintenanceWindow:Ljava/lang/String;
       5: return

  public java.lang.String getPreferredMaintenanceWindow();
    Code:
       0: aload_0
       1: getfield      #22                 // Field preferredMaintenanceWindow:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withPreferredMaintenanceWindow(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method setPreferredMaintenanceWindow:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPendingModifiedValues(com.amazonaws.services.databasemigrationservice.model.ReplicationPendingModifiedValues);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field pendingModifiedValues:Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
       5: return

  public com.amazonaws.services.databasemigrationservice.model.ReplicationPendingModifiedValues getPendingModifiedValues();
    Code:
       0: aload_0
       1: getfield      #24                 // Field pendingModifiedValues:Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withPendingModifiedValues(com.amazonaws.services.databasemigrationservice.model.ReplicationPendingModifiedValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method setPendingModifiedValues:(Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;)V
       5: aload_0
       6: areturn

  public void setMultiAZ(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field multiAZ:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getMultiAZ();
    Code:
       0: aload_0
       1: getfield      #26                 // Field multiAZ:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withMultiAZ(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method setMultiAZ:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isMultiAZ();
    Code:
       0: aload_0
       1: getfield      #26                 // Field multiAZ:Ljava/lang/Boolean;
       4: areturn

  public void setEngineVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field engineVersion:Ljava/lang/String;
       5: return

  public java.lang.String getEngineVersion();
    Code:
       0: aload_0
       1: getfield      #28                 // Field engineVersion:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withEngineVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method setEngineVersion:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setAutoMinorVersionUpgrade(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field autoMinorVersionUpgrade:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getAutoMinorVersionUpgrade();
    Code:
       0: aload_0
       1: getfield      #30                 // Field autoMinorVersionUpgrade:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withAutoMinorVersionUpgrade(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method setAutoMinorVersionUpgrade:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isAutoMinorVersionUpgrade();
    Code:
       0: aload_0
       1: getfield      #30                 // Field autoMinorVersionUpgrade:Ljava/lang/Boolean;
       4: areturn

  public void setKmsKeyId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field kmsKeyId:Ljava/lang/String;
       5: return

  public java.lang.String getKmsKeyId();
    Code:
       0: aload_0
       1: getfield      #32                 // Field kmsKeyId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withKmsKeyId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method setKmsKeyId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReplicationInstanceArn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field replicationInstanceArn:Ljava/lang/String;
       5: return

  public java.lang.String getReplicationInstanceArn();
    Code:
       0: aload_0
       1: getfield      #34                 // Field replicationInstanceArn:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstanceArn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method setReplicationInstanceArn:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReplicationInstancePublicIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field replicationInstancePublicIpAddress:Ljava/lang/String;
       5: return

  public java.lang.String getReplicationInstancePublicIpAddress();
    Code:
       0: aload_0
       1: getfield      #36                 // Field replicationInstancePublicIpAddress:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstancePublicIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method setReplicationInstancePublicIpAddress:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReplicationInstancePrivateIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field replicationInstancePrivateIpAddress:Ljava/lang/String;
       5: return

  public java.lang.String getReplicationInstancePrivateIpAddress();
    Code:
       0: aload_0
       1: getfield      #38                 // Field replicationInstancePrivateIpAddress:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstancePrivateIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method setReplicationInstancePrivateIpAddress:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getReplicationInstancePublicIpAddresses();
    Code:
       0: aload_0
       1: getfield      #40                 // Field replicationInstancePublicIpAddresses:Ljava/util/List;
       4: areturn

  public void setReplicationInstancePublicIpAddresses(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #40                 // Field replicationInstancePublicIpAddresses:Ljava/util/List;
       9: return
      10: aload_0
      11: new           #13                 // class java/util/ArrayList
      14: dup
      15: aload_1
      16: invokespecial #14                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: putfield      #40                 // Field replicationInstancePublicIpAddresses:Ljava/util/List;
      22: return

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstancePublicIpAddresses(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #40                 // Field replicationInstancePublicIpAddresses:Ljava/util/List;
       4: ifnonnull     20
       7: aload_0
       8: new           #13                 // class java/util/ArrayList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #15                 // Method java/util/ArrayList."<init>":(I)V
      17: invokevirtual #41                 // Method setReplicationInstancePublicIpAddresses:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     58
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #40                 // Field replicationInstancePublicIpAddresses:Ljava/util/List;
      44: aload         5
      46: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: iinc          4, 1
      55: goto          28
      58: aload_0
      59: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstancePublicIpAddresses(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method setReplicationInstancePublicIpAddresses:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getReplicationInstancePrivateIpAddresses();
    Code:
       0: aload_0
       1: getfield      #42                 // Field replicationInstancePrivateIpAddresses:Ljava/util/List;
       4: areturn

  public void setReplicationInstancePrivateIpAddresses(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #42                 // Field replicationInstancePrivateIpAddresses:Ljava/util/List;
       9: return
      10: aload_0
      11: new           #13                 // class java/util/ArrayList
      14: dup
      15: aload_1
      16: invokespecial #14                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: putfield      #42                 // Field replicationInstancePrivateIpAddresses:Ljava/util/List;
      22: return

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstancePrivateIpAddresses(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #42                 // Field replicationInstancePrivateIpAddresses:Ljava/util/List;
       4: ifnonnull     20
       7: aload_0
       8: new           #13                 // class java/util/ArrayList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #15                 // Method java/util/ArrayList."<init>":(I)V
      17: invokevirtual #43                 // Method setReplicationInstancePrivateIpAddresses:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     58
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #42                 // Field replicationInstancePrivateIpAddresses:Ljava/util/List;
      44: aload         5
      46: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: iinc          4, 1
      55: goto          28
      58: aload_0
      59: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withReplicationInstancePrivateIpAddresses(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method setReplicationInstancePrivateIpAddresses:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setPubliclyAccessible(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field publiclyAccessible:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getPubliclyAccessible();
    Code:
       0: aload_0
       1: getfield      #44                 // Field publiclyAccessible:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance withPubliclyAccessible(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method setPubliclyAccessible:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isPubliclyAccessible();
    Code:
       0: aload_0
       1: getfield      #44                 // Field publiclyAccessible:Ljava/lang/Boolean;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #46                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #48                 // String {
      11: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #50                 // Method getReplicationInstanceIdentifier:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #46                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #51                 // String ReplicationInstanceIdentifier:
      32: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #50                 // Method getReplicationInstanceIdentifier:()Ljava/lang/String;
      39: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #52                 // String ,
      44: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #54                 // Method getReplicationInstanceClass:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #46                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #55                 // String ReplicationInstanceClass:
      71: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #54                 // Method getReplicationInstanceClass:()Ljava/lang/String;
      78: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #52                 // String ,
      83: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #56                 // Method getReplicationInstanceStatus:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #46                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #57                 // String ReplicationInstanceStatus:
     110: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #56                 // Method getReplicationInstanceStatus:()Ljava/lang/String;
     117: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #52                 // String ,
     122: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #58                 // Method getAllocatedStorage:()Ljava/lang/Integer;
     136: ifnull        171
     139: aload_1
     140: new           #46                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #59                 // String AllocatedStorage:
     149: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #58                 // Method getAllocatedStorage:()Ljava/lang/Integer;
     156: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #52                 // String ,
     161: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #61                 // Method getInstanceCreateTime:()Ljava/util/Date;
     175: ifnull        210
     178: aload_1
     179: new           #46                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #62                 // String InstanceCreateTime:
     188: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #61                 // Method getInstanceCreateTime:()Ljava/util/Date;
     195: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     198: ldc           #52                 // String ,
     200: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #63                 // Method getVpcSecurityGroups:()Ljava/util/List;
     214: ifnull        249
     217: aload_1
     218: new           #46                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #64                 // String VpcSecurityGroups:
     227: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #63                 // Method getVpcSecurityGroups:()Ljava/util/List;
     234: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #52                 // String ,
     239: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #65                 // Method getAvailabilityZone:()Ljava/lang/String;
     253: ifnull        288
     256: aload_1
     257: new           #46                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #66                 // String AvailabilityZone:
     266: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #65                 // Method getAvailabilityZone:()Ljava/lang/String;
     273: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #52                 // String ,
     278: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #67                 // Method getReplicationSubnetGroup:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
     292: ifnull        327
     295: aload_1
     296: new           #46                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #68                 // String ReplicationSubnetGroup:
     305: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #67                 // Method getReplicationSubnetGroup:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
     312: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #52                 // String ,
     317: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #69                 // Method getPreferredMaintenanceWindow:()Ljava/lang/String;
     331: ifnull        366
     334: aload_1
     335: new           #46                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #70                 // String PreferredMaintenanceWindow:
     344: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #69                 // Method getPreferredMaintenanceWindow:()Ljava/lang/String;
     351: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: ldc           #52                 // String ,
     356: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #71                 // Method getPendingModifiedValues:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
     370: ifnull        405
     373: aload_1
     374: new           #46                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #72                 // String PendingModifiedValues:
     383: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #71                 // Method getPendingModifiedValues:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
     390: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     393: ldc           #52                 // String ,
     395: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #73                 // Method getMultiAZ:()Ljava/lang/Boolean;
     409: ifnull        444
     412: aload_1
     413: new           #46                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #74                 // String MultiAZ:
     422: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #73                 // Method getMultiAZ:()Ljava/lang/Boolean;
     429: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     432: ldc           #52                 // String ,
     434: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #75                 // Method getEngineVersion:()Ljava/lang/String;
     448: ifnull        483
     451: aload_1
     452: new           #46                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #76                 // String EngineVersion:
     461: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #75                 // Method getEngineVersion:()Ljava/lang/String;
     468: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     471: ldc           #52                 // String ,
     473: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #77                 // Method getAutoMinorVersionUpgrade:()Ljava/lang/Boolean;
     487: ifnull        522
     490: aload_1
     491: new           #46                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #78                 // String AutoMinorVersionUpgrade:
     500: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #77                 // Method getAutoMinorVersionUpgrade:()Ljava/lang/Boolean;
     507: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     510: ldc           #52                 // String ,
     512: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #79                 // Method getKmsKeyId:()Ljava/lang/String;
     526: ifnull        561
     529: aload_1
     530: new           #46                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #80                 // String KmsKeyId:
     539: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #79                 // Method getKmsKeyId:()Ljava/lang/String;
     546: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     549: ldc           #52                 // String ,
     551: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #81                 // Method getReplicationInstanceArn:()Ljava/lang/String;
     565: ifnull        600
     568: aload_1
     569: new           #46                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #82                 // String ReplicationInstanceArn:
     578: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #81                 // Method getReplicationInstanceArn:()Ljava/lang/String;
     585: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     588: ldc           #52                 // String ,
     590: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #83                 // Method getReplicationInstancePublicIpAddress:()Ljava/lang/String;
     604: ifnull        639
     607: aload_1
     608: new           #46                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #84                 // String ReplicationInstancePublicIpAddress:
     617: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #83                 // Method getReplicationInstancePublicIpAddress:()Ljava/lang/String;
     624: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     627: ldc           #52                 // String ,
     629: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     632: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     635: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     638: pop
     639: aload_0
     640: invokevirtual #85                 // Method getReplicationInstancePrivateIpAddress:()Ljava/lang/String;
     643: ifnull        678
     646: aload_1
     647: new           #46                 // class java/lang/StringBuilder
     650: dup
     651: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     654: ldc           #86                 // String ReplicationInstancePrivateIpAddress:
     656: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     659: aload_0
     660: invokevirtual #85                 // Method getReplicationInstancePrivateIpAddress:()Ljava/lang/String;
     663: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     666: ldc           #52                 // String ,
     668: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     671: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     674: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     677: pop
     678: aload_0
     679: invokevirtual #87                 // Method getReplicationInstancePublicIpAddresses:()Ljava/util/List;
     682: ifnull        717
     685: aload_1
     686: new           #46                 // class java/lang/StringBuilder
     689: dup
     690: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     693: ldc           #88                 // String ReplicationInstancePublicIpAddresses:
     695: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     698: aload_0
     699: invokevirtual #87                 // Method getReplicationInstancePublicIpAddresses:()Ljava/util/List;
     702: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     705: ldc           #52                 // String ,
     707: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     710: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     713: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     716: pop
     717: aload_0
     718: invokevirtual #89                 // Method getReplicationInstancePrivateIpAddresses:()Ljava/util/List;
     721: ifnull        756
     724: aload_1
     725: new           #46                 // class java/lang/StringBuilder
     728: dup
     729: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     732: ldc           #90                 // String ReplicationInstancePrivateIpAddresses:
     734: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     737: aload_0
     738: invokevirtual #89                 // Method getReplicationInstancePrivateIpAddresses:()Ljava/util/List;
     741: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     744: ldc           #52                 // String ,
     746: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     749: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     752: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     755: pop
     756: aload_0
     757: invokevirtual #91                 // Method getPubliclyAccessible:()Ljava/lang/Boolean;
     760: ifnull        790
     763: aload_1
     764: new           #46                 // class java/lang/StringBuilder
     767: dup
     768: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     771: ldc           #92                 // String PubliclyAccessible:
     773: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     776: aload_0
     777: invokevirtual #91                 // Method getPubliclyAccessible:()Ljava/lang/Boolean;
     780: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     783: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     786: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     789: pop
     790: aload_1
     791: ldc           #93                 // String }
     793: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     796: pop
     797: aload_1
     798: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     801: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #94                 // class com/amazonaws/services/databasemigrationservice/model/ReplicationInstance
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #94                 // class com/amazonaws/services/databasemigrationservice/model/ReplicationInstance
      26: astore_2
      27: aload_2
      28: invokevirtual #50                 // Method getReplicationInstanceIdentifier:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #50                 // Method getReplicationInstanceIdentifier:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #50                 // Method getReplicationInstanceIdentifier:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #50                 // Method getReplicationInstanceIdentifier:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #50                 // Method getReplicationInstanceIdentifier:()Ljava/lang/String;
      72: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #54                 // Method getReplicationInstanceClass:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #54                 // Method getReplicationInstanceClass:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #54                 // Method getReplicationInstanceClass:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #54                 // Method getReplicationInstanceClass:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #54                 // Method getReplicationInstanceClass:()Ljava/lang/String;
     125: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #56                 // Method getReplicationInstanceStatus:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #56                 // Method getReplicationInstanceStatus:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #56                 // Method getReplicationInstanceStatus:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #56                 // Method getReplicationInstanceStatus:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #56                 // Method getReplicationInstanceStatus:()Ljava/lang/String;
     178: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #58                 // Method getAllocatedStorage:()Ljava/lang/Integer;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #58                 // Method getAllocatedStorage:()Ljava/lang/Integer;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #58                 // Method getAllocatedStorage:()Ljava/lang/Integer;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #58                 // Method getAllocatedStorage:()Ljava/lang/Integer;
     227: aload_0
     228: invokevirtual #58                 // Method getAllocatedStorage:()Ljava/lang/Integer;
     231: invokevirtual #96                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #61                 // Method getInstanceCreateTime:()Ljava/util/Date;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #61                 // Method getInstanceCreateTime:()Ljava/util/Date;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #61                 // Method getInstanceCreateTime:()Ljava/util/Date;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #61                 // Method getInstanceCreateTime:()Ljava/util/Date;
     280: aload_0
     281: invokevirtual #61                 // Method getInstanceCreateTime:()Ljava/util/Date;
     284: invokevirtual #97                 // Method java/util/Date.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload_2
     293: invokevirtual #63                 // Method getVpcSecurityGroups:()Ljava/util/List;
     296: ifnonnull     303
     299: iconst_1
     300: goto          304
     303: iconst_0
     304: aload_0
     305: invokevirtual #63                 // Method getVpcSecurityGroups:()Ljava/util/List;
     308: ifnonnull     315
     311: iconst_1
     312: goto          316
     315: iconst_0
     316: ixor
     317: ifeq          322
     320: iconst_0
     321: ireturn
     322: aload_2
     323: invokevirtual #63                 // Method getVpcSecurityGroups:()Ljava/util/List;
     326: ifnull        347
     329: aload_2
     330: invokevirtual #63                 // Method getVpcSecurityGroups:()Ljava/util/List;
     333: aload_0
     334: invokevirtual #63                 // Method getVpcSecurityGroups:()Ljava/util/List;
     337: invokeinterface #98,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     342: ifne          347
     345: iconst_0
     346: ireturn
     347: aload_2
     348: invokevirtual #65                 // Method getAvailabilityZone:()Ljava/lang/String;
     351: ifnonnull     358
     354: iconst_1
     355: goto          359
     358: iconst_0
     359: aload_0
     360: invokevirtual #65                 // Method getAvailabilityZone:()Ljava/lang/String;
     363: ifnonnull     370
     366: iconst_1
     367: goto          371
     370: iconst_0
     371: ixor
     372: ifeq          377
     375: iconst_0
     376: ireturn
     377: aload_2
     378: invokevirtual #65                 // Method getAvailabilityZone:()Ljava/lang/String;
     381: ifnull        400
     384: aload_2
     385: invokevirtual #65                 // Method getAvailabilityZone:()Ljava/lang/String;
     388: aload_0
     389: invokevirtual #65                 // Method getAvailabilityZone:()Ljava/lang/String;
     392: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     395: ifne          400
     398: iconst_0
     399: ireturn
     400: aload_2
     401: invokevirtual #67                 // Method getReplicationSubnetGroup:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
     404: ifnonnull     411
     407: iconst_1
     408: goto          412
     411: iconst_0
     412: aload_0
     413: invokevirtual #67                 // Method getReplicationSubnetGroup:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
     416: ifnonnull     423
     419: iconst_1
     420: goto          424
     423: iconst_0
     424: ixor
     425: ifeq          430
     428: iconst_0
     429: ireturn
     430: aload_2
     431: invokevirtual #67                 // Method getReplicationSubnetGroup:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
     434: ifnull        453
     437: aload_2
     438: invokevirtual #67                 // Method getReplicationSubnetGroup:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
     441: aload_0
     442: invokevirtual #67                 // Method getReplicationSubnetGroup:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
     445: invokevirtual #99                 // Method com/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup.equals:(Ljava/lang/Object;)Z
     448: ifne          453
     451: iconst_0
     452: ireturn
     453: aload_2
     454: invokevirtual #69                 // Method getPreferredMaintenanceWindow:()Ljava/lang/String;
     457: ifnonnull     464
     460: iconst_1
     461: goto          465
     464: iconst_0
     465: aload_0
     466: invokevirtual #69                 // Method getPreferredMaintenanceWindow:()Ljava/lang/String;
     469: ifnonnull     476
     472: iconst_1
     473: goto          477
     476: iconst_0
     477: ixor
     478: ifeq          483
     481: iconst_0
     482: ireturn
     483: aload_2
     484: invokevirtual #69                 // Method getPreferredMaintenanceWindow:()Ljava/lang/String;
     487: ifnull        506
     490: aload_2
     491: invokevirtual #69                 // Method getPreferredMaintenanceWindow:()Ljava/lang/String;
     494: aload_0
     495: invokevirtual #69                 // Method getPreferredMaintenanceWindow:()Ljava/lang/String;
     498: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     501: ifne          506
     504: iconst_0
     505: ireturn
     506: aload_2
     507: invokevirtual #71                 // Method getPendingModifiedValues:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
     510: ifnonnull     517
     513: iconst_1
     514: goto          518
     517: iconst_0
     518: aload_0
     519: invokevirtual #71                 // Method getPendingModifiedValues:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
     522: ifnonnull     529
     525: iconst_1
     526: goto          530
     529: iconst_0
     530: ixor
     531: ifeq          536
     534: iconst_0
     535: ireturn
     536: aload_2
     537: invokevirtual #71                 // Method getPendingModifiedValues:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
     540: ifnull        559
     543: aload_2
     544: invokevirtual #71                 // Method getPendingModifiedValues:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
     547: aload_0
     548: invokevirtual #71                 // Method getPendingModifiedValues:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
     551: invokevirtual #100                // Method com/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues.equals:(Ljava/lang/Object;)Z
     554: ifne          559
     557: iconst_0
     558: ireturn
     559: aload_2
     560: invokevirtual #73                 // Method getMultiAZ:()Ljava/lang/Boolean;
     563: ifnonnull     570
     566: iconst_1
     567: goto          571
     570: iconst_0
     571: aload_0
     572: invokevirtual #73                 // Method getMultiAZ:()Ljava/lang/Boolean;
     575: ifnonnull     582
     578: iconst_1
     579: goto          583
     582: iconst_0
     583: ixor
     584: ifeq          589
     587: iconst_0
     588: ireturn
     589: aload_2
     590: invokevirtual #73                 // Method getMultiAZ:()Ljava/lang/Boolean;
     593: ifnull        612
     596: aload_2
     597: invokevirtual #73                 // Method getMultiAZ:()Ljava/lang/Boolean;
     600: aload_0
     601: invokevirtual #73                 // Method getMultiAZ:()Ljava/lang/Boolean;
     604: invokevirtual #101                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     607: ifne          612
     610: iconst_0
     611: ireturn
     612: aload_2
     613: invokevirtual #75                 // Method getEngineVersion:()Ljava/lang/String;
     616: ifnonnull     623
     619: iconst_1
     620: goto          624
     623: iconst_0
     624: aload_0
     625: invokevirtual #75                 // Method getEngineVersion:()Ljava/lang/String;
     628: ifnonnull     635
     631: iconst_1
     632: goto          636
     635: iconst_0
     636: ixor
     637: ifeq          642
     640: iconst_0
     641: ireturn
     642: aload_2
     643: invokevirtual #75                 // Method getEngineVersion:()Ljava/lang/String;
     646: ifnull        665
     649: aload_2
     650: invokevirtual #75                 // Method getEngineVersion:()Ljava/lang/String;
     653: aload_0
     654: invokevirtual #75                 // Method getEngineVersion:()Ljava/lang/String;
     657: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     660: ifne          665
     663: iconst_0
     664: ireturn
     665: aload_2
     666: invokevirtual #77                 // Method getAutoMinorVersionUpgrade:()Ljava/lang/Boolean;
     669: ifnonnull     676
     672: iconst_1
     673: goto          677
     676: iconst_0
     677: aload_0
     678: invokevirtual #77                 // Method getAutoMinorVersionUpgrade:()Ljava/lang/Boolean;
     681: ifnonnull     688
     684: iconst_1
     685: goto          689
     688: iconst_0
     689: ixor
     690: ifeq          695
     693: iconst_0
     694: ireturn
     695: aload_2
     696: invokevirtual #77                 // Method getAutoMinorVersionUpgrade:()Ljava/lang/Boolean;
     699: ifnull        718
     702: aload_2
     703: invokevirtual #77                 // Method getAutoMinorVersionUpgrade:()Ljava/lang/Boolean;
     706: aload_0
     707: invokevirtual #77                 // Method getAutoMinorVersionUpgrade:()Ljava/lang/Boolean;
     710: invokevirtual #101                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     713: ifne          718
     716: iconst_0
     717: ireturn
     718: aload_2
     719: invokevirtual #79                 // Method getKmsKeyId:()Ljava/lang/String;
     722: ifnonnull     729
     725: iconst_1
     726: goto          730
     729: iconst_0
     730: aload_0
     731: invokevirtual #79                 // Method getKmsKeyId:()Ljava/lang/String;
     734: ifnonnull     741
     737: iconst_1
     738: goto          742
     741: iconst_0
     742: ixor
     743: ifeq          748
     746: iconst_0
     747: ireturn
     748: aload_2
     749: invokevirtual #79                 // Method getKmsKeyId:()Ljava/lang/String;
     752: ifnull        771
     755: aload_2
     756: invokevirtual #79                 // Method getKmsKeyId:()Ljava/lang/String;
     759: aload_0
     760: invokevirtual #79                 // Method getKmsKeyId:()Ljava/lang/String;
     763: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     766: ifne          771
     769: iconst_0
     770: ireturn
     771: aload_2
     772: invokevirtual #81                 // Method getReplicationInstanceArn:()Ljava/lang/String;
     775: ifnonnull     782
     778: iconst_1
     779: goto          783
     782: iconst_0
     783: aload_0
     784: invokevirtual #81                 // Method getReplicationInstanceArn:()Ljava/lang/String;
     787: ifnonnull     794
     790: iconst_1
     791: goto          795
     794: iconst_0
     795: ixor
     796: ifeq          801
     799: iconst_0
     800: ireturn
     801: aload_2
     802: invokevirtual #81                 // Method getReplicationInstanceArn:()Ljava/lang/String;
     805: ifnull        824
     808: aload_2
     809: invokevirtual #81                 // Method getReplicationInstanceArn:()Ljava/lang/String;
     812: aload_0
     813: invokevirtual #81                 // Method getReplicationInstanceArn:()Ljava/lang/String;
     816: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     819: ifne          824
     822: iconst_0
     823: ireturn
     824: aload_2
     825: invokevirtual #83                 // Method getReplicationInstancePublicIpAddress:()Ljava/lang/String;
     828: ifnonnull     835
     831: iconst_1
     832: goto          836
     835: iconst_0
     836: aload_0
     837: invokevirtual #83                 // Method getReplicationInstancePublicIpAddress:()Ljava/lang/String;
     840: ifnonnull     847
     843: iconst_1
     844: goto          848
     847: iconst_0
     848: ixor
     849: ifeq          854
     852: iconst_0
     853: ireturn
     854: aload_2
     855: invokevirtual #83                 // Method getReplicationInstancePublicIpAddress:()Ljava/lang/String;
     858: ifnull        877
     861: aload_2
     862: invokevirtual #83                 // Method getReplicationInstancePublicIpAddress:()Ljava/lang/String;
     865: aload_0
     866: invokevirtual #83                 // Method getReplicationInstancePublicIpAddress:()Ljava/lang/String;
     869: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     872: ifne          877
     875: iconst_0
     876: ireturn
     877: aload_2
     878: invokevirtual #85                 // Method getReplicationInstancePrivateIpAddress:()Ljava/lang/String;
     881: ifnonnull     888
     884: iconst_1
     885: goto          889
     888: iconst_0
     889: aload_0
     890: invokevirtual #85                 // Method getReplicationInstancePrivateIpAddress:()Ljava/lang/String;
     893: ifnonnull     900
     896: iconst_1
     897: goto          901
     900: iconst_0
     901: ixor
     902: ifeq          907
     905: iconst_0
     906: ireturn
     907: aload_2
     908: invokevirtual #85                 // Method getReplicationInstancePrivateIpAddress:()Ljava/lang/String;
     911: ifnull        930
     914: aload_2
     915: invokevirtual #85                 // Method getReplicationInstancePrivateIpAddress:()Ljava/lang/String;
     918: aload_0
     919: invokevirtual #85                 // Method getReplicationInstancePrivateIpAddress:()Ljava/lang/String;
     922: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     925: ifne          930
     928: iconst_0
     929: ireturn
     930: aload_2
     931: invokevirtual #87                 // Method getReplicationInstancePublicIpAddresses:()Ljava/util/List;
     934: ifnonnull     941
     937: iconst_1
     938: goto          942
     941: iconst_0
     942: aload_0
     943: invokevirtual #87                 // Method getReplicationInstancePublicIpAddresses:()Ljava/util/List;
     946: ifnonnull     953
     949: iconst_1
     950: goto          954
     953: iconst_0
     954: ixor
     955: ifeq          960
     958: iconst_0
     959: ireturn
     960: aload_2
     961: invokevirtual #87                 // Method getReplicationInstancePublicIpAddresses:()Ljava/util/List;
     964: ifnull        985
     967: aload_2
     968: invokevirtual #87                 // Method getReplicationInstancePublicIpAddresses:()Ljava/util/List;
     971: aload_0
     972: invokevirtual #87                 // Method getReplicationInstancePublicIpAddresses:()Ljava/util/List;
     975: invokeinterface #98,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     980: ifne          985
     983: iconst_0
     984: ireturn
     985: aload_2
     986: invokevirtual #89                 // Method getReplicationInstancePrivateIpAddresses:()Ljava/util/List;
     989: ifnonnull     996
     992: iconst_1
     993: goto          997
     996: iconst_0
     997: aload_0
     998: invokevirtual #89                 // Method getReplicationInstancePrivateIpAddresses:()Ljava/util/List;
    1001: ifnonnull     1008
    1004: iconst_1
    1005: goto          1009
    1008: iconst_0
    1009: ixor
    1010: ifeq          1015
    1013: iconst_0
    1014: ireturn
    1015: aload_2
    1016: invokevirtual #89                 // Method getReplicationInstancePrivateIpAddresses:()Ljava/util/List;
    1019: ifnull        1040
    1022: aload_2
    1023: invokevirtual #89                 // Method getReplicationInstancePrivateIpAddresses:()Ljava/util/List;
    1026: aload_0
    1027: invokevirtual #89                 // Method getReplicationInstancePrivateIpAddresses:()Ljava/util/List;
    1030: invokeinterface #98,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1035: ifne          1040
    1038: iconst_0
    1039: ireturn
    1040: aload_2
    1041: invokevirtual #91                 // Method getPubliclyAccessible:()Ljava/lang/Boolean;
    1044: ifnonnull     1051
    1047: iconst_1
    1048: goto          1052
    1051: iconst_0
    1052: aload_0
    1053: invokevirtual #91                 // Method getPubliclyAccessible:()Ljava/lang/Boolean;
    1056: ifnonnull     1063
    1059: iconst_1
    1060: goto          1064
    1063: iconst_0
    1064: ixor
    1065: ifeq          1070
    1068: iconst_0
    1069: ireturn
    1070: aload_2
    1071: invokevirtual #91                 // Method getPubliclyAccessible:()Ljava/lang/Boolean;
    1074: ifnull        1093
    1077: aload_2
    1078: invokevirtual #91                 // Method getPubliclyAccessible:()Ljava/lang/Boolean;
    1081: aload_0
    1082: invokevirtual #91                 // Method getPubliclyAccessible:()Ljava/lang/Boolean;
    1085: invokevirtual #101                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
    1088: ifne          1093
    1091: iconst_0
    1092: ireturn
    1093: iconst_1
    1094: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #50                 // Method getReplicationInstanceIdentifier:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #50                 // Method getReplicationInstanceIdentifier:()Ljava/lang/String;
      24: invokevirtual #102                // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #54                 // Method getReplicationInstanceClass:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #54                 // Method getReplicationInstanceClass:()Ljava/lang/String;
      48: invokevirtual #102                // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #56                 // Method getReplicationInstanceStatus:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #56                 // Method getReplicationInstanceStatus:()Ljava/lang/String;
      72: invokevirtual #102                // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #58                 // Method getAllocatedStorage:()Ljava/lang/Integer;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #58                 // Method getAllocatedStorage:()Ljava/lang/Integer;
      96: invokevirtual #103                // Method java/lang/Integer.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #61                 // Method getInstanceCreateTime:()Ljava/util/Date;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #61                 // Method getInstanceCreateTime:()Ljava/util/Date;
     120: invokevirtual #104                // Method java/util/Date.hashCode:()I
     123: iadd
     124: istore_2
     125: bipush        31
     127: iload_2
     128: imul
     129: aload_0
     130: invokevirtual #63                 // Method getVpcSecurityGroups:()Ljava/util/List;
     133: ifnonnull     140
     136: iconst_0
     137: goto          149
     140: aload_0
     141: invokevirtual #63                 // Method getVpcSecurityGroups:()Ljava/util/List;
     144: invokeinterface #105,  1          // InterfaceMethod java/util/List.hashCode:()I
     149: iadd
     150: istore_2
     151: bipush        31
     153: iload_2
     154: imul
     155: aload_0
     156: invokevirtual #65                 // Method getAvailabilityZone:()Ljava/lang/String;
     159: ifnonnull     166
     162: iconst_0
     163: goto          173
     166: aload_0
     167: invokevirtual #65                 // Method getAvailabilityZone:()Ljava/lang/String;
     170: invokevirtual #102                // Method java/lang/String.hashCode:()I
     173: iadd
     174: istore_2
     175: bipush        31
     177: iload_2
     178: imul
     179: aload_0
     180: invokevirtual #67                 // Method getReplicationSubnetGroup:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
     183: ifnonnull     190
     186: iconst_0
     187: goto          197
     190: aload_0
     191: invokevirtual #67                 // Method getReplicationSubnetGroup:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup;
     194: invokevirtual #106                // Method com/amazonaws/services/databasemigrationservice/model/ReplicationSubnetGroup.hashCode:()I
     197: iadd
     198: istore_2
     199: bipush        31
     201: iload_2
     202: imul
     203: aload_0
     204: invokevirtual #69                 // Method getPreferredMaintenanceWindow:()Ljava/lang/String;
     207: ifnonnull     214
     210: iconst_0
     211: goto          221
     214: aload_0
     215: invokevirtual #69                 // Method getPreferredMaintenanceWindow:()Ljava/lang/String;
     218: invokevirtual #102                // Method java/lang/String.hashCode:()I
     221: iadd
     222: istore_2
     223: bipush        31
     225: iload_2
     226: imul
     227: aload_0
     228: invokevirtual #71                 // Method getPendingModifiedValues:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
     231: ifnonnull     238
     234: iconst_0
     235: goto          245
     238: aload_0
     239: invokevirtual #71                 // Method getPendingModifiedValues:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues;
     242: invokevirtual #107                // Method com/amazonaws/services/databasemigrationservice/model/ReplicationPendingModifiedValues.hashCode:()I
     245: iadd
     246: istore_2
     247: bipush        31
     249: iload_2
     250: imul
     251: aload_0
     252: invokevirtual #73                 // Method getMultiAZ:()Ljava/lang/Boolean;
     255: ifnonnull     262
     258: iconst_0
     259: goto          269
     262: aload_0
     263: invokevirtual #73                 // Method getMultiAZ:()Ljava/lang/Boolean;
     266: invokevirtual #108                // Method java/lang/Boolean.hashCode:()I
     269: iadd
     270: istore_2
     271: bipush        31
     273: iload_2
     274: imul
     275: aload_0
     276: invokevirtual #75                 // Method getEngineVersion:()Ljava/lang/String;
     279: ifnonnull     286
     282: iconst_0
     283: goto          293
     286: aload_0
     287: invokevirtual #75                 // Method getEngineVersion:()Ljava/lang/String;
     290: invokevirtual #102                // Method java/lang/String.hashCode:()I
     293: iadd
     294: istore_2
     295: bipush        31
     297: iload_2
     298: imul
     299: aload_0
     300: invokevirtual #77                 // Method getAutoMinorVersionUpgrade:()Ljava/lang/Boolean;
     303: ifnonnull     310
     306: iconst_0
     307: goto          317
     310: aload_0
     311: invokevirtual #77                 // Method getAutoMinorVersionUpgrade:()Ljava/lang/Boolean;
     314: invokevirtual #108                // Method java/lang/Boolean.hashCode:()I
     317: iadd
     318: istore_2
     319: bipush        31
     321: iload_2
     322: imul
     323: aload_0
     324: invokevirtual #79                 // Method getKmsKeyId:()Ljava/lang/String;
     327: ifnonnull     334
     330: iconst_0
     331: goto          341
     334: aload_0
     335: invokevirtual #79                 // Method getKmsKeyId:()Ljava/lang/String;
     338: invokevirtual #102                // Method java/lang/String.hashCode:()I
     341: iadd
     342: istore_2
     343: bipush        31
     345: iload_2
     346: imul
     347: aload_0
     348: invokevirtual #81                 // Method getReplicationInstanceArn:()Ljava/lang/String;
     351: ifnonnull     358
     354: iconst_0
     355: goto          365
     358: aload_0
     359: invokevirtual #81                 // Method getReplicationInstanceArn:()Ljava/lang/String;
     362: invokevirtual #102                // Method java/lang/String.hashCode:()I
     365: iadd
     366: istore_2
     367: bipush        31
     369: iload_2
     370: imul
     371: aload_0
     372: invokevirtual #83                 // Method getReplicationInstancePublicIpAddress:()Ljava/lang/String;
     375: ifnonnull     382
     378: iconst_0
     379: goto          389
     382: aload_0
     383: invokevirtual #83                 // Method getReplicationInstancePublicIpAddress:()Ljava/lang/String;
     386: invokevirtual #102                // Method java/lang/String.hashCode:()I
     389: iadd
     390: istore_2
     391: bipush        31
     393: iload_2
     394: imul
     395: aload_0
     396: invokevirtual #85                 // Method getReplicationInstancePrivateIpAddress:()Ljava/lang/String;
     399: ifnonnull     406
     402: iconst_0
     403: goto          413
     406: aload_0
     407: invokevirtual #85                 // Method getReplicationInstancePrivateIpAddress:()Ljava/lang/String;
     410: invokevirtual #102                // Method java/lang/String.hashCode:()I
     413: iadd
     414: istore_2
     415: bipush        31
     417: iload_2
     418: imul
     419: aload_0
     420: invokevirtual #87                 // Method getReplicationInstancePublicIpAddresses:()Ljava/util/List;
     423: ifnonnull     430
     426: iconst_0
     427: goto          439
     430: aload_0
     431: invokevirtual #87                 // Method getReplicationInstancePublicIpAddresses:()Ljava/util/List;
     434: invokeinterface #105,  1          // InterfaceMethod java/util/List.hashCode:()I
     439: iadd
     440: istore_2
     441: bipush        31
     443: iload_2
     444: imul
     445: aload_0
     446: invokevirtual #89                 // Method getReplicationInstancePrivateIpAddresses:()Ljava/util/List;
     449: ifnonnull     456
     452: iconst_0
     453: goto          465
     456: aload_0
     457: invokevirtual #89                 // Method getReplicationInstancePrivateIpAddresses:()Ljava/util/List;
     460: invokeinterface #105,  1          // InterfaceMethod java/util/List.hashCode:()I
     465: iadd
     466: istore_2
     467: bipush        31
     469: iload_2
     470: imul
     471: aload_0
     472: invokevirtual #91                 // Method getPubliclyAccessible:()Ljava/lang/Boolean;
     475: ifnonnull     482
     478: iconst_0
     479: goto          489
     482: aload_0
     483: invokevirtual #91                 // Method getPubliclyAccessible:()Ljava/lang/Boolean;
     486: invokevirtual #108                // Method java/lang/Boolean.hashCode:()I
     489: iadd
     490: istore_2
     491: iload_2
     492: ireturn

  public com.amazonaws.services.databasemigrationservice.model.ReplicationInstance clone();
    Code:
       0: aload_0
       1: invokespecial #109                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #94                 // class com/amazonaws/services/databasemigrationservice/model/ReplicationInstance
       7: areturn
       8: astore_1
       9: new           #111                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #112                // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #113                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #114                // Method clone:()Lcom/amazonaws/services/databasemigrationservice/model/ReplicationInstance;
       4: areturn
}
