Compiled from "AWSDirectoryService.java"
public interface com.amazonaws.services.directory.AWSDirectoryService {
  public static final java.lang.String ENDPOINT_PREFIX;

  public abstract void setEndpoint(java.lang.String);

  public abstract void setRegion(com.amazonaws.regions.Region);

  public abstract com.amazonaws.services.directory.model.AddTagsToResourceResult addTagsToResource(com.amazonaws.services.directory.model.AddTagsToResourceRequest);

  public abstract com.amazonaws.services.directory.model.ConnectDirectoryResult connectDirectory(com.amazonaws.services.directory.model.ConnectDirectoryRequest);

  public abstract com.amazonaws.services.directory.model.CreateAliasResult createAlias(com.amazonaws.services.directory.model.CreateAliasRequest);

  public abstract com.amazonaws.services.directory.model.CreateComputerResult createComputer(com.amazonaws.services.directory.model.CreateComputerRequest);

  public abstract com.amazonaws.services.directory.model.CreateConditionalForwarderResult createConditionalForwarder(com.amazonaws.services.directory.model.CreateConditionalForwarderRequest);

  public abstract com.amazonaws.services.directory.model.CreateDirectoryResult createDirectory(com.amazonaws.services.directory.model.CreateDirectoryRequest);

  public abstract com.amazonaws.services.directory.model.CreateMicrosoftADResult createMicrosoftAD(com.amazonaws.services.directory.model.CreateMicrosoftADRequest);

  public abstract com.amazonaws.services.directory.model.CreateSnapshotResult createSnapshot(com.amazonaws.services.directory.model.CreateSnapshotRequest);

  public abstract com.amazonaws.services.directory.model.CreateTrustResult createTrust(com.amazonaws.services.directory.model.CreateTrustRequest);

  public abstract com.amazonaws.services.directory.model.DeleteConditionalForwarderResult deleteConditionalForwarder(com.amazonaws.services.directory.model.DeleteConditionalForwarderRequest);

  public abstract com.amazonaws.services.directory.model.DeleteDirectoryResult deleteDirectory(com.amazonaws.services.directory.model.DeleteDirectoryRequest);

  public abstract com.amazonaws.services.directory.model.DeleteSnapshotResult deleteSnapshot(com.amazonaws.services.directory.model.DeleteSnapshotRequest);

  public abstract com.amazonaws.services.directory.model.DeleteTrustResult deleteTrust(com.amazonaws.services.directory.model.DeleteTrustRequest);

  public abstract com.amazonaws.services.directory.model.DeregisterEventTopicResult deregisterEventTopic(com.amazonaws.services.directory.model.DeregisterEventTopicRequest);

  public abstract com.amazonaws.services.directory.model.DescribeConditionalForwardersResult describeConditionalForwarders(com.amazonaws.services.directory.model.DescribeConditionalForwardersRequest);

  public abstract com.amazonaws.services.directory.model.DescribeDirectoriesResult describeDirectories(com.amazonaws.services.directory.model.DescribeDirectoriesRequest);

  public abstract com.amazonaws.services.directory.model.DescribeDirectoriesResult describeDirectories();

  public abstract com.amazonaws.services.directory.model.DescribeEventTopicsResult describeEventTopics(com.amazonaws.services.directory.model.DescribeEventTopicsRequest);

  public abstract com.amazonaws.services.directory.model.DescribeSnapshotsResult describeSnapshots(com.amazonaws.services.directory.model.DescribeSnapshotsRequest);

  public abstract com.amazonaws.services.directory.model.DescribeSnapshotsResult describeSnapshots();

  public abstract com.amazonaws.services.directory.model.DescribeTrustsResult describeTrusts(com.amazonaws.services.directory.model.DescribeTrustsRequest);

  public abstract com.amazonaws.services.directory.model.DisableRadiusResult disableRadius(com.amazonaws.services.directory.model.DisableRadiusRequest);

  public abstract com.amazonaws.services.directory.model.DisableSsoResult disableSso(com.amazonaws.services.directory.model.DisableSsoRequest);

  public abstract com.amazonaws.services.directory.model.EnableRadiusResult enableRadius(com.amazonaws.services.directory.model.EnableRadiusRequest);

  public abstract com.amazonaws.services.directory.model.EnableSsoResult enableSso(com.amazonaws.services.directory.model.EnableSsoRequest);

  public abstract com.amazonaws.services.directory.model.GetDirectoryLimitsResult getDirectoryLimits(com.amazonaws.services.directory.model.GetDirectoryLimitsRequest);

  public abstract com.amazonaws.services.directory.model.GetDirectoryLimitsResult getDirectoryLimits();

  public abstract com.amazonaws.services.directory.model.GetSnapshotLimitsResult getSnapshotLimits(com.amazonaws.services.directory.model.GetSnapshotLimitsRequest);

  public abstract com.amazonaws.services.directory.model.ListTagsForResourceResult listTagsForResource(com.amazonaws.services.directory.model.ListTagsForResourceRequest);

  public abstract com.amazonaws.services.directory.model.RegisterEventTopicResult registerEventTopic(com.amazonaws.services.directory.model.RegisterEventTopicRequest);

  public abstract com.amazonaws.services.directory.model.RemoveTagsFromResourceResult removeTagsFromResource(com.amazonaws.services.directory.model.RemoveTagsFromResourceRequest);

  public abstract com.amazonaws.services.directory.model.RestoreFromSnapshotResult restoreFromSnapshot(com.amazonaws.services.directory.model.RestoreFromSnapshotRequest);

  public abstract com.amazonaws.services.directory.model.UpdateConditionalForwarderResult updateConditionalForwarder(com.amazonaws.services.directory.model.UpdateConditionalForwarderRequest);

  public abstract com.amazonaws.services.directory.model.UpdateRadiusResult updateRadius(com.amazonaws.services.directory.model.UpdateRadiusRequest);

  public abstract com.amazonaws.services.directory.model.VerifyTrustResult verifyTrust(com.amazonaws.services.directory.model.VerifyTrustRequest);

  public abstract void shutdown();

  public abstract com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest);
}
