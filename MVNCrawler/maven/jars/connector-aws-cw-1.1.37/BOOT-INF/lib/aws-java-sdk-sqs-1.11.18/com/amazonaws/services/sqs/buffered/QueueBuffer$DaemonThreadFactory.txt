Compiled from "QueueBuffer.java"
class com.amazonaws.services.sqs.buffered.QueueBuffer$DaemonThreadFactory implements java.util.concurrent.ThreadFactory {
  static java.util.concurrent.atomic.AtomicInteger threadCount;

  private com.amazonaws.services.sqs.buffered.QueueBuffer$DaemonThreadFactory();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: getstatic     #3                  // Field threadCount:Ljava/util/concurrent/atomic/AtomicInteger;
       3: iconst_1
       4: invokevirtual #4                  // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
       7: istore_2
       8: new           #5                  // class java/lang/Thread
      11: dup
      12: aload_1
      13: invokespecial #6                  // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      16: astore_3
      17: aload_3
      18: iconst_1
      19: invokevirtual #7                  // Method java/lang/Thread.setDaemon:(Z)V
      22: aload_3
      23: new           #8                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #10                 // String SQSQueueBufferWorkerThread-
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_2
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokevirtual #14                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      45: aload_3
      46: areturn

  com.amazonaws.services.sqs.buffered.QueueBuffer$DaemonThreadFactory(com.amazonaws.services.sqs.buffered.QueueBuffer$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static {};
    Code:
       0: new           #15                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_0
       5: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: putstatic     #3                  // Field threadCount:Ljava/util/concurrent/atomic/AtomicInteger;
      11: return
}
