Compiled from "IoFuture.java"
public interface org.xnio.IoFuture<T> extends org.xnio.Cancellable {
  public abstract org.xnio.IoFuture<T> cancel();

  public abstract org.xnio.IoFuture$Status getStatus();

  public abstract org.xnio.IoFuture$Status await();

  public abstract org.xnio.IoFuture$Status await(long, java.util.concurrent.TimeUnit);

  public abstract org.xnio.IoFuture$Status awaitInterruptibly() throws java.lang.InterruptedException;

  public abstract org.xnio.IoFuture$Status awaitInterruptibly(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

  public abstract T get() throws java.io.IOException, java.util.concurrent.CancellationException;

  public abstract T getInterruptibly() throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.CancellationException;

  public abstract java.io.IOException getException() throws java.lang.IllegalStateException;

  public abstract <A> org.xnio.IoFuture<T> addNotifier(org.xnio.IoFuture$Notifier<? super T, A>, A);
}
