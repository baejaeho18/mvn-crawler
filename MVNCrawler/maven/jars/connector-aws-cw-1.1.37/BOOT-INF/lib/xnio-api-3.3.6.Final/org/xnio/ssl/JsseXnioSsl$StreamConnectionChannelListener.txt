Compiled from "JsseXnioSsl.java"
class org.xnio.ssl.JsseXnioSsl$StreamConnectionChannelListener implements org.xnio.ChannelListener<org.xnio.StreamConnection> {
  private final org.xnio.OptionMap optionMap;

  private final java.net.InetSocketAddress destination;

  private final org.xnio.FutureResult<org.xnio.ssl.SslConnection> futureResult;

  private final org.xnio.ChannelListener<? super org.xnio.ssl.SslConnection> openListener;

  final org.xnio.ssl.JsseXnioSsl this$0;

  public org.xnio.ssl.JsseXnioSsl$StreamConnectionChannelListener(org.xnio.OptionMap, java.net.InetSocketAddress, org.xnio.FutureResult<org.xnio.ssl.SslConnection>, org.xnio.ChannelListener<? super org.xnio.ssl.SslConnection>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field this$0:Lorg/xnio/ssl/JsseXnioSsl;
       5: aload_0
       6: invokespecial #30                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #32                 // Field optionMap:Lorg/xnio/OptionMap;
      14: aload_0
      15: aload_3
      16: putfield      #34                 // Field destination:Ljava/net/InetSocketAddress;
      19: aload_0
      20: aload         4
      22: putfield      #36                 // Field futureResult:Lorg/xnio/FutureResult;
      25: aload_0
      26: aload         5
      28: putfield      #38                 // Field openListener:Lorg/xnio/ChannelListener;
      31: return

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: new           #44                 // class org/xnio/ssl/JsseSslStreamConnection
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #27                 // Field this$0:Lorg/xnio/ssl/JsseXnioSsl;
       9: invokestatic  #48                 // Method org/xnio/ssl/JsseXnioSsl.access$000:(Lorg/xnio/ssl/JsseXnioSsl;)Ljavax/net/ssl/SSLContext;
      12: aload_0
      13: getfield      #32                 // Field optionMap:Lorg/xnio/OptionMap;
      16: aload_0
      17: getfield      #34                 // Field destination:Ljava/net/InetSocketAddress;
      20: invokestatic  #54                 // Method org/xnio/ssl/JsseSslUtils.createSSLEngine:(Ljavax/net/ssl/SSLContext;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;)Ljavax/net/ssl/SSLEngine;
      23: invokestatic  #58                 // Method org/xnio/ssl/JsseXnioSsl.access$100:()Lorg/xnio/Pool;
      26: invokestatic  #58                 // Method org/xnio/ssl/JsseXnioSsl.access$100:()Lorg/xnio/Pool;
      29: aload_0
      30: getfield      #32                 // Field optionMap:Lorg/xnio/OptionMap;
      33: getstatic     #64                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
      36: iconst_0
      37: invokevirtual #70                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      40: invokespecial #73                 // Method org/xnio/ssl/JsseSslStreamConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lorg/xnio/Pool;Lorg/xnio/Pool;Z)V
      43: astore_2
      44: aload_0
      45: getfield      #36                 // Field futureResult:Lorg/xnio/FutureResult;
      48: aload_2
      49: invokevirtual #79                 // Method org/xnio/FutureResult.setResult:(Ljava/lang/Object;)Z
      52: ifne          62
      55: aload_1
      56: invokestatic  #85                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      59: goto          71
      62: aload_2
      63: aload_0
      64: getfield      #38                 // Field openListener:Lorg/xnio/ChannelListener;
      67: invokestatic  #93                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      70: pop
      71: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #100                // class org/xnio/StreamConnection
       5: invokevirtual #102                // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return
}
