Compiled from "HttpUpgrade.java"
class org.xnio.http.HttpUpgrade$HttpUpgradeState<T extends org.xnio.StreamConnection> {
  private final org.xnio.XnioWorker worker;

  private final org.xnio.ssl.XnioSsl ssl;

  private final java.net.InetSocketAddress bindAddress;

  private final java.net.URI uri;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  private final org.xnio.ChannelListener<? super T> openListener;

  private final org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel> bindListener;

  private final org.xnio.OptionMap optionMap;

  private final java.lang.Object handshakeChecker;

  private final org.xnio.FutureResult<T> future;

  private T connection;

  private org.xnio.http.HttpUpgrade$HttpUpgradeState(org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, java.net.InetSocketAddress, java.net.URI, java.util.Map<java.lang.String, java.lang.String>, org.xnio.ChannelListener<? super T>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap, org.xnio.http.HandshakeChecker);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #75                 // class org/xnio/FutureResult
       8: dup
       9: invokespecial #76                 // Method org/xnio/FutureResult."<init>":()V
      12: putfield      #78                 // Field future:Lorg/xnio/FutureResult;
      15: aload_0
      16: aload_1
      17: putfield      #80                 // Field worker:Lorg/xnio/XnioWorker;
      20: aload_0
      21: aload_2
      22: putfield      #82                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
      25: aload_0
      26: aload_3
      27: putfield      #84                 // Field bindAddress:Ljava/net/InetSocketAddress;
      30: aload_0
      31: aload         4
      33: putfield      #86                 // Field uri:Ljava/net/URI;
      36: aload_0
      37: aload         6
      39: putfield      #88                 // Field openListener:Lorg/xnio/ChannelListener;
      42: aload_0
      43: aload         7
      45: putfield      #90                 // Field bindListener:Lorg/xnio/ChannelListener;
      48: aload_0
      49: aload         8
      51: putfield      #92                 // Field optionMap:Lorg/xnio/OptionMap;
      54: aload_0
      55: aload         9
      57: putfield      #94                 // Field handshakeChecker:Ljava/lang/Object;
      60: new           #96                 // class java/util/HashMap
      63: dup
      64: invokespecial #97                 // Method java/util/HashMap."<init>":()V
      67: astore        10
      69: aload         5
      71: invokeinterface #101,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      76: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      81: astore        11
      83: aload         11
      85: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          133
      93: aload         11
      95: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: checkcast     #27                 // class java/util/Map$Entry
     103: astore        12
     105: aload         10
     107: aload         12
     109: invokeinterface #132,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     114: aload         12
     116: invokeinterface #135,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     121: invokestatic  #141                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     124: invokeinterface #145,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: goto          83
     133: aload_0
     134: aload         10
     136: putfield      #147                // Field headers:Ljava/util/Map;
     139: return

  private org.xnio.http.HttpUpgrade$HttpUpgradeState(org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, java.net.InetSocketAddress, java.net.URI, java.util.Map<java.lang.String, java.util.List<java.lang.String>>, org.xnio.ChannelListener<? super T>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap, org.xnio.http.ExtendedHandshakeChecker);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #75                 // class org/xnio/FutureResult
       8: dup
       9: invokespecial #76                 // Method org/xnio/FutureResult."<init>":()V
      12: putfield      #78                 // Field future:Lorg/xnio/FutureResult;
      15: aload_0
      16: aload_1
      17: putfield      #80                 // Field worker:Lorg/xnio/XnioWorker;
      20: aload_0
      21: aload_2
      22: putfield      #82                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
      25: aload_0
      26: aload_3
      27: putfield      #84                 // Field bindAddress:Ljava/net/InetSocketAddress;
      30: aload_0
      31: aload         4
      33: putfield      #86                 // Field uri:Ljava/net/URI;
      36: aload_0
      37: aload         5
      39: putfield      #147                // Field headers:Ljava/util/Map;
      42: aload_0
      43: aload         6
      45: putfield      #88                 // Field openListener:Lorg/xnio/ChannelListener;
      48: aload_0
      49: aload         7
      51: putfield      #90                 // Field bindListener:Lorg/xnio/ChannelListener;
      54: aload_0
      55: aload         8
      57: putfield      #92                 // Field optionMap:Lorg/xnio/OptionMap;
      60: aload_0
      61: aload         9
      63: putfield      #94                 // Field handshakeChecker:Ljava/lang/Object;
      66: return

  public org.xnio.http.HttpUpgrade$HttpUpgradeState(T, java.net.URI, java.util.Map<java.lang.String, java.lang.String>, org.xnio.ChannelListener<? super org.xnio.StreamConnection>, org.xnio.http.HandshakeChecker);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #75                 // class org/xnio/FutureResult
       8: dup
       9: invokespecial #76                 // Method org/xnio/FutureResult."<init>":()V
      12: putfield      #78                 // Field future:Lorg/xnio/FutureResult;
      15: aload_0
      16: aload_1
      17: invokevirtual #167                // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
      20: putfield      #80                 // Field worker:Lorg/xnio/XnioWorker;
      23: aload_0
      24: aconst_null
      25: putfield      #82                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
      28: aload_0
      29: aconst_null
      30: putfield      #84                 // Field bindAddress:Ljava/net/InetSocketAddress;
      33: aload_0
      34: aload_2
      35: putfield      #86                 // Field uri:Ljava/net/URI;
      38: aload_0
      39: aload         4
      41: putfield      #88                 // Field openListener:Lorg/xnio/ChannelListener;
      44: aload_0
      45: aconst_null
      46: putfield      #90                 // Field bindListener:Lorg/xnio/ChannelListener;
      49: aload_0
      50: getstatic     #170                // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      53: putfield      #92                 // Field optionMap:Lorg/xnio/OptionMap;
      56: aload_0
      57: aload         5
      59: putfield      #94                 // Field handshakeChecker:Ljava/lang/Object;
      62: aload_0
      63: aload_1
      64: putfield      #172                // Field connection:Lorg/xnio/StreamConnection;
      67: new           #96                 // class java/util/HashMap
      70: dup
      71: invokespecial #97                 // Method java/util/HashMap."<init>":()V
      74: astore        6
      76: aload_3
      77: invokeinterface #101,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      82: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      87: astore        7
      89: aload         7
      91: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          139
      99: aload         7
     101: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     106: checkcast     #27                 // class java/util/Map$Entry
     109: astore        8
     111: aload         6
     113: aload         8
     115: invokeinterface #132,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     120: aload         8
     122: invokeinterface #135,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     127: invokestatic  #141                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     130: invokeinterface #145,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: goto          89
     139: aload_0
     140: aload         6
     142: putfield      #147                // Field headers:Ljava/util/Map;
     145: return

  public org.xnio.http.HttpUpgrade$HttpUpgradeState(T, java.net.URI, java.util.Map<java.lang.String, java.util.List<java.lang.String>>, org.xnio.ChannelListener<? super org.xnio.StreamConnection>, org.xnio.http.ExtendedHandshakeChecker);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #75                 // class org/xnio/FutureResult
       8: dup
       9: invokespecial #76                 // Method org/xnio/FutureResult."<init>":()V
      12: putfield      #78                 // Field future:Lorg/xnio/FutureResult;
      15: aload_0
      16: aload_1
      17: invokevirtual #167                // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
      20: putfield      #80                 // Field worker:Lorg/xnio/XnioWorker;
      23: aload_0
      24: aconst_null
      25: putfield      #82                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
      28: aload_0
      29: aconst_null
      30: putfield      #84                 // Field bindAddress:Ljava/net/InetSocketAddress;
      33: aload_0
      34: aload_2
      35: putfield      #86                 // Field uri:Ljava/net/URI;
      38: aload_0
      39: aload_3
      40: putfield      #147                // Field headers:Ljava/util/Map;
      43: aload_0
      44: aload         4
      46: putfield      #88                 // Field openListener:Lorg/xnio/ChannelListener;
      49: aload_0
      50: aconst_null
      51: putfield      #90                 // Field bindListener:Lorg/xnio/ChannelListener;
      54: aload_0
      55: getstatic     #170                // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      58: putfield      #92                 // Field optionMap:Lorg/xnio/OptionMap;
      61: aload_0
      62: aload         5
      64: putfield      #94                 // Field handshakeChecker:Ljava/lang/Object;
      67: aload_0
      68: aload_1
      69: putfield      #172                // Field connection:Lorg/xnio/StreamConnection;
      72: return

  private org.xnio.IoFuture<T> doUpgrade();
    Code:
       0: new           #113                // class java/net/InetSocketAddress
       3: dup
       4: aload_0
       5: getfield      #86                 // Field uri:Ljava/net/URI;
       8: invokevirtual #180                // Method java/net/URI.getHost:()Ljava/lang/String;
      11: aload_0
      12: getfield      #86                 // Field uri:Ljava/net/URI;
      15: invokevirtual #184                // Method java/net/URI.getPort:()I
      18: invokespecial #187                // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      21: astore_1
      22: new           #20                 // class org/xnio/http/HttpUpgrade$HttpUpgradeState$ConnectionOpenListener
      25: dup
      26: aload_0
      27: aconst_null
      28: invokespecial #190                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$ConnectionOpenListener."<init>":(Lorg/xnio/http/HttpUpgrade$HttpUpgradeState;Lorg/xnio/http/HttpUpgrade$1;)V
      31: astore_2
      32: aload_0
      33: getfield      #86                 // Field uri:Ljava/net/URI;
      36: invokevirtual #193                // Method java/net/URI.getScheme:()Ljava/lang/String;
      39: astore_3
      40: aload_3
      41: ldc           #195                // String http
      43: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          132
      49: aload_0
      50: getfield      #84                 // Field bindAddress:Ljava/net/InetSocketAddress;
      53: ifnonnull     92
      56: aload_0
      57: getfield      #80                 // Field worker:Lorg/xnio/XnioWorker;
      60: aload_1
      61: aload_2
      62: aload_0
      63: getfield      #90                 // Field bindListener:Lorg/xnio/ChannelListener;
      66: aload_0
      67: getfield      #92                 // Field optionMap:Lorg/xnio/OptionMap;
      70: invokevirtual #205                // Method org/xnio/XnioWorker.openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      73: new           #11                 // class org/xnio/http/HttpUpgrade$HttpUpgradeState$FailureNotifier
      76: dup
      77: aload_0
      78: aconst_null
      79: invokespecial #206                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$FailureNotifier."<init>":(Lorg/xnio/http/HttpUpgrade$HttpUpgradeState;Lorg/xnio/http/HttpUpgrade$1;)V
      82: aconst_null
      83: invokeinterface #210,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      88: pop
      89: goto          258
      92: aload_0
      93: getfield      #80                 // Field worker:Lorg/xnio/XnioWorker;
      96: aload_0
      97: getfield      #84                 // Field bindAddress:Ljava/net/InetSocketAddress;
     100: aload_1
     101: aload_2
     102: aload_0
     103: getfield      #90                 // Field bindListener:Lorg/xnio/ChannelListener;
     106: aload_0
     107: getfield      #92                 // Field optionMap:Lorg/xnio/OptionMap;
     110: invokevirtual #213                // Method org/xnio/XnioWorker.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     113: new           #11                 // class org/xnio/http/HttpUpgrade$HttpUpgradeState$FailureNotifier
     116: dup
     117: aload_0
     118: aconst_null
     119: invokespecial #206                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$FailureNotifier."<init>":(Lorg/xnio/http/HttpUpgrade$HttpUpgradeState;Lorg/xnio/http/HttpUpgrade$1;)V
     122: aconst_null
     123: invokeinterface #210,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     128: pop
     129: goto          258
     132: aload_3
     133: ldc           #215                // String https
     135: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     138: ifeq          248
     141: aload_0
     142: getfield      #82                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
     145: ifnonnull     157
     148: getstatic     #221                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
     151: invokeinterface #225,  1          // InterfaceMethod org/xnio/_private/Messages.missingSslProvider:()Ljava/lang/IllegalArgumentException;
     156: athrow
     157: aload_0
     158: getfield      #84                 // Field bindAddress:Ljava/net/InetSocketAddress;
     161: ifnonnull     204
     164: aload_0
     165: getfield      #82                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
     168: aload_0
     169: getfield      #80                 // Field worker:Lorg/xnio/XnioWorker;
     172: aload_1
     173: aload_2
     174: aload_0
     175: getfield      #90                 // Field bindListener:Lorg/xnio/ChannelListener;
     178: aload_0
     179: getfield      #92                 // Field optionMap:Lorg/xnio/OptionMap;
     182: invokevirtual #229                // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     185: new           #11                 // class org/xnio/http/HttpUpgrade$HttpUpgradeState$FailureNotifier
     188: dup
     189: aload_0
     190: aconst_null
     191: invokespecial #206                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$FailureNotifier."<init>":(Lorg/xnio/http/HttpUpgrade$HttpUpgradeState;Lorg/xnio/http/HttpUpgrade$1;)V
     194: aconst_null
     195: invokeinterface #210,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     200: pop
     201: goto          258
     204: aload_0
     205: getfield      #82                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
     208: aload_0
     209: getfield      #80                 // Field worker:Lorg/xnio/XnioWorker;
     212: aload_0
     213: getfield      #84                 // Field bindAddress:Ljava/net/InetSocketAddress;
     216: aload_1
     217: aload_2
     218: aload_0
     219: getfield      #90                 // Field bindListener:Lorg/xnio/ChannelListener;
     222: aload_0
     223: getfield      #92                 // Field optionMap:Lorg/xnio/OptionMap;
     226: invokevirtual #232                // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     229: new           #11                 // class org/xnio/http/HttpUpgrade$HttpUpgradeState$FailureNotifier
     232: dup
     233: aload_0
     234: aconst_null
     235: invokespecial #206                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$FailureNotifier."<init>":(Lorg/xnio/http/HttpUpgrade$HttpUpgradeState;Lorg/xnio/http/HttpUpgrade$1;)V
     238: aconst_null
     239: invokeinterface #210,  3          // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     244: pop
     245: goto          258
     248: getstatic     #221                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
     251: aload_3
     252: invokeinterface #236,  2          // InterfaceMethod org/xnio/_private/Messages.invalidURLScheme:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     257: athrow
     258: aload_0
     259: getfield      #78                 // Field future:Lorg/xnio/FutureResult;
     262: invokevirtual #239                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
     265: areturn

  private java.lang.String buildHttpRequest();
    Code:
       0: new           #247                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #250                // String GET
      11: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #86                 // Field uri:Ljava/net/URI;
      20: invokevirtual #257                // Method java/net/URI.getPath:()Ljava/lang/String;
      23: invokevirtual #260                // Method java/lang/String.isEmpty:()Z
      26: ifeq          35
      29: ldc_w         #262                // String /
      32: goto          42
      35: aload_0
      36: getfield      #86                 // Field uri:Ljava/net/URI;
      39: invokevirtual #257                // Method java/net/URI.getPath:()Ljava/lang/String;
      42: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: aload_0
      47: getfield      #86                 // Field uri:Ljava/net/URI;
      50: invokevirtual #265                // Method java/net/URI.getQuery:()Ljava/lang/String;
      53: ifnull        88
      56: aload_0
      57: getfield      #86                 // Field uri:Ljava/net/URI;
      60: invokevirtual #265                // Method java/net/URI.getQuery:()Ljava/lang/String;
      63: invokevirtual #260                // Method java/lang/String.isEmpty:()Z
      66: ifne          88
      69: aload_1
      70: bipush        63
      72: invokevirtual #268                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: pop
      76: aload_1
      77: aload_0
      78: getfield      #86                 // Field uri:Ljava/net/URI;
      81: invokevirtual #265                // Method java/net/URI.getQuery:()Ljava/lang/String;
      84: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_1
      89: ldc_w         #270                // String  HTTP/1.1\r\n
      92: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: pop
      96: new           #272                // class java/util/HashSet
      99: dup
     100: invokespecial #273                // Method java/util/HashSet."<init>":()V
     103: astore_2
     104: aload_0
     105: getfield      #147                // Field headers:Ljava/util/Map;
     108: invokeinterface #101,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     113: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     118: astore_3
     119: aload_3
     120: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          245
     128: aload_3
     129: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     134: checkcast     #27                 // class java/util/Map$Entry
     137: astore        4
     139: aload         4
     141: invokeinterface #135,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     146: checkcast     #275                // class java/util/List
     149: invokeinterface #276,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     154: astore        5
     156: aload         5
     158: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     163: ifeq          242
     166: aload         5
     168: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     173: checkcast     #197                // class java/lang/String
     176: astore        6
     178: aload_1
     179: aload         4
     181: invokeinterface #132,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     186: checkcast     #197                // class java/lang/String
     189: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: pop
     193: aload_1
     194: ldc_w         #278                // String :
     197: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: pop
     201: aload_1
     202: aload         6
     204: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: pop
     208: aload_1
     209: ldc_w         #280                // String \r\n
     212: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: pop
     216: aload_2
     217: aload         4
     219: invokeinterface #132,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     224: checkcast     #197                // class java/lang/String
     227: getstatic     #286                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
     230: invokevirtual #290                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     233: invokeinterface #293,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     238: pop
     239: goto          156
     242: goto          119
     245: aload_2
     246: ldc_w         #295                // String host
     249: invokeinterface #298,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     254: ifne          282
     257: aload_1
     258: ldc_w         #300                // String Host:
     261: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: pop
     265: aload_1
     266: aload_0
     267: invokespecial #301                // Method getHost:()Ljava/lang/String;
     270: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     273: pop
     274: aload_1
     275: ldc_w         #280                // String \r\n
     278: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: pop
     282: aload_2
     283: ldc_w         #302                // String connection
     286: invokeinterface #298,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     291: ifne          302
     294: aload_1
     295: ldc_w         #304                // String Connection: upgrade\r\n
     298: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     301: pop
     302: aload_2
     303: ldc_w         #306                // String upgrade
     306: invokeinterface #298,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     311: ifne          325
     314: new           #308                // class java/lang/IllegalArgumentException
     317: dup
     318: ldc_w         #310                // String Upgrade: header was not supplied in header arguments
     321: invokespecial #313                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     324: athrow
     325: aload_1
     326: ldc_w         #280                // String \r\n
     329: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     332: pop
     333: aload_1
     334: invokevirtual #316                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     337: areturn

  private java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #86                 // Field uri:Ljava/net/URI;
       4: invokevirtual #193                // Method java/net/URI.getScheme:()Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: getfield      #86                 // Field uri:Ljava/net/URI;
      12: invokevirtual #184                // Method java/net/URI.getPort:()I
      15: istore_2
      16: iload_2
      17: iflt          51
      20: ldc           #195                // String http
      22: aload_1
      23: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          35
      29: iload_2
      30: bipush        80
      32: if_icmpeq     51
      35: ldc           #215                // String https
      37: aload_1
      38: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          59
      44: iload_2
      45: sipush        443
      48: if_icmpne     59
      51: aload_0
      52: getfield      #86                 // Field uri:Ljava/net/URI;
      55: invokevirtual #180                // Method java/net/URI.getHost:()Ljava/lang/String;
      58: areturn
      59: new           #247                // class java/lang/StringBuilder
      62: dup
      63: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
      66: aload_0
      67: getfield      #86                 // Field uri:Ljava/net/URI;
      70: invokevirtual #180                // Method java/net/URI.getHost:()Ljava/lang/String;
      73: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc_w         #326                // String :
      79: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: iload_2
      83: invokevirtual #329                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      86: invokevirtual #316                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: areturn

  public org.xnio.IoFuture<T> upgradeExistingConnection();
    Code:
       0: new           #20                 // class org/xnio/http/HttpUpgrade$HttpUpgradeState$ConnectionOpenListener
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #190                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$ConnectionOpenListener."<init>":(Lorg/xnio/http/HttpUpgrade$HttpUpgradeState;Lorg/xnio/http/HttpUpgrade$1;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
      15: invokeinterface #336,  2          // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      20: aload_0
      21: getfield      #78                 // Field future:Lorg/xnio/FutureResult;
      24: invokevirtual #239                // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      27: areturn

  private void flushUpgradeChannel();
    Code:
       0: aload_0
       1: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #343                // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #348                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
      10: ifne          58
      13: aload_0
      14: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
      17: invokevirtual #343                // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      20: invokevirtual #352                // Method org/xnio/conduits/ConduitStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      23: new           #25                 // class org/xnio/http/HttpUpgrade$HttpUpgradeState$1
      26: dup
      27: aload_0
      28: invokespecial #355                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$1."<init>":(Lorg/xnio/http/HttpUpgrade$HttpUpgradeState;)V
      31: new           #23                 // class org/xnio/http/HttpUpgrade$HttpUpgradeState$2
      34: dup
      35: aload_0
      36: invokespecial #356                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$2."<init>":(Lorg/xnio/http/HttpUpgrade$HttpUpgradeState;)V
      39: invokestatic  #362                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      42: invokeinterface #366,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      47: aload_0
      48: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
      51: invokevirtual #343                // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      54: invokevirtual #369                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      57: return
      58: goto          79
      61: astore_1
      62: aload_0
      63: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
      66: invokestatic  #375                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      69: aload_0
      70: getfield      #78                 // Field future:Lorg/xnio/FutureResult;
      73: aload_1
      74: invokevirtual #379                // Method org/xnio/FutureResult.setException:(Ljava/io/IOException;)Z
      77: pop
      78: return
      79: new           #14                 // class org/xnio/http/HttpUpgrade$HttpUpgradeState$UpgradeResultListener
      82: dup
      83: aload_0
      84: aconst_null
      85: invokespecial #380                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$UpgradeResultListener."<init>":(Lorg/xnio/http/HttpUpgrade$HttpUpgradeState;Lorg/xnio/http/HttpUpgrade$1;)V
      88: aload_0
      89: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
      92: invokevirtual #384                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      95: invokevirtual #387                // Method org/xnio/http/HttpUpgrade$HttpUpgradeState$UpgradeResultListener.handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
      98: return
    Exception table:
       from    to  target type
           0    57    61   Class java/io/IOException

  private void handleUpgrade(org.xnio.http.HttpUpgradeParser);
    Code:
       0: new           #96                 // class java/util/HashMap
       3: dup
       4: invokespecial #97                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #397                // Method org/xnio/http/HttpUpgradeParser.getHeaders:()Ljava/util/Map;
      12: invokeinterface #101,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          76
      32: aload_3
      33: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #27                 // class java/util/Map$Entry
      41: astore        4
      43: aload_2
      44: aload         4
      46: invokeinterface #132,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: aload         4
      53: invokeinterface #135,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: checkcast     #275                // class java/util/List
      61: iconst_0
      62: invokeinterface #401,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      67: invokeinterface #145,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: goto          23
      76: aload_2
      77: ldc_w         #403                // String content-length
      80: invokeinterface #406,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #197                // class java/lang/String
      88: astore_3
      89: aload_3
      90: ifnull        122
      93: ldc_w         #408                // String 0
      96: aload_3
      97: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     100: ifne          122
     103: aload_0
     104: getfield      #78                 // Field future:Lorg/xnio/FutureResult;
     107: new           #339                // class java/io/IOException
     110: dup
     111: ldc_w         #410                // String Upgrade responses must have a content length of zero.
     114: invokespecial #411                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     117: invokevirtual #379                // Method org/xnio/FutureResult.setException:(Ljava/io/IOException;)Z
     120: pop
     121: return
     122: aload_2
     123: ldc_w         #413                // String transfer-encoding
     126: invokeinterface #406,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     131: checkcast     #197                // class java/lang/String
     134: astore        4
     136: aload         4
     138: ifnull        160
     141: aload_0
     142: getfield      #78                 // Field future:Lorg/xnio/FutureResult;
     145: new           #339                // class java/io/IOException
     148: dup
     149: ldc_w         #415                // String Upgrade responses cannot have a transfer coding
     152: invokespecial #411                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     155: invokevirtual #379                // Method org/xnio/FutureResult.setException:(Ljava/io/IOException;)Z
     158: pop
     159: return
     160: aload_0
     161: getfield      #94                 // Field handshakeChecker:Ljava/lang/Object;
     164: ifnull        232
     167: aload_0
     168: getfield      #94                 // Field handshakeChecker:Ljava/lang/Object;
     171: instanceof    #417                // class org/xnio/http/ExtendedHandshakeChecker
     174: ifeq          196
     177: aload_0
     178: getfield      #94                 // Field handshakeChecker:Ljava/lang/Object;
     181: checkcast     #417                // class org/xnio/http/ExtendedHandshakeChecker
     184: aload_1
     185: invokevirtual #397                // Method org/xnio/http/HttpUpgradeParser.getHeaders:()Ljava/util/Map;
     188: invokeinterface #421,  2          // InterfaceMethod org/xnio/http/ExtendedHandshakeChecker.checkHandshakeExtended:(Ljava/util/Map;)V
     193: goto          209
     196: aload_0
     197: getfield      #94                 // Field handshakeChecker:Ljava/lang/Object;
     200: checkcast     #119                // class org/xnio/http/HandshakeChecker
     203: aload_2
     204: invokeinterface #424,  2          // InterfaceMethod org/xnio/http/HandshakeChecker.checkHandshake:(Ljava/util/Map;)V
     209: goto          232
     212: astore        5
     214: aload_0
     215: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
     218: invokestatic  #375                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     221: aload_0
     222: getfield      #78                 // Field future:Lorg/xnio/FutureResult;
     225: aload         5
     227: invokevirtual #379                // Method org/xnio/FutureResult.setException:(Ljava/io/IOException;)Z
     230: pop
     231: return
     232: aload_0
     233: getfield      #78                 // Field future:Lorg/xnio/FutureResult;
     236: aload_0
     237: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
     240: invokevirtual #427                // Method org/xnio/FutureResult.setResult:(Ljava/lang/Object;)Z
     243: pop
     244: aload_0
     245: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
     248: aload_0
     249: getfield      #88                 // Field openListener:Lorg/xnio/ChannelListener;
     252: invokestatic  #431                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     255: pop
     256: return
    Exception table:
       from    to  target type
         167   209   212   Class java/io/IOException

  private void handleRedirect(org.xnio.http.HttpUpgradeParser);
    Code:
       0: aload_1
       1: invokevirtual #397                // Method org/xnio/http/HttpUpgradeParser.getHeaders:()Ljava/util/Map;
       4: ldc_w         #439                // String location
       7: invokeinterface #406,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #275                // class java/util/List
      15: astore_2
      16: aload_0
      17: getfield      #78                 // Field future:Lorg/xnio/FutureResult;
      20: new           #441                // class org/xnio/http/RedirectException
      23: dup
      24: getstatic     #221                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      27: invokeinterface #444,  1          // InterfaceMethod org/xnio/_private/Messages.redirect:()Ljava/lang/String;
      32: aload_1
      33: invokevirtual #447                // Method org/xnio/http/HttpUpgradeParser.getResponseCode:()I
      36: aload_2
      37: ifnonnull     44
      40: aconst_null
      41: goto          54
      44: aload_2
      45: iconst_0
      46: invokeinterface #401,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      51: checkcast     #197                // class java/lang/String
      54: invokespecial #450                // Method org/xnio/http/RedirectException."<init>":(Ljava/lang/String;ILjava/lang/String;)V
      57: invokevirtual #379                // Method org/xnio/FutureResult.setException:(Ljava/io/IOException;)Z
      60: pop
      61: return

  org.xnio.http.HttpUpgrade$HttpUpgradeState(org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, java.net.InetSocketAddress, java.net.URI, java.util.Map, org.xnio.ChannelListener, org.xnio.ChannelListener, org.xnio.OptionMap, org.xnio.http.HandshakeChecker, org.xnio.http.HttpUpgrade$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokespecial #455                // Method "<init>":(Lorg/xnio/XnioWorker;Lorg/xnio/ssl/XnioSsl;Ljava/net/InetSocketAddress;Ljava/net/URI;Ljava/util/Map;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;Lorg/xnio/http/HandshakeChecker;)V
      19: return

  static org.xnio.IoFuture access$100(org.xnio.http.HttpUpgrade$HttpUpgradeState);
    Code:
       0: aload_0
       1: invokespecial #470                // Method doUpgrade:()Lorg/xnio/IoFuture;
       4: areturn

  org.xnio.http.HttpUpgrade$HttpUpgradeState(org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, java.net.InetSocketAddress, java.net.URI, java.util.Map, org.xnio.ChannelListener, org.xnio.ChannelListener, org.xnio.OptionMap, org.xnio.http.ExtendedHandshakeChecker, org.xnio.http.HttpUpgrade$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokespecial #473                // Method "<init>":(Lorg/xnio/XnioWorker;Lorg/xnio/ssl/XnioSsl;Ljava/net/InetSocketAddress;Ljava/net/URI;Ljava/util/Map;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;Lorg/xnio/http/ExtendedHandshakeChecker;)V
      19: return

  static org.xnio.StreamConnection access$502(org.xnio.http.HttpUpgrade$HttpUpgradeState, org.xnio.StreamConnection);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #172                // Field connection:Lorg/xnio/StreamConnection;
       6: areturn

  static java.lang.String access$600(org.xnio.http.HttpUpgrade$HttpUpgradeState);
    Code:
       0: aload_0
       1: invokespecial #479                // Method buildHttpRequest:()Ljava/lang/String;
       4: areturn

  static org.xnio.FutureResult access$800(org.xnio.http.HttpUpgrade$HttpUpgradeState);
    Code:
       0: aload_0
       1: getfield      #78                 // Field future:Lorg/xnio/FutureResult;
       4: areturn

  static void access$900(org.xnio.http.HttpUpgrade$HttpUpgradeState);
    Code:
       0: aload_0
       1: invokespecial #484                // Method flushUpgradeChannel:()V
       4: return

  static org.xnio.StreamConnection access$500(org.xnio.http.HttpUpgrade$HttpUpgradeState);
    Code:
       0: aload_0
       1: getfield      #172                // Field connection:Lorg/xnio/StreamConnection;
       4: areturn

  static void access$1200(org.xnio.http.HttpUpgrade$HttpUpgradeState, org.xnio.http.HttpUpgradeParser);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #490                // Method handleUpgrade:(Lorg/xnio/http/HttpUpgradeParser;)V
       5: return

  static void access$1300(org.xnio.http.HttpUpgrade$HttpUpgradeState, org.xnio.http.HttpUpgradeParser);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #493                // Method handleRedirect:(Lorg/xnio/http/HttpUpgradeParser;)V
       5: return
}
