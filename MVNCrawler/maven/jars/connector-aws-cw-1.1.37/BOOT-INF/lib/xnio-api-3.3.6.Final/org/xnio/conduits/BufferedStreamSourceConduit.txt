Compiled from "BufferedStreamSourceConduit.java"
public final class org.xnio.conduits.BufferedStreamSourceConduit extends org.xnio.conduits.AbstractStreamSourceConduit<org.xnio.conduits.StreamSourceConduit> {
  private final org.xnio.Pooled<java.nio.ByteBuffer> pooledBuffer;

  public org.xnio.conduits.BufferedStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, org.xnio.Pooled<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/xnio/conduits/AbstractStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
       5: aload_0
       6: aload_2
       7: putfield      #16                 // Field pooledBuffer:Lorg/xnio/Pooled;
      10: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field pooledBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #32,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #34                 // class java/nio/ByteBuffer
      12: astore        6
      14: aload         6
      16: invokevirtual #38                 // Method java/nio/ByteBuffer.limit:()I
      19: istore        7
      21: aload         6
      23: invokevirtual #41                 // Method java/nio/ByteBuffer.position:()I
      26: istore        8
      28: iload         7
      30: iload         8
      32: isub
      33: istore        9
      35: iload         9
      37: ifle          104
      40: iload         9
      42: i2l
      43: lload_3
      44: lcmp
      45: ifle          94
      48: aload         6
      50: iload         8
      52: lload_3
      53: l2i
      54: iadd
      55: invokevirtual #44                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      58: pop
      59: aload         5
      61: aload         6
      63: lload_1
      64: invokevirtual #50                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      67: i2l
      68: lstore        10
      70: aload         6
      72: iload         7
      74: invokevirtual #44                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      77: pop
      78: lload         10
      80: lreturn
      81: astore        12
      83: aload         6
      85: iload         7
      87: invokevirtual #44                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      90: pop
      91: aload         12
      93: athrow
      94: aload         5
      96: aload         6
      98: lload_1
      99: invokevirtual #50                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
     102: i2l
     103: lreturn
     104: aload_0
     105: lload_1
     106: lload_3
     107: aload         5
     109: invokespecial #54                 // Method org/xnio/conduits/AbstractStreamSourceConduit.transferTo:(JJLjava/nio/channels/FileChannel;)J
     112: lreturn
     113: astore        6
     115: lconst_0
     116: lreturn
    Exception table:
       from    to  target type
          59    70    81   any
          81    83    81   any
           0    78   113   Class java/lang/IllegalStateException
          81   103   113   Class java/lang/IllegalStateException
         104   112   113   Class java/lang/IllegalStateException

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field pooledBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #32,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #34                 // class java/nio/ByteBuffer
      12: astore        5
      14: aload         5
      16: invokevirtual #38                 // Method java/nio/ByteBuffer.limit:()I
      19: istore        6
      21: aload         5
      23: invokevirtual #41                 // Method java/nio/ByteBuffer.position:()I
      26: istore        7
      28: iload         6
      30: iload         7
      32: isub
      33: istore        8
      35: aload_3
      36: invokevirtual #71                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      39: pop
      40: lconst_0
      41: lstore        10
      43: iload         8
      45: ifle          155
      48: iload         8
      50: i2l
      51: lload_1
      52: lcmp
      53: ifle          112
      56: aload         5
      58: iload         7
      60: lload_1
      61: l2i
      62: iadd
      63: invokevirtual #44                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      66: pop
      67: lload         10
      69: aload         4
      71: aload         5
      73: invokeinterface #76,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      78: dup
      79: istore        9
      81: i2l
      82: ladd
      83: lstore        10
      85: aload         5
      87: iload         6
      89: invokevirtual #44                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      92: pop
      93: goto          109
      96: astore        12
      98: aload         5
     100: iload         6
     102: invokevirtual #44                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     105: pop
     106: aload         12
     108: athrow
     109: goto          130
     112: lload         10
     114: aload         4
     116: aload         5
     118: invokeinterface #76,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     123: dup
     124: istore        9
     126: i2l
     127: ladd
     128: lstore        10
     130: iload         9
     132: ifne          138
     135: lload         10
     137: lreturn
     138: aload         5
     140: invokevirtual #41                 // Method java/nio/ByteBuffer.position:()I
     143: istore        7
     145: iload         6
     147: iload         7
     149: isub
     150: istore        8
     152: goto          43
     155: aload_0
     156: getfield      #79                 // Field next:Lorg/xnio/conduits/Conduit;
     159: checkcast     #81                 // class org/xnio/conduits/StreamSourceConduit
     162: lload_1
     163: aload_3
     164: aload         4
     166: invokestatic  #87                 // Method org/xnio/conduits/Conduits.transfer:(Lorg/xnio/conduits/StreamSourceConduit;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
     169: lstore        12
     171: lload         12
     173: lconst_0
     174: lcmp
     175: ifle          185
     178: lload         10
     180: lload         12
     182: ladd
     183: lstore        10
     185: lload         10
     187: lconst_0
     188: lcmp
     189: ifne          207
     192: lload         12
     194: ldc2_w        #88                 // long -1l
     197: lcmp
     198: ifne          207
     201: ldc2_w        #88                 // long -1l
     204: goto          209
     207: lload         10
     209: lreturn
     210: astore        5
     212: ldc2_w        #88                 // long -1l
     215: lreturn
    Exception table:
       from    to  target type
          67    85    96   any
          96    98    96   any
           0   137   210   Class java/lang/IllegalStateException
         138   209   210   Class java/lang/IllegalStateException

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field pooledBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #32,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #34                 // class java/nio/ByteBuffer
      12: astore_2
      13: aload_2
      14: invokevirtual #38                 // Method java/nio/ByteBuffer.limit:()I
      17: istore_3
      18: aload_2
      19: invokevirtual #41                 // Method java/nio/ByteBuffer.position:()I
      22: istore        4
      24: iload_3
      25: iload         4
      27: isub
      28: istore        5
      30: iload         5
      32: ifle          41
      35: aload_1
      36: aload_2
      37: invokestatic  #101                // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      40: ireturn
      41: aload_1
      42: invokevirtual #104                // Method java/nio/ByteBuffer.remaining:()I
      45: istore        6
      47: aload_2
      48: invokevirtual #71                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      51: pop
      52: aload_0
      53: getfield      #79                 // Field next:Lorg/xnio/conduits/Conduit;
      56: checkcast     #81                 // class org/xnio/conduits/StreamSourceConduit
      59: iconst_2
      60: anewarray     #34                 // class java/nio/ByteBuffer
      63: dup
      64: iconst_0
      65: aload_1
      66: aastore
      67: dup
      68: iconst_1
      69: aload_2
      70: aastore
      71: iconst_0
      72: iconst_2
      73: invokeinterface #107,  4          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:([Ljava/nio/ByteBuffer;II)J
      78: lstore        7
      80: lload         7
      82: ldc2_w        #88                 // long -1l
      85: lcmp
      86: ifne          100
      89: iconst_m1
      90: istore        9
      92: aload_2
      93: invokevirtual #110                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      96: pop
      97: iload         9
      99: ireturn
     100: aload_2
     101: invokevirtual #110                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     104: pop
     105: goto          118
     108: astore        10
     110: aload_2
     111: invokevirtual #110                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     114: pop
     115: aload         10
     117: athrow
     118: aload_1
     119: invokevirtual #104                // Method java/nio/ByteBuffer.remaining:()I
     122: iload         6
     124: isub
     125: ireturn
     126: astore_2
     127: iconst_m1
     128: ireturn
    Exception table:
       from    to  target type
          52    92   108   any
         108   110   108   any
           0    40   126   Class java/lang/IllegalStateException
          41    97   126   Class java/lang/IllegalStateException
         100   125   126   Class java/lang/IllegalStateException

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: lconst_0
       5: lreturn
       6: iload_3
       7: iconst_1
       8: if_icmpne     20
      11: aload_0
      12: aload_1
      13: iload_2
      14: aaload
      15: invokevirtual #115                // Method read:(Ljava/nio/ByteBuffer;)I
      18: i2l
      19: lreturn
      20: aload_0
      21: getfield      #16                 // Field pooledBuffer:Lorg/xnio/Pooled;
      24: invokeinterface #32,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      29: checkcast     #34                 // class java/nio/ByteBuffer
      32: astore        4
      34: aload         4
      36: invokevirtual #38                 // Method java/nio/ByteBuffer.limit:()I
      39: istore        5
      41: aload         4
      43: invokevirtual #41                 // Method java/nio/ByteBuffer.position:()I
      46: istore        6
      48: iload         5
      50: iload         6
      52: isub
      53: istore        7
      55: iload         7
      57: ifle          70
      60: aload_1
      61: iload_2
      62: iload_3
      63: aload         4
      65: invokestatic  #118                // Method org/xnio/Buffers.copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      68: i2l
      69: lreturn
      70: aload_1
      71: iload_2
      72: iload_3
      73: invokestatic  #123                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;II)J
      76: lstore        8
      78: aload         4
      80: invokevirtual #71                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      83: pop
      84: aload_1
      85: iload_2
      86: iload_2
      87: iload_3
      88: iadd
      89: iconst_1
      90: iadd
      91: invokestatic  #129                // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      94: checkcast     #120                // class "[Ljava/nio/ByteBuffer;"
      97: astore        10
      99: aload         10
     101: aload         10
     103: arraylength
     104: iconst_1
     105: isub
     106: aload         4
     108: aastore
     109: aload_0
     110: getfield      #79                 // Field next:Lorg/xnio/conduits/Conduit;
     113: checkcast     #81                 // class org/xnio/conduits/StreamSourceConduit
     116: aload         10
     118: iconst_0
     119: aload         10
     121: arraylength
     122: invokeinterface #107,  4          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:([Ljava/nio/ByteBuffer;II)J
     127: lstore        11
     129: lload         11
     131: ldc2_w        #88                 // long -1l
     134: lcmp
     135: ifne          152
     138: ldc2_w        #88                 // long -1l
     141: lstore        13
     143: aload         4
     145: invokevirtual #110                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     148: pop
     149: lload         13
     151: lreturn
     152: aload         4
     154: invokevirtual #110                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     157: pop
     158: goto          172
     161: astore        15
     163: aload         4
     165: invokevirtual #110                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     168: pop
     169: aload         15
     171: athrow
     172: aload_1
     173: iload_2
     174: iload_3
     175: invokestatic  #123                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;II)J
     178: lload         8
     180: lsub
     181: lreturn
     182: astore        4
     184: ldc2_w        #88                 // long -1l
     187: lreturn
    Exception table:
       from    to  target type
          84   143   161   any
         161   163   161   any
          20    69   182   Class java/lang/IllegalStateException
          70   149   182   Class java/lang/IllegalStateException
         152   181   182   Class java/lang/IllegalStateException

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field pooledBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #138,  1          // InterfaceMethod org/xnio/Pooled.free:()V
       9: aload_0
      10: invokespecial #140                // Method org/xnio/conduits/AbstractStreamSourceConduit.terminateReads:()V
      13: return
}
