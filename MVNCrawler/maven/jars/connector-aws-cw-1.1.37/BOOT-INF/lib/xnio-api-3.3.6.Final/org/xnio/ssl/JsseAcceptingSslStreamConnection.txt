Compiled from "JsseAcceptingSslStreamConnection.java"
final class org.xnio.ssl.JsseAcceptingSslStreamConnection extends org.xnio.ssl.AbstractAcceptingSslChannel<org.xnio.ssl.SslConnection, org.xnio.StreamConnection> {
  org.xnio.ssl.JsseAcceptingSslStreamConnection(javax.net.ssl.SSLContext, org.xnio.channels.AcceptingChannel<? extends org.xnio.StreamConnection>, org.xnio.OptionMap, org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.Pool<java.nio.ByteBuffer>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: invokespecial #10                 // Method org/xnio/ssl/AbstractAcceptingSslChannel."<init>":(Ljavax/net/ssl/SSLContext;Lorg/xnio/channels/AcceptingChannel;Lorg/xnio/OptionMap;Lorg/xnio/Pool;Lorg/xnio/Pool;Z)V
      13: return

  public org.xnio.ssl.SslConnection accept(org.xnio.StreamConnection, javax.net.ssl.SSLEngine);
    Code:
       0: new           #29                 // class org/xnio/ssl/JsseSslStreamConnection
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #31                 // Field socketBufferPool:Lorg/xnio/Pool;
      10: aload_0
      11: getfield      #33                 // Field applicationBufferPool:Lorg/xnio/Pool;
      14: aload_0
      15: getfield      #35                 // Field startTls:Z
      18: invokespecial #38                 // Method org/xnio/ssl/JsseSslStreamConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lorg/xnio/Pool;Lorg/xnio/Pool;Z)V
      21: areturn

  public org.xnio.channels.ConnectedChannel accept(org.xnio.channels.ConnectedChannel, javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #45                 // class org/xnio/StreamConnection
       5: aload_2
       6: invokevirtual #47                 // Method accept:(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;)Lorg/xnio/ssl/SslConnection;
       9: areturn
}
