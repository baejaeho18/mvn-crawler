Compiled from "SplitStreamSourceChannel.java"
public final class org.xnio.channels.SplitStreamSourceChannel implements org.xnio.channels.StreamSourceChannel, org.xnio.channels.ReadListenerSettable<org.xnio.channels.SplitStreamSourceChannel>, org.xnio.channels.CloseListenerSettable<org.xnio.channels.SplitStreamSourceChannel> {
  private final org.xnio.channels.StreamSourceChannel delegate;

  private volatile int state;

  private org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSourceChannel> readListener;

  private org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSourceChannel> closeListener;

  private static final int FLAG_DELEGATE_CONFIG;

  private static final int FLAG_CLOSED;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.channels.SplitStreamSourceChannel> stateUpdater;

  public org.xnio.channels.SplitStreamSourceChannel(org.xnio.channels.StreamSourceChannel, boolean);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       9: aload_1
      10: invokeinterface #49,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      15: new           #14                 // class org/xnio/channels/SplitStreamSourceChannel$1
      18: dup
      19: aload_0
      20: invokespecial #52                 // Method org/xnio/channels/SplitStreamSourceChannel$1."<init>":(Lorg/xnio/channels/SplitStreamSourceChannel;)V
      23: invokeinterface #56,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      28: aload_0
      29: iload_2
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: putfield      #58                 // Field state:I
      41: return

  public org.xnio.channels.SplitStreamSourceChannel(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #65                 // Method "<init>":(Lorg/xnio/channels/StreamSourceChannel;Z)V
       6: return

  public void setReadListener(org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSourceChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field readListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSourceChannel> getReadListener();
    Code:
       0: aload_0
       1: getfield      #68                 // Field readListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setCloseListener(org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSourceChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field closeListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSourceChannel> getCloseListener();
    Code:
       0: aload_0
       1: getfield      #73                 // Field closeListener:Lorg/xnio/ChannelListener;
       4: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.SplitStreamSourceChannel> getReadSetter();
    Code:
       0: new           #21                 // class org/xnio/channels/ReadListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #77                 // Method org/xnio/channels/ReadListenerSettable$Setter."<init>":(Lorg/xnio/channels/ReadListenerSettable;)V
       8: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.SplitStreamSourceChannel> getCloseSetter();
    Code:
       0: new           #23                 // class org/xnio/channels/CloseListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #81                 // Method org/xnio/channels/CloseListenerSettable$Setter."<init>":(Lorg/xnio/channels/CloseListenerSettable;)V
       8: areturn

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: lload_1
       5: lload_3
       6: aload         5
       8: invokeinterface #87,  6           // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JJLjava/nio/channels/FileChannel;)J
      13: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: lload_1
       5: aload_3
       6: aload         4
       8: invokeinterface #95,  5           // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
      13: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: aload_1
       5: invokeinterface #102,  2          // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      10: ireturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #106,  4          // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:([Ljava/nio/ByteBuffer;II)J
      12: lreturn

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: aload_1
       5: invokeinterface #113,  2          // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:([Ljava/nio/ByteBuffer;)J
      10: lreturn

  public void suspendReads();
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #116,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.suspendReads:()V
       9: return

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #119,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
       9: return

  public void wakeupReads();
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #122,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.wakeupReads:()V
       9: return

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #126,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.isReadResumed:()Z
       9: ireturn

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #129,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.awaitReadable:()V
       9: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: lload_1
       5: aload_3
       6: invokeinterface #132,  4          // InterfaceMethod org/xnio/channels/StreamSourceChannel.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #139,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.getWorker:()Lorg/xnio/XnioWorker;
       9: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #58                 // Field state:I
       4: iconst_1
       5: invokestatic  #147                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          24
      11: aload_0
      12: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      15: aload_1
      16: invokeinterface #149,  2          // InterfaceMethod org/xnio/channels/StreamSourceChannel.supportsOption:(Lorg/xnio/Option;)Z
      21: goto          25
      24: iconst_0
      25: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field state:I
       4: iconst_1
       5: invokestatic  #147                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          24
      11: aload_0
      12: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      15: aload_1
      16: invokeinterface #156,  2          // InterfaceMethod org/xnio/channels/StreamSourceChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      21: goto          25
      24: aconst_null
      25: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field state:I
       4: iconst_1
       5: invokestatic  #147                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          25
      11: aload_0
      12: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      15: aload_1
      16: aload_2
      17: invokeinterface #163,  3          // InterfaceMethod org/xnio/channels/StreamSourceChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      22: goto          26
      25: aconst_null
      26: areturn

  public void shutdownReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: invokestatic  #147                // Method org/xnio/Bits.allAreSet:(II)Z
      10: ifeq          14
      13: return
      14: iload_1
      15: iconst_2
      16: ior
      17: istore_2
      18: getstatic     #169                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #175                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      27: ifeq          0
      30: aload_0
      31: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      34: invokeinterface #177,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
      39: aload_0
      40: aload_0
      41: getfield      #73                 // Field closeListener:Lorg/xnio/ChannelListener;
      44: invokestatic  #183                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      47: pop
      48: return

  public org.xnio.XnioExecutor getReadThread();
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #190,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadThread:()Lorg/xnio/XnioExecutor;
       9: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #45                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #194,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       9: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #58                 // Field state:I
       4: iconst_2
       5: invokestatic  #198                // Method org/xnio/Bits.allAreClear:(II)Z
       8: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #200                // Method shutdownReads:()V
       4: return

  static org.xnio.ChannelListener access$000(org.xnio.channels.SplitStreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #68                 // Field readListener:Lorg/xnio/ChannelListener;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/channels/SplitStreamSourceChannel
       2: ldc           #205                // String state
       4: invokestatic  #209                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #169                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
