Compiled from "ByteBufferSlicePool.java"
public final class org.xnio.ByteBufferSlicePool implements org.xnio.Pool<java.nio.ByteBuffer> {
  private static final int LOCAL_LENGTH;

  private final java.util.Set<org.xnio.ByteBufferSlicePool$Ref> refSet;

  private final java.util.Queue<org.xnio.ByteBufferSlicePool$Slice> sliceQueue;

  private final org.xnio.BufferAllocator<java.nio.ByteBuffer> allocator;

  private final int bufferSize;

  private final int buffersPerRegion;

  private final int threadLocalQueueSize;

  private final java.lang.ThreadLocal<org.xnio.ByteBufferSlicePool$ThreadLocalCache> localQueueHolder;

  public org.xnio.ByteBufferSlicePool(org.xnio.BufferAllocator<java.nio.ByteBuffer>, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #44                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #46                 // class java/util/HashSet
       8: dup
       9: invokespecial #47                 // Method java/util/HashSet."<init>":()V
      12: invokestatic  #53                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      15: putfield      #55                 // Field refSet:Ljava/util/Set;
      18: aload_0
      19: new           #22                 // class org/xnio/ByteBufferSlicePool$1
      22: dup
      23: aload_0
      24: invokespecial #58                 // Method org/xnio/ByteBufferSlicePool$1."<init>":(Lorg/xnio/ByteBufferSlicePool;)V
      27: putfield      #60                 // Field localQueueHolder:Ljava/lang/ThreadLocal;
      30: iload_2
      31: ifgt          45
      34: getstatic     #66                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      37: ldc           #67                 // String bufferSize
      39: invokeinterface #71,  2           // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      44: athrow
      45: iload_3
      46: iload_2
      47: if_icmpge     61
      50: getstatic     #66                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      53: ldc           #67                 // String bufferSize
      55: invokeinterface #71,  2           // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      60: athrow
      61: aload_0
      62: iload_3
      63: iload_2
      64: idiv
      65: putfield      #75                 // Field buffersPerRegion:I
      68: aload_0
      69: iload_2
      70: putfield      #77                 // Field bufferSize:I
      73: aload_0
      74: aload_1
      75: putfield      #79                 // Field allocator:Lorg/xnio/BufferAllocator;
      78: aload_0
      79: new           #81                 // class java/util/concurrent/ConcurrentLinkedQueue
      82: dup
      83: invokespecial #82                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      86: putfield      #84                 // Field sliceQueue:Ljava/util/Queue;
      89: aload_0
      90: iload         4
      92: putfield      #86                 // Field threadLocalQueueSize:I
      95: return

  public org.xnio.ByteBufferSlicePool(org.xnio.BufferAllocator<java.nio.ByteBuffer>, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: getstatic     #92                 // Field LOCAL_LENGTH:I
       7: invokespecial #94                 // Method "<init>":(Lorg/xnio/BufferAllocator;III)V
      10: return

  public org.xnio.ByteBufferSlicePool(int, int);
    Code:
       0: aload_0
       1: getstatic     #98                 // Field org/xnio/BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR:Lorg/xnio/BufferAllocator;
       4: iload_1
       5: iload_2
       6: invokespecial #100                // Method "<init>":(Lorg/xnio/BufferAllocator;II)V
       9: return

  public org.xnio.Pooled<java.nio.ByteBuffer> allocate();
    Code:
       0: aload_0
       1: getfield      #86                 // Field threadLocalQueueSize:I
       4: ifle          68
       7: aload_0
       8: getfield      #60                 // Field localQueueHolder:Ljava/lang/ThreadLocal;
      11: invokevirtual #108                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      14: checkcast     #10                 // class org/xnio/ByteBufferSlicePool$ThreadLocalCache
      17: astore_2
      18: aload_2
      19: getfield      #111                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      22: aload_0
      23: getfield      #86                 // Field threadLocalQueueSize:I
      26: if_icmpeq     39
      29: aload_2
      30: dup
      31: getfield      #111                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      34: iconst_1
      35: iadd
      36: putfield      #111                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      39: aload_2
      40: getfield      #115                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.queue:Ljava/util/ArrayDeque;
      43: invokevirtual #120                // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      46: checkcast     #16                 // class org/xnio/ByteBufferSlicePool$Slice
      49: astore_1
      50: aload_1
      51: ifnull        68
      54: new           #19                 // class org/xnio/ByteBufferSlicePool$PooledByteBuffer
      57: dup
      58: aload_0
      59: aload_1
      60: aload_1
      61: invokevirtual #124                // Method org/xnio/ByteBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
      64: invokespecial #127                // Method org/xnio/ByteBufferSlicePool$PooledByteBuffer."<init>":(Lorg/xnio/ByteBufferSlicePool;Lorg/xnio/ByteBufferSlicePool$Slice;Ljava/nio/ByteBuffer;)V
      67: areturn
      68: aload_0
      69: getfield      #84                 // Field sliceQueue:Ljava/util/Queue;
      72: astore_2
      73: aload_2
      74: invokeinterface #130,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      79: checkcast     #16                 // class org/xnio/ByteBufferSlicePool$Slice
      82: astore_1
      83: aload_1
      84: ifnull        101
      87: new           #19                 // class org/xnio/ByteBufferSlicePool$PooledByteBuffer
      90: dup
      91: aload_0
      92: aload_1
      93: aload_1
      94: invokevirtual #124                // Method org/xnio/ByteBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
      97: invokespecial #127                // Method org/xnio/ByteBufferSlicePool$PooledByteBuffer."<init>":(Lorg/xnio/ByteBufferSlicePool;Lorg/xnio/ByteBufferSlicePool$Slice;Ljava/nio/ByteBuffer;)V
     100: areturn
     101: aload_2
     102: dup
     103: astore_3
     104: monitorenter
     105: aload_2
     106: invokeinterface #130,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     111: checkcast     #16                 // class org/xnio/ByteBufferSlicePool$Slice
     114: astore_1
     115: aload_1
     116: ifnull        135
     119: new           #19                 // class org/xnio/ByteBufferSlicePool$PooledByteBuffer
     122: dup
     123: aload_0
     124: aload_1
     125: aload_1
     126: invokevirtual #124                // Method org/xnio/ByteBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
     129: invokespecial #127                // Method org/xnio/ByteBufferSlicePool$PooledByteBuffer."<init>":(Lorg/xnio/ByteBufferSlicePool;Lorg/xnio/ByteBufferSlicePool$Slice;Ljava/nio/ByteBuffer;)V
     132: aload_3
     133: monitorexit
     134: areturn
     135: aload_0
     136: getfield      #77                 // Field bufferSize:I
     139: istore        4
     141: aload_0
     142: getfield      #75                 // Field buffersPerRegion:I
     145: istore        5
     147: aload_0
     148: getfield      #79                 // Field allocator:Lorg/xnio/BufferAllocator;
     151: iload         5
     153: iload         4
     155: imul
     156: invokeinterface #133,  2          // InterfaceMethod org/xnio/BufferAllocator.allocate:(I)Ljava/nio/Buffer;
     161: checkcast     #135                // class java/nio/ByteBuffer
     164: astore        6
     166: iload         4
     168: istore        7
     170: iconst_1
     171: istore        8
     173: iload         8
     175: iload         5
     177: if_icmpge     215
     180: aload_2
     181: new           #16                 // class org/xnio/ByteBufferSlicePool$Slice
     184: dup
     185: aload_0
     186: aload         6
     188: iload         7
     190: iload         4
     192: aconst_null
     193: invokespecial #138                // Method org/xnio/ByteBufferSlicePool$Slice."<init>":(Lorg/xnio/ByteBufferSlicePool;Ljava/nio/ByteBuffer;IILorg/xnio/ByteBufferSlicePool$1;)V
     196: invokeinterface #142,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     201: pop
     202: iload         7
     204: iload         4
     206: iadd
     207: istore        7
     209: iinc          8, 1
     212: goto          173
     215: new           #16                 // class org/xnio/ByteBufferSlicePool$Slice
     218: dup
     219: aload_0
     220: aload         6
     222: iconst_0
     223: iload         4
     225: aconst_null
     226: invokespecial #138                // Method org/xnio/ByteBufferSlicePool$Slice."<init>":(Lorg/xnio/ByteBufferSlicePool;Ljava/nio/ByteBuffer;IILorg/xnio/ByteBufferSlicePool$1;)V
     229: astore        8
     231: new           #19                 // class org/xnio/ByteBufferSlicePool$PooledByteBuffer
     234: dup
     235: aload_0
     236: aload         8
     238: aload         8
     240: invokevirtual #124                // Method org/xnio/ByteBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
     243: invokespecial #127                // Method org/xnio/ByteBufferSlicePool$PooledByteBuffer."<init>":(Lorg/xnio/ByteBufferSlicePool;Lorg/xnio/ByteBufferSlicePool$Slice;Ljava/nio/ByteBuffer;)V
     246: aload_3
     247: monitorexit
     248: areturn
     249: astore        9
     251: aload_3
     252: monitorexit
     253: aload         9
     255: athrow
    Exception table:
       from    to  target type
         105   134   249   any
         135   248   249   any
         249   253   249   any

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #77                 // Field bufferSize:I
       4: ireturn

  private void doFree(org.xnio.ByteBufferSlicePool$Slice);
    Code:
       0: aload_0
       1: getfield      #86                 // Field threadLocalQueueSize:I
       4: ifle          85
       7: aload_0
       8: getfield      #60                 // Field localQueueHolder:Ljava/lang/ThreadLocal;
      11: invokevirtual #108                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      14: checkcast     #10                 // class org/xnio/ByteBufferSlicePool$ThreadLocalCache
      17: astore_2
      18: iconst_0
      19: istore_3
      20: aload_2
      21: getfield      #111                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      24: ifle          39
      27: aload_2
      28: dup
      29: getfield      #111                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      32: iconst_1
      33: isub
      34: putfield      #111                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.outstanding:I
      37: iconst_1
      38: istore_3
      39: aload_2
      40: getfield      #115                // Field org/xnio/ByteBufferSlicePool$ThreadLocalCache.queue:Ljava/util/ArrayDeque;
      43: astore        4
      45: aload         4
      47: invokevirtual #159                // Method java/util/ArrayDeque.size:()I
      50: aload_0
      51: getfield      #86                 // Field threadLocalQueueSize:I
      54: if_icmpeq     61
      57: iload_3
      58: ifne          75
      61: aload_0
      62: getfield      #84                 // Field sliceQueue:Ljava/util/Queue;
      65: aload_1
      66: invokeinterface #142,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          82
      75: aload         4
      77: aload_1
      78: invokevirtual #160                // Method java/util/ArrayDeque.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          96
      85: aload_0
      86: getfield      #84                 // Field sliceQueue:Ljava/util/Queue;
      89: aload_1
      90: invokeinterface #142,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      95: pop
      96: return

  static void access$000(org.xnio.ByteBufferSlicePool, org.xnio.ByteBufferSlicePool$Slice);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #168                // Method doFree:(Lorg/xnio/ByteBufferSlicePool$Slice;)V
       5: return

  static java.util.Set access$300(org.xnio.ByteBufferSlicePool);
    Code:
       0: aload_0
       1: getfield      #55                 // Field refSet:Ljava/util/Set;
       4: areturn

  static int access$400(org.xnio.ByteBufferSlicePool);
    Code:
       0: aload_0
       1: getfield      #86                 // Field threadLocalQueueSize:I
       4: ireturn

  static {};
    Code:
       0: new           #179                // class org/xnio/ReadPropertyAction
       3: dup
       4: ldc           #181                // String xnio.bufferpool.threadlocal.size
       6: ldc           #183                // String 12
       8: invokespecial #186                // Method org/xnio/ReadPropertyAction."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      11: invokestatic  #192                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      14: checkcast     #194                // class java/lang/String
      17: astore_0
      18: aload_0
      19: invokestatic  #200                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      22: istore_1
      23: goto          30
      26: astore_2
      27: bipush        12
      29: istore_1
      30: iload_1
      31: putstatic     #92                 // Field LOCAL_LENGTH:I
      34: return
    Exception table:
       from    to  target type
          18    23    26   Class java/lang/NumberFormatException
}
