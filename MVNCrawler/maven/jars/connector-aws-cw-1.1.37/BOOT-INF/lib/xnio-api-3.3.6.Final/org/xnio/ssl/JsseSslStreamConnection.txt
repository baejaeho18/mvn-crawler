Compiled from "JsseSslStreamConnection.java"
final class org.xnio.ssl.JsseSslStreamConnection extends org.xnio.ssl.SslConnection {
  private final org.xnio.StreamConnection connection;

  private final org.xnio.ssl.JsseSslConduitEngine sslConduitEngine;

  private volatile boolean tls;

  private final org.xnio.ChannelListener$SimpleSetter<org.xnio.ssl.SslConnection> handshakeSetter;

  private static final java.util.Set<org.xnio.Option<?>> SUPPORTED_OPTIONS;

  org.xnio.ssl.JsseSslStreamConnection(org.xnio.StreamConnection, javax.net.ssl.SSLEngine, org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.Pool<java.nio.ByteBuffer>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       5: invokespecial #41                 // Method org/xnio/ssl/SslConnection."<init>":(Lorg/xnio/XnioIoThread;)V
       8: aload_0
       9: new           #7                  // class org/xnio/ChannelListener$SimpleSetter
      12: dup
      13: invokespecial #44                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      16: putfield      #46                 // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      19: aload_0
      20: aload_1
      21: putfield      #48                 // Field connection:Lorg/xnio/StreamConnection;
      24: aload_1
      25: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      28: invokevirtual #58                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      31: astore        6
      33: aload_1
      34: invokevirtual #62                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      37: invokevirtual #67                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      40: astore        7
      42: aload_0
      43: new           #69                 // class org/xnio/ssl/JsseSslConduitEngine
      46: dup
      47: aload_0
      48: aload         6
      50: aload         7
      52: aload_2
      53: aload_3
      54: aload         4
      56: invokespecial #72                 // Method org/xnio/ssl/JsseSslConduitEngine."<init>":(Lorg/xnio/ssl/JsseSslStreamConnection;Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/conduits/StreamSourceConduit;Ljavax/net/ssl/SSLEngine;Lorg/xnio/Pool;Lorg/xnio/Pool;)V
      59: putfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      62: aload_0
      63: iload         5
      65: ifne          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: putfield      #84                 // Field tls:Z
      76: aload_0
      77: new           #86                 // class org/xnio/ssl/JsseSslStreamSinkConduit
      80: dup
      81: aload         6
      83: aload_0
      84: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      87: aload_0
      88: getfield      #84                 // Field tls:Z
      91: invokespecial #89                 // Method org/xnio/ssl/JsseSslStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/ssl/JsseSslConduitEngine;Z)V
      94: invokevirtual #93                 // Method setSinkConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      97: aload_0
      98: new           #95                 // class org/xnio/ssl/JsseSslStreamSourceConduit
     101: dup
     102: aload         7
     104: aload_0
     105: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     108: aload_0
     109: getfield      #84                 // Field tls:Z
     112: invokespecial #98                 // Method org/xnio/ssl/JsseSslStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lorg/xnio/ssl/JsseSslConduitEngine;Z)V
     115: invokevirtual #102                // Method setSourceConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     118: return

  public synchronized void startHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #84                 // Field tls:Z
       4: ifne          38
       7: aload_0
       8: iconst_1
       9: putfield      #84                 // Field tls:Z
      12: aload_0
      13: invokevirtual #119                // Method getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      16: invokevirtual #67                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      19: checkcast     #95                 // class org/xnio/ssl/JsseSslStreamSourceConduit
      22: invokevirtual #122                // Method org/xnio/ssl/JsseSslStreamSourceConduit.enableTls:()V
      25: aload_0
      26: invokevirtual #123                // Method getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      29: invokevirtual #58                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      32: checkcast     #86                 // class org/xnio/ssl/JsseSslStreamSinkConduit
      35: invokevirtual #124                // Method org/xnio/ssl/JsseSslStreamSinkConduit.enableTls:()V
      38: aload_0
      39: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      42: invokevirtual #127                // Method org/xnio/ssl/JsseSslConduitEngine.beginHandshake:()V
      45: return

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #48                 // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #131                // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #48                 // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #134                // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  protected void closeAction() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #84                 // Field tls:Z
       4: ifeq          58
       7: aload_0
       8: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #138                // Method org/xnio/ssl/JsseSslConduitEngine.closeOutbound:()V
      14: goto          38
      17: astore_1
      18: aload_0
      19: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      22: invokevirtual #141                // Method org/xnio/ssl/JsseSslConduitEngine.closeInbound:()V
      25: goto          29
      28: astore_2
      29: aload_0
      30: getfield      #48                 // Field connection:Lorg/xnio/StreamConnection;
      33: invokestatic  #147                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      36: aload_1
      37: athrow
      38: aload_0
      39: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      42: invokevirtual #141                // Method org/xnio/ssl/JsseSslConduitEngine.closeInbound:()V
      45: goto          58
      48: astore_1
      49: aload_0
      50: getfield      #48                 // Field connection:Lorg/xnio/StreamConnection;
      53: invokestatic  #147                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      56: aload_1
      57: athrow
      58: aload_0
      59: getfield      #48                 // Field connection:Lorg/xnio/StreamConnection;
      62: invokevirtual #150                // Method org/xnio/StreamConnection.close:()V
      65: return
    Exception table:
       from    to  target type
           7    14    17   Class java/io/IOException
          18    25    28   Class java/io/IOException
          38    45    48   Class java/io/IOException

  protected void notifyWriteClosed();
    Code:
       0: return

  protected void notifyReadClosed();
    Code:
       0: return

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #165                // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     122
       7: aload_0
       8: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #169                // Method org/xnio/ssl/JsseSslConduitEngine.getEngine:()Ljavax/net/ssl/SSLEngine;
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokevirtual #173                // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      20: ifeq          29
      23: getstatic     #179                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      26: goto          45
      29: aload_3
      30: invokevirtual #184                // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      33: ifeq          42
      36: getstatic     #187                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      39: goto          45
      42: getstatic     #190                // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      45: invokevirtual #194                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      48: astore        4
      50: aload_3
      51: aload_2
      52: getstatic     #179                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      55: if_acmpne     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: invokevirtual #198                // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
      66: aload_3
      67: aload_2
      68: getstatic     #187                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      71: if_acmpne     78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: invokevirtual #201                // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
      82: aload         4
      84: areturn
      85: astore        5
      87: aload_3
      88: aload_2
      89: getstatic     #179                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      92: if_acmpne     99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: invokevirtual #198                // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     103: aload_3
     104: aload_2
     105: getstatic     #187                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
     108: if_acmpne     115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: invokevirtual #201                // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     119: aload         5
     121: athrow
     122: aload_1
     123: getstatic     #206                // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
     126: if_acmpne     137
     129: new           #159                // class java/lang/IllegalArgumentException
     132: dup
     133: invokespecial #207                // Method java/lang/IllegalArgumentException."<init>":()V
     136: athrow
     137: aload_0
     138: getfield      #48                 // Field connection:Lorg/xnio/StreamConnection;
     141: aload_1
     142: aload_2
     143: invokevirtual #209                // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     146: areturn
    Exception table:
       from    to  target type
          15    50    85   any
          85    87    85   any

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #165                // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     49
       7: aload_0
       8: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #169                // Method org/xnio/ssl/JsseSslConduitEngine.getEngine:()Ljavax/net/ssl/SSLEngine;
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokevirtual #173                // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      20: ifeq          29
      23: getstatic     #179                // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      26: goto          45
      29: aload_2
      30: invokevirtual #184                // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      33: ifeq          42
      36: getstatic     #187                // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      39: goto          45
      42: getstatic     #190                // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      45: invokevirtual #194                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      48: areturn
      49: aload_1
      50: getstatic     #206                // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
      53: if_acmpne     70
      56: aload_1
      57: aload_0
      58: getfield      #84                 // Field tls:Z
      61: invokestatic  #223                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      64: invokevirtual #194                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      67: goto          78
      70: aload_0
      71: getfield      #48                 // Field connection:Lorg/xnio/StreamConnection;
      74: aload_1
      75: invokevirtual #225                // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      78: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #229                // Field SUPPORTED_OPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #235,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          23
      12: aload_0
      13: getfield      #48                 // Field connection:Lorg/xnio/StreamConnection;
      16: aload_1
      17: invokevirtual #237                // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aload_0
       1: getfield      #84                 // Field tls:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #243                // Method org/xnio/ssl/JsseSslConduitEngine.getSession:()Ljavax/net/ssl/SSLSession;
      14: goto          18
      17: aconst_null
      18: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.ssl.SslConnection> getHandshakeSetter();
    Code:
       0: aload_0
       1: getfield      #46                 // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  javax.net.ssl.SSLEngine getEngine();
    Code:
       0: aload_0
       1: getfield      #74                 // Field sslConduitEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
       4: invokevirtual #169                // Method org/xnio/ssl/JsseSslConduitEngine.getEngine:()Ljavax/net/ssl/SSLEngine;
       7: areturn

  protected void handleHandshakeFinished();
    Code:
       0: aload_0
       1: getfield      #46                 // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: invokevirtual #252                // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
       7: astore_1
       8: aload_1
       9: ifnonnull     13
      12: return
      13: aload_0
      14: aload_1
      15: invokestatic  #258                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      18: pop
      19: return

  static {};
    Code:
       0: invokestatic  #266                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
       3: getstatic     #206                // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
       6: getstatic     #165                // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       9: invokevirtual #270                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      12: invokevirtual #274                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      15: putstatic     #229                // Field SUPPORTED_OPTIONS:Ljava/util/Set;
      18: return
}
