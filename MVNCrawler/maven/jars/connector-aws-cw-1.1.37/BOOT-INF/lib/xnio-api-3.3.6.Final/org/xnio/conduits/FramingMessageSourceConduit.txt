Compiled from "FramingMessageSourceConduit.java"
public final class org.xnio.conduits.FramingMessageSourceConduit extends org.xnio.conduits.AbstractSourceConduit<org.xnio.conduits.StreamSourceConduit> implements org.xnio.conduits.MessageSourceConduit {
  private final org.xnio.Pooled<java.nio.ByteBuffer> receiveBuffer;

  private boolean ready;

  public org.xnio.conduits.FramingMessageSourceConduit(org.xnio.conduits.StreamSourceConduit, org.xnio.Pooled<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method org/xnio/conduits/AbstractSourceConduit."<init>":(Lorg/xnio/conduits/SourceConduit;)V
       5: aload_0
       6: aload_2
       7: putfield      #20                 // Field receiveBuffer:Lorg/xnio/Pooled;
      10: return

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #28                 // Field ready:Z
       4: ifeq          22
       7: aload_0
       8: getfield      #31                 // Field next:Lorg/xnio/conduits/Conduit;
      11: checkcast     #33                 // class org/xnio/conduits/StreamSourceConduit
      14: invokeinterface #36,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.wakeupReads:()V
      19: goto          34
      22: aload_0
      23: getfield      #31                 // Field next:Lorg/xnio/conduits/Conduit;
      26: checkcast     #33                 // class org/xnio/conduits/StreamSourceConduit
      29: invokeinterface #38,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.resumeReads:()V
      34: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field ready:Z
       4: ifne          21
       7: aload_0
       8: getfield      #31                 // Field next:Lorg/xnio/conduits/Conduit;
      11: checkcast     #33                 // class org/xnio/conduits/StreamSourceConduit
      14: lload_1
      15: aload_3
      16: invokeinterface #44,  4           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      21: return

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field ready:Z
       4: ifne          19
       7: aload_0
       8: getfield      #31                 // Field next:Lorg/xnio/conduits/Conduit;
      11: checkcast     #33                 // class org/xnio/conduits/StreamSourceConduit
      14: invokeinterface #50,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:()V
      19: return

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field receiveBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #56,  1           // InterfaceMethod org/xnio/Pooled.free:()V
       9: aload_0
      10: getfield      #31                 // Field next:Lorg/xnio/conduits/Conduit;
      13: checkcast     #33                 // class org/xnio/conduits/StreamSourceConduit
      16: invokeinterface #58,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.terminateReads:()V
      21: return

  public int receive(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field receiveBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #64,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #66                 // class java/nio/ByteBuffer
      12: astore_2
      13: aload_0
      14: getfield      #31                 // Field next:Lorg/xnio/conduits/Conduit;
      17: checkcast     #33                 // class org/xnio/conduits/StreamSourceConduit
      20: aload_2
      21: invokeinterface #69,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
      26: istore_3
      27: iload_3
      28: ifgt          13
      31: aload_2
      32: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
      35: iconst_4
      36: if_icmpge     56
      39: iload_3
      40: iconst_m1
      41: if_icmpne     49
      44: aload_2
      45: invokevirtual #77                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      48: pop
      49: aload_0
      50: iconst_0
      51: putfield      #28                 // Field ready:Z
      54: iload_3
      55: ireturn
      56: aload_2
      57: invokevirtual #80                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      60: pop
      61: aload_2
      62: invokevirtual #83                 // Method java/nio/ByteBuffer.getInt:()I
      65: istore        4
      67: iload         4
      69: iflt          83
      72: iload         4
      74: aload_2
      75: invokevirtual #86                 // Method java/nio/ByteBuffer.capacity:()I
      78: iconst_4
      79: isub
      80: if_icmple     100
      83: aload_2
      84: iconst_4
      85: invokestatic  #92                 // Method org/xnio/Buffers.unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
      88: pop
      89: getstatic     #98                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      92: iload         4
      94: invokeinterface #102,  2          // InterfaceMethod org/xnio/_private/Messages.recvInvalidMsgLength:(I)Ljava/io/IOException;
      99: athrow
     100: aload_2
     101: invokevirtual #105                // Method java/nio/ByteBuffer.remaining:()I
     104: iload         4
     106: if_icmpge     176
     109: iload_3
     110: iconst_m1
     111: if_icmpne     122
     114: aload_2
     115: invokevirtual #77                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     118: pop
     119: goto          128
     122: aload_2
     123: iconst_4
     124: invokestatic  #92                 // Method org/xnio/Buffers.unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     127: pop
     128: aload_0
     129: iconst_0
     130: putfield      #28                 // Field ready:Z
     133: iload_3
     134: istore        5
     136: iload_3
     137: iconst_m1
     138: if_icmpeq     173
     141: aload_2
     142: invokevirtual #109                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     145: pop
     146: aload_2
     147: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     150: iconst_4
     151: if_icmplt     173
     154: aload_2
     155: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     158: iconst_4
     159: aload_2
     160: iconst_0
     161: invokevirtual #112                // Method java/nio/ByteBuffer.getInt:(I)I
     164: iadd
     165: if_icmplt     173
     168: aload_0
     169: iconst_1
     170: putfield      #28                 // Field ready:Z
     173: iload         5
     175: ireturn
     176: aload_1
     177: invokevirtual #116                // Method java/nio/ByteBuffer.hasRemaining:()Z
     180: ifeq          232
     183: iload         4
     185: aload_1
     186: aload_2
     187: invokestatic  #120                // Method org/xnio/Buffers.copy:(ILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
     190: istore        5
     192: iload_3
     193: iconst_m1
     194: if_icmpeq     229
     197: aload_2
     198: invokevirtual #109                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     201: pop
     202: aload_2
     203: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     206: iconst_4
     207: if_icmplt     229
     210: aload_2
     211: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     214: iconst_4
     215: aload_2
     216: iconst_0
     217: invokevirtual #112                // Method java/nio/ByteBuffer.getInt:(I)I
     220: iadd
     221: if_icmplt     229
     224: aload_0
     225: iconst_1
     226: putfield      #28                 // Field ready:Z
     229: iload         5
     231: ireturn
     232: aload_2
     233: iload         4
     235: invokestatic  #123                // Method org/xnio/Buffers.skip:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     238: pop
     239: iconst_0
     240: istore        5
     242: iload_3
     243: iconst_m1
     244: if_icmpeq     279
     247: aload_2
     248: invokevirtual #109                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     251: pop
     252: aload_2
     253: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     256: iconst_4
     257: if_icmplt     279
     260: aload_2
     261: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     264: iconst_4
     265: aload_2
     266: iconst_0
     267: invokevirtual #112                // Method java/nio/ByteBuffer.getInt:(I)I
     270: iadd
     271: if_icmplt     279
     274: aload_0
     275: iconst_1
     276: putfield      #28                 // Field ready:Z
     279: iload         5
     281: ireturn
     282: astore        6
     284: iload_3
     285: iconst_m1
     286: if_icmpeq     321
     289: aload_2
     290: invokevirtual #109                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     293: pop
     294: aload_2
     295: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     298: iconst_4
     299: if_icmplt     321
     302: aload_2
     303: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     306: iconst_4
     307: aload_2
     308: iconst_0
     309: invokevirtual #112                // Method java/nio/ByteBuffer.getInt:(I)I
     312: iadd
     313: if_icmplt     321
     316: aload_0
     317: iconst_1
     318: putfield      #28                 // Field ready:Z
     321: aload         6
     323: athrow
    Exception table:
       from    to  target type
          61   136   282   any
         176   192   282   any
         232   242   282   any
         282   284   282   any

  public long receive(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field receiveBuffer:Lorg/xnio/Pooled;
       4: invokeinterface #64,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #66                 // class java/nio/ByteBuffer
      12: astore        4
      14: aload_0
      15: getfield      #31                 // Field next:Lorg/xnio/conduits/Conduit;
      18: checkcast     #33                 // class org/xnio/conduits/StreamSourceConduit
      21: aload         4
      23: invokeinterface #69,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
      28: istore        5
      30: iload         5
      32: ifgt          14
      35: aload         4
      37: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
      40: iconst_4
      41: if_icmpge     65
      44: iload         5
      46: iconst_m1
      47: if_icmpne     56
      50: aload         4
      52: invokevirtual #77                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      55: pop
      56: aload_0
      57: iconst_0
      58: putfield      #28                 // Field ready:Z
      61: iload         5
      63: i2l
      64: lreturn
      65: aload         4
      67: invokevirtual #80                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      70: pop
      71: aload         4
      73: invokevirtual #83                 // Method java/nio/ByteBuffer.getInt:()I
      76: istore        6
      78: iload         6
      80: iflt          95
      83: iload         6
      85: aload         4
      87: invokevirtual #86                 // Method java/nio/ByteBuffer.capacity:()I
      90: iconst_4
      91: isub
      92: if_icmple     113
      95: aload         4
      97: iconst_4
      98: invokestatic  #92                 // Method org/xnio/Buffers.unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     101: pop
     102: getstatic     #98                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
     105: iload         6
     107: invokeinterface #102,  2          // InterfaceMethod org/xnio/_private/Messages.recvInvalidMsgLength:(I)Ljava/io/IOException;
     112: athrow
     113: aload         4
     115: invokevirtual #105                // Method java/nio/ByteBuffer.remaining:()I
     118: iload         6
     120: if_icmpge     200
     123: iload         5
     125: iconst_m1
     126: if_icmpne     138
     129: aload         4
     131: invokevirtual #77                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     134: pop
     135: goto          145
     138: aload         4
     140: iconst_4
     141: invokestatic  #92                 // Method org/xnio/Buffers.unget:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     144: pop
     145: aload_0
     146: iconst_0
     147: putfield      #28                 // Field ready:Z
     150: iload         5
     152: i2l
     153: lstore        7
     155: iload         5
     157: iconst_m1
     158: if_icmpeq     197
     161: aload         4
     163: invokevirtual #109                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     166: pop
     167: aload         4
     169: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     172: iconst_4
     173: if_icmplt     197
     176: aload         4
     178: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     181: iconst_4
     182: aload         4
     184: iconst_0
     185: invokevirtual #112                // Method java/nio/ByteBuffer.getInt:(I)I
     188: iadd
     189: if_icmplt     197
     192: aload_0
     193: iconst_1
     194: putfield      #28                 // Field ready:Z
     197: lload         7
     199: lreturn
     200: aload_1
     201: iload_2
     202: iload_3
     203: invokestatic  #134                // Method org/xnio/Buffers.hasRemaining:([Ljava/nio/Buffer;II)Z
     206: ifeq          267
     209: iload         6
     211: aload_1
     212: iload_2
     213: iload_3
     214: aload         4
     216: invokestatic  #137                // Method org/xnio/Buffers.copy:(I[Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
     219: i2l
     220: lstore        7
     222: iload         5
     224: iconst_m1
     225: if_icmpeq     264
     228: aload         4
     230: invokevirtual #109                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     233: pop
     234: aload         4
     236: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     239: iconst_4
     240: if_icmplt     264
     243: aload         4
     245: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     248: iconst_4
     249: aload         4
     251: iconst_0
     252: invokevirtual #112                // Method java/nio/ByteBuffer.getInt:(I)I
     255: iadd
     256: if_icmplt     264
     259: aload_0
     260: iconst_1
     261: putfield      #28                 // Field ready:Z
     264: lload         7
     266: lreturn
     267: aload         4
     269: iload         6
     271: invokestatic  #123                // Method org/xnio/Buffers.skip:(Ljava/nio/Buffer;I)Ljava/nio/Buffer;
     274: pop
     275: lconst_0
     276: lstore        7
     278: iload         5
     280: iconst_m1
     281: if_icmpeq     320
     284: aload         4
     286: invokevirtual #109                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     289: pop
     290: aload         4
     292: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     295: iconst_4
     296: if_icmplt     320
     299: aload         4
     301: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     304: iconst_4
     305: aload         4
     307: iconst_0
     308: invokevirtual #112                // Method java/nio/ByteBuffer.getInt:(I)I
     311: iadd
     312: if_icmplt     320
     315: aload_0
     316: iconst_1
     317: putfield      #28                 // Field ready:Z
     320: lload         7
     322: lreturn
     323: astore        9
     325: iload         5
     327: iconst_m1
     328: if_icmpeq     367
     331: aload         4
     333: invokevirtual #109                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     336: pop
     337: aload         4
     339: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     342: iconst_4
     343: if_icmplt     367
     346: aload         4
     348: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
     351: iconst_4
     352: aload         4
     354: iconst_0
     355: invokevirtual #112                // Method java/nio/ByteBuffer.getInt:(I)I
     358: iadd
     359: if_icmplt     367
     362: aload_0
     363: iconst_1
     364: putfield      #28                 // Field ready:Z
     367: aload         9
     369: athrow
    Exception table:
       from    to  target type
          71   155   323   any
         200   222   323   any
         267   278   323   any
         323   325   323   any
}
