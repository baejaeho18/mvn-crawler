Compiled from "AbstractAcceptingSslChannel.java"
abstract class org.xnio.ssl.AbstractAcceptingSslChannel<C extends org.xnio.channels.ConnectedChannel, S extends org.xnio.channels.ConnectedChannel> implements org.xnio.channels.AcceptingChannel<C> {
  private final javax.net.ssl.SSLContext sslContext;

  private final org.xnio.channels.AcceptingChannel<? extends S> tcpServer;

  private volatile org.xnio.SslClientAuthMode clientAuthMode;

  private volatile int useClientMode;

  private volatile int enableSessionCreation;

  private volatile java.lang.String[] cipherSuites;

  private volatile java.lang.String[] protocols;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.xnio.ssl.AbstractAcceptingSslChannel, org.xnio.SslClientAuthMode> clientAuthModeUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.ssl.AbstractAcceptingSslChannel> useClientModeUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.ssl.AbstractAcceptingSslChannel> enableSessionCreationUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.xnio.ssl.AbstractAcceptingSslChannel, java.lang.String[]> cipherSuitesUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.xnio.ssl.AbstractAcceptingSslChannel, java.lang.String[]> protocolsUpdater;

  private final org.xnio.ChannelListener$Setter<org.xnio.channels.AcceptingChannel<C>> closeSetter;

  private final org.xnio.ChannelListener$Setter<org.xnio.channels.AcceptingChannel<C>> acceptSetter;

  protected final boolean startTls;

  protected final org.xnio.Pool<java.nio.ByteBuffer> socketBufferPool;

  protected final org.xnio.Pool<java.nio.ByteBuffer> applicationBufferPool;

  private static final java.util.Set<org.xnio.Option<?>> SUPPORTED_OPTIONS;

  org.xnio.ssl.AbstractAcceptingSslChannel(javax.net.ssl.SSLContext, org.xnio.channels.AcceptingChannel<? extends S>, org.xnio.OptionMap, org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.Pool<java.nio.ByteBuffer>, boolean);
    Code:
       0: aload_0
       1: invokespecial #61                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       9: aload_0
      10: aload_1
      11: putfield      #65                 // Field sslContext:Ljavax/net/ssl/SSLContext;
      14: aload_0
      15: aload         4
      17: putfield      #67                 // Field socketBufferPool:Lorg/xnio/Pool;
      20: aload_0
      21: aload         5
      23: putfield      #69                 // Field applicationBufferPool:Lorg/xnio/Pool;
      26: aload_0
      27: iload         6
      29: putfield      #71                 // Field startTls:Z
      32: aload_0
      33: aload_3
      34: getstatic     #77                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      37: invokevirtual #83                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      40: checkcast     #85                 // class org/xnio/SslClientAuthMode
      43: putfield      #87                 // Field clientAuthMode:Lorg/xnio/SslClientAuthMode;
      46: aload_0
      47: aload_3
      48: getstatic     #90                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      51: iconst_0
      52: invokevirtual #93                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: putfield      #99                 // Field useClientMode:I
      66: aload_0
      67: aload_3
      68: getstatic     #102                // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      71: iconst_1
      72: invokevirtual #93                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      75: ifeq          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: putfield      #104                // Field enableSessionCreation:I
      86: aload_3
      87: getstatic     #107                // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      90: invokevirtual #83                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      93: checkcast     #109                // class org/xnio/Sequence
      96: astore        7
      98: aload_0
      99: aload         7
     101: ifnull        123
     104: aload         7
     106: aload         7
     108: invokevirtual #113                // Method org/xnio/Sequence.size:()I
     111: anewarray     #115                // class java/lang/String
     114: invokevirtual #119                // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     117: checkcast     #120                // class "[Ljava/lang/String;"
     120: goto          124
     123: aconst_null
     124: putfield      #122                // Field cipherSuites:[Ljava/lang/String;
     127: aload_3
     128: getstatic     #125                // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     131: invokevirtual #83                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     134: checkcast     #109                // class org/xnio/Sequence
     137: astore        8
     139: aload_0
     140: aload         8
     142: ifnull        164
     145: aload         8
     147: aload         8
     149: invokevirtual #113                // Method org/xnio/Sequence.size:()I
     152: anewarray     #115                // class java/lang/String
     155: invokevirtual #119                // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     158: checkcast     #120                // class "[Ljava/lang/String;"
     161: goto          165
     164: aconst_null
     165: putfield      #127                // Field protocols:[Ljava/lang/String;
     168: aload_0
     169: aload_2
     170: invokeinterface #131,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     175: aload_0
     176: invokestatic  #137                // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
     179: putfield      #139                // Field closeSetter:Lorg/xnio/ChannelListener$Setter;
     182: aload_0
     183: aload_2
     184: invokeinterface #142,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
     189: aload_0
     190: invokestatic  #137                // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
     193: putfield      #144                // Field acceptSetter:Lorg/xnio/ChannelListener$Setter;
     196: return

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #77                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     26
       7: aload_1
       8: getstatic     #161                // Field clientAuthModeUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      11: aload_0
      12: getstatic     #77                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      15: aload_2
      16: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      19: invokevirtual #171                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn
      26: aload_1
      27: getstatic     #90                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      30: if_acmpne     86
      33: getstatic     #90                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      36: aload_2
      37: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #173                // class java/lang/Boolean
      43: astore_3
      44: aload_3
      45: ifnull        83
      48: aload_1
      49: getstatic     #175                // Field useClientModeUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      52: aload_0
      53: aload_3
      54: invokevirtual #179                // Method java/lang/Boolean.booleanValue:()Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: invokevirtual #184                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: invokestatic  #188                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      79: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      82: areturn
      83: goto          262
      86: aload_1
      87: getstatic     #102                // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      90: if_acmpne     146
      93: getstatic     #102                // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      96: aload_2
      97: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     100: checkcast     #173                // class java/lang/Boolean
     103: astore_3
     104: aload_3
     105: ifnull        143
     108: aload_1
     109: getstatic     #190                // Field enableSessionCreationUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     112: aload_0
     113: aload_3
     114: invokevirtual #179                // Method java/lang/Boolean.booleanValue:()Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: invokevirtual #184                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     128: ifeq          135
     131: iconst_1
     132: goto          136
     135: iconst_0
     136: invokestatic  #188                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     139: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     142: areturn
     143: goto          262
     146: aload_1
     147: getstatic     #107                // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
     150: if_acmpne     198
     153: getstatic     #107                // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
     156: aload_2
     157: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     160: checkcast     #109                // class org/xnio/Sequence
     163: astore_3
     164: aload_1
     165: getstatic     #192                // Field cipherSuitesUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     168: aload_0
     169: aload_3
     170: ifnonnull     177
     173: aconst_null
     174: goto          191
     177: aload_3
     178: aload_3
     179: invokevirtual #113                // Method org/xnio/Sequence.size:()I
     182: anewarray     #115                // class java/lang/String
     185: invokevirtual #119                // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     188: checkcast     #120                // class "[Ljava/lang/String;"
     191: invokevirtual #171                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     194: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     197: areturn
     198: aload_1
     199: getstatic     #125                // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     202: if_acmpne     250
     205: getstatic     #125                // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     208: aload_2
     209: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     212: checkcast     #109                // class org/xnio/Sequence
     215: astore_3
     216: aload_1
     217: getstatic     #194                // Field protocolsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     220: aload_0
     221: aload_3
     222: ifnonnull     229
     225: aconst_null
     226: goto          243
     229: aload_3
     230: aload_3
     231: invokevirtual #113                // Method org/xnio/Sequence.size:()I
     234: anewarray     #115                // class java/lang/String
     237: invokevirtual #119                // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     240: checkcast     #120                // class "[Ljava/lang/String;"
     243: invokevirtual #171                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     246: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     249: areturn
     250: aload_0
     251: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
     254: aload_1
     255: aload_2
     256: invokeinterface #196,  3          // InterfaceMethod org/xnio/channels/AcceptingChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     261: areturn
     262: getstatic     #202                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
     265: ldc           #204                // String value
     267: invokeinterface #208,  2          // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     272: athrow

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #219,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getWorker:()Lorg/xnio/XnioWorker;
       9: areturn

  public C accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #223,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.accept:()Lorg/xnio/channels/ConnectedChannel;
       9: astore_1
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: ldc           #227                // class java/net/InetSocketAddress
      19: invokeinterface #231,  2          // InterfaceMethod org/xnio/channels/ConnectedChannel.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
      24: checkcast     #227                // class java/net/InetSocketAddress
      27: astore_2
      28: aload_0
      29: getfield      #65                 // Field sslContext:Ljavax/net/ssl/SSLContext;
      32: aload_2
      33: invokestatic  #237                // Method org/xnio/ssl/JsseSslUtils.getHostNameNoResolve:(Ljava/net/InetSocketAddress;)Ljava/lang/String;
      36: aload_2
      37: invokevirtual #240                // Method java/net/InetSocketAddress.getPort:()I
      40: invokevirtual #244                // Method javax/net/ssl/SSLContext.createSSLEngine:(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;
      43: astore_3
      44: aload_0
      45: getfield      #99                 // Field useClientMode:I
      48: ifeq          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: istore        4
      58: aload_3
      59: iload         4
      61: invokevirtual #250                // Method javax/net/ssl/SSLEngine.setUseClientMode:(Z)V
      64: iload         4
      66: ifne          153
      69: aload_0
      70: getfield      #87                 // Field clientAuthMode:Lorg/xnio/SslClientAuthMode;
      73: astore        5
      75: aload         5
      77: ifnull        153
      80: getstatic     #254                // Field org/xnio/ssl/AbstractAcceptingSslChannel$1.$SwitchMap$org$xnio$SslClientAuthMode:[I
      83: aload         5
      85: invokevirtual #257                // Method org/xnio/SslClientAuthMode.ordinal:()I
      88: iaload
      89: tableswitch   { // 1 to 3
                     1: 116
                     2: 129
                     3: 137
               default: 145
          }
     116: aload_3
     117: iconst_0
     118: invokevirtual #260                // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     121: aload_3
     122: iconst_0
     123: invokevirtual #263                // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     126: goto          153
     129: aload_3
     130: iconst_1
     131: invokevirtual #263                // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     134: goto          153
     137: aload_3
     138: iconst_1
     139: invokevirtual #260                // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     142: goto          153
     145: new           #265                // class java/lang/IllegalStateException
     148: dup
     149: invokespecial #266                // Method java/lang/IllegalStateException."<init>":()V
     152: athrow
     153: aload_3
     154: aload_0
     155: getfield      #104                // Field enableSessionCreation:I
     158: ifeq          165
     161: iconst_1
     162: goto          166
     165: iconst_0
     166: invokevirtual #269                // Method javax/net/ssl/SSLEngine.setEnableSessionCreation:(Z)V
     169: aload_0
     170: getfield      #122                // Field cipherSuites:[Ljava/lang/String;
     173: astore        5
     175: aload         5
     177: ifnull        283
     180: new           #271                // class java/util/HashSet
     183: dup
     184: aload_3
     185: invokevirtual #275                // Method javax/net/ssl/SSLEngine.getSupportedCipherSuites:()[Ljava/lang/String;
     188: invokestatic  #281                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     191: invokespecial #284                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     194: astore        6
     196: new           #286                // class java/util/ArrayList
     199: dup
     200: invokespecial #287                // Method java/util/ArrayList."<init>":()V
     203: astore        7
     205: aload         5
     207: astore        8
     209: aload         8
     211: arraylength
     212: istore        9
     214: iconst_0
     215: istore        10
     217: iload         10
     219: iload         9
     221: if_icmpge     259
     224: aload         8
     226: iload         10
     228: aaload
     229: astore        11
     231: aload         6
     233: aload         11
     235: invokeinterface #295,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     240: ifeq          253
     243: aload         7
     245: aload         11
     247: invokeinterface #298,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     252: pop
     253: iinc          10, 1
     256: goto          217
     259: aload_3
     260: aload         7
     262: aload         7
     264: invokeinterface #299,  1          // InterfaceMethod java/util/List.size:()I
     269: anewarray     #115                // class java/lang/String
     272: invokeinterface #300,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     277: checkcast     #120                // class "[Ljava/lang/String;"
     280: invokevirtual #304                // Method javax/net/ssl/SSLEngine.setEnabledCipherSuites:([Ljava/lang/String;)V
     283: aload_0
     284: getfield      #127                // Field protocols:[Ljava/lang/String;
     287: astore        6
     289: aload         6
     291: ifnull        397
     294: new           #271                // class java/util/HashSet
     297: dup
     298: aload_3
     299: invokevirtual #307                // Method javax/net/ssl/SSLEngine.getSupportedProtocols:()[Ljava/lang/String;
     302: invokestatic  #281                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     305: invokespecial #284                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     308: astore        7
     310: new           #286                // class java/util/ArrayList
     313: dup
     314: invokespecial #287                // Method java/util/ArrayList."<init>":()V
     317: astore        8
     319: aload         6
     321: astore        9
     323: aload         9
     325: arraylength
     326: istore        10
     328: iconst_0
     329: istore        11
     331: iload         11
     333: iload         10
     335: if_icmpge     373
     338: aload         9
     340: iload         11
     342: aaload
     343: astore        12
     345: aload         7
     347: aload         12
     349: invokeinterface #295,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     354: ifeq          367
     357: aload         8
     359: aload         12
     361: invokeinterface #298,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     366: pop
     367: iinc          11, 1
     370: goto          331
     373: aload_3
     374: aload         8
     376: aload         8
     378: invokeinterface #299,  1          // InterfaceMethod java/util/List.size:()I
     383: anewarray     #115                // class java/lang/String
     386: invokeinterface #300,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     391: checkcast     #120                // class "[Ljava/lang/String;"
     394: invokevirtual #310                // Method javax/net/ssl/SSLEngine.setEnabledProtocols:([Ljava/lang/String;)V
     397: aload_0
     398: aload_1
     399: aload_3
     400: invokevirtual #313                // Method accept:(Lorg/xnio/channels/ConnectedChannel;Ljavax/net/ssl/SSLEngine;)Lorg/xnio/channels/ConnectedChannel;
     403: areturn

  protected abstract C accept(S, javax.net.ssl.SSLEngine);

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<C>> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #139                // Field closeSetter:Lorg/xnio/ChannelListener$Setter;
       4: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #334,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.isOpen:()Z
       9: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #337,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.close:()V
       9: return

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #341                // Field SUPPORTED_OPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #295,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          25
      12: aload_0
      13: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
      16: aload_1
      17: invokeinterface #343,  2          // InterfaceMethod org/xnio/channels/AcceptingChannel.supportsOption:(Lorg/xnio/Option;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #77                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     16
       7: aload_1
       8: aload_0
       9: getfield      #87                 // Field clientAuthMode:Lorg/xnio/SslClientAuthMode;
      12: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn
      16: aload_1
      17: getstatic     #90                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      20: if_acmpne     43
      23: aload_1
      24: aload_0
      25: getfield      #99                 // Field useClientMode:I
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: invokestatic  #188                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      39: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      42: areturn
      43: aload_1
      44: getstatic     #102                // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      47: if_acmpne     70
      50: aload_1
      51: aload_0
      52: getfield      #104                // Field enableSessionCreation:I
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: invokestatic  #188                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      66: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      69: areturn
      70: aload_1
      71: getstatic     #107                // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      74: if_acmpne     99
      77: aload_0
      78: getfield      #122                // Field cipherSuites:[Ljava/lang/String;
      81: astore_2
      82: aload_2
      83: ifnonnull     90
      86: aconst_null
      87: goto          98
      90: aload_1
      91: aload_2
      92: invokestatic  #349                // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
      95: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      98: areturn
      99: aload_1
     100: getstatic     #125                // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     103: if_acmpne     128
     106: aload_0
     107: getfield      #127                // Field protocols:[Ljava/lang/String;
     110: astore_2
     111: aload_2
     112: ifnonnull     119
     115: aconst_null
     116: goto          127
     119: aload_1
     120: aload_2
     121: invokestatic  #349                // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
     124: invokevirtual #165                // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     127: areturn
     128: aload_0
     129: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
     132: aload_1
     133: invokeinterface #351,  2          // InterfaceMethod org/xnio/channels/AcceptingChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
     138: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<C>> getAcceptSetter();
    Code:
       0: aload_0
       1: getfield      #144                // Field acceptSetter:Lorg/xnio/ChannelListener$Setter;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #355,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:()Ljava/net/SocketAddress;
       9: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: invokeinterface #357,  2          // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
      10: areturn

  public void suspendAccepts();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #363,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.suspendAccepts:()V
       9: return

  public void resumeAccepts();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #366,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
       9: return

  public boolean isAcceptResumed();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #369,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.isAcceptResumed:()Z
       9: ireturn

  public void wakeupAccepts();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #372,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.wakeupAccepts:()V
       9: return

  public void awaitAcceptable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #375,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:()V
       9: return

  public void awaitAcceptable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: lload_1
       5: aload_3
       6: invokeinterface #378,  4          // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public org.xnio.XnioExecutor getAcceptThread();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #387,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptThread:()Lorg/xnio/XnioExecutor;
       9: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #391,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       9: areturn

  public org.xnio.channels.CloseableChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #393                // Method accept:()Lorg/xnio/channels/ConnectedChannel;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/ssl/AbstractAcceptingSslChannel
       2: ldc           #85                 // class org/xnio/SslClientAuthMode
       4: ldc_w         #395                // String clientAuthMode
       7: invokestatic  #399                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      10: putstatic     #161                // Field clientAuthModeUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      13: ldc           #2                  // class org/xnio/ssl/AbstractAcceptingSslChannel
      15: ldc_w         #400                // String useClientMode
      18: invokestatic  #403                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      21: putstatic     #175                // Field useClientModeUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      24: ldc           #2                  // class org/xnio/ssl/AbstractAcceptingSslChannel
      26: ldc_w         #404                // String enableSessionCreation
      29: invokestatic  #403                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: putstatic     #190                // Field enableSessionCreationUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      35: ldc           #2                  // class org/xnio/ssl/AbstractAcceptingSslChannel
      37: ldc           #120                // class "[Ljava/lang/String;"
      39: ldc_w         #405                // String cipherSuites
      42: invokestatic  #399                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      45: putstatic     #192                // Field cipherSuitesUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      48: ldc           #2                  // class org/xnio/ssl/AbstractAcceptingSslChannel
      50: ldc           #120                // class "[Ljava/lang/String;"
      52: ldc_w         #406                // String protocols
      55: invokestatic  #399                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      58: putstatic     #194                // Field protocolsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      61: invokestatic  #410                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
      64: getstatic     #77                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      67: invokevirtual #413                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      70: getstatic     #90                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      73: invokevirtual #413                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      76: getstatic     #102                // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      79: invokevirtual #413                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      82: getstatic     #107                // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      85: invokevirtual #413                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      88: getstatic     #125                // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
      91: invokevirtual #413                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      94: invokevirtual #417                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      97: putstatic     #341                // Field SUPPORTED_OPTIONS:Ljava/util/Set;
     100: return
}
