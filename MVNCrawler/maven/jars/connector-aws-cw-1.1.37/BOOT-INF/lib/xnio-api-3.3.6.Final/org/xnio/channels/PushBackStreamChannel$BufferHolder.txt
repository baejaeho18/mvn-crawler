Compiled from "PushBackStreamChannel.java"
class org.xnio.channels.PushBackStreamChannel$BufferHolder implements org.xnio.channels.StreamSourceChannel {
  private final org.xnio.channels.StreamSourceChannel next;

  private final org.xnio.Pooled<java.nio.ByteBuffer> buffer;

  final org.xnio.channels.PushBackStreamChannel this$0;

  org.xnio.channels.PushBackStreamChannel$BufferHolder(org.xnio.channels.StreamSourceChannel, org.xnio.Pooled<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
       5: aload_0
       6: invokespecial #29                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      14: aload_0
      15: aload_3
      16: putfield      #33                 // Field buffer:Lorg/xnio/Pooled;
      19: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
       4: invokeinterface #47,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #49                 // class java/nio/ByteBuffer
      12: astore        8
      14: aload         8
      16: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
      19: istore        9
      21: aload         8
      23: invokevirtual #56                 // Method java/nio/ByteBuffer.remaining:()I
      26: istore        10
      28: iload         10
      30: i2l
      31: lload_3
      32: lcmp
      33: ifle          88
      36: aload         8
      38: iload         9
      40: lload_3
      41: l2i
      42: iadd
      43: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      46: pop
      47: aload         5
      49: aload         8
      51: lload_1
      52: invokevirtual #66                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      55: i2l
      56: lstore        11
      58: aload         8
      60: iload         9
      62: iload         10
      64: iadd
      65: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      68: pop
      69: lload         11
      71: lreturn
      72: astore        13
      74: aload         8
      76: iload         9
      78: iload         10
      80: iadd
      81: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      84: pop
      85: aload         13
      87: athrow
      88: aload         5
      90: aload         8
      92: lload_1
      93: invokevirtual #66                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      96: i2l
      97: lstore        6
      99: lload         6
     101: iload         10
     103: i2l
     104: lcmp
     105: ifne          132
     108: aload_0
     109: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
     112: aload_0
     113: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
     116: invokestatic  #72                 // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
     119: pop
     120: aload_0
     121: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
     124: invokeinterface #75,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     129: goto          135
     132: lload         6
     134: lreturn
     135: lload_1
     136: lload         6
     138: ladd
     139: lstore_1
     140: lload_3
     141: lload         6
     143: lsub
     144: lstore_3
     145: goto          165
     148: astore        9
     150: aload_0
     151: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
     154: aload_0
     155: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
     158: invokestatic  #72                 // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
     161: pop
     162: lconst_0
     163: lstore        6
     165: lload         6
     167: aload_0
     168: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
     171: lload_1
     172: lload_3
     173: aload         5
     175: invokeinterface #77,  6           // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JJLjava/nio/channels/FileChannel;)J
     180: ladd
     181: lreturn
    Exception table:
       from    to  target type
          36    58    72   any
          72    74    72   any
           0    69   148   Class java/lang/IllegalStateException
          72   134   148   Class java/lang/IllegalStateException
         135   145   148   Class java/lang/IllegalStateException

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #94                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
       9: invokeinterface #47,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      14: checkcast     #49                 // class java/nio/ByteBuffer
      17: astore        7
      19: aload         7
      21: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
      24: istore        8
      26: aload         7
      28: invokevirtual #56                 // Method java/nio/ByteBuffer.remaining:()I
      31: istore        9
      33: iload         9
      35: i2l
      36: lload_1
      37: lcmp
      38: ifle          100
      41: aload         7
      43: iload         8
      45: lload_1
      46: l2i
      47: iadd
      48: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      51: pop
      52: aload_3
      53: iconst_0
      54: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      57: pop
      58: aload         4
      60: aload         7
      62: invokeinterface #99,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      67: i2l
      68: lstore        10
      70: aload         7
      72: iload         8
      74: iload         9
      76: iadd
      77: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      80: pop
      81: lload         10
      83: lreturn
      84: astore        12
      86: aload         7
      88: iload         8
      90: iload         9
      92: iadd
      93: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      96: pop
      97: aload         12
      99: athrow
     100: aload         4
     102: aload         7
     104: invokeinterface #99,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     109: i2l
     110: lstore        5
     112: lload         5
     114: iload         9
     116: i2l
     117: lcmp
     118: ifne          145
     121: aload_0
     122: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
     125: aload_0
     126: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
     129: invokestatic  #72                 // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
     132: pop
     133: aload_0
     134: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
     137: invokeinterface #75,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     142: goto          148
     145: lload         5
     147: lreturn
     148: goto          168
     151: astore        8
     153: aload_0
     154: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
     157: aload_0
     158: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
     161: invokestatic  #72                 // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
     164: pop
     165: lconst_0
     166: lstore        5
     168: aload_0
     169: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
     172: lload_1
     173: lload         5
     175: lsub
     176: aload_3
     177: aload         4
     179: invokeinterface #101,  5          // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
     184: lstore        8
     186: lload         8
     188: lconst_0
     189: lcmp
     190: ifle          201
     193: lload         5
     195: lload         8
     197: ladd
     198: goto          215
     201: lload         5
     203: lconst_0
     204: lcmp
     205: ifle          213
     208: lload         5
     210: goto          215
     213: lload         8
     215: lreturn
    Exception table:
       from    to  target type
          41    70    84   any
          84    86    84   any
           5    81   151   Class java/lang/IllegalStateException
          84   147   151   Class java/lang/IllegalStateException

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
       4: invokeinterface #47,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
       9: checkcast     #49                 // class java/nio/ByteBuffer
      12: astore        6
      14: aload_1
      15: iload_2
      16: iload_3
      17: aload         6
      19: invokestatic  #112                // Method org/xnio/Buffers.copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      22: i2l
      23: lstore        4
      25: aload         6
      27: invokevirtual #116                // Method java/nio/ByteBuffer.hasRemaining:()Z
      30: ifeq          36
      33: lload         4
      35: lreturn
      36: aload_0
      37: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      40: aload_0
      41: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      44: invokestatic  #72                 // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
      47: astore        7
      49: aload_0
      50: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
      53: invokeinterface #75,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      58: lload         4
      60: lconst_0
      61: lcmp
      62: ifle          80
      65: aload         7
      67: aload_0
      68: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      71: invokestatic  #120                // Method org/xnio/channels/PushBackStreamChannel.access$300:(Lorg/xnio/channels/PushBackStreamChannel;)Lorg/xnio/channels/StreamSourceChannel;
      74: if_acmpne     80
      77: lload         4
      79: lreturn
      80: goto          100
      83: astore        6
      85: aload_0
      86: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      89: aload_0
      90: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      93: invokestatic  #72                 // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
      96: pop
      97: lconst_0
      98: lstore        4
     100: aload_0
     101: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
     104: aload_1
     105: iload_2
     106: iload_3
     107: invokeinterface #124,  4          // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:([Ljava/nio/ByteBuffer;II)J
     112: lstore        6
     114: lload         6
     116: lconst_0
     117: lcmp
     118: ifle          129
     121: lload         6
     123: lload         4
     125: ladd
     126: goto          143
     129: lload         4
     131: lconst_0
     132: lcmp
     133: ifle          141
     136: lload         4
     138: goto          143
     141: lload         6
     143: lreturn
    Exception table:
       from    to  target type
           0    35    83   Class java/lang/IllegalStateException
          36    79    83   Class java/lang/IllegalStateException

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #129                // Method read:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #116                // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
      13: invokeinterface #47,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      18: checkcast     #49                 // class java/nio/ByteBuffer
      21: astore_3
      22: aload_1
      23: aload_3
      24: invokestatic  #132                // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      27: istore_2
      28: aload_3
      29: invokevirtual #116                // Method java/nio/ByteBuffer.hasRemaining:()Z
      32: ifeq          37
      35: iload_2
      36: ireturn
      37: aload_0
      38: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      41: aload_0
      42: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      45: invokestatic  #72                 // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
      48: astore        4
      50: aload_0
      51: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
      54: invokeinterface #75,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      59: iload_2
      60: ifle          77
      63: aload         4
      65: aload_0
      66: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      69: invokestatic  #120                // Method org/xnio/channels/PushBackStreamChannel.access$300:(Lorg/xnio/channels/PushBackStreamChannel;)Lorg/xnio/channels/StreamSourceChannel;
      72: if_acmpne     77
      75: iload_2
      76: ireturn
      77: goto          95
      80: astore_3
      81: aload_0
      82: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
      85: aload_0
      86: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      89: invokestatic  #72                 // Method org/xnio/channels/PushBackStreamChannel.access$202:(Lorg/xnio/channels/PushBackStreamChannel;Lorg/xnio/channels/StreamSourceChannel;)Lorg/xnio/channels/StreamSourceChannel;
      92: pop
      93: iconst_0
      94: istore_2
      95: aload_0
      96: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      99: aload_1
     100: invokeinterface #134,  2          // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     105: istore_3
     106: iload_3
     107: ifle          116
     110: iload_3
     111: iload_2
     112: iadd
     113: goto          125
     116: iload_2
     117: ifle          124
     120: iload_2
     121: goto          125
     124: iload_3
     125: ireturn
    Exception table:
       from    to  target type
           9    36    80   Class java/lang/IllegalStateException
          37    76    80   Class java/lang/IllegalStateException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
       4: invokeinterface #75,  1           // InterfaceMethod org/xnio/Pooled.free:()V
       9: aload_0
      10: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      13: invokeinterface #138,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.close:()V
      18: return

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #26                 // Field this$0:Lorg/xnio/channels/PushBackStreamChannel;
       4: invokestatic  #120                // Method org/xnio/channels/PushBackStreamChannel.access$300:(Lorg/xnio/channels/PushBackStreamChannel;)Lorg/xnio/channels/StreamSourceChannel;
       7: invokeinterface #142,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.wakeupReads:()V
      12: return

  public void shutdownReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Lorg/xnio/Pooled;
       4: invokeinterface #75,  1           // InterfaceMethod org/xnio/Pooled.free:()V
       9: aload_0
      10: getfield      #31                 // Field next:Lorg/xnio/channels/StreamSourceChannel;
      13: invokeinterface #145,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
      18: return

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: return

  public boolean isOpen();
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.StreamSourceChannel> getReadSetter();
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.StreamSourceChannel> getCloseSetter();
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void suspendReads();
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isReadResumed();
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void wakeupReads();
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.XnioExecutor getReadThread();
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.XnioWorker getWorker();
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: new           #153                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow
}
