Compiled from "Options.java"
public final class org.xnio.Options {
  public static final org.xnio.Option<java.lang.Boolean> ALLOW_BLOCKING;

  public static final org.xnio.Option<java.lang.Boolean> MULTICAST;

  public static final org.xnio.Option<java.lang.Boolean> BROADCAST;

  public static final org.xnio.Option<java.lang.Boolean> CLOSE_ABORT;

  public static final org.xnio.Option<java.lang.Integer> RECEIVE_BUFFER;

  public static final org.xnio.Option<java.lang.Boolean> REUSE_ADDRESSES;

  public static final org.xnio.Option<java.lang.Integer> SEND_BUFFER;

  public static final org.xnio.Option<java.lang.Boolean> TCP_NODELAY;

  public static final org.xnio.Option<java.lang.Integer> MULTICAST_TTL;

  public static final org.xnio.Option<java.lang.Integer> IP_TRAFFIC_CLASS;

  public static final org.xnio.Option<java.lang.Boolean> TCP_OOB_INLINE;

  public static final org.xnio.Option<java.lang.Boolean> KEEP_ALIVE;

  public static final org.xnio.Option<java.lang.Integer> BACKLOG;

  public static final org.xnio.Option<java.lang.Integer> READ_TIMEOUT;

  public static final org.xnio.Option<java.lang.Integer> WRITE_TIMEOUT;

  public static final org.xnio.Option<java.lang.Integer> MAX_INBOUND_MESSAGE_SIZE;

  public static final org.xnio.Option<java.lang.Integer> MAX_OUTBOUND_MESSAGE_SIZE;

  public static final org.xnio.Option<java.lang.Boolean> SSL_ENABLED;

  public static final org.xnio.Option<org.xnio.SslClientAuthMode> SSL_CLIENT_AUTH_MODE;

  public static final org.xnio.Option<org.xnio.Sequence<java.lang.String>> SSL_ENABLED_CIPHER_SUITES;

  public static final org.xnio.Option<org.xnio.Sequence<java.lang.String>> SSL_SUPPORTED_CIPHER_SUITES;

  public static final org.xnio.Option<org.xnio.Sequence<java.lang.String>> SSL_ENABLED_PROTOCOLS;

  public static final org.xnio.Option<org.xnio.Sequence<java.lang.String>> SSL_SUPPORTED_PROTOCOLS;

  public static final org.xnio.Option<java.lang.String> SSL_PROVIDER;

  public static final org.xnio.Option<java.lang.String> SSL_PROTOCOL;

  public static final org.xnio.Option<java.lang.Boolean> SSL_ENABLE_SESSION_CREATION;

  public static final org.xnio.Option<java.lang.Boolean> SSL_USE_CLIENT_MODE;

  public static final org.xnio.Option<java.lang.Integer> SSL_CLIENT_SESSION_CACHE_SIZE;

  public static final org.xnio.Option<java.lang.Integer> SSL_CLIENT_SESSION_TIMEOUT;

  public static final org.xnio.Option<java.lang.Integer> SSL_SERVER_SESSION_CACHE_SIZE;

  public static final org.xnio.Option<java.lang.Integer> SSL_SERVER_SESSION_TIMEOUT;

  public static final org.xnio.Option<org.xnio.Sequence<java.lang.Class<? extends javax.net.ssl.KeyManager>>> SSL_JSSE_KEY_MANAGER_CLASSES;

  public static final org.xnio.Option<org.xnio.Sequence<java.lang.Class<? extends javax.net.ssl.TrustManager>>> SSL_JSSE_TRUST_MANAGER_CLASSES;

  public static final org.xnio.Option<org.xnio.OptionMap> SSL_RNG_OPTIONS;

  public static final org.xnio.Option<java.lang.Integer> SSL_PACKET_BUFFER_SIZE;

  public static final org.xnio.Option<java.lang.Integer> SSL_APPLICATION_BUFFER_SIZE;

  public static final org.xnio.Option<java.lang.Integer> SSL_PACKET_BUFFER_REGION_SIZE;

  public static final org.xnio.Option<java.lang.Integer> SSL_APPLICATION_BUFFER_REGION_SIZE;

  public static final org.xnio.Option<java.lang.Boolean> SSL_STARTTLS;

  public static final org.xnio.Option<java.lang.String> SSL_PEER_HOST_NAME;

  public static final org.xnio.Option<java.lang.Integer> SSL_PEER_PORT;

  public static final org.xnio.Option<java.lang.Boolean> SSL_NON_BLOCKING_KEY_MANAGER;

  public static final org.xnio.Option<java.lang.Boolean> SSL_NON_BLOCKING_TRUST_MANAGER;

  public static final org.xnio.Option<java.lang.Boolean> USE_DIRECT_BUFFERS;

  public static final org.xnio.Option<java.lang.Boolean> SECURE;

  public static final org.xnio.Option<java.lang.Boolean> SASL_POLICY_FORWARD_SECRECY;

  public static final org.xnio.Option<java.lang.Boolean> SASL_POLICY_NOACTIVE;

  public static final org.xnio.Option<java.lang.Boolean> SASL_POLICY_NOANONYMOUS;

  public static final org.xnio.Option<java.lang.Boolean> SASL_POLICY_NODICTIONARY;

  public static final org.xnio.Option<java.lang.Boolean> SASL_POLICY_NOPLAINTEXT;

  public static final org.xnio.Option<java.lang.Boolean> SASL_POLICY_PASS_CREDENTIALS;

  public static final org.xnio.Option<org.xnio.Sequence<org.xnio.sasl.SaslQop>> SASL_QOP;

  public static final org.xnio.Option<org.xnio.sasl.SaslStrength> SASL_STRENGTH;

  public static final org.xnio.Option<java.lang.Boolean> SASL_SERVER_AUTH;

  public static final org.xnio.Option<java.lang.Boolean> SASL_REUSE;

  public static final org.xnio.Option<org.xnio.Sequence<java.lang.String>> SASL_MECHANISMS;

  public static final org.xnio.Option<org.xnio.Sequence<java.lang.String>> SASL_DISALLOWED_MECHANISMS;

  public static final org.xnio.Option<org.xnio.Sequence<org.xnio.Property>> SASL_PROPERTIES;

  public static final org.xnio.Option<org.xnio.FileAccess> FILE_ACCESS;

  public static final org.xnio.Option<java.lang.Boolean> FILE_APPEND;

  public static final org.xnio.Option<java.lang.Boolean> FILE_CREATE;

  public static final org.xnio.Option<java.lang.Long> STACK_SIZE;

  public static final org.xnio.Option<java.lang.String> WORKER_NAME;

  public static final org.xnio.Option<java.lang.Integer> THREAD_PRIORITY;

  public static final org.xnio.Option<java.lang.Boolean> THREAD_DAEMON;

  public static final org.xnio.Option<java.lang.Integer> WORKER_IO_THREADS;

  public static final org.xnio.Option<java.lang.Integer> WORKER_READ_THREADS;

  public static final org.xnio.Option<java.lang.Integer> WORKER_WRITE_THREADS;

  public static final org.xnio.Option<java.lang.Boolean> WORKER_ESTABLISH_WRITING;

  public static final org.xnio.Option<java.lang.Integer> WORKER_ACCEPT_THREADS;

  public static final org.xnio.Option<java.lang.Integer> WORKER_TASK_CORE_THREADS;

  public static final org.xnio.Option<java.lang.Integer> WORKER_TASK_MAX_THREADS;

  public static final org.xnio.Option<java.lang.Integer> WORKER_TASK_KEEPALIVE;

  public static final org.xnio.Option<java.lang.Integer> WORKER_TASK_LIMIT;

  public static final org.xnio.Option<java.lang.Boolean> CORK;

  public static final org.xnio.Option<java.lang.Integer> CONNECTION_HIGH_WATER;

  public static final org.xnio.Option<java.lang.Integer> CONNECTION_LOW_WATER;

  public static final org.xnio.Option<java.lang.Integer> COMPRESSION_LEVEL;

  public static final org.xnio.Option<org.xnio.CompressionType> COMPRESSION_TYPE;

  public static final org.xnio.Option<java.lang.Integer> BALANCING_TOKENS;

  public static final org.xnio.Option<java.lang.Integer> BALANCING_CONNECTIONS;

  public static final org.xnio.Option<java.lang.Integer> WATCHER_POLL_INTERVAL;

  private org.xnio.Options();
    Code:
       0: aload_0
       1: invokespecial #107                // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/Options
       2: ldc           #111                // String ALLOW_BLOCKING
       4: ldc           #113                // class java/lang/Boolean
       6: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
       9: putstatic     #121                // Field ALLOW_BLOCKING:Lorg/xnio/Option;
      12: ldc           #2                  // class org/xnio/Options
      14: ldc           #122                // String MULTICAST
      16: ldc           #113                // class java/lang/Boolean
      18: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      21: putstatic     #124                // Field MULTICAST:Lorg/xnio/Option;
      24: ldc           #2                  // class org/xnio/Options
      26: ldc           #125                // String BROADCAST
      28: ldc           #113                // class java/lang/Boolean
      30: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      33: putstatic     #127                // Field BROADCAST:Lorg/xnio/Option;
      36: ldc           #2                  // class org/xnio/Options
      38: ldc           #128                // String CLOSE_ABORT
      40: ldc           #113                // class java/lang/Boolean
      42: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      45: putstatic     #130                // Field CLOSE_ABORT:Lorg/xnio/Option;
      48: ldc           #2                  // class org/xnio/Options
      50: ldc           #131                // String RECEIVE_BUFFER
      52: ldc           #133                // class java/lang/Integer
      54: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      57: putstatic     #135                // Field RECEIVE_BUFFER:Lorg/xnio/Option;
      60: ldc           #2                  // class org/xnio/Options
      62: ldc           #136                // String REUSE_ADDRESSES
      64: ldc           #113                // class java/lang/Boolean
      66: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      69: putstatic     #138                // Field REUSE_ADDRESSES:Lorg/xnio/Option;
      72: ldc           #2                  // class org/xnio/Options
      74: ldc           #139                // String SEND_BUFFER
      76: ldc           #133                // class java/lang/Integer
      78: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      81: putstatic     #141                // Field SEND_BUFFER:Lorg/xnio/Option;
      84: ldc           #2                  // class org/xnio/Options
      86: ldc           #142                // String TCP_NODELAY
      88: ldc           #113                // class java/lang/Boolean
      90: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      93: putstatic     #144                // Field TCP_NODELAY:Lorg/xnio/Option;
      96: ldc           #2                  // class org/xnio/Options
      98: ldc           #145                // String MULTICAST_TTL
     100: ldc           #133                // class java/lang/Integer
     102: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     105: putstatic     #147                // Field MULTICAST_TTL:Lorg/xnio/Option;
     108: ldc           #2                  // class org/xnio/Options
     110: ldc           #148                // String IP_TRAFFIC_CLASS
     112: ldc           #133                // class java/lang/Integer
     114: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     117: putstatic     #150                // Field IP_TRAFFIC_CLASS:Lorg/xnio/Option;
     120: ldc           #2                  // class org/xnio/Options
     122: ldc           #151                // String TCP_OOB_INLINE
     124: ldc           #113                // class java/lang/Boolean
     126: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     129: putstatic     #153                // Field TCP_OOB_INLINE:Lorg/xnio/Option;
     132: ldc           #2                  // class org/xnio/Options
     134: ldc           #154                // String KEEP_ALIVE
     136: ldc           #113                // class java/lang/Boolean
     138: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     141: putstatic     #156                // Field KEEP_ALIVE:Lorg/xnio/Option;
     144: ldc           #2                  // class org/xnio/Options
     146: ldc           #157                // String BACKLOG
     148: ldc           #133                // class java/lang/Integer
     150: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     153: putstatic     #159                // Field BACKLOG:Lorg/xnio/Option;
     156: ldc           #2                  // class org/xnio/Options
     158: ldc           #160                // String READ_TIMEOUT
     160: ldc           #133                // class java/lang/Integer
     162: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     165: putstatic     #162                // Field READ_TIMEOUT:Lorg/xnio/Option;
     168: ldc           #2                  // class org/xnio/Options
     170: ldc           #163                // String WRITE_TIMEOUT
     172: ldc           #133                // class java/lang/Integer
     174: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     177: putstatic     #165                // Field WRITE_TIMEOUT:Lorg/xnio/Option;
     180: ldc           #2                  // class org/xnio/Options
     182: ldc           #166                // String MAX_INBOUND_MESSAGE_SIZE
     184: ldc           #133                // class java/lang/Integer
     186: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     189: putstatic     #168                // Field MAX_INBOUND_MESSAGE_SIZE:Lorg/xnio/Option;
     192: ldc           #2                  // class org/xnio/Options
     194: ldc           #169                // String MAX_OUTBOUND_MESSAGE_SIZE
     196: ldc           #133                // class java/lang/Integer
     198: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     201: putstatic     #171                // Field MAX_OUTBOUND_MESSAGE_SIZE:Lorg/xnio/Option;
     204: ldc           #2                  // class org/xnio/Options
     206: ldc           #172                // String SSL_ENABLED
     208: ldc           #113                // class java/lang/Boolean
     210: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     213: putstatic     #174                // Field SSL_ENABLED:Lorg/xnio/Option;
     216: ldc           #2                  // class org/xnio/Options
     218: ldc           #175                // String SSL_CLIENT_AUTH_MODE
     220: ldc           #177                // class org/xnio/SslClientAuthMode
     222: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     225: putstatic     #179                // Field SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
     228: ldc           #2                  // class org/xnio/Options
     230: ldc           #180                // String SSL_ENABLED_CIPHER_SUITES
     232: ldc           #182                // class java/lang/String
     234: invokestatic  #185                // Method org/xnio/Option.sequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     237: putstatic     #187                // Field SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
     240: ldc           #2                  // class org/xnio/Options
     242: ldc           #188                // String SSL_SUPPORTED_CIPHER_SUITES
     244: ldc           #182                // class java/lang/String
     246: invokestatic  #185                // Method org/xnio/Option.sequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     249: putstatic     #190                // Field SSL_SUPPORTED_CIPHER_SUITES:Lorg/xnio/Option;
     252: ldc           #2                  // class org/xnio/Options
     254: ldc           #191                // String SSL_ENABLED_PROTOCOLS
     256: ldc           #182                // class java/lang/String
     258: invokestatic  #185                // Method org/xnio/Option.sequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     261: putstatic     #193                // Field SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     264: ldc           #2                  // class org/xnio/Options
     266: ldc           #194                // String SSL_SUPPORTED_PROTOCOLS
     268: ldc           #182                // class java/lang/String
     270: invokestatic  #185                // Method org/xnio/Option.sequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     273: putstatic     #196                // Field SSL_SUPPORTED_PROTOCOLS:Lorg/xnio/Option;
     276: ldc           #2                  // class org/xnio/Options
     278: ldc           #197                // String SSL_PROVIDER
     280: ldc           #182                // class java/lang/String
     282: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     285: putstatic     #199                // Field SSL_PROVIDER:Lorg/xnio/Option;
     288: ldc           #2                  // class org/xnio/Options
     290: ldc           #200                // String SSL_PROTOCOL
     292: ldc           #182                // class java/lang/String
     294: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     297: putstatic     #202                // Field SSL_PROTOCOL:Lorg/xnio/Option;
     300: ldc           #2                  // class org/xnio/Options
     302: ldc           #203                // String SSL_ENABLE_SESSION_CREATION
     304: ldc           #113                // class java/lang/Boolean
     306: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     309: putstatic     #205                // Field SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
     312: ldc           #2                  // class org/xnio/Options
     314: ldc           #206                // String SSL_USE_CLIENT_MODE
     316: ldc           #113                // class java/lang/Boolean
     318: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     321: putstatic     #208                // Field SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
     324: ldc           #2                  // class org/xnio/Options
     326: ldc           #209                // String SSL_CLIENT_SESSION_CACHE_SIZE
     328: ldc           #133                // class java/lang/Integer
     330: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     333: putstatic     #211                // Field SSL_CLIENT_SESSION_CACHE_SIZE:Lorg/xnio/Option;
     336: ldc           #2                  // class org/xnio/Options
     338: ldc           #212                // String SSL_CLIENT_SESSION_TIMEOUT
     340: ldc           #133                // class java/lang/Integer
     342: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     345: putstatic     #214                // Field SSL_CLIENT_SESSION_TIMEOUT:Lorg/xnio/Option;
     348: ldc           #2                  // class org/xnio/Options
     350: ldc           #215                // String SSL_SERVER_SESSION_CACHE_SIZE
     352: ldc           #133                // class java/lang/Integer
     354: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     357: putstatic     #217                // Field SSL_SERVER_SESSION_CACHE_SIZE:Lorg/xnio/Option;
     360: ldc           #2                  // class org/xnio/Options
     362: ldc           #218                // String SSL_SERVER_SESSION_TIMEOUT
     364: ldc           #133                // class java/lang/Integer
     366: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     369: putstatic     #220                // Field SSL_SERVER_SESSION_TIMEOUT:Lorg/xnio/Option;
     372: ldc           #2                  // class org/xnio/Options
     374: ldc           #221                // String SSL_JSSE_KEY_MANAGER_CLASSES
     376: ldc           #223                // class javax/net/ssl/KeyManager
     378: invokestatic  #226                // Method org/xnio/Option.typeSequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     381: putstatic     #228                // Field SSL_JSSE_KEY_MANAGER_CLASSES:Lorg/xnio/Option;
     384: ldc           #2                  // class org/xnio/Options
     386: ldc           #229                // String SSL_JSSE_TRUST_MANAGER_CLASSES
     388: ldc           #231                // class javax/net/ssl/TrustManager
     390: invokestatic  #226                // Method org/xnio/Option.typeSequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     393: putstatic     #233                // Field SSL_JSSE_TRUST_MANAGER_CLASSES:Lorg/xnio/Option;
     396: ldc           #2                  // class org/xnio/Options
     398: ldc           #234                // String SSL_RNG_OPTIONS
     400: ldc           #236                // class org/xnio/OptionMap
     402: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     405: putstatic     #238                // Field SSL_RNG_OPTIONS:Lorg/xnio/Option;
     408: ldc           #2                  // class org/xnio/Options
     410: ldc           #239                // String SSL_PACKET_BUFFER_SIZE
     412: ldc           #133                // class java/lang/Integer
     414: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     417: putstatic     #241                // Field SSL_PACKET_BUFFER_SIZE:Lorg/xnio/Option;
     420: ldc           #2                  // class org/xnio/Options
     422: ldc           #242                // String SSL_APPLICATION_BUFFER_SIZE
     424: ldc           #133                // class java/lang/Integer
     426: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     429: putstatic     #244                // Field SSL_APPLICATION_BUFFER_SIZE:Lorg/xnio/Option;
     432: ldc           #2                  // class org/xnio/Options
     434: ldc           #245                // String SSL_PACKET_BUFFER_REGION_SIZE
     436: ldc           #133                // class java/lang/Integer
     438: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     441: putstatic     #247                // Field SSL_PACKET_BUFFER_REGION_SIZE:Lorg/xnio/Option;
     444: ldc           #2                  // class org/xnio/Options
     446: ldc           #248                // String SSL_APPLICATION_BUFFER_REGION_SIZE
     448: ldc           #133                // class java/lang/Integer
     450: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     453: putstatic     #250                // Field SSL_APPLICATION_BUFFER_REGION_SIZE:Lorg/xnio/Option;
     456: ldc           #2                  // class org/xnio/Options
     458: ldc           #251                // String SSL_STARTTLS
     460: ldc           #113                // class java/lang/Boolean
     462: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     465: putstatic     #253                // Field SSL_STARTTLS:Lorg/xnio/Option;
     468: ldc           #2                  // class org/xnio/Options
     470: ldc           #254                // String SSL_PEER_HOST_NAME
     472: ldc           #182                // class java/lang/String
     474: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     477: putstatic     #256                // Field SSL_PEER_HOST_NAME:Lorg/xnio/Option;
     480: ldc           #2                  // class org/xnio/Options
     482: ldc_w         #257                // String SSL_PEER_PORT
     485: ldc           #133                // class java/lang/Integer
     487: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     490: putstatic     #259                // Field SSL_PEER_PORT:Lorg/xnio/Option;
     493: ldc           #2                  // class org/xnio/Options
     495: ldc_w         #260                // String SSL_NON_BLOCKING_KEY_MANAGER
     498: ldc           #113                // class java/lang/Boolean
     500: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     503: putstatic     #262                // Field SSL_NON_BLOCKING_KEY_MANAGER:Lorg/xnio/Option;
     506: ldc           #2                  // class org/xnio/Options
     508: ldc_w         #263                // String SSL_NON_BLOCKING_TRUST_MANAGER
     511: ldc           #113                // class java/lang/Boolean
     513: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     516: putstatic     #265                // Field SSL_NON_BLOCKING_TRUST_MANAGER:Lorg/xnio/Option;
     519: ldc           #2                  // class org/xnio/Options
     521: ldc_w         #266                // String USE_DIRECT_BUFFERS
     524: ldc           #113                // class java/lang/Boolean
     526: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     529: putstatic     #268                // Field USE_DIRECT_BUFFERS:Lorg/xnio/Option;
     532: ldc           #2                  // class org/xnio/Options
     534: ldc_w         #269                // String SECURE
     537: ldc           #113                // class java/lang/Boolean
     539: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     542: putstatic     #271                // Field SECURE:Lorg/xnio/Option;
     545: ldc           #2                  // class org/xnio/Options
     547: ldc_w         #272                // String SASL_POLICY_FORWARD_SECRECY
     550: ldc           #113                // class java/lang/Boolean
     552: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     555: putstatic     #274                // Field SASL_POLICY_FORWARD_SECRECY:Lorg/xnio/Option;
     558: ldc           #2                  // class org/xnio/Options
     560: ldc_w         #275                // String SASL_POLICY_NOACTIVE
     563: ldc           #113                // class java/lang/Boolean
     565: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     568: putstatic     #277                // Field SASL_POLICY_NOACTIVE:Lorg/xnio/Option;
     571: ldc           #2                  // class org/xnio/Options
     573: ldc_w         #278                // String SASL_POLICY_NOANONYMOUS
     576: ldc           #113                // class java/lang/Boolean
     578: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     581: putstatic     #280                // Field SASL_POLICY_NOANONYMOUS:Lorg/xnio/Option;
     584: ldc           #2                  // class org/xnio/Options
     586: ldc_w         #281                // String SASL_POLICY_NODICTIONARY
     589: ldc           #113                // class java/lang/Boolean
     591: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     594: putstatic     #283                // Field SASL_POLICY_NODICTIONARY:Lorg/xnio/Option;
     597: ldc           #2                  // class org/xnio/Options
     599: ldc_w         #284                // String SASL_POLICY_NOPLAINTEXT
     602: ldc           #113                // class java/lang/Boolean
     604: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     607: putstatic     #286                // Field SASL_POLICY_NOPLAINTEXT:Lorg/xnio/Option;
     610: ldc           #2                  // class org/xnio/Options
     612: ldc_w         #287                // String SASL_POLICY_PASS_CREDENTIALS
     615: ldc           #113                // class java/lang/Boolean
     617: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     620: putstatic     #289                // Field SASL_POLICY_PASS_CREDENTIALS:Lorg/xnio/Option;
     623: ldc           #2                  // class org/xnio/Options
     625: ldc_w         #290                // String SASL_QOP
     628: ldc_w         #292                // class org/xnio/sasl/SaslQop
     631: invokestatic  #185                // Method org/xnio/Option.sequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     634: putstatic     #294                // Field SASL_QOP:Lorg/xnio/Option;
     637: ldc           #2                  // class org/xnio/Options
     639: ldc_w         #295                // String SASL_STRENGTH
     642: ldc_w         #297                // class org/xnio/sasl/SaslStrength
     645: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     648: putstatic     #299                // Field SASL_STRENGTH:Lorg/xnio/Option;
     651: ldc           #2                  // class org/xnio/Options
     653: ldc_w         #300                // String SASL_SERVER_AUTH
     656: ldc           #113                // class java/lang/Boolean
     658: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     661: putstatic     #302                // Field SASL_SERVER_AUTH:Lorg/xnio/Option;
     664: ldc           #2                  // class org/xnio/Options
     666: ldc_w         #303                // String SASL_REUSE
     669: ldc           #113                // class java/lang/Boolean
     671: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     674: putstatic     #305                // Field SASL_REUSE:Lorg/xnio/Option;
     677: ldc           #2                  // class org/xnio/Options
     679: ldc_w         #306                // String SASL_MECHANISMS
     682: ldc           #182                // class java/lang/String
     684: invokestatic  #185                // Method org/xnio/Option.sequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     687: putstatic     #308                // Field SASL_MECHANISMS:Lorg/xnio/Option;
     690: ldc           #2                  // class org/xnio/Options
     692: ldc_w         #309                // String SASL_DISALLOWED_MECHANISMS
     695: ldc           #182                // class java/lang/String
     697: invokestatic  #185                // Method org/xnio/Option.sequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     700: putstatic     #311                // Field SASL_DISALLOWED_MECHANISMS:Lorg/xnio/Option;
     703: ldc           #2                  // class org/xnio/Options
     705: ldc_w         #312                // String SASL_PROPERTIES
     708: ldc_w         #314                // class org/xnio/Property
     711: invokestatic  #185                // Method org/xnio/Option.sequence:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     714: putstatic     #316                // Field SASL_PROPERTIES:Lorg/xnio/Option;
     717: ldc           #2                  // class org/xnio/Options
     719: ldc_w         #317                // String FILE_ACCESS
     722: ldc_w         #319                // class org/xnio/FileAccess
     725: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     728: putstatic     #321                // Field FILE_ACCESS:Lorg/xnio/Option;
     731: ldc           #2                  // class org/xnio/Options
     733: ldc_w         #322                // String FILE_APPEND
     736: ldc           #113                // class java/lang/Boolean
     738: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     741: putstatic     #324                // Field FILE_APPEND:Lorg/xnio/Option;
     744: ldc           #2                  // class org/xnio/Options
     746: ldc_w         #325                // String FILE_CREATE
     749: ldc           #113                // class java/lang/Boolean
     751: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     754: putstatic     #327                // Field FILE_CREATE:Lorg/xnio/Option;
     757: ldc           #2                  // class org/xnio/Options
     759: ldc_w         #328                // String STACK_SIZE
     762: ldc_w         #330                // class java/lang/Long
     765: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     768: putstatic     #332                // Field STACK_SIZE:Lorg/xnio/Option;
     771: ldc           #2                  // class org/xnio/Options
     773: ldc_w         #333                // String WORKER_NAME
     776: ldc           #182                // class java/lang/String
     778: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     781: putstatic     #335                // Field WORKER_NAME:Lorg/xnio/Option;
     784: ldc           #2                  // class org/xnio/Options
     786: ldc_w         #336                // String THREAD_PRIORITY
     789: ldc           #133                // class java/lang/Integer
     791: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     794: putstatic     #338                // Field THREAD_PRIORITY:Lorg/xnio/Option;
     797: ldc           #2                  // class org/xnio/Options
     799: ldc_w         #339                // String THREAD_DAEMON
     802: ldc           #113                // class java/lang/Boolean
     804: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     807: putstatic     #341                // Field THREAD_DAEMON:Lorg/xnio/Option;
     810: ldc           #2                  // class org/xnio/Options
     812: ldc_w         #342                // String WORKER_IO_THREADS
     815: ldc           #133                // class java/lang/Integer
     817: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     820: putstatic     #344                // Field WORKER_IO_THREADS:Lorg/xnio/Option;
     823: ldc           #2                  // class org/xnio/Options
     825: ldc_w         #345                // String WORKER_READ_THREADS
     828: ldc           #133                // class java/lang/Integer
     830: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     833: putstatic     #347                // Field WORKER_READ_THREADS:Lorg/xnio/Option;
     836: ldc           #2                  // class org/xnio/Options
     838: ldc_w         #348                // String WORKER_WRITE_THREADS
     841: ldc           #133                // class java/lang/Integer
     843: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     846: putstatic     #350                // Field WORKER_WRITE_THREADS:Lorg/xnio/Option;
     849: ldc           #2                  // class org/xnio/Options
     851: ldc_w         #351                // String WORKER_ESTABLISH_WRITING
     854: ldc           #113                // class java/lang/Boolean
     856: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     859: putstatic     #353                // Field WORKER_ESTABLISH_WRITING:Lorg/xnio/Option;
     862: ldc           #2                  // class org/xnio/Options
     864: ldc_w         #354                // String WORKER_ACCEPT_THREADS
     867: ldc           #133                // class java/lang/Integer
     869: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     872: putstatic     #356                // Field WORKER_ACCEPT_THREADS:Lorg/xnio/Option;
     875: ldc           #2                  // class org/xnio/Options
     877: ldc_w         #357                // String WORKER_TASK_CORE_THREADS
     880: ldc           #133                // class java/lang/Integer
     882: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     885: putstatic     #359                // Field WORKER_TASK_CORE_THREADS:Lorg/xnio/Option;
     888: ldc           #2                  // class org/xnio/Options
     890: ldc_w         #360                // String WORKER_TASK_MAX_THREADS
     893: ldc           #133                // class java/lang/Integer
     895: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     898: putstatic     #362                // Field WORKER_TASK_MAX_THREADS:Lorg/xnio/Option;
     901: ldc           #2                  // class org/xnio/Options
     903: ldc_w         #363                // String WORKER_TASK_KEEPALIVE
     906: ldc           #133                // class java/lang/Integer
     908: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     911: putstatic     #365                // Field WORKER_TASK_KEEPALIVE:Lorg/xnio/Option;
     914: ldc           #2                  // class org/xnio/Options
     916: ldc_w         #366                // String WORKER_TASK_LIMIT
     919: ldc           #133                // class java/lang/Integer
     921: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     924: putstatic     #368                // Field WORKER_TASK_LIMIT:Lorg/xnio/Option;
     927: ldc           #2                  // class org/xnio/Options
     929: ldc_w         #369                // String CORK
     932: ldc           #113                // class java/lang/Boolean
     934: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     937: putstatic     #371                // Field CORK:Lorg/xnio/Option;
     940: ldc           #2                  // class org/xnio/Options
     942: ldc_w         #372                // String CONNECTION_HIGH_WATER
     945: ldc           #133                // class java/lang/Integer
     947: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     950: putstatic     #374                // Field CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     953: ldc           #2                  // class org/xnio/Options
     955: ldc_w         #375                // String CONNECTION_LOW_WATER
     958: ldc           #133                // class java/lang/Integer
     960: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     963: putstatic     #377                // Field CONNECTION_LOW_WATER:Lorg/xnio/Option;
     966: ldc           #2                  // class org/xnio/Options
     968: ldc_w         #378                // String COMPRESSION_LEVEL
     971: ldc           #133                // class java/lang/Integer
     973: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     976: putstatic     #380                // Field COMPRESSION_LEVEL:Lorg/xnio/Option;
     979: ldc           #2                  // class org/xnio/Options
     981: ldc_w         #381                // String COMPRESSION_TYPE
     984: ldc_w         #383                // class org/xnio/CompressionType
     987: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     990: putstatic     #385                // Field COMPRESSION_TYPE:Lorg/xnio/Option;
     993: ldc           #2                  // class org/xnio/Options
     995: ldc_w         #386                // String BALANCING_TOKENS
     998: ldc           #133                // class java/lang/Integer
    1000: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
    1003: putstatic     #388                // Field BALANCING_TOKENS:Lorg/xnio/Option;
    1006: ldc           #2                  // class org/xnio/Options
    1008: ldc_w         #389                // String BALANCING_CONNECTIONS
    1011: ldc           #133                // class java/lang/Integer
    1013: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
    1016: putstatic     #391                // Field BALANCING_CONNECTIONS:Lorg/xnio/Option;
    1019: ldc           #2                  // class org/xnio/Options
    1021: ldc_w         #392                // String WATCHER_POLL_INTERVAL
    1024: ldc           #133                // class java/lang/Integer
    1026: invokestatic  #119                // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
    1029: putstatic     #394                // Field WATCHER_POLL_INTERVAL:Lorg/xnio/Option;
    1032: return
}
