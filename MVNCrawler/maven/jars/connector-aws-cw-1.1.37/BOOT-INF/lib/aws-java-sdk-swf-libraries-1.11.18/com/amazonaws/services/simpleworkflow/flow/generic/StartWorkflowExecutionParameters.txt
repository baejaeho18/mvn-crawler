Compiled from "StartWorkflowExecutionParameters.java"
public class com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters {
  private java.lang.String workflowId;

  private com.amazonaws.services.simpleworkflow.model.WorkflowType workflowType;

  private java.lang.String taskList;

  private java.lang.String input;

  private long executionStartToCloseTimeoutSeconds;

  private long taskStartToCloseTimeoutSeconds;

  private java.util.List<java.lang.String> tagList;

  private int taskPriority;

  private java.lang.String lambdaRole;

  private com.amazonaws.services.simpleworkflow.model.ChildPolicy childPolicy;

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #28                 // long -2l
       8: putfield      #30                 // Field executionStartToCloseTimeoutSeconds:J
      11: aload_0
      12: ldc2_w        #28                 // long -2l
      15: putfield      #32                 // Field taskStartToCloseTimeoutSeconds:J
      18: return

  public java.lang.String getWorkflowId();
    Code:
       0: aload_0
       1: getfield      #41                 // Field workflowId:Ljava/lang/String;
       4: areturn

  public void setWorkflowId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field workflowId:Ljava/lang/String;
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withWorkflowId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field workflowId:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.amazonaws.services.simpleworkflow.model.WorkflowType getWorkflowType();
    Code:
       0: aload_0
       1: getfield      #49                 // Field workflowType:Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
       4: areturn

  public void setWorkflowType(com.amazonaws.services.simpleworkflow.model.WorkflowType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field workflowType:Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withWorkflowType(com.amazonaws.services.simpleworkflow.model.WorkflowType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field workflowType:Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
       5: aload_0
       6: areturn

  public java.lang.String getTaskList();
    Code:
       0: aload_0
       1: getfield      #56                 // Field taskList:Ljava/lang/String;
       4: areturn

  public void setTaskList(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field taskList:Ljava/lang/String;
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withTaskList(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field taskList:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getInput();
    Code:
       0: aload_0
       1: getfield      #61                 // Field input:Ljava/lang/String;
       4: areturn

  public void setInput(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field input:Ljava/lang/String;
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withInput(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field input:Ljava/lang/String;
       5: aload_0
       6: areturn

  public long getExecutionStartToCloseTimeout();
    Code:
       0: aload_0
       1: getfield      #30                 // Field executionStartToCloseTimeoutSeconds:J
       4: lreturn

  public void setExecutionStartToCloseTimeoutSeconds(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #30                 // Field executionStartToCloseTimeoutSeconds:J
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withExecutionStartToCloseTimeoutSeconds(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #30                 // Field executionStartToCloseTimeoutSeconds:J
       5: aload_0
       6: areturn

  public long getTaskStartToCloseTimeoutSeconds();
    Code:
       0: aload_0
       1: getfield      #32                 // Field taskStartToCloseTimeoutSeconds:J
       4: lreturn

  public void setTaskStartToCloseTimeoutSeconds(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #32                 // Field taskStartToCloseTimeoutSeconds:J
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withTaskStartToCloseTimeoutSeconds(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #32                 // Field taskStartToCloseTimeoutSeconds:J
       5: aload_0
       6: areturn

  public com.amazonaws.services.simpleworkflow.model.ChildPolicy getChildPolicy();
    Code:
       0: aload_0
       1: getfield      #76                 // Field childPolicy:Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;
       4: areturn

  public void setChildPolicy(com.amazonaws.services.simpleworkflow.model.ChildPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field childPolicy:Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withChildPolicy(com.amazonaws.services.simpleworkflow.model.ChildPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field childPolicy:Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getTagList();
    Code:
       0: aload_0
       1: getfield      #85                 // Field tagList:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #87                 // class java/util/ArrayList
      11: dup
      12: invokespecial #89                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #85                 // Field tagList:Ljava/util/List;
      18: aload_0
      19: getfield      #85                 // Field tagList:Ljava/util/List;
      22: areturn

  public void setTagList(java.util.Collection<java.lang.String>);
    Code:
       0: new           #87                 // class java/util/ArrayList
       3: dup
       4: invokespecial #89                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnull        20
      12: aload_2
      13: aload_1
      14: invokeinterface #94,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_0
      21: aload_2
      22: putfield      #85                 // Field tagList:Ljava/util/List;
      25: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withTagList(java.lang.String...);
    Code:
       0: aload_1
       1: dup
       2: astore        5
       4: arraylength
       5: istore        4
       7: iconst_0
       8: istore_3
       9: goto          31
      12: aload         5
      14: iload_3
      15: aaload
      16: astore_2
      17: aload_0
      18: invokevirtual #106                // Method getTagList:()Ljava/util/List;
      21: aload_2
      22: invokeinterface #108,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: iinc          3, 1
      31: iload_3
      32: iload         4
      34: if_icmplt     12
      37: aload_0
      38: areturn

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withTagList(java.util.Collection<java.lang.String>);
    Code:
       0: new           #87                 // class java/util/ArrayList
       3: dup
       4: invokespecial #89                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnull        20
      12: aload_2
      13: aload_1
      14: invokeinterface #94,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_0
      21: aload_2
      22: putfield      #85                 // Field tagList:Ljava/util/List;
      25: aload_0
      26: areturn

  public int getTaskPriority();
    Code:
       0: aload_0
       1: getfield      #119                // Field taskPriority:I
       4: ireturn

  public void setTaskPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #119                // Field taskPriority:I
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withTaskPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #119                // Field taskPriority:I
       5: aload_0
       6: areturn

  public java.lang.String getLambdaRole();
    Code:
       0: aload_0
       1: getfield      #126                // Field lambdaRole:Ljava/lang/String;
       4: areturn

  public void setLambdaRole(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #126                // Field lambdaRole:Ljava/lang/String;
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters withLambdaRole(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #126                // Field lambdaRole:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters createStartWorkflowExecutionParametersFromOptions(com.amazonaws.services.simpleworkflow.flow.StartWorkflowOptions, com.amazonaws.services.simpleworkflow.flow.StartWorkflowOptions);
    Code:
       0: aload_0
       1: invokevirtual #132                // Method clone:()Lcom/amazonaws/services/simpleworkflow/flow/generic/StartWorkflowExecutionParameters;
       4: astore_3
       5: aload_1
       6: ifnull        153
       9: aload_1
      10: invokevirtual #136                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getExecutionStartToCloseTimeoutSeconds:()Ljava/lang/Long;
      13: astore        4
      15: aload         4
      17: ifnull        29
      20: aload_3
      21: aload         4
      23: invokevirtual #142                // Method java/lang/Long.longValue:()J
      26: invokevirtual #147                // Method setExecutionStartToCloseTimeoutSeconds:(J)V
      29: aload_1
      30: invokevirtual #149                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getTaskStartToCloseTimeoutSeconds:()Ljava/lang/Long;
      33: astore        5
      35: aload         5
      37: ifnull        49
      40: aload_3
      41: aload         5
      43: invokevirtual #142                // Method java/lang/Long.longValue:()J
      46: invokevirtual #151                // Method setTaskStartToCloseTimeoutSeconds:(J)V
      49: aload_1
      50: invokevirtual #153                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getTagList:()Ljava/util/List;
      53: astore        6
      55: aload         6
      57: ifnull        66
      60: aload_3
      61: aload         6
      63: invokevirtual #154                // Method setTagList:(Ljava/util/Collection;)V
      66: aload_1
      67: invokevirtual #156                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getTaskList:()Ljava/lang/String;
      70: astore        7
      72: aload         7
      74: ifnull        91
      77: aload         7
      79: invokevirtual #158                // Method java/lang/String.isEmpty:()Z
      82: ifne          91
      85: aload_3
      86: aload         7
      88: invokevirtual #164                // Method setTaskList:(Ljava/lang/String;)V
      91: aload_1
      92: invokevirtual #166                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getTaskPriority:()Ljava/lang/Integer;
      95: astore        8
      97: aload         8
      99: ifnull        111
     102: aload_3
     103: aload         8
     105: invokevirtual #169                // Method java/lang/Integer.intValue:()I
     108: invokevirtual #174                // Method setTaskPriority:(I)V
     111: aload_1
     112: invokevirtual #176                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getChildPolicy:()Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;
     115: astore        9
     117: aload         9
     119: ifnull        128
     122: aload_3
     123: aload         9
     125: invokevirtual #178                // Method setChildPolicy:(Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;)V
     128: aload_1
     129: invokevirtual #180                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getLambdaRole:()Ljava/lang/String;
     132: astore        10
     134: aload         10
     136: ifnull        153
     139: aload         10
     141: invokevirtual #158                // Method java/lang/String.isEmpty:()Z
     144: ifne          153
     147: aload_3
     148: aload         10
     150: invokevirtual #182                // Method setLambdaRole:(Ljava/lang/String;)V
     153: aload_2
     154: ifnull        301
     157: aload_2
     158: invokevirtual #136                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getExecutionStartToCloseTimeoutSeconds:()Ljava/lang/Long;
     161: astore        4
     163: aload         4
     165: ifnull        177
     168: aload_3
     169: aload         4
     171: invokevirtual #142                // Method java/lang/Long.longValue:()J
     174: invokevirtual #147                // Method setExecutionStartToCloseTimeoutSeconds:(J)V
     177: aload_2
     178: invokevirtual #149                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getTaskStartToCloseTimeoutSeconds:()Ljava/lang/Long;
     181: astore        5
     183: aload         5
     185: ifnull        197
     188: aload_3
     189: aload         5
     191: invokevirtual #142                // Method java/lang/Long.longValue:()J
     194: invokevirtual #151                // Method setTaskStartToCloseTimeoutSeconds:(J)V
     197: aload_2
     198: invokevirtual #153                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getTagList:()Ljava/util/List;
     201: astore        6
     203: aload         6
     205: ifnull        214
     208: aload_3
     209: aload         6
     211: invokevirtual #154                // Method setTagList:(Ljava/util/Collection;)V
     214: aload_2
     215: invokevirtual #156                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getTaskList:()Ljava/lang/String;
     218: astore        7
     220: aload         7
     222: ifnull        239
     225: aload         7
     227: invokevirtual #158                // Method java/lang/String.isEmpty:()Z
     230: ifne          239
     233: aload_3
     234: aload         7
     236: invokevirtual #164                // Method setTaskList:(Ljava/lang/String;)V
     239: aload_2
     240: invokevirtual #166                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getTaskPriority:()Ljava/lang/Integer;
     243: astore        8
     245: aload         8
     247: ifnull        259
     250: aload_3
     251: aload         8
     253: invokevirtual #169                // Method java/lang/Integer.intValue:()I
     256: invokevirtual #174                // Method setTaskPriority:(I)V
     259: aload_2
     260: invokevirtual #176                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getChildPolicy:()Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;
     263: astore        9
     265: aload         9
     267: ifnull        276
     270: aload_3
     271: aload         9
     273: invokevirtual #178                // Method setChildPolicy:(Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;)V
     276: aload_2
     277: invokevirtual #180                // Method com/amazonaws/services/simpleworkflow/flow/StartWorkflowOptions.getLambdaRole:()Ljava/lang/String;
     280: astore        10
     282: aload         10
     284: ifnull        301
     287: aload         10
     289: invokevirtual #158                // Method java/lang/String.isEmpty:()Z
     292: ifne          301
     295: aload_3
     296: aload         10
     298: invokevirtual #182                // Method setLambdaRole:(Ljava/lang/String;)V
     301: aload_3
     302: areturn

  public java.lang.String toString();
    Code:
       0: new           #197                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #199                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #200                // String {
      11: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: new           #197                // class java/lang/StringBuilder
      19: dup
      20: ldc           #206                // String WorkflowId:
      22: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      25: aload_0
      26: getfield      #41                 // Field workflowId:Ljava/lang/String;
      29: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #210                // String ,
      34: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload_1
      45: new           #197                // class java/lang/StringBuilder
      48: dup
      49: ldc           #214                // String WorkflowType:
      51: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      54: aload_0
      55: getfield      #49                 // Field workflowType:Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      58: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: ldc           #210                // String ,
      63: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: aload_1
      74: new           #197                // class java/lang/StringBuilder
      77: dup
      78: ldc           #219                // String TaskList:
      80: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      83: aload_0
      84: getfield      #56                 // Field taskList:Ljava/lang/String;
      87: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #210                // String ,
      92: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: pop
     102: aload_1
     103: new           #197                // class java/lang/StringBuilder
     106: dup
     107: ldc           #221                // String Input:
     109: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     112: aload_0
     113: getfield      #61                 // Field input:Ljava/lang/String;
     116: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #210                // String ,
     121: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: pop
     131: aload_1
     132: new           #197                // class java/lang/StringBuilder
     135: dup
     136: ldc           #223                // String StartToCloseTimeout:
     138: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     141: aload_0
     142: getfield      #30                 // Field executionStartToCloseTimeoutSeconds:J
     145: invokevirtual #225                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     148: ldc           #210                // String ,
     150: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: pop
     160: aload_1
     161: new           #197                // class java/lang/StringBuilder
     164: dup
     165: ldc           #228                // String TagList:
     167: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     170: aload_0
     171: getfield      #85                 // Field tagList:Ljava/util/List;
     174: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     177: ldc           #210                // String ,
     179: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: pop
     189: aload_1
     190: new           #197                // class java/lang/StringBuilder
     193: dup
     194: ldc           #230                // String TaskPriority:
     196: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     199: aload_0
     200: getfield      #119                // Field taskPriority:I
     203: invokevirtual #232                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     206: ldc           #210                // String ,
     208: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     214: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: pop
     218: aload_1
     219: new           #197                // class java/lang/StringBuilder
     222: dup
     223: ldc           #235                // String ChildPolicy:
     225: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     228: aload_0
     229: getfield      #76                 // Field childPolicy:Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;
     232: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     235: ldc           #210                // String ,
     237: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     243: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: pop
     247: aload_1
     248: new           #197                // class java/lang/StringBuilder
     251: dup
     252: ldc           #237                // String LambdaRole:
     254: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     257: aload_0
     258: getfield      #126                // Field lambdaRole:Ljava/lang/String;
     261: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: ldc           #210                // String ,
     266: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     272: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     275: pop
     276: aload_1
     277: ldc           #239                // String }
     279: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     282: pop
     283: aload_1
     284: invokevirtual #212                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     287: areturn

  public com.amazonaws.services.simpleworkflow.flow.generic.StartWorkflowExecutionParameters clone();
    Code:
       0: new           #1                  // class com/amazonaws/services/simpleworkflow/flow/generic/StartWorkflowExecutionParameters
       3: dup
       4: invokespecial #243                // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #61                 // Field input:Ljava/lang/String;
      13: invokevirtual #244                // Method setInput:(Ljava/lang/String;)V
      16: aload_1
      17: aload_0
      18: getfield      #30                 // Field executionStartToCloseTimeoutSeconds:J
      21: invokevirtual #147                // Method setExecutionStartToCloseTimeoutSeconds:(J)V
      24: aload_1
      25: aload_0
      26: getfield      #32                 // Field taskStartToCloseTimeoutSeconds:J
      29: invokevirtual #151                // Method setTaskStartToCloseTimeoutSeconds:(J)V
      32: aload_1
      33: aload_0
      34: getfield      #85                 // Field tagList:Ljava/util/List;
      37: invokevirtual #154                // Method setTagList:(Ljava/util/Collection;)V
      40: aload_1
      41: aload_0
      42: getfield      #56                 // Field taskList:Ljava/lang/String;
      45: invokevirtual #164                // Method setTaskList:(Ljava/lang/String;)V
      48: aload_1
      49: aload_0
      50: getfield      #41                 // Field workflowId:Ljava/lang/String;
      53: invokevirtual #246                // Method setWorkflowId:(Ljava/lang/String;)V
      56: aload_1
      57: aload_0
      58: getfield      #49                 // Field workflowType:Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      61: invokevirtual #248                // Method setWorkflowType:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;)V
      64: aload_1
      65: aload_0
      66: getfield      #119                // Field taskPriority:I
      69: invokevirtual #174                // Method setTaskPriority:(I)V
      72: aload_1
      73: aload_0
      74: getfield      #76                 // Field childPolicy:Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;
      77: invokevirtual #178                // Method setChildPolicy:(Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;)V
      80: aload_1
      81: aload_0
      82: getfield      #126                // Field lambdaRole:Ljava/lang/String;
      85: invokevirtual #182                // Method setLambdaRole:(Ljava/lang/String;)V
      88: aload_1
      89: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #132                // Method clone:()Lcom/amazonaws/services/simpleworkflow/flow/generic/StartWorkflowExecutionParameters;
       4: areturn
}
