Compiled from "POJOWorkflowDefinitionFactoryFactory.java"
public class com.amazonaws.services.simpleworkflow.flow.pojo.POJOWorkflowDefinitionFactoryFactory extends com.amazonaws.services.simpleworkflow.flow.generic.WorkflowDefinitionFactoryFactory {
  private com.amazonaws.services.simpleworkflow.flow.DataConverter converter;

  private java.util.List<com.amazonaws.services.simpleworkflow.model.WorkflowType> workflowTypesToRegister;

  private java.util.Map<com.amazonaws.services.simpleworkflow.model.WorkflowType, com.amazonaws.services.simpleworkflow.flow.generic.WorkflowDefinitionFactory> factories;

  private final java.util.Collection<java.lang.Class<?>> workflowImplementationTypes;

  static final boolean $assertionsDisabled;

  static {};
    Code:
       0: ldc           #1                  // class com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory
       2: invokevirtual #22                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #28                 // Field $assertionsDisabled:Z
      16: return

  public com.amazonaws.services.simpleworkflow.flow.pojo.POJOWorkflowDefinitionFactoryFactory();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method com/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory."<init>":()V
       4: aload_0
       5: new           #36                 // class com/amazonaws/services/simpleworkflow/flow/JsonDataConverter
       8: dup
       9: invokespecial #38                 // Method com/amazonaws/services/simpleworkflow/flow/JsonDataConverter."<init>":()V
      12: putfield      #39                 // Field converter:Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;
      15: aload_0
      16: new           #41                 // class java/util/ArrayList
      19: dup
      20: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #44                 // Field workflowTypesToRegister:Ljava/util/List;
      26: aload_0
      27: new           #46                 // class java/util/HashMap
      30: dup
      31: invokespecial #48                 // Method java/util/HashMap."<init>":()V
      34: putfield      #49                 // Field factories:Ljava/util/Map;
      37: aload_0
      38: new           #41                 // class java/util/ArrayList
      41: dup
      42: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #51                 // Field workflowImplementationTypes:Ljava/util/Collection;
      48: return

  public com.amazonaws.services.simpleworkflow.flow.DataConverter getDataConverter();
    Code:
       0: aload_0
       1: getfield      #39                 // Field converter:Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;
       4: areturn

  public void setDataConverter(com.amazonaws.services.simpleworkflow.flow.DataConverter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field converter:Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;
       5: return

  public com.amazonaws.services.simpleworkflow.flow.generic.WorkflowDefinitionFactory getWorkflowDefinitionFactory(com.amazonaws.services.simpleworkflow.model.WorkflowType);
    Code:
       0: aload_0
       1: getfield      #49                 // Field factories:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #62,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #68                 // class com/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactory
      13: areturn

  public java.lang.Iterable<com.amazonaws.services.simpleworkflow.model.WorkflowType> getWorkflowTypesToRegister();
    Code:
       0: aload_0
       1: getfield      #44                 // Field workflowTypesToRegister:Ljava/util/List;
       4: areturn

  public void addWorkflowImplementationType(java.lang.Class<?>) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #83                 // Method addWorkflowImplementationType:(Ljava/lang/Class;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;)V
       6: return

  public void addWorkflowImplementationType(java.lang.Class<?>, com.amazonaws.services.simpleworkflow.flow.DataConverter) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #91                 // Method addWorkflowImplementationType:(Ljava/lang/Class;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;[Ljava/lang/Object;)V
       7: return

  public void addWorkflowImplementationType(java.lang.Class<?>, com.amazonaws.services.simpleworkflow.flow.DataConverter, java.lang.Object[]) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_1
       1: invokevirtual #96                 // Method java/lang/Class.isInterface:()Z
       4: ifeq          34
       7: new           #99                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #101                // class java/lang/StringBuilder
      14: dup
      15: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
      18: aload_1
      19: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc           #108                // String  has to be a instantiatable class
      24: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: new           #120                // class java/util/HashSet
      37: dup
      38: invokespecial #122                // Method java/util/HashSet."<init>":()V
      41: astore        4
      43: aload_0
      44: aload_1
      45: aload         4
      47: invokespecial #123                // Method getImplementedInterfacesAnnotatedWithWorkflow:(Ljava/lang/Class;Ljava/util/Set;)V
      50: aload         4
      52: invokeinterface #127,  1          // InterfaceMethod java/util/Set.size:()I
      57: ifne          84
      60: new           #99                 // class java/lang/IllegalArgumentException
      63: dup
      64: new           #101                // class java/lang/StringBuilder
      67: dup
      68: ldc           #133                // String Workflow definition does not implement any @Workflow interface.
      70: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      73: aload_1
      74: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload         4
      86: invokeinterface #136,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      91: astore        6
      93: goto          117
      96: aload         6
      98: invokeinterface #140,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #23                 // class java/lang/Class
     106: astore        5
     108: aload_0
     109: aload         5
     111: aload_1
     112: aload_2
     113: aload_3
     114: invokespecial #146                // Method addWorkflowType:(Ljava/lang/Class;Ljava/lang/Class;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;[Ljava/lang/Object;)V
     117: aload         6
     119: invokeinterface #150,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifne          96
     127: return

  public void setWorkflowImplementationTypes(java.util.Collection<java.lang.Class<?>>) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_1
       1: invokeinterface #165,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: goto          25
      10: aload_3
      11: invokeinterface #140,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      16: checkcast     #23                 // class java/lang/Class
      19: astore_2
      20: aload_0
      21: aload_2
      22: invokevirtual #168                // Method addWorkflowImplementationType:(Ljava/lang/Class;)V
      25: aload_3
      26: invokeinterface #150,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifne          10
      34: return

  public java.util.Collection<java.lang.Class<?>> getWorkflowImplementationTypes();
    Code:
       0: aload_0
       1: getfield      #51                 // Field workflowImplementationTypes:Ljava/util/Collection;
       4: areturn

  private void addWorkflowType(java.lang.Class<?>, java.lang.Class<?>, com.amazonaws.services.simpleworkflow.flow.DataConverter, java.lang.Object[]) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_1
       1: ldc           #175                // class com/amazonaws/services/simpleworkflow/flow/annotations/Workflow
       3: invokevirtual #177                // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #175                // class com/amazonaws/services/simpleworkflow/flow/annotations/Workflow
       9: astore        5
      11: aload_1
      12: invokevirtual #181                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      15: astore        6
      17: aconst_null
      18: astore        7
      20: aconst_null
      21: astore        8
      23: aconst_null
      24: astore        9
      26: aconst_null
      27: astore        10
      29: new           #46                 // class java/util/HashMap
      32: dup
      33: invokespecial #48                 // Method java/util/HashMap."<init>":()V
      36: astore        11
      38: aload_1
      39: invokevirtual #184                // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
      42: dup
      43: astore        15
      45: arraylength
      46: istore        14
      48: iconst_0
      49: istore        13
      51: goto          620
      54: aload         15
      56: iload         13
      58: aaload
      59: astore        12
      61: aload         12
      63: invokevirtual #188                // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      66: ldc           #175                // class com/amazonaws/services/simpleworkflow/flow/annotations/Workflow
      68: invokevirtual #177                // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      71: ifnonnull     77
      74: goto          617
      77: aload         12
      79: ldc           #194                // class com/amazonaws/services/simpleworkflow/flow/annotations/Execute
      81: invokevirtual #196                // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      84: checkcast     #194                // class com/amazonaws/services/simpleworkflow/flow/annotations/Execute
      87: astore        16
      89: aload         12
      91: ldc           #197                // class com/amazonaws/services/simpleworkflow/flow/annotations/Signal
      93: invokevirtual #196                // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      96: checkcast     #197                // class com/amazonaws/services/simpleworkflow/flow/annotations/Signal
      99: astore        17
     101: aload         12
     103: ldc           #199                // class com/amazonaws/services/simpleworkflow/flow/annotations/GetState
     105: invokevirtual #196                // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     108: checkcast     #199                // class com/amazonaws/services/simpleworkflow/flow/annotations/GetState
     111: astore        18
     113: aload_0
     114: aload         12
     116: iconst_3
     117: anewarray     #201                // class java/lang/Object
     120: dup
     121: iconst_0
     122: aload         16
     124: aastore
     125: dup
     126: iconst_1
     127: aload         17
     129: aastore
     130: dup
     131: iconst_2
     132: aload         18
     134: aastore
     135: invokespecial #203                // Method checkAnnotationUniqueness:(Ljava/lang/reflect/Method;[Ljava/lang/Object;)V
     138: aload         16
     140: ifnull        410
     143: aload         7
     145: ifnull        192
     148: new           #99                 // class java/lang/IllegalArgumentException
     151: dup
     152: new           #101                // class java/lang/StringBuilder
     155: dup
     156: ldc           #207                // String Interface annotated with @Workflow is allowed to have only one method annotated with @Execute. Found
     158: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     161: aload         7
     163: invokevirtual #209                // Method com/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair.getMethod:()Ljava/lang/reflect/Method;
     166: invokestatic  #215                // Method getMethodFullName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
     169: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: ldc           #219                // String  and
     174: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: aload         12
     179: invokestatic  #215                // Method getMethodFullName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
     182: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     188: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     191: athrow
     192: aload         12
     194: invokevirtual #221                // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
     197: getstatic     #224                // Field java/lang/Void.TYPE:Ljava/lang/Class;
     200: invokevirtual #229                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     203: ifne          247
     206: ldc           #233                // class com/amazonaws/services/simpleworkflow/flow/core/Promise
     208: aload         12
     210: invokevirtual #221                // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
     213: invokevirtual #235                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     216: ifne          247
     219: new           #99                 // class java/lang/IllegalArgumentException
     222: dup
     223: new           #101                // class java/lang/StringBuilder
     226: dup
     227: ldc           #239                // String Workflow implementation method annotated with @Execute can return only Promise or void:
     229: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     232: aload         12
     234: invokestatic  #215                // Method getMethodFullName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
     237: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     243: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     246: athrow
     247: aload         12
     249: invokevirtual #188                // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
     252: aload_1
     253: invokevirtual #229                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     256: ifne          299
     259: new           #99                 // class java/lang/IllegalArgumentException
     262: dup
     263: new           #101                // class java/lang/StringBuilder
     266: dup
     267: ldc           #241                // String Interface
     269: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     272: aload_1
     273: invokevirtual #243                // Method java/lang/Class.getName:()Ljava/lang/String;
     276: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: ldc           #246                // String  cannot inherit workflow implementation method annotated with @Execute:
     281: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     284: aload         12
     286: invokestatic  #215                // Method getMethodFullName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
     289: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     295: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     298: athrow
     299: aload_0
     300: aload         5
     302: invokeinterface #248,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Workflow.dataConverter:()Ljava/lang/Class;
     307: aload_3
     308: invokespecial #251                // Method createConverter:(Ljava/lang/Class;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;)Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;
     311: astore        19
     313: new           #210                // class com/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair
     316: dup
     317: aload         12
     319: aload         19
     321: invokespecial #255                // Method com/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair."<init>":(Ljava/lang/reflect/Method;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;)V
     324: astore        7
     326: aload_0
     327: aload         6
     329: aload         12
     331: aload         16
     333: invokevirtual #258                // Method getWorkflowType:(Ljava/lang/String;Ljava/lang/reflect/Method;Lcom/amazonaws/services/simpleworkflow/flow/annotations/Execute;)Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
     336: astore        9
     338: aload_1
     339: ldc_w         #262                // class com/amazonaws/services/simpleworkflow/flow/annotations/WorkflowRegistrationOptions
     342: invokevirtual #177                // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     345: checkcast     #262                // class com/amazonaws/services/simpleworkflow/flow/annotations/WorkflowRegistrationOptions
     348: astore        20
     350: aload_1
     351: ldc_w         #264                // class com/amazonaws/services/simpleworkflow/flow/annotations/SkipTypeRegistration
     354: invokevirtual #177                // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     357: checkcast     #264                // class com/amazonaws/services/simpleworkflow/flow/annotations/SkipTypeRegistration
     360: astore        21
     362: aload         21
     364: ifnonnull     394
     367: aload         20
     369: ifnonnull     383
     372: new           #99                 // class java/lang/IllegalArgumentException
     375: dup
     376: ldc_w         #266                // String @WorkflowRegistrationOptions is required for the interface that contains method annotated with @Execute
     379: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     382: athrow
     383: aload_0
     384: aload         20
     386: invokevirtual #268                // Method createRegistrationOptions:(Lcom/amazonaws/services/simpleworkflow/flow/annotations/WorkflowRegistrationOptions;)Lcom/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions;
     389: astore        10
     391: goto          410
     394: aload         20
     396: ifnull        410
     399: new           #99                 // class java/lang/IllegalArgumentException
     402: dup
     403: ldc_w         #272                // String @WorkflowRegistrationOptions is not allowed for the interface annotated with @SkipTypeRegistration.
     406: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     409: athrow
     410: aload         17
     412: ifnull        479
     415: aload         17
     417: invokeinterface #274,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Signal.name:()Ljava/lang/String;
     422: astore        19
     424: aload         19
     426: ifnull        437
     429: aload         19
     431: invokevirtual #277                // Method java/lang/String.isEmpty:()Z
     434: ifeq          444
     437: aload         12
     439: invokevirtual #282                // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     442: astore        19
     444: aload_0
     445: aload         5
     447: invokeinterface #248,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Workflow.dataConverter:()Ljava/lang/Class;
     452: aload_3
     453: invokespecial #251                // Method createConverter:(Ljava/lang/Class;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;)Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;
     456: astore        20
     458: aload         11
     460: aload         19
     462: new           #210                // class com/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair
     465: dup
     466: aload         12
     468: aload         20
     470: invokespecial #255                // Method com/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair."<init>":(Ljava/lang/reflect/Method;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;)V
     473: invokeinterface #283,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     478: pop
     479: aload         18
     481: ifnull        617
     484: aload         8
     486: ifnull        534
     489: new           #99                 // class java/lang/IllegalArgumentException
     492: dup
     493: new           #101                // class java/lang/StringBuilder
     496: dup
     497: ldc_w         #287                // String Interface annotated with @Workflow is allowed to have only one method annotated with @GetState. Found
     500: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     503: aload         8
     505: invokevirtual #209                // Method com/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair.getMethod:()Ljava/lang/reflect/Method;
     508: invokestatic  #215                // Method getMethodFullName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
     511: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     514: ldc           #219                // String  and
     516: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     519: aload         12
     521: invokestatic  #215                // Method getMethodFullName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
     524: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     527: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     530: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     533: athrow
     534: aload         12
     536: invokevirtual #221                // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
     539: getstatic     #224                // Field java/lang/Void.TYPE:Ljava/lang/Class;
     542: invokevirtual #229                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     545: ifne          561
     548: ldc           #233                // class com/amazonaws/services/simpleworkflow/flow/core/Promise
     550: aload         12
     552: invokevirtual #221                // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
     555: invokevirtual #235                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     558: ifeq          590
     561: new           #99                 // class java/lang/IllegalArgumentException
     564: dup
     565: new           #101                // class java/lang/StringBuilder
     568: dup
     569: ldc_w         #289                // String Workflow method annotated with @GetState cannot have void or Promise return type:
     572: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     575: aload         12
     577: invokestatic  #215                // Method getMethodFullName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
     580: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     583: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     586: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     589: athrow
     590: aload_0
     591: aload         5
     593: invokeinterface #248,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Workflow.dataConverter:()Ljava/lang/Class;
     598: aload_3
     599: invokespecial #251                // Method createConverter:(Ljava/lang/Class;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;)Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;
     602: astore        19
     604: new           #210                // class com/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair
     607: dup
     608: aload         12
     610: aload         19
     612: invokespecial #255                // Method com/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair."<init>":(Ljava/lang/reflect/Method;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;)V
     615: astore        8
     617: iinc          13, 1
     620: iload         13
     622: iload         14
     624: if_icmplt     54
     627: aload         7
     629: ifnonnull     657
     632: new           #99                 // class java/lang/IllegalArgumentException
     635: dup
     636: new           #101                // class java/lang/StringBuilder
     639: dup
     640: ldc_w         #291                // String Workflow definition does not implement any method annotated with @Execute.
     643: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     646: aload_2
     647: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     650: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     653: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     656: athrow
     657: aload_0
     658: aload_2
     659: aload_1
     660: aload         9
     662: invokevirtual #293                // Method getImplementationFactory:(Ljava/lang/Class;Ljava/lang/Class;Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;)Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowImplementationFactory;
     665: astore        12
     667: new           #297                // class com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactory
     670: dup
     671: aload         12
     673: aload         9
     675: aload         10
     677: aload         7
     679: aload         11
     681: aload         8
     683: aload         4
     685: invokespecial #299                // Method com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactory."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowImplementationFactory;Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;Lcom/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions;Lcom/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair;Ljava/util/Map;Lcom/amazonaws/services/simpleworkflow/flow/pojo/MethodConverterPair;[Ljava/lang/Object;)V
     688: astore        13
     690: aload_0
     691: getfield      #49                 // Field factories:Ljava/util/Map;
     694: aload         9
     696: aload         13
     698: invokeinterface #283,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     703: pop
     704: aload_0
     705: getfield      #51                 // Field workflowImplementationTypes:Ljava/util/Collection;
     708: aload_2
     709: invokeinterface #302,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     714: pop
     715: aload         13
     717: invokevirtual #305                // Method com/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactory.getWorkflowRegistrationOptions:()Lcom/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions;
     720: ifnull        735
     723: aload_0
     724: getfield      #44                 // Field workflowTypesToRegister:Ljava/util/List;
     727: aload         9
     729: invokeinterface #309,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     734: pop
     735: return

  private void checkAnnotationUniqueness(java.lang.reflect.Method, java.lang.Object...);
    Code:
       0: new           #41                 // class java/util/ArrayList
       3: dup
       4: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_2
       9: dup
      10: astore        7
      12: arraylength
      13: istore        6
      15: iconst_0
      16: istore        5
      18: goto          45
      21: aload         7
      23: iload         5
      25: aaload
      26: astore        4
      28: aload         4
      30: ifnull        42
      33: aload_3
      34: aload         4
      36: invokeinterface #309,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: iinc          5, 1
      45: iload         5
      47: iload         6
      49: if_icmplt     21
      52: aload_3
      53: invokeinterface #349,  1          // InterfaceMethod java/util/List.size:()I
      58: iconst_1
      59: if_icmple     100
      62: new           #99                 // class java/lang/IllegalArgumentException
      65: dup
      66: new           #101                // class java/lang/StringBuilder
      69: dup
      70: ldc_w         #350                // String Method
      73: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      76: aload_1
      77: invokevirtual #282                // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      80: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc_w         #352                // String  is annotated with both
      86: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_3
      90: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: return

  protected com.amazonaws.services.simpleworkflow.flow.pojo.POJOWorkflowImplementationFactory getImplementationFactory(java.lang.Class<?>, java.lang.Class<?>, com.amazonaws.services.simpleworkflow.model.WorkflowType);
    Code:
       0: new           #360                // class com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #362                // Method com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory$1."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory;Ljava/lang/Class;)V
       9: areturn

  private void getImplementedInterfacesAnnotatedWithWorkflow(java.lang.Class<?>, java.util.Set<java.lang.Class<?>>);
    Code:
       0: aload_1
       1: invokevirtual #367                // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
       4: astore_3
       5: aload_3
       6: ifnull        15
       9: aload_0
      10: aload_3
      11: aload_2
      12: invokespecial #123                // Method getImplementedInterfacesAnnotatedWithWorkflow:(Ljava/lang/Class;Ljava/util/Set;)V
      15: aload_1
      16: invokevirtual #370                // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      19: astore        4
      21: aload         4
      23: dup
      24: astore        8
      26: arraylength
      27: istore        7
      29: iconst_0
      30: istore        6
      32: goto          99
      35: aload         8
      37: iload         6
      39: aaload
      40: astore        5
      42: aload         5
      44: ldc           #175                // class com/amazonaws/services/simpleworkflow/flow/annotations/Workflow
      46: invokevirtual #177                // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      49: ifnull        89
      52: aload_2
      53: aload         5
      55: invokeinterface #374,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      60: ifne          89
      63: aload_0
      64: aload         5
      66: aload_2
      67: invokespecial #377                // Method removeSuperInterfaces:(Ljava/lang/Class;Ljava/util/Set;)Z
      70: istore        9
      72: iload         9
      74: ifne          96
      77: aload_2
      78: aload         5
      80: invokeinterface #381,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      85: pop
      86: goto          96
      89: aload_0
      90: aload         5
      92: aload_2
      93: invokespecial #123                // Method getImplementedInterfacesAnnotatedWithWorkflow:(Ljava/lang/Class;Ljava/util/Set;)V
      96: iinc          6, 1
      99: iload         6
     101: iload         7
     103: if_icmplt     35
     106: return

  private boolean removeSuperInterfaces(java.lang.Class<?>, java.util.Set<java.lang.Class<?>>);
    Code:
       0: iconst_0
       1: istore_3
       2: new           #41                 // class java/util/ArrayList
       5: dup
       6: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
       9: astore        4
      11: aload_2
      12: invokeinterface #136,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore        6
      19: goto          64
      22: aload         6
      24: invokeinterface #140,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #23                 // class java/lang/Class
      32: astore        5
      34: aload         5
      36: aload_1
      37: invokevirtual #235                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      40: ifeq          53
      43: aload         4
      45: aload         5
      47: invokeinterface #309,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: aload_1
      54: aload         5
      56: invokevirtual #235                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      59: ifeq          64
      62: iconst_1
      63: istore_3
      64: aload         6
      66: invokeinterface #150,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifne          22
      74: aload         4
      76: invokeinterface #389,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      81: astore        6
      83: goto          107
      86: aload         6
      88: invokeinterface #140,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #23                 // class java/lang/Class
      96: astore        5
      98: aload_2
      99: aload         5
     101: invokeinterface #390,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     106: pop
     107: aload         6
     109: invokeinterface #150,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     114: ifne          86
     117: iload_3
     118: ireturn

  private static java.lang.String getMethodFullName(java.lang.reflect.Method);
    Code:
       0: new           #101                // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #188                // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
       8: invokevirtual #243                // Method java/lang/Class.getName:()Ljava/lang/String;
      11: invokestatic  #398                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      17: ldc_w         #402                // String .
      20: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #282                // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      27: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn

  private com.amazonaws.services.simpleworkflow.flow.DataConverter createConverter(java.lang.Class<? extends com.amazonaws.services.simpleworkflow.flow.DataConverter>, com.amazonaws.services.simpleworkflow.flow.DataConverter) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_2
       1: ifnull        6
       4: aload_2
       5: areturn
       6: aload_1
       7: ifnull        20
      10: aload_1
      11: ldc_w         #406                // class com/amazonaws/services/simpleworkflow/flow/annotations/NullDataConverter
      14: invokevirtual #229                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          25
      20: aload_0
      21: getfield      #39                 // Field converter:Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;
      24: areturn
      25: aload_1
      26: invokevirtual #408                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      29: checkcast     #159                // class com/amazonaws/services/simpleworkflow/flow/DataConverter
      32: areturn

  protected com.amazonaws.services.simpleworkflow.model.WorkflowType getWorkflowType(java.lang.String, java.lang.reflect.Method, com.amazonaws.services.simpleworkflow.flow.annotations.Execute);
    Code:
       0: getstatic     #28                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_2
       7: ifnonnull     18
      10: new           #413                // class java/lang/AssertionError
      13: dup
      14: invokespecial #415                // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: getstatic     #28                 // Field $assertionsDisabled:Z
      21: ifne          36
      24: aload_3
      25: ifnonnull     36
      28: new           #413                // class java/lang/AssertionError
      31: dup
      32: invokespecial #415                // Method java/lang/AssertionError."<init>":()V
      35: athrow
      36: new           #341                // class com/amazonaws/services/simpleworkflow/model/WorkflowType
      39: dup
      40: invokespecial #416                // Method com/amazonaws/services/simpleworkflow/model/WorkflowType."<init>":()V
      43: astore        4
      45: aconst_null
      46: astore        5
      48: aload_3
      49: invokeinterface #417,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Execute.name:()Ljava/lang/String;
      54: ifnull        80
      57: aload_3
      58: invokeinterface #417,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Execute.name:()Ljava/lang/String;
      63: invokevirtual #277                // Method java/lang/String.isEmpty:()Z
      66: ifne          80
      69: aload_3
      70: invokeinterface #417,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Execute.name:()Ljava/lang/String;
      75: astore        5
      77: goto          109
      80: new           #101                // class java/lang/StringBuilder
      83: dup
      84: aload_1
      85: invokestatic  #398                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      88: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      91: ldc_w         #402                // String .
      94: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_2
      98: invokevirtual #282                // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     101: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: astore        5
     109: aload_3
     110: invokeinterface #418,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Execute.version:()Ljava/lang/String;
     115: invokevirtual #277                // Method java/lang/String.isEmpty:()Z
     118: ifeq          149
     121: new           #99                 // class java/lang/IllegalArgumentException
     124: dup
     125: new           #101                // class java/lang/StringBuilder
     128: dup
     129: ldc_w         #421                // String Empty value of the required \"version\" parameter of the @Execute annotation found on
     132: invokespecial #135                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     135: aload_2
     136: invokestatic  #215                // Method getMethodFullName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
     139: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     148: athrow
     149: aload         4
     151: aload         5
     153: invokevirtual #423                // Method com/amazonaws/services/simpleworkflow/model/WorkflowType.setName:(Ljava/lang/String;)V
     156: aload         4
     158: aload_3
     159: invokeinterface #418,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Execute.version:()Ljava/lang/String;
     164: invokevirtual #426                // Method com/amazonaws/services/simpleworkflow/model/WorkflowType.setVersion:(Ljava/lang/String;)V
     167: aload         4
     169: areturn

  protected com.amazonaws.services.simpleworkflow.flow.WorkflowTypeRegistrationOptions createRegistrationOptions(com.amazonaws.services.simpleworkflow.flow.annotations.WorkflowRegistrationOptions);
    Code:
       0: new           #343                // class com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions
       3: dup
       4: invokespecial #430                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokeinterface #431,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/WorkflowRegistrationOptions.description:()Ljava/lang/String;
      15: invokestatic  #434                // Method emptyStringToNull:(Ljava/lang/String;)Ljava/lang/String;
      18: invokevirtual #438                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.setDescription:(Ljava/lang/String;)V
      21: aload_2
      22: aload_1
      23: invokeinterface #441,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/WorkflowRegistrationOptions.defaultExecutionStartToCloseTimeoutSeconds:()J
      28: invokevirtual #445                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.setDefaultExecutionStartToCloseTimeoutSeconds:(J)V
      31: aload_2
      32: aload_1
      33: invokeinterface #449,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/WorkflowRegistrationOptions.defaultTaskStartToCloseTimeoutSeconds:()J
      38: invokevirtual #452                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.setDefaultTaskStartToCloseTimeoutSeconds:(J)V
      41: aload_1
      42: invokeinterface #455,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/WorkflowRegistrationOptions.defaultTaskList:()Ljava/lang/String;
      47: astore_3
      48: aload_3
      49: ldc_w         #458                // String USE_WORKER_TASK_LIST
      52: invokevirtual #460                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifne          63
      58: aload_2
      59: aload_3
      60: invokevirtual #461                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.setDefaultTaskList:(Ljava/lang/String;)V
      63: aload_2
      64: aload_1
      65: invokeinterface #464,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/WorkflowRegistrationOptions.defaultChildPolicy:()Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;
      70: invokevirtual #468                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.setDefaultChildPolicy:(Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;)V
      73: aload_1
      74: invokeinterface #472,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/WorkflowRegistrationOptions.defaultLambdaRole:()Ljava/lang/String;
      79: astore        4
      81: aload         4
      83: ifnull        100
      86: aload         4
      88: invokevirtual #277                // Method java/lang/String.isEmpty:()Z
      91: ifne          100
      94: aload_2
      95: aload         4
      97: invokevirtual #475                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.setDefaultLambdaRole:(Ljava/lang/String;)V
     100: aload_2
     101: areturn

  private static java.lang.String emptyStringToNull(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #480                // Method java/lang/String.length:()I
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: areturn
}
