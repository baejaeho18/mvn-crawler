Compiled from "TryCatchFinallyContext.java"
class com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinallyContext extends com.amazonaws.services.simpleworkflow.flow.core.AsyncContextBase {
  private java.util.List<com.amazonaws.services.simpleworkflow.flow.core.AsyncContextBase> heirs;

  private int nonDaemonHeirsCount;

  private java.util.concurrent.Executor executor;

  private com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinally$State state;

  private java.lang.Throwable failure;

  private boolean canceled;

  private boolean executed;

  private boolean daemondCausedCancellation;

  private final com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinally tryCatchFinally;

  private final java.lang.String parentTaskMethodName;

  static final boolean $assertionsDisabled;

  private static int[] $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$core$TryCatchFinally$State;

  static {};
    Code:
       0: ldc           #1                  // class com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinallyContext
       2: invokevirtual #31                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #37                 // Field $assertionsDisabled:Z
      16: return

  com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinallyContext(com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinally, java.lang.Boolean, java.lang.String, int, com.amazonaws.services.simpleworkflow.flow.core.Promise<?>[]);
    Code:
       0: aload_0
       1: aload_2
       2: aload         5
       4: iload         4
       6: invokespecial #46                 // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase."<init>":(Ljava/lang/Boolean;[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;I)V
       9: aload_0
      10: new           #49                 // class java/util/ArrayList
      13: dup
      14: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
      17: putfield      #53                 // Field heirs:Ljava/util/List;
      20: aload_0
      21: getstatic     #55                 // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CREATED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      24: putfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      27: aload_0
      28: aload_1
      29: putfield      #62                 // Field tryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally;
      32: aload_0
      33: aload_0
      34: getfield      #64                 // Field parent:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;
      37: invokeinterface #68,  1           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.getExecutor:()Ljava/util/concurrent/Executor;
      42: putfield      #74                 // Field executor:Ljava/util/concurrent/Executor;
      45: aload_0
      46: aload_3
      47: putfield      #76                 // Field parentTaskMethodName:Ljava/lang/String;
      50: return

  com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinallyContext(com.amazonaws.services.simpleworkflow.flow.core.AsyncParentContext, com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinally, java.lang.Boolean, java.lang.String, int, com.amazonaws.services.simpleworkflow.flow.core.Promise<?>[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         6
       5: iload         5
       7: invokespecial #87                 // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;Ljava/lang/Boolean;[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;I)V
      10: aload_0
      11: new           #49                 // class java/util/ArrayList
      14: dup
      15: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
      18: putfield      #53                 // Field heirs:Ljava/util/List;
      21: aload_0
      22: getstatic     #55                 // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CREATED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      25: putfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      28: aload_0
      29: aload_2
      30: putfield      #62                 // Field tryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally;
      33: aload_0
      34: aload_1
      35: invokeinterface #68,  1           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.getExecutor:()Ljava/util/concurrent/Executor;
      40: putfield      #74                 // Field executor:Ljava/util/concurrent/Executor;
      43: aload_0
      44: aload         4
      46: putfield      #76                 // Field parentTaskMethodName:Ljava/lang/String;
      49: return

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #74                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  public void add(com.amazonaws.services.simpleworkflow.flow.core.AsyncContextBase, com.amazonaws.services.simpleworkflow.flow.core.Promise<?>);
    Code:
       0: aload_0
       1: invokespecial #93                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #53                 // Field heirs:Ljava/util/List;
       8: aload_1
       9: invokeinterface #96,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: aload_1
      16: invokevirtual #101                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase.isDaemon:()Z
      19: ifne          32
      22: aload_0
      23: dup
      24: getfield      #104                // Field nonDaemonHeirsCount:I
      27: iconst_1
      28: iadd
      29: putfield      #104                // Field nonDaemonHeirsCount:I
      32: aload_2
      33: ifnonnull     49
      36: aload_0
      37: getfield      #74                 // Field executor:Ljava/util/concurrent/Executor;
      40: aload_1
      41: invokeinterface #106,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      46: goto          62
      49: aload_2
      50: new           #112                // class com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinallyContext$1
      53: dup
      54: aload_0
      55: aload_1
      56: invokespecial #114                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinallyContext$1."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinallyContext;Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase;)V
      59: invokevirtual #117                // Method com/amazonaws/services/simpleworkflow/flow/core/Promise.addCallback:(Ljava/lang/Runnable;)V
      62: return

  private void checkClosed();
    Code:
       0: aload_0
       1: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
       4: getstatic     #127                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CLOSED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
       7: if_acmpne     25
      10: new           #130                // class java/lang/IllegalStateException
      13: dup
      14: aload_0
      15: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      18: invokevirtual #132                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.toString:()Ljava/lang/String;
      21: invokespecial #136                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: return

  public void cancel(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
       4: getstatic     #55                 // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CREATED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
       7: if_acmpne     54
      10: getstatic     #37                 // Field $assertionsDisabled:Z
      13: ifne          36
      16: aload_0
      17: getfield      #53                 // Field heirs:Ljava/util/List;
      20: invokeinterface #141,  1          // InterfaceMethod java/util/List.size:()I
      25: ifeq          36
      28: new           #145                // class java/lang/AssertionError
      31: dup
      32: invokespecial #147                // Method java/lang/AssertionError."<init>":()V
      35: athrow
      36: aload_0
      37: getstatic     #127                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CLOSED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      40: putfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      43: aload_0
      44: getfield      #64                 // Field parent:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;
      47: aload_0
      48: invokeinterface #148,  2          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.remove:(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase;)V
      53: return
      54: aload_0
      55: getfield      #152                // Field failure:Ljava/lang/Throwable;
      58: ifnonnull     121
      61: aload_0
      62: iconst_1
      63: putfield      #154                // Field canceled:Z
      66: aload_0
      67: new           #156                // class java/util/concurrent/CancellationException
      70: dup
      71: invokespecial #158                // Method java/util/concurrent/CancellationException."<init>":()V
      74: putfield      #152                // Field failure:Ljava/lang/Throwable;
      77: aload_0
      78: getfield      #159                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
      81: ifnull        98
      84: aload_0
      85: getfield      #152                // Field failure:Ljava/lang/Throwable;
      88: aload_0
      89: getfield      #159                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
      92: invokevirtual #163                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace.getStackTrace:()[Ljava/lang/StackTraceElement;
      95: invokevirtual #169                // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
      98: aload_0
      99: getfield      #152                // Field failure:Ljava/lang/Throwable;
     102: aload_1
     103: invokevirtual #175                // Method java/lang/Throwable.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     106: pop
     107: aload_0
     108: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
     111: getstatic     #179                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.TRYING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
     114: if_acmpne     121
     117: aload_0
     118: invokespecial #182                // Method cancelHeirs:()V
     121: return

  public boolean isCancelRequested();
    Code:
       0: aload_0
       1: getfield      #154                // Field canceled:Z
       4: ireturn

  public void remove(com.amazonaws.services.simpleworkflow.flow.core.AsyncContextBase);
    Code:
       0: aload_0
       1: invokespecial #93                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #53                 // Field heirs:Ljava/util/List;
       8: aload_1
       9: invokeinterface #187,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      14: pop
      15: aload_1
      16: invokevirtual #101                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase.isDaemon:()Z
      19: ifne          53
      22: aload_0
      23: dup
      24: getfield      #104                // Field nonDaemonHeirsCount:I
      27: iconst_1
      28: isub
      29: putfield      #104                // Field nonDaemonHeirsCount:I
      32: getstatic     #37                 // Field $assertionsDisabled:Z
      35: ifne          53
      38: aload_0
      39: getfield      #104                // Field nonDaemonHeirsCount:I
      42: ifge          53
      45: new           #145                // class java/lang/AssertionError
      48: dup
      49: invokespecial #147                // Method java/lang/AssertionError."<init>":()V
      52: athrow
      53: aload_0
      54: invokespecial #189                // Method updateState:()V
      57: return

  public void fail(com.amazonaws.services.simpleworkflow.flow.core.AsyncContextBase, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #93                 // Method checkClosed:()V
       4: aload_2
       5: instanceof    #156                // class java/util/concurrent/CancellationException
       8: istore_3
       9: iload_3
      10: ifeq          27
      13: aload_0
      14: getfield      #152                // Field failure:Ljava/lang/Throwable;
      17: ifnonnull     32
      20: aload_0
      21: getfield      #194                // Field daemondCausedCancellation:Z
      24: ifne          32
      27: aload_0
      28: aload_2
      29: putfield      #152                // Field failure:Ljava/lang/Throwable;
      32: aload_0
      33: getfield      #53                 // Field heirs:Ljava/util/List;
      36: aload_1
      37: invokeinterface #187,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      42: istore        4
      44: getstatic     #37                 // Field $assertionsDisabled:Z
      47: ifne          63
      50: iload         4
      52: ifne          63
      55: new           #145                // class java/lang/AssertionError
      58: dup
      59: invokespecial #147                // Method java/lang/AssertionError."<init>":()V
      62: athrow
      63: aload_1
      64: invokevirtual #101                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase.isDaemon:()Z
      67: ifne          101
      70: aload_0
      71: dup
      72: getfield      #104                // Field nonDaemonHeirsCount:I
      75: iconst_1
      76: isub
      77: putfield      #104                // Field nonDaemonHeirsCount:I
      80: getstatic     #37                 // Field $assertionsDisabled:Z
      83: ifne          101
      86: aload_0
      87: getfield      #104                // Field nonDaemonHeirsCount:I
      90: ifge          101
      93: new           #145                // class java/lang/AssertionError
      96: dup
      97: invokespecial #147                // Method java/lang/AssertionError."<init>":()V
     100: athrow
     101: aload_0
     102: invokespecial #182                // Method cancelHeirs:()V
     105: aload_0
     106: invokespecial #189                // Method updateState:()V
     109: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
       4: getstatic     #127                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CLOSED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      15: getstatic     #55                 // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CREATED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      18: if_acmpne     28
      21: aload_0
      22: getstatic     #179                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.TRYING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      25: putfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      28: aload_0
      29: invokestatic  #200                // Method setCurrent:(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;)V
      32: aload_0
      33: getfield      #152                // Field failure:Ljava/lang/Throwable;
      36: astore_1
      37: invokestatic  #204                // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$core$TryCatchFinally$State:()[I
      40: aload_0
      41: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      44: invokevirtual #207                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.ordinal:()I
      47: iaload
      48: tableswitch   { // 2 to 4
                     2: 76
                     3: 107
                     4: 123
               default: 130
          }
      76: aload_0
      77: getfield      #154                // Field canceled:Z
      80: ifeq          97
      83: aconst_null
      84: invokestatic  #200                // Method setCurrent:(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;)V
      87: aload_0
      88: iconst_1
      89: putfield      #210                // Field executed:Z
      92: aload_0
      93: invokespecial #189                // Method updateState:()V
      96: return
      97: aload_0
      98: getfield      #62                 // Field tryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally;
     101: invokevirtual #212                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally.doTry:()V
     104: goto          222
     107: aload_0
     108: aconst_null
     109: putfield      #152                // Field failure:Ljava/lang/Throwable;
     112: aload_0
     113: getfield      #62                 // Field tryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally;
     116: aload_1
     117: invokevirtual #217                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally.doCatch:(Ljava/lang/Throwable;)V
     120: goto          222
     123: aload_0
     124: getfield      #62                 // Field tryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally;
     127: invokevirtual #220                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally.doFinally:()V
     130: goto          222
     133: astore_2
     134: aload_0
     135: getfield      #159                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
     138: ifnull        179
     141: aload_2
     142: aload_1
     143: if_acmpeq     179
     146: new           #164                // class com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace
     149: dup
     150: aload_0
     151: getfield      #159                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
     154: aload_2
     155: invokevirtual #223                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
     158: iconst_0
     159: invokespecial #224                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;[Ljava/lang/StackTraceElement;I)V
     162: astore_3
     163: aload_3
     164: aload_0
     165: invokevirtual #227                // Method getParentTaskMethodName:()Ljava/lang/String;
     168: invokevirtual #230                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace.setStartFrom:(Ljava/lang/String;)V
     171: aload_2
     172: aload_3
     173: invokevirtual #163                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace.getStackTrace:()[Ljava/lang/StackTraceElement;
     176: invokevirtual #169                // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
     179: aload_0
     180: aload_2
     181: putfield      #152                // Field failure:Ljava/lang/Throwable;
     184: aload_0
     185: invokespecial #182                // Method cancelHeirs:()V
     188: aconst_null
     189: invokestatic  #200                // Method setCurrent:(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;)V
     192: aload_0
     193: iconst_1
     194: putfield      #210                // Field executed:Z
     197: aload_0
     198: invokespecial #189                // Method updateState:()V
     201: goto          235
     204: astore        4
     206: aconst_null
     207: invokestatic  #200                // Method setCurrent:(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;)V
     210: aload_0
     211: iconst_1
     212: putfield      #210                // Field executed:Z
     215: aload_0
     216: invokespecial #189                // Method updateState:()V
     219: aload         4
     221: athrow
     222: aconst_null
     223: invokestatic  #200                // Method setCurrent:(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;)V
     226: aload_0
     227: iconst_1
     228: putfield      #210                // Field executed:Z
     231: aload_0
     232: invokespecial #189                // Method updateState:()V
     235: return
    Exception table:
       from    to  target type
          37    83   133   Class java/lang/Throwable
          97   130   133   Class java/lang/Throwable
          37    83   204   any
          97   188   204   any

  private void cancelHeirs();
    Code:
       0: new           #49                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #53                 // Field heirs:Ljava/util/List;
       8: invokespecial #235                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_1
      13: invokeinterface #238,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: goto          40
      22: aload_3
      23: invokeinterface #242,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #3                  // class com/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase
      31: astore_2
      32: aload_2
      33: aload_0
      34: getfield      #152                // Field failure:Ljava/lang/Throwable;
      37: invokevirtual #248                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase.cancel:(Ljava/lang/Throwable;)V
      40: aload_3
      41: invokeinterface #250,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifne          22
      49: return

  private void updateState();
    Code:
       0: aload_0
       1: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
       4: getstatic     #127                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CLOSED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
       7: if_acmpeq     17
      10: aload_0
      11: getfield      #210                // Field executed:Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #104                // Field nonDaemonHeirsCount:I
      22: ifne          228
      25: aload_0
      26: getfield      #53                 // Field heirs:Ljava/util/List;
      29: invokeinterface #255,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      34: ifeq          212
      37: aload_0
      38: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      41: getstatic     #179                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.TRYING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      44: if_acmpne     82
      47: aload_0
      48: getfield      #152                // Field failure:Ljava/lang/Throwable;
      51: ifnonnull     68
      54: aload_0
      55: getstatic     #258                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.FINALIZING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      58: putfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      61: aload_0
      62: invokespecial #261                // Method execute:()V
      65: goto          228
      68: aload_0
      69: getstatic     #263                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CATCHING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      72: putfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      75: aload_0
      76: invokespecial #261                // Method execute:()V
      79: goto          228
      82: aload_0
      83: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      86: getstatic     #263                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CATCHING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      89: if_acmpne     106
      92: aload_0
      93: getstatic     #258                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.FINALIZING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      96: putfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      99: aload_0
     100: invokespecial #261                // Method execute:()V
     103: goto          228
     106: aload_0
     107: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
     110: getstatic     #258                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.FINALIZING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
     113: if_acmpne     184
     116: getstatic     #37                 // Field $assertionsDisabled:Z
     119: ifne          140
     122: aload_0
     123: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
     126: getstatic     #127                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CLOSED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
     129: if_acmpne     140
     132: new           #145                // class java/lang/AssertionError
     135: dup
     136: invokespecial #147                // Method java/lang/AssertionError."<init>":()V
     139: athrow
     140: aload_0
     141: getstatic     #127                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CLOSED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
     144: putfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
     147: aload_0
     148: getfield      #152                // Field failure:Ljava/lang/Throwable;
     151: ifnonnull     167
     154: aload_0
     155: getfield      #64                 // Field parent:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;
     158: aload_0
     159: invokeinterface #148,  2          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.remove:(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase;)V
     164: goto          228
     167: aload_0
     168: getfield      #64                 // Field parent:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;
     171: aload_0
     172: aload_0
     173: getfield      #152                // Field failure:Ljava/lang/Throwable;
     176: invokeinterface #266,  3          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.fail:(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase;Ljava/lang/Throwable;)V
     181: goto          228
     184: new           #130                // class java/lang/IllegalStateException
     187: dup
     188: new           #268                // class java/lang/StringBuilder
     191: dup
     192: ldc_w         #270                // String Unknown state
     195: invokespecial #272                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     198: aload_0
     199: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
     202: invokevirtual #273                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     205: invokevirtual #277                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: invokespecial #136                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     211: athrow
     212: aload_0
     213: getfield      #152                // Field failure:Ljava/lang/Throwable;
     216: ifnonnull     224
     219: aload_0
     220: iconst_1
     221: putfield      #194                // Field daemondCausedCancellation:Z
     224: aload_0
     225: invokespecial #182                // Method cancelHeirs:()V
     228: return

  private void execute();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #210                // Field executed:Z
       5: aload_0
       6: getfield      #74                 // Field executor:Ljava/util/concurrent/Executor;
       9: aload_0
      10: invokeinterface #106,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      15: return

  protected void getAsynchronousStackTraceDump(java.util.List<com.amazonaws.services.simpleworkflow.flow.core.AsyncTaskInfo>);
    Code:
       0: aload_0
       1: getfield      #53                 // Field heirs:Ljava/util/List;
       4: invokeinterface #141,  1          // InterfaceMethod java/util/List.size:()I
       9: ifne          26
      12: aload_1
      13: aload_0
      14: invokevirtual #281                // Method getTaskInfo:()Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncTaskInfo;
      17: invokeinterface #96,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: goto          63
      26: aload_0
      27: getfield      #53                 // Field heirs:Ljava/util/List;
      30: invokeinterface #238,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore_3
      36: goto          54
      39: aload_3
      40: invokeinterface #242,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #3                  // class com/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase
      48: astore_2
      49: aload_2
      50: aload_1
      51: invokevirtual #285                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase.getAsynchronousStackTraceDump:(Ljava/util/List;)V
      54: aload_3
      55: invokeinterface #250,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifne          39
      63: return

  public boolean isRethrown(java.lang.Throwable);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #152                // Field failure:Ljava/lang/Throwable;
       5: if_acmpne     10
       8: iconst_1
       9: ireturn
      10: iconst_0
      11: ireturn

  public com.amazonaws.services.simpleworkflow.flow.core.AsyncParentContext getCurrentTryCatchFinallyContext();
    Code:
       0: aload_0
       1: areturn

  public boolean getDaemonFlagForHeir();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getParentTaskMethodName();
    Code:
       0: aload_0
       1: getfield      #76                 // Field parentTaskMethodName:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #76                 // Field parentTaskMethodName:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      16: getstatic     #179                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.TRYING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      19: if_acmpne     26
      22: ldc_w         #294                // String doTry
      25: areturn
      26: aload_0
      27: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      30: getstatic     #263                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CATCHING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      33: if_acmpne     40
      36: ldc_w         #295                // String doCatch
      39: areturn
      40: aload_0
      41: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      44: getstatic     #258                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.FINALIZING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      47: if_acmpne     54
      50: ldc_w         #296                // String doFinally
      53: areturn
      54: aconst_null
      55: areturn

  public com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinally$State getState();
    Code:
       0: aload_0
       1: getfield      #60                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #159                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
       4: ifnull        15
       7: aload_0
       8: getfield      #159                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
      11: invokevirtual #299                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace.toString:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokespecial #300                // Method java/lang/Object.toString:()Ljava/lang/String;
      19: areturn

  static java.util.concurrent.Executor access$0(com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinallyContext);
    Code:
       0: aload_0
       1: getfield      #74                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  static int[] $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$core$TryCatchFinally$State();
    Code:
       0: getstatic     #305                // Field $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$core$TryCatchFinally$State:[I
       3: dup
       4: ifnull        8
       7: areturn
       8: pop
       9: invokestatic  #307                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.values:()[Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      12: arraylength
      13: newarray       int
      15: astore_0
      16: aload_0
      17: getstatic     #263                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CATCHING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      20: invokevirtual #207                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.ordinal:()I
      23: iconst_3
      24: iastore
      25: goto          29
      28: pop
      29: aload_0
      30: getstatic     #127                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CLOSED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      33: invokevirtual #207                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.ordinal:()I
      36: iconst_5
      37: iastore
      38: goto          42
      41: pop
      42: aload_0
      43: getstatic     #55                 // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.CREATED:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      46: invokevirtual #207                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.ordinal:()I
      49: iconst_1
      50: iastore
      51: goto          55
      54: pop
      55: aload_0
      56: getstatic     #258                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.FINALIZING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      59: invokevirtual #207                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.ordinal:()I
      62: iconst_4
      63: iastore
      64: goto          68
      67: pop
      68: aload_0
      69: getstatic     #179                // Field com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.TRYING:Lcom/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State;
      72: invokevirtual #207                // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally$State.ordinal:()I
      75: iconst_2
      76: iastore
      77: goto          81
      80: pop
      81: aload_0
      82: dup
      83: putstatic     #305                // Field $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$core$TryCatchFinally$State:[I
      86: areturn
    Exception table:
       from    to  target type
          16    25    28   Class java/lang/NoSuchFieldError
          29    38    41   Class java/lang/NoSuchFieldError
          42    51    54   Class java/lang/NoSuchFieldError
          55    64    67   Class java/lang/NoSuchFieldError
          68    77    80   Class java/lang/NoSuchFieldError
}
