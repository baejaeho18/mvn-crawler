Compiled from "ChildWorkflowDecisionStateMachine.java"
class com.amazonaws.services.simpleworkflow.flow.worker.ChildWorkflowDecisionStateMachine extends com.amazonaws.services.simpleworkflow.flow.worker.DecisionStateMachineBase {
  private com.amazonaws.services.simpleworkflow.model.StartChildWorkflowExecutionDecisionAttributes startAttributes;

  private java.lang.String runId;

  private static int[] $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState;

  public com.amazonaws.services.simpleworkflow.flow.worker.ChildWorkflowDecisionStateMachine(com.amazonaws.services.simpleworkflow.flow.worker.DecisionId, com.amazonaws.services.simpleworkflow.model.StartChildWorkflowExecutionDecisionAttributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionStateMachineBase."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionId;)V
       5: aload_0
       6: aload_2
       7: putfield      #18                 // Field startAttributes:Lcom/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionDecisionAttributes;
      10: return

  com.amazonaws.services.simpleworkflow.flow.worker.ChildWorkflowDecisionStateMachine(com.amazonaws.services.simpleworkflow.flow.worker.DecisionId, com.amazonaws.services.simpleworkflow.model.StartChildWorkflowExecutionDecisionAttributes, com.amazonaws.services.simpleworkflow.flow.worker.DecisionState);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #27                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionStateMachineBase."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionId;Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;)V
       6: aload_0
       7: aload_2
       8: putfield      #18                 // Field startAttributes:Lcom/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionDecisionAttributes;
      11: return

  public com.amazonaws.services.simpleworkflow.model.Decision getDecision();
    Code:
       0: invokestatic  #34                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
       3: aload_0
       4: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       7: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     7: 41
               default: 46
          }
      36: aload_0
      37: invokespecial #45                 // Method createStartChildWorkflowExecutionDecision:()Lcom/amazonaws/services/simpleworkflow/model/Decision;
      40: areturn
      41: aload_0
      42: invokespecial #48                 // Method createRequestCancelExternalWorkflowExecutionDecision:()Lcom/amazonaws/services/simpleworkflow/model/Decision;
      45: areturn
      46: aconst_null
      47: areturn

  public void handleDecisionTaskStartedEvent();
    Code:
       0: invokestatic  #34                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
       3: aload_0
       4: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       7: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      10: iaload
      11: tableswitch   { // 7 to 7
                     7: 28
               default: 38
          }
      28: aload_0
      29: getstatic     #54                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELLATION_DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      32: putfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      35: goto          42
      38: aload_0
      39: invokespecial #57                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionStateMachineBase.handleDecisionTaskStartedEvent:()V
      42: return

  public void handleStartedEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: getfield      #61                 // Field stateHistory:Ljava/util/List;
       4: ldc           #65                 // String handleStartedEvent
       6: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: invokestatic  #34                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
      15: aload_0
      16: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      19: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      22: iaload
      23: tableswitch   { // 4 to 6
                     4: 48
                     5: 65
                     6: 58
               default: 65
          }
      48: aload_0
      49: getstatic     #72                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.STARTED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      52: putfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      55: goto          65
      58: aload_0
      59: getstatic     #75                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_AFTER_STARTED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      62: putfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      65: aload_0
      66: getfield      #61                 // Field stateHistory:Ljava/util/List;
      69: aload_0
      70: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      73: invokevirtual #78                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      76: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: return

  public void handleCancellationFailureEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: invokestatic  #34                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
       3: aload_0
       4: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       7: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      10: iaload
      11: tableswitch   { // 8 to 8
                     8: 28
               default: 67
          }
      28: aload_0
      29: getfield      #61                 // Field stateHistory:Ljava/util/List;
      32: ldc           #85                 // String handleCancellationFailureEvent
      34: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: getstatic     #72                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.STARTED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      44: putfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      47: aload_0
      48: getfield      #61                 // Field stateHistory:Ljava/util/List;
      51: aload_0
      52: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      55: invokevirtual #78                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      58: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          72
      67: aload_0
      68: aload_1
      69: invokespecial #86                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionStateMachineBase.handleCancellationFailureEvent:(Lcom/amazonaws/services/simpleworkflow/model/HistoryEvent;)V
      72: return

  public void cancel(java.lang.Runnable);
    Code:
       0: invokestatic  #34                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
       3: aload_0
       4: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       7: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      10: iaload
      11: tableswitch   { // 5 to 5
                     5: 28
               default: 67
          }
      28: aload_0
      29: getfield      #61                 // Field stateHistory:Ljava/util/List;
      32: ldc           #90                 // String cancel
      34: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: getstatic     #75                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_AFTER_STARTED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      44: putfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      47: aload_0
      48: getfield      #61                 // Field stateHistory:Ljava/util/List;
      51: aload_0
      52: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      55: invokevirtual #78                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      58: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          72
      67: aload_0
      68: aload_1
      69: invokespecial #91                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionStateMachineBase.cancel:(Ljava/lang/Runnable;)V
      72: return

  public void handleCancellationEvent();
    Code:
       0: invokestatic  #34                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
       3: aload_0
       4: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       7: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      10: iaload
      11: tableswitch   { // 5 to 5
                     5: 28
               default: 67
          }
      28: aload_0
      29: getfield      #61                 // Field stateHistory:Ljava/util/List;
      32: ldc           #96                 // String handleCancellationEvent
      34: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: getstatic     #97                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      44: putfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      47: aload_0
      48: getfield      #61                 // Field stateHistory:Ljava/util/List;
      51: aload_0
      52: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      55: invokevirtual #78                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      58: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          71
      67: aload_0
      68: invokespecial #100                // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionStateMachineBase.handleCancellationEvent:()V
      71: return

  public void handleCompletionEvent();
    Code:
       0: invokestatic  #34                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
       3: aload_0
       4: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       7: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      10: iaload
      11: tableswitch   { // 5 to 7
                     5: 36
                     6: 75
                     7: 36
               default: 75
          }
      36: aload_0
      37: getfield      #61                 // Field stateHistory:Ljava/util/List;
      40: ldc           #103                // String handleCompletionEvent
      42: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getstatic     #97                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      52: putfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      55: aload_0
      56: getfield      #61                 // Field stateHistory:Ljava/util/List;
      59: aload_0
      60: getfield      #37                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      63: invokevirtual #78                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      66: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          79
      75: aload_0
      76: invokespecial #104                // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionStateMachineBase.handleCompletionEvent:()V
      79: return

  private com.amazonaws.services.simpleworkflow.model.Decision createRequestCancelExternalWorkflowExecutionDecision();
    Code:
       0: new           #106                // class com/amazonaws/services/simpleworkflow/model/RequestCancelExternalWorkflowExecutionDecisionAttributes
       3: dup
       4: invokespecial #108                // Method com/amazonaws/services/simpleworkflow/model/RequestCancelExternalWorkflowExecutionDecisionAttributes."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #18                 // Field startAttributes:Lcom/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionDecisionAttributes;
      13: invokevirtual #110                // Method com/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionDecisionAttributes.getWorkflowId:()Ljava/lang/String;
      16: invokevirtual #115                // Method com/amazonaws/services/simpleworkflow/model/RequestCancelExternalWorkflowExecutionDecisionAttributes.setWorkflowId:(Ljava/lang/String;)V
      19: aload_1
      20: aload_0
      21: getfield      #119                // Field runId:Ljava/lang/String;
      24: invokevirtual #121                // Method com/amazonaws/services/simpleworkflow/model/RequestCancelExternalWorkflowExecutionDecisionAttributes.setRunId:(Ljava/lang/String;)V
      27: new           #124                // class com/amazonaws/services/simpleworkflow/model/Decision
      30: dup
      31: invokespecial #126                // Method com/amazonaws/services/simpleworkflow/model/Decision."<init>":()V
      34: astore_2
      35: aload_2
      36: aload_1
      37: invokevirtual #127                // Method com/amazonaws/services/simpleworkflow/model/Decision.setRequestCancelExternalWorkflowExecutionDecisionAttributes:(Lcom/amazonaws/services/simpleworkflow/model/RequestCancelExternalWorkflowExecutionDecisionAttributes;)V
      40: aload_2
      41: getstatic     #131                // Field com/amazonaws/services/simpleworkflow/model/DecisionType.RequestCancelExternalWorkflowExecution:Lcom/amazonaws/services/simpleworkflow/model/DecisionType;
      44: invokevirtual #137                // Method com/amazonaws/services/simpleworkflow/model/DecisionType.toString:()Ljava/lang/String;
      47: invokevirtual #138                // Method com/amazonaws/services/simpleworkflow/model/Decision.setDecisionType:(Ljava/lang/String;)V
      50: aload_2
      51: areturn

  private com.amazonaws.services.simpleworkflow.model.Decision createStartChildWorkflowExecutionDecision();
    Code:
       0: new           #124                // class com/amazonaws/services/simpleworkflow/model/Decision
       3: dup
       4: invokespecial #126                // Method com/amazonaws/services/simpleworkflow/model/Decision."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #18                 // Field startAttributes:Lcom/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionDecisionAttributes;
      13: invokevirtual #145                // Method com/amazonaws/services/simpleworkflow/model/Decision.setStartChildWorkflowExecutionDecisionAttributes:(Lcom/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionDecisionAttributes;)V
      16: aload_1
      17: getstatic     #149                // Field com/amazonaws/services/simpleworkflow/model/DecisionType.StartChildWorkflowExecution:Lcom/amazonaws/services/simpleworkflow/model/DecisionType;
      20: invokevirtual #137                // Method com/amazonaws/services/simpleworkflow/model/DecisionType.toString:()Ljava/lang/String;
      23: invokevirtual #138                // Method com/amazonaws/services/simpleworkflow/model/Decision.setDecisionType:(Ljava/lang/String;)V
      26: aload_1
      27: areturn

  static int[] $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState();
    Code:
       0: getstatic     #152                // Field $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:[I
       3: dup
       4: ifnull        8
       7: areturn
       8: pop
       9: invokestatic  #154                // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.values:()[Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      12: arraylength
      13: newarray       int
      15: astore_0
      16: aload_0
      17: getstatic     #158                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_AFTER_INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      20: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      23: bipush        6
      25: iastore
      26: goto          30
      29: pop
      30: aload_0
      31: getstatic     #75                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_AFTER_STARTED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      34: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      37: bipush        7
      39: iastore
      40: goto          44
      43: pop
      44: aload_0
      45: getstatic     #161                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_BEFORE_INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      48: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      51: iconst_3
      52: iastore
      53: goto          57
      56: pop
      57: aload_0
      58: getstatic     #54                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELLATION_DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      61: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      64: bipush        8
      66: iastore
      67: goto          71
      70: pop
      71: aload_0
      72: getstatic     #97                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      75: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      78: bipush        10
      80: iastore
      81: goto          85
      84: pop
      85: aload_0
      86: getstatic     #164                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED_AFTER_CANCELLATION_DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      89: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      92: bipush        9
      94: iastore
      95: goto          99
      98: pop
      99: aload_0
     100: getstatic     #167                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CREATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
     103: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
     106: iconst_1
     107: iastore
     108: goto          112
     111: pop
     112: aload_0
     113: getstatic     #170                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
     116: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
     119: iconst_2
     120: iastore
     121: goto          125
     124: pop
     125: aload_0
     126: getstatic     #173                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
     129: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
     132: iconst_4
     133: iastore
     134: goto          138
     137: pop
     138: aload_0
     139: getstatic     #72                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.STARTED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
     142: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
     145: iconst_5
     146: iastore
     147: goto          151
     150: pop
     151: aload_0
     152: dup
     153: putstatic     #152                // Field $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:[I
     156: areturn
    Exception table:
       from    to  target type
          16    26    29   Class java/lang/NoSuchFieldError
          30    40    43   Class java/lang/NoSuchFieldError
          44    53    56   Class java/lang/NoSuchFieldError
          57    67    70   Class java/lang/NoSuchFieldError
          71    81    84   Class java/lang/NoSuchFieldError
          85    95    98   Class java/lang/NoSuchFieldError
          99   108   111   Class java/lang/NoSuchFieldError
         112   121   124   Class java/lang/NoSuchFieldError
         125   134   137   Class java/lang/NoSuchFieldError
         138   147   150   Class java/lang/NoSuchFieldError
}
