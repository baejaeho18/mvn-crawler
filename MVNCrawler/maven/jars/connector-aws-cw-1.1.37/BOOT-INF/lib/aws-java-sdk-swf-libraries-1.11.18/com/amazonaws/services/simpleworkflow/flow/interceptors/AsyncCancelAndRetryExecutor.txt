Compiled from "AsyncCancelAndRetryExecutor.java"
public class com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor implements com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncExecutor {
  private com.amazonaws.services.simpleworkflow.flow.core.Cancelable currentCommandTryCatchFinally;

  private com.amazonaws.services.simpleworkflow.flow.core.Settable<java.lang.Void> commandDone;

  private boolean cancelledDueToRetryRequest;

  protected com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRunnable command;

  public com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: return

  public void execute(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRunnable);
    Code:
       0: aload_0
       1: getfield      #29                 // Field currentCommandTryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/Cancelable;
       4: ifnull        17
       7: new           #31                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #33                 // String Already executing a command
      13: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #38                 // Field command:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;
      22: aload_0
      23: new           #40                 // class com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor$1
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #42                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor$1."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;)V
      32: putfield      #29                 // Field currentCommandTryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/Cancelable;
      35: return

  public void cancelCurrentAndReexecute();
    Code:
       0: aload_0
       1: getfield      #29                 // Field currentCommandTryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/Cancelable;
       4: ifnull        53
       7: aload_0
       8: getfield      #48                 // Field commandDone:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
      11: ifnonnull     53
      14: aload_0
      15: new           #50                 // class com/amazonaws/services/simpleworkflow/flow/core/Settable
      18: dup
      19: invokespecial #52                 // Method com/amazonaws/services/simpleworkflow/flow/core/Settable."<init>":()V
      22: putfield      #48                 // Field commandDone:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
      25: aload_0
      26: getfield      #29                 // Field currentCommandTryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/Cancelable;
      29: aconst_null
      30: invokeinterface #53,  2           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/Cancelable.cancel:(Ljava/lang/Throwable;)V
      35: new           #59                 // class com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor$2
      38: aload_0
      39: iconst_1
      40: anewarray     #61                 // class com/amazonaws/services/simpleworkflow/flow/core/Promise
      43: dup
      44: iconst_0
      45: aload_0
      46: getfield      #48                 // Field commandDone:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
      49: aastore
      50: invokespecial #63                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor$2."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;)V
      53: return

  static com.amazonaws.services.simpleworkflow.flow.core.Settable access$0(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor);
    Code:
       0: aload_0
       1: getfield      #48                 // Field commandDone:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
       4: areturn

  static void access$1(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #70                 // Field cancelledDueToRetryRequest:Z
       5: return

  static boolean access$2(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor);
    Code:
       0: aload_0
       1: getfield      #70                 // Field cancelledDueToRetryRequest:Z
       4: ireturn

  static void access$3(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor, com.amazonaws.services.simpleworkflow.flow.core.Settable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field commandDone:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
       5: return

  static void access$4(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor, com.amazonaws.services.simpleworkflow.flow.core.Cancelable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field currentCommandTryCatchFinally:Lcom/amazonaws/services/simpleworkflow/flow/core/Cancelable;
       5: return
}
