Compiled from "HistoryHelper.java"
class com.amazonaws.services.simpleworkflow.flow.worker.HistoryHelper$EventsIterator implements java.util.Iterator<com.amazonaws.services.simpleworkflow.model.HistoryEvent> {
  private final java.util.Iterator<com.amazonaws.services.simpleworkflow.model.DecisionTask> decisionTasks;

  private com.amazonaws.services.simpleworkflow.model.DecisionTask decisionTask;

  private java.util.List<com.amazonaws.services.simpleworkflow.model.HistoryEvent> events;

  private int index;

  final com.amazonaws.services.simpleworkflow.flow.worker.HistoryHelper this$0;

  public com.amazonaws.services.simpleworkflow.flow.worker.HistoryHelper$EventsIterator(java.util.Iterator<com.amazonaws.services.simpleworkflow.model.DecisionTask>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/HistoryHelper;
       5: aload_0
       6: invokespecial #27                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #30                 // Field decisionTasks:Ljava/util/Iterator;
      14: aload_2
      15: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          77
      23: aload_0
      24: aload_2
      25: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #40                 // class com/amazonaws/services/simpleworkflow/model/DecisionTask
      33: putfield      #42                 // Field decisionTask:Lcom/amazonaws/services/simpleworkflow/model/DecisionTask;
      36: aload_0
      37: aload_0
      38: getfield      #42                 // Field decisionTask:Lcom/amazonaws/services/simpleworkflow/model/DecisionTask;
      41: invokevirtual #44                 // Method com/amazonaws/services/simpleworkflow/model/DecisionTask.getEvents:()Ljava/util/List;
      44: putfield      #48                 // Field events:Ljava/util/List;
      47: invokestatic  #50                 // Method com/amazonaws/services/simpleworkflow/flow/worker/HistoryHelper.access$0:()Lorg/apache/commons/logging/Log;
      50: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      55: ifeq          82
      58: invokestatic  #50                 // Method com/amazonaws/services/simpleworkflow/flow/worker/HistoryHelper.access$0:()Lorg/apache/commons/logging/Log;
      61: aload_0
      62: getfield      #48                 // Field events:Ljava/util/List;
      65: iconst_1
      66: invokestatic  #61                 // Method com/amazonaws/services/simpleworkflow/flow/common/WorkflowExecutionUtils.prettyPrintHistory:(Ljava/lang/Iterable;Z)Ljava/lang/String;
      69: invokeinterface #67,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      74: goto          82
      77: aload_0
      78: aconst_null
      79: putfield      #42                 // Field decisionTask:Lcom/amazonaws/services/simpleworkflow/model/DecisionTask;
      82: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #42                 // Field decisionTask:Lcom/amazonaws/services/simpleworkflow/model/DecisionTask;
       4: ifnull        37
       7: aload_0
       8: getfield      #77                 // Field index:I
      11: aload_0
      12: getfield      #48                 // Field events:Ljava/util/List;
      15: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      20: if_icmplt     35
      23: aload_0
      24: getfield      #30                 // Field decisionTasks:Ljava/util/Iterator;
      27: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public com.amazonaws.services.simpleworkflow.model.HistoryEvent next();
    Code:
       0: aload_0
       1: getfield      #77                 // Field index:I
       4: aload_0
       5: getfield      #48                 // Field events:Ljava/util/List;
       8: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      13: if_icmpne     75
      16: aload_0
      17: aload_0
      18: getfield      #30                 // Field decisionTasks:Ljava/util/Iterator;
      21: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #40                 // class com/amazonaws/services/simpleworkflow/model/DecisionTask
      29: putfield      #42                 // Field decisionTask:Lcom/amazonaws/services/simpleworkflow/model/DecisionTask;
      32: aload_0
      33: aload_0
      34: getfield      #42                 // Field decisionTask:Lcom/amazonaws/services/simpleworkflow/model/DecisionTask;
      37: invokevirtual #44                 // Method com/amazonaws/services/simpleworkflow/model/DecisionTask.getEvents:()Ljava/util/List;
      40: putfield      #48                 // Field events:Ljava/util/List;
      43: invokestatic  #50                 // Method com/amazonaws/services/simpleworkflow/flow/worker/HistoryHelper.access$0:()Lorg/apache/commons/logging/Log;
      46: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      51: ifeq          70
      54: invokestatic  #50                 // Method com/amazonaws/services/simpleworkflow/flow/worker/HistoryHelper.access$0:()Lorg/apache/commons/logging/Log;
      57: aload_0
      58: getfield      #48                 // Field events:Ljava/util/List;
      61: iconst_1
      62: invokestatic  #61                 // Method com/amazonaws/services/simpleworkflow/flow/common/WorkflowExecutionUtils.prettyPrintHistory:(Ljava/lang/Iterable;Z)Ljava/lang/String;
      65: invokeinterface #67,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      70: aload_0
      71: iconst_0
      72: putfield      #77                 // Field index:I
      75: aload_0
      76: getfield      #48                 // Field events:Ljava/util/List;
      79: aload_0
      80: dup
      81: getfield      #77                 // Field index:I
      84: dup_x1
      85: iconst_1
      86: iadd
      87: putfield      #77                 // Field index:I
      90: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      95: checkcast     #90                 // class com/amazonaws/services/simpleworkflow/model/HistoryEvent
      98: areturn

  public com.amazonaws.services.simpleworkflow.model.DecisionTask getDecisionTask();
    Code:
       0: aload_0
       1: getfield      #42                 // Field decisionTask:Lcom/amazonaws/services/simpleworkflow/model/DecisionTask;
       4: areturn

  public java.util.List<com.amazonaws.services.simpleworkflow.model.HistoryEvent> getEvents();
    Code:
       0: aload_0
       1: getfield      #48                 // Field events:Ljava/util/List;
       4: areturn

  public boolean isNextDecisionTimedOut();
    Code:
       0: aload_0
       1: getfield      #77                 // Field index:I
       4: istore_1
       5: goto          57
       8: aload_0
       9: getfield      #48                 // Field events:Ljava/util/List;
      12: iload_1
      13: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      18: checkcast     #90                 // class com/amazonaws/services/simpleworkflow/model/HistoryEvent
      21: astore_2
      22: aload_2
      23: invokevirtual #96                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      26: invokestatic  #100                // Method com/amazonaws/services/simpleworkflow/model/EventType.fromValue:(Ljava/lang/String;)Lcom/amazonaws/services/simpleworkflow/model/EventType;
      29: astore_3
      30: aload_3
      31: getstatic     #106                // Field com/amazonaws/services/simpleworkflow/model/EventType.DecisionTaskTimedOut:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      34: invokevirtual #110                // Method com/amazonaws/services/simpleworkflow/model/EventType.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: aload_3
      43: getstatic     #114                // Field com/amazonaws/services/simpleworkflow/model/EventType.DecisionTaskCompleted:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      46: invokevirtual #110                // Method com/amazonaws/services/simpleworkflow/model/EventType.equals:(Ljava/lang/Object;)Z
      49: ifeq          54
      52: iconst_0
      53: ireturn
      54: iinc          1, 1
      57: iload_1
      58: aload_0
      59: getfield      #48                 // Field events:Ljava/util/List;
      62: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      67: if_icmplt     8
      70: aload_0
      71: getfield      #30                 // Field decisionTasks:Ljava/util/Iterator;
      74: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifne          84
      82: iconst_0
      83: ireturn
      84: aload_0
      85: aload_0
      86: getfield      #30                 // Field decisionTasks:Ljava/util/Iterator;
      89: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      94: checkcast     #40                 // class com/amazonaws/services/simpleworkflow/model/DecisionTask
      97: putfield      #42                 // Field decisionTask:Lcom/amazonaws/services/simpleworkflow/model/DecisionTask;
     100: aload_0
     101: getfield      #42                 // Field decisionTask:Lcom/amazonaws/services/simpleworkflow/model/DecisionTask;
     104: invokevirtual #44                 // Method com/amazonaws/services/simpleworkflow/model/DecisionTask.getEvents:()Ljava/util/List;
     107: astore_2
     108: invokestatic  #50                 // Method com/amazonaws/services/simpleworkflow/flow/worker/HistoryHelper.access$0:()Lorg/apache/commons/logging/Log;
     111: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     116: ifeq          132
     119: invokestatic  #50                 // Method com/amazonaws/services/simpleworkflow/flow/worker/HistoryHelper.access$0:()Lorg/apache/commons/logging/Log;
     122: aload_2
     123: iconst_1
     124: invokestatic  #61                 // Method com/amazonaws/services/simpleworkflow/flow/common/WorkflowExecutionUtils.prettyPrintHistory:(Ljava/lang/Iterable;Z)Ljava/lang/String;
     127: invokeinterface #67,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     132: aload_0
     133: getfield      #48                 // Field events:Ljava/util/List;
     136: aload_2
     137: invokeinterface #117,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     142: pop
     143: goto          57

  public void remove();
    Code:
       0: new           #127                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #129                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #130                // Method next:()Lcom/amazonaws/services/simpleworkflow/model/HistoryEvent;
       4: areturn
}
