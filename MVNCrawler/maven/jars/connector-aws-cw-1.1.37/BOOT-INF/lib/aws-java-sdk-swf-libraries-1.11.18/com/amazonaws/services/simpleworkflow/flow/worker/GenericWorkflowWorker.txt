Compiled from "GenericWorkflowWorker.java"
public class com.amazonaws.services.simpleworkflow.flow.worker.GenericWorkflowWorker extends com.amazonaws.services.simpleworkflow.flow.worker.GenericWorker {
  private static final org.apache.commons.logging.Log log;

  private static final java.lang.String THREAD_NAME_PREFIX;

  private com.amazonaws.services.simpleworkflow.flow.generic.WorkflowDefinitionFactoryFactory workflowDefinitionFactoryFactory;

  static {};
    Code:
       0: ldc           #1                  // class com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker
       2: invokestatic  #17                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #23                 // Field log:Lorg/apache/commons/logging/Log;
       8: return

  public com.amazonaws.services.simpleworkflow.flow.worker.GenericWorkflowWorker();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker."<init>":()V
       4: aload_0
       5: invokestatic  #31                 // Method java/lang/management/ManagementFactory.getRuntimeMXBean:()Ljava/lang/management/RuntimeMXBean;
       8: invokeinterface #37,  1           // InterfaceMethod java/lang/management/RuntimeMXBean.getName:()Ljava/lang/String;
      13: invokevirtual #43                 // Method setIdentity:(Ljava/lang/String;)V
      16: return

  public com.amazonaws.services.simpleworkflow.flow.worker.GenericWorkflowWorker(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #51                 // Method setService:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #55                 // Method setDomain:(Ljava/lang/String;)V
      14: aload_0
      15: aload_3
      16: invokevirtual #58                 // Method setTaskListToPoll:(Ljava/lang/String;)V
      19: return

  public com.amazonaws.services.simpleworkflow.flow.generic.WorkflowDefinitionFactoryFactory getWorkflowDefinitionFactoryFactory();
    Code:
       0: aload_0
       1: getfield      #67                 // Field workflowDefinitionFactoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory;
       4: areturn

  public void setWorkflowDefinitionFactoryFactory(com.amazonaws.services.simpleworkflow.flow.generic.WorkflowDefinitionFactoryFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field workflowDefinitionFactoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory;
       5: return

  protected com.amazonaws.services.simpleworkflow.flow.worker.DecisionTaskPoller createWorkflowPoller();
    Code:
       0: new           #73                 // class com/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskPoller
       3: dup
       4: invokespecial #75                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskPoller."<init>":()V
       7: astore_1
       8: aload_1
       9: areturn

  protected void checkRequredProperties();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #67                 // Field workflowDefinitionFactoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory;
       5: ldc           #79                 // String workflowDefinitionFactoryFactory
       7: invokevirtual #80                 // Method checkRequiredProperty:(Ljava/lang/Object;Ljava/lang/String;)V
      10: return

  protected java.lang.String getPollThreadNamePrefix();
    Code:
       0: new           #85                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #10                 // String SWF Decider
       6: invokespecial #87                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: invokevirtual #89                 // Method getTaskListToPoll:()Ljava/lang/String;
      13: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #96                 // String
      18: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  protected com.amazonaws.services.simpleworkflow.flow.worker.TaskPoller createPoller();
    Code:
       0: new           #73                 // class com/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskPoller
       3: dup
       4: invokespecial #75                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskPoller."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #103                // class com/amazonaws/services/simpleworkflow/flow/worker/AsyncDecisionTaskHandler
      12: dup
      13: aload_0
      14: getfield      #67                 // Field workflowDefinitionFactoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory;
      17: invokespecial #105                // Method com/amazonaws/services/simpleworkflow/flow/worker/AsyncDecisionTaskHandler."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory;)V
      20: invokevirtual #107                // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskPoller.setDecisionTaskHandler:(Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskHandler;)V
      23: aload_1
      24: aload_0
      25: invokevirtual #111                // Method getDomain:()Ljava/lang/String;
      28: invokevirtual #114                // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskPoller.setDomain:(Ljava/lang/String;)V
      31: aload_1
      32: aload_0
      33: invokevirtual #115                // Method getIdentity:()Ljava/lang/String;
      36: invokevirtual #118                // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskPoller.setIdentity:(Ljava/lang/String;)V
      39: aload_1
      40: aload_0
      41: invokevirtual #119                // Method getService:()Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;
      44: invokevirtual #123                // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskPoller.setService:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;)V
      47: aload_1
      48: aload_0
      49: invokevirtual #89                 // Method getTaskListToPoll:()Ljava/lang/String;
      52: invokevirtual #124                // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionTaskPoller.setTaskListToPoll:(Ljava/lang/String;)V
      55: aload_1
      56: areturn

  public void registerTypesToPoll();
    Code:
       0: aload_0
       1: getfield      #127                // Field service:Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;
       4: aload_0
       5: getfield      #129                // Field domain:Ljava/lang/String;
       8: aload_0
       9: invokevirtual #89                 // Method getTaskListToPoll:()Ljava/lang/String;
      12: aload_0
      13: getfield      #67                 // Field workflowDefinitionFactoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory;
      16: invokestatic  #131                // Method registerWorkflowTypes:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory;)V
      19: return

  public java.lang.String toString();
    Code:
       0: new           #85                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #135                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #141                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: invokestatic  #146                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokespecial #87                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      17: ldc           #152                // String [super=
      19: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokespecial #154                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.toString:()Ljava/lang/String;
      26: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #155                // String , workflowDefinitionFactoryFactory=
      31: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #67                 // Field workflowDefinitionFactoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory;
      38: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #160                // String ]
      43: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  public static void registerWorkflowTypes(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, java.lang.String, com.amazonaws.services.simpleworkflow.flow.generic.WorkflowDefinitionFactoryFactory);
    Code:
       0: aload_3
       1: invokevirtual #162                // Method com/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory.getWorkflowTypesToRegister:()Ljava/lang/Iterable;
       4: invokeinterface #168,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: goto          103
      14: aload         5
      16: invokeinterface #174,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: checkcast     #180                // class com/amazonaws/services/simpleworkflow/model/WorkflowType
      24: astore        4
      26: aload_3
      27: aload         4
      29: invokevirtual #182                // Method com/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory.getWorkflowDefinitionFactory:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;)Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactory;
      32: astore        6
      34: aload         6
      36: invokevirtual #186                // Method com/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactory.getWorkflowRegistrationOptions:()Lcom/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions;
      39: astore        7
      41: aload         7
      43: ifnull        103
      46: aload         6
      48: invokevirtual #192                // Method com/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactory.getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      51: astore        8
      53: aload_0
      54: aload_1
      55: aload         8
      57: aload         7
      59: aload_2
      60: invokestatic  #196                // Method registerWorkflowType:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;Lcom/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions;Ljava/lang/String;)V
      63: goto          103
      66: pop
      67: getstatic     #23                 // Field log:Lorg/apache/commons/logging/Log;
      70: invokeinterface #200,  1          // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      75: ifeq          103
      78: getstatic     #23                 // Field log:Lorg/apache/commons/logging/Log;
      81: new           #85                 // class java/lang/StringBuilder
      84: dup
      85: ldc           #206                // String Workflow Type already registered:
      87: invokespecial #87                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      90: aload         8
      92: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokeinterface #208,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     103: aload         5
     105: invokeinterface #212,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifne          14
     113: return
    Exception table:
       from    to  target type
          53    63    66   Class com/amazonaws/services/simpleworkflow/model/TypeAlreadyExistsException

  public static void registerWorkflowType(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowType, com.amazonaws.services.simpleworkflow.flow.WorkflowTypeRegistrationOptions, java.lang.String);
    Code:
       0: new           #230                // class com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest
       3: dup
       4: invokespecial #232                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest."<init>":()V
       7: astore        5
       9: aload         5
      11: aload_1
      12: invokevirtual #233                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setDomain:(Ljava/lang/String;)V
      15: aload         5
      17: aload_2
      18: invokevirtual #234                // Method com/amazonaws/services/simpleworkflow/model/WorkflowType.getName:()Ljava/lang/String;
      21: invokevirtual #235                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setName:(Ljava/lang/String;)V
      24: aload         5
      26: aload_2
      27: invokevirtual #238                // Method com/amazonaws/services/simpleworkflow/model/WorkflowType.getVersion:()Ljava/lang/String;
      30: invokevirtual #241                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setVersion:(Ljava/lang/String;)V
      33: aload_3
      34: invokevirtual #244                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.getDefaultTaskList:()Ljava/lang/String;
      37: astore        6
      39: aload         6
      41: ifnonnull     51
      44: aload         4
      46: astore        6
      48: goto          64
      51: aload         6
      53: ldc           #247                // String NO_DEFAULT_TASK_LIST
      55: invokevirtual #249                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          64
      61: aconst_null
      62: astore        6
      64: aload         6
      66: ifnull        94
      69: aload         6
      71: invokevirtual #253                // Method java/lang/String.isEmpty:()Z
      74: ifne          94
      77: aload         5
      79: new           #256                // class com/amazonaws/services/simpleworkflow/model/TaskList
      82: dup
      83: invokespecial #258                // Method com/amazonaws/services/simpleworkflow/model/TaskList."<init>":()V
      86: aload         6
      88: invokevirtual #259                // Method com/amazonaws/services/simpleworkflow/model/TaskList.withName:(Ljava/lang/String;)Lcom/amazonaws/services/simpleworkflow/model/TaskList;
      91: invokevirtual #263                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setDefaultTaskList:(Lcom/amazonaws/services/simpleworkflow/model/TaskList;)V
      94: aload         5
      96: aload_3
      97: invokevirtual #267                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.getDefaultChildPolicy:()Lcom/amazonaws/services/simpleworkflow/model/ChildPolicy;
     100: invokevirtual #271                // Method com/amazonaws/services/simpleworkflow/model/ChildPolicy.toString:()Ljava/lang/String;
     103: invokevirtual #274                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setDefaultChildPolicy:(Ljava/lang/String;)V
     106: aload         5
     108: aload_3
     109: invokevirtual #277                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.getDefaultTaskStartToCloseTimeoutSeconds:()J
     112: invokestatic  #281                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     115: invokestatic  #286                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowHelpers.secondsToDuration:(Ljava/lang/Long;)Ljava/lang/String;
     118: invokevirtual #292                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setDefaultTaskStartToCloseTimeout:(Ljava/lang/String;)V
     121: aload         5
     123: aload_3
     124: invokevirtual #295                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.getDefaultExecutionStartToCloseTimeoutSeconds:()J
     127: invokestatic  #281                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     130: invokestatic  #286                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowHelpers.secondsToDuration:(Ljava/lang/Long;)Ljava/lang/String;
     133: invokevirtual #298                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setDefaultExecutionStartToCloseTimeout:(Ljava/lang/String;)V
     136: aload         5
     138: aload_3
     139: invokevirtual #301                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.getDefaultTaskPriority:()I
     142: invokestatic  #305                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     145: invokestatic  #310                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowHelpers.taskPriorityToString:(Ljava/lang/Integer;)Ljava/lang/String;
     148: invokevirtual #314                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setDefaultTaskPriority:(Ljava/lang/String;)V
     151: aload         5
     153: aload_3
     154: invokevirtual #317                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.getDefaultLambdaRole:()Ljava/lang/String;
     157: invokevirtual #320                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setDefaultLambdaRole:(Ljava/lang/String;)V
     160: aload_3
     161: invokevirtual #323                // Method com/amazonaws/services/simpleworkflow/flow/WorkflowTypeRegistrationOptions.getDescription:()Ljava/lang/String;
     164: astore        7
     166: aload         7
     168: ifnull        178
     171: aload         5
     173: aload         7
     175: invokevirtual #326                // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.setDescription:(Ljava/lang/String;)V
     178: aload_0
     179: aload         5
     181: invokeinterface #329,  2          // InterfaceMethod com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow.registerWorkflowType:(Lcom/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest;)V
     186: return
}
