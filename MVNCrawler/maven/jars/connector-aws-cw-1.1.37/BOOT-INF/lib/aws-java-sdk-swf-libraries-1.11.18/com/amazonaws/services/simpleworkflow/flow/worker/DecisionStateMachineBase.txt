Compiled from "DecisionStateMachineBase.java"
abstract class com.amazonaws.services.simpleworkflow.flow.worker.DecisionStateMachineBase implements com.amazonaws.services.simpleworkflow.flow.worker.DecisionStateMachine {
  protected com.amazonaws.services.simpleworkflow.flow.worker.DecisionState state;

  protected java.util.List<java.lang.String> stateHistory;

  private final com.amazonaws.services.simpleworkflow.flow.worker.DecisionId id;

  private static int[] $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState;

  public com.amazonaws.services.simpleworkflow.flow.worker.DecisionStateMachineBase(com.amazonaws.services.simpleworkflow.flow.worker.DecisionId);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #24                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CREATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       8: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      11: aload_0
      12: new           #31                 // class java/util/ArrayList
      15: dup
      16: invokespecial #33                 // Method java/util/ArrayList."<init>":()V
      19: putfield      #34                 // Field stateHistory:Ljava/util/List;
      22: aload_0
      23: aload_1
      24: putfield      #36                 // Field id:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionId;
      27: aload_0
      28: getfield      #34                 // Field stateHistory:Ljava/util/List;
      31: aload_0
      32: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      35: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      38: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: return

  protected com.amazonaws.services.simpleworkflow.flow.worker.DecisionStateMachineBase(com.amazonaws.services.simpleworkflow.flow.worker.DecisionId, com.amazonaws.services.simpleworkflow.flow.worker.DecisionState);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #24                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CREATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       8: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      11: aload_0
      12: new           #31                 // class java/util/ArrayList
      15: dup
      16: invokespecial #33                 // Method java/util/ArrayList."<init>":()V
      19: putfield      #34                 // Field stateHistory:Ljava/util/List;
      22: aload_0
      23: aload_1
      24: putfield      #36                 // Field id:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionId;
      27: aload_0
      28: aload_2
      29: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      32: aload_0
      33: getfield      #34                 // Field stateHistory:Ljava/util/List;
      36: aload_2
      37: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      40: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: return

  public com.amazonaws.services.simpleworkflow.flow.worker.DecisionState getState();
    Code:
       0: aload_0
       1: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       4: areturn

  public com.amazonaws.services.simpleworkflow.flow.worker.DecisionId getId();
    Code:
       0: aload_0
       1: getfield      #36                 // Field id:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionId;
       4: areturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       4: getstatic     #59                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       7: if_acmpeq     22
      10: aload_0
      11: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      14: getstatic     #62                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED_AFTER_CANCELLATION_DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      17: if_acmpeq     22
      20: iconst_0
      21: ireturn
      22: iconst_1
      23: ireturn

  public void handleDecisionTaskStartedEvent();
    Code:
       0: invokestatic  #67                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
       3: aload_0
       4: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
       7: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 1
                     1: 28
               default: 64
          }
      28: aload_0
      29: getfield      #34                 // Field stateHistory:Ljava/util/List;
      32: ldc           #74                 // String handleDecisionTaskStartedEvent
      34: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: getstatic     #75                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      44: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      47: aload_0
      48: getfield      #34                 // Field stateHistory:Ljava/util/List;
      51: aload_0
      52: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      55: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      58: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: return

  public void cancel(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #34                 // Field stateHistory:Ljava/util/List;
       4: ldc           #80                 // String cancel
       6: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: invokestatic  #67                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
      15: aload_0
      16: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      19: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      22: iaload
      23: tableswitch   { // 1 to 4
                     1: 52
                     2: 72
                     3: 92
                     4: 82
               default: 92
          }
      52: aload_0
      53: getstatic     #59                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      56: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      59: aload_1
      60: ifnull        96
      63: aload_1
      64: invokeinterface #81,  1           // InterfaceMethod java/lang/Runnable.run:()V
      69: goto          96
      72: aload_0
      73: getstatic     #86                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_BEFORE_INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      76: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      79: goto          96
      82: aload_0
      83: getstatic     #89                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_AFTER_INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      86: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      89: goto          96
      92: aload_0
      93: invokevirtual #92                 // Method failStateTransition:()V
      96: aload_0
      97: getfield      #34                 // Field stateHistory:Ljava/util/List;
     100: aload_0
     101: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
     104: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
     107: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: return

  public void handleInitiatedEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: getfield      #34                 // Field stateHistory:Ljava/util/List;
       4: ldc           #99                 // String handleInitiatedEvent
       6: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: invokestatic  #67                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
      15: aload_0
      16: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      19: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      22: iaload
      23: tableswitch   { // 2 to 3
                     2: 44
                     3: 54
               default: 64
          }
      44: aload_0
      45: getstatic     #100                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      48: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      51: goto          68
      54: aload_0
      55: getstatic     #89                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_AFTER_INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      58: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      61: goto          68
      64: aload_0
      65: invokevirtual #92                 // Method failStateTransition:()V
      68: aload_0
      69: getfield      #34                 // Field stateHistory:Ljava/util/List;
      72: aload_0
      73: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      76: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      79: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      84: pop
      85: return

  public void handleInitiationFailedEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: getfield      #34                 // Field stateHistory:Ljava/util/List;
       4: ldc           #106                // String handleInitiationFailedEvent
       6: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: invokestatic  #67                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
      15: aload_0
      16: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      19: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      22: iaload
      23: tableswitch   { // 2 to 4
                     2: 48
                     3: 48
                     4: 48
               default: 58
          }
      48: aload_0
      49: getstatic     #59                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      52: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      55: goto          62
      58: aload_0
      59: invokevirtual #92                 // Method failStateTransition:()V
      62: aload_0
      63: getfield      #34                 // Field stateHistory:Ljava/util/List;
      66: aload_0
      67: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      70: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      73: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: return

  public void handleStartedEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: getfield      #34                 // Field stateHistory:Ljava/util/List;
       4: ldc           #108                // String handleStartedEvent
       6: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: return

  public void handleCompletionEvent();
    Code:
       0: aload_0
       1: getfield      #34                 // Field stateHistory:Ljava/util/List;
       4: ldc           #110                // String handleCompletionEvent
       6: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: invokestatic  #67                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
      15: aload_0
      16: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      19: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      22: iaload
      23: tableswitch   { // 4 to 8
                     4: 56
                     5: 76
                     6: 56
                     7: 76
                     8: 66
               default: 76
          }
      56: aload_0
      57: getstatic     #59                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      60: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      63: goto          80
      66: aload_0
      67: getstatic     #62                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED_AFTER_CANCELLATION_DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      70: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      73: goto          80
      76: aload_0
      77: invokevirtual #92                 // Method failStateTransition:()V
      80: aload_0
      81: getfield      #34                 // Field stateHistory:Ljava/util/List;
      84: aload_0
      85: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      88: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      91: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: return

  public void handleCancellationInitiatedEvent();
    Code:
       0: aload_0
       1: getfield      #34                 // Field stateHistory:Ljava/util/List;
       4: ldc           #112                // String handleCancellationInitiatedEvent
       6: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: invokestatic  #67                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
      15: aload_0
      16: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      19: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      22: iaload
      23: tableswitch   { // 8 to 8
                     8: 40
               default: 43
          }
      40: goto          47
      43: aload_0
      44: invokevirtual #92                 // Method failStateTransition:()V
      47: aload_0
      48: getfield      #34                 // Field stateHistory:Ljava/util/List;
      51: aload_0
      52: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      55: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      58: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: return

  public void handleCancellationFailureEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: getfield      #34                 // Field stateHistory:Ljava/util/List;
       4: ldc           #114                // String handleCancellationFailureEvent
       6: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: invokestatic  #67                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
      15: aload_0
      16: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      19: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      22: iaload
      23: tableswitch   { // 9 to 9
                     9: 40
               default: 50
          }
      40: aload_0
      41: getstatic     #59                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      44: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      47: goto          54
      50: aload_0
      51: invokevirtual #92                 // Method failStateTransition:()V
      54: aload_0
      55: getfield      #34                 // Field stateHistory:Ljava/util/List;
      58: aload_0
      59: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      62: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      65: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: return

  public void handleCancellationEvent();
    Code:
       0: aload_0
       1: getfield      #34                 // Field stateHistory:Ljava/util/List;
       4: ldc           #116                // String handleCancellationEvent
       6: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: invokestatic  #67                 // Method $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:()[I
      15: aload_0
      16: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      19: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      22: iaload
      23: tableswitch   { // 8 to 8
                     8: 40
               default: 50
          }
      40: aload_0
      41: getstatic     #59                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      44: putfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      47: goto          54
      50: aload_0
      51: invokevirtual #92                 // Method failStateTransition:()V
      54: aload_0
      55: getfield      #34                 // Field stateHistory:Ljava/util/List;
      58: aload_0
      59: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      62: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.toString:()Ljava/lang/String;
      65: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: return

  public java.lang.String toString();
    Code:
       0: new           #117                // class java/lang/StringBuilder
       3: dup
       4: ldc           #119                // String DecisionStateMachineBase [id=
       6: invokespecial #121                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #36                 // Field id:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionId;
      13: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: ldc           #128                // String , state=
      18: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #29                 // Field state:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      25: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #133                // String , isDone()=
      30: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #135                // Method isDone:()Z
      37: invokevirtual #137                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      40: ldc           #140                // String , stateHistory=
      42: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: getfield      #34                 // Field stateHistory:Ljava/util/List;
      49: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #142                // String ]
      54: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #144                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: areturn

  protected void failStateTransition();
    Code:
       0: new           #145                // class java/lang/IllegalStateException
       3: dup
       4: new           #117                // class java/lang/StringBuilder
       7: dup
       8: ldc           #147                // String id=
      10: invokespecial #121                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      13: aload_0
      14: getfield      #36                 // Field id:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionId;
      17: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #149                // String , transitions=
      22: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #34                 // Field stateHistory:Ljava/util/List;
      29: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #144                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #151                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      38: athrow

  static int[] $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState();
    Code:
       0: getstatic     #152                // Field $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:[I
       3: dup
       4: ifnull        8
       7: areturn
       8: pop
       9: invokestatic  #154                // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.values:()[Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      12: arraylength
      13: newarray       int
      15: astore_0
      16: aload_0
      17: getstatic     #89                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_AFTER_INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      20: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      23: bipush        6
      25: iastore
      26: goto          30
      29: pop
      30: aload_0
      31: getstatic     #158                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_AFTER_STARTED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      34: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      37: bipush        7
      39: iastore
      40: goto          44
      43: pop
      44: aload_0
      45: getstatic     #86                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELED_BEFORE_INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      48: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      51: iconst_3
      52: iastore
      53: goto          57
      56: pop
      57: aload_0
      58: getstatic     #161                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CANCELLATION_DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      61: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      64: bipush        8
      66: iastore
      67: goto          71
      70: pop
      71: aload_0
      72: getstatic     #59                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      75: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      78: bipush        10
      80: iastore
      81: goto          85
      84: pop
      85: aload_0
      86: getstatic     #62                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.COMPLETED_AFTER_CANCELLATION_DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
      89: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
      92: bipush        9
      94: iastore
      95: goto          99
      98: pop
      99: aload_0
     100: getstatic     #24                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.CREATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
     103: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
     106: iconst_1
     107: iastore
     108: goto          112
     111: pop
     112: aload_0
     113: getstatic     #75                 // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.DECISION_SENT:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
     116: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
     119: iconst_2
     120: iastore
     121: goto          125
     124: pop
     125: aload_0
     126: getstatic     #100                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.INITIATED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
     129: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
     132: iconst_4
     133: iastore
     134: goto          138
     137: pop
     138: aload_0
     139: getstatic     #164                // Field com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.STARTED:Lcom/amazonaws/services/simpleworkflow/flow/worker/DecisionState;
     142: invokevirtual #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/DecisionState.ordinal:()I
     145: iconst_5
     146: iastore
     147: goto          151
     150: pop
     151: aload_0
     152: dup
     153: putstatic     #152                // Field $SWITCH_TABLE$com$amazonaws$services$simpleworkflow$flow$worker$DecisionState:[I
     156: areturn
    Exception table:
       from    to  target type
          16    26    29   Class java/lang/NoSuchFieldError
          30    40    43   Class java/lang/NoSuchFieldError
          44    53    56   Class java/lang/NoSuchFieldError
          57    67    70   Class java/lang/NoSuchFieldError
          71    81    84   Class java/lang/NoSuchFieldError
          85    95    98   Class java/lang/NoSuchFieldError
          99   108   111   Class java/lang/NoSuchFieldError
         112   121   124   Class java/lang/NoSuchFieldError
         125   134   137   Class java/lang/NoSuchFieldError
         138   147   150   Class java/lang/NoSuchFieldError
}
