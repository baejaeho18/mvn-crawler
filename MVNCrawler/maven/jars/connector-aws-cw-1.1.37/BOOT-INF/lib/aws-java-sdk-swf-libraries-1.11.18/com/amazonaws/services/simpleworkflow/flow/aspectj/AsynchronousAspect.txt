Compiled from "AsynchronousAspect.java"
public class com.amazonaws.services.simpleworkflow.flow.aspectj.AsynchronousAspect {
  private static java.lang.Throwable ajc$initFailureCause;

  public static final com.amazonaws.services.simpleworkflow.flow.aspectj.AsynchronousAspect ajc$perSingletonInstance;

  public com.amazonaws.services.simpleworkflow.flow.aspectj.AsynchronousAspect();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Object makeAsynchronous(org.aspectj.lang.ProceedingJoinPoint, com.amazonaws.services.simpleworkflow.flow.annotations.Asynchronous) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getStaticPart:()Lorg/aspectj/lang/JoinPoint$StaticPart;
       6: invokeinterface #31,  1           // InterfaceMethod org/aspectj/lang/JoinPoint$StaticPart.getSignature:()Lorg/aspectj/lang/Signature;
      11: astore_3
      12: aload_3
      13: instanceof    #37                 // class org/aspectj/lang/reflect/MethodSignature
      16: ifeq          291
      19: aload_3
      20: checkcast     #37                 // class org/aspectj/lang/reflect/MethodSignature
      23: astore        4
      25: iconst_0
      26: istore        5
      28: aload_1
      29: invokeinterface #39,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getArgs:()[Ljava/lang/Object;
      34: astore        6
      36: aload         4
      38: invokeinterface #43,  1           // InterfaceMethod org/aspectj/lang/reflect/MethodSignature.getMethod:()Ljava/lang/reflect/Method;
      43: invokevirtual #47                 // Method java/lang/reflect/Method.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;
      46: astore        7
      48: new           #53                 // class java/util/ArrayList
      51: dup
      52: invokespecial #55                 // Method java/util/ArrayList."<init>":()V
      55: astore        8
      57: aload         4
      59: invokeinterface #56,  1           // InterfaceMethod org/aspectj/lang/reflect/MethodSignature.getParameterTypes:()[Ljava/lang/Class;
      64: dup
      65: astore        12
      67: arraylength
      68: istore        11
      70: iconst_0
      71: istore        10
      73: goto          229
      76: aload         12
      78: iload         10
      80: aaload
      81: astore        9
      83: aload         9
      85: invokestatic  #60                 // Method isPromise:(Ljava/lang/Class;)Z
      88: ifne          118
      91: aload         9
      93: invokestatic  #64                 // Method isPromiseArray:(Ljava/lang/Class;)Z
      96: ifne          118
      99: aload         9
     101: invokestatic  #67                 // Method isCollection:(Ljava/lang/Class;)Z
     104: ifeq          214
     107: aload         7
     109: iload         5
     111: aaload
     112: invokestatic  #70                 // Method hasWaitAnnotation:([Ljava/lang/annotation/Annotation;)Z
     115: ifeq          214
     118: aload         7
     120: iload         5
     122: aaload
     123: invokestatic  #74                 // Method hasNoWaitAnnotation:([Ljava/lang/annotation/Annotation;)Z
     126: ifne          214
     129: aload         6
     131: iload         5
     133: aaload
     134: astore        13
     136: aload         9
     138: invokestatic  #60                 // Method isPromise:(Ljava/lang/Class;)Z
     141: ifeq          160
     144: aload         8
     146: aload         13
     148: checkcast     #77                 // class com/amazonaws/services/simpleworkflow/flow/core/Promise
     151: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     156: pop
     157: goto          223
     160: aload         9
     162: invokestatic  #67                 // Method isCollection:(Ljava/lang/Class;)Z
     165: ifeq          191
     168: aload         8
     170: new           #85                 // class com/amazonaws/services/simpleworkflow/flow/core/AndPromise
     173: dup
     174: aload         13
     176: checkcast     #87                 // class java/util/Collection
     179: invokespecial #89                 // Method com/amazonaws/services/simpleworkflow/flow/core/AndPromise."<init>":(Ljava/util/Collection;)V
     182: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     187: pop
     188: goto          223
     191: aload         8
     193: new           #85                 // class com/amazonaws/services/simpleworkflow/flow/core/AndPromise
     196: dup
     197: aload         13
     199: checkcast     #92                 // class "[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;"
     202: invokespecial #94                 // Method com/amazonaws/services/simpleworkflow/flow/core/AndPromise."<init>":([Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;)V
     205: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     210: pop
     211: goto          223
     214: aload         8
     216: aconst_null
     217: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     222: pop
     223: iinc          5, 1
     226: iinc          10, 1
     229: iload         10
     231: iload         11
     233: if_icmplt     76
     236: aload         8
     238: iconst_0
     239: anewarray     #77                 // class com/amazonaws/services/simpleworkflow/flow/core/Promise
     242: invokeinterface #97,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     247: checkcast     #92                 // class "[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;"
     250: astore        9
     252: aload_2
     253: invokeinterface #101,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/annotations/Asynchronous.daemon:()Z
     258: ifeq          268
     261: iconst_1
     262: invokestatic  #107                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     265: goto          269
     268: aconst_null
     269: astore        10
     271: new           #113                // class com/amazonaws/services/simpleworkflow/flow/aspectj/AsynchronousAspectTask
     274: dup
     275: aload         10
     277: aload_1
     278: aload         9
     280: invokespecial #115                // Method com/amazonaws/services/simpleworkflow/flow/aspectj/AsynchronousAspectTask."<init>":(Ljava/lang/Boolean;Lorg/aspectj/lang/ProceedingJoinPoint;[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;)V
     283: astore        11
     285: aload         11
     287: invokevirtual #118                // Method com/amazonaws/services/simpleworkflow/flow/aspectj/AsynchronousAspectTask.getReturnValue:()Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
     290: areturn
     291: aload_1
     292: invokeinterface #122,  1          // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.proceed:()Ljava/lang/Object;
     297: areturn

  private static boolean isPromise(java.lang.Class<?>);
    Code:
       0: ldc           #77                 // class com/amazonaws/services/simpleworkflow/flow/core/Promise
       2: aload_0
       3: invokevirtual #164                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ireturn

  private static boolean isCollection(java.lang.Class<?>);
    Code:
       0: ldc           #87                 // class java/util/Collection
       2: aload_0
       3: invokevirtual #164                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ireturn

  private static boolean isPromiseArray(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #168                // Method java/lang/Class.isArray:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #171                // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      13: astore_1
      14: aload_1
      15: invokestatic  #60                 // Method isPromise:(Ljava/lang/Class;)Z
      18: ireturn

  private static boolean hasWaitAnnotation(java.lang.annotation.Annotation[]);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: arraylength
       5: istore_3
       6: iconst_0
       7: istore_2
       8: goto          35
      11: aload         4
      13: iload_2
      14: aaload
      15: astore_1
      16: aload_1
      17: invokeinterface #176,  1          // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      22: ldc           #181                // class com/amazonaws/services/simpleworkflow/flow/annotations/Wait
      24: invokevirtual #183                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: iconst_1
      31: ireturn
      32: iinc          2, 1
      35: iload_2
      36: iload_3
      37: if_icmplt     11
      40: iconst_0
      41: ireturn

  private static boolean hasNoWaitAnnotation(java.lang.annotation.Annotation[]);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: arraylength
       5: istore_3
       6: iconst_0
       7: istore_2
       8: goto          35
      11: aload         4
      13: iload_2
      14: aaload
      15: astore_1
      16: aload_1
      17: invokeinterface #176,  1          // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      22: ldc           #191                // class com/amazonaws/services/simpleworkflow/flow/annotations/NoWait
      24: invokevirtual #183                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: iconst_1
      31: ireturn
      32: iinc          2, 1
      35: iload_2
      36: iload_3
      37: if_icmplt     11
      40: iconst_0
      41: ireturn

  public static com.amazonaws.services.simpleworkflow.flow.aspectj.AsynchronousAspect aspectOf();
    Code:
       0: getstatic     #206                // Field ajc$perSingletonInstance:Lcom/amazonaws/services/simpleworkflow/flow/aspectj/AsynchronousAspect;
       3: ifnonnull     19
       6: new           #208                // class org/aspectj/lang/NoAspectBoundException
       9: dup
      10: ldc           #210                // String com.amazonaws.services.simpleworkflow.flow.aspectj.AsynchronousAspect
      12: getstatic     #212                // Field ajc$initFailureCause:Ljava/lang/Throwable;
      15: invokespecial #215                // Method org/aspectj/lang/NoAspectBoundException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      18: athrow
      19: getstatic     #206                // Field ajc$perSingletonInstance:Lcom/amazonaws/services/simpleworkflow/flow/aspectj/AsynchronousAspect;
      22: areturn

  public static boolean hasAspect();
    Code:
       0: getstatic     #206                // Field ajc$perSingletonInstance:Lcom/amazonaws/services/simpleworkflow/flow/aspectj/AsynchronousAspect;
       3: ifnull        8
       6: iconst_1
       7: ireturn
       8: iconst_0
       9: ireturn

  private static void ajc$postClinit();
    Code:
       0: new           #1                  // class com/amazonaws/services/simpleworkflow/flow/aspectj/AsynchronousAspect
       3: dup
       4: invokespecial #216                // Method "<init>":()V
       7: putstatic     #206                // Field ajc$perSingletonInstance:Lcom/amazonaws/services/simpleworkflow/flow/aspectj/AsynchronousAspect;
      10: return

  static {};
    Code:
       0: nop
       1: invokestatic  #219                // Method ajc$postClinit:()V
       4: goto          12
       7: astore_0
       8: aload_0
       9: putstatic     #212                // Field ajc$initFailureCause:Ljava/lang/Throwable;
      12: return
    Exception table:
       from    to  target type
           1     7     7   Class java/lang/Throwable
}
