Compiled from "AsyncContextBase.java"
abstract class com.amazonaws.services.simpleworkflow.flow.core.AsyncContextBase implements java.lang.Runnable,com.amazonaws.services.simpleworkflow.flow.core.AsyncParentContext {
  private static final java.lang.ThreadLocal<com.amazonaws.services.simpleworkflow.flow.core.AsyncParentContext> currentContext;

  private final boolean daemon;

  protected final com.amazonaws.services.simpleworkflow.flow.core.AsyncParentContext parent;

  protected com.amazonaws.services.simpleworkflow.flow.core.AsyncStackTrace stackTrace;

  private final com.amazonaws.services.simpleworkflow.flow.core.Promise<?>[] waitFor;

  private java.lang.String name;

  static {};
    Code:
       0: new           #27                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #29                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #32                 // Field currentContext:Ljava/lang/ThreadLocal;
      10: return

  static com.amazonaws.services.simpleworkflow.flow.core.AsyncParentContext current();
    Code:
       0: getstatic     #32                 // Field currentContext:Ljava/lang/ThreadLocal;
       3: invokevirtual #39                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #7                  // class com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext
       9: astore_0
      10: aload_0
      11: ifnonnull     24
      14: new           #43                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #45                 // String Attempt to execute asynchronous code outside of AsyncScope.doAsync() method
      20: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: areturn

  static void setCurrent(com.amazonaws.services.simpleworkflow.flow.core.AsyncParentContext);
    Code:
       0: getstatic     #32                 // Field currentContext:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #54                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  public com.amazonaws.services.simpleworkflow.flow.core.AsyncContextBase(java.lang.Boolean, com.amazonaws.services.simpleworkflow.flow.core.Promise<?>[], int);
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method current:()Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokespecial #63                 // Method "<init>":(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;Ljava/lang/Boolean;[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;I)V
      10: return

  public com.amazonaws.services.simpleworkflow.flow.core.AsyncContextBase(com.amazonaws.services.simpleworkflow.flow.core.AsyncParentContext, java.lang.Boolean, com.amazonaws.services.simpleworkflow.flow.core.Promise<?>[], int);
    Code:
       0: aload_0
       1: invokespecial #72                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #73                 // Field parent:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;
       9: aload_0
      10: aload_2
      11: ifnonnull     23
      14: aload_1
      15: invokeinterface #75,  1           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.getDaemonFlagForHeir:()Z
      20: goto          27
      23: aload_2
      24: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      27: putfield      #84                 // Field daemon:Z
      30: aload_0
      31: aload_3
      32: putfield      #86                 // Field waitFor:[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
      35: aload_0
      36: aload_1
      37: ifnonnull     44
      40: aconst_null
      41: goto          50
      44: aload_1
      45: invokeinterface #88,  1           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.getName:()Ljava/lang/String;
      50: putfield      #92                 // Field name:Ljava/lang/String;
      53: aload_1
      54: invokeinterface #94,  1           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.getStackTrace:()Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
      59: astore        5
      61: aload         5
      63: ifnull        113
      66: aload_0
      67: new           #98                 // class com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace
      70: dup
      71: aload         5
      73: invokestatic  #100                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      76: invokevirtual #106                // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
      79: iload         4
      81: invokespecial #109                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;[Ljava/lang/StackTraceElement;I)V
      84: putfield      #112                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
      87: aload_0
      88: getfield      #112                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
      91: aload_1
      92: invokeinterface #114,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.getParentTaskMethodName:()Ljava/lang/String;
      97: invokevirtual #117                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace.setStartFrom:(Ljava/lang/String;)V
     100: aload_0
     101: getfield      #112                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
     104: aload_1
     105: invokeinterface #120,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.getHideStartFromMethod:()Z
     110: invokevirtual #123                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace.setHideStartFromMethod:(Z)V
     113: aload_0
     114: getfield      #73                 // Field parent:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext;
     117: aload_0
     118: aload_3
     119: ifnull        127
     122: aload_3
     123: arraylength
     124: ifne          131
     127: aconst_null
     128: goto          139
     131: new           #127                // class com/amazonaws/services/simpleworkflow/flow/core/AndPromise
     134: dup
     135: aload_3
     136: invokespecial #129                // Method com/amazonaws/services/simpleworkflow/flow/core/AndPromise."<init>":([Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;)V
     139: invokeinterface #132,  3          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/core/AsyncParentContext.add:(Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncContextBase;Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;)V
     144: return

  public boolean isDaemon();
    Code:
       0: aload_0
       1: getfield      #84                 // Field daemon:Z
       4: ireturn

  public com.amazonaws.services.simpleworkflow.flow.core.AsyncStackTrace getStackTrace();
    Code:
       0: aload_0
       1: getfield      #112                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
       4: areturn

  public com.amazonaws.services.simpleworkflow.flow.core.AsyncTaskInfo getTaskInfo();
    Code:
       0: new           #143                // class com/amazonaws/services/simpleworkflow/flow/core/AsyncTaskInfo
       3: dup
       4: aload_0
       5: getfield      #92                 // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #112                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
      12: ifnonnull     19
      15: aconst_null
      16: goto          26
      19: aload_0
      20: getfield      #112                // Field stackTrace:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace;
      23: invokevirtual #145                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncStackTrace.getStackTrace:()[Ljava/lang/StackTraceElement;
      26: aload_0
      27: getfield      #84                 // Field daemon:Z
      30: aload_0
      31: getfield      #86                 // Field waitFor:[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
      34: invokespecial #146                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncTaskInfo."<init>":(Ljava/lang/String;[Ljava/lang/StackTraceElement;Z[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;)V
      37: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #92                 // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field name:Ljava/lang/String;
       5: return

  public abstract void cancel(java.lang.Throwable);

  public java.lang.String getAsynchronousStackTraceDumpAsString();
    Code:
       0: new           #155                // class java/util/ArrayList
       3: dup
       4: invokespecial #157                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #158                // Method getAsynchronousStackTraceDump:(Ljava/util/List;)V
      13: new           #162                // class java/lang/StringBuffer
      16: dup
      17: invokespecial #164                // Method java/lang/StringBuffer."<init>":()V
      20: astore_2
      21: iconst_0
      22: istore_3
      23: goto          59
      26: aload_1
      27: iload_3
      28: invokeinterface #165,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      33: checkcast     #143                // class com/amazonaws/services/simpleworkflow/flow/core/AsyncTaskInfo
      36: astore        4
      38: iload_3
      39: ifle          49
      42: aload_2
      43: ldc           #170                // String -----------------------------------------------------\n
      45: invokevirtual #172                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: pop
      49: aload_2
      50: aload         4
      52: invokevirtual #176                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      55: pop
      56: iinc          3, 1
      59: iload_3
      60: aload_1
      61: invokeinterface #179,  1          // InterfaceMethod java/util/List.size:()I
      66: if_icmplt     26
      69: aload_2
      70: invokevirtual #183                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      73: areturn

  public boolean getHideStartFromMethod();
    Code:
       0: iconst_0
       1: ireturn

  protected void getAsynchronousStackTraceDump(java.util.List<com.amazonaws.services.simpleworkflow.flow.core.AsyncTaskInfo>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #196                // Method getTaskInfo:()Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncTaskInfo;
       5: invokeinterface #198,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return
}
