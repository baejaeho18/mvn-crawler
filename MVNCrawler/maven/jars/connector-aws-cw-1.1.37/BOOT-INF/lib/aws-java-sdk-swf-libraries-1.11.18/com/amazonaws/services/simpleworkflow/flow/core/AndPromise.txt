Compiled from "AndPromise.java"
public class com.amazonaws.services.simpleworkflow.flow.core.AndPromise extends com.amazonaws.services.simpleworkflow.flow.core.Promise<java.lang.Void> {
  private static final com.amazonaws.services.simpleworkflow.flow.core.Promise<?>[] EMPTY_VALUE_ARRAY;

  private final com.amazonaws.services.simpleworkflow.flow.core.Settable<java.lang.Void> impl;

  private final com.amazonaws.services.simpleworkflow.flow.core.Promise[] values;

  static {};
    Code:
       0: iconst_0
       1: anewarray     #3                  // class com/amazonaws/services/simpleworkflow/flow/core/Promise
       4: putstatic     #16                 // Field EMPTY_VALUE_ARRAY:[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
       7: return

  public com.amazonaws.services.simpleworkflow.flow.core.AndPromise(com.amazonaws.services.simpleworkflow.flow.core.Promise<?>...);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method com/amazonaws/services/simpleworkflow/flow/core/Promise."<init>":()V
       4: aload_0
       5: new           #26                 // class com/amazonaws/services/simpleworkflow/flow/core/Settable
       8: dup
       9: invokespecial #28                 // Method com/amazonaws/services/simpleworkflow/flow/core/Settable."<init>":()V
      12: putfield      #29                 // Field impl:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
      15: aload_0
      16: aload_1
      17: putfield      #31                 // Field values:[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
      20: aload_1
      21: arraylength
      22: ifne          33
      25: aload_0
      26: getfield      #29                 // Field impl:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
      29: aconst_null
      30: invokevirtual #33                 // Method com/amazonaws/services/simpleworkflow/flow/core/Settable.set:(Ljava/lang/Object;)V
      33: new           #37                 // class com/amazonaws/services/simpleworkflow/flow/core/AndPromise$AndPromiseCallback
      36: dup
      37: aload_0
      38: aload_1
      39: arraylength
      40: invokespecial #39                 // Method com/amazonaws/services/simpleworkflow/flow/core/AndPromise$AndPromiseCallback."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/core/AndPromise;I)V
      43: astore_2
      44: aload_1
      45: dup
      46: astore        6
      48: arraylength
      49: istore        5
      51: iconst_0
      52: istore        4
      54: goto          84
      57: aload         6
      59: iload         4
      61: aaload
      62: astore_3
      63: aload_3
      64: ifnull        75
      67: aload_3
      68: aload_2
      69: invokevirtual #42                 // Method com/amazonaws/services/simpleworkflow/flow/core/Promise.addCallback:(Ljava/lang/Runnable;)V
      72: goto          81
      75: aload_2
      76: invokeinterface #46,  1           // InterfaceMethod java/lang/Runnable.run:()V
      81: iinc          4, 1
      84: iload         4
      86: iload         5
      88: if_icmplt     57
      91: return

  public com.amazonaws.services.simpleworkflow.flow.core.AndPromise(java.util.Collection<com.amazonaws.services.simpleworkflow.flow.core.Promise>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #16                 // Field EMPTY_VALUE_ARRAY:[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
       5: invokeinterface #63,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      10: checkcast     #60                 // class "[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;"
      13: invokespecial #69                 // Method "<init>":([Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;)V
      16: return

  public com.amazonaws.services.simpleworkflow.flow.core.Promise[] getValues();
    Code:
       0: aload_0
       1: getfield      #31                 // Field values:[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
       4: areturn

  protected void addCallback(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #29                 // Field impl:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
       4: aload_1
       5: invokevirtual #76                 // Method com/amazonaws/services/simpleworkflow/flow/core/Settable.addCallback:(Ljava/lang/Runnable;)V
       8: return

  public java.lang.Void get();
    Code:
       0: aload_0
       1: getfield      #29                 // Field impl:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
       4: invokevirtual #79                 // Method com/amazonaws/services/simpleworkflow/flow/core/Settable.get:()Ljava/lang/Object;
       7: checkcast     #82                 // class java/lang/Void
      10: areturn

  public boolean isReady();
    Code:
       0: aload_0
       1: getfield      #29                 // Field impl:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
       4: invokevirtual #86                 // Method com/amazonaws/services/simpleworkflow/flow/core/Settable.isReady:()Z
       7: ireturn

  protected void removeCallback(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #29                 // Field impl:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
       4: aload_1
       5: invokevirtual #89                 // Method com/amazonaws/services/simpleworkflow/flow/core/Settable.removeCallback:(Ljava/lang/Runnable;)V
       8: return

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method get:()Ljava/lang/Void;
       4: areturn

  static com.amazonaws.services.simpleworkflow.flow.core.Settable access$1(com.amazonaws.services.simpleworkflow.flow.core.AndPromise);
    Code:
       0: aload_0
       1: getfield      #29                 // Field impl:Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
       4: areturn
}
