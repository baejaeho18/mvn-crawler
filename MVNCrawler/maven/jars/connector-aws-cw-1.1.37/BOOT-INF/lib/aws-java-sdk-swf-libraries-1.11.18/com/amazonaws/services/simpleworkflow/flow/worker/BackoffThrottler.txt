Compiled from "BackoffThrottler.java"
public class com.amazonaws.services.simpleworkflow.flow.worker.BackoffThrottler {
  private final long initialSleep;

  private final long maxSleep;

  private final double backoffCoefficient;

  private final java.util.concurrent.atomic.AtomicLong failureCount;

  public com.amazonaws.services.simpleworkflow.flow.worker.BackoffThrottler(long, long, double);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #19                 // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #22                 // Field failureCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: lload_1
      17: putfield      #24                 // Field initialSleep:J
      20: aload_0
      21: lload_3
      22: putfield      #26                 // Field maxSleep:J
      25: aload_0
      26: dload         5
      28: putfield      #28                 // Field backoffCoefficient:D
      31: return

  private long calculateSleepTime();
    Code:
       0: aload_0
       1: getfield      #28                 // Field backoffCoefficient:D
       4: aload_0
       5: getfield      #22                 // Field failureCount:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      11: lconst_1
      12: lsub
      13: l2d
      14: invokestatic  #39                 // Method java/lang/Math.pow:(DD)D
      17: aload_0
      18: getfield      #24                 // Field initialSleep:J
      21: l2d
      22: dmul
      23: dstore_1
      24: dload_1
      25: d2l
      26: aload_0
      27: getfield      #26                 // Field maxSleep:J
      30: invokestatic  #45                 // Method java/lang/Math.min:(JJ)J
      33: lreturn

  public void throttle() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field failureCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lconst_0
       8: lcmp
       9: ifle          19
      12: aload_0
      13: invokespecial #54                 // Method calculateSleepTime:()J
      16: invokestatic  #56                 // Method java/lang/Thread.sleep:(J)V
      19: return

  public void success();
    Code:
       0: aload_0
       1: getfield      #22                 // Field failureCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return

  public void failure();
    Code:
       0: aload_0
       1: getfield      #22                 // Field failureCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return
}
