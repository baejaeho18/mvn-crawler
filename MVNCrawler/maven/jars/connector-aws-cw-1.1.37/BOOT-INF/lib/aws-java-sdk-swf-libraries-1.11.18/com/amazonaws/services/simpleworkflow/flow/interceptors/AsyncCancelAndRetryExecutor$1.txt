Compiled from "AsyncCancelAndRetryExecutor.java"
class com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor$1 extends com.amazonaws.services.simpleworkflow.flow.core.TryCatchFinally {
  final com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor this$0;

  private final com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRunnable val$cmd;

  com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor$1(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncCancelAndRetryExecutor, com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRunnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;
       5: aload_0
       6: aload_2
       7: putfield      #14                 // Field val$cmd:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;
      10: aload_0
      11: invokespecial #16                 // Method com/amazonaws/services/simpleworkflow/flow/core/TryCatchFinally."<init>":()V
      14: return

  protected void doTry() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #14                 // Field val$cmd:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;
       4: invokeinterface #28,  1           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable.run:()V
       9: return

  protected void doCatch(java.lang.Throwable) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: instanceof    #35                 // class java/util/concurrent/CancellationException
       4: ifeq          28
       7: aload_0
       8: getfield      #12                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;
      11: invokestatic  #37                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor.access$0:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;)Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
      14: ifnull        28
      17: aload_0
      18: getfield      #12                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;
      21: iconst_1
      22: invokestatic  #43                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;Z)V
      25: goto          30
      28: aload_1
      29: athrow
      30: return

  protected void doFinally() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #12                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;
       4: invokestatic  #51                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor.access$2:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;)Z
       7: ifne          18
      10: aload_0
      11: getfield      #12                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;
      14: aconst_null
      15: putfield      #55                 // Field com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor.command:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;
      18: aload_0
      19: getfield      #12                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;
      22: invokestatic  #37                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor.access$0:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;)Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
      25: ifnull        39
      28: aload_0
      29: getfield      #12                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;
      32: invokestatic  #37                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor.access$0:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;)Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;
      35: aconst_null
      36: invokevirtual #58                 // Method com/amazonaws/services/simpleworkflow/flow/core/Settable.set:(Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #12                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;
      43: aconst_null
      44: invokestatic  #64                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor.access$3:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;)V
      47: aload_0
      48: getfield      #12                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;
      51: aconst_null
      52: invokestatic  #68                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor.access$4:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncCancelAndRetryExecutor;Lcom/amazonaws/services/simpleworkflow/flow/core/Cancelable;)V
      55: return
}
