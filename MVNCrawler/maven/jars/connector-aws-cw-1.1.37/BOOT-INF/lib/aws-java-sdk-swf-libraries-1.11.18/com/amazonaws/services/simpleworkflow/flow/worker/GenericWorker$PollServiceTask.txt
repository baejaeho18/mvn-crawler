Compiled from "GenericWorker.java"
class com.amazonaws.services.simpleworkflow.flow.worker.GenericWorker$PollServiceTask implements java.lang.Runnable {
  private final com.amazonaws.services.simpleworkflow.flow.worker.TaskPoller poller;

  final com.amazonaws.services.simpleworkflow.flow.worker.GenericWorker this$0;

  com.amazonaws.services.simpleworkflow.flow.worker.GenericWorker$PollServiceTask(com.amazonaws.services.simpleworkflow.flow.worker.GenericWorker, com.amazonaws.services.simpleworkflow.flow.worker.TaskPoller);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
       5: aload_0
       6: invokespecial #17                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #20                 // Field poller:Lcom/amazonaws/services/simpleworkflow/flow/worker/TaskPoller;
      14: return

  public void run();
    Code:
       0: invokestatic  #27                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$0:()Lorg/apache/commons/logging/Log;
       3: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          21
      11: invokestatic  #27                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$0:()Lorg/apache/commons/logging/Log;
      14: ldc           #39                 // String poll task begin
      16: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
      25: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
      28: invokevirtual #49                 // Method java/util/concurrent/ThreadPoolExecutor.isTerminating:()Z
      31: ifeq          59
      34: aload_0
      35: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
      38: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
      41: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
      44: ifne          58
      47: aload_0
      48: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
      51: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
      54: aload_0
      55: invokevirtual #57                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      58: return
      59: aload_0
      60: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
      63: invokestatic  #61                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$2:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Lcom/amazonaws/services/simpleworkflow/flow/worker/BackoffThrottler;
      66: invokevirtual #65                 // Method com/amazonaws/services/simpleworkflow/flow/worker/BackoffThrottler.throttle:()V
      69: aload_0
      70: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
      73: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
      76: invokevirtual #49                 // Method java/util/concurrent/ThreadPoolExecutor.isTerminating:()Z
      79: ifeq          107
      82: aload_0
      83: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
      86: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
      89: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
      92: ifne          106
      95: aload_0
      96: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
      99: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     102: aload_0
     103: invokevirtual #57                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
     106: return
     107: aload_0
     108: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     111: invokestatic  #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$3:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Lcom/amazonaws/services/simpleworkflow/flow/worker/Throttler;
     114: ifnull        127
     117: aload_0
     118: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     121: invokestatic  #70                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$3:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Lcom/amazonaws/services/simpleworkflow/flow/worker/Throttler;
     124: invokevirtual #74                 // Method com/amazonaws/services/simpleworkflow/flow/worker/Throttler.throttle:()V
     127: aload_0
     128: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     131: getfield      #77                 // Field com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.suspendLatch:Ljava/util/concurrent/atomic/AtomicReference;
     134: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     137: checkcast     #87                 // class java/util/concurrent/CountDownLatch
     140: astore_1
     141: aload_1
     142: ifnull        187
     145: invokestatic  #27                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$0:()Lorg/apache/commons/logging/Log;
     148: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     153: ifeq          183
     156: invokestatic  #27                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$0:()Lorg/apache/commons/logging/Log;
     159: new           #89                 // class java/lang/StringBuilder
     162: dup
     163: ldc           #91                 // String poll task suspending latchCount=
     165: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     168: aload_1
     169: invokevirtual #96                 // Method java/util/concurrent/CountDownLatch.getCount:()J
     172: invokevirtual #100                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     175: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     178: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     183: aload_1
     184: invokevirtual #108                // Method java/util/concurrent/CountDownLatch.await:()V
     187: aload_0
     188: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     191: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     194: invokevirtual #49                 // Method java/util/concurrent/ThreadPoolExecutor.isTerminating:()Z
     197: ifeq          225
     200: aload_0
     201: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     204: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     207: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
     210: ifne          224
     213: aload_0
     214: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     217: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     220: aload_0
     221: invokevirtual #57                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
     224: return
     225: aload_0
     226: getfield      #20                 // Field poller:Lcom/amazonaws/services/simpleworkflow/flow/worker/TaskPoller;
     229: invokeinterface #111,  1          // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/worker/TaskPoller.pollAndProcessSingleTask:()Z
     234: pop
     235: aload_0
     236: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     239: invokestatic  #61                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$2:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Lcom/amazonaws/services/simpleworkflow/flow/worker/BackoffThrottler;
     242: invokevirtual #116                // Method com/amazonaws/services/simpleworkflow/flow/worker/BackoffThrottler.success:()V
     245: goto          339
     248: astore_1
     249: aload_0
     250: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     253: invokestatic  #61                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$2:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Lcom/amazonaws/services/simpleworkflow/flow/worker/BackoffThrottler;
     256: invokevirtual #119                // Method com/amazonaws/services/simpleworkflow/flow/worker/BackoffThrottler.failure:()V
     259: aload_1
     260: invokevirtual #122                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     263: instanceof    #128                // class java/lang/InterruptedException
     266: ifne          285
     269: aload_0
     270: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     273: getfield      #130                // Field com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
     276: invokestatic  #134                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     279: aload_1
     280: invokeinterface #140,  3          // InterfaceMethod java/lang/Thread$UncaughtExceptionHandler.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V
     285: aload_0
     286: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     289: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     292: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
     295: ifne          363
     298: aload_0
     299: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     302: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     305: aload_0
     306: invokevirtual #57                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
     309: goto          363
     312: astore_2
     313: aload_0
     314: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     317: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     320: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
     323: ifne          337
     326: aload_0
     327: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     330: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     333: aload_0
     334: invokevirtual #57                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
     337: aload_2
     338: athrow
     339: aload_0
     340: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     343: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     346: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
     349: ifne          363
     352: aload_0
     353: getfield      #15                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;
     356: invokestatic  #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.access$1:(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;)Ljava/util/concurrent/ThreadPoolExecutor;
     359: aload_0
     360: invokevirtual #57                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
     363: return
    Exception table:
       from    to  target type
           0    34   248   Class java/lang/Throwable
          59    82   248   Class java/lang/Throwable
         107   200   248   Class java/lang/Throwable
         225   245   248   Class java/lang/Throwable
           0    34   312   any
          59    82   312   any
         107   200   312   any
         225   285   312   any
}
