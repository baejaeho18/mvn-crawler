Compiled from "WorkflowWorker.java"
public class com.amazonaws.services.simpleworkflow.flow.WorkflowWorker implements com.amazonaws.services.simpleworkflow.flow.WorkerBase {
  private final com.amazonaws.services.simpleworkflow.flow.worker.GenericWorkflowWorker genericWorker;

  private final com.amazonaws.services.simpleworkflow.flow.pojo.POJOWorkflowDefinitionFactoryFactory factoryFactory;

  private final java.util.Collection<java.lang.Class<?>> workflowImplementationTypes;

  public com.amazonaws.services.simpleworkflow.flow.WorkflowWorker(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #22                 // class com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory
       8: dup
       9: invokespecial #24                 // Method com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory."<init>":()V
      12: putfield      #25                 // Field factoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory;
      15: aload_0
      16: new           #27                 // class java/util/ArrayList
      19: dup
      20: invokespecial #29                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #30                 // Field workflowImplementationTypes:Ljava/util/Collection;
      26: aload_0
      27: new           #32                 // class com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker
      30: dup
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #34                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Ljava/lang/String;)V
      37: putfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
      40: aload_0
      41: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
      44: aload_0
      45: getfield      #25                 // Field factoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory;
      48: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setWorkflowDefinitionFactoryFactory:(Lcom/amazonaws/services/simpleworkflow/flow/generic/WorkflowDefinitionFactoryFactory;)V
      51: return

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow getService();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #53                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getService:()Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;
       7: areturn

  public java.lang.String getDomain();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #57                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getDomain:()Ljava/lang/String;
       7: areturn

  public boolean isRegisterDomain();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #61                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.isRegisterDomain:()Z
       7: ireturn

  public void setRegisterDomain(boolean);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: iload_1
       5: invokevirtual #65                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setRegisterDomain:(Z)V
       8: return

  public long getDomainRetentionPeriodInDays();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #71                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getDomainRetentionPeriodInDays:()J
       7: lreturn

  public void setDomainRetentionPeriodInDays(long);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: lload_1
       5: invokevirtual #75                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setDomainRetentionPeriodInDays:(J)V
       8: return

  public java.lang.String getTaskListToPoll();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #80                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getTaskListToPoll:()Ljava/lang/String;
       7: areturn

  public double getMaximumPollRatePerSecond();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #84                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getMaximumPollRatePerSecond:()D
       7: dreturn

  public void setMaximumPollRatePerSecond(double);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: dload_1
       5: invokevirtual #88                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setMaximumPollRatePerSecond:(D)V
       8: return

  public int getMaximumPollRateIntervalMilliseconds();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #94                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getMaximumPollRateIntervalMilliseconds:()I
       7: ireturn

  public void setMaximumPollRateIntervalMilliseconds(int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: iload_1
       5: invokevirtual #98                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setMaximumPollRateIntervalMilliseconds:(I)V
       8: return

  public java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #104                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
       7: areturn

  public void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: aload_1
       5: invokevirtual #108                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
       8: return

  public java.lang.String getIdentity();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #113                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getIdentity:()Ljava/lang/String;
       7: areturn

  public void setIdentity(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: aload_1
       5: invokevirtual #117                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setIdentity:(Ljava/lang/String;)V
       8: return

  public long getPollBackoffInitialInterval();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #121                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getPollBackoffInitialInterval:()J
       7: lreturn

  public void setPollBackoffInitialInterval(long);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: lload_1
       5: invokevirtual #124                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setPollBackoffInitialInterval:(J)V
       8: return

  public long getPollBackoffMaximumInterval();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #128                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getPollBackoffMaximumInterval:()J
       7: lreturn

  public void setPollBackoffMaximumInterval(long);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: lload_1
       5: invokevirtual #131                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setPollBackoffMaximumInterval:(J)V
       8: return

  public boolean isDisableServiceShutdownOnStop();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #135                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.isDisableServiceShutdownOnStop:()Z
       7: ireturn

  public void setDisableServiceShutdownOnStop(boolean);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: iload_1
       5: invokevirtual #138                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setDisableServiceShutdownOnStop:(Z)V
       8: return

  public double getPollBackoffCoefficient();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #142                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getPollBackoffCoefficient:()D
       7: dreturn

  public void setPollBackoffCoefficient(double);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: dload_1
       5: invokevirtual #145                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setPollBackoffCoefficient:(D)V
       8: return

  public int getPollThreadCount();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #149                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.getPollThreadCount:()I
       7: ireturn

  public void setPollThreadCount(int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: iload_1
       5: invokevirtual #152                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setPollThreadCount:(I)V
       8: return

  public void registerTypesToPoll();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #156                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.registerTypesToPoll:()V
       7: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #159                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.start:()V
       7: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #162                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.shutdown:()V
       7: return

  public void shutdownNow();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #165                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.shutdownNow:()V
       7: return

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: lload_1
       5: aload_3
       6: invokevirtual #172                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #178                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.isRunning:()Z
       7: ireturn

  public void suspendPolling();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #181                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.suspendPolling:()V
       7: return

  public void resumePolling();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #184                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.resumePolling:()V
       7: return

  public void setWorkflowImplementationTypes(java.util.Collection<java.lang.Class<?>>) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_1
       1: invokeinterface #193,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: goto          25
      10: aload_3
      11: invokeinterface #199,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      16: checkcast     #205                // class java/lang/Class
      19: astore_2
      20: aload_0
      21: aload_2
      22: invokevirtual #207                // Method addWorkflowImplementationType:(Ljava/lang/Class;)V
      25: aload_3
      26: invokeinterface #211,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifne          10
      34: return

  public java.util.Collection<java.lang.Class<?>> getWorkflowImplementationTypes();
    Code:
       0: aload_0
       1: getfield      #30                 // Field workflowImplementationTypes:Ljava/util/Collection;
       4: areturn

  public void addWorkflowImplementationType(java.lang.Class<?>) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field factoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory;
       4: aload_1
       5: invokevirtual #223                // Method com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory.addWorkflowImplementationType:(Ljava/lang/Class;)V
       8: return

  public void addWorkflowImplementationType(java.lang.Class<?>, com.amazonaws.services.simpleworkflow.flow.DataConverter) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field factoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory;
       4: aload_1
       5: aload_2
       6: invokevirtual #226                // Method com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory.addWorkflowImplementationType:(Ljava/lang/Class;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;)V
       9: return

  public void addWorkflowImplementationType(java.lang.Class<?>, com.amazonaws.services.simpleworkflow.flow.DataConverter, java.lang.Object[]) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field factoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #232                // Method com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory.addWorkflowImplementationType:(Ljava/lang/Class;Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;[Ljava/lang/Object;)V
      10: return

  public java.lang.String toString();
    Code:
       0: new           #237                // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #239                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #243                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: invokestatic  #246                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokespecial #252                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      17: ldc           #254                // String [genericWorker=
      19: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
      26: invokevirtual #260                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc_w         #263                // String , wokflowImplementationTypes=
      32: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #30                 // Field workflowImplementationTypes:Ljava/util/Collection;
      39: invokevirtual #260                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc_w         #265                // String ]
      45: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #267                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public boolean shutdownAndAwaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: lload_1
       5: aload_3
       6: invokevirtual #270                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.shutdownAndAwaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public com.amazonaws.services.simpleworkflow.flow.DataConverter getDataConverter();
    Code:
       0: aload_0
       1: getfield      #25                 // Field factoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory;
       4: invokevirtual #274                // Method com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory.getDataConverter:()Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;
       7: areturn

  public void setDefaultConverter(com.amazonaws.services.simpleworkflow.flow.DataConverter);
    Code:
       0: aload_0
       1: getfield      #25                 // Field factoryFactory:Lcom/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory;
       4: aload_1
       5: invokevirtual #278                // Method com/amazonaws/services/simpleworkflow/flow/pojo/POJOWorkflowDefinitionFactoryFactory.setDataConverter:(Lcom/amazonaws/services/simpleworkflow/flow/DataConverter;)V
       8: return

  public void setDisableTypeRegistrationOnStart(boolean);
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: iload_1
       5: invokevirtual #282                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.setDisableTypeRegistrationOnStart:(Z)V
       8: return

  public boolean isDisableTypeRegistrationOnStart();
    Code:
       0: aload_0
       1: getfield      #36                 // Field genericWorker:Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker;
       4: invokevirtual #286                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorkflowWorker.isDisableTypeRegistrationOnStart:()Z
       7: ireturn
}
