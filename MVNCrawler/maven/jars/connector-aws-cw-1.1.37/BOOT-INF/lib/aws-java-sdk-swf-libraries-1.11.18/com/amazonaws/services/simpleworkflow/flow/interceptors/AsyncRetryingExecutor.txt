Compiled from "AsyncRetryingExecutor.java"
public class com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRetryingExecutor implements com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncExecutor {
  private final com.amazonaws.services.simpleworkflow.flow.interceptors.RetryPolicy retryPolicy;

  private com.amazonaws.services.simpleworkflow.flow.WorkflowClock clock;

  public com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRetryingExecutor(com.amazonaws.services.simpleworkflow.flow.interceptors.RetryPolicy, com.amazonaws.services.simpleworkflow.flow.WorkflowClock);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #18                 // Field retryPolicy:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/RetryPolicy;
       9: aload_0
      10: aload_2
      11: putfield      #20                 // Field clock:Lcom/amazonaws/services/simpleworkflow/flow/WorkflowClock;
      14: return

  public void execute(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRunnable) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iconst_1
       4: aload_0
       5: getfield      #20                 // Field clock:Lcom/amazonaws/services/simpleworkflow/flow/WorkflowClock;
       8: invokeinterface #31,  1           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/WorkflowClock.currentTimeMillis:()J
      13: lconst_0
      14: invokespecial #37                 // Method scheduleWithRetry:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;Ljava/lang/Throwable;IJJ)V
      17: return

  private void scheduleWithRetry(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRunnable, java.lang.Throwable, int, long, long) throws java.lang.Throwable;
    Code:
       0: ldc2_w        #43                 // long -1l
       3: lstore        8
       5: iload_3
       6: iconst_1
       7: if_icmple     64
      10: aload_0
      11: getfield      #18                 // Field retryPolicy:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/RetryPolicy;
      14: aload_2
      15: invokeinterface #45,  2           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/interceptors/RetryPolicy.isRetryable:(Ljava/lang/Throwable;)Z
      20: ifne          25
      23: aload_2
      24: athrow
      25: aload_0
      26: getfield      #18                 // Field retryPolicy:Lcom/amazonaws/services/simpleworkflow/flow/interceptors/RetryPolicy;
      29: new           #51                 // class java/util/Date
      32: dup
      33: lload         4
      35: invokespecial #53                 // Method java/util/Date."<init>":(J)V
      38: new           #51                 // class java/util/Date
      41: dup
      42: lload         6
      44: invokespecial #53                 // Method java/util/Date."<init>":(J)V
      47: iload_3
      48: invokeinterface #56,  4           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/interceptors/RetryPolicy.nextRetryDelaySeconds:(Ljava/util/Date;Ljava/util/Date;I)J
      53: lstore        8
      55: lload         8
      57: lconst_0
      58: lcmp
      59: ifge          64
      62: aload_2
      63: athrow
      64: lload         8
      66: lconst_0
      67: lcmp
      68: ifle          107
      71: aload_0
      72: getfield      #20                 // Field clock:Lcom/amazonaws/services/simpleworkflow/flow/WorkflowClock;
      75: lload         8
      77: invokeinterface #60,  3           // InterfaceMethod com/amazonaws/services/simpleworkflow/flow/WorkflowClock.createTimer:(J)Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
      82: astore        10
      84: new           #64                 // class com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRetryingExecutor$1
      87: aload_0
      88: iconst_1
      89: anewarray     #66                 // class com/amazonaws/services/simpleworkflow/flow/core/Promise
      92: dup
      93: iconst_0
      94: aload         10
      96: aastore
      97: aload_1
      98: iload_3
      99: lload         4
     101: invokespecial #68                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRetryingExecutor$1."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRetryingExecutor;[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;IJ)V
     104: goto          115
     107: aload_0
     108: aload_1
     109: iload_3
     110: lload         4
     112: invokespecial #71                 // Method invoke:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;IJ)V
     115: return

  private void invoke(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRunnable, int, long);
    Code:
       0: new           #88                 // class com/amazonaws/services/simpleworkflow/flow/core/Settable
       3: dup
       4: invokespecial #90                 // Method com/amazonaws/services/simpleworkflow/flow/core/Settable."<init>":()V
       7: astore        5
       9: new           #91                 // class com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRetryingExecutor$2
      12: aload_0
      13: aload_1
      14: aload         5
      16: invokespecial #93                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRetryingExecutor$2."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRetryingExecutor;Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;)V
      19: new           #96                 // class com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRetryingExecutor$3
      22: aload_0
      23: iconst_1
      24: anewarray     #66                 // class com/amazonaws/services/simpleworkflow/flow/core/Promise
      27: dup
      28: iconst_0
      29: aload         5
      31: aastore
      32: aload         5
      34: aload_1
      35: iload_2
      36: lload_3
      37: invokespecial #98                 // Method com/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRetryingExecutor$3."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRetryingExecutor;[Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;Lcom/amazonaws/services/simpleworkflow/flow/core/Settable;Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;IJ)V
      40: return

  static void access$0(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRetryingExecutor, com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRunnable, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: invokespecial #71                 // Method invoke:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;IJ)V
       7: return

  static com.amazonaws.services.simpleworkflow.flow.WorkflowClock access$1(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRetryingExecutor);
    Code:
       0: aload_0
       1: getfield      #20                 // Field clock:Lcom/amazonaws/services/simpleworkflow/flow/WorkflowClock;
       4: areturn

  static void access$2(com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRetryingExecutor, com.amazonaws.services.simpleworkflow.flow.interceptors.AsyncRunnable, java.lang.Throwable, int, long, long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: lload         4
       6: lload         6
       8: invokespecial #37                 // Method scheduleWithRetry:(Lcom/amazonaws/services/simpleworkflow/flow/interceptors/AsyncRunnable;Ljava/lang/Throwable;IJJ)V
      11: return
}
