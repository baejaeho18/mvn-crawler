Compiled from "WorkflowTestStatement.java"
public class com.amazonaws.services.simpleworkflow.flow.junit.WorkflowTestStatement extends org.junit.runners.model.Statement {
  private final java.util.concurrent.Callable<com.amazonaws.services.simpleworkflow.flow.junit.WorkflowTestBase> workflowTestAccessor;

  private final org.junit.runners.model.Statement base;

  private java.lang.Long timeout;

  boolean completed;

  private java.lang.Throwable failure;

  boolean waitingOnTimer;

  private java.lang.Class<? extends java.lang.Throwable> expectedException;

  private boolean flowTestRunner;

  public com.amazonaws.services.simpleworkflow.flow.junit.WorkflowTestStatement(java.util.concurrent.Callable<com.amazonaws.services.simpleworkflow.flow.junit.WorkflowTestBase>, org.junit.runners.model.Statement, java.lang.Long, java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/junit/runners/model/Statement."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #30                 // Field workflowTestAccessor:Ljava/util/concurrent/Callable;
       9: aload_0
      10: aload_2
      11: putfield      #32                 // Field base:Lorg/junit/runners/model/Statement;
      14: aload_0
      15: aload_3
      16: putfield      #34                 // Field timeout:Ljava/lang/Long;
      19: aload_0
      20: aload         4
      22: putfield      #36                 // Field expectedException:Ljava/lang/Class;
      25: return

  public void evaluate() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #47                 // Field flowTestRunner:Z
       4: ifne          17
       7: new           #49                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #51                 // String WorkflowTest rule can be used only with flow specific test runners: FlowBlockJUnit4ClassRunner and FlowSpringJUnit4ClassRunner
      13: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #30                 // Field workflowTestAccessor:Ljava/util/concurrent/Callable;
      21: invokeinterface #56,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      26: checkcast     #62                 // class com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase
      29: astore_1
      30: aconst_null
      31: astore_2
      32: aload_0
      33: getfield      #34                 // Field timeout:Ljava/lang/Long;
      36: ifnull        51
      39: aload_0
      40: getfield      #34                 // Field timeout:Ljava/lang/Long;
      43: invokevirtual #64                 // Method java/lang/Long.longValue:()J
      46: lconst_0
      47: lcmp
      48: ifne          73
      51: aload_0
      52: aload_1
      53: invokespecial #70                 // Method asyncEvaluate:(Lcom/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase;)V
      56: aload_0
      57: iconst_1
      58: putfield      #74                 // Field completed:Z
      61: goto          98
      64: astore_3
      65: aload_0
      66: aload_3
      67: putfield      #76                 // Field failure:Ljava/lang/Throwable;
      70: goto          98
      73: new           #78                 // class com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestStatement$1
      76: dup
      77: aload_0
      78: aload_1
      79: invokespecial #80                 // Method com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestStatement$1."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestStatement;Lcom/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase;)V
      82: astore_2
      83: aload_2
      84: invokevirtual #83                 // Method java/lang/Thread.start:()V
      87: aload_2
      88: aload_0
      89: getfield      #34                 // Field timeout:Ljava/lang/Long;
      92: invokevirtual #64                 // Method java/lang/Long.longValue:()J
      95: invokevirtual #88                 // Method java/lang/Thread.join:(J)V
      98: aload_0
      99: getfield      #76                 // Field failure:Ljava/lang/Throwable;
     102: ifnull        135
     105: aload_0
     106: getfield      #36                 // Field expectedException:Ljava/lang/Class;
     109: ifnull        130
     112: aload_0
     113: getfield      #36                 // Field expectedException:Ljava/lang/Class;
     116: aload_0
     117: getfield      #76                 // Field failure:Ljava/lang/Throwable;
     120: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     123: invokevirtual #98                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     126: ifeq          130
     129: return
     130: aload_0
     131: getfield      #76                 // Field failure:Ljava/lang/Throwable;
     134: athrow
     135: aload_0
     136: getfield      #74                 // Field completed:Z
     139: ifne          239
     142: aload_0
     143: getfield      #104                // Field waitingOnTimer:Z
     146: ifeq          193
     149: new           #106                // class java/lang/AssertionError
     152: dup
     153: new           #108                // class java/lang/StringBuilder
     156: dup
     157: ldc           #110                // String Test timed out after
     159: invokespecial #112                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     162: aload_0
     163: getfield      #34                 // Field timeout:Ljava/lang/Long;
     166: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     169: ldc           #117                // String  milliseconds. The following asynchrous tasks are outstanding: \n
     171: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload_1
     175: getfield      #122                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.scope:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncScope;
     178: invokevirtual #126                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncScope.getAsynchronousThreadDumpAsString:()Ljava/lang/String;
     181: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: invokespecial #135                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     190: astore_3
     191: aload_3
     192: athrow
     193: new           #106                // class java/lang/AssertionError
     196: dup
     197: new           #108                // class java/lang/StringBuilder
     200: dup
     201: ldc           #110                // String Test timed out after
     203: invokespecial #112                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     206: aload_0
     207: getfield      #34                 // Field timeout:Ljava/lang/Long;
     210: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     213: ldc           #138                // String  milliseconds
     215: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     221: invokespecial #135                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     224: astore_3
     225: aload_2
     226: ifnull        237
     229: aload_3
     230: aload_2
     231: invokevirtual #140                // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
     234: invokevirtual #144                // Method java/lang/AssertionError.setStackTrace:([Ljava/lang/StackTraceElement;)V
     237: aload_3
     238: athrow
     239: aload_0
     240: getfield      #36                 // Field expectedException:Ljava/lang/Class;
     243: ifnull        273
     246: new           #106                // class java/lang/AssertionError
     249: dup
     250: new           #108                // class java/lang/StringBuilder
     253: dup
     254: ldc           #148                // String Expected exception:
     256: invokespecial #112                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     259: aload_0
     260: getfield      #36                 // Field expectedException:Ljava/lang/Class;
     263: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     266: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     269: invokespecial #135                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     272: athrow
     273: return
    Exception table:
       from    to  target type
          51    61    64   Class java/lang/Throwable

  private void asyncEvaluate(com.amazonaws.services.simpleworkflow.flow.junit.WorkflowTestBase) throws java.lang.Throwable, java.lang.InterruptedException;
    Code:
       0: aload_1
       1: new           #159                // class com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestStatement$2
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #161                // Method com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestStatement$2."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestStatement;Lcom/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase;)V
      10: putfield      #122                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.scope:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncScope;
      13: iconst_0
      14: istore_2
      15: goto          166
      18: aload_1
      19: getfield      #122                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.scope:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncScope;
      22: invokevirtual #162                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncScope.eventLoop:()Z
      25: istore_2
      26: aload_1
      27: getfield      #166                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.waits:Ljava/util/List;
      30: invokeinterface #170,  1          // InterfaceMethod java/util/List.size:()I
      35: ifne          117
      38: aload_1
      39: getfield      #176                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.workflowClock:Lcom/amazonaws/services/simpleworkflow/flow/test/TestWorkflowClock;
      42: invokevirtual #180                // Method com/amazonaws/services/simpleworkflow/flow/test/TestWorkflowClock.fireTimers:()Ljava/lang/Long;
      45: astore_3
      46: aload_3
      47: ifnonnull     53
      50: goto          176
      53: aload_3
      54: invokevirtual #64                 // Method java/lang/Long.longValue:()J
      57: l2d
      58: aload_1
      59: getfield      #186                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.clockAcceleration:D
      62: ddiv
      63: d2l
      64: lstore        4
      66: lload         4
      68: ldc2_w        #190                // long 5l
      71: lcmp
      72: ifle          103
      75: aload_0
      76: iconst_1
      77: putfield      #104                // Field waitingOnTimer:Z
      80: lload         4
      82: invokestatic  #192                // Method java/lang/Thread.sleep:(J)V
      85: goto          98
      88: astore        6
      90: aload_0
      91: iconst_0
      92: putfield      #104                // Field waitingOnTimer:Z
      95: aload         6
      97: athrow
      98: aload_0
      99: iconst_0
     100: putfield      #104                // Field waitingOnTimer:Z
     103: aload_1
     104: getfield      #176                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.workflowClock:Lcom/amazonaws/services/simpleworkflow/flow/test/TestWorkflowClock;
     107: aload_3
     108: invokevirtual #64                 // Method java/lang/Long.longValue:()J
     111: invokevirtual #195                // Method com/amazonaws/services/simpleworkflow/flow/test/TestWorkflowClock.advanceMilliseconds:(J)V
     114: goto          166
     117: aload_1
     118: getfield      #166                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.waits:Ljava/util/List;
     121: invokeinterface #198,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     126: astore        4
     128: goto          147
     131: aload         4
     133: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     138: checkcast     #207                // class com/amazonaws/services/simpleworkflow/flow/core/Settable
     141: astore_3
     142: aload_3
     143: aconst_null
     144: invokevirtual #209                // Method com/amazonaws/services/simpleworkflow/flow/core/Settable.set:(Ljava/lang/Object;)V
     147: aload         4
     149: invokeinterface #212,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     154: ifne          131
     157: aload_1
     158: getfield      #166                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.waits:Ljava/util/List;
     161: invokeinterface #215,  1          // InterfaceMethod java/util/List.clear:()V
     166: aload_1
     167: getfield      #122                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.scope:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncScope;
     170: invokevirtual #218                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncScope.isComplete:()Z
     173: ifeq          18
     176: aload_1
     177: getfield      #221                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.disableOutstandingTasksCheck:Z
     180: ifne          226
     183: iload_2
     184: ifne          226
     187: new           #49                 // class java/lang/IllegalStateException
     190: dup
     191: new           #108                // class java/lang/StringBuilder
     194: dup
     195: ldc           #224                // String There are outstanding tasks after test completed execution: \n
     197: invokespecial #112                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     200: aload_1
     201: getfield      #122                // Field com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.scope:Lcom/amazonaws/services/simpleworkflow/flow/core/AsyncScope;
     204: invokevirtual #126                // Method com/amazonaws/services/simpleworkflow/flow/core/AsyncScope.getAsynchronousThreadDumpAsString:()Ljava/lang/String;
     207: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     216: athrow
     217: astore        7
     219: aload_1
     220: invokevirtual #226                // Method com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.afterEvaluate:()V
     223: aload         7
     225: athrow
     226: aload_1
     227: invokevirtual #226                // Method com/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase.afterEvaluate:()V
     230: return
    Exception table:
       from    to  target type
          80    88    88   any
           0   217   217   any

  public void setTestTimeoutActualTimeMilliseconds(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          14
       6: aload_0
       7: lload_1
       8: invokestatic  #237                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: putfield      #34                 // Field timeout:Ljava/lang/Long;
      14: return

  public void setExpectedException(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field expectedException:Ljava/lang/Class;
       5: return

  public void setFlowTestRunner(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field flowTestRunner:Z
       5: return

  static void access$0(com.amazonaws.services.simpleworkflow.flow.junit.WorkflowTestStatement, com.amazonaws.services.simpleworkflow.flow.junit.WorkflowTestBase) throws java.lang.Throwable, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #70                 // Method asyncEvaluate:(Lcom/amazonaws/services/simpleworkflow/flow/junit/WorkflowTestBase;)V
       5: return

  static void access$1(com.amazonaws.services.simpleworkflow.flow.junit.WorkflowTestStatement, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field failure:Ljava/lang/Throwable;
       5: return

  static org.junit.runners.model.Statement access$2(com.amazonaws.services.simpleworkflow.flow.junit.WorkflowTestStatement);
    Code:
       0: aload_0
       1: getfield      #32                 // Field base:Lorg/junit/runners/model/Statement;
       4: areturn
}
