Compiled from "GenericActivityWorker.java"
public class com.amazonaws.services.simpleworkflow.flow.worker.GenericActivityWorker extends com.amazonaws.services.simpleworkflow.flow.worker.GenericWorker {
  private static final org.apache.commons.logging.Log log;

  private static final java.lang.String POLL_THREAD_NAME_PREFIX;

  private static final java.lang.String ACTIVITY_THREAD_NAME_PREFIX;

  private com.amazonaws.services.simpleworkflow.flow.generic.ActivityImplementationFactory activityImplementationFactory;

  private int taskExecutorThreadPoolSize;

  static {};
    Code:
       0: ldc           #1                  // class com/amazonaws/services/simpleworkflow/flow/worker/GenericActivityWorker
       2: invokestatic  #22                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #28                 // Field log:Lorg/apache/commons/logging/Log;
       8: return

  public com.amazonaws.services.simpleworkflow.flow.worker.GenericActivityWorker(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #35                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Ljava/lang/String;)V
       7: aload_0
       8: bipush        100
      10: putfield      #37                 // Field taskExecutorThreadPoolSize:I
      13: aload_1
      14: ifnonnull     27
      17: new           #39                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #41                 // String service
      23: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: return

  public com.amazonaws.services.simpleworkflow.flow.worker.GenericActivityWorker();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker."<init>":()V
       4: aload_0
       5: bipush        100
       7: putfield      #37                 // Field taskExecutorThreadPoolSize:I
      10: return

  public com.amazonaws.services.simpleworkflow.flow.generic.ActivityImplementationFactory getActivityImplementationFactory();
    Code:
       0: aload_0
       1: getfield      #60                 // Field activityImplementationFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementationFactory;
       4: areturn

  public void setActivityImplementationFactory(com.amazonaws.services.simpleworkflow.flow.generic.ActivityImplementationFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field activityImplementationFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementationFactory;
       5: return

  public int getTaskExecutorThreadPoolSize();
    Code:
       0: aload_0
       1: getfield      #37                 // Field taskExecutorThreadPoolSize:I
       4: ireturn

  public void setTaskExecutorThreadPoolSize(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #39                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #68                 // String 0 or negative taskExecutorThreadPoolSize
      11: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: invokevirtual #70                 // Method checkStarted:()V
      19: aload_0
      20: iload_1
      21: putfield      #37                 // Field taskExecutorThreadPoolSize:I
      24: return

  protected java.util.concurrent.Semaphore createPollSemaphore();
    Code:
       0: new           #75                 // class java/util/concurrent/Semaphore
       3: dup
       4: aload_0
       5: getfield      #37                 // Field taskExecutorThreadPoolSize:I
       8: invokespecial #77                 // Method java/util/concurrent/Semaphore."<init>":(I)V
      11: areturn

  public java.lang.String toString();
    Code:
       0: new           #81                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #89                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: invokestatic  #94                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokespecial #98                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      17: ldc           #99                 // String  [super=
      19: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokespecial #105                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker.toString:()Ljava/lang/String;
      26: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #107                // String , taskExecutorThreadPoolSize=
      31: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #37                 // Field taskExecutorThreadPoolSize:I
      38: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #112                // String ]
      43: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  protected java.lang.String getPollThreadNamePrefix();
    Code:
       0: new           #81                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #10                 // String SWF Activity Poll
       6: invokespecial #98                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: invokevirtual #116                // Method getTaskListToPoll:()Ljava/lang/String;
      13: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #119                // String
      18: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  protected com.amazonaws.services.simpleworkflow.flow.worker.TaskPoller createPoller();
    Code:
       0: new           #123                // class java/util/concurrent/ThreadPoolExecutor
       3: dup
       4: iconst_1
       5: aload_0
       6: getfield      #37                 // Field taskExecutorThreadPoolSize:I
       9: lconst_1
      10: getstatic     #125                // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      13: new           #131                // class java/util/concurrent/SynchronousQueue
      16: dup
      17: invokespecial #133                // Method java/util/concurrent/SynchronousQueue."<init>":()V
      20: invokespecial #134                // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V
      23: astore_1
      24: aload_1
      25: new           #137                // class com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker$ExecutorThreadFactory
      28: dup
      29: aload_0
      30: new           #81                 // class java/lang/StringBuilder
      33: dup
      34: ldc           #139                // String SWF Activity
      36: invokespecial #98                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      39: aload_0
      40: invokevirtual #116                // Method getTaskListToPoll:()Ljava/lang/String;
      43: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #119                // String
      48: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #141                // Method com/amazonaws/services/simpleworkflow/flow/worker/GenericWorker$ExecutorThreadFactory."<init>":(Lcom/amazonaws/services/simpleworkflow/flow/worker/GenericWorker;Ljava/lang/String;)V
      57: invokevirtual #144                // Method java/util/concurrent/ThreadPoolExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
      60: aload_1
      61: new           #148                // class com/amazonaws/services/simpleworkflow/flow/worker/BlockCallerPolicy
      64: dup
      65: invokespecial #150                // Method com/amazonaws/services/simpleworkflow/flow/worker/BlockCallerPolicy."<init>":()V
      68: invokevirtual #151                // Method java/util/concurrent/ThreadPoolExecutor.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
      71: new           #155                // class com/amazonaws/services/simpleworkflow/flow/worker/ActivityTaskPoller
      74: dup
      75: aload_0
      76: getfield      #157                // Field service:Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;
      79: aload_0
      80: getfield      #159                // Field domain:Ljava/lang/String;
      83: aload_0
      84: invokevirtual #116                // Method getTaskListToPoll:()Ljava/lang/String;
      87: aload_0
      88: getfield      #60                 // Field activityImplementationFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementationFactory;
      91: aload_1
      92: invokespecial #161                // Method com/amazonaws/services/simpleworkflow/flow/worker/ActivityTaskPoller."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementationFactory;Ljava/util/concurrent/ThreadPoolExecutor;)V
      95: areturn

  public void registerTypesToPoll();
    Code:
       0: aload_0
       1: getfield      #157                // Field service:Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;
       4: aload_0
       5: getfield      #159                // Field domain:Ljava/lang/String;
       8: aload_0
       9: invokevirtual #116                // Method getTaskListToPoll:()Ljava/lang/String;
      12: aload_0
      13: getfield      #60                 // Field activityImplementationFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementationFactory;
      16: invokestatic  #167                // Method registerActivityTypes:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementationFactory;)V
      19: return

  public static void registerActivityTypes(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, java.lang.String, com.amazonaws.services.simpleworkflow.flow.generic.ActivityImplementationFactory);
    Code:
       0: aload_3
       1: invokevirtual #171                // Method com/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementationFactory.getActivityTypesToRegister:()Ljava/lang/Iterable;
       4: invokeinterface #177,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: goto          142
      14: aload         5
      16: invokeinterface #183,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: checkcast     #189                // class com/amazonaws/services/simpleworkflow/model/ActivityType
      24: astore        4
      26: aload_3
      27: aload         4
      29: invokevirtual #191                // Method com/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementationFactory.getActivityImplementation:(Lcom/amazonaws/services/simpleworkflow/model/ActivityType;)Lcom/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementation;
      32: astore        6
      34: aload         6
      36: ifnonnull     64
      39: new           #195                // class java/lang/IllegalStateException
      42: dup
      43: new           #81                 // class java/lang/StringBuilder
      46: dup
      47: ldc           #197                // String No implementation found for type needed registration:
      49: invokespecial #98                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      52: aload         4
      54: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #202                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload         6
      66: invokevirtual #203                // Method com/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementation.getRegistrationOptions:()Lcom/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions;
      69: astore        7
      71: aload         7
      73: ifnull        142
      76: aload_0
      77: aload_1
      78: aload         4
      80: aload         7
      82: aload_2
      83: invokestatic  #209                // Method registerActivityType:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/ActivityType;Lcom/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions;Ljava/lang/String;)V
      86: goto          142
      89: pop
      90: getstatic     #28                 // Field log:Lorg/apache/commons/logging/Log;
      93: invokeinterface #213,  1          // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      98: ifeq          142
     101: getstatic     #28                 // Field log:Lorg/apache/commons/logging/Log;
     104: new           #81                 // class java/lang/StringBuilder
     107: dup
     108: ldc           #219                // String Activity version already registered:
     110: invokespecial #98                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     113: aload         4
     115: invokevirtual #221                // Method com/amazonaws/services/simpleworkflow/model/ActivityType.getName:()Ljava/lang/String;
     118: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: ldc           #224                // String _
     123: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         4
     128: invokevirtual #226                // Method com/amazonaws/services/simpleworkflow/model/ActivityType.getVersion:()Ljava/lang/String;
     131: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokeinterface #229,  2          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     142: aload         5
     144: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     149: ifne          14
     152: return
    Exception table:
       from    to  target type
          26    86    89   Class com/amazonaws/services/simpleworkflow/model/TypeAlreadyExistsException

  public static void registerActivityType(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.ActivityType, com.amazonaws.services.simpleworkflow.flow.worker.ActivityTypeRegistrationOptions, java.lang.String) throws com.amazonaws.AmazonServiceException;
    Code:
       0: new           #248                // class com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest
       3: dup
       4: invokespecial #250                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest."<init>":()V
       7: astore        5
       9: aload         5
      11: aload_1
      12: invokevirtual #251                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setDomain:(Ljava/lang/String;)V
      15: aload_3
      16: invokevirtual #254                // Method com/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions.getDefaultTaskList:()Ljava/lang/String;
      19: astore        6
      21: aload         6
      23: ifnonnull     33
      26: aload         4
      28: astore        6
      30: goto          47
      33: aload         6
      35: ldc_w         #259                // String NO_DEFAULT_TASK_LIST
      38: invokevirtual #261                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          47
      44: aconst_null
      45: astore        6
      47: aload         6
      49: ifnull        77
      52: aload         6
      54: invokevirtual #265                // Method java/lang/String.isEmpty:()Z
      57: ifne          77
      60: aload         5
      62: new           #268                // class com/amazonaws/services/simpleworkflow/model/TaskList
      65: dup
      66: invokespecial #270                // Method com/amazonaws/services/simpleworkflow/model/TaskList."<init>":()V
      69: aload         6
      71: invokevirtual #271                // Method com/amazonaws/services/simpleworkflow/model/TaskList.withName:(Ljava/lang/String;)Lcom/amazonaws/services/simpleworkflow/model/TaskList;
      74: invokevirtual #275                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setDefaultTaskList:(Lcom/amazonaws/services/simpleworkflow/model/TaskList;)V
      77: aload         5
      79: aload_2
      80: invokevirtual #221                // Method com/amazonaws/services/simpleworkflow/model/ActivityType.getName:()Ljava/lang/String;
      83: invokevirtual #279                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setName:(Ljava/lang/String;)V
      86: aload         5
      88: aload_2
      89: invokevirtual #226                // Method com/amazonaws/services/simpleworkflow/model/ActivityType.getVersion:()Ljava/lang/String;
      92: invokevirtual #282                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setVersion:(Ljava/lang/String;)V
      95: aload         5
      97: aload_3
      98: invokevirtual #285                // Method com/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions.getDefaultTaskStartToCloseTimeoutSeconds:()Ljava/lang/Long;
     101: invokestatic  #289                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowHelpers.secondsToDuration:(Ljava/lang/Long;)Ljava/lang/String;
     104: invokevirtual #295                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setDefaultTaskStartToCloseTimeout:(Ljava/lang/String;)V
     107: aload         5
     109: aload_3
     110: invokevirtual #298                // Method com/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions.getDefaultTaskScheduleToCloseTimeoutSeconds:()Ljava/lang/Long;
     113: invokestatic  #289                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowHelpers.secondsToDuration:(Ljava/lang/Long;)Ljava/lang/String;
     116: invokevirtual #301                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setDefaultTaskScheduleToCloseTimeout:(Ljava/lang/String;)V
     119: aload         5
     121: aload_3
     122: invokevirtual #304                // Method com/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions.getDefaultTaskHeartbeatTimeoutSeconds:()Ljava/lang/Long;
     125: invokestatic  #289                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowHelpers.secondsToDuration:(Ljava/lang/Long;)Ljava/lang/String;
     128: invokevirtual #307                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setDefaultTaskHeartbeatTimeout:(Ljava/lang/String;)V
     131: aload         5
     133: aload_3
     134: invokevirtual #310                // Method com/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions.getDefaultTaskScheduleToStartTimeoutSeconds:()Ljava/lang/Long;
     137: invokestatic  #289                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowHelpers.secondsToDuration:(Ljava/lang/Long;)Ljava/lang/String;
     140: invokevirtual #313                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setDefaultTaskScheduleToStartTimeout:(Ljava/lang/String;)V
     143: aload         5
     145: aload_3
     146: invokevirtual #316                // Method com/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions.getDefaultTaskPriority:()Ljava/lang/Integer;
     149: invokestatic  #320                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowHelpers.taskPriorityToString:(Ljava/lang/Integer;)Ljava/lang/String;
     152: invokevirtual #324                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setDefaultTaskPriority:(Ljava/lang/String;)V
     155: aload_3
     156: invokevirtual #327                // Method com/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions.getDescription:()Ljava/lang/String;
     159: ifnull        171
     162: aload         5
     164: aload_3
     165: invokevirtual #327                // Method com/amazonaws/services/simpleworkflow/flow/worker/ActivityTypeRegistrationOptions.getDescription:()Ljava/lang/String;
     168: invokevirtual #330                // Method com/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest.setDescription:(Ljava/lang/String;)V
     171: aload_0
     172: aload         5
     174: invokeinterface #333,  2          // InterfaceMethod com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow.registerActivityType:(Lcom/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest;)V
     179: getstatic     #28                 // Field log:Lorg/apache/commons/logging/Log;
     182: invokeinterface #336,  1          // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
     187: ifeq          215
     190: getstatic     #28                 // Field log:Lorg/apache/commons/logging/Log;
     193: new           #81                 // class java/lang/StringBuilder
     196: dup
     197: ldc_w         #339                // String regisered activity type:
     200: invokespecial #98                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     203: aload_2
     204: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     207: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokeinterface #341,  2          // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     215: return

  protected void checkRequredProperties();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #60                 // Field activityImplementationFactory:Lcom/amazonaws/services/simpleworkflow/flow/generic/ActivityImplementationFactory;
       5: ldc_w         #348                // String activityImplementationFactory
       8: invokevirtual #349                // Method checkRequiredProperty:(Ljava/lang/Object;Ljava/lang/String;)V
      11: return
}
