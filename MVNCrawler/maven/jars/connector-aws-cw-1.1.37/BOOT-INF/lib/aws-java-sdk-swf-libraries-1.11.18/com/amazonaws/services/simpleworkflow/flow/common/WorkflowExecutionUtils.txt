Compiled from "WorkflowExecutionUtils.java"
public class com.amazonaws.services.simpleworkflow.flow.common.WorkflowExecutionUtils {
  public com.amazonaws.services.simpleworkflow.flow.common.WorkflowExecutionUtils();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.amazonaws.services.simpleworkflow.model.WorkflowExecutionCompletedEventAttributes waitForWorkflowExecutionResult(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lconst_0
       4: invokestatic  #20                 // Method waitForWorkflowExecutionResult:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;J)Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionCompletedEventAttributes;
       7: areturn
       8: astore_3
       9: new           #23                 // class java/lang/Error
      12: dup
      13: ldc           #25                 // String should never happen
      15: aload_3
      16: invokespecial #27                 // Method java/lang/Error."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/util/concurrent/TimeoutException

  public static com.amazonaws.services.simpleworkflow.model.WorkflowExecutionCompletedEventAttributes waitForWorkflowExecutionResult(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution, long) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: invokestatic  #41                 // Method waitForWorkflowInstanceCompletion:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;J)Ljava/lang/String;
       7: getstatic     #45                 // Field com/amazonaws/services/simpleworkflow/model/CloseStatus.COMPLETED:Lcom/amazonaws/services/simpleworkflow/model/CloseStatus;
      10: invokevirtual #51                 // Method com/amazonaws/services/simpleworkflow/model/CloseStatus.toString:()Ljava/lang/String;
      13: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifne          52
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokestatic  #61                 // Method prettyPrintHistory:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Ljava/lang/String;
      25: astore        5
      27: new           #65                 // class java/lang/RuntimeException
      30: dup
      31: new           #67                 // class java/lang/StringBuilder
      34: dup
      35: ldc           #69                 // String Workflow instance is not in completed state:\n
      37: invokespecial #71                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      40: aload         5
      42: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #79                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: aload_1
      54: aload_2
      55: invokestatic  #80                 // Method getWorkflowExecutionResult:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionCompletedEventAttributes;
      58: areturn

  public static com.amazonaws.services.simpleworkflow.model.WorkflowExecutionCompletedEventAttributes getWorkflowExecutionResult(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // Method getInstanceCloseEvent:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Lcom/amazonaws/services/simpleworkflow/model/HistoryEvent;
       6: astore_3
       7: aload_3
       8: ifnonnull     21
      11: new           #90                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #92                 // String Workflow is still running
      17: invokespecial #94                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_3
      22: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      25: getstatic     #100                // Field com/amazonaws/services/simpleworkflow/model/EventType.WorkflowExecutionCompleted:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      28: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      31: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifeq          42
      37: aload_3
      38: invokevirtual #107                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getWorkflowExecutionCompletedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionCompletedEventAttributes;
      41: areturn
      42: new           #65                 // class java/lang/RuntimeException
      45: dup
      46: new           #67                 // class java/lang/StringBuilder
      49: dup
      50: ldc           #111                // String Workflow end state is not completed:
      52: invokespecial #71                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      55: aload_3
      56: invokestatic  #113                // Method prettyPrintHistoryEvent:(Lcom/amazonaws/services/simpleworkflow/model/HistoryEvent;)Ljava/lang/String;
      59: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #79                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      68: athrow

  public static com.amazonaws.services.simpleworkflow.model.HistoryEvent getInstanceCloseEvent(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #119                // Method describeWorkflowInstance:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo;
       6: astore_3
       7: aload_3
       8: ifnull        27
      11: aload_3
      12: invokevirtual #123                // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getExecutionStatus:()Ljava/lang/String;
      15: getstatic     #128                // Field com/amazonaws/services/simpleworkflow/model/ExecutionStatus.OPEN:Lcom/amazonaws/services/simpleworkflow/model/ExecutionStatus;
      18: invokevirtual #134                // Method com/amazonaws/services/simpleworkflow/model/ExecutionStatus.toString:()Ljava/lang/String;
      21: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          29
      27: aconst_null
      28: areturn
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokestatic  #135                // Method getHistory:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Ljava/util/List;
      35: astore        4
      37: aconst_null
      38: astore        5
      40: aload         4
      42: invokeinterface #139,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore        7
      49: goto          79
      52: aload         7
      54: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #96                 // class com/amazonaws/services/simpleworkflow/model/HistoryEvent
      62: astore        6
      64: aload         6
      66: invokestatic  #151                // Method isWorkflowExecutionCompletedEvent:(Lcom/amazonaws/services/simpleworkflow/model/HistoryEvent;)Z
      69: ifeq          79
      72: aload         6
      74: astore        5
      76: goto          89
      79: aload         7
      81: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifne          52
      89: aload         5
      91: areturn

  public static boolean isWorkflowExecutionCompletedEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: ifnull        102
       4: aload_0
       5: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
       8: getstatic     #100                // Field com/amazonaws/services/simpleworkflow/model/EventType.WorkflowExecutionCompleted:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      11: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      14: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifne          100
      20: aload_0
      21: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      24: getstatic     #171                // Field com/amazonaws/services/simpleworkflow/model/EventType.WorkflowExecutionCanceled:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      27: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      30: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifne          100
      36: aload_0
      37: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      40: getstatic     #174                // Field com/amazonaws/services/simpleworkflow/model/EventType.WorkflowExecutionFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      43: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      46: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifne          100
      52: aload_0
      53: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      56: getstatic     #177                // Field com/amazonaws/services/simpleworkflow/model/EventType.WorkflowExecutionTimedOut:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      59: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      62: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifne          100
      68: aload_0
      69: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      72: getstatic     #180                // Field com/amazonaws/services/simpleworkflow/model/EventType.WorkflowExecutionContinuedAsNew:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      75: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      78: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      81: ifne          100
      84: aload_0
      85: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      88: getstatic     #183                // Field com/amazonaws/services/simpleworkflow/model/EventType.WorkflowExecutionTerminated:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      91: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      94: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      97: ifeq          102
     100: iconst_1
     101: ireturn
     102: iconst_0
     103: ireturn

  public static boolean isActivityTaskClosedEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: ifnull        70
       4: aload_0
       5: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
       8: getstatic     #187                // Field com/amazonaws/services/simpleworkflow/model/EventType.ActivityTaskCompleted:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      11: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      14: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifne          68
      20: aload_0
      21: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      24: getstatic     #190                // Field com/amazonaws/services/simpleworkflow/model/EventType.ActivityTaskCanceled:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      27: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      30: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifne          68
      36: aload_0
      37: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      40: getstatic     #193                // Field com/amazonaws/services/simpleworkflow/model/EventType.ActivityTaskFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      43: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      46: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifne          68
      52: aload_0
      53: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      56: getstatic     #196                // Field com/amazonaws/services/simpleworkflow/model/EventType.ActivityTaskTimedOut:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      59: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      62: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifeq          70
      68: iconst_1
      69: ireturn
      70: iconst_0
      71: ireturn

  public static boolean isExternalWorkflowClosedEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: ifnull        86
       4: aload_0
       5: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
       8: getstatic     #200                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionCompleted:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      11: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      14: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifne          84
      20: aload_0
      21: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      24: getstatic     #203                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionCanceled:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      27: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      30: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifne          84
      36: aload_0
      37: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      40: getstatic     #206                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      43: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      46: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifne          84
      52: aload_0
      53: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      56: getstatic     #209                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionTerminated:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      59: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      62: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifne          84
      68: aload_0
      69: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      72: getstatic     #212                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionTimedOut:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      75: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      78: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      81: ifeq          86
      84: iconst_1
      85: ireturn
      86: iconst_0
      87: ireturn

  public static com.amazonaws.services.simpleworkflow.model.WorkflowExecution getWorkflowIdFromExternalWorkflowCompletedEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: ifnull        124
       4: aload_0
       5: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
       8: getstatic     #200                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionCompleted:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      11: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      14: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          28
      20: aload_0
      21: invokevirtual #217                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getChildWorkflowExecutionCompletedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionCompletedEventAttributes;
      24: invokevirtual #221                // Method com/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionCompletedEventAttributes.getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      27: areturn
      28: aload_0
      29: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      32: getstatic     #203                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionCanceled:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      35: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      38: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          52
      44: aload_0
      45: invokevirtual #227                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getChildWorkflowExecutionCanceledEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionCanceledEventAttributes;
      48: invokevirtual #231                // Method com/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionCanceledEventAttributes.getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      51: areturn
      52: aload_0
      53: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      56: getstatic     #206                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      59: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      62: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifeq          76
      68: aload_0
      69: invokevirtual #234                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getChildWorkflowExecutionFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionFailedEventAttributes;
      72: invokevirtual #238                // Method com/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionFailedEventAttributes.getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      75: areturn
      76: aload_0
      77: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      80: getstatic     #209                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionTerminated:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      83: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      86: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      89: ifeq          100
      92: aload_0
      93: invokevirtual #241                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getChildWorkflowExecutionTerminatedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionTerminatedEventAttributes;
      96: invokevirtual #245                // Method com/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionTerminatedEventAttributes.getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      99: areturn
     100: aload_0
     101: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
     104: getstatic     #212                // Field com/amazonaws/services/simpleworkflow/model/EventType.ChildWorkflowExecutionTimedOut:Lcom/amazonaws/services/simpleworkflow/model/EventType;
     107: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
     110: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     113: ifeq          124
     116: aload_0
     117: invokevirtual #248                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getChildWorkflowExecutionTimedOutEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionTimedOutEventAttributes;
     120: invokevirtual #252                // Method com/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionTimedOutEventAttributes.getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
     123: areturn
     124: aconst_null
     125: areturn

  public static java.lang.String getId(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: ifnull        84
       6: aload_0
       7: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      10: getstatic     #256                // Field com/amazonaws/services/simpleworkflow/model/EventType.StartChildWorkflowExecutionFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      13: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      16: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          33
      22: aload_0
      23: invokevirtual #259                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getStartChildWorkflowExecutionFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionFailedEventAttributes;
      26: invokevirtual #263                // Method com/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionFailedEventAttributes.getWorkflowId:()Ljava/lang/String;
      29: astore_1
      30: goto          84
      33: aload_0
      34: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      37: getstatic     #268                // Field com/amazonaws/services/simpleworkflow/model/EventType.ScheduleActivityTaskFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      40: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      43: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          60
      49: aload_0
      50: invokevirtual #271                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getScheduleActivityTaskFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/ScheduleActivityTaskFailedEventAttributes;
      53: invokevirtual #275                // Method com/amazonaws/services/simpleworkflow/model/ScheduleActivityTaskFailedEventAttributes.getActivityId:()Ljava/lang/String;
      56: astore_1
      57: goto          84
      60: aload_0
      61: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      64: getstatic     #280                // Field com/amazonaws/services/simpleworkflow/model/EventType.StartTimerFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      67: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      70: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifeq          84
      76: aload_0
      77: invokevirtual #283                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getStartTimerFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/StartTimerFailedEventAttributes;
      80: invokevirtual #287                // Method com/amazonaws/services/simpleworkflow/model/StartTimerFailedEventAttributes.getTimerId:()Ljava/lang/String;
      83: astore_1
      84: aload_1
      85: areturn

  public static java.lang.String getFailureCause(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: ifnull        165
       6: aload_0
       7: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      10: getstatic     #256                // Field com/amazonaws/services/simpleworkflow/model/EventType.StartChildWorkflowExecutionFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      13: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      16: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          33
      22: aload_0
      23: invokevirtual #259                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getStartChildWorkflowExecutionFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionFailedEventAttributes;
      26: invokevirtual #295                // Method com/amazonaws/services/simpleworkflow/model/StartChildWorkflowExecutionFailedEventAttributes.getCause:()Ljava/lang/String;
      29: astore_1
      30: goto          165
      33: aload_0
      34: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      37: getstatic     #298                // Field com/amazonaws/services/simpleworkflow/model/EventType.SignalExternalWorkflowExecutionFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      40: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      43: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          60
      49: aload_0
      50: invokevirtual #301                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getSignalExternalWorkflowExecutionFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/SignalExternalWorkflowExecutionFailedEventAttributes;
      53: invokevirtual #305                // Method com/amazonaws/services/simpleworkflow/model/SignalExternalWorkflowExecutionFailedEventAttributes.getCause:()Ljava/lang/String;
      56: astore_1
      57: goto          165
      60: aload_0
      61: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      64: getstatic     #268                // Field com/amazonaws/services/simpleworkflow/model/EventType.ScheduleActivityTaskFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      67: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      70: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifeq          87
      76: aload_0
      77: invokevirtual #271                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getScheduleActivityTaskFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/ScheduleActivityTaskFailedEventAttributes;
      80: invokevirtual #308                // Method com/amazonaws/services/simpleworkflow/model/ScheduleActivityTaskFailedEventAttributes.getCause:()Ljava/lang/String;
      83: astore_1
      84: goto          165
      87: aload_0
      88: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      91: getstatic     #280                // Field com/amazonaws/services/simpleworkflow/model/EventType.StartTimerFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
      94: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
      97: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     100: ifeq          114
     103: aload_0
     104: invokevirtual #283                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getStartTimerFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/StartTimerFailedEventAttributes;
     107: invokevirtual #309                // Method com/amazonaws/services/simpleworkflow/model/StartTimerFailedEventAttributes.getCause:()Ljava/lang/String;
     110: astore_1
     111: goto          165
     114: aload_0
     115: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
     118: getstatic     #310                // Field com/amazonaws/services/simpleworkflow/model/EventType.ContinueAsNewWorkflowExecutionFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
     121: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
     124: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     127: ifeq          141
     130: aload_0
     131: invokevirtual #313                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getContinueAsNewWorkflowExecutionFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/ContinueAsNewWorkflowExecutionFailedEventAttributes;
     134: invokevirtual #317                // Method com/amazonaws/services/simpleworkflow/model/ContinueAsNewWorkflowExecutionFailedEventAttributes.getCause:()Ljava/lang/String;
     137: astore_1
     138: goto          165
     141: aload_0
     142: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
     145: getstatic     #320                // Field com/amazonaws/services/simpleworkflow/model/EventType.RecordMarkerFailed:Lcom/amazonaws/services/simpleworkflow/model/EventType;
     148: invokevirtual #106                // Method com/amazonaws/services/simpleworkflow/model/EventType.toString:()Ljava/lang/String;
     151: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     154: ifeq          165
     157: aload_0
     158: invokevirtual #323                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getRecordMarkerFailedEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/RecordMarkerFailedEventAttributes;
     161: invokevirtual #327                // Method com/amazonaws/services/simpleworkflow/model/RecordMarkerFailedEventAttributes.getCause:()Ljava/lang/String;
     164: astore_1
     165: aload_1
     166: areturn

  public static java.lang.String waitForWorkflowInstanceCompletion(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lconst_0
       4: invokestatic  #41                 // Method waitForWorkflowInstanceCompletion:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;J)Ljava/lang/String;
       7: areturn
       8: astore_3
       9: new           #23                 // class java/lang/Error
      12: dup
      13: ldc           #25                 // String should never happen
      15: aload_3
      16: invokespecial #27                 // Method java/lang/Error."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/util/concurrent/TimeoutException

  public static java.lang.String waitForWorkflowInstanceCompletion(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution, long) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: invokestatic  #331                // Method java/lang/System.currentTimeMillis:()J
       3: lstore        5
       5: aconst_null
       6: astore        7
       8: lload_3
       9: lconst_0
      10: lcmp
      11: ifle          73
      14: invokestatic  #331                // Method java/lang/System.currentTimeMillis:()J
      17: lload         5
      19: lsub
      20: lload_3
      21: ldc2_w        #337                // long 1000l
      24: lmul
      25: lcmp
      26: iflt          73
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokestatic  #61                 // Method prettyPrintHistory:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Ljava/lang/String;
      35: astore        8
      37: new           #30                 // class java/util/concurrent/TimeoutException
      40: dup
      41: new           #67                 // class java/lang/StringBuilder
      44: dup
      45: ldc_w         #339                // String Workflow instance is not complete after
      48: invokespecial #71                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      51: lload_3
      52: invokevirtual #341                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc_w         #344                // String  seconds: \n
      58: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload         8
      63: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #346                // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload         7
      75: ifnull        84
      78: ldc2_w        #337                // long 1000l
      81: invokestatic  #347                // Method java/lang/Thread.sleep:(J)V
      84: aload_0
      85: aload_1
      86: aload_2
      87: invokestatic  #119                // Method describeWorkflowInstance:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo;
      90: astore        7
      92: aload         7
      94: invokevirtual #123                // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getExecutionStatus:()Ljava/lang/String;
      97: getstatic     #128                // Field com/amazonaws/services/simpleworkflow/model/ExecutionStatus.OPEN:Lcom/amazonaws/services/simpleworkflow/model/ExecutionStatus;
     100: invokevirtual #134                // Method com/amazonaws/services/simpleworkflow/model/ExecutionStatus.toString:()Ljava/lang/String;
     103: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     106: ifne          8
     109: aload         7
     111: invokevirtual #353                // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getCloseStatus:()Ljava/lang/String;
     114: areturn

  public static java.lang.String waitForWorkflowInstanceCompletionAcrossGenerations(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution, long) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_2
       1: astore        5
       3: invokestatic  #331                // Method java/lang/System.currentTimeMillis:()J
       6: lstore        6
       8: aload_0
       9: aload_1
      10: aload         5
      12: lload_3
      13: invokestatic  #41                 // Method waitForWorkflowInstanceCompletion:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;J)Ljava/lang/String;
      16: astore        8
      18: goto          99
      21: aload_0
      22: aload_1
      23: aload         5
      25: invokestatic  #86                 // Method getInstanceCloseEvent:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Lcom/amazonaws/services/simpleworkflow/model/HistoryEvent;
      28: astore        9
      30: aload         9
      32: invokevirtual #358                // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getWorkflowExecutionContinuedAsNewEventAttributes:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionContinuedAsNewEventAttributes;
      35: astore        10
      37: new           #169                // class com/amazonaws/services/simpleworkflow/model/WorkflowExecution
      40: dup
      41: invokespecial #362                // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecution."<init>":()V
      44: aload         5
      46: invokevirtual #363                // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecution.getWorkflowId:()Ljava/lang/String;
      49: invokevirtual #364                // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecution.withWorkflowId:(Ljava/lang/String;)Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      52: aload         10
      54: invokevirtual #368                // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionContinuedAsNewEventAttributes.getNewExecutionRunId:()Ljava/lang/String;
      57: invokevirtual #373                // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecution.withRunId:(Ljava/lang/String;)Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      60: astore        11
      62: invokestatic  #331                // Method java/lang/System.currentTimeMillis:()J
      65: lstore        12
      67: lload         12
      69: lload         6
      71: lsub
      72: lstore        14
      74: lload_3
      75: lload         14
      77: ldc2_w        #337                // long 1000l
      80: ldiv
      81: lsub
      82: lstore        16
      84: aload_0
      85: aload_1
      86: aload         11
      88: lload         16
      90: invokestatic  #41                 // Method waitForWorkflowInstanceCompletion:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;J)Ljava/lang/String;
      93: astore        8
      95: aload         11
      97: astore        5
      99: aload         8
     101: getstatic     #376                // Field com/amazonaws/services/simpleworkflow/model/CloseStatus.CONTINUED_AS_NEW:Lcom/amazonaws/services/simpleworkflow/model/CloseStatus;
     104: invokevirtual #51                 // Method com/amazonaws/services/simpleworkflow/model/CloseStatus.toString:()Ljava/lang/String;
     107: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     110: ifne          21
     113: aload         8
     115: areturn

  public static java.lang.String waitForWorkflowInstanceCompletionAcrossGenerations(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lconst_0
       4: invokestatic  #388                // Method waitForWorkflowInstanceCompletionAcrossGenerations:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;J)Ljava/lang/String;
       7: areturn
       8: astore_3
       9: new           #23                 // class java/lang/Error
      12: dup
      13: ldc           #25                 // String should never happen
      15: aload_3
      16: invokespecial #27                 // Method java/lang/Error."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/util/concurrent/TimeoutException

  public static com.amazonaws.services.simpleworkflow.model.WorkflowExecutionInfo describeWorkflowInstance(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution);
    Code:
       0: new           #390                // class com/amazonaws/services/simpleworkflow/model/DescribeWorkflowExecutionRequest
       3: dup
       4: invokespecial #392                // Method com/amazonaws/services/simpleworkflow/model/DescribeWorkflowExecutionRequest."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #393                // Method com/amazonaws/services/simpleworkflow/model/DescribeWorkflowExecutionRequest.setDomain:(Ljava/lang/String;)V
      13: aload_3
      14: aload_2
      15: invokevirtual #396                // Method com/amazonaws/services/simpleworkflow/model/DescribeWorkflowExecutionRequest.setExecution:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)V
      18: aload_0
      19: aload_3
      20: invokeinterface #400,  2          // InterfaceMethod com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow.describeWorkflowExecution:(Lcom/amazonaws/services/simpleworkflow/model/DescribeWorkflowExecutionRequest;)Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionDetail;
      25: astore        4
      27: aload         4
      29: invokevirtual #404                // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionDetail.getExecutionInfo:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo;
      32: astore        5
      34: aload         5
      36: areturn

  public static java.lang.String prettyPrintHistory(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #415                // Method prettyPrintHistory:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;Z)Ljava/lang/String;
       7: areturn

  public static java.lang.String prettyPrintHistory(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #135                // Method getHistory:(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Ljava/util/List;
       6: astore        4
       8: aload         4
      10: iload_3
      11: invokestatic  #418                // Method prettyPrintHistory:(Ljava/lang/Iterable;Z)Ljava/lang/String;
      14: areturn

  public static java.util.List<com.amazonaws.services.simpleworkflow.model.HistoryEvent> getHistory(com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution);
    Code:
       0: new           #425                // class java/util/ArrayList
       3: dup
       4: invokespecial #427                // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aconst_null
       9: astore        4
      11: aload         4
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokestatic  #428                // Method getHistoryPage:(Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow;Ljava/lang/String;Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)Lcom/amazonaws/services/simpleworkflow/model/History;
      19: astore        5
      21: aload_3
      22: aload         5
      24: invokevirtual #432                // Method com/amazonaws/services/simpleworkflow/model/History.getEvents:()Ljava/util/List;
      27: invokeinterface #438,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      32: pop
      33: aload         5
      35: invokevirtual #442                // Method com/amazonaws/services/simpleworkflow/model/History.getNextPageToken:()Ljava/lang/String;
      38: astore        4
      40: aload         4
      42: ifnonnull     11
      45: aload_3
      46: areturn

  public static com.amazonaws.services.simpleworkflow.model.History getHistoryPage(java.lang.String, com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflow, java.lang.String, com.amazonaws.services.simpleworkflow.model.WorkflowExecution);
    Code:
       0: new           #448                // class com/amazonaws/services/simpleworkflow/model/GetWorkflowExecutionHistoryRequest
       3: dup
       4: invokespecial #450                // Method com/amazonaws/services/simpleworkflow/model/GetWorkflowExecutionHistoryRequest."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_2
      12: invokevirtual #451                // Method com/amazonaws/services/simpleworkflow/model/GetWorkflowExecutionHistoryRequest.setDomain:(Ljava/lang/String;)V
      15: aload         4
      17: aload_3
      18: invokevirtual #452                // Method com/amazonaws/services/simpleworkflow/model/GetWorkflowExecutionHistoryRequest.setExecution:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)V
      21: aload         4
      23: aload_0
      24: invokevirtual #453                // Method com/amazonaws/services/simpleworkflow/model/GetWorkflowExecutionHistoryRequest.setNextPageToken:(Ljava/lang/String;)V
      27: aload_1
      28: aload         4
      30: invokeinterface #456,  2          // InterfaceMethod com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflow.getWorkflowExecutionHistory:(Lcom/amazonaws/services/simpleworkflow/model/GetWorkflowExecutionHistoryRequest;)Lcom/amazonaws/services/simpleworkflow/model/History;
      35: astore        5
      37: aload         5
      39: ifnonnull     67
      42: new           #460                // class java/lang/IllegalArgumentException
      45: dup
      46: new           #67                 // class java/lang/StringBuilder
      49: dup
      50: ldc_w         #462                // String unknown workflow execution:
      53: invokespecial #71                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      56: aload_3
      57: invokevirtual #464                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #467                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload         5
      69: areturn

  public static java.lang.String prettyPrintHistory(com.amazonaws.services.simpleworkflow.model.History, boolean);
    Code:
       0: aload_0
       1: invokevirtual #432                // Method com/amazonaws/services/simpleworkflow/model/History.getEvents:()Ljava/util/List;
       4: iload_1
       5: invokestatic  #418                // Method prettyPrintHistory:(Ljava/lang/Iterable;Z)Ljava/lang/String;
       8: areturn

  public static java.lang.String prettyPrintHistory(java.lang.Iterable<com.amazonaws.services.simpleworkflow.model.HistoryEvent>, boolean);
    Code:
       0: new           #472                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #474                // Method java/lang/StringBuffer."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc_w         #475                // String {
      12: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      15: pop
      16: iconst_1
      17: istore_3
      18: aload_0
      19: invokeinterface #480,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      24: astore        5
      26: goto          97
      29: aload         5
      31: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #96                 // class com/amazonaws/services/simpleworkflow/model/HistoryEvent
      39: astore        4
      41: iload_1
      42: ifne          62
      45: aload         4
      47: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
      50: ldc_w         #483                // String WorkflowTask
      53: invokevirtual #485                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      56: ifeq          62
      59: goto          97
      62: iload_3
      63: ifeq          71
      66: iconst_0
      67: istore_3
      68: goto          79
      71: aload_2
      72: ldc_w         #489                // String ,
      75: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      78: pop
      79: aload_2
      80: ldc_w         #491                // String \n
      83: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      86: pop
      87: aload_2
      88: aload         4
      90: invokestatic  #113                // Method prettyPrintHistoryEvent:(Lcom/amazonaws/services/simpleworkflow/model/HistoryEvent;)Ljava/lang/String;
      93: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      96: pop
      97: aload         5
      99: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     104: ifne          29
     107: aload_2
     108: ldc_w         #493                // String \n}
     111: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     114: pop
     115: aload_2
     116: invokevirtual #495                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     119: areturn

  public static java.lang.String prettyPrintDecisions(java.lang.Iterable<com.amazonaws.services.simpleworkflow.model.Decision>);
    Code:
       0: new           #472                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #474                // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc_w         #475                // String {
      12: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      15: pop
      16: iconst_1
      17: istore_2
      18: aload_0
      19: invokeinterface #480,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      24: astore        4
      26: goto          74
      29: aload         4
      31: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #503                // class com/amazonaws/services/simpleworkflow/model/Decision
      39: astore_3
      40: iload_2
      41: ifeq          49
      44: iconst_0
      45: istore_2
      46: goto          57
      49: aload_1
      50: ldc_w         #489                // String ,
      53: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      56: pop
      57: aload_1
      58: ldc_w         #491                // String \n
      61: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      64: pop
      65: aload_1
      66: aload_3
      67: invokestatic  #505                // Method prettyPrintDecision:(Lcom/amazonaws/services/simpleworkflow/model/Decision;)Ljava/lang/String;
      70: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      73: pop
      74: aload         4
      76: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifne          29
      84: aload_1
      85: ldc_w         #493                // String \n}
      88: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      91: pop
      92: aload_1
      93: invokevirtual #495                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      96: areturn

  public static java.lang.String prettyPrintHistoryEvent(com.amazonaws.services.simpleworkflow.model.HistoryEvent);
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method com/amazonaws/services/simpleworkflow/model/HistoryEvent.getEventType:()Ljava/lang/String;
       4: astore_1
       5: new           #472                // class java/lang/StringBuffer
       8: dup
       9: invokespecial #474                // Method java/lang/StringBuffer."<init>":()V
      12: astore_2
      13: aload_2
      14: aload_1
      15: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      18: pop
      19: aload_2
      20: aload_0
      21: ldc_w         #513                // String getType
      24: iconst_1
      25: ldc_w         #515                // String
      28: iconst_0
      29: invokestatic  #517                // Method prettyPrintObject:(Ljava/lang/Object;Ljava/lang/String;ZLjava/lang/String;Z)Ljava/lang/String;
      32: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: pop
      36: aload_2
      37: invokevirtual #495                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      40: areturn

  public static java.lang.String prettyPrintDecision(com.amazonaws.services.simpleworkflow.model.Decision);
    Code:
       0: aload_0
       1: ldc_w         #513                // String getType
       4: iconst_1
       5: ldc_w         #515                // String
       8: iconst_1
       9: invokestatic  #517                // Method prettyPrintObject:(Ljava/lang/Object;Ljava/lang/String;ZLjava/lang/String;Z)Ljava/lang/String;
      12: areturn

  private static java.lang.String prettyPrintObject(java.lang.Object, java.lang.String, boolean, java.lang.String, boolean);
    Code:
       0: new           #472                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #474                // Method java/lang/StringBuffer."<init>":()V
       7: astore        5
       9: aload_0
      10: ifnonnull     17
      13: ldc_w         #522                // String null
      16: areturn
      17: aload_0
      18: invokevirtual #524                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: astore        6
      23: ldc_w         #528                // class java/lang/Number
      26: aload         6
      28: invokevirtual #530                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      31: ifeq          39
      34: aload_0
      35: invokestatic  #536                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      38: areturn
      39: ldc_w         #540                // class java/lang/Boolean
      42: aload         6
      44: invokevirtual #530                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      47: ifeq          55
      50: aload_0
      51: invokestatic  #536                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      54: areturn
      55: aload         6
      57: ldc           #56                 // class java/lang/String
      59: invokevirtual #542                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      62: ifeq          70
      65: aload_0
      66: checkcast     #56                 // class java/lang/String
      69: areturn
      70: aload         6
      72: ldc_w         #543                // class java/util/Date
      75: invokevirtual #542                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          86
      81: aload_0
      82: invokestatic  #536                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      85: areturn
      86: ldc_w         #545                // class java/util/Map
      89: aload         6
      91: invokevirtual #530                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      94: ifeq          102
      97: aload_0
      98: invokestatic  #536                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     101: areturn
     102: ldc_w         #547                // class java/util/Collection
     105: aload         6
     107: invokevirtual #530                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     110: ifeq          118
     113: aload_0
     114: invokestatic  #536                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     117: areturn
     118: iload         4
     120: ifne          132
     123: aload         5
     125: ldc_w         #549                // String  {
     128: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     131: pop
     132: aload_0
     133: invokevirtual #524                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     136: invokevirtual #551                // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
     139: astore        7
     141: iconst_1
     142: istore        8
     144: aload         7
     146: dup
     147: astore        12
     149: arraylength
     150: istore        11
     152: iconst_0
     153: istore        10
     155: goto          492
     158: aload         12
     160: iload         10
     162: aaload
     163: astore        9
     165: aload         9
     167: invokevirtual #555                // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     170: astore        13
     172: aload         13
     174: ldc_w         #560                // String get
     177: invokevirtual #485                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     180: ifne          186
     183: goto          489
     186: aload         13
     188: aload_1
     189: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     192: ifne          489
     195: aload         13
     197: ldc_w         #562                // String getClass
     200: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     203: ifeq          209
     206: goto          489
     209: aload         9
     211: invokevirtual #563                // Method java/lang/reflect/Method.getModifiers:()I
     214: invokestatic  #567                // Method java/lang/reflect/Modifier.isStatic:(I)Z
     217: ifeq          223
     220: goto          489
     223: aload         9
     225: aload_0
     226: aconst_null
     227: invokevirtual #573                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     230: astore        14
     232: aload         14
     234: ifnull        306
     237: aload         14
     239: invokevirtual #524                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     242: ldc           #56                 // class java/lang/String
     244: invokevirtual #542                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     247: ifeq          306
     250: aload         13
     252: ldc_w         #577                // String getDetails
     255: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     258: ifeq          306
     261: aload         14
     263: checkcast     #56                 // class java/lang/String
     266: invokestatic  #579                // Method printDetails:(Ljava/lang/String;)Ljava/lang/String;
     269: astore        14
     271: goto          306
     274: astore        15
     276: new           #65                 // class java/lang/RuntimeException
     279: dup
     280: aload         15
     282: invokevirtual #583                // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
     285: invokespecial #589                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     288: athrow
     289: astore        15
     291: aload         15
     293: athrow
     294: astore        15
     296: new           #65                 // class java/lang/RuntimeException
     299: dup
     300: aload         15
     302: invokespecial #589                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     305: athrow
     306: iload_2
     307: ifeq          366
     310: aload         14
     312: ifnonnull     318
     315: goto          489
     318: aload         14
     320: instanceof    #545                // class java/util/Map
     323: ifeq          342
     326: aload         14
     328: checkcast     #545                // class java/util/Map
     331: invokeinterface #592,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     336: ifeq          342
     339: goto          489
     342: aload         14
     344: instanceof    #547                // class java/util/Collection
     347: ifeq          366
     350: aload         14
     352: checkcast     #547                // class java/util/Collection
     355: invokeinterface #595,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
     360: ifeq          366
     363: goto          489
     366: iload         4
     368: ifne          474
     371: iload         8
     373: ifeq          382
     376: iconst_0
     377: istore        8
     379: goto          391
     382: aload         5
     384: ldc_w         #596                // String ;
     387: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     390: pop
     391: aload         5
     393: ldc_w         #598                // String \n
     396: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     399: pop
     400: aload         5
     402: aload_3
     403: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     406: pop
     407: aload         5
     409: ldc_w         #515                // String
     412: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     415: pop
     416: aload         5
     418: aload         13
     420: iconst_3
     421: invokevirtual #600                // Method java/lang/String.substring:(I)Ljava/lang/String;
     424: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     427: pop
     428: aload         5
     430: ldc_w         #604                // String  =
     433: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     436: pop
     437: aload         5
     439: aload         14
     441: aload_1
     442: iload_2
     443: new           #67                 // class java/lang/StringBuilder
     446: dup
     447: aload_3
     448: invokestatic  #536                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     451: invokespecial #71                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     454: ldc_w         #515                // String
     457: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     460: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     463: iconst_0
     464: invokestatic  #517                // Method prettyPrintObject:(Ljava/lang/Object;Ljava/lang/String;ZLjava/lang/String;Z)Ljava/lang/String;
     467: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     470: pop
     471: goto          489
     474: aload         5
     476: aload         14
     478: aload_1
     479: iload_2
     480: aload_3
     481: iconst_0
     482: invokestatic  #517                // Method prettyPrintObject:(Ljava/lang/Object;Ljava/lang/String;ZLjava/lang/String;Z)Ljava/lang/String;
     485: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     488: pop
     489: iinc          10, 1
     492: iload         10
     494: iload         11
     496: if_icmplt     158
     499: iload         4
     501: ifne          529
     504: aload         5
     506: ldc_w         #598                // String \n
     509: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     512: pop
     513: aload         5
     515: aload_3
     516: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     519: pop
     520: aload         5
     522: ldc_w         #606                // String }
     525: invokevirtual #477                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     528: pop
     529: aload         5
     531: invokevirtual #495                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     534: areturn
    Exception table:
       from    to  target type
         223   271   274   Class java/lang/reflect/InvocationTargetException
         223   271   289   Class java/lang/RuntimeException
         223   271   294   Class java/lang/Exception

  public static java.lang.String printDetails(java.lang.String);
    Code:
       0: aconst_null
       1: astore_1
       2: new           #629                // class com/fasterxml/jackson/databind/ObjectMapper
       5: dup
       6: invokespecial #631                // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       9: astore_2
      10: aload_2
      11: getstatic     #632                // Field com/fasterxml/jackson/databind/DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES:Lcom/fasterxml/jackson/databind/DeserializationFeature;
      14: iconst_0
      15: invokevirtual #638                // Method com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/DeserializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
      18: pop
      19: aload_2
      20: getstatic     #642                // Field com/fasterxml/jackson/databind/ObjectMapper$DefaultTyping.NON_FINAL:Lcom/fasterxml/jackson/databind/ObjectMapper$DefaultTyping;
      23: invokevirtual #648                // Method com/fasterxml/jackson/databind/ObjectMapper.enableDefaultTyping:(Lcom/fasterxml/jackson/databind/ObjectMapper$DefaultTyping;)Lcom/fasterxml/jackson/databind/ObjectMapper;
      26: pop
      27: aload_2
      28: aload_0
      29: ldc_w         #652                // class java/lang/Throwable
      32: invokevirtual #654                // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      35: checkcast     #652                // class java/lang/Throwable
      38: astore_1
      39: goto          43
      42: pop
      43: aload_1
      44: ifnull        93
      47: new           #67                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #658                // Method java/lang/StringBuilder."<init>":()V
      54: astore_2
      55: new           #659                // class java/io/StringWriter
      58: dup
      59: invokespecial #661                // Method java/io/StringWriter."<init>":()V
      62: astore_3
      63: new           #662                // class java/io/PrintWriter
      66: dup
      67: aload_3
      68: invokespecial #664                // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      71: astore        4
      73: aload_1
      74: aload         4
      76: invokevirtual #667                // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V
      79: aload_2
      80: aload_3
      81: invokevirtual #671                // Method java/io/StringWriter.toString:()Ljava/lang/String;
      84: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_2
      89: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: astore_0
      93: aload_0
      94: areturn
    Exception table:
       from    to  target type
           2    39    42   Class java/lang/Exception

  public static java.lang.String truncateReason(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        29
       4: aload_0
       5: invokevirtual #684                // Method java/lang/String.length:()I
       8: getstatic     #687                // Field com/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint.FAILURE_REASON:Lcom/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint;
      11: invokevirtual #693                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint.getMaxSize:()I
      14: if_icmple     29
      17: aload_0
      18: iconst_0
      19: getstatic     #687                // Field com/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint.FAILURE_REASON:Lcom/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint;
      22: invokevirtual #693                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint.getMaxSize:()I
      25: invokevirtual #696                // Method java/lang/String.substring:(II)Ljava/lang/String;
      28: astore_0
      29: aload_0
      30: areturn

  public static java.lang.String truncateDetails(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        29
       4: aload_0
       5: invokevirtual #684                // Method java/lang/String.length:()I
       8: getstatic     #701                // Field com/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint.FAILURE_DETAILS:Lcom/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint;
      11: invokevirtual #693                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint.getMaxSize:()I
      14: if_icmple     29
      17: aload_0
      18: iconst_0
      19: getstatic     #701                // Field com/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint.FAILURE_DETAILS:Lcom/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint;
      22: invokevirtual #693                // Method com/amazonaws/services/simpleworkflow/flow/common/FlowValueConstraint.getMaxSize:()I
      25: invokevirtual #696                // Method java/lang/String.substring:(II)Ljava/lang/String;
      28: astore_0
      29: aload_0
      30: areturn
}
