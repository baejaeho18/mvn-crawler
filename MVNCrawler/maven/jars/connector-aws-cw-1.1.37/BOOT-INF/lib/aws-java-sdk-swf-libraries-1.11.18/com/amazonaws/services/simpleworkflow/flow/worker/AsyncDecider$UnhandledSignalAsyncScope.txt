Compiled from "AsyncDecider.java"
final class com.amazonaws.services.simpleworkflow.flow.worker.AsyncDecider$UnhandledSignalAsyncScope extends com.amazonaws.services.simpleworkflow.flow.worker.AsyncDecider$WorkflowAsyncScope {
  private final com.amazonaws.services.simpleworkflow.flow.core.Promise<java.lang.String> output;

  private java.lang.Throwable failure;

  private boolean cancellation;

  final com.amazonaws.services.simpleworkflow.flow.worker.AsyncDecider this$0;

  public com.amazonaws.services.simpleworkflow.flow.worker.AsyncDecider$UnhandledSignalAsyncScope(com.amazonaws.services.simpleworkflow.flow.core.Promise<java.lang.String>, java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field this$0:Lcom/amazonaws/services/simpleworkflow/flow/worker/AsyncDecider;
       5: aload_0
       6: invokespecial #22                 // Method com/amazonaws/services/simpleworkflow/flow/worker/AsyncDecider$WorkflowAsyncScope."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #25                 // Field output:Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
      14: aload_0
      15: aload_3
      16: putfield      #27                 // Field failure:Ljava/lang/Throwable;
      19: aload_0
      20: iload         4
      22: putfield      #29                 // Field cancellation:Z
      25: return

  protected void doAsync() throws java.lang.Throwable;
    Code:
       0: return

  public com.amazonaws.services.simpleworkflow.flow.core.Promise<java.lang.String> getOutput();
    Code:
       0: aload_0
       1: getfield      #25                 // Field output:Lcom/amazonaws/services/simpleworkflow/flow/core/Promise;
       4: areturn

  public boolean isCancelRequested();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method com/amazonaws/services/simpleworkflow/flow/worker/AsyncDecider$WorkflowAsyncScope.isCancelRequested:()Z
       4: ifne          16
       7: aload_0
       8: getfield      #29                 // Field cancellation:Z
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: iconst_1
      17: ireturn

  public java.lang.Throwable getFailure();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method com/amazonaws/services/simpleworkflow/flow/worker/AsyncDecider$WorkflowAsyncScope.getFailure:()Ljava/lang/Throwable;
       4: astore_1
       5: aload_0
       6: getfield      #27                 // Field failure:Ljava/lang/Throwable;
       9: ifnull        17
      12: aload_0
      13: getfield      #27                 // Field failure:Ljava/lang/Throwable;
      16: astore_1
      17: aload_1
      18: areturn

  public boolean eventLoop() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #54                 // Method com/amazonaws/services/simpleworkflow/flow/worker/AsyncDecider$WorkflowAsyncScope.eventLoop:()Z
       4: istore_1
       5: iload_1
       6: ifeq          21
       9: aload_0
      10: getfield      #27                 // Field failure:Ljava/lang/Throwable;
      13: ifnull        21
      16: aload_0
      17: getfield      #27                 // Field failure:Ljava/lang/Throwable;
      20: athrow
      21: iload_1
      22: ireturn
}
