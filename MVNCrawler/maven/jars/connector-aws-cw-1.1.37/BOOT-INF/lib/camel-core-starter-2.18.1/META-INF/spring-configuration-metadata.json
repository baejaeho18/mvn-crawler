{
  "groups": [
    {
      "name": "camel.component.direct",
      "type": "org.apache.camel.component.direct.springboot.DirectComponentConfiguration",
      "sourceType": "org.apache.camel.component.direct.springboot.DirectComponentConfiguration"
    },
    {
      "name": "camel.component.direct-vm",
      "type": "org.apache.camel.component.directvm.springboot.DirectVmComponentConfiguration",
      "sourceType": "org.apache.camel.component.directvm.springboot.DirectVmComponentConfiguration"
    },
    {
      "name": "camel.component.direct-vm.header-filter-strategy",
      "type": "org.apache.camel.spi.HeaderFilterStrategy",
      "sourceType": "org.apache.camel.component.directvm.springboot.DirectVmComponentConfiguration",
      "sourceMethod": "getHeaderFilterStrategy()"
    },
    {
      "name": "camel.component.log",
      "type": "org.apache.camel.component.log.springboot.LogComponentConfiguration",
      "sourceType": "org.apache.camel.component.log.springboot.LogComponentConfiguration"
    },
    {
      "name": "camel.component.log.exchange-formatter",
      "type": "org.apache.camel.spi.ExchangeFormatter",
      "sourceType": "org.apache.camel.component.log.springboot.LogComponentConfiguration",
      "sourceMethod": "getExchangeFormatter()"
    },
    {
      "name": "camel.component.properties",
      "type": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.properties-parser",
      "type": "org.apache.camel.component.properties.PropertiesParser",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration",
      "sourceMethod": "getPropertiesParser()"
    },
    {
      "name": "camel.component.properties.properties-resolver",
      "type": "org.apache.camel.component.properties.PropertiesResolver",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration",
      "sourceMethod": "getPropertiesResolver()"
    },
    {
      "name": "camel.component.rest",
      "type": "org.apache.camel.component.rest.springboot.RestComponentConfiguration",
      "sourceType": "org.apache.camel.component.rest.springboot.RestComponentConfiguration"
    },
    {
      "name": "camel.component.scheduler",
      "type": "org.apache.camel.component.scheduler.springboot.SchedulerComponentConfiguration",
      "sourceType": "org.apache.camel.component.scheduler.springboot.SchedulerComponentConfiguration"
    },
    {
      "name": "camel.component.seda",
      "type": "org.apache.camel.component.seda.springboot.SedaComponentConfiguration",
      "sourceType": "org.apache.camel.component.seda.springboot.SedaComponentConfiguration"
    },
    {
      "name": "camel.component.seda.default-queue-factory",
      "type": "org.apache.camel.component.seda.BlockingQueueFactory<E>",
      "sourceType": "org.apache.camel.component.seda.springboot.SedaComponentConfiguration",
      "sourceMethod": "getDefaultQueueFactory()"
    },
    {
      "name": "camel.component.stub",
      "type": "org.apache.camel.component.stub.springboot.StubComponentConfiguration",
      "sourceType": "org.apache.camel.component.stub.springboot.StubComponentConfiguration"
    },
    {
      "name": "camel.component.stub.default-queue-factory",
      "type": "org.apache.camel.component.seda.BlockingQueueFactory<E>",
      "sourceType": "org.apache.camel.component.stub.springboot.StubComponentConfiguration",
      "sourceMethod": "getDefaultQueueFactory()"
    },
    {
      "name": "camel.component.validator",
      "type": "org.apache.camel.component.validator.springboot.ValidatorComponentConfiguration",
      "sourceType": "org.apache.camel.component.validator.springboot.ValidatorComponentConfiguration"
    },
    {
      "name": "camel.component.validator.resource-resolver-factory",
      "type": "org.apache.camel.component.validator.ValidatorResourceResolverFactory",
      "sourceType": "org.apache.camel.component.validator.springboot.ValidatorComponentConfiguration",
      "sourceMethod": "getResourceResolverFactory()"
    },
    {
      "name": "camel.component.vm",
      "type": "org.apache.camel.component.vm.springboot.VmComponentConfiguration",
      "sourceType": "org.apache.camel.component.vm.springboot.VmComponentConfiguration"
    },
    {
      "name": "camel.component.vm.default-queue-factory",
      "type": "org.apache.camel.component.seda.BlockingQueueFactory<E>",
      "sourceType": "org.apache.camel.component.vm.springboot.VmComponentConfiguration",
      "sourceMethod": "getDefaultQueueFactory()"
    },
    {
      "name": "camel.component.xslt",
      "type": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration",
      "sourceType": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration"
    },
    {
      "name": "camel.component.xslt.uri-resolver-factory",
      "type": "org.apache.camel.component.xslt.XsltUriResolverFactory",
      "sourceType": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration",
      "sourceMethod": "getUriResolverFactory()"
    },
    {
      "name": "camel.component.xslt.xml-converter",
      "type": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration$XmlConverterNestedConfiguration",
      "sourceType": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration",
      "sourceMethod": "getXmlConverter()"
    },
    {
      "name": "camel.dataformat.gzip",
      "type": "org.apache.camel.impl.springboot.GzipDataFormatConfiguration",
      "sourceType": "org.apache.camel.impl.springboot.GzipDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.serialization",
      "type": "org.apache.camel.impl.springboot.SerializationDataFormatConfiguration",
      "sourceType": "org.apache.camel.impl.springboot.SerializationDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.string",
      "type": "org.apache.camel.impl.springboot.StringDataFormatConfiguration",
      "sourceType": "org.apache.camel.impl.springboot.StringDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.zip",
      "type": "org.apache.camel.impl.springboot.ZipDataFormatConfiguration",
      "sourceType": "org.apache.camel.impl.springboot.ZipDataFormatConfiguration"
    },
    {
      "name": "camel.language.bean",
      "type": "org.apache.camel.language.bean.springboot.BeanLanguageConfiguration",
      "sourceType": "org.apache.camel.language.bean.springboot.BeanLanguageConfiguration"
    },
    {
      "name": "camel.language.constant",
      "type": "org.apache.camel.language.constant.springboot.ConstantLanguageConfiguration",
      "sourceType": "org.apache.camel.language.constant.springboot.ConstantLanguageConfiguration"
    },
    {
      "name": "camel.language.exchangeproperty",
      "type": "org.apache.camel.language.property.springboot.ExchangePropertyLanguageConfiguration",
      "sourceType": "org.apache.camel.language.property.springboot.ExchangePropertyLanguageConfiguration"
    },
    {
      "name": "camel.language.file",
      "type": "org.apache.camel.language.simple.springboot.FileLanguageConfiguration",
      "sourceType": "org.apache.camel.language.simple.springboot.FileLanguageConfiguration"
    },
    {
      "name": "camel.language.header",
      "type": "org.apache.camel.language.header.springboot.HeaderLanguageConfiguration",
      "sourceType": "org.apache.camel.language.header.springboot.HeaderLanguageConfiguration"
    },
    {
      "name": "camel.language.ref",
      "type": "org.apache.camel.language.ref.springboot.RefLanguageConfiguration",
      "sourceType": "org.apache.camel.language.ref.springboot.RefLanguageConfiguration"
    },
    {
      "name": "camel.language.simple",
      "type": "org.apache.camel.language.simple.springboot.SimpleLanguageConfiguration",
      "sourceType": "org.apache.camel.language.simple.springboot.SimpleLanguageConfiguration"
    },
    {
      "name": "camel.language.tokenize",
      "type": "org.apache.camel.language.tokenizer.springboot.TokenizeLanguageConfiguration",
      "sourceType": "org.apache.camel.language.tokenizer.springboot.TokenizeLanguageConfiguration"
    },
    {
      "name": "camel.language.xpath",
      "type": "org.apache.camel.language.xpath.springboot.XPathLanguageConfiguration",
      "sourceType": "org.apache.camel.language.xpath.springboot.XPathLanguageConfiguration"
    },
    {
      "name": "camel.language.xtokenize",
      "type": "org.apache.camel.language.tokenizer.springboot.XMLTokenizeLanguageConfiguration",
      "sourceType": "org.apache.camel.language.tokenizer.springboot.XMLTokenizeLanguageConfiguration"
    }
  ],
  "properties": [
    {
      "name": "camel.component.direct-vm.block",
      "type": "java.lang.Boolean",
      "description": "If sending a message to a direct endpoint which has no active consumer\n then we can tell the producer to block and wait for the consumer to\n become active.",
      "sourceType": "org.apache.camel.component.directvm.springboot.DirectVmComponentConfiguration"
    },
    {
      "name": "camel.component.direct-vm.propagate-properties",
      "type": "java.lang.Boolean",
      "description": "Whether to propagate or not properties from the producer side to the\n consumer side and viceversa. Default value: true.",
      "sourceType": "org.apache.camel.component.directvm.springboot.DirectVmComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.direct-vm.timeout",
      "type": "java.lang.Long",
      "description": "The timeout value to use if block is enabled.",
      "sourceType": "org.apache.camel.component.directvm.springboot.DirectVmComponentConfiguration",
      "defaultValue": 30000
    },
    {
      "name": "camel.component.direct.block",
      "type": "java.lang.Boolean",
      "description": "If sending a message to a direct endpoint which has no active consumer\n then we can tell the producer to block and wait for the consumer to\n become active.",
      "sourceType": "org.apache.camel.component.direct.springboot.DirectComponentConfiguration"
    },
    {
      "name": "camel.component.direct.timeout",
      "type": "java.lang.Long",
      "description": "The timeout value to use if block is enabled.",
      "sourceType": "org.apache.camel.component.direct.springboot.DirectComponentConfiguration",
      "defaultValue": 30000
    },
    {
      "name": "camel.component.properties.cache",
      "type": "java.lang.Boolean",
      "description": "Whether or not to cache loaded properties. The default value is true.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.encoding",
      "type": "java.lang.String",
      "description": "Encoding to use when loading properties file from the file system or\n classpath. If no encoding has been set then the properties files is\n loaded using ISO-8859-1 encoding (latin-1) as documented by link\n java.util.Propertiesload(java.io.InputStream)",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.fallback-to-unaugmented-property",
      "type": "java.lang.Boolean",
      "description": "If true first attempt resolution of property name augmented with\n propertyPrefix and propertySuffix before falling back the plain property\n name specified. If false only the augmented property name is searched.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.ignore-missing-location",
      "type": "java.lang.Boolean",
      "description": "Whether to silently ignore if a location cannot be located such as a\n properties file not found.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.initial-properties",
      "type": "java.util.Properties",
      "description": "Sets initial properties which will be used before any locations are\n resolved.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.location",
      "type": "java.lang.String",
      "description": "A list of locations to load properties. You can use comma to separate\n multiple locations. This option will override any default locations and\n only use the locations from this option.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.locations",
      "type": "java.lang.String[]",
      "description": "A list of locations to load properties. You can use comma to separate\n multiple locations. This option will override any default locations and\n only use the locations from this option.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.override-properties",
      "type": "java.util.Properties",
      "description": "Sets a special list of override properties that take precedence and will\n use first if a property exist.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.prefix-token",
      "type": "java.lang.String",
      "description": "Sets the value of the prefix token used to identify properties to\n replace. Setting a value of null restores the default token (link link\n DEFAULT_PREFIX_TOKEN).",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.property-prefix",
      "type": "java.lang.String",
      "description": "Optional prefix prepended to property names before resolution.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.property-suffix",
      "type": "java.lang.String",
      "description": "Optional suffix appended to property names before resolution.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.suffix-token",
      "type": "java.lang.String",
      "description": "Sets the value of the suffix token used to identify properties to\n replace. Setting a value of null restores the default token (link link\n DEFAULT_SUFFIX_TOKEN).",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.properties.system-properties-mode",
      "type": "java.lang.Integer",
      "description": "Sets the system property mode.",
      "sourceType": "org.apache.camel.component.properties.springboot.PropertiesComponentConfiguration"
    },
    {
      "name": "camel.component.rest.api-doc",
      "type": "java.lang.String",
      "description": "The swagger api doc resource to use. The resource is loaded from\n classpath by default and must be in JSon format.",
      "sourceType": "org.apache.camel.component.rest.springboot.RestComponentConfiguration"
    },
    {
      "name": "camel.component.rest.component-name",
      "type": "java.lang.String",
      "description": "The Camel Rest component to use for the REST transport such as restlet\n spark-rest. If no component has been explicit configured then Camel will\n lookup if there is a Camel component that integrates with the Rest DSL or\n if a org.apache.camel.spi.RestConsumerFactory (consumer) or\n org.apache.camel.spi.RestProducerFactory (producer) is registered in the\n registry. If either one is found then that is being used.",
      "sourceType": "org.apache.camel.component.rest.springboot.RestComponentConfiguration"
    },
    {
      "name": "camel.component.rest.host",
      "type": "java.lang.String",
      "description": "Host and port of HTTP service to use (override host in swagger schema)",
      "sourceType": "org.apache.camel.component.rest.springboot.RestComponentConfiguration"
    },
    {
      "name": "camel.component.scheduler.concurrent-tasks",
      "type": "java.lang.Integer",
      "description": "Number of threads used by the scheduling thread pool. Is by default using\n a single thread",
      "sourceType": "org.apache.camel.component.scheduler.springboot.SchedulerComponentConfiguration"
    },
    {
      "name": "camel.component.seda.concurrent-consumers",
      "type": "java.lang.Integer",
      "description": "Sets the default number of concurrent threads processing exchanges.",
      "sourceType": "org.apache.camel.component.seda.springboot.SedaComponentConfiguration",
      "defaultValue": 1
    },
    {
      "name": "camel.component.seda.queue-size",
      "type": "java.lang.Integer",
      "description": "Sets the default maximum capacity of the SEDA queue (i.e. the number of\n messages it can hold).",
      "sourceType": "org.apache.camel.component.seda.springboot.SedaComponentConfiguration"
    },
    {
      "name": "camel.component.stub.concurrent-consumers",
      "type": "java.lang.Integer",
      "description": "Sets the default number of concurrent threads processing exchanges.",
      "sourceType": "org.apache.camel.component.stub.springboot.StubComponentConfiguration",
      "defaultValue": 1
    },
    {
      "name": "camel.component.stub.queue-size",
      "type": "java.lang.Integer",
      "description": "Sets the default maximum capacity of the SEDA queue (i.e. the number of\n messages it can hold).",
      "sourceType": "org.apache.camel.component.stub.springboot.StubComponentConfiguration"
    },
    {
      "name": "camel.component.vm.concurrent-consumers",
      "type": "java.lang.Integer",
      "description": "Sets the default number of concurrent threads processing exchanges.",
      "sourceType": "org.apache.camel.component.vm.springboot.VmComponentConfiguration",
      "defaultValue": 1
    },
    {
      "name": "camel.component.vm.queue-size",
      "type": "java.lang.Integer",
      "description": "Sets the default maximum capacity of the SEDA queue (i.e. the number of\n messages it can hold).",
      "sourceType": "org.apache.camel.component.vm.springboot.VmComponentConfiguration"
    },
    {
      "name": "camel.component.xslt.content-cache",
      "type": "java.lang.Boolean",
      "description": "Cache for the resource content (the stylesheet file) when it is loaded.\n If set to false Camel will reload the stylesheet file on each message\n processing. This is good for development. A cached stylesheet can be\n forced to reload at runtime via JMX using the clearCachedStylesheet\n operation.",
      "sourceType": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.xslt.saxon",
      "type": "java.lang.Boolean",
      "description": "Whether to use Saxon as the transformerFactoryClass. If enabled then the\n class net.sf.saxon.TransformerFactoryImpl. You would need to add Saxon to\n the classpath.",
      "sourceType": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration"
    },
    {
      "name": "camel.component.xslt.uri-resolver",
      "type": "javax.xml.transform.URIResolver",
      "description": "To use a custom javax.xml.transform.URIResolver. Do not use in\n combination with uriResolverFactory. See also link\n setUriResolverFactory(XsltUriResolverFactory).",
      "sourceType": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration"
    },
    {
      "name": "camel.component.xslt.xml-converter.document-builder-factory",
      "type": "javax.xml.parsers.DocumentBuilderFactory",
      "sourceType": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration$XmlConverterNestedConfiguration"
    },
    {
      "name": "camel.component.xslt.xml-converter.transformer-factory",
      "type": "javax.xml.transform.TransformerFactory",
      "sourceType": "org.apache.camel.component.xslt.springboot.XsltComponentConfiguration$XmlConverterNestedConfiguration"
    },
    {
      "name": "camel.dataformat.string.charset",
      "type": "java.lang.String",
      "description": "Sets an encoding to use. Will by default use the JVM platform default\n charset.",
      "sourceType": "org.apache.camel.impl.springboot.StringDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.zip.compression-level",
      "type": "java.lang.Integer",
      "description": "To specify a specific compression between 0-9. -1 is default compression\n 0 is no compression and 9 is best compression.",
      "sourceType": "org.apache.camel.impl.springboot.ZipDataFormatConfiguration",
      "defaultValue": -1
    },
    {
      "name": "camel.language.bean.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.bean.springboot.BeanLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.constant.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.constant.springboot.ConstantLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.exchangeproperty.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.property.springboot.ExchangePropertyLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.file.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.simple.springboot.FileLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.header.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.header.springboot.HeaderLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.ref.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.ref.springboot.RefLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.simple.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.simple.springboot.SimpleLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.tokenize.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.tokenizer.springboot.TokenizeLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.xpath.document-type",
      "type": "java.lang.String",
      "description": "Name of class for document type The default value is org.w3c.dom.Document",
      "sourceType": "org.apache.camel.language.xpath.springboot.XPathLanguageConfiguration"
    },
    {
      "name": "camel.language.xpath.factory-ref",
      "type": "java.lang.String",
      "description": "References to a custom XPathFactory to lookup in the registry",
      "sourceType": "org.apache.camel.language.xpath.springboot.XPathLanguageConfiguration"
    },
    {
      "name": "camel.language.xpath.log-namespaces",
      "type": "java.lang.Boolean",
      "description": "Whether to log namespaces which can assist during trouble shooting",
      "sourceType": "org.apache.camel.language.xpath.springboot.XPathLanguageConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.language.xpath.object-model",
      "type": "java.lang.String",
      "description": "The XPath object model to use",
      "sourceType": "org.apache.camel.language.xpath.springboot.XPathLanguageConfiguration"
    },
    {
      "name": "camel.language.xpath.saxon",
      "type": "java.lang.Boolean",
      "description": "Whether to use Saxon.",
      "sourceType": "org.apache.camel.language.xpath.springboot.XPathLanguageConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.language.xpath.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.xpath.springboot.XPathLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.xtokenize.mode",
      "type": "java.lang.String",
      "description": "The extraction mode. The available extraction modes are: i - injecting\n the contextual namespace bindings into the extracted token (default) w -\n wrapping the extracted token in its ancestor context u - unwrapping the\n extracted token to its child content t - extracting the text content of\n the specified element",
      "sourceType": "org.apache.camel.language.tokenizer.springboot.XMLTokenizeLanguageConfiguration"
    },
    {
      "name": "camel.language.xtokenize.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and\n line breaks",
      "sourceType": "org.apache.camel.language.tokenizer.springboot.XMLTokenizeLanguageConfiguration",
      "defaultValue": true
    }
  ],
  "hints": []
}