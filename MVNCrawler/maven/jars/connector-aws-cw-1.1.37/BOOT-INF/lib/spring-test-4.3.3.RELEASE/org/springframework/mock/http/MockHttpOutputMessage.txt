Compiled from "MockHttpOutputMessage.java"
public class org.springframework.mock.http.MockHttpOutputMessage implements org.springframework.http.HttpOutputMessage {
  private static final java.nio.charset.Charset DEFAULT_CHARSET;

  private final org.springframework.http.HttpHeaders headers;

  private final java.io.ByteArrayOutputStream body;

  public org.springframework.mock.http.MockHttpOutputMessage();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/http/HttpHeaders
       8: dup
       9: invokespecial #3                  // Method org/springframework/http/HttpHeaders."<init>":()V
      12: putfield      #4                  // Field headers:Lorg/springframework/http/HttpHeaders;
      15: aload_0
      16: new           #5                  // class java/io/ByteArrayOutputStream
      19: dup
      20: sipush        1024
      23: invokespecial #6                  // Method java/io/ByteArrayOutputStream."<init>":(I)V
      26: putfield      #7                  // Field body:Ljava/io/ByteArrayOutputStream;
      29: return

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: areturn

  public java.io.OutputStream getBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field body:Ljava/io/ByteArrayOutputStream;
       4: areturn

  public byte[] getBodyAsBytes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field body:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #8                  // Method java/io/ByteArrayOutputStream.toByteArray:()[B
       7: areturn

  public java.lang.String getBodyAsString();
    Code:
       0: aload_0
       1: getstatic     #9                  // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       4: invokevirtual #10                 // Method getBodyAsString:(Ljava/nio/charset/Charset;)Ljava/lang/String;
       7: areturn

  public java.lang.String getBodyAsString(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getBodyAsBytes:()[B
       4: astore_2
       5: new           #12                 // class java/lang/String
       8: dup
       9: aload_2
      10: aload_1
      11: invokevirtual #13                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      14: invokespecial #14                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      17: areturn
      18: astore_3
      19: new           #16                 // class java/lang/IllegalStateException
      22: dup
      23: aload_3
      24: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           5    17    18   Class java/io/UnsupportedEncodingException

  static {};
    Code:
       0: ldc           #18                 // String UTF-8
       2: invokestatic  #19                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #9                  // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       8: return
}
