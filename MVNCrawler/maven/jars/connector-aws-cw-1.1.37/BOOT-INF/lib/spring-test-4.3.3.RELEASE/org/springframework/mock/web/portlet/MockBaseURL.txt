Compiled from "MockBaseURL.java"
public abstract class org.springframework.mock.web.portlet.MockBaseURL implements javax.portlet.BaseURL {
  public static final java.lang.String URL_TYPE_RENDER;

  public static final java.lang.String URL_TYPE_ACTION;

  private static final java.lang.String ENCODING;

  protected final java.util.Map<java.lang.String, java.lang.String[]> parameters;

  private boolean secure;

  private final java.util.Map<java.lang.String, java.lang.String[]> properties;

  public org.springframework.mock.web.portlet.MockBaseURL();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field parameters:Ljava/util/Map;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field secure:Z
      20: aload_0
      21: new           #2                  // class java/util/LinkedHashMap
      24: dup
      25: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      28: putfield      #6                  // Field properties:Ljava/util/Map;
      31: return

  public void setParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #7                  // String Parameter key must be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #9                  // String Parameter value must not be null
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #4                  // Field parameters:Ljava/util/Map;
      16: aload_1
      17: iconst_1
      18: anewarray     #10                 // class java/lang/String
      21: dup
      22: iconst_0
      23: aload_2
      24: aastore
      25: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: return

  public void setParameter(java.lang.String, java.lang.String[]);
    Code:
       0: aload_1
       1: ldc           #7                  // String Parameter key must be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #12                 // String Parameter values must not be null
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #4                  // Field parameters:Ljava/util/Map;
      16: aload_1
      17: aload_2
      18: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public void setParameters(java.util.Map<java.lang.String, java.lang.String[]>);
    Code:
       0: aload_1
       1: ldc           #13                 // String Parameters Map must not be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field parameters:Ljava/util/Map;
      10: invokeinterface #14,  1           // InterfaceMethod java/util/Map.clear:()V
      15: aload_0
      16: getfield      #4                  // Field parameters:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #15,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      25: return

  public java.util.Set<java.lang.String> getParameterNames();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parameters:Ljava/util/Map;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.lang.String getParameter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field parameters:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #18                 // class "[Ljava/lang/String;"
      13: astore_2
      14: aload_2
      15: ifnull        29
      18: aload_2
      19: arraylength
      20: ifle          29
      23: aload_2
      24: iconst_0
      25: aaload
      26: goto          30
      29: aconst_null
      30: areturn

  public java.lang.String[] getParameterValues(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field parameters:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #18                 // class "[Ljava/lang/String;"
      13: areturn

  public java.util.Map<java.lang.String, java.lang.String[]> getParameterMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parameters:Ljava/util/Map;
       4: invokestatic  #19                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void setSecure(boolean) throws javax.portlet.PortletSecurityException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field secure:Z
       5: return

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #5                  // Field secure:Z
       4: ireturn

  public void write(java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #20                 // Method java/lang/Object.toString:()Ljava/lang/String;
       5: invokevirtual #21                 // Method java/io/Writer.write:(Ljava/lang/String;)V
       8: return

  public void write(java.io.Writer, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #20                 // Method java/lang/Object.toString:()Ljava/lang/String;
       5: invokevirtual #21                 // Method java/io/Writer.write:(Ljava/lang/String;)V
       8: return

  public void addProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #18                 // class "[Ljava/lang/String;"
      13: astore_3
      14: aload_3
      15: ifnull        37
      18: aload_0
      19: getfield      #6                  // Field properties:Ljava/util/Map;
      22: aload_1
      23: aload_3
      24: aload_2
      25: invokestatic  #22                 // Method org/springframework/util/StringUtils.addStringToArray:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      28: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: goto          56
      37: aload_0
      38: getfield      #6                  // Field properties:Ljava/util/Map;
      41: aload_1
      42: iconst_1
      43: anewarray     #10                 // class java/lang/String
      46: dup
      47: iconst_0
      48: aload_2
      49: aastore
      50: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: return

  public void setProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: iconst_1
       6: anewarray     #10                 // class java/lang/String
       9: dup
      10: iconst_0
      11: aload_2
      12: aastore
      13: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: return

  public java.util.Map<java.lang.String, java.lang.String[]> getProperties();
    Code:
       0: aload_0
       1: getfield      #6                  // Field properties:Ljava/util/Map;
       4: invokestatic  #19                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  protected java.lang.String encodeParameter(java.lang.String, java.lang.String);
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: ldc           #26                 // String UTF-8
      10: invokestatic  #27                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #29                 // String =
      18: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_2
      22: ldc           #26                 // String UTF-8
      24: invokestatic  #27                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      27: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn
      34: astore_3
      35: aconst_null
      36: areturn
    Exception table:
       from    to  target type
           0    33    34   Class java/io/UnsupportedEncodingException

  protected java.lang.String encodeParameter(java.lang.String, java.lang.String[]);
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: iconst_0
       9: istore        4
      11: aload_2
      12: arraylength
      13: istore        5
      15: iload         4
      17: iload         5
      19: if_icmpge     71
      22: aload_3
      23: iload         4
      25: ifle          33
      28: ldc           #32                 // String ;
      30: goto          35
      33: ldc           #33                 // String
      35: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: ldc           #26                 // String UTF-8
      41: invokestatic  #27                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      44: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #29                 // String =
      49: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_2
      53: iload         4
      55: aaload
      56: ldc           #26                 // String UTF-8
      58: invokestatic  #27                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      61: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: pop
      65: iinc          4, 1
      68: goto          15
      71: aload_3
      72: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn
      76: astore_3
      77: aconst_null
      78: areturn
    Exception table:
       from    to  target type
           0    75    76   Class java/io/UnsupportedEncodingException
}
