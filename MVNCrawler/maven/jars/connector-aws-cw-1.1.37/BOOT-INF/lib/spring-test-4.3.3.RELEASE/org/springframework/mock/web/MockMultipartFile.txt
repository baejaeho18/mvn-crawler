Compiled from "MockMultipartFile.java"
public class org.springframework.mock.web.MockMultipartFile implements org.springframework.web.multipart.MultipartFile {
  private final java.lang.String name;

  private java.lang.String originalFilename;

  private java.lang.String contentType;

  private final byte[] content;

  public org.springframework.mock.web.MockMultipartFile(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String
       4: aconst_null
       5: aload_2
       6: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V
       9: return

  public org.springframework.mock.web.MockMultipartFile(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String
       4: aconst_null
       5: aload_2
       6: invokestatic  #3                  // Method org/springframework/util/FileCopyUtils.copyToByteArray:(Ljava/io/InputStream;)[B
       9: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V
      12: return

  public org.springframework.mock.web.MockMultipartFile(java.lang.String, java.lang.String, java.lang.String, byte[]);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String Name must not be null
       7: invokestatic  #6                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #7                  // Field name:Ljava/lang/String;
      15: aload_0
      16: aload_2
      17: ifnull        24
      20: aload_2
      21: goto          26
      24: ldc           #1                  // String
      26: putfield      #8                  // Field originalFilename:Ljava/lang/String;
      29: aload_0
      30: aload_3
      31: putfield      #9                  // Field contentType:Ljava/lang/String;
      34: aload_0
      35: aload         4
      37: ifnull        45
      40: aload         4
      42: goto          48
      45: iconst_0
      46: newarray       byte
      48: putfield      #10                 // Field content:[B
      51: return

  public org.springframework.mock.web.MockMultipartFile(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #3                  // Method org/springframework/util/FileCopyUtils.copyToByteArray:(Ljava/io/InputStream;)[B
       9: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V
      12: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getOriginalFilename();
    Code:
       0: aload_0
       1: getfield      #8                  // Field originalFilename:Ljava/lang/String;
       4: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field contentType:Ljava/lang/String;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field content:[B
       4: arraylength
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field content:[B
       4: arraylength
       5: i2l
       6: lreturn

  public byte[] getBytes() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field content:[B
       4: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: new           #11                 // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: getfield      #10                 // Field content:[B
       8: invokespecial #12                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      11: areturn

  public void transferTo(java.io.File) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field content:[B
       4: aload_1
       5: invokestatic  #13                 // Method org/springframework/util/FileCopyUtils.copy:([BLjava/io/File;)V
       8: return
}
