Compiled from "ContentResultMatchers.java"
class org.springframework.test.web.servlet.result.ContentResultMatchers$7 implements org.springframework.test.web.servlet.ResultMatcher {
  final java.lang.String val$xmlContent;

  final org.springframework.test.web.servlet.result.ContentResultMatchers this$0;

  org.springframework.test.web.servlet.result.ContentResultMatchers$7(org.springframework.test.web.servlet.result.ContentResultMatchers, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/test/web/servlet/result/ContentResultMatchers;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$xmlContent:Ljava/lang/String;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void match(org.springframework.test.web.servlet.MvcResult) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod org/springframework/test/web/servlet/MvcResult.getResponse:()Lorg/springframework/mock/web/MockHttpServletResponse;
       6: invokevirtual #5                  // Method org/springframework/mock/web/MockHttpServletResponse.getContentAsString:()Ljava/lang/String;
       9: astore_2
      10: aload_0
      11: getfield      #1                  // Field this$0:Lorg/springframework/test/web/servlet/result/ContentResultMatchers;
      14: invokestatic  #6                  // Method org/springframework/test/web/servlet/result/ContentResultMatchers.access$000:(Lorg/springframework/test/web/servlet/result/ContentResultMatchers;)Lorg/springframework/test/util/XmlExpectationsHelper;
      17: aload_0
      18: getfield      #2                  // Field val$xmlContent:Ljava/lang/String;
      21: aload_2
      22: invokevirtual #7                  // Method org/springframework/test/util/XmlExpectationsHelper.assertXmlEqual:(Ljava/lang/String;Ljava/lang/String;)V
      25: return
}
