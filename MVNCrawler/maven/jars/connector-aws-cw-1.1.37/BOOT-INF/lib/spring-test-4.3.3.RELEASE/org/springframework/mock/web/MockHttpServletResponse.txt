Compiled from "MockHttpServletResponse.java"
public class org.springframework.mock.web.MockHttpServletResponse implements javax.servlet.http.HttpServletResponse {
  private static final java.lang.String CHARSET_PREFIX;

  private static final java.lang.String CONTENT_TYPE_HEADER;

  private static final java.lang.String CONTENT_LENGTH_HEADER;

  private static final java.lang.String LOCATION_HEADER;

  private static final java.lang.String DATE_FORMAT;

  private static final java.util.TimeZone GMT;

  private boolean outputStreamAccessAllowed;

  private boolean writerAccessAllowed;

  private java.lang.String characterEncoding;

  private boolean charset;

  private final java.io.ByteArrayOutputStream content;

  private final javax.servlet.ServletOutputStream outputStream;

  private java.io.PrintWriter writer;

  private long contentLength;

  private java.lang.String contentType;

  private int bufferSize;

  private boolean committed;

  private java.util.Locale locale;

  private final java.util.List<javax.servlet.http.Cookie> cookies;

  private final java.util.Map<java.lang.String, org.springframework.mock.web.HeaderValueHolder> headers;

  private int status;

  private java.lang.String errorMessage;

  private java.lang.String forwardedUrl;

  private final java.util.List<java.lang.String> includedUrls;

  public org.springframework.mock.web.MockHttpServletResponse();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field outputStreamAccessAllowed:Z
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field writerAccessAllowed:Z
      14: aload_0
      15: ldc           #6                  // String ISO-8859-1
      17: putfield      #7                  // Field characterEncoding:Ljava/lang/String;
      20: aload_0
      21: iconst_0
      22: putfield      #8                  // Field charset:Z
      25: aload_0
      26: new           #9                  // class java/io/ByteArrayOutputStream
      29: dup
      30: sipush        1024
      33: invokespecial #10                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      36: putfield      #11                 // Field content:Ljava/io/ByteArrayOutputStream;
      39: aload_0
      40: new           #12                 // class org/springframework/mock/web/MockHttpServletResponse$ResponseServletOutputStream
      43: dup
      44: aload_0
      45: aload_0
      46: getfield      #11                 // Field content:Ljava/io/ByteArrayOutputStream;
      49: invokespecial #13                 // Method org/springframework/mock/web/MockHttpServletResponse$ResponseServletOutputStream."<init>":(Lorg/springframework/mock/web/MockHttpServletResponse;Ljava/io/OutputStream;)V
      52: putfield      #14                 // Field outputStream:Ljavax/servlet/ServletOutputStream;
      55: aload_0
      56: lconst_0
      57: putfield      #15                 // Field contentLength:J
      60: aload_0
      61: sipush        4096
      64: putfield      #16                 // Field bufferSize:I
      67: aload_0
      68: invokestatic  #17                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      71: putfield      #18                 // Field locale:Ljava/util/Locale;
      74: aload_0
      75: new           #19                 // class java/util/ArrayList
      78: dup
      79: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      82: putfield      #21                 // Field cookies:Ljava/util/List;
      85: aload_0
      86: new           #22                 // class org/springframework/util/LinkedCaseInsensitiveMap
      89: dup
      90: invokespecial #23                 // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":()V
      93: putfield      #24                 // Field headers:Ljava/util/Map;
      96: aload_0
      97: sipush        200
     100: putfield      #26                 // Field status:I
     103: aload_0
     104: new           #19                 // class java/util/ArrayList
     107: dup
     108: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
     111: putfield      #27                 // Field includedUrls:Ljava/util/List;
     114: return

  public void setOutputStreamAccessAllowed(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field outputStreamAccessAllowed:Z
       5: return

  public boolean isOutputStreamAccessAllowed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field outputStreamAccessAllowed:Z
       4: ireturn

  public void setWriterAccessAllowed(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field writerAccessAllowed:Z
       5: return

  public boolean isWriterAccessAllowed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field writerAccessAllowed:Z
       4: ireturn

  public boolean isCharset();
    Code:
       0: aload_0
       1: getfield      #8                  // Field charset:Z
       4: ireturn

  public void setCharacterEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field characterEncoding:Ljava/lang/String;
       5: aload_0
       6: iconst_1
       7: putfield      #8                  // Field charset:Z
      10: aload_0
      11: invokespecial #28                 // Method updateContentTypeHeader:()V
      14: return

  private void updateContentTypeHeader();
    Code:
       0: aload_0
       1: getfield      #29                 // Field contentType:Ljava/lang/String;
       4: ifnull        71
       7: new           #30                 // class java/lang/StringBuilder
      10: dup
      11: aload_0
      12: getfield      #29                 // Field contentType:Ljava/lang/String;
      15: invokespecial #31                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_0
      20: getfield      #29                 // Field contentType:Ljava/lang/String;
      23: invokevirtual #32                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      26: ldc           #34                 // String charset=
      28: invokevirtual #35                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      31: ifne          60
      34: aload_0
      35: getfield      #8                  // Field charset:Z
      38: ifeq          60
      41: aload_1
      42: ldc           #36                 // String ;
      44: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #34                 // String charset=
      49: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #7                  // Field characterEncoding:Ljava/lang/String;
      56: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_0
      61: ldc           #38                 // String Content-Type
      63: aload_1
      64: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: iconst_1
      68: invokespecial #40                 // Method doAddHeaderValue:(Ljava/lang/String;Ljava/lang/Object;Z)V
      71: return

  public java.lang.String getCharacterEncoding();
    Code:
       0: aload_0
       1: getfield      #7                  // Field characterEncoding:Ljava/lang/String;
       4: areturn

  public javax.servlet.ServletOutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #3                  // Field outputStreamAccessAllowed:Z
       4: ifne          17
       7: new           #41                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #42                 // String OutputStream access not allowed
      13: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #14                 // Field outputStream:Ljavax/servlet/ServletOutputStream;
      21: areturn

  public java.io.PrintWriter getWriter() throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field writerAccessAllowed:Z
       4: ifne          17
       7: new           #41                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #44                 // String Writer access not allowed
      13: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #45                 // Field writer:Ljava/io/PrintWriter;
      21: ifnonnull     74
      24: aload_0
      25: getfield      #7                  // Field characterEncoding:Ljava/lang/String;
      28: ifnull        49
      31: new           #46                 // class java/io/OutputStreamWriter
      34: dup
      35: aload_0
      36: getfield      #11                 // Field content:Ljava/io/ByteArrayOutputStream;
      39: aload_0
      40: getfield      #7                  // Field characterEncoding:Ljava/lang/String;
      43: invokespecial #47                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
      46: goto          60
      49: new           #46                 // class java/io/OutputStreamWriter
      52: dup
      53: aload_0
      54: getfield      #11                 // Field content:Ljava/io/ByteArrayOutputStream;
      57: invokespecial #48                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;)V
      60: astore_1
      61: aload_0
      62: new           #49                 // class org/springframework/mock/web/MockHttpServletResponse$ResponsePrintWriter
      65: dup
      66: aload_0
      67: aload_1
      68: invokespecial #50                 // Method org/springframework/mock/web/MockHttpServletResponse$ResponsePrintWriter."<init>":(Lorg/springframework/mock/web/MockHttpServletResponse;Ljava/io/Writer;)V
      71: putfield      #45                 // Field writer:Ljava/io/PrintWriter;
      74: aload_0
      75: getfield      #45                 // Field writer:Ljava/io/PrintWriter;
      78: areturn

  public byte[] getContentAsByteArray();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method flushBuffer:()V
       4: aload_0
       5: getfield      #11                 // Field content:Ljava/io/ByteArrayOutputStream;
       8: invokevirtual #52                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      11: areturn

  public java.lang.String getContentAsString() throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method flushBuffer:()V
       4: aload_0
       5: getfield      #7                  // Field characterEncoding:Ljava/lang/String;
       8: ifnull        25
      11: aload_0
      12: getfield      #11                 // Field content:Ljava/io/ByteArrayOutputStream;
      15: aload_0
      16: getfield      #7                  // Field characterEncoding:Ljava/lang/String;
      19: invokevirtual #53                 // Method java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
      22: goto          32
      25: aload_0
      26: getfield      #11                 // Field content:Ljava/io/ByteArrayOutputStream;
      29: invokevirtual #54                 // Method java/io/ByteArrayOutputStream.toString:()Ljava/lang/String;
      32: areturn

  public void setContentLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: putfield      #15                 // Field contentLength:J
       6: aload_0
       7: ldc           #55                 // String Content-Length
       9: iload_1
      10: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: iconst_1
      14: invokespecial #40                 // Method doAddHeaderValue:(Ljava/lang/String;Ljava/lang/Object;Z)V
      17: return

  public int getContentLength();
    Code:
       0: aload_0
       1: getfield      #15                 // Field contentLength:J
       4: l2i
       5: ireturn

  public void setContentLengthLong(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #15                 // Field contentLength:J
       5: aload_0
       6: ldc           #55                 // String Content-Length
       8: lload_1
       9: invokestatic  #57                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: iconst_1
      13: invokespecial #40                 // Method doAddHeaderValue:(Ljava/lang/String;Ljava/lang/Object;Z)V
      16: return

  public long getContentLengthLong();
    Code:
       0: aload_0
       1: getfield      #15                 // Field contentLength:J
       4: lreturn

  public void setContentType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field contentType:Ljava/lang/String;
       5: aload_1
       6: ifnull        80
       9: aload_1
      10: invokestatic  #58                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      13: astore_2
      14: aload_2
      15: invokevirtual #59                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      18: ifnull        37
      21: aload_0
      22: aload_2
      23: invokevirtual #59                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      26: invokevirtual #60                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      29: putfield      #7                  // Field characterEncoding:Ljava/lang/String;
      32: aload_0
      33: iconst_1
      34: putfield      #8                  // Field charset:Z
      37: goto          76
      40: astore_2
      41: aload_1
      42: invokevirtual #32                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      45: ldc           #34                 // String charset=
      47: invokevirtual #62                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      50: istore_3
      51: iload_3
      52: iconst_m1
      53: if_icmpeq     76
      56: aload_0
      57: aload_1
      58: iload_3
      59: ldc           #34                 // String charset=
      61: invokevirtual #63                 // Method java/lang/String.length:()I
      64: iadd
      65: invokevirtual #64                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      68: putfield      #7                  // Field characterEncoding:Ljava/lang/String;
      71: aload_0
      72: iconst_1
      73: putfield      #8                  // Field charset:Z
      76: aload_0
      77: invokespecial #28                 // Method updateContentTypeHeader:()V
      80: return
    Exception table:
       from    to  target type
           9    37    40   Class java/lang/Exception

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #29                 // Field contentType:Ljava/lang/String;
       4: areturn

  public void setBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field bufferSize:I
       5: return

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field bufferSize:I
       4: ireturn

  public void flushBuffer();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #65                 // Method setCommitted:(Z)V
       5: return

  public void resetBuffer();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method isCommitted:()Z
       4: ifeq          17
       7: new           #41                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #67                 // String Cannot reset buffer - response is already committed
      13: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #11                 // Field content:Ljava/io/ByteArrayOutputStream;
      21: invokevirtual #68                 // Method java/io/ByteArrayOutputStream.reset:()V
      24: return

  private void setCommittedIfBufferSizeExceeded();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method getBufferSize:()I
       4: istore_1
       5: iload_1
       6: ifle          25
       9: aload_0
      10: getfield      #11                 // Field content:Ljava/io/ByteArrayOutputStream;
      13: invokevirtual #70                 // Method java/io/ByteArrayOutputStream.size:()I
      16: iload_1
      17: if_icmple     25
      20: aload_0
      21: iconst_1
      22: invokevirtual #65                 // Method setCommitted:(Z)V
      25: return

  public void setCommitted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #71                 // Field committed:Z
       5: return

  public boolean isCommitted();
    Code:
       0: aload_0
       1: getfield      #71                 // Field committed:Z
       4: ireturn

  public void reset();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method resetBuffer:()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field characterEncoding:Ljava/lang/String;
       9: aload_0
      10: lconst_0
      11: putfield      #15                 // Field contentLength:J
      14: aload_0
      15: aconst_null
      16: putfield      #29                 // Field contentType:Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #18                 // Field locale:Ljava/util/Locale;
      24: aload_0
      25: getfield      #21                 // Field cookies:Ljava/util/List;
      28: invokeinterface #73,  1           // InterfaceMethod java/util/List.clear:()V
      33: aload_0
      34: getfield      #24                 // Field headers:Ljava/util/Map;
      37: invokeinterface #74,  1           // InterfaceMethod java/util/Map.clear:()V
      42: aload_0
      43: sipush        200
      46: putfield      #26                 // Field status:I
      49: aload_0
      50: aconst_null
      51: putfield      #75                 // Field errorMessage:Ljava/lang/String;
      54: return

  public void setLocale(java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field locale:Ljava/util/Locale;
       5: return

  public java.util.Locale getLocale();
    Code:
       0: aload_0
       1: getfield      #18                 // Field locale:Ljava/util/Locale;
       4: areturn

  public void addCookie(javax.servlet.http.Cookie);
    Code:
       0: aload_1
       1: ldc           #76                 // String Cookie must not be null
       3: invokestatic  #77                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #21                 // Field cookies:Ljava/util/List;
      10: aload_1
      11: invokeinterface #78,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: return

  public javax.servlet.http.Cookie[] getCookies();
    Code:
       0: aload_0
       1: getfield      #21                 // Field cookies:Ljava/util/List;
       4: aload_0
       5: getfield      #21                 // Field cookies:Ljava/util/List;
       8: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      13: anewarray     #80                 // class javax/servlet/http/Cookie
      16: invokeinterface #81,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: checkcast     #82                 // class "[Ljavax/servlet/http/Cookie;"
      24: areturn

  public javax.servlet.http.Cookie getCookie(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #83                 // String Cookie name must not be null
       3: invokestatic  #77                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #21                 // Field cookies:Ljava/util/List;
      10: invokeinterface #84,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          51
      25: aload_2
      26: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #80                 // class javax/servlet/http/Cookie
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokevirtual #87                 // Method javax/servlet/http/Cookie.getName:()Ljava/lang/String;
      40: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          48
      46: aload_3
      47: areturn
      48: goto          16
      51: aconst_null
      52: areturn

  public boolean containsHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #89                 // Method org/springframework/mock/web/HeaderValueHolder.getByName:(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/mock/web/HeaderValueHolder;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.util.Collection<java.lang.String> getHeaderNames();
    Code:
       0: aload_0
       1: getfield      #24                 // Field headers:Ljava/util/Map;
       4: invokeinterface #90,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.lang.String getHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #89                 // Method org/springframework/mock/web/HeaderValueHolder.getByName:(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/mock/web/HeaderValueHolder;
       8: astore_2
       9: aload_2
      10: ifnull        20
      13: aload_2
      14: invokevirtual #91                 // Method org/springframework/mock/web/HeaderValueHolder.getStringValue:()Ljava/lang/String;
      17: goto          21
      20: aconst_null
      21: areturn

  public java.util.List<java.lang.String> getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #89                 // Method org/springframework/mock/web/HeaderValueHolder.getByName:(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/mock/web/HeaderValueHolder;
       8: astore_2
       9: aload_2
      10: ifnull        18
      13: aload_2
      14: invokevirtual #92                 // Method org/springframework/mock/web/HeaderValueHolder.getStringValues:()Ljava/util/List;
      17: areturn
      18: invokestatic  #93                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      21: areturn

  public java.lang.Object getHeaderValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #89                 // Method org/springframework/mock/web/HeaderValueHolder.getByName:(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/mock/web/HeaderValueHolder;
       8: astore_2
       9: aload_2
      10: ifnull        20
      13: aload_2
      14: invokevirtual #94                 // Method org/springframework/mock/web/HeaderValueHolder.getValue:()Ljava/lang/Object;
      17: goto          21
      20: aconst_null
      21: areturn

  public java.util.List<java.lang.Object> getHeaderValues(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #89                 // Method org/springframework/mock/web/HeaderValueHolder.getByName:(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/mock/web/HeaderValueHolder;
       8: astore_2
       9: aload_2
      10: ifnull        18
      13: aload_2
      14: invokevirtual #95                 // Method org/springframework/mock/web/HeaderValueHolder.getValues:()Ljava/util/List;
      17: areturn
      18: invokestatic  #93                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      21: areturn

  public java.lang.String encodeURL(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  public java.lang.String encodeRedirectURL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #96                 // Method encodeURL:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String encodeUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #96                 // Method encodeURL:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String encodeRedirectUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #97                 // Method encodeRedirectURL:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public void sendError(int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method isCommitted:()Z
       4: ifeq          17
       7: new           #41                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #98                 // String Cannot set error status - response is already committed
      13: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: putfield      #26                 // Field status:I
      22: aload_0
      23: aload_2
      24: putfield      #75                 // Field errorMessage:Ljava/lang/String;
      27: aload_0
      28: iconst_1
      29: invokevirtual #65                 // Method setCommitted:(Z)V
      32: return

  public void sendError(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method isCommitted:()Z
       4: ifeq          17
       7: new           #41                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #98                 // String Cannot set error status - response is already committed
      13: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: putfield      #26                 // Field status:I
      22: aload_0
      23: iconst_1
      24: invokevirtual #65                 // Method setCommitted:(Z)V
      27: return

  public void sendRedirect(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method isCommitted:()Z
       4: ifeq          17
       7: new           #41                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #99                 // String Cannot send redirect - response is already committed
      13: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ldc           #100                // String Redirect URL must not be null
      20: invokestatic  #77                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: ldc           #101                // String Location
      26: aload_1
      27: invokevirtual #102                // Method setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      30: aload_0
      31: sipush        302
      34: invokevirtual #103                // Method setStatus:(I)V
      37: aload_0
      38: iconst_1
      39: invokevirtual #65                 // Method setCommitted:(Z)V
      42: return

  public java.lang.String getRedirectedUrl();
    Code:
       0: aload_0
       1: ldc           #101                // String Location
       3: invokevirtual #104                // Method getHeader:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setDateHeader(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: lload_2
       4: invokespecial #105                // Method formatDate:(J)Ljava/lang/String;
       7: invokespecial #106                // Method setHeaderValue:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public long getDateHeader(java.lang.String);
    Code:
       0: new           #107                // class java/text/SimpleDateFormat
       3: dup
       4: ldc           #108                // String EEE, dd MMM yyyy HH:mm:ss zzz
       6: getstatic     #109                // Field java/util/Locale.US:Ljava/util/Locale;
       9: invokespecial #110                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      12: astore_2
      13: aload_2
      14: getstatic     #111                // Field GMT:Ljava/util/TimeZone;
      17: invokevirtual #112                // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      20: aload_2
      21: aload_0
      22: aload_1
      23: invokevirtual #104                // Method getHeader:(Ljava/lang/String;)Ljava/lang/String;
      26: invokevirtual #113                // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      29: invokevirtual #114                // Method java/util/Date.getTime:()J
      32: lreturn
      33: astore_3
      34: new           #116                // class java/lang/IllegalArgumentException
      37: dup
      38: new           #30                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #117                // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #118                // String Value for header \'
      47: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #119                // String \' is not a valid Date:
      56: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: aload_1
      61: invokevirtual #104                // Method getHeader:(Ljava/lang/String;)Ljava/lang/String;
      64: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #120                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
    Exception table:
       from    to  target type
          20    32    33   Class java/text/ParseException

  public void addDateHeader(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: lload_2
       4: invokespecial #105                // Method formatDate:(J)Ljava/lang/String;
       7: invokespecial #121                // Method addHeaderValue:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  private java.lang.String formatDate(long);
    Code:
       0: new           #107                // class java/text/SimpleDateFormat
       3: dup
       4: ldc           #108                // String EEE, dd MMM yyyy HH:mm:ss zzz
       6: getstatic     #109                // Field java/util/Locale.US:Ljava/util/Locale;
       9: invokespecial #110                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      12: astore_3
      13: aload_3
      14: getstatic     #111                // Field GMT:Ljava/util/TimeZone;
      17: invokevirtual #112                // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      20: aload_3
      21: new           #122                // class java/util/Date
      24: dup
      25: lload_1
      26: invokespecial #123                // Method java/util/Date."<init>":(J)V
      29: invokevirtual #124                // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      32: areturn

  public void setHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #106                // Method setHeaderValue:(Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  public void addHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #121                // Method addHeaderValue:(Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  public void setIntHeader(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: invokespecial #106                // Method setHeaderValue:(Ljava/lang/String;Ljava/lang/Object;)V
       9: return

  public void addIntHeader(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: invokespecial #121                // Method addHeaderValue:(Ljava/lang/String;Ljava/lang/Object;)V
       9: return

  private void setHeaderValue(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #125                // Method setSpecialHeader:(Ljava/lang/String;Ljava/lang/Object;)Z
       6: ifeq          10
       9: return
      10: aload_0
      11: aload_1
      12: aload_2
      13: iconst_1
      14: invokespecial #40                 // Method doAddHeaderValue:(Ljava/lang/String;Ljava/lang/Object;Z)V
      17: return

  private void addHeaderValue(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #125                // Method setSpecialHeader:(Ljava/lang/String;Ljava/lang/Object;)Z
       6: ifeq          10
       9: return
      10: aload_0
      11: aload_1
      12: aload_2
      13: iconst_0
      14: invokespecial #40                 // Method doAddHeaderValue:(Ljava/lang/String;Ljava/lang/Object;Z)V
      17: return

  private boolean setSpecialHeader(java.lang.String, java.lang.Object);
    Code:
       0: ldc           #38                 // String Content-Type
       2: aload_1
       3: invokevirtual #126                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          19
       9: aload_0
      10: aload_2
      11: invokevirtual #127                // Method java/lang/Object.toString:()Ljava/lang/String;
      14: invokevirtual #128                // Method setContentType:(Ljava/lang/String;)V
      17: iconst_1
      18: ireturn
      19: ldc           #55                 // String Content-Length
      21: aload_1
      22: invokevirtual #126                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      25: ifeq          58
      28: aload_0
      29: aload_2
      30: instanceof    #129                // class java/lang/Number
      33: ifeq          46
      36: aload_2
      37: checkcast     #129                // class java/lang/Number
      40: invokevirtual #130                // Method java/lang/Number.intValue:()I
      43: goto          53
      46: aload_2
      47: invokevirtual #127                // Method java/lang/Object.toString:()Ljava/lang/String;
      50: invokestatic  #131                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      53: invokevirtual #132                // Method setContentLength:(I)V
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  private void doAddHeaderValue(java.lang.String, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: getfield      #24                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #89                 // Method org/springframework/mock/web/HeaderValueHolder.getByName:(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/mock/web/HeaderValueHolder;
       8: astore        4
      10: aload_2
      11: ldc           #133                // String Header value must not be null
      13: invokestatic  #77                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload         4
      18: ifnonnull     43
      21: new           #134                // class org/springframework/mock/web/HeaderValueHolder
      24: dup
      25: invokespecial #135                // Method org/springframework/mock/web/HeaderValueHolder."<init>":()V
      28: astore        4
      30: aload_0
      31: getfield      #24                 // Field headers:Ljava/util/Map;
      34: aload_1
      35: aload         4
      37: invokeinterface #136,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: iload_3
      44: ifeq          56
      47: aload         4
      49: aload_2
      50: invokevirtual #137                // Method org/springframework/mock/web/HeaderValueHolder.setValue:(Ljava/lang/Object;)V
      53: goto          62
      56: aload         4
      58: aload_2
      59: invokevirtual #138                // Method org/springframework/mock/web/HeaderValueHolder.addValue:(Ljava/lang/Object;)V
      62: return

  public void setStatus(int);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method isCommitted:()Z
       4: ifne          12
       7: aload_0
       8: iload_1
       9: putfield      #26                 // Field status:I
      12: return

  public void setStatus(int, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method isCommitted:()Z
       4: ifne          17
       7: aload_0
       8: iload_1
       9: putfield      #26                 // Field status:I
      12: aload_0
      13: aload_2
      14: putfield      #75                 // Field errorMessage:Ljava/lang/String;
      17: return

  public int getStatus();
    Code:
       0: aload_0
       1: getfield      #26                 // Field status:I
       4: ireturn

  public java.lang.String getErrorMessage();
    Code:
       0: aload_0
       1: getfield      #75                 // Field errorMessage:Ljava/lang/String;
       4: areturn

  public void setForwardedUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #139                // Field forwardedUrl:Ljava/lang/String;
       5: return

  public java.lang.String getForwardedUrl();
    Code:
       0: aload_0
       1: getfield      #139                // Field forwardedUrl:Ljava/lang/String;
       4: areturn

  public void setIncludedUrl(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field includedUrls:Ljava/util/List;
       4: invokeinterface #73,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_1
      10: ifnull        24
      13: aload_0
      14: getfield      #27                 // Field includedUrls:Ljava/util/List;
      17: aload_1
      18: invokeinterface #78,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public java.lang.String getIncludedUrl();
    Code:
       0: aload_0
       1: getfield      #27                 // Field includedUrls:Ljava/util/List;
       4: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
       9: istore_1
      10: iload_1
      11: iconst_1
      12: if_icmple     45
      15: new           #41                 // class java/lang/IllegalStateException
      18: dup
      19: new           #30                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #117                // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #140                // String More than 1 URL included - check getIncludedUrls instead:
      28: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #27                 // Field includedUrls:Ljava/util/List;
      35: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: iload_1
      46: iconst_1
      47: if_icmpne     66
      50: aload_0
      51: getfield      #27                 // Field includedUrls:Ljava/util/List;
      54: iconst_0
      55: invokeinterface #142,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      60: checkcast     #143                // class java/lang/String
      63: goto          67
      66: aconst_null
      67: areturn

  public void addIncludedUrl(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #144                // String Included URL must not be null
       3: invokestatic  #77                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #27                 // Field includedUrls:Ljava/util/List;
      10: aload_1
      11: invokeinterface #78,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: return

  public java.util.List<java.lang.String> getIncludedUrls();
    Code:
       0: aload_0
       1: getfield      #27                 // Field includedUrls:Ljava/util/List;
       4: areturn

  public java.util.Collection getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #145                // Method getHeaders:(Ljava/lang/String;)Ljava/util/List;
       5: areturn

  static void access$000(org.springframework.mock.web.MockHttpServletResponse);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method setCommittedIfBufferSizeExceeded:()V
       4: return

  static {};
    Code:
       0: ldc           #146                // String GMT
       2: invokestatic  #147                // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
       5: putstatic     #111                // Field GMT:Ljava/util/TimeZone;
       8: return
}
