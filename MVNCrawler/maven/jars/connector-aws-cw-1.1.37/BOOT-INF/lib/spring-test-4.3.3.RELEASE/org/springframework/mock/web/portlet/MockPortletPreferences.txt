Compiled from "MockPortletPreferences.java"
public class org.springframework.mock.web.portlet.MockPortletPreferences implements javax.portlet.PortletPreferences {
  private javax.portlet.PreferencesValidator preferencesValidator;

  private final java.util.Map<java.lang.String, java.lang.String[]> preferences;

  private final java.util.Set<java.lang.String> readOnly;

  public org.springframework.mock.web.portlet.MockPortletPreferences();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field preferences:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/HashSet
      19: dup
      20: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      23: putfield      #7                  // Field readOnly:Ljava/util/Set;
      26: return

  public void setReadOnly(java.lang.String, boolean);
    Code:
       0: aload_1
       1: ldc           #8                  // String Key must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: iload_2
       7: ifeq          24
      10: aload_0
      11: getfield      #7                  // Field readOnly:Ljava/util/Set;
      14: aload_1
      15: invokeinterface #10,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      20: pop
      21: goto          35
      24: aload_0
      25: getfield      #7                  // Field readOnly:Ljava/util/Set;
      28: aload_1
      29: invokeinterface #11,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      34: pop
      35: return

  public boolean isReadOnly(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #8                  // String Key must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #7                  // Field readOnly:Ljava/util/Set;
      10: aload_1
      11: invokeinterface #12,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      16: ireturn

  public java.lang.String getValue(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #8                  // String Key must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field preferences:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #14                 // class "[Ljava/lang/String;"
      19: astore_3
      20: aload_3
      21: ifnull        35
      24: aload_3
      25: arraylength
      26: ifle          35
      29: aload_3
      30: iconst_0
      31: aaload
      32: goto          36
      35: aload_2
      36: areturn

  public java.lang.String[] getValues(java.lang.String, java.lang.String[]);
    Code:
       0: aload_1
       1: ldc           #8                  // String Key must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field preferences:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #14                 // class "[Ljava/lang/String;"
      19: astore_3
      20: aload_3
      21: ifnull        33
      24: aload_3
      25: arraylength
      26: ifle          33
      29: aload_3
      30: goto          34
      33: aload_2
      34: areturn

  public void setValue(java.lang.String, java.lang.String) throws javax.portlet.ReadOnlyException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #15                 // class java/lang/String
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: invokevirtual #16                 // Method setValues:(Ljava/lang/String;[Ljava/lang/String;)V
      13: return

  public void setValues(java.lang.String, java.lang.String[]) throws javax.portlet.ReadOnlyException;
    Code:
       0: aload_1
       1: ldc           #8                  // String Key must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #17                 // Method isReadOnly:(Ljava/lang/String;)Z
      11: ifeq          46
      14: new           #18                 // class javax/portlet/ReadOnlyException
      17: dup
      18: new           #19                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #21                 // String Preference \'
      27: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #23                 // String \' is read-only
      36: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #25                 // Method javax/portlet/ReadOnlyException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: getfield      #4                  // Field preferences:Ljava/util/Map;
      50: aload_1
      51: aload_2
      52: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: return

  public java.util.Enumeration<java.lang.String> getNames();
    Code:
       0: aload_0
       1: getfield      #4                  // Field preferences:Ljava/util/Map;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #28                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      12: areturn

  public java.util.Map<java.lang.String, java.lang.String[]> getMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field preferences:Ljava/util/Map;
       4: invokestatic  #29                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void reset(java.lang.String) throws javax.portlet.ReadOnlyException;
    Code:
       0: aload_1
       1: ldc           #8                  // String Key must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #17                 // Method isReadOnly:(Ljava/lang/String;)Z
      11: ifeq          46
      14: new           #18                 // class javax/portlet/ReadOnlyException
      17: dup
      18: new           #19                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #21                 // String Preference \'
      27: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #23                 // String \' is read-only
      36: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #25                 // Method javax/portlet/ReadOnlyException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: getfield      #4                  // Field preferences:Ljava/util/Map;
      50: aload_1
      51: invokeinterface #30,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: return

  public void setPreferencesValidator(javax.portlet.PreferencesValidator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field preferencesValidator:Ljavax/portlet/PreferencesValidator;
       5: return

  public void store() throws java.io.IOException, javax.portlet.ValidatorException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field preferencesValidator:Ljavax/portlet/PreferencesValidator;
       4: ifnull        17
       7: aload_0
       8: getfield      #31                 // Field preferencesValidator:Ljavax/portlet/PreferencesValidator;
      11: aload_0
      12: invokeinterface #32,  2           // InterfaceMethod javax/portlet/PreferencesValidator.validate:(Ljavax/portlet/PortletPreferences;)V
      17: return
}
