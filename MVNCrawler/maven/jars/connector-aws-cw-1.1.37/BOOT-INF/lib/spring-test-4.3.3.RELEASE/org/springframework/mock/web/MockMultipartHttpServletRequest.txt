Compiled from "MockMultipartHttpServletRequest.java"
public class org.springframework.mock.web.MockMultipartHttpServletRequest extends org.springframework.mock.web.MockHttpServletRequest implements org.springframework.web.multipart.MultipartHttpServletRequest {
  private final org.springframework.util.MultiValueMap<java.lang.String, org.springframework.web.multipart.MultipartFile> multipartFiles;

  public org.springframework.mock.web.MockMultipartHttpServletRequest();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Ljavax/servlet/ServletContext;)V
       5: return

  public org.springframework.mock.web.MockMultipartHttpServletRequest(javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/mock/web/MockHttpServletRequest."<init>":(Ljavax/servlet/ServletContext;)V
       5: aload_0
       6: new           #3                  // class org/springframework/util/LinkedMultiValueMap
       9: dup
      10: invokespecial #4                  // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
      13: putfield      #5                  // Field multipartFiles:Lorg/springframework/util/MultiValueMap;
      16: aload_0
      17: ldc           #6                  // String POST
      19: invokevirtual #7                  // Method setMethod:(Ljava/lang/String;)V
      22: aload_0
      23: ldc           #8                  // String multipart/form-data
      25: invokevirtual #9                  // Method setContentType:(Ljava/lang/String;)V
      28: return

  public void addFile(org.springframework.web.multipart.MultipartFile);
    Code:
       0: aload_1
       1: ldc           #10                 // String MultipartFile must not be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field multipartFiles:Lorg/springframework/util/MultiValueMap;
      10: aload_1
      11: invokeinterface #12,  1           // InterfaceMethod org/springframework/web/multipart/MultipartFile.getName:()Ljava/lang/String;
      16: aload_1
      17: invokeinterface #13,  3           // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  public java.util.Iterator<java.lang.String> getFileNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field multipartFiles:Lorg/springframework/util/MultiValueMap;
       4: invokeinterface #14,  1           // InterfaceMethod org/springframework/util/MultiValueMap.keySet:()Ljava/util/Set;
       9: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public org.springframework.web.multipart.MultipartFile getFile(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field multipartFiles:Lorg/springframework/util/MultiValueMap;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod org/springframework/util/MultiValueMap.getFirst:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class org/springframework/web/multipart/MultipartFile
      13: areturn

  public java.util.List<org.springframework.web.multipart.MultipartFile> getFiles(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field multipartFiles:Lorg/springframework/util/MultiValueMap;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod org/springframework/util/MultiValueMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: invokestatic  #20                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      23: areturn

  public java.util.Map<java.lang.String, org.springframework.web.multipart.MultipartFile> getFileMap();
    Code:
       0: aload_0
       1: getfield      #5                  // Field multipartFiles:Lorg/springframework/util/MultiValueMap;
       4: invokeinterface #21,  1           // InterfaceMethod org/springframework/util/MultiValueMap.toSingleValueMap:()Ljava/util/Map;
       9: areturn

  public org.springframework.util.MultiValueMap<java.lang.String, org.springframework.web.multipart.MultipartFile> getMultiFileMap();
    Code:
       0: new           #3                  // class org/springframework/util/LinkedMultiValueMap
       3: dup
       4: aload_0
       5: getfield      #5                  // Field multipartFiles:Lorg/springframework/util/MultiValueMap;
       8: invokespecial #22                 // Method org/springframework/util/LinkedMultiValueMap."<init>":(Ljava/util/Map;)V
      11: areturn

  public java.lang.String getMultipartContentType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method getFile:(Ljava/lang/String;)Lorg/springframework/web/multipart/MultipartFile;
       5: astore_2
       6: aload_2
       7: ifnull        17
      10: aload_2
      11: invokeinterface #24,  1           // InterfaceMethod org/springframework/web/multipart/MultipartFile.getContentType:()Ljava/lang/String;
      16: areturn
      17: aconst_null
      18: areturn

  public org.springframework.http.HttpMethod getRequestMethod();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getMethod:()Ljava/lang/String;
       4: invokestatic  #26                 // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
       7: areturn

  public org.springframework.http.HttpHeaders getRequestHeaders();
    Code:
       0: new           #27                 // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #28                 // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #29                 // Method getHeaderNames:()Ljava/util/Enumeration;
      12: astore_2
      13: aload_2
      14: invokeinterface #30,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifeq          49
      22: aload_2
      23: invokeinterface #31,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      28: checkcast     #32                 // class java/lang/String
      31: astore_3
      32: aload_1
      33: aload_3
      34: aload_0
      35: aload_3
      36: invokevirtual #33                 // Method getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
      39: invokestatic  #34                 // Method java/util/Collections.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;
      42: invokevirtual #35                 // Method org/springframework/http/HttpHeaders.put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      45: pop
      46: goto          13
      49: aload_1
      50: areturn

  public org.springframework.http.HttpHeaders getMultipartHeaders(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method getMultipartContentType:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        27
      10: new           #27                 // class org/springframework/http/HttpHeaders
      13: dup
      14: invokespecial #28                 // Method org/springframework/http/HttpHeaders."<init>":()V
      17: astore_3
      18: aload_3
      19: ldc           #37                 // String Content-Type
      21: aload_2
      22: invokevirtual #38                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
      25: aload_3
      26: areturn
      27: aconst_null
      28: areturn
}
