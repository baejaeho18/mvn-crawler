Compiled from "TransactionContext.java"
class org.springframework.test.context.transaction.TransactionContext {
  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.test.context.TestContext testContext;

  private final org.springframework.transaction.TransactionDefinition transactionDefinition;

  private final org.springframework.transaction.PlatformTransactionManager transactionManager;

  private final boolean defaultRollback;

  private boolean flaggedForRollback;

  private org.springframework.transaction.TransactionStatus transactionStatus;

  private volatile int transactionsStarted;

  org.springframework.test.context.transaction.TransactionContext(org.springframework.test.context.TestContext, org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.TransactionDefinition, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field transactionsStarted:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field testContext:Lorg/springframework/test/context/TestContext;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
      24: aload_0
      25: iload         4
      27: putfield      #6                  // Field defaultRollback:Z
      30: aload_0
      31: iload         4
      33: putfield      #7                  // Field flaggedForRollback:Z
      36: return

  org.springframework.transaction.TransactionStatus getTransactionStatus();
    Code:
       0: aload_0
       1: getfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
       4: areturn

  boolean isFlaggedForRollback();
    Code:
       0: aload_0
       1: getfield      #7                  // Field flaggedForRollback:Z
       4: ireturn

  void setFlaggedForRollback(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
       4: ifnonnull     31
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #10                 // String Failed to set rollback flag for test context %s: transaction does not exist.
      13: iconst_1
      14: anewarray     #11                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: getfield      #3                  // Field testContext:Lorg/springframework/test/context/TestContext;
      23: aastore
      24: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: iload_1
      33: putfield      #7                  // Field flaggedForRollback:Z
      36: return

  void startTransaction();
    Code:
       0: aload_0
       1: getfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
       4: ifnull        17
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #14                 // String Cannot start a new transaction without ending the existing transaction first.
      13: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_0
      19: getfield      #6                  // Field defaultRollback:Z
      22: putfield      #7                  // Field flaggedForRollback:Z
      25: aload_0
      26: aload_0
      27: getfield      #4                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      30: aload_0
      31: getfield      #5                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
      34: invokeinterface #15,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.getTransaction:(Lorg/springframework/transaction/TransactionDefinition;)Lorg/springframework/transaction/TransactionStatus;
      39: putfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
      42: aload_0
      43: dup
      44: getfield      #2                  // Field transactionsStarted:I
      47: iconst_1
      48: iadd
      49: putfield      #2                  // Field transactionsStarted:I
      52: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      55: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      60: ifeq          114
      63: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      66: ldc           #18                 // String Began transaction (%s) for test context %s; transaction manager [%s]; rollback [%s]
      68: iconst_4
      69: anewarray     #11                 // class java/lang/Object
      72: dup
      73: iconst_0
      74: aload_0
      75: getfield      #2                  // Field transactionsStarted:I
      78: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: aastore
      82: dup
      83: iconst_1
      84: aload_0
      85: getfield      #3                  // Field testContext:Lorg/springframework/test/context/TestContext;
      88: aastore
      89: dup
      90: iconst_2
      91: aload_0
      92: getfield      #4                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      95: aastore
      96: dup
      97: iconst_3
      98: aload_0
      99: getfield      #7                  // Field flaggedForRollback:Z
     102: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     105: aastore
     106: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     109: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     114: return

  void endTransaction();
    Code:
       0: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          52
      11: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      14: ldc           #23                 // String Ending transaction for test context %s; transaction status [%s]; rollback [%s]
      16: iconst_3
      17: anewarray     #11                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #3                  // Field testContext:Lorg/springframework/test/context/TestContext;
      26: aastore
      27: dup
      28: iconst_1
      29: aload_0
      30: getfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
      33: aastore
      34: dup
      35: iconst_2
      36: aload_0
      37: getfield      #7                  // Field flaggedForRollback:Z
      40: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: aastore
      44: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      47: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      52: aload_0
      53: getfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
      56: ifnonnull     83
      59: new           #9                  // class java/lang/IllegalStateException
      62: dup
      63: ldc           #25                 // String Failed to end transaction for test context %s: transaction does not exist.
      65: iconst_1
      66: anewarray     #11                 // class java/lang/Object
      69: dup
      70: iconst_0
      71: aload_0
      72: getfield      #3                  // Field testContext:Lorg/springframework/test/context/TestContext;
      75: aastore
      76: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      79: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_0
      84: getfield      #7                  // Field flaggedForRollback:Z
      87: ifeq          106
      90: aload_0
      91: getfield      #4                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      94: aload_0
      95: getfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
      98: invokeinterface #26,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.rollback:(Lorg/springframework/transaction/TransactionStatus;)V
     103: goto          119
     106: aload_0
     107: getfield      #4                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
     110: aload_0
     111: getfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
     114: invokeinterface #27,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.commit:(Lorg/springframework/transaction/TransactionStatus;)V
     119: aload_0
     120: aconst_null
     121: putfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
     124: goto          135
     127: astore_1
     128: aload_0
     129: aconst_null
     130: putfield      #8                  // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
     133: aload_1
     134: athrow
     135: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     138: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
     143: ifeq          187
     146: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     149: ldc           #28                 // String %s transaction for test context %s.
     151: iconst_2
     152: anewarray     #11                 // class java/lang/Object
     155: dup
     156: iconst_0
     157: aload_0
     158: getfield      #7                  // Field flaggedForRollback:Z
     161: ifeq          169
     164: ldc           #29                 // String Rolled back
     166: goto          171
     169: ldc           #30                 // String Committed
     171: aastore
     172: dup
     173: iconst_1
     174: aload_0
     175: getfield      #3                  // Field testContext:Lorg/springframework/test/context/TestContext;
     178: aastore
     179: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     182: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     187: return
    Exception table:
       from    to  target type
          83   119   127   any

  static {};
    Code:
       0: ldc           #31                 // class org/springframework/test/context/transaction/TransactionContext
       2: invokestatic  #32                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
