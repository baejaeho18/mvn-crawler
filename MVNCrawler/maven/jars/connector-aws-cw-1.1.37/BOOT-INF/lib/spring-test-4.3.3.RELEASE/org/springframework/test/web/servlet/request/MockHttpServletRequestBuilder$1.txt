Compiled from "MockHttpServletRequestBuilder.java"
class org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder$1 implements org.springframework.http.HttpInputMessage {
  final org.springframework.http.MediaType val$mediaType;

  final org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder this$0;

  org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder$1(org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$mediaType:Lorg/springframework/http/MediaType;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public java.io.InputStream getBody() throws java.io.IOException;
    Code:
       0: new           #4                  // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
       8: invokestatic  #5                  // Method org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.access$000:(Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;)[B
      11: invokespecial #6                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      14: areturn

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: new           #7                  // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #8                  // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field val$mediaType:Lorg/springframework/http/MediaType;
      13: invokevirtual #9                  // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      16: aload_1
      17: areturn
}
