Compiled from "MockClientHttpResponse.java"
public class org.springframework.mock.http.client.MockClientHttpResponse extends org.springframework.mock.http.MockHttpInputMessage implements org.springframework.http.client.ClientHttpResponse {
  private final org.springframework.http.HttpStatus status;

  public org.springframework.mock.http.client.MockClientHttpResponse(byte[], org.springframework.http.HttpStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/mock/http/MockHttpInputMessage."<init>":([B)V
       5: aload_2
       6: ldc           #2                  // String HttpStatus is required
       8: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: aload_2
      13: putfield      #4                  // Field status:Lorg/springframework/http/HttpStatus;
      16: return

  public org.springframework.mock.http.client.MockClientHttpResponse(java.io.InputStream, org.springframework.http.HttpStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/springframework/mock/http/MockHttpInputMessage."<init>":(Ljava/io/InputStream;)V
       5: aload_2
       6: ldc           #2                  // String HttpStatus is required
       8: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: aload_2
      13: putfield      #4                  // Field status:Lorg/springframework/http/HttpStatus;
      16: return

  public org.springframework.http.HttpStatus getStatusCode() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:Lorg/springframework/http/HttpStatus;
       4: areturn

  public int getRawStatusCode() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:Lorg/springframework/http/HttpStatus;
       4: invokevirtual #6                  // Method org/springframework/http/HttpStatus.value:()I
       7: ireturn

  public java.lang.String getStatusText() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:Lorg/springframework/http/HttpStatus;
       4: invokevirtual #7                  // Method org/springframework/http/HttpStatus.getReasonPhrase:()Ljava/lang/String;
       7: areturn

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getBody:()Ljava/io/InputStream;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: invokevirtual #9                  // Method java/io/InputStream.close:()V
      13: goto          17
      16: astore_1
      17: return
    Exception table:
       from    to  target type
           0    13    16   Class java/io/IOException
}
