Compiled from "SimpleNamingContext.java"
public class org.springframework.mock.jndi.SimpleNamingContext implements javax.naming.Context {
  private final org.apache.commons.logging.Log logger;

  private final java.lang.String root;

  private final java.util.Hashtable<java.lang.String, java.lang.Object> boundObjects;

  private final java.util.Hashtable<java.lang.String, java.lang.Object> environment;

  public org.springframework.mock.jndi.SimpleNamingContext();
    Code:
       0: aload_0
       1: ldc           #3                  // String
       3: invokespecial #4                  // Method "<init>":(Ljava/lang/String;)V
       6: return

  public org.springframework.mock.jndi.SimpleNamingContext(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #7                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #9                  // class java/util/Hashtable
      19: dup
      20: invokespecial #10                 // Method java/util/Hashtable."<init>":()V
      23: putfield      #11                 // Field environment:Ljava/util/Hashtable;
      26: aload_0
      27: aload_1
      28: putfield      #2                  // Field root:Ljava/lang/String;
      31: aload_0
      32: new           #9                  // class java/util/Hashtable
      35: dup
      36: invokespecial #10                 // Method java/util/Hashtable."<init>":()V
      39: putfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
      42: return

  public org.springframework.mock.jndi.SimpleNamingContext(java.lang.String, java.util.Hashtable<java.lang.String, java.lang.Object>, java.util.Hashtable<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #7                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #9                  // class java/util/Hashtable
      19: dup
      20: invokespecial #10                 // Method java/util/Hashtable."<init>":()V
      23: putfield      #11                 // Field environment:Ljava/util/Hashtable;
      26: aload_0
      27: aload_1
      28: putfield      #2                  // Field root:Ljava/lang/String;
      31: aload_0
      32: aload_2
      33: putfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
      36: aload_3
      37: ifnull        48
      40: aload_0
      41: getfield      #11                 // Field environment:Ljava/util/Hashtable;
      44: aload_3
      45: invokevirtual #12                 // Method java/util/Hashtable.putAll:(Ljava/util/Map;)V
      48: return

  public javax.naming.NamingEnumeration<javax.naming.NameClassPair> list(java.lang.String) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #16                 // String Listing name/class pairs under [
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #18                 // String ]
      34: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: new           #21                 // class org/springframework/mock/jndi/SimpleNamingContext$NameClassPairEnumeration
      48: dup
      49: aload_0
      50: aload_1
      51: aconst_null
      52: invokespecial #22                 // Method org/springframework/mock/jndi/SimpleNamingContext$NameClassPairEnumeration."<init>":(Lorg/springframework/mock/jndi/SimpleNamingContext;Ljava/lang/String;Lorg/springframework/mock/jndi/SimpleNamingContext$1;)V
      55: areturn

  public javax.naming.NamingEnumeration<javax.naming.Binding> listBindings(java.lang.String) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #23                 // String Listing bindings under [
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #18                 // String ]
      34: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: new           #24                 // class org/springframework/mock/jndi/SimpleNamingContext$BindingEnumeration
      48: dup
      49: aload_0
      50: aload_1
      51: aconst_null
      52: invokespecial #25                 // Method org/springframework/mock/jndi/SimpleNamingContext$BindingEnumeration."<init>":(Lorg/springframework/mock/jndi/SimpleNamingContext;Ljava/lang/String;Lorg/springframework/mock/jndi/SimpleNamingContext$1;)V
      55: areturn

  public java.lang.Object lookup(java.lang.String) throws javax.naming.NameNotFoundException;
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field root:Ljava/lang/String;
      11: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_1
      15: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: astore_2
      22: aload_0
      23: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      26: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      31: ifeq          67
      34: aload_0
      35: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      38: new           #14                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #26                 // String Static JNDI lookup: [
      47: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_2
      51: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #18                 // String ]
      56: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      67: ldc           #3                  // String
      69: aload_2
      70: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifeq          96
      76: new           #28                 // class org/springframework/mock/jndi/SimpleNamingContext
      79: dup
      80: aload_0
      81: getfield      #2                  // Field root:Ljava/lang/String;
      84: aload_0
      85: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
      88: aload_0
      89: getfield      #11                 // Field environment:Ljava/util/Hashtable;
      92: invokespecial #29                 // Method "<init>":(Ljava/lang/String;Ljava/util/Hashtable;Ljava/util/Hashtable;)V
      95: areturn
      96: aload_0
      97: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
     100: aload_2
     101: invokevirtual #30                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: astore_3
     105: aload_3
     106: ifnonnull     277
     109: aload_2
     110: ldc           #31                 // String /
     112: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     115: ifne          138
     118: new           #14                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     125: aload_2
     126: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc           #31                 // String /
     131: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: astore_2
     138: aload_0
     139: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
     142: invokevirtual #33                 // Method java/util/Hashtable.keySet:()Ljava/util/Set;
     145: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     150: astore        4
     152: aload         4
     154: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     159: ifeq          203
     162: aload         4
     164: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     169: checkcast     #37                 // class java/lang/String
     172: astore        5
     174: aload         5
     176: aload_2
     177: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     180: ifeq          200
     183: new           #28                 // class org/springframework/mock/jndi/SimpleNamingContext
     186: dup
     187: aload_2
     188: aload_0
     189: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
     192: aload_0
     193: getfield      #11                 // Field environment:Ljava/util/Hashtable;
     196: invokespecial #29                 // Method "<init>":(Ljava/lang/String;Ljava/util/Hashtable;Ljava/util/Hashtable;)V
     199: areturn
     200: goto          152
     203: new           #39                 // class javax/naming/NameNotFoundException
     206: dup
     207: new           #14                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     214: ldc           #40                 // String Name [
     216: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: aload_0
     220: getfield      #2                  // Field root:Ljava/lang/String;
     223: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: aload_1
     227: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: ldc           #41                 // String ] not bound;
     232: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     235: aload_0
     236: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
     239: invokevirtual #42                 // Method java/util/Hashtable.size:()I
     242: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     245: ldc           #44                 // String  bindings: [
     247: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: aload_0
     251: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
     254: invokevirtual #33                 // Method java/util/Hashtable.keySet:()Ljava/util/Set;
     257: ldc           #45                 // String ,
     259: invokestatic  #46                 // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
     262: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: ldc           #18                 // String ]
     267: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     273: invokespecial #47                 // Method javax/naming/NameNotFoundException."<init>":(Ljava/lang/String;)V
     276: athrow
     277: aload_3
     278: areturn

  public java.lang.Object lookupLink(java.lang.String) throws javax.naming.NameNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method lookup:(Ljava/lang/String;)Ljava/lang/Object;
       5: areturn

  public void bind(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #49,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
       9: ifeq          61
      12: aload_0
      13: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #50                 // String Static JNDI binding: [
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #2                  // Field root:Ljava/lang/String;
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #51                 // String ] = [
      41: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_2
      45: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #18                 // String ]
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      61: aload_0
      62: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
      65: new           #14                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      72: aload_0
      73: getfield      #2                  // Field root:Ljava/lang/String;
      76: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_1
      80: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: aload_2
      87: invokevirtual #54                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: return

  public void unbind(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #49,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
       9: ifeq          52
      12: aload_0
      13: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #55                 // String Static JNDI remove: [
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #2                  // Field root:Ljava/lang/String;
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #18                 // String ]
      41: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      52: aload_0
      53: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
      56: new           #14                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      63: aload_0
      64: getfield      #2                  // Field root:Ljava/lang/String;
      67: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_1
      71: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokevirtual #56                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: return

  public void rebind(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #57                 // Method bind:(Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  public void rename(java.lang.String, java.lang.String) throws javax.naming.NameNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method lookup:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_1
       8: invokevirtual #58                 // Method unbind:(Ljava/lang/String;)V
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokevirtual #57                 // Method bind:(Ljava/lang/String;Ljava/lang/Object;)V
      17: return

  public javax.naming.Context createSubcontext(java.lang.String);
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field root:Ljava/lang/String;
      11: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_1
      15: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: astore_2
      22: aload_2
      23: ldc           #31                 // String /
      25: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      28: ifne          51
      31: new           #14                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      38: aload_2
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #31                 // String /
      44: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: astore_2
      51: new           #28                 // class org/springframework/mock/jndi/SimpleNamingContext
      54: dup
      55: aload_2
      56: aload_0
      57: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
      60: aload_0
      61: getfield      #11                 // Field environment:Ljava/util/Hashtable;
      64: invokespecial #29                 // Method "<init>":(Ljava/lang/String;Ljava/util/Hashtable;Ljava/util/Hashtable;)V
      67: astore_3
      68: aload_0
      69: aload_1
      70: aload_3
      71: invokevirtual #57                 // Method bind:(Ljava/lang/String;Ljava/lang/Object;)V
      74: aload_3
      75: areturn

  public void destroySubcontext(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method unbind:(Ljava/lang/String;)V
       5: return

  public java.lang.String composeName(java.lang.String, java.lang.String);
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_2
       8: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: aload_1
      12: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      18: areturn

  public java.util.Hashtable<java.lang.String, java.lang.Object> getEnvironment();
    Code:
       0: aload_0
       1: getfield      #11                 // Field environment:Ljava/util/Hashtable;
       4: areturn

  public java.lang.Object addToEnvironment(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field environment:Ljava/util/Hashtable;
       4: aload_1
       5: aload_2
       6: invokevirtual #54                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object removeFromEnvironment(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field environment:Ljava/util/Hashtable;
       4: aload_1
       5: invokevirtual #56                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public void close();
    Code:
       0: return

  public javax.naming.NamingEnumeration<javax.naming.NameClassPair> list(javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.naming.NamingEnumeration<javax.naming.Binding> listBindings(javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object lookup(javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object lookupLink(javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void bind(javax.naming.Name, java.lang.Object) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void unbind(javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void rebind(javax.naming.Name, java.lang.Object) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void rename(javax.naming.Name, javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.naming.Context createSubcontext(javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void destroySubcontext(javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getNameInNamespace() throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.naming.NameParser getNameParser(javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.naming.NameParser getNameParser(java.lang.String) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.naming.Name composeName(javax.naming.Name, javax.naming.Name) throws javax.naming.NamingException;
    Code:
       0: new           #59                 // class javax/naming/OperationNotSupportedException
       3: dup
       4: ldc           #60                 // String SimpleNamingContext does not support [javax.naming.Name]
       6: invokespecial #61                 // Method javax/naming/OperationNotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  static java.lang.String access$200(org.springframework.mock.jndi.SimpleNamingContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Ljava/lang/String;
       4: areturn

  static java.util.Hashtable access$300(org.springframework.mock.jndi.SimpleNamingContext);
    Code:
       0: aload_0
       1: getfield      #1                  // Field boundObjects:Ljava/util/Hashtable;
       4: areturn
}
