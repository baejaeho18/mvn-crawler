Compiled from "AbstractConnPool.java"
public abstract class org.apache.http.pool.AbstractConnPool<T, C, E extends org.apache.http.pool.PoolEntry<T, C>> implements org.apache.http.pool.ConnPool<T, E>, org.apache.http.pool.ConnPoolControl<T> {
  private final java.util.concurrent.locks.Lock lock;

  private final org.apache.http.pool.ConnFactory<T, C> connFactory;

  private final java.util.Map<T, org.apache.http.pool.RouteSpecificPool<T, C, E>> routeToPool;

  private final java.util.Set<E> leased;

  private final java.util.LinkedList<E> available;

  private final java.util.LinkedList<org.apache.http.pool.PoolEntryFuture<E>> pending;

  private final java.util.Map<T, java.lang.Integer> maxPerRoute;

  private volatile boolean isShutDown;

  private volatile int defaultMaxPerRoute;

  private volatile int maxTotal;

  private volatile int validateAfterInactivity;

  public org.apache.http.pool.AbstractConnPool(org.apache.http.pool.ConnFactory<T, C>, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #3                  // String Connection factory
       8: invokestatic  #4                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #5                  // class org/apache/http/pool/ConnFactory
      14: putfield      #6                  // Field connFactory:Lorg/apache/http/pool/ConnFactory;
      17: aload_0
      18: iload_2
      19: ldc           #7                  // String Max per route value
      21: invokestatic  #8                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      24: putfield      #9                  // Field defaultMaxPerRoute:I
      27: aload_0
      28: iload_3
      29: ldc           #10                 // String Max total value
      31: invokestatic  #8                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      34: putfield      #11                 // Field maxTotal:I
      37: aload_0
      38: new           #12                 // class java/util/concurrent/locks/ReentrantLock
      41: dup
      42: invokespecial #13                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      45: putfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      48: aload_0
      49: new           #15                 // class java/util/HashMap
      52: dup
      53: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      56: putfield      #17                 // Field routeToPool:Ljava/util/Map;
      59: aload_0
      60: new           #18                 // class java/util/HashSet
      63: dup
      64: invokespecial #19                 // Method java/util/HashSet."<init>":()V
      67: putfield      #20                 // Field leased:Ljava/util/Set;
      70: aload_0
      71: new           #21                 // class java/util/LinkedList
      74: dup
      75: invokespecial #22                 // Method java/util/LinkedList."<init>":()V
      78: putfield      #23                 // Field available:Ljava/util/LinkedList;
      81: aload_0
      82: new           #21                 // class java/util/LinkedList
      85: dup
      86: invokespecial #22                 // Method java/util/LinkedList."<init>":()V
      89: putfield      #24                 // Field pending:Ljava/util/LinkedList;
      92: aload_0
      93: new           #15                 // class java/util/HashMap
      96: dup
      97: invokespecial #16                 // Method java/util/HashMap."<init>":()V
     100: putfield      #25                 // Field maxPerRoute:Ljava/util/Map;
     103: return

  protected abstract E createEntry(T, C);

  protected void onLease(E);
    Code:
       0: return

  protected void onRelease(E);
    Code:
       0: return

  protected void onReuse(E);
    Code:
       0: return

  protected boolean validate(E);
    Code:
       0: iconst_1
       1: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #26                 // Field isShutDown:Z
       4: ireturn

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field isShutDown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #26                 // Field isShutDown:Z
      13: aload_0
      14: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      17: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      22: aload_0
      23: getfield      #23                 // Field available:Ljava/util/LinkedList;
      26: invokevirtual #28                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: aload_1
      31: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          56
      39: aload_1
      40: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #31                 // class org/apache/http/pool/PoolEntry
      48: astore_2
      49: aload_2
      50: invokevirtual #32                 // Method org/apache/http/pool/PoolEntry.close:()V
      53: goto          30
      56: aload_0
      57: getfield      #20                 // Field leased:Ljava/util/Set;
      60: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      65: astore_1
      66: aload_1
      67: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          92
      75: aload_1
      76: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #31                 // class org/apache/http/pool/PoolEntry
      84: astore_2
      85: aload_2
      86: invokevirtual #32                 // Method org/apache/http/pool/PoolEntry.close:()V
      89: goto          66
      92: aload_0
      93: getfield      #17                 // Field routeToPool:Ljava/util/Map;
      96: invokeinterface #34,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     101: invokeinterface #35,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     106: astore_1
     107: aload_1
     108: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          133
     116: aload_1
     117: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #36                 // class org/apache/http/pool/RouteSpecificPool
     125: astore_2
     126: aload_2
     127: invokevirtual #37                 // Method org/apache/http/pool/RouteSpecificPool.shutdown:()V
     130: goto          107
     133: aload_0
     134: getfield      #17                 // Field routeToPool:Ljava/util/Map;
     137: invokeinterface #38,  1           // InterfaceMethod java/util/Map.clear:()V
     142: aload_0
     143: getfield      #20                 // Field leased:Ljava/util/Set;
     146: invokeinterface #39,  1           // InterfaceMethod java/util/Set.clear:()V
     151: aload_0
     152: getfield      #23                 // Field available:Ljava/util/LinkedList;
     155: invokevirtual #40                 // Method java/util/LinkedList.clear:()V
     158: aload_0
     159: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
     162: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     167: goto          182
     170: astore_3
     171: aload_0
     172: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
     175: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     180: aload_3
     181: athrow
     182: return
    Exception table:
       from    to  target type
          22   158   170   any
         170   171   170   any

  private org.apache.http.pool.RouteSpecificPool<T, C, E> getPool(T);
    Code:
       0: aload_0
       1: getfield      #17                 // Field routeToPool:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #36                 // class org/apache/http/pool/RouteSpecificPool
      13: astore_2
      14: aload_2
      15: ifnonnull     41
      18: new           #43                 // class org/apache/http/pool/AbstractConnPool$1
      21: dup
      22: aload_0
      23: aload_1
      24: aload_1
      25: invokespecial #44                 // Method org/apache/http/pool/AbstractConnPool$1."<init>":(Lorg/apache/http/pool/AbstractConnPool;Ljava/lang/Object;Ljava/lang/Object;)V
      28: astore_2
      29: aload_0
      30: getfield      #17                 // Field routeToPool:Ljava/util/Map;
      33: aload_1
      34: aload_2
      35: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_2
      42: areturn

  public java.util.concurrent.Future<E> lease(T, java.lang.Object, org.apache.http.concurrent.FutureCallback<E>);
    Code:
       0: aload_1
       1: ldc           #46                 // String Route
       3: invokestatic  #4                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #26                 // Field isShutDown:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #47                 // String Connection pool shut down
      21: invokestatic  #48                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      24: new           #49                 // class org/apache/http/pool/AbstractConnPool$2
      27: dup
      28: aload_0
      29: aload_0
      30: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      33: aload_3
      34: aload_1
      35: aload_2
      36: invokespecial #50                 // Method org/apache/http/pool/AbstractConnPool$2."<init>":(Lorg/apache/http/pool/AbstractConnPool;Ljava/util/concurrent/locks/Lock;Lorg/apache/http/concurrent/FutureCallback;Ljava/lang/Object;Ljava/lang/Object;)V
      39: areturn

  public java.util.concurrent.Future<E> lease(T, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #51                 // Method lease:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
       7: areturn

  private E getPoolEntryBlocking(T, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.pool.PoolEntryFuture<E>) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aconst_null
       1: astore        7
       3: lload_3
       4: lconst_0
       5: lcmp
       6: ifle          28
       9: new           #52                 // class java/util/Date
      12: dup
      13: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
      16: aload         5
      18: lload_3
      19: invokevirtual #54                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      22: ladd
      23: invokespecial #55                 // Method java/util/Date."<init>":(J)V
      26: astore        7
      28: aload_0
      29: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      37: aload_0
      38: aload_1
      39: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      42: astore        8
      44: aconst_null
      45: astore        9
      47: aload         9
      49: ifnonnull     554
      52: aload_0
      53: getfield      #26                 // Field isShutDown:Z
      56: ifne          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ldc           #47                 // String Connection pool shut down
      66: invokestatic  #48                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      69: aload         8
      71: aload_2
      72: invokevirtual #57                 // Method org/apache/http/pool/RouteSpecificPool.getFree:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
      75: astore        9
      77: aload         9
      79: ifnonnull     85
      82: goto          172
      85: aload         9
      87: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
      90: invokevirtual #58                 // Method org/apache/http/pool/PoolEntry.isExpired:(J)Z
      93: ifeq          104
      96: aload         9
      98: invokevirtual #32                 // Method org/apache/http/pool/PoolEntry.close:()V
     101: goto          143
     104: aload_0
     105: getfield      #59                 // Field validateAfterInactivity:I
     108: ifle          143
     111: aload         9
     113: invokevirtual #60                 // Method org/apache/http/pool/PoolEntry.getUpdated:()J
     116: aload_0
     117: getfield      #59                 // Field validateAfterInactivity:I
     120: i2l
     121: ladd
     122: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
     125: lcmp
     126: ifgt          143
     129: aload_0
     130: aload         9
     132: invokevirtual #61                 // Method validate:(Lorg/apache/http/pool/PoolEntry;)Z
     135: ifne          143
     138: aload         9
     140: invokevirtual #32                 // Method org/apache/http/pool/PoolEntry.close:()V
     143: aload         9
     145: invokevirtual #62                 // Method org/apache/http/pool/PoolEntry.isClosed:()Z
     148: ifeq          172
     151: aload_0
     152: getfield      #23                 // Field available:Ljava/util/LinkedList;
     155: aload         9
     157: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     160: pop
     161: aload         8
     163: aload         9
     165: iconst_0
     166: invokevirtual #64                 // Method org/apache/http/pool/RouteSpecificPool.free:(Lorg/apache/http/pool/PoolEntry;Z)V
     169: goto          69
     172: aload         9
     174: ifnull        221
     177: aload_0
     178: getfield      #23                 // Field available:Ljava/util/LinkedList;
     181: aload         9
     183: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     186: pop
     187: aload_0
     188: getfield      #20                 // Field leased:Ljava/util/Set;
     191: aload         9
     193: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     198: pop
     199: aload_0
     200: aload         9
     202: invokevirtual #66                 // Method onReuse:(Lorg/apache/http/pool/PoolEntry;)V
     205: aload         9
     207: astore        10
     209: aload_0
     210: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
     213: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     218: aload         10
     220: areturn
     221: aload_0
     222: aload_1
     223: invokespecial #67                 // Method getMax:(Ljava/lang/Object;)I
     226: istore        10
     228: iconst_0
     229: aload         8
     231: invokevirtual #68                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
     234: iconst_1
     235: iadd
     236: iload         10
     238: isub
     239: invokestatic  #69                 // Method java/lang/Math.max:(II)I
     242: istore        11
     244: iload         11
     246: ifle          303
     249: iconst_0
     250: istore        12
     252: iload         12
     254: iload         11
     256: if_icmpge     303
     259: aload         8
     261: invokevirtual #70                 // Method org/apache/http/pool/RouteSpecificPool.getLastUsed:()Lorg/apache/http/pool/PoolEntry;
     264: astore        13
     266: aload         13
     268: ifnonnull     274
     271: goto          303
     274: aload         13
     276: invokevirtual #32                 // Method org/apache/http/pool/PoolEntry.close:()V
     279: aload_0
     280: getfield      #23                 // Field available:Ljava/util/LinkedList;
     283: aload         13
     285: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     288: pop
     289: aload         8
     291: aload         13
     293: invokevirtual #71                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
     296: pop
     297: iinc          12, 1
     300: goto          252
     303: aload         8
     305: invokevirtual #68                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
     308: iload         10
     310: if_icmpge     455
     313: aload_0
     314: getfield      #20                 // Field leased:Ljava/util/Set;
     317: invokeinterface #72,  1           // InterfaceMethod java/util/Set.size:()I
     322: istore        12
     324: aload_0
     325: getfield      #11                 // Field maxTotal:I
     328: iload         12
     330: isub
     331: iconst_0
     332: invokestatic  #69                 // Method java/lang/Math.max:(II)I
     335: istore        13
     337: iload         13
     339: ifle          455
     342: aload_0
     343: getfield      #23                 // Field available:Ljava/util/LinkedList;
     346: invokevirtual #73                 // Method java/util/LinkedList.size:()I
     349: istore        14
     351: iload         14
     353: iload         13
     355: iconst_1
     356: isub
     357: if_icmple     406
     360: aload_0
     361: getfield      #23                 // Field available:Ljava/util/LinkedList;
     364: invokevirtual #74                 // Method java/util/LinkedList.isEmpty:()Z
     367: ifne          406
     370: aload_0
     371: getfield      #23                 // Field available:Ljava/util/LinkedList;
     374: invokevirtual #75                 // Method java/util/LinkedList.removeLast:()Ljava/lang/Object;
     377: checkcast     #31                 // class org/apache/http/pool/PoolEntry
     380: astore        15
     382: aload         15
     384: invokevirtual #32                 // Method org/apache/http/pool/PoolEntry.close:()V
     387: aload_0
     388: aload         15
     390: invokevirtual #76                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     393: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
     396: astore        16
     398: aload         16
     400: aload         15
     402: invokevirtual #71                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
     405: pop
     406: aload_0
     407: getfield      #6                  // Field connFactory:Lorg/apache/http/pool/ConnFactory;
     410: aload_1
     411: invokeinterface #77,  2           // InterfaceMethod org/apache/http/pool/ConnFactory.create:(Ljava/lang/Object;)Ljava/lang/Object;
     416: astore        15
     418: aload         8
     420: aload         15
     422: invokevirtual #78                 // Method org/apache/http/pool/RouteSpecificPool.add:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
     425: astore        9
     427: aload_0
     428: getfield      #20                 // Field leased:Ljava/util/Set;
     431: aload         9
     433: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     438: pop
     439: aload         9
     441: astore        16
     443: aload_0
     444: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
     447: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     452: aload         16
     454: areturn
     455: iconst_0
     456: istore        12
     458: aload         8
     460: aload         6
     462: invokevirtual #79                 // Method org/apache/http/pool/RouteSpecificPool.queue:(Lorg/apache/http/pool/PoolEntryFuture;)V
     465: aload_0
     466: getfield      #24                 // Field pending:Ljava/util/LinkedList;
     469: aload         6
     471: invokevirtual #80                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     474: pop
     475: aload         6
     477: aload         7
     479: invokevirtual #81                 // Method org/apache/http/pool/PoolEntryFuture.await:(Ljava/util/Date;)Z
     482: istore        12
     484: aload         8
     486: aload         6
     488: invokevirtual #82                 // Method org/apache/http/pool/RouteSpecificPool.unqueue:(Lorg/apache/http/pool/PoolEntryFuture;)V
     491: aload_0
     492: getfield      #24                 // Field pending:Ljava/util/LinkedList;
     495: aload         6
     497: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     500: pop
     501: goto          526
     504: astore        17
     506: aload         8
     508: aload         6
     510: invokevirtual #82                 // Method org/apache/http/pool/RouteSpecificPool.unqueue:(Lorg/apache/http/pool/PoolEntryFuture;)V
     513: aload_0
     514: getfield      #24                 // Field pending:Ljava/util/LinkedList;
     517: aload         6
     519: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     522: pop
     523: aload         17
     525: athrow
     526: iload         12
     528: ifne          551
     531: aload         7
     533: ifnull        551
     536: aload         7
     538: invokevirtual #83                 // Method java/util/Date.getTime:()J
     541: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
     544: lcmp
     545: ifgt          551
     548: goto          554
     551: goto          47
     554: new           #84                 // class java/util/concurrent/TimeoutException
     557: dup
     558: ldc           #85                 // String Timeout waiting for connection
     560: invokespecial #86                 // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
     563: athrow
     564: astore        18
     566: aload_0
     567: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
     570: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     575: aload         18
     577: athrow
    Exception table:
       from    to  target type
         458   484   504   any
         504   506   504   any
          37   209   564   any
         221   443   564   any
         455   566   564   any

  public void release(E, boolean);
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #20                 // Field leased:Ljava/util/Set;
      13: aload_1
      14: invokeinterface #87,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      19: ifeq          114
      22: aload_0
      23: aload_1
      24: invokevirtual #76                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      27: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      30: astore_3
      31: aload_3
      32: aload_1
      33: iload_2
      34: invokevirtual #64                 // Method org/apache/http/pool/RouteSpecificPool.free:(Lorg/apache/http/pool/PoolEntry;Z)V
      37: iload_2
      38: ifeq          59
      41: aload_0
      42: getfield      #26                 // Field isShutDown:Z
      45: ifne          59
      48: aload_0
      49: getfield      #23                 // Field available:Ljava/util/LinkedList;
      52: aload_1
      53: invokevirtual #88                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      56: goto          63
      59: aload_1
      60: invokevirtual #32                 // Method org/apache/http/pool/PoolEntry.close:()V
      63: aload_0
      64: aload_1
      65: invokevirtual #89                 // Method onRelease:(Lorg/apache/http/pool/PoolEntry;)V
      68: aload_3
      69: invokevirtual #90                 // Method org/apache/http/pool/RouteSpecificPool.nextPending:()Lorg/apache/http/pool/PoolEntryFuture;
      72: astore        4
      74: aload         4
      76: ifnull        92
      79: aload_0
      80: getfield      #24                 // Field pending:Ljava/util/LinkedList;
      83: aload         4
      85: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      88: pop
      89: goto          104
      92: aload_0
      93: getfield      #24                 // Field pending:Ljava/util/LinkedList;
      96: invokevirtual #91                 // Method java/util/LinkedList.poll:()Ljava/lang/Object;
      99: checkcast     #92                 // class org/apache/http/pool/PoolEntryFuture
     102: astore        4
     104: aload         4
     106: ifnull        114
     109: aload         4
     111: invokevirtual #93                 // Method org/apache/http/pool/PoolEntryFuture.wakeup:()V
     114: aload_0
     115: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
     118: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     123: goto          140
     126: astore        5
     128: aload_0
     129: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
     132: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     137: aload         5
     139: athrow
     140: return
    Exception table:
       from    to  target type
           9   114   126   any
         126   128   126   any

  private int getMax(T);
    Code:
       0: aload_0
       1: getfield      #25                 // Field maxPerRoute:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #94                 // class java/lang/Integer
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: invokevirtual #95                 // Method java/lang/Integer.intValue:()I
      22: ireturn
      23: aload_0
      24: getfield      #9                  // Field defaultMaxPerRoute:I
      27: ireturn

  public void setMaxTotal(int);
    Code:
       0: iload_1
       1: ldc           #96                 // String Max value
       3: invokestatic  #8                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: iload_1
      18: putfield      #11                 // Field maxTotal:I
      21: aload_0
      22: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      25: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      30: goto          45
      33: astore_2
      34: aload_0
      35: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
          16    21    33   any
          33    34    33   any

  public int getMaxTotal();
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #11                 // Field maxTotal:I
      13: istore_1
      14: aload_0
      15: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setDefaultMaxPerRoute(int);
    Code:
       0: iload_1
       1: ldc           #7                  // String Max per route value
       3: invokestatic  #8                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: iload_1
      18: putfield      #9                  // Field defaultMaxPerRoute:I
      21: aload_0
      22: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      25: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      30: goto          45
      33: astore_2
      34: aload_0
      35: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
          16    21    33   any
          33    34    33   any

  public int getDefaultMaxPerRoute();
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #9                  // Field defaultMaxPerRoute:I
      13: istore_1
      14: aload_0
      15: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setMaxPerRoute(T, int);
    Code:
       0: aload_1
       1: ldc           #46                 // String Route
       3: invokestatic  #4                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iload_2
       8: ldc           #7                  // String Max per route value
      10: invokestatic  #8                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      13: pop
      14: aload_0
      15: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: getfield      #25                 // Field maxPerRoute:Ljava/util/Map;
      27: aload_1
      28: iload_2
      29: invokestatic  #97                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      42: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      47: goto          62
      50: astore_3
      51: aload_0
      52: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      55: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      60: aload_3
      61: athrow
      62: return
    Exception table:
       from    to  target type
          23    38    50   any
          50    51    50   any

  public int getMaxPerRoute(T);
    Code:
       0: aload_1
       1: ldc           #46                 // String Route
       3: invokestatic  #4                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: aload_1
      18: invokespecial #67                 // Method getMax:(Ljava/lang/Object;)I
      21: istore_2
      22: aload_0
      23: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      26: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      31: iload_2
      32: ireturn
      33: astore_3
      34: aload_0
      35: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_3
      44: athrow
    Exception table:
       from    to  target type
          16    22    33   any
          33    34    33   any

  public org.apache.http.pool.PoolStats getTotalStats();
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #98                 // class org/apache/http/pool/PoolStats
      12: dup
      13: aload_0
      14: getfield      #20                 // Field leased:Ljava/util/Set;
      17: invokeinterface #72,  1           // InterfaceMethod java/util/Set.size:()I
      22: aload_0
      23: getfield      #24                 // Field pending:Ljava/util/LinkedList;
      26: invokevirtual #73                 // Method java/util/LinkedList.size:()I
      29: aload_0
      30: getfield      #23                 // Field available:Ljava/util/LinkedList;
      33: invokevirtual #73                 // Method java/util/LinkedList.size:()I
      36: aload_0
      37: getfield      #11                 // Field maxTotal:I
      40: invokespecial #99                 // Method org/apache/http/pool/PoolStats."<init>":(IIII)V
      43: astore_1
      44: aload_0
      45: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      48: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      53: aload_1
      54: areturn
      55: astore_2
      56: aload_0
      57: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      60: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      65: aload_2
      66: athrow
    Exception table:
       from    to  target type
           9    44    55   any
          55    56    55   any

  public org.apache.http.pool.PoolStats getStats(T);
    Code:
       0: aload_1
       1: ldc           #46                 // String Route
       3: invokestatic  #4                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: aload_1
      18: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      21: astore_2
      22: new           #98                 // class org/apache/http/pool/PoolStats
      25: dup
      26: aload_2
      27: invokevirtual #100                // Method org/apache/http/pool/RouteSpecificPool.getLeasedCount:()I
      30: aload_2
      31: invokevirtual #101                // Method org/apache/http/pool/RouteSpecificPool.getPendingCount:()I
      34: aload_2
      35: invokevirtual #102                // Method org/apache/http/pool/RouteSpecificPool.getAvailableCount:()I
      38: aload_0
      39: aload_1
      40: invokespecial #67                 // Method getMax:(Ljava/lang/Object;)I
      43: invokespecial #99                 // Method org/apache/http/pool/PoolStats."<init>":(IIII)V
      46: astore_3
      47: aload_0
      48: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      51: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      56: aload_3
      57: areturn
      58: astore        4
      60: aload_0
      61: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      64: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      69: aload         4
      71: athrow
    Exception table:
       from    to  target type
          16    47    58   any
          58    60    58   any

  public java.util.Set<T> getRoutes();
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #18                 // class java/util/HashSet
      12: dup
      13: aload_0
      14: getfield      #17                 // Field routeToPool:Ljava/util/Map;
      17: invokeinterface #103,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokespecial #104                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: astore_1
      26: aload_0
      27: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_1
      36: areturn
      37: astore_2
      38: aload_0
      39: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      42: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      47: aload_2
      48: athrow
    Exception table:
       from    to  target type
           9    26    37   any
          37    38    37   any

  protected void enumAvailable(org.apache.http.pool.PoolEntryCallback<T, C>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #23                 // Field available:Ljava/util/LinkedList;
      13: invokevirtual #105                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          76
      26: aload_2
      27: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #31                 // class org/apache/http/pool/PoolEntry
      35: astore_3
      36: aload_1
      37: aload_3
      38: invokeinterface #106,  2          // InterfaceMethod org/apache/http/pool/PoolEntryCallback.process:(Lorg/apache/http/pool/PoolEntry;)V
      43: aload_3
      44: invokevirtual #62                 // Method org/apache/http/pool/PoolEntry.isClosed:()Z
      47: ifeq          73
      50: aload_0
      51: aload_3
      52: invokevirtual #76                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      55: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      58: astore        4
      60: aload         4
      62: aload_3
      63: invokevirtual #71                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
      66: pop
      67: aload_2
      68: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.remove:()V
      73: goto          17
      76: aload_0
      77: invokespecial #108                // Method purgePoolMap:()V
      80: aload_0
      81: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      84: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      89: goto          106
      92: astore        5
      94: aload_0
      95: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      98: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     103: aload         5
     105: athrow
     106: return
    Exception table:
       from    to  target type
           9    80    92   any
          92    94    92   any

  protected void enumLeased(org.apache.http.pool.PoolEntryCallback<T, C>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #20                 // Field leased:Ljava/util/Set;
      13: invokeinterface #109,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          48
      28: aload_2
      29: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #31                 // class org/apache/http/pool/PoolEntry
      37: astore_3
      38: aload_1
      39: aload_3
      40: invokeinterface #106,  2          // InterfaceMethod org/apache/http/pool/PoolEntryCallback.process:(Lorg/apache/http/pool/PoolEntry;)V
      45: goto          19
      48: aload_0
      49: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      52: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      57: goto          74
      60: astore        4
      62: aload_0
      63: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      66: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: aload         4
      73: athrow
      74: return
    Exception table:
       from    to  target type
           9    48    60   any
          60    62    60   any

  private void purgePoolMap();
    Code:
       0: aload_0
       1: getfield      #17                 // Field routeToPool:Ljava/util/Map;
       4: invokeinterface #110,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #109,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          65
      24: aload_1
      25: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #111                // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #112,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #36                 // class org/apache/http/pool/RouteSpecificPool
      43: astore_3
      44: aload_3
      45: invokevirtual #101                // Method org/apache/http/pool/RouteSpecificPool.getPendingCount:()I
      48: aload_3
      49: invokevirtual #68                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
      52: iadd
      53: ifne          62
      56: aload_1
      57: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.remove:()V
      62: goto          15
      65: return

  public void closeIdle(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ldc           #113                // String Time unit
       3: invokestatic  #4                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: lload_1
       9: invokevirtual #54                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      12: lstore        4
      14: lload         4
      16: lconst_0
      17: lcmp
      18: ifge          24
      21: lconst_0
      22: lstore        4
      24: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
      27: lload         4
      29: lsub
      30: lstore        6
      32: aload_0
      33: new           #114                // class org/apache/http/pool/AbstractConnPool$3
      36: dup
      37: aload_0
      38: lload         6
      40: invokespecial #115                // Method org/apache/http/pool/AbstractConnPool$3."<init>":(Lorg/apache/http/pool/AbstractConnPool;J)V
      43: invokevirtual #116                // Method enumAvailable:(Lorg/apache/http/pool/PoolEntryCallback;)V
      46: return

  public void closeExpired();
    Code:
       0: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: new           #117                // class org/apache/http/pool/AbstractConnPool$4
       8: dup
       9: aload_0
      10: lload_1
      11: invokespecial #118                // Method org/apache/http/pool/AbstractConnPool$4."<init>":(Lorg/apache/http/pool/AbstractConnPool;J)V
      14: invokevirtual #116                // Method enumAvailable:(Lorg/apache/http/pool/PoolEntryCallback;)V
      17: return

  public int getValidateAfterInactivity();
    Code:
       0: aload_0
       1: getfield      #59                 // Field validateAfterInactivity:I
       4: ireturn

  public void setValidateAfterInactivity(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #59                 // Field validateAfterInactivity:I
       5: return

  public java.lang.String toString();
    Code:
       0: new           #119                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #121                // String [leased:
      11: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #20                 // Field leased:Ljava/util/Set;
      20: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #124                // String ][available:
      27: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #23                 // Field available:Ljava/util/LinkedList;
      36: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: ldc           #125                // String ][pending:
      43: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: aload_0
      49: getfield      #24                 // Field pending:Ljava/util/LinkedList;
      52: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: ldc           #126                // String ]
      59: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: aload_1
      64: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  public void release(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class org/apache/http/pool/PoolEntry
       5: iload_2
       6: invokevirtual #128                // Method release:(Lorg/apache/http/pool/PoolEntry;Z)V
       9: return

  static org.apache.http.pool.PoolEntry access$000(org.apache.http.pool.AbstractConnPool, java.lang.Object, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.pool.PoolEntryFuture) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: aload         5
       6: aload         6
       8: invokespecial #1                  // Method getPoolEntryBlocking:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/pool/PoolEntryFuture;)Lorg/apache/http/pool/PoolEntry;
      11: areturn
}
