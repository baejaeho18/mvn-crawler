Compiled from "AmazonRedshiftAsync.java"
public interface com.amazonaws.services.redshift.AmazonRedshiftAsync extends com.amazonaws.services.redshift.AmazonRedshift {
  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSecurityGroup> authorizeClusterSecurityGroupIngressAsync(com.amazonaws.services.redshift.model.AuthorizeClusterSecurityGroupIngressRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSecurityGroup> authorizeClusterSecurityGroupIngressAsync(com.amazonaws.services.redshift.model.AuthorizeClusterSecurityGroupIngressRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.AuthorizeClusterSecurityGroupIngressRequest, com.amazonaws.services.redshift.model.ClusterSecurityGroup>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> authorizeSnapshotAccessAsync(com.amazonaws.services.redshift.model.AuthorizeSnapshotAccessRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> authorizeSnapshotAccessAsync(com.amazonaws.services.redshift.model.AuthorizeSnapshotAccessRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.AuthorizeSnapshotAccessRequest, com.amazonaws.services.redshift.model.Snapshot>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> copyClusterSnapshotAsync(com.amazonaws.services.redshift.model.CopyClusterSnapshotRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> copyClusterSnapshotAsync(com.amazonaws.services.redshift.model.CopyClusterSnapshotRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CopyClusterSnapshotRequest, com.amazonaws.services.redshift.model.Snapshot>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> createClusterAsync(com.amazonaws.services.redshift.model.CreateClusterRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> createClusterAsync(com.amazonaws.services.redshift.model.CreateClusterRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateClusterRequest, com.amazonaws.services.redshift.model.Cluster>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterParameterGroup> createClusterParameterGroupAsync(com.amazonaws.services.redshift.model.CreateClusterParameterGroupRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterParameterGroup> createClusterParameterGroupAsync(com.amazonaws.services.redshift.model.CreateClusterParameterGroupRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateClusterParameterGroupRequest, com.amazonaws.services.redshift.model.ClusterParameterGroup>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSecurityGroup> createClusterSecurityGroupAsync(com.amazonaws.services.redshift.model.CreateClusterSecurityGroupRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSecurityGroup> createClusterSecurityGroupAsync(com.amazonaws.services.redshift.model.CreateClusterSecurityGroupRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateClusterSecurityGroupRequest, com.amazonaws.services.redshift.model.ClusterSecurityGroup>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> createClusterSnapshotAsync(com.amazonaws.services.redshift.model.CreateClusterSnapshotRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> createClusterSnapshotAsync(com.amazonaws.services.redshift.model.CreateClusterSnapshotRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateClusterSnapshotRequest, com.amazonaws.services.redshift.model.Snapshot>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSubnetGroup> createClusterSubnetGroupAsync(com.amazonaws.services.redshift.model.CreateClusterSubnetGroupRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSubnetGroup> createClusterSubnetGroupAsync(com.amazonaws.services.redshift.model.CreateClusterSubnetGroupRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateClusterSubnetGroupRequest, com.amazonaws.services.redshift.model.ClusterSubnetGroup>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.EventSubscription> createEventSubscriptionAsync(com.amazonaws.services.redshift.model.CreateEventSubscriptionRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.EventSubscription> createEventSubscriptionAsync(com.amazonaws.services.redshift.model.CreateEventSubscriptionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateEventSubscriptionRequest, com.amazonaws.services.redshift.model.EventSubscription>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.HsmClientCertificate> createHsmClientCertificateAsync(com.amazonaws.services.redshift.model.CreateHsmClientCertificateRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.HsmClientCertificate> createHsmClientCertificateAsync(com.amazonaws.services.redshift.model.CreateHsmClientCertificateRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateHsmClientCertificateRequest, com.amazonaws.services.redshift.model.HsmClientCertificate>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.HsmConfiguration> createHsmConfigurationAsync(com.amazonaws.services.redshift.model.CreateHsmConfigurationRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.HsmConfiguration> createHsmConfigurationAsync(com.amazonaws.services.redshift.model.CreateHsmConfigurationRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateHsmConfigurationRequest, com.amazonaws.services.redshift.model.HsmConfiguration>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.SnapshotCopyGrant> createSnapshotCopyGrantAsync(com.amazonaws.services.redshift.model.CreateSnapshotCopyGrantRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.SnapshotCopyGrant> createSnapshotCopyGrantAsync(com.amazonaws.services.redshift.model.CreateSnapshotCopyGrantRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateSnapshotCopyGrantRequest, com.amazonaws.services.redshift.model.SnapshotCopyGrant>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.CreateTagsResult> createTagsAsync(com.amazonaws.services.redshift.model.CreateTagsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.CreateTagsResult> createTagsAsync(com.amazonaws.services.redshift.model.CreateTagsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.CreateTagsRequest, com.amazonaws.services.redshift.model.CreateTagsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> deleteClusterAsync(com.amazonaws.services.redshift.model.DeleteClusterRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> deleteClusterAsync(com.amazonaws.services.redshift.model.DeleteClusterRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteClusterRequest, com.amazonaws.services.redshift.model.Cluster>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteClusterParameterGroupResult> deleteClusterParameterGroupAsync(com.amazonaws.services.redshift.model.DeleteClusterParameterGroupRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteClusterParameterGroupResult> deleteClusterParameterGroupAsync(com.amazonaws.services.redshift.model.DeleteClusterParameterGroupRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteClusterParameterGroupRequest, com.amazonaws.services.redshift.model.DeleteClusterParameterGroupResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupResult> deleteClusterSecurityGroupAsync(com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupResult> deleteClusterSecurityGroupAsync(com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupRequest, com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> deleteClusterSnapshotAsync(com.amazonaws.services.redshift.model.DeleteClusterSnapshotRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> deleteClusterSnapshotAsync(com.amazonaws.services.redshift.model.DeleteClusterSnapshotRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteClusterSnapshotRequest, com.amazonaws.services.redshift.model.Snapshot>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupResult> deleteClusterSubnetGroupAsync(com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupResult> deleteClusterSubnetGroupAsync(com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupRequest, com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteEventSubscriptionResult> deleteEventSubscriptionAsync(com.amazonaws.services.redshift.model.DeleteEventSubscriptionRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteEventSubscriptionResult> deleteEventSubscriptionAsync(com.amazonaws.services.redshift.model.DeleteEventSubscriptionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteEventSubscriptionRequest, com.amazonaws.services.redshift.model.DeleteEventSubscriptionResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteHsmClientCertificateResult> deleteHsmClientCertificateAsync(com.amazonaws.services.redshift.model.DeleteHsmClientCertificateRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteHsmClientCertificateResult> deleteHsmClientCertificateAsync(com.amazonaws.services.redshift.model.DeleteHsmClientCertificateRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteHsmClientCertificateRequest, com.amazonaws.services.redshift.model.DeleteHsmClientCertificateResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteHsmConfigurationResult> deleteHsmConfigurationAsync(com.amazonaws.services.redshift.model.DeleteHsmConfigurationRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteHsmConfigurationResult> deleteHsmConfigurationAsync(com.amazonaws.services.redshift.model.DeleteHsmConfigurationRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteHsmConfigurationRequest, com.amazonaws.services.redshift.model.DeleteHsmConfigurationResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantResult> deleteSnapshotCopyGrantAsync(com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantResult> deleteSnapshotCopyGrantAsync(com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantRequest, com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteTagsResult> deleteTagsAsync(com.amazonaws.services.redshift.model.DeleteTagsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DeleteTagsResult> deleteTagsAsync(com.amazonaws.services.redshift.model.DeleteTagsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DeleteTagsRequest, com.amazonaws.services.redshift.model.DeleteTagsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync(com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync(com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsRequest, com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsRequest, com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterParametersResult> describeClusterParametersAsync(com.amazonaws.services.redshift.model.DescribeClusterParametersRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterParametersResult> describeClusterParametersAsync(com.amazonaws.services.redshift.model.DescribeClusterParametersRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterParametersRequest, com.amazonaws.services.redshift.model.DescribeClusterParametersResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync(com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync(com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsRequest, com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsRequest, com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync(com.amazonaws.services.redshift.model.DescribeClusterSnapshotsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync(com.amazonaws.services.redshift.model.DescribeClusterSnapshotsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterSnapshotsRequest, com.amazonaws.services.redshift.model.DescribeClusterSnapshotsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterSnapshotsRequest, com.amazonaws.services.redshift.model.DescribeClusterSnapshotsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync(com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync(com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsRequest, com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsRequest, com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterVersionsResult> describeClusterVersionsAsync(com.amazonaws.services.redshift.model.DescribeClusterVersionsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterVersionsResult> describeClusterVersionsAsync(com.amazonaws.services.redshift.model.DescribeClusterVersionsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterVersionsRequest, com.amazonaws.services.redshift.model.DescribeClusterVersionsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterVersionsResult> describeClusterVersionsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClusterVersionsResult> describeClusterVersionsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClusterVersionsRequest, com.amazonaws.services.redshift.model.DescribeClusterVersionsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClustersResult> describeClustersAsync(com.amazonaws.services.redshift.model.DescribeClustersRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClustersResult> describeClustersAsync(com.amazonaws.services.redshift.model.DescribeClustersRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClustersRequest, com.amazonaws.services.redshift.model.DescribeClustersResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClustersResult> describeClustersAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeClustersResult> describeClustersAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeClustersRequest, com.amazonaws.services.redshift.model.DescribeClustersResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DefaultClusterParameters> describeDefaultClusterParametersAsync(com.amazonaws.services.redshift.model.DescribeDefaultClusterParametersRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DefaultClusterParameters> describeDefaultClusterParametersAsync(com.amazonaws.services.redshift.model.DescribeDefaultClusterParametersRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeDefaultClusterParametersRequest, com.amazonaws.services.redshift.model.DefaultClusterParameters>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventCategoriesResult> describeEventCategoriesAsync(com.amazonaws.services.redshift.model.DescribeEventCategoriesRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventCategoriesResult> describeEventCategoriesAsync(com.amazonaws.services.redshift.model.DescribeEventCategoriesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeEventCategoriesRequest, com.amazonaws.services.redshift.model.DescribeEventCategoriesResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventCategoriesResult> describeEventCategoriesAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventCategoriesResult> describeEventCategoriesAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeEventCategoriesRequest, com.amazonaws.services.redshift.model.DescribeEventCategoriesResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync(com.amazonaws.services.redshift.model.DescribeEventSubscriptionsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync(com.amazonaws.services.redshift.model.DescribeEventSubscriptionsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeEventSubscriptionsRequest, com.amazonaws.services.redshift.model.DescribeEventSubscriptionsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeEventSubscriptionsRequest, com.amazonaws.services.redshift.model.DescribeEventSubscriptionsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventsResult> describeEventsAsync(com.amazonaws.services.redshift.model.DescribeEventsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventsResult> describeEventsAsync(com.amazonaws.services.redshift.model.DescribeEventsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeEventsRequest, com.amazonaws.services.redshift.model.DescribeEventsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventsResult> describeEventsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeEventsResult> describeEventsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeEventsRequest, com.amazonaws.services.redshift.model.DescribeEventsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync(com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync(com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesRequest, com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesRequest, com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync(com.amazonaws.services.redshift.model.DescribeHsmConfigurationsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync(com.amazonaws.services.redshift.model.DescribeHsmConfigurationsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeHsmConfigurationsRequest, com.amazonaws.services.redshift.model.DescribeHsmConfigurationsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeHsmConfigurationsRequest, com.amazonaws.services.redshift.model.DescribeHsmConfigurationsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeLoggingStatusResult> describeLoggingStatusAsync(com.amazonaws.services.redshift.model.DescribeLoggingStatusRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeLoggingStatusResult> describeLoggingStatusAsync(com.amazonaws.services.redshift.model.DescribeLoggingStatusRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeLoggingStatusRequest, com.amazonaws.services.redshift.model.DescribeLoggingStatusResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync(com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync(com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsRequest, com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsRequest, com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync(com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync(com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsRequest, com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsRequest, com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeReservedNodesResult> describeReservedNodesAsync(com.amazonaws.services.redshift.model.DescribeReservedNodesRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeReservedNodesResult> describeReservedNodesAsync(com.amazonaws.services.redshift.model.DescribeReservedNodesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeReservedNodesRequest, com.amazonaws.services.redshift.model.DescribeReservedNodesResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeReservedNodesResult> describeReservedNodesAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeReservedNodesResult> describeReservedNodesAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeReservedNodesRequest, com.amazonaws.services.redshift.model.DescribeReservedNodesResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeResizeResult> describeResizeAsync(com.amazonaws.services.redshift.model.DescribeResizeRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeResizeResult> describeResizeAsync(com.amazonaws.services.redshift.model.DescribeResizeRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeResizeRequest, com.amazonaws.services.redshift.model.DescribeResizeResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync(com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync(com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsRequest, com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsRequest, com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync(com.amazonaws.services.redshift.model.DescribeTableRestoreStatusRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync(com.amazonaws.services.redshift.model.DescribeTableRestoreStatusRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeTableRestoreStatusRequest, com.amazonaws.services.redshift.model.DescribeTableRestoreStatusResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeTableRestoreStatusRequest, com.amazonaws.services.redshift.model.DescribeTableRestoreStatusResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeTagsResult> describeTagsAsync(com.amazonaws.services.redshift.model.DescribeTagsRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeTagsResult> describeTagsAsync(com.amazonaws.services.redshift.model.DescribeTagsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeTagsRequest, com.amazonaws.services.redshift.model.DescribeTagsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeTagsResult> describeTagsAsync();

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DescribeTagsResult> describeTagsAsync(com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DescribeTagsRequest, com.amazonaws.services.redshift.model.DescribeTagsResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DisableLoggingResult> disableLoggingAsync(com.amazonaws.services.redshift.model.DisableLoggingRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.DisableLoggingResult> disableLoggingAsync(com.amazonaws.services.redshift.model.DisableLoggingRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DisableLoggingRequest, com.amazonaws.services.redshift.model.DisableLoggingResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> disableSnapshotCopyAsync(com.amazonaws.services.redshift.model.DisableSnapshotCopyRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> disableSnapshotCopyAsync(com.amazonaws.services.redshift.model.DisableSnapshotCopyRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.DisableSnapshotCopyRequest, com.amazonaws.services.redshift.model.Cluster>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.EnableLoggingResult> enableLoggingAsync(com.amazonaws.services.redshift.model.EnableLoggingRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.EnableLoggingResult> enableLoggingAsync(com.amazonaws.services.redshift.model.EnableLoggingRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.EnableLoggingRequest, com.amazonaws.services.redshift.model.EnableLoggingResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> enableSnapshotCopyAsync(com.amazonaws.services.redshift.model.EnableSnapshotCopyRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> enableSnapshotCopyAsync(com.amazonaws.services.redshift.model.EnableSnapshotCopyRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.EnableSnapshotCopyRequest, com.amazonaws.services.redshift.model.Cluster>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> modifyClusterAsync(com.amazonaws.services.redshift.model.ModifyClusterRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> modifyClusterAsync(com.amazonaws.services.redshift.model.ModifyClusterRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.ModifyClusterRequest, com.amazonaws.services.redshift.model.Cluster>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> modifyClusterIamRolesAsync(com.amazonaws.services.redshift.model.ModifyClusterIamRolesRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> modifyClusterIamRolesAsync(com.amazonaws.services.redshift.model.ModifyClusterIamRolesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.ModifyClusterIamRolesRequest, com.amazonaws.services.redshift.model.Cluster>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ModifyClusterParameterGroupResult> modifyClusterParameterGroupAsync(com.amazonaws.services.redshift.model.ModifyClusterParameterGroupRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ModifyClusterParameterGroupResult> modifyClusterParameterGroupAsync(com.amazonaws.services.redshift.model.ModifyClusterParameterGroupRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.ModifyClusterParameterGroupRequest, com.amazonaws.services.redshift.model.ModifyClusterParameterGroupResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSubnetGroup> modifyClusterSubnetGroupAsync(com.amazonaws.services.redshift.model.ModifyClusterSubnetGroupRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSubnetGroup> modifyClusterSubnetGroupAsync(com.amazonaws.services.redshift.model.ModifyClusterSubnetGroupRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.ModifyClusterSubnetGroupRequest, com.amazonaws.services.redshift.model.ClusterSubnetGroup>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.EventSubscription> modifyEventSubscriptionAsync(com.amazonaws.services.redshift.model.ModifyEventSubscriptionRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.EventSubscription> modifyEventSubscriptionAsync(com.amazonaws.services.redshift.model.ModifyEventSubscriptionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.ModifyEventSubscriptionRequest, com.amazonaws.services.redshift.model.EventSubscription>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> modifySnapshotCopyRetentionPeriodAsync(com.amazonaws.services.redshift.model.ModifySnapshotCopyRetentionPeriodRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> modifySnapshotCopyRetentionPeriodAsync(com.amazonaws.services.redshift.model.ModifySnapshotCopyRetentionPeriodRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.ModifySnapshotCopyRetentionPeriodRequest, com.amazonaws.services.redshift.model.Cluster>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ReservedNode> purchaseReservedNodeOfferingAsync(com.amazonaws.services.redshift.model.PurchaseReservedNodeOfferingRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ReservedNode> purchaseReservedNodeOfferingAsync(com.amazonaws.services.redshift.model.PurchaseReservedNodeOfferingRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.PurchaseReservedNodeOfferingRequest, com.amazonaws.services.redshift.model.ReservedNode>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> rebootClusterAsync(com.amazonaws.services.redshift.model.RebootClusterRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> rebootClusterAsync(com.amazonaws.services.redshift.model.RebootClusterRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.RebootClusterRequest, com.amazonaws.services.redshift.model.Cluster>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ResetClusterParameterGroupResult> resetClusterParameterGroupAsync(com.amazonaws.services.redshift.model.ResetClusterParameterGroupRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ResetClusterParameterGroupResult> resetClusterParameterGroupAsync(com.amazonaws.services.redshift.model.ResetClusterParameterGroupRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.ResetClusterParameterGroupRequest, com.amazonaws.services.redshift.model.ResetClusterParameterGroupResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> restoreFromClusterSnapshotAsync(com.amazonaws.services.redshift.model.RestoreFromClusterSnapshotRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> restoreFromClusterSnapshotAsync(com.amazonaws.services.redshift.model.RestoreFromClusterSnapshotRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.RestoreFromClusterSnapshotRequest, com.amazonaws.services.redshift.model.Cluster>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.TableRestoreStatus> restoreTableFromClusterSnapshotAsync(com.amazonaws.services.redshift.model.RestoreTableFromClusterSnapshotRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.TableRestoreStatus> restoreTableFromClusterSnapshotAsync(com.amazonaws.services.redshift.model.RestoreTableFromClusterSnapshotRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.RestoreTableFromClusterSnapshotRequest, com.amazonaws.services.redshift.model.TableRestoreStatus>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSecurityGroup> revokeClusterSecurityGroupIngressAsync(com.amazonaws.services.redshift.model.RevokeClusterSecurityGroupIngressRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.ClusterSecurityGroup> revokeClusterSecurityGroupIngressAsync(com.amazonaws.services.redshift.model.RevokeClusterSecurityGroupIngressRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.RevokeClusterSecurityGroupIngressRequest, com.amazonaws.services.redshift.model.ClusterSecurityGroup>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> revokeSnapshotAccessAsync(com.amazonaws.services.redshift.model.RevokeSnapshotAccessRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Snapshot> revokeSnapshotAccessAsync(com.amazonaws.services.redshift.model.RevokeSnapshotAccessRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.RevokeSnapshotAccessRequest, com.amazonaws.services.redshift.model.Snapshot>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> rotateEncryptionKeyAsync(com.amazonaws.services.redshift.model.RotateEncryptionKeyRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.redshift.model.Cluster> rotateEncryptionKeyAsync(com.amazonaws.services.redshift.model.RotateEncryptionKeyRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.redshift.model.RotateEncryptionKeyRequest, com.amazonaws.services.redshift.model.Cluster>);
}
