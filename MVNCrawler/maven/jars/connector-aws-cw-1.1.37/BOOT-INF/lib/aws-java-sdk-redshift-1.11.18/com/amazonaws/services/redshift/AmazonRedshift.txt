Compiled from "AmazonRedshift.java"
public interface com.amazonaws.services.redshift.AmazonRedshift {
  public static final java.lang.String ENDPOINT_PREFIX;

  public abstract void setEndpoint(java.lang.String);

  public abstract void setRegion(com.amazonaws.regions.Region);

  public abstract com.amazonaws.services.redshift.model.ClusterSecurityGroup authorizeClusterSecurityGroupIngress(com.amazonaws.services.redshift.model.AuthorizeClusterSecurityGroupIngressRequest);

  public abstract com.amazonaws.services.redshift.model.Snapshot authorizeSnapshotAccess(com.amazonaws.services.redshift.model.AuthorizeSnapshotAccessRequest);

  public abstract com.amazonaws.services.redshift.model.Snapshot copyClusterSnapshot(com.amazonaws.services.redshift.model.CopyClusterSnapshotRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster createCluster(com.amazonaws.services.redshift.model.CreateClusterRequest);

  public abstract com.amazonaws.services.redshift.model.ClusterParameterGroup createClusterParameterGroup(com.amazonaws.services.redshift.model.CreateClusterParameterGroupRequest);

  public abstract com.amazonaws.services.redshift.model.ClusterSecurityGroup createClusterSecurityGroup(com.amazonaws.services.redshift.model.CreateClusterSecurityGroupRequest);

  public abstract com.amazonaws.services.redshift.model.Snapshot createClusterSnapshot(com.amazonaws.services.redshift.model.CreateClusterSnapshotRequest);

  public abstract com.amazonaws.services.redshift.model.ClusterSubnetGroup createClusterSubnetGroup(com.amazonaws.services.redshift.model.CreateClusterSubnetGroupRequest);

  public abstract com.amazonaws.services.redshift.model.EventSubscription createEventSubscription(com.amazonaws.services.redshift.model.CreateEventSubscriptionRequest);

  public abstract com.amazonaws.services.redshift.model.HsmClientCertificate createHsmClientCertificate(com.amazonaws.services.redshift.model.CreateHsmClientCertificateRequest);

  public abstract com.amazonaws.services.redshift.model.HsmConfiguration createHsmConfiguration(com.amazonaws.services.redshift.model.CreateHsmConfigurationRequest);

  public abstract com.amazonaws.services.redshift.model.SnapshotCopyGrant createSnapshotCopyGrant(com.amazonaws.services.redshift.model.CreateSnapshotCopyGrantRequest);

  public abstract com.amazonaws.services.redshift.model.CreateTagsResult createTags(com.amazonaws.services.redshift.model.CreateTagsRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster deleteCluster(com.amazonaws.services.redshift.model.DeleteClusterRequest);

  public abstract com.amazonaws.services.redshift.model.DeleteClusterParameterGroupResult deleteClusterParameterGroup(com.amazonaws.services.redshift.model.DeleteClusterParameterGroupRequest);

  public abstract com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupResult deleteClusterSecurityGroup(com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupRequest);

  public abstract com.amazonaws.services.redshift.model.Snapshot deleteClusterSnapshot(com.amazonaws.services.redshift.model.DeleteClusterSnapshotRequest);

  public abstract com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupResult deleteClusterSubnetGroup(com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupRequest);

  public abstract com.amazonaws.services.redshift.model.DeleteEventSubscriptionResult deleteEventSubscription(com.amazonaws.services.redshift.model.DeleteEventSubscriptionRequest);

  public abstract com.amazonaws.services.redshift.model.DeleteHsmClientCertificateResult deleteHsmClientCertificate(com.amazonaws.services.redshift.model.DeleteHsmClientCertificateRequest);

  public abstract com.amazonaws.services.redshift.model.DeleteHsmConfigurationResult deleteHsmConfiguration(com.amazonaws.services.redshift.model.DeleteHsmConfigurationRequest);

  public abstract com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantResult deleteSnapshotCopyGrant(com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantRequest);

  public abstract com.amazonaws.services.redshift.model.DeleteTagsResult deleteTags(com.amazonaws.services.redshift.model.DeleteTagsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsResult describeClusterParameterGroups(com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsResult describeClusterParameterGroups();

  public abstract com.amazonaws.services.redshift.model.DescribeClusterParametersResult describeClusterParameters(com.amazonaws.services.redshift.model.DescribeClusterParametersRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsResult describeClusterSecurityGroups(com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsResult describeClusterSecurityGroups();

  public abstract com.amazonaws.services.redshift.model.DescribeClusterSnapshotsResult describeClusterSnapshots(com.amazonaws.services.redshift.model.DescribeClusterSnapshotsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeClusterSnapshotsResult describeClusterSnapshots();

  public abstract com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsResult describeClusterSubnetGroups(com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsResult describeClusterSubnetGroups();

  public abstract com.amazonaws.services.redshift.model.DescribeClusterVersionsResult describeClusterVersions(com.amazonaws.services.redshift.model.DescribeClusterVersionsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeClusterVersionsResult describeClusterVersions();

  public abstract com.amazonaws.services.redshift.model.DescribeClustersResult describeClusters(com.amazonaws.services.redshift.model.DescribeClustersRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeClustersResult describeClusters();

  public abstract com.amazonaws.services.redshift.model.DefaultClusterParameters describeDefaultClusterParameters(com.amazonaws.services.redshift.model.DescribeDefaultClusterParametersRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeEventCategoriesResult describeEventCategories(com.amazonaws.services.redshift.model.DescribeEventCategoriesRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeEventCategoriesResult describeEventCategories();

  public abstract com.amazonaws.services.redshift.model.DescribeEventSubscriptionsResult describeEventSubscriptions(com.amazonaws.services.redshift.model.DescribeEventSubscriptionsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeEventSubscriptionsResult describeEventSubscriptions();

  public abstract com.amazonaws.services.redshift.model.DescribeEventsResult describeEvents(com.amazonaws.services.redshift.model.DescribeEventsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeEventsResult describeEvents();

  public abstract com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesResult describeHsmClientCertificates(com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesResult describeHsmClientCertificates();

  public abstract com.amazonaws.services.redshift.model.DescribeHsmConfigurationsResult describeHsmConfigurations(com.amazonaws.services.redshift.model.DescribeHsmConfigurationsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeHsmConfigurationsResult describeHsmConfigurations();

  public abstract com.amazonaws.services.redshift.model.DescribeLoggingStatusResult describeLoggingStatus(com.amazonaws.services.redshift.model.DescribeLoggingStatusRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsResult describeOrderableClusterOptions(com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsResult describeOrderableClusterOptions();

  public abstract com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsResult describeReservedNodeOfferings(com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsResult describeReservedNodeOfferings();

  public abstract com.amazonaws.services.redshift.model.DescribeReservedNodesResult describeReservedNodes(com.amazonaws.services.redshift.model.DescribeReservedNodesRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeReservedNodesResult describeReservedNodes();

  public abstract com.amazonaws.services.redshift.model.DescribeResizeResult describeResize(com.amazonaws.services.redshift.model.DescribeResizeRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsResult describeSnapshotCopyGrants(com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsResult describeSnapshotCopyGrants();

  public abstract com.amazonaws.services.redshift.model.DescribeTableRestoreStatusResult describeTableRestoreStatus(com.amazonaws.services.redshift.model.DescribeTableRestoreStatusRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeTableRestoreStatusResult describeTableRestoreStatus();

  public abstract com.amazonaws.services.redshift.model.DescribeTagsResult describeTags(com.amazonaws.services.redshift.model.DescribeTagsRequest);

  public abstract com.amazonaws.services.redshift.model.DescribeTagsResult describeTags();

  public abstract com.amazonaws.services.redshift.model.DisableLoggingResult disableLogging(com.amazonaws.services.redshift.model.DisableLoggingRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster disableSnapshotCopy(com.amazonaws.services.redshift.model.DisableSnapshotCopyRequest);

  public abstract com.amazonaws.services.redshift.model.EnableLoggingResult enableLogging(com.amazonaws.services.redshift.model.EnableLoggingRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster enableSnapshotCopy(com.amazonaws.services.redshift.model.EnableSnapshotCopyRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster modifyCluster(com.amazonaws.services.redshift.model.ModifyClusterRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster modifyClusterIamRoles(com.amazonaws.services.redshift.model.ModifyClusterIamRolesRequest);

  public abstract com.amazonaws.services.redshift.model.ModifyClusterParameterGroupResult modifyClusterParameterGroup(com.amazonaws.services.redshift.model.ModifyClusterParameterGroupRequest);

  public abstract com.amazonaws.services.redshift.model.ClusterSubnetGroup modifyClusterSubnetGroup(com.amazonaws.services.redshift.model.ModifyClusterSubnetGroupRequest);

  public abstract com.amazonaws.services.redshift.model.EventSubscription modifyEventSubscription(com.amazonaws.services.redshift.model.ModifyEventSubscriptionRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster modifySnapshotCopyRetentionPeriod(com.amazonaws.services.redshift.model.ModifySnapshotCopyRetentionPeriodRequest);

  public abstract com.amazonaws.services.redshift.model.ReservedNode purchaseReservedNodeOffering(com.amazonaws.services.redshift.model.PurchaseReservedNodeOfferingRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster rebootCluster(com.amazonaws.services.redshift.model.RebootClusterRequest);

  public abstract com.amazonaws.services.redshift.model.ResetClusterParameterGroupResult resetClusterParameterGroup(com.amazonaws.services.redshift.model.ResetClusterParameterGroupRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster restoreFromClusterSnapshot(com.amazonaws.services.redshift.model.RestoreFromClusterSnapshotRequest);

  public abstract com.amazonaws.services.redshift.model.TableRestoreStatus restoreTableFromClusterSnapshot(com.amazonaws.services.redshift.model.RestoreTableFromClusterSnapshotRequest);

  public abstract com.amazonaws.services.redshift.model.ClusterSecurityGroup revokeClusterSecurityGroupIngress(com.amazonaws.services.redshift.model.RevokeClusterSecurityGroupIngressRequest);

  public abstract com.amazonaws.services.redshift.model.Snapshot revokeSnapshotAccess(com.amazonaws.services.redshift.model.RevokeSnapshotAccessRequest);

  public abstract com.amazonaws.services.redshift.model.Cluster rotateEncryptionKey(com.amazonaws.services.redshift.model.RotateEncryptionKeyRequest);

  public abstract void shutdown();

  public abstract com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest);
}
