Compiled from "BoundedLocalCache.java"
abstract class com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V> extends com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef<K, V> implements com.github.benmanes.caffeine.cache.LocalCache<K, V> {
  static final java.util.logging.Logger logger;

  static final int NCPU;

  static final int WRITE_BUFFER_MIN;

  static final int WRITE_BUFFER_MAX;

  static final int WRITE_BUFFER_RETRIES;

  static final long MAXIMUM_CAPACITY;

  static final double PERCENT_MAIN;

  static final double PERCENT_MAIN_PROTECTED;

  static final long EXPIRE_WRITE_TOLERANCE;

  final java.util.concurrent.ConcurrentHashMap<java.lang.Object, com.github.benmanes.caffeine.cache.Node<K, V>> data;

  final com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V>.PerformCleanupTask drainBuffersTask;

  final java.util.function.Consumer<com.github.benmanes.caffeine.cache.Node<K, V>> accessPolicy;

  final com.github.benmanes.caffeine.cache.CacheLoader<K, V> cacheLoader;

  final com.github.benmanes.caffeine.cache.Buffer<com.github.benmanes.caffeine.cache.Node<K, V>> readBuffer;

  final com.github.benmanes.caffeine.cache.CacheWriter<K, V> writer;

  final com.github.benmanes.caffeine.cache.NodeFactory nodeFactory;

  final com.github.benmanes.caffeine.cache.Weigher<K, V> weigher;

  final java.util.concurrent.locks.Lock evictionLock;

  final java.util.concurrent.Executor executor;

  final boolean isAsync;

  transient java.util.Set<K> keySet;

  transient java.util.Collection<V> values;

  transient java.util.Set<java.util.Map$Entry<K, V>> entrySet;

  protected com.github.benmanes.caffeine.cache.BoundedLocalCache(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<K, V>, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method com/github/benmanes/caffeine/cache/BLCHeader$DrainStatusRef."<init>":()V
       4: aload_0
       5: iload_3
       6: putfield      #5                  // Field isAsync:Z
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field cacheLoader:Lcom/github/benmanes/caffeine/cache/CacheLoader;
      14: aload_0
      15: aload_1
      16: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/Caffeine.getExecutor:()Ljava/util/concurrent/Executor;
      19: putfield      #8                  // Field executor:Ljava/util/concurrent/Executor;
      22: aload_0
      23: aload_1
      24: invokevirtual #9                  // Method com/github/benmanes/caffeine/cache/Caffeine.getCacheWriter:()Lcom/github/benmanes/caffeine/cache/CacheWriter;
      27: putfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      30: aload_0
      31: aload_1
      32: iload_3
      33: invokevirtual #11                 // Method com/github/benmanes/caffeine/cache/Caffeine.getWeigher:(Z)Lcom/github/benmanes/caffeine/cache/Weigher;
      36: putfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      39: aload_0
      40: new           #13                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask
      43: dup
      44: aload_0
      45: invokespecial #14                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      48: putfield      #15                 // Field drainBuffersTask:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask;
      51: aload_0
      52: new           #16                 // class java/util/concurrent/ConcurrentHashMap
      55: dup
      56: aload_1
      57: invokevirtual #17                 // Method com/github/benmanes/caffeine/cache/Caffeine.getInitialCapacity:()I
      60: invokespecial #18                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      63: putfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      66: aload_0
      67: aload_1
      68: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/Caffeine.getExecutor:()Ljava/util/concurrent/Executor;
      71: instanceof    #20                 // class java/util/concurrent/ForkJoinPool
      74: ifeq          87
      77: new           #21                 // class com/github/benmanes/caffeine/cache/NonReentrantLock
      80: dup
      81: invokespecial #22                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock."<init>":()V
      84: goto          94
      87: new           #23                 // class java/util/concurrent/locks/ReentrantLock
      90: dup
      91: invokespecial #24                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      94: putfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
      97: aload_0
      98: aload_1
      99: invokevirtual #26                 // Method com/github/benmanes/caffeine/cache/Caffeine.isStrongKeys:()Z
     102: aload_1
     103: invokevirtual #27                 // Method com/github/benmanes/caffeine/cache/Caffeine.isWeakKeys:()Z
     106: aload_1
     107: invokevirtual #28                 // Method com/github/benmanes/caffeine/cache/Caffeine.isStrongValues:()Z
     110: aload_1
     111: invokevirtual #29                 // Method com/github/benmanes/caffeine/cache/Caffeine.isWeakValues:()Z
     114: aload_1
     115: invokevirtual #30                 // Method com/github/benmanes/caffeine/cache/Caffeine.isSoftValues:()Z
     118: aload_1
     119: invokevirtual #31                 // Method com/github/benmanes/caffeine/cache/Caffeine.expiresAfterAccess:()Z
     122: aload_1
     123: invokevirtual #32                 // Method com/github/benmanes/caffeine/cache/Caffeine.expiresAfterWrite:()Z
     126: aload_1
     127: invokevirtual #33                 // Method com/github/benmanes/caffeine/cache/Caffeine.refreshes:()Z
     130: aload_1
     131: invokevirtual #34                 // Method com/github/benmanes/caffeine/cache/Caffeine.evicts:()Z
     134: iload_3
     135: ifeq          145
     138: aload_1
     139: invokevirtual #34                 // Method com/github/benmanes/caffeine/cache/Caffeine.evicts:()Z
     142: ifne          152
     145: aload_1
     146: invokevirtual #35                 // Method com/github/benmanes/caffeine/cache/Caffeine.isWeighted:()Z
     149: ifeq          156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: invokestatic  #36                 // Method com/github/benmanes/caffeine/cache/NodeFactory.getFactory:(ZZZZZZZZZZ)Lcom/github/benmanes/caffeine/cache/NodeFactory;
     160: putfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
     163: aload_0
     164: aload_0
     165: invokevirtual #38                 // Method evicts:()Z
     168: ifne          192
     171: aload_0
     172: invokevirtual #39                 // Method collectKeys:()Z
     175: ifne          192
     178: aload_0
     179: invokevirtual #40                 // Method collectValues:()Z
     182: ifne          192
     185: aload_0
     186: invokevirtual #41                 // Method expiresAfterAccess:()Z
     189: ifeq          202
     192: new           #42                 // class com/github/benmanes/caffeine/cache/BoundedBuffer
     195: dup
     196: invokespecial #43                 // Method com/github/benmanes/caffeine/cache/BoundedBuffer."<init>":()V
     199: goto          205
     202: invokestatic  #44                 // InterfaceMethod com/github/benmanes/caffeine/cache/Buffer.disabled:()Lcom/github/benmanes/caffeine/cache/Buffer;
     205: putfield      #45                 // Field readBuffer:Lcom/github/benmanes/caffeine/cache/Buffer;
     208: aload_0
     209: aload_0
     210: invokevirtual #38                 // Method evicts:()Z
     213: ifne          223
     216: aload_0
     217: invokevirtual #41                 // Method expiresAfterAccess:()Z
     220: ifeq          232
     223: aload_0
     224: invokedynamic #46,  0             // InvokeDynamic #0:accept:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)Ljava/util/function/Consumer;
     229: goto          237
     232: invokedynamic #47,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
     237: putfield      #48                 // Field accessPolicy:Ljava/util/function/Consumer;
     240: aload_0
     241: invokevirtual #38                 // Method evicts:()Z
     244: ifeq          255
     247: aload_0
     248: aload_1
     249: invokevirtual #49                 // Method com/github/benmanes/caffeine/cache/Caffeine.getMaximum:()J
     252: invokevirtual #50                 // Method setMaximum:(J)V
     255: return

  static int ceilingPowerOfTwo(int);
    Code:
       0: iconst_1
       1: iload_0
       2: iconst_1
       3: isub
       4: invokestatic  #51                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       7: ineg
       8: ishl
       9: ireturn

  final boolean isComputingAsync(com.github.benmanes.caffeine.cache.Node<?, ?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field isAsync:Z
       4: ifeq          26
       7: aload_1
       8: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      13: checkcast     #53                 // class java/util/concurrent/CompletableFuture
      16: invokestatic  #54                 // Method com/github/benmanes/caffeine/cache/Async.isReady:(Ljava/util/concurrent/CompletableFuture;)Z
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  protected com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderEdenDeque();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderProbationDeque();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderProtectedDeque();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected com.github.benmanes.caffeine.cache.WriteOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> writeOrderDeque();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean buffersWrites();
    Code:
       0: iconst_0
       1: ireturn

  protected com.github.benmanes.caffeine.cache.WriteBuffer<java.lang.Runnable> writeBuffer();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final java.util.concurrent.Executor executor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  protected boolean hasWriter();
    Code:
       0: aload_0
       1: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
       4: invokestatic  #57                 // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.disabledWriter:()Lcom/github/benmanes/caffeine/cache/CacheWriter;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isRecordingStats();
    Code:
       0: iconst_0
       1: ireturn

  public com.github.benmanes.caffeine.cache.stats.StatsCounter statsCounter();
    Code:
       0: invokestatic  #58                 // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.disabledStatsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
       3: areturn

  public com.github.benmanes.caffeine.cache.Ticker statsTicker();
    Code:
       0: invokestatic  #59                 // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.disabledTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       3: areturn

  public com.github.benmanes.caffeine.cache.RemovalListener<K, V> removalListener();
    Code:
       0: aconst_null
       1: areturn

  public boolean hasRemovalListener();
    Code:
       0: iconst_0
       1: ireturn

  public void notifyRemoval(K, V, com.github.benmanes.caffeine.cache.RemovalCause);
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method hasRemovalListener:()Z
       4: ldc           #61                 // String Notification should be guarded with a check
       6: iconst_0
       7: anewarray     #62                 // class java/lang/Object
      10: invokestatic  #63                 // Method com/github/benmanes/caffeine/cache/Caffeine.requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      13: aload_0
      14: aload_1
      15: aload_2
      16: aload_3
      17: invokedynamic #64,  0             // InvokeDynamic #2:run:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)Ljava/lang/Runnable;
      22: astore        4
      24: aload_0
      25: invokevirtual #65                 // Method executor:()Ljava/util/concurrent/Executor;
      28: aload         4
      30: invokeinterface #66,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      35: goto          60
      38: astore        5
      40: getstatic     #68                 // Field logger:Ljava/util/logging/Logger;
      43: getstatic     #69                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      46: ldc           #70                 // String Exception thrown when submitting removal listener
      48: aload         5
      50: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      53: aload         4
      55: invokeinterface #72,  1           // InterfaceMethod java/lang/Runnable.run:()V
      60: return
    Exception table:
       from    to  target type
          24    35    38   Class java/lang/Throwable

  protected boolean collectKeys();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean collectValues();
    Code:
       0: iconst_0
       1: ireturn

  protected java.lang.ref.ReferenceQueue<K> keyReferenceQueue();
    Code:
       0: aconst_null
       1: areturn

  protected java.lang.ref.ReferenceQueue<V> valueReferenceQueue();
    Code:
       0: aconst_null
       1: areturn

  protected boolean expiresAfterAccess();
    Code:
       0: iconst_0
       1: ireturn

  protected long expiresAfterAccessNanos();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setExpiresAfterAccessNanos(long);
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean expiresAfterWrite();
    Code:
       0: iconst_0
       1: ireturn

  protected long expiresAfterWriteNanos();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setExpiresAfterWriteNanos(long);
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean refreshAfterWrite();
    Code:
       0: iconst_0
       1: ireturn

  protected long refreshAfterWriteNanos();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setRefreshAfterWriteNanos(long);
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean hasWriteTime();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method expiresAfterWrite:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #74                 // Method refreshAfterWrite:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public com.github.benmanes.caffeine.cache.Ticker expirationTicker();
    Code:
       0: invokestatic  #59                 // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.disabledTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       3: areturn

  protected boolean evicts();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean isWeighted();
    Code:
       0: aload_0
       1: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
       4: invokestatic  #75                 // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.singletonWeigher:()Lcom/github/benmanes/caffeine/cache/Weigher;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected com.github.benmanes.caffeine.cache.FrequencySketch<K> frequencySketch();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean fastpath();
    Code:
       0: iconst_0
       1: ireturn

  protected long maximum();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long edenMaximum();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long mainProtectedMaximum();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void lazySetMaximum(long);
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void lazySetEdenMaximum(long);
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void lazySetMainProtectedMaximum(long);
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  void setMaximum(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #76                 // Method com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      14: lload_1
      15: ldc2_w        #78                 // long 9223372034707292160l
      18: invokestatic  #80                 // Method java/lang/Math.min:(JJ)J
      21: lstore_3
      22: lload_3
      23: lload_3
      24: l2d
      25: ldc2_w        #81                 // double 0.99d
      28: dmul
      29: d2l
      30: lsub
      31: lstore        5
      33: lload_3
      34: lload         5
      36: lsub
      37: l2d
      38: ldc2_w        #83                 // double 0.8d
      41: dmul
      42: d2l
      43: lstore        7
      45: aload_0
      46: lload_3
      47: invokevirtual #85                 // Method lazySetMaximum:(J)V
      50: aload_0
      51: lload         5
      53: invokevirtual #86                 // Method lazySetEdenMaximum:(J)V
      56: aload_0
      57: lload         7
      59: invokevirtual #87                 // Method lazySetMainProtectedMaximum:(J)V
      62: aload_0
      63: invokevirtual #88                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      66: ifnull        95
      69: aload_0
      70: invokevirtual #89                 // Method isWeighted:()Z
      73: ifne          95
      76: aload_0
      77: invokevirtual #90                 // Method weightedSize:()J
      80: lload_3
      81: iconst_1
      82: lushr
      83: lcmp
      84: iflt          95
      87: aload_0
      88: invokevirtual #88                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      91: lload_3
      92: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/FrequencySketch.ensureCapacity:(J)V
      95: return

  long adjustedWeightedSize();
    Code:
       0: lconst_0
       1: aload_0
       2: invokevirtual #90                 // Method weightedSize:()J
       5: invokestatic  #92                 // Method java/lang/Math.max:(JJ)J
       8: lreturn

  protected long weightedSize();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long edenWeightedSize();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long mainProtectedWeightedSize();
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void lazySetWeightedSize(long);
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void lazySetEdenWeightedSize(long);
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void lazySetMainProtectedWeightedSize(long);
    Code:
       0: new           #55                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  void evictEntries();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method evicts:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #93                 // Method evictFromEden:()I
      12: istore_1
      13: aload_0
      14: iload_1
      15: invokevirtual #94                 // Method evictFromMain:(I)V
      18: return

  int evictFromEden();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       6: invokevirtual #96                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peek:()Ljava/lang/Object;
       9: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      12: astore_2
      13: aload_0
      14: invokevirtual #97                 // Method edenWeightedSize:()J
      17: aload_0
      18: invokevirtual #98                 // Method edenMaximum:()J
      21: lcmp
      22: ifle          96
      25: aload_2
      26: ifnonnull     32
      29: goto          96
      32: aload_2
      33: invokeinterface #99,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
      38: astore_3
      39: aload_2
      40: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
      45: ifeq          91
      48: aload_2
      49: invokeinterface #101,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.makeMainProbation:()V
      54: aload_0
      55: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      58: aload_2
      59: invokevirtual #102                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
      62: pop
      63: aload_0
      64: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      67: aload_2
      68: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.add:(Ljava/lang/Object;)Z
      71: pop
      72: iinc          1, 1
      75: aload_0
      76: aload_0
      77: invokevirtual #97                 // Method edenWeightedSize:()J
      80: aload_2
      81: invokeinterface #105,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      86: i2l
      87: lsub
      88: invokevirtual #106                // Method lazySetEdenWeightedSize:(J)V
      91: aload_3
      92: astore_2
      93: goto          13
      96: iload_1
      97: ireturn

  void evictFromMain(int);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       6: invokevirtual #107                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
       9: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      12: astore_3
      13: aload_0
      14: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      17: invokevirtual #108                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekLast:()Ljava/lang/Object;
      20: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      23: astore        4
      25: aload_0
      26: invokevirtual #90                 // Method weightedSize:()J
      29: aload_0
      30: invokevirtual #109                // Method maximum:()J
      33: lcmp
      34: ifle          405
      37: iload_1
      38: ifne          44
      41: aconst_null
      42: astore        4
      44: aload         4
      46: ifnonnull     95
      49: aload_3
      50: ifnonnull     95
      53: iload_2
      54: iconst_1
      55: if_icmpne     74
      58: aload_0
      59: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      62: invokevirtual #107                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
      65: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      68: astore_3
      69: iconst_2
      70: istore_2
      71: goto          25
      74: iload_2
      75: iconst_2
      76: if_icmpne     405
      79: aload_0
      80: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      83: invokevirtual #107                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
      86: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      89: astore_3
      90: iconst_0
      91: istore_2
      92: goto          25
      95: aload_3
      96: ifnull        118
      99: aload_3
     100: invokeinterface #105,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
     105: ifne          118
     108: aload_3
     109: invokeinterface #99,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     114: astore_3
     115: goto          25
     118: aload         4
     120: ifnull        148
     123: aload         4
     125: invokeinterface #105,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
     130: ifne          148
     133: aload         4
     135: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     140: astore        4
     142: iinc          1, -1
     145: goto          25
     148: aload_3
     149: ifnonnull     181
     152: iinc          1, -1
     155: aload         4
     157: astore        5
     159: aload         4
     161: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     166: astore        4
     168: aload_0
     169: aload         5
     171: getstatic     #112                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     174: lconst_0
     175: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
     178: goto          25
     181: aload         4
     183: ifnonnull     209
     186: aload_3
     187: astore        5
     189: aload_3
     190: invokeinterface #99,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     195: astore_3
     196: aload_0
     197: aload         5
     199: getstatic     #112                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     202: lconst_0
     203: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
     206: goto          25
     209: aload_3
     210: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
     215: astore        5
     217: aload         4
     219: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
     224: astore        6
     226: aload         5
     228: ifnonnull     254
     231: aload_3
     232: astore        7
     234: aload_3
     235: invokeinterface #99,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     240: astore_3
     241: aload_0
     242: aload         7
     244: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     247: lconst_0
     248: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
     251: goto          25
     254: aload         6
     256: ifnonnull     288
     259: iinc          1, -1
     262: aload         4
     264: astore        7
     266: aload         4
     268: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     273: astore        4
     275: aload_0
     276: aload         7
     278: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     281: lconst_0
     282: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
     285: goto          25
     288: aload         4
     290: invokeinterface #105,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
     295: i2l
     296: aload_0
     297: invokevirtual #109                // Method maximum:()J
     300: lcmp
     301: ifle          333
     304: iinc          1, -1
     307: aload         4
     309: astore        7
     311: aload         4
     313: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     318: astore        4
     320: aload_0
     321: aload         7
     323: getstatic     #112                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     326: lconst_0
     327: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
     330: goto          25
     333: iinc          1, -1
     336: aload_0
     337: aload         6
     339: aload         5
     341: invokevirtual #116                // Method admit:(Ljava/lang/Object;Ljava/lang/Object;)Z
     344: ifeq          379
     347: aload_3
     348: astore        7
     350: aload_3
     351: invokeinterface #99,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     356: astore_3
     357: aload_0
     358: aload         7
     360: getstatic     #112                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     363: lconst_0
     364: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
     367: aload         4
     369: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     374: astore        4
     376: goto          402
     379: aload         4
     381: astore        7
     383: aload         4
     385: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     390: astore        4
     392: aload_0
     393: aload         7
     395: getstatic     #112                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     398: lconst_0
     399: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
     402: goto          25
     405: return

  boolean admit(K, K);
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
       4: aload_2
       5: invokevirtual #117                // Method com/github/benmanes/caffeine/cache/FrequencySketch.frequency:(Ljava/lang/Object;)I
       8: istore_3
       9: aload_0
      10: invokevirtual #88                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      13: aload_1
      14: invokevirtual #117                // Method com/github/benmanes/caffeine/cache/FrequencySketch.frequency:(Ljava/lang/Object;)I
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmple     27
      25: iconst_1
      26: ireturn
      27: iload         4
      29: iconst_5
      30: if_icmpgt     35
      33: iconst_0
      34: ireturn
      35: invokestatic  #118                // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      38: invokevirtual #119                // Method java/util/concurrent/ThreadLocalRandom.nextInt:()I
      41: istore        5
      43: iload         5
      45: bipush        127
      47: iand
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn

  void expireEntries();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       4: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
       9: lstore_1
      10: aload_0
      11: lload_1
      12: invokevirtual #122                // Method expireAfterAccessEntries:(J)V
      15: aload_0
      16: lload_1
      17: invokevirtual #123                // Method expireAfterWriteEntries:(J)V
      20: return

  void expireAfterAccessEntries(long);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method expiresAfterAccess:()Z
       4: ifne          8
       7: return
       8: lload_1
       9: aload_0
      10: invokevirtual #124                // Method expiresAfterAccessNanos:()J
      13: lsub
      14: lstore_3
      15: aload_0
      16: aload_0
      17: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      20: lload_3
      21: lload_1
      22: invokevirtual #125                // Method expireAfterAccessEntries:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;JJ)V
      25: aload_0
      26: invokevirtual #38                 // Method evicts:()Z
      29: ifeq          52
      32: aload_0
      33: aload_0
      34: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      37: lload_3
      38: lload_1
      39: invokevirtual #125                // Method expireAfterAccessEntries:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;JJ)V
      42: aload_0
      43: aload_0
      44: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      47: lload_3
      48: lload_1
      49: invokevirtual #125                // Method expireAfterAccessEntries:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;JJ)V
      52: return

  void expireAfterAccessEntries(com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>>, long, long);
    Code:
       0: aload_1
       1: invokevirtual #107                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
       4: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
       7: astore        6
       9: aload         6
      11: ifnull        26
      14: aload         6
      16: invokeinterface #126,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getAccessTime:()J
      21: lload_2
      22: lcmp
      23: ifle          27
      26: return
      27: aload_0
      28: aload         6
      30: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      33: lload         4
      35: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
      38: goto          0

  void expireAfterWriteEntries(long);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method expiresAfterWrite:()Z
       4: ifne          8
       7: return
       8: lload_1
       9: aload_0
      10: invokevirtual #128                // Method expiresAfterWriteNanos:()J
      13: lsub
      14: lstore_3
      15: aload_0
      16: invokevirtual #129                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
      19: invokevirtual #130                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.peekFirst:()Ljava/lang/Object;
      22: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      25: astore        5
      27: aload         5
      29: ifnull        60
      32: aload         5
      34: invokeinterface #131,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      39: lload_3
      40: lcmp
      41: ifle          47
      44: goto          60
      47: aload_0
      48: aload         5
      50: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      53: lload_1
      54: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
      57: goto          15
      60: return

  boolean hasExpired(com.github.benmanes.caffeine.cache.Node<K, V>, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
       5: ifeq          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: invokevirtual #41                 // Method expiresAfterAccess:()Z
      14: ifeq          33
      17: lload_2
      18: aload_1
      19: invokeinterface #126,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getAccessTime:()J
      24: lsub
      25: aload_0
      26: invokevirtual #124                // Method expiresAfterAccessNanos:()J
      29: lcmp
      30: ifge          56
      33: aload_0
      34: invokevirtual #73                 // Method expiresAfterWrite:()Z
      37: ifeq          60
      40: lload_2
      41: aload_1
      42: invokeinterface #131,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      47: lsub
      48: aload_0
      49: invokevirtual #128                // Method expiresAfterWriteNanos:()J
      52: lcmp
      53: iflt          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  void evictEntry(com.github.benmanes.caffeine.cache.Node<K, V>, com.github.benmanes.caffeine.cache.RemovalCause, long);
    Code:
       0: aload_1
       1: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
       6: astore        5
       8: aload_1
       9: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      14: astore        6
      16: iconst_1
      17: newarray       boolean
      19: astore        7
      21: iconst_1
      22: newarray       boolean
      24: astore        8
      26: aload         5
      28: ifnull        36
      31: aload         6
      33: ifnonnull     42
      36: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      39: goto          43
      42: aload_2
      43: astore        9
      45: aload_0
      46: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      49: aload_1
      50: invokeinterface #133,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKeyReference:()Ljava/lang/Object;
      55: aload_0
      56: aload_1
      57: aload         9
      59: lload_3
      60: aload         8
      62: aload         5
      64: aload         6
      66: aload         7
      68: invokedynamic #134,  0            // InvokeDynamic #3:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J[ZLjava/lang/Object;Ljava/lang/Object;[Z)Ljava/util/function/BiFunction;
      73: invokevirtual #135                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      76: pop
      77: aload         8
      79: iconst_0
      80: baload
      81: ifeq          85
      84: return
      85: aload_0
      86: aload_1
      87: invokevirtual #136                // Method makeDead:(Lcom/github/benmanes/caffeine/cache/Node;)V
      90: aload_1
      91: invokeinterface #137,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.inEden:()Z
      96: ifeq          125
      99: aload_0
     100: invokevirtual #38                 // Method evicts:()Z
     103: ifne          113
     106: aload_0
     107: invokevirtual #41                 // Method expiresAfterAccess:()Z
     110: ifeq          125
     113: aload_0
     114: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     117: aload_1
     118: invokevirtual #102                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
     121: pop
     122: goto          162
     125: aload_0
     126: invokevirtual #38                 // Method evicts:()Z
     129: ifeq          162
     132: aload_1
     133: invokeinterface #138,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.inMainProbation:()Z
     138: ifeq          153
     141: aload_0
     142: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     145: aload_1
     146: invokevirtual #102                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
     149: pop
     150: goto          162
     153: aload_0
     154: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     157: aload_1
     158: invokevirtual #102                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
     161: pop
     162: aload_0
     163: invokevirtual #73                 // Method expiresAfterWrite:()Z
     166: ifeq          178
     169: aload_0
     170: invokevirtual #129                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
     173: aload_1
     174: invokevirtual #139                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/WriteOrderDeque$WriteOrder;)Z
     177: pop
     178: aload         7
     180: iconst_0
     181: baload
     182: ifeq          217
     185: aload_0
     186: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     189: aload_1
     190: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
     195: invokeinterface #141,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordEviction:(I)V
     200: aload_0
     201: invokevirtual #60                 // Method hasRemovalListener:()Z
     204: ifeq          217
     207: aload_0
     208: aload         5
     210: aload         6
     212: aload         9
     214: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     217: return

  void afterRead(com.github.benmanes.caffeine.cache.Node<K, V>, long, boolean);
    Code:
       0: iload         4
       2: ifeq          15
       5: aload_0
       6: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
       9: iconst_1
      10: invokeinterface #143,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordHits:(I)V
      15: aload_1
      16: lload_2
      17: invokeinterface #144,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setAccessTime:(J)V
      22: aload_0
      23: invokevirtual #145                // Method skipReadBuffer:()Z
      26: ifne          43
      29: aload_0
      30: getfield      #45                 // Field readBuffer:Lcom/github/benmanes/caffeine/cache/Buffer;
      33: aload_1
      34: invokeinterface #146,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Buffer.offer:(Ljava/lang/Object;)I
      39: iconst_1
      40: if_icmpeq     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: istore        5
      50: aload_0
      51: iload         5
      53: invokevirtual #148                // Method shouldDrainBuffers:(Z)Z
      56: ifeq          63
      59: aload_0
      60: invokevirtual #149                // Method scheduleDrainBuffers:()V
      63: aload_0
      64: aload_1
      65: lload_2
      66: invokevirtual #150                // Method refreshIfNeeded:(Lcom/github/benmanes/caffeine/cache/Node;J)V
      69: return

  boolean skipReadBuffer();
    Code:
       0: aload_0
       1: invokevirtual #151                // Method fastpath:()Z
       4: ifeq          21
       7: aload_0
       8: invokevirtual #88                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      11: invokevirtual #152                // Method com/github/benmanes/caffeine/cache/FrequencySketch.isNotInitialized:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  void refreshIfNeeded(com.github.benmanes.caffeine.cache.Node<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method refreshAfterWrite:()Z
       4: ifne          8
       7: return
       8: aload_1
       9: invokeinterface #131,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      14: lstore        6
      16: aload_0
      17: getfield      #5                  // Field isAsync:Z
      20: ifeq          29
      23: ldc2_w        #153                // long 9223372036854775807l
      26: goto          30
      29: lload_2
      30: lstore        8
      32: lload_2
      33: lload         6
      35: lsub
      36: aload_0
      37: invokevirtual #155                // Method refreshAfterWriteNanos:()J
      40: lcmp
      41: ifle          208
      44: aload_1
      45: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      50: dup
      51: astore        4
      53: ifnull        208
      56: aload_1
      57: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      62: dup
      63: astore        5
      65: ifnull        208
      68: aload_1
      69: lload         6
      71: lload         8
      73: invokeinterface #156,  5          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.casWriteTime:(JJ)Z
      78: ifeq          208
      81: aload_0
      82: getfield      #5                  // Field isAsync:Z
      85: ifeq          136
      88: aload         5
      90: checkcast     #53                 // class java/util/concurrent/CompletableFuture
      93: astore        11
      95: aload         11
      97: invokestatic  #54                 // Method com/github/benmanes/caffeine/cache/Async.isReady:(Ljava/util/concurrent/CompletableFuture;)Z
     100: ifeq          121
     103: aload         11
     105: aload_0
     106: aload         4
     108: invokedynamic #157,  0            // InvokeDynamic #4:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/lang/Object;)Ljava/util/function/Function;
     113: invokevirtual #158                // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
     116: astore        10
     118: goto          133
     121: aload_1
     122: lload         8
     124: lload         6
     126: invokeinterface #156,  5          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.casWriteTime:(JJ)Z
     131: pop
     132: return
     133: goto          155
     136: aload_0
     137: getfield      #6                  // Field cacheLoader:Lcom/github/benmanes/caffeine/cache/CacheLoader;
     140: aload         4
     142: aload         5
     144: aload_0
     145: getfield      #8                  // Field executor:Ljava/util/concurrent/Executor;
     148: invokeinterface #159,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheLoader.asyncReload:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
     153: astore        10
     155: aload         10
     157: aload_0
     158: lload_2
     159: aload_1
     160: lload         8
     162: lload         6
     164: aload         10
     166: aload         4
     168: aload         5
     170: invokedynamic #160,  0            // InvokeDynamic #5:accept:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;JLcom/github/benmanes/caffeine/cache/Node;JJLjava/util/concurrent/CompletableFuture;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/BiConsumer;
     175: invokevirtual #161                // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
     178: pop
     179: goto          208
     182: astore        10
     184: aload_1
     185: lload         8
     187: lload         6
     189: invokeinterface #156,  5          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.casWriteTime:(JJ)Z
     194: pop
     195: getstatic     #68                 // Field logger:Ljava/util/logging/Logger;
     198: getstatic     #69                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
     201: ldc           #162                // String Exception thrown when submitting refresh task
     203: aload         10
     205: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     208: return
    Exception table:
       from    to  target type
          81   132   182   Class java/lang/Throwable
         133   179   182   Class java/lang/Throwable

  void afterWrite(com.github.benmanes.caffeine.cache.Node<K, V>, java.lang.Runnable, long);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_1
       5: lload_3
       6: invokeinterface #144,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setAccessTime:(J)V
      11: aload_1
      12: lload_3
      13: invokeinterface #163,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
      18: aload_0
      19: invokevirtual #164                // Method buffersWrites:()Z
      22: ifeq          87
      25: iconst_0
      26: istore        5
      28: iload         5
      30: bipush        100
      32: if_icmpge     61
      35: aload_0
      36: invokevirtual #165                // Method writeBuffer:()Lcom/github/benmanes/caffeine/cache/WriteBuffer;
      39: aload_2
      40: invokevirtual #166                // Method com/github/benmanes/caffeine/cache/WriteBuffer.offer:(Ljava/lang/Object;)Z
      43: ifeq          51
      46: aload_0
      47: invokevirtual #167                // Method scheduleAfterWrite:()V
      50: return
      51: aload_0
      52: invokevirtual #149                // Method scheduleDrainBuffers:()V
      55: iinc          5, 1
      58: goto          28
      61: aload_0
      62: aload_2
      63: invokevirtual #168                // Method performCleanUp:(Ljava/lang/Runnable;)V
      66: goto          91
      69: astore        5
      71: getstatic     #68                 // Field logger:Ljava/util/logging/Logger;
      74: getstatic     #69                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      77: ldc           #170                // String Exception thrown when performing the maintenance task
      79: aload         5
      81: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      84: goto          91
      87: aload_0
      88: invokevirtual #167                // Method scheduleAfterWrite:()V
      91: return
    Exception table:
       from    to  target type
          61    66    69   Class java/lang/RuntimeException

  void scheduleAfterWrite();
    Code:
       0: aload_0
       1: invokevirtual #171                // Method drainStatus:()I
       4: tableswitch   { // 0 to 3
                     0: 36
                     1: 48
                     2: 53
                     3: 63
               default: 64
          }
      36: aload_0
      37: iconst_0
      38: iconst_1
      39: invokevirtual #173                // Method casDrainStatus:(II)Z
      42: pop
      43: aload_0
      44: invokevirtual #149                // Method scheduleDrainBuffers:()V
      47: return
      48: aload_0
      49: invokevirtual #149                // Method scheduleDrainBuffers:()V
      52: return
      53: aload_0
      54: iconst_2
      55: iconst_3
      56: invokevirtual #173                // Method casDrainStatus:(II)Z
      59: ifeq          0
      62: return
      63: return
      64: new           #174                // class java/lang/IllegalStateException
      67: dup
      68: invokespecial #175                // Method java/lang/IllegalStateException."<init>":()V
      71: athrow

  void scheduleDrainBuffers();
    Code:
       0: aload_0
       1: invokevirtual #171                // Method drainStatus:()I
       4: iconst_2
       5: if_icmplt     9
       8: return
       9: aload_0
      10: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
      13: invokeinterface #176,  1          // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:()Z
      18: ifeq          113
      21: aload_0
      22: invokevirtual #171                // Method drainStatus:()I
      25: istore_1
      26: iload_1
      27: iconst_2
      28: if_icmplt     41
      31: aload_0
      32: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
      35: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      40: return
      41: aload_0
      42: iconst_2
      43: invokevirtual #178                // Method lazySetDrainStatus:(I)V
      46: aload_0
      47: invokevirtual #65                 // Method executor:()Ljava/util/concurrent/Executor;
      50: aload_0
      51: getfield      #15                 // Field drainBuffersTask:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask;
      54: invokeinterface #66,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      59: aload_0
      60: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
      63: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      68: goto          113
      71: astore_1
      72: getstatic     #68                 // Field logger:Ljava/util/logging/Logger;
      75: getstatic     #179                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      78: ldc           #180                // String Exception thrown when submitting maintenance task
      80: aload_1
      81: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      84: aload_0
      85: aconst_null
      86: invokevirtual #168                // Method performCleanUp:(Ljava/lang/Runnable;)V
      89: aload_0
      90: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
      93: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      98: goto          113
     101: astore_2
     102: aload_0
     103: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
     106: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     111: aload_2
     112: athrow
     113: return
    Exception table:
       from    to  target type
          21    31    71   Class java/lang/Throwable
          41    59    71   Class java/lang/Throwable
          21    31   101   any
          41    59   101   any
          71    89   101   any

  public void cleanUp();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #168                // Method performCleanUp:(Ljava/lang/Runnable;)V
       5: goto          21
       8: astore_1
       9: getstatic     #68                 // Field logger:Ljava/util/logging/Logger;
      12: getstatic     #69                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      15: ldc           #170                // String Exception thrown when performing the maintenance task
      17: aload_1
      18: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      21: return
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/RuntimeException

  void performCleanUp(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #181,  1          // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: iconst_2
      11: invokevirtual #178                // Method lazySetDrainStatus:(I)V
      14: aload_1
      15: ifnull        24
      18: aload_1
      19: invokeinterface #72,  1           // InterfaceMethod java/lang/Runnable.run:()V
      24: aload_0
      25: invokevirtual #182                // Method maintenance:()V
      28: aload_0
      29: invokevirtual #171                // Method drainStatus:()I
      32: iconst_2
      33: if_icmpne     45
      36: aload_0
      37: iconst_2
      38: iconst_0
      39: invokevirtual #173                // Method casDrainStatus:(II)Z
      42: ifne          50
      45: aload_0
      46: iconst_1
      47: invokevirtual #178                // Method lazySetDrainStatus:(I)V
      50: aload_0
      51: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
      54: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      59: goto          96
      62: astore_2
      63: aload_0
      64: invokevirtual #171                // Method drainStatus:()I
      67: iconst_2
      68: if_icmpne     80
      71: aload_0
      72: iconst_2
      73: iconst_0
      74: invokevirtual #173                // Method casDrainStatus:(II)Z
      77: ifne          85
      80: aload_0
      81: iconst_1
      82: invokevirtual #178                // Method lazySetDrainStatus:(I)V
      85: aload_0
      86: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
      89: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      94: aload_2
      95: athrow
      96: return
    Exception table:
       from    to  target type
           9    28    62   any

  void maintenance();
    Code:
       0: aload_0
       1: invokevirtual #183                // Method drainReadBuffer:()V
       4: aload_0
       5: invokevirtual #184                // Method drainWriteBuffer:()V
       8: aload_0
       9: invokevirtual #185                // Method drainKeyReferences:()V
      12: aload_0
      13: invokevirtual #186                // Method drainValueReferences:()V
      16: aload_0
      17: invokevirtual #187                // Method expireEntries:()V
      20: aload_0
      21: invokevirtual #188                // Method evictEntries:()V
      24: return

  void drainKeyReferences();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method collectKeys:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #189                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      12: invokevirtual #190                // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      15: dup
      16: astore_1
      17: ifnull        48
      20: aload_0
      21: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      24: aload_1
      25: invokevirtual #191                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      31: astore_2
      32: aload_2
      33: ifnull        45
      36: aload_0
      37: aload_2
      38: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      41: lconst_0
      42: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
      45: goto          8
      48: return

  void drainValueReferences();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method collectValues:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      12: invokevirtual #190                // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      15: dup
      16: astore_1
      17: ifnull        68
      20: aload_1
      21: checkcast     #193                // class com/github/benmanes/caffeine/cache/References$InternalReference
      24: astore_2
      25: aload_0
      26: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      29: aload_2
      30: invokeinterface #194,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/References$InternalReference.getKeyReference:()Ljava/lang/Object;
      35: invokevirtual #191                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      41: astore_3
      42: aload_3
      43: ifnull        65
      46: aload_1
      47: aload_3
      48: invokeinterface #195,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValueReference:()Ljava/lang/Object;
      53: if_acmpne     65
      56: aload_0
      57: aload_3
      58: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      61: lconst_0
      62: invokevirtual #113                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)V
      65: goto          8
      68: return

  void drainReadBuffer();
    Code:
       0: aload_0
       1: invokevirtual #145                // Method skipReadBuffer:()Z
       4: ifne          20
       7: aload_0
       8: getfield      #45                 // Field readBuffer:Lcom/github/benmanes/caffeine/cache/Buffer;
      11: aload_0
      12: getfield      #48                 // Field accessPolicy:Ljava/util/function/Consumer;
      15: invokeinterface #196,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Buffer.drainTo:(Ljava/util/function/Consumer;)V
      20: return

  void onAccess(com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method evicts:()Z
       4: ifeq          75
       7: aload_1
       8: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      13: astore_2
      14: aload_2
      15: ifnonnull     19
      18: return
      19: aload_0
      20: invokevirtual #88                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      23: aload_2
      24: invokevirtual #197                // Method com/github/benmanes/caffeine/cache/FrequencySketch.increment:(Ljava/lang/Object;)V
      27: aload_1
      28: invokeinterface #137,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.inEden:()Z
      33: ifeq          47
      36: aload_0
      37: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      40: aload_1
      41: invokestatic  #198                // Method reorder:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;Lcom/github/benmanes/caffeine/cache/Node;)V
      44: goto          72
      47: aload_1
      48: invokeinterface #138,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.inMainProbation:()Z
      53: ifeq          64
      56: aload_0
      57: aload_1
      58: invokevirtual #199                // Method reorderProbation:(Lcom/github/benmanes/caffeine/cache/Node;)V
      61: goto          72
      64: aload_0
      65: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      68: aload_1
      69: invokestatic  #198                // Method reorder:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;Lcom/github/benmanes/caffeine/cache/Node;)V
      72: goto          90
      75: aload_0
      76: invokevirtual #41                 // Method expiresAfterAccess:()Z
      79: ifeq          90
      82: aload_0
      83: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      86: aload_1
      87: invokestatic  #198                // Method reorder:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;Lcom/github/benmanes/caffeine/cache/Node;)V
      90: return

  void reorderProbation(com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_0
       1: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       4: aload_1
       5: invokevirtual #200                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.contains:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
       8: ifne          12
      11: return
      12: aload_1
      13: invokeinterface #105,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      18: i2l
      19: aload_0
      20: invokevirtual #201                // Method mainProtectedMaximum:()J
      23: lcmp
      24: ifle          28
      27: return
      28: aload_0
      29: invokevirtual #202                // Method mainProtectedWeightedSize:()J
      32: aload_1
      33: invokeinterface #105,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      38: i2l
      39: ladd
      40: lstore_2
      41: aload_0
      42: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      45: aload_1
      46: invokevirtual #102                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
      49: pop
      50: aload_0
      51: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      54: aload_1
      55: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_1
      60: invokeinterface #203,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.makeMainProtected:()V
      65: aload_0
      66: invokevirtual #201                // Method mainProtectedMaximum:()J
      69: lstore        4
      71: lload_2
      72: lload         4
      74: lcmp
      75: ifle          128
      78: aload_0
      79: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      82: invokevirtual #204                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.pollFirst:()Ljava/lang/Object;
      85: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      88: astore        6
      90: aload         6
      92: ifnonnull     98
      95: goto          128
      98: aload         6
     100: invokeinterface #101,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.makeMainProbation:()V
     105: aload_0
     106: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     109: aload         6
     111: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.add:(Ljava/lang/Object;)Z
     114: pop
     115: lload_2
     116: aload_1
     117: invokeinterface #105,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
     122: i2l
     123: lsub
     124: lstore_2
     125: goto          71
     128: aload_0
     129: lload_2
     130: invokevirtual #205                // Method lazySetMainProtectedWeightedSize:(J)V
     133: return

  static <K, V> void reorder(com.github.benmanes.caffeine.cache.LinkedDeque<com.github.benmanes.caffeine.cache.Node<K, V>>, com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #206,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque.contains:(Ljava/lang/Object;)Z
       7: ifeq          17
      10: aload_0
      11: aload_1
      12: invokeinterface #207,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque.moveToBack:(Ljava/lang/Object;)V
      17: return

  void drainWriteBuffer();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method buffersWrites:()Z
       4: ifne          8
       7: return
       8: iconst_0
       9: istore_1
      10: iload_1
      11: getstatic     #208                // Field WRITE_BUFFER_MAX:I
      14: if_icmpge     47
      17: aload_0
      18: invokevirtual #165                // Method writeBuffer:()Lcom/github/benmanes/caffeine/cache/WriteBuffer;
      21: invokevirtual #209                // Method com/github/benmanes/caffeine/cache/WriteBuffer.poll:()Ljava/lang/Object;
      24: checkcast     #210                // class java/lang/Runnable
      27: astore_2
      28: aload_2
      29: ifnonnull     35
      32: goto          47
      35: aload_2
      36: invokeinterface #72,  1           // InterfaceMethod java/lang/Runnable.run:()V
      41: iinc          1, 1
      44: goto          10
      47: return

  void makeDead(com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_1
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_1
       5: invokeinterface #211,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.isDead:()Z
      10: ifeq          16
      13: aload_2
      14: monitorexit
      15: return
      16: aload_0
      17: invokevirtual #38                 // Method evicts:()Z
      20: ifeq          92
      23: aload_1
      24: invokeinterface #137,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.inEden:()Z
      29: ifeq          51
      32: aload_0
      33: aload_0
      34: invokevirtual #97                 // Method edenWeightedSize:()J
      37: aload_1
      38: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
      43: i2l
      44: lsub
      45: invokevirtual #106                // Method lazySetEdenWeightedSize:(J)V
      48: goto          76
      51: aload_1
      52: invokeinterface #212,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.inMainProtected:()Z
      57: ifeq          76
      60: aload_0
      61: aload_0
      62: invokevirtual #202                // Method mainProtectedWeightedSize:()J
      65: aload_1
      66: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
      71: i2l
      72: lsub
      73: invokevirtual #205                // Method lazySetMainProtectedWeightedSize:(J)V
      76: aload_0
      77: aload_0
      78: invokevirtual #90                 // Method weightedSize:()J
      81: aload_1
      82: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
      87: i2l
      88: lsub
      89: invokevirtual #213                // Method lazySetWeightedSize:(J)V
      92: aload_1
      93: invokeinterface #214,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.die:()V
      98: aload_2
      99: monitorexit
     100: goto          108
     103: astore_3
     104: aload_2
     105: monitorexit
     106: aload_3
     107: athrow
     108: return
    Exception table:
       from    to  target type
           4    15   103   any
          16   100   103   any
         103   106   103   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #215                // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
       7: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #216                // Method java/util/concurrent/ConcurrentHashMap.size:()I
       7: ireturn

  public long estimatedSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #217                // Method java/util/concurrent/ConcurrentHashMap.mappingCount:()J
       7: lreturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       4: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
       9: lstore_1
      10: aload_0
      11: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
      14: invokeinterface #181,  1          // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      19: aload_0
      20: invokevirtual #164                // Method buffersWrites:()Z
      23: ifeq          50
      26: aload_0
      27: invokevirtual #165                // Method writeBuffer:()Lcom/github/benmanes/caffeine/cache/WriteBuffer;
      30: invokevirtual #209                // Method com/github/benmanes/caffeine/cache/WriteBuffer.poll:()Ljava/lang/Object;
      33: checkcast     #210                // class java/lang/Runnable
      36: dup
      37: astore_3
      38: ifnull        50
      41: aload_3
      42: invokeinterface #72,  1           // InterfaceMethod java/lang/Runnable.run:()V
      47: goto          19
      50: aload_0
      51: invokevirtual #38                 // Method evicts:()Z
      54: ifne          64
      57: aload_0
      58: invokevirtual #41                 // Method expiresAfterAccess:()Z
      61: ifeq          73
      64: aload_0
      65: aload_0
      66: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      69: lload_1
      70: invokevirtual #218                // Method removeNodes:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;J)V
      73: aload_0
      74: invokevirtual #38                 // Method evicts:()Z
      77: ifeq          98
      80: aload_0
      81: aload_0
      82: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      85: lload_1
      86: invokevirtual #218                // Method removeNodes:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;J)V
      89: aload_0
      90: aload_0
      91: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      94: lload_1
      95: invokevirtual #218                // Method removeNodes:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;J)V
      98: aload_0
      99: invokevirtual #73                 // Method expiresAfterWrite:()Z
     102: ifeq          114
     105: aload_0
     106: aload_0
     107: invokevirtual #129                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
     110: lload_1
     111: invokevirtual #218                // Method removeNodes:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;J)V
     114: aload_0
     115: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
     118: invokevirtual #219                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     121: aload_0
     122: lload_1
     123: invokedynamic #220,  0            // InvokeDynamic #6:accept:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;J)Ljava/util/function/Consumer;
     128: invokeinterface #221,  2          // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
     133: aload_0
     134: getfield      #45                 // Field readBuffer:Lcom/github/benmanes/caffeine/cache/Buffer;
     137: invokedynamic #222,  0            // InvokeDynamic #7:accept:()Ljava/util/function/Consumer;
     142: invokeinterface #196,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Buffer.drainTo:(Ljava/util/function/Consumer;)V
     147: aload_0
     148: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
     151: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     156: goto          173
     159: astore        4
     161: aload_0
     162: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
     165: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     170: aload         4
     172: athrow
     173: return
    Exception table:
       from    to  target type
          19   147   159   any
         159   161   159   any

  void removeNodes(com.github.benmanes.caffeine.cache.LinkedDeque<com.github.benmanes.caffeine.cache.Node<K, V>>, long);
    Code:
       0: aload_1
       1: invokeinterface #223,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque.peek:()Ljava/lang/Object;
       6: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
       9: dup
      10: astore        4
      12: ifnull        32
      15: aload_0
      16: aload         4
      18: lload_2
      19: invokevirtual #224                // Method removeNode:(Lcom/github/benmanes/caffeine/cache/Node;J)V
      22: aload_1
      23: invokeinterface #225,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque.poll:()Ljava/lang/Object;
      28: pop
      29: goto          0
      32: return

  void removeNode(com.github.benmanes.caffeine.cache.Node<K, V>, long);
    Code:
       0: aload_1
       1: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
       6: astore        4
       8: aload_1
       9: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      14: astore        5
      16: iconst_1
      17: newarray       boolean
      19: astore        6
      21: aload         4
      23: ifnull        31
      26: aload         5
      28: ifnonnull     39
      31: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      34: astore        7
      36: goto          61
      39: aload_0
      40: aload_1
      41: lload_2
      42: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      45: ifeq          56
      48: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      51: astore        7
      53: goto          61
      56: getstatic     #227                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      59: astore        7
      61: aload_0
      62: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      65: aload_1
      66: invokeinterface #133,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKeyReference:()Ljava/lang/Object;
      71: aload_0
      72: aload_1
      73: aload         4
      75: aload         5
      77: aload         7
      79: aload         6
      81: invokedynamic #228,  0            // InvokeDynamic #8:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;[Z)Ljava/util/function/BiFunction;
      86: invokevirtual #135                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      89: pop
      90: aload         6
      92: iconst_0
      93: baload
      94: ifeq          114
      97: aload_0
      98: invokevirtual #60                 // Method hasRemovalListener:()Z
     101: ifeq          114
     104: aload_0
     105: aload         4
     107: aload         5
     109: aload         7
     111: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     114: aload_0
     115: aload_1
     116: invokevirtual #136                // Method makeDead:(Lcom/github/benmanes/caffeine/cache/Node;)V
     119: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_0
       5: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
       8: aload_1
       9: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokevirtual #191                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      18: astore_2
      19: aload_2
      20: ifnull        53
      23: aload_2
      24: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      29: ifnull        53
      32: aload_0
      33: aload_2
      34: aload_0
      35: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      38: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      43: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       9: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      14: lstore_2
      15: aload_0
      16: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      19: invokevirtual #219                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      22: invokeinterface #231,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore        4
      29: aload         4
      31: invokeinterface #232,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          87
      39: aload         4
      41: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      49: astore        5
      51: aload         5
      53: aload_1
      54: invokeinterface #234,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.containsValue:(Ljava/lang/Object;)Z
      59: ifeq          84
      62: aload_0
      63: aload         5
      65: lload_2
      66: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      69: ifne          84
      72: aload         5
      74: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      79: ifnull        84
      82: iconst_1
      83: ireturn
      84: goto          29
      87: iconst_0
      88: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #235                // Method getIfPresent:(Ljava/lang/Object;Z)Ljava/lang/Object;
       6: areturn

  public V getIfPresent(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_0
       5: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
       8: aload_1
       9: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokevirtual #191                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      18: astore_3
      19: aload_3
      20: ifnonnull     39
      23: iload_2
      24: ifeq          37
      27: aload_0
      28: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      31: iconst_1
      32: invokeinterface #236,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordMisses:(I)V
      37: aconst_null
      38: areturn
      39: aload_0
      40: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      43: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      48: lstore        4
      50: aload_0
      51: aload_3
      52: lload         4
      54: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      57: ifeq          80
      60: iload_2
      61: ifeq          74
      64: aload_0
      65: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      68: iconst_1
      69: invokeinterface #236,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordMisses:(I)V
      74: aload_0
      75: invokevirtual #149                // Method scheduleDrainBuffers:()V
      78: aconst_null
      79: areturn
      80: aload_0
      81: aload_3
      82: lload         4
      84: iload_2
      85: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
      88: aload_3
      89: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      94: areturn

  public V getIfPresentQuietly(java.lang.Object, long[]);
    Code:
       0: aload_0
       1: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_0
       5: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
       8: aload_1
       9: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokevirtual #191                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      18: astore        4
      20: aload         4
      22: ifnull        55
      25: aload         4
      27: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      32: dup
      33: astore_3
      34: ifnull        55
      37: aload_0
      38: aload         4
      40: aload_0
      41: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      44: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      49: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      52: ifeq          57
      55: aconst_null
      56: areturn
      57: aload_2
      58: iconst_0
      59: aload         4
      61: invokeinterface #131,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      66: lastore
      67: aload_3
      68: areturn

  public java.util.Map<K, V> getAllPresent(java.lang.Iterable<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       6: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      11: lstore_3
      12: new           #238                // class java/util/LinkedHashMap
      15: dup
      16: invokespecial #239                // Method java/util/LinkedHashMap."<init>":()V
      19: astore        5
      21: aload_1
      22: invokeinterface #240,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      27: astore        6
      29: aload         6
      31: invokeinterface #232,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          131
      39: aload         6
      41: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: astore        7
      48: aload_0
      49: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      52: aload_0
      53: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      56: aload         7
      58: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      61: invokevirtual #191                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      67: astore        8
      69: aload         8
      71: ifnull        84
      74: aload_0
      75: aload         8
      77: lload_3
      78: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      81: ifeq          90
      84: iinc          2, 1
      87: goto          29
      90: aload         7
      92: astore        9
      94: aload         8
      96: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     101: astore        10
     103: aload         10
     105: ifnull        128
     108: aload         5
     110: aload         9
     112: aload         10
     114: invokeinterface #241,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: aload_0
     121: aload         8
     123: lload_3
     124: iconst_0
     125: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     128: goto          29
     131: aload_0
     132: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     135: iload_2
     136: invokeinterface #236,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordMisses:(I)V
     141: aload_0
     142: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     145: aload         5
     147: invokeinterface #242,  1          // InterfaceMethod java/util/Map.size:()I
     152: invokeinterface #143,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordHits:(I)V
     157: aload         5
     159: invokestatic  #243                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     162: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
       4: aload_1
       5: aload_2
       6: invokeinterface #244,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      11: istore_3
      12: iload_3
      13: ifle          28
      16: aload_0
      17: aload_1
      18: aload_2
      19: iload_3
      20: iconst_1
      21: iconst_0
      22: invokevirtual #245                // Method putFast:(Ljava/lang/Object;Ljava/lang/Object;IZZ)Ljava/lang/Object;
      25: goto          37
      28: aload_0
      29: aload_1
      30: aload_2
      31: iload_3
      32: iconst_1
      33: iconst_0
      34: invokevirtual #246                // Method putSlow:(Ljava/lang/Object;Ljava/lang/Object;IZZ)Ljava/lang/Object;
      37: areturn

  public V put(K, V, boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
       4: aload_1
       5: aload_2
       6: invokeinterface #244,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      11: istore        4
      13: iload         4
      15: ifle          31
      18: aload_0
      19: aload_1
      20: aload_2
      21: iload         4
      23: iload_3
      24: iconst_0
      25: invokevirtual #245                // Method putFast:(Ljava/lang/Object;Ljava/lang/Object;IZZ)Ljava/lang/Object;
      28: goto          41
      31: aload_0
      32: aload_1
      33: aload_2
      34: iload         4
      36: iload_3
      37: iconst_0
      38: invokevirtual #246                // Method putSlow:(Ljava/lang/Object;Ljava/lang/Object;IZZ)Ljava/lang/Object;
      41: areturn

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
       4: aload_1
       5: aload_2
       6: invokeinterface #244,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      11: istore_3
      12: iload_3
      13: ifle          28
      16: aload_0
      17: aload_1
      18: aload_2
      19: iload_3
      20: iconst_1
      21: iconst_1
      22: invokevirtual #245                // Method putFast:(Ljava/lang/Object;Ljava/lang/Object;IZZ)Ljava/lang/Object;
      25: goto          37
      28: aload_0
      29: aload_1
      30: aload_2
      31: iload_3
      32: iconst_1
      33: iconst_1
      34: invokevirtual #246                // Method putSlow:(Ljava/lang/Object;Ljava/lang/Object;IZZ)Ljava/lang/Object;
      37: areturn

  V putFast(K, V, int, boolean, boolean);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iload_3
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #247                // Method com/github/benmanes/caffeine/cache/Caffeine.requireState:(Z)V
      22: aconst_null
      23: astore        6
      25: aload_0
      26: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      29: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      34: lstore        7
      36: aload_0
      37: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      40: aload_0
      41: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      44: aload_1
      45: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      48: invokevirtual #191                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      54: astore        9
      56: aload         9
      58: ifnonnull     211
      61: aload         6
      63: ifnonnull     88
      66: aload_0
      67: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      70: aload_1
      71: aload_0
      72: invokevirtual #189                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      75: aload_2
      76: aload_0
      77: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      80: iload_3
      81: lload         7
      83: invokevirtual #248                // Method com/github/benmanes/caffeine/cache/NodeFactory.newNode:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)Lcom/github/benmanes/caffeine/cache/Node;
      86: astore        6
      88: iload         4
      90: ifeq          164
      93: aload_0
      94: invokevirtual #249                // Method hasWriter:()Z
      97: ifeq          164
     100: aload         6
     102: astore        10
     104: aload_0
     105: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
     108: aload         6
     110: invokeinterface #133,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKeyReference:()Ljava/lang/Object;
     115: aload_0
     116: aload_1
     117: aload_2
     118: aload         10
     120: invokedynamic #250,  0            // InvokeDynamic #9:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/Function;
     125: invokevirtual #251                // Method java/util/concurrent/ConcurrentHashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     128: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
     131: astore        9
     133: aload         9
     135: aload         6
     137: if_acmpne     161
     140: aload_0
     141: aload         6
     143: new           #252                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask
     146: dup
     147: aload_0
     148: aload         6
     150: iload_3
     151: invokespecial #253                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     154: lload         7
     156: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     159: aconst_null
     160: areturn
     161: goto          211
     164: aload_0
     165: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
     168: aload         6
     170: invokeinterface #133,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKeyReference:()Ljava/lang/Object;
     175: aload         6
     177: invokevirtual #255                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     180: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
     183: astore        9
     185: aload         9
     187: ifnonnull     211
     190: aload_0
     191: aload         6
     193: new           #252                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask
     196: dup
     197: aload_0
     198: aload         6
     200: iload_3
     201: invokespecial #253                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     204: lload         7
     206: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     209: aconst_null
     210: areturn
     211: iconst_0
     212: istore        12
     214: iconst_1
     215: istore        13
     217: aload         9
     219: dup
     220: astore        14
     222: monitorenter
     223: aload         9
     225: invokeinterface #256,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.isAlive:()Z
     230: ifne          239
     233: aload         14
     235: monitorexit
     236: goto          36
     239: aload         9
     241: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     246: astore        10
     248: aload         9
     250: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
     255: istore        11
     257: aload         10
     259: ifnonnull     279
     262: aload_0
     263: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     266: aload_1
     267: aconst_null
     268: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     271: invokeinterface #257,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     276: goto          319
     279: aload_0
     280: aload         9
     282: lload         7
     284: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     287: ifeq          311
     290: aload_0
     291: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     294: aload_1
     295: aload         10
     297: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     300: invokeinterface #257,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     305: iconst_1
     306: istore        12
     308: goto          319
     311: iload         5
     313: ifeq          319
     316: iconst_0
     317: istore        13
     319: iload         4
     321: ifeq          351
     324: iload         12
     326: ifne          340
     329: iload         13
     331: ifeq          351
     334: aload_2
     335: aload         10
     337: if_acmpeq     351
     340: aload_0
     341: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     344: aload_1
     345: aload_2
     346: invokeinterface #258,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
     351: iload         13
     353: ifeq          376
     356: aload         9
     358: aload_2
     359: aload_0
     360: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     363: invokeinterface #259,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     368: aload         9
     370: iload_3
     371: invokeinterface #260,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     376: aload         14
     378: monitorexit
     379: goto          390
     382: astore        15
     384: aload         14
     386: monitorexit
     387: aload         15
     389: athrow
     390: aload_0
     391: invokevirtual #60                 // Method hasRemovalListener:()Z
     394: ifeq          454
     397: iload         12
     399: ifeq          415
     402: aload_0
     403: aload_1
     404: aload         10
     406: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     409: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     412: goto          454
     415: aload         10
     417: ifnonnull     433
     420: aload_0
     421: aload_1
     422: aload         10
     424: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     427: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     430: goto          454
     433: iload         13
     435: ifeq          454
     438: aload_2
     439: aload         10
     441: if_acmpeq     454
     444: aload_0
     445: aload_1
     446: aload         10
     448: getstatic     #261                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     451: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     454: iload         13
     456: ifeq          466
     459: iload_3
     460: iload         11
     462: isub
     463: goto          467
     466: iconst_0
     467: istore        14
     469: aload         10
     471: ifnull        484
     474: iload         14
     476: ifne          484
     479: iload         12
     481: ifeq          507
     484: aload_0
     485: aload         9
     487: new           #262                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     490: dup
     491: aload_0
     492: aload         9
     494: iload         14
     496: invokespecial #263                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     499: lload         7
     501: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     504: goto          582
     507: iload         5
     509: ifne          559
     512: aload_0
     513: invokevirtual #73                 // Method expiresAfterWrite:()Z
     516: ifeq          559
     519: lload         7
     521: aload         9
     523: invokeinterface #131,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
     528: lsub
     529: getstatic     #264                // Field EXPIRE_WRITE_TOLERANCE:J
     532: lcmp
     533: ifle          559
     536: aload_0
     537: aload         9
     539: new           #262                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     542: dup
     543: aload_0
     544: aload         9
     546: iload         14
     548: invokespecial #263                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     551: lload         7
     553: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     556: goto          582
     559: iload         5
     561: ifne          573
     564: aload         9
     566: lload         7
     568: invokeinterface #163,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
     573: aload_0
     574: aload         9
     576: lload         7
     578: iconst_0
     579: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     582: iload         12
     584: ifeq          591
     587: aconst_null
     588: goto          593
     591: aload         10
     593: areturn
    Exception table:
       from    to  target type
         223   236   382   any
         239   379   382   any
         382   387   382   any

  V putSlow(K, V, int, boolean, boolean);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iconst_1
      11: anewarray     #62                 // class java/lang/Object
      14: astore        6
      16: iconst_1
      17: anewarray     #62                 // class java/lang/Object
      20: astore        7
      22: iconst_1
      23: anewarray     #265                // class com/github/benmanes/caffeine/cache/RemovalCause
      26: astore        8
      28: aload_0
      29: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      32: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      37: lstore        9
      39: iconst_1
      40: newarray       int
      42: astore        11
      44: aload_0
      45: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      48: aload_1
      49: aload_0
      50: invokevirtual #189                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      53: invokevirtual #266                // Method com/github/benmanes/caffeine/cache/NodeFactory.newReferenceKey:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
      56: astore        12
      58: aload_0
      59: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      62: aload         12
      64: aload_0
      65: iload         4
      67: aload_1
      68: aload_2
      69: iload_3
      70: lload         9
      72: aload         6
      74: aload         7
      76: aload         11
      78: aload         8
      80: iload         5
      82: invokedynamic #267,  0            // InvokeDynamic #10:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;ZLjava/lang/Object;Ljava/lang/Object;IJ[Ljava/lang/Object;[Ljava/lang/Object;[I[Lcom/github/benmanes/caffeine/cache/RemovalCause;Z)Ljava/util/function/BiFunction;
      87: invokevirtual #268                // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      90: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      93: astore        13
      95: aload         8
      97: iconst_0
      98: aaload
      99: ifnull        148
     102: aload         8
     104: iconst_0
     105: aaload
     106: invokevirtual #269                // Method com/github/benmanes/caffeine/cache/RemovalCause.wasEvicted:()Z
     109: ifeq          125
     112: aload_0
     113: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     116: aload         11
     118: iconst_0
     119: iaload
     120: invokeinterface #141,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordEviction:(I)V
     125: aload_0
     126: invokevirtual #60                 // Method hasRemovalListener:()Z
     129: ifeq          148
     132: aload_0
     133: aload         6
     135: iconst_0
     136: aaload
     137: aload         7
     139: iconst_0
     140: aaload
     141: aload         8
     143: iconst_0
     144: aaload
     145: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     148: aload         7
     150: iconst_0
     151: aaload
     152: ifnonnull     184
     155: aload         8
     157: iconst_0
     158: aaload
     159: ifnonnull     184
     162: aload_0
     163: aload         13
     165: new           #252                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask
     168: dup
     169: aload_0
     170: aload         13
     172: iload_3
     173: invokespecial #253                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     176: lload         9
     178: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     181: goto          291
     184: iload         5
     186: ifeq          215
     189: aload         7
     191: iconst_0
     192: aaload
     193: ifnull        215
     196: aload         8
     198: iconst_0
     199: aaload
     200: ifnonnull     215
     203: aload_0
     204: aload         13
     206: lload         9
     208: iconst_0
     209: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     212: goto          291
     215: iload_3
     216: aload         11
     218: iconst_0
     219: iaload
     220: isub
     221: istore        14
     223: aload_0
     224: invokevirtual #73                 // Method expiresAfterWrite:()Z
     227: ifne          259
     230: aload         7
     232: iconst_0
     233: aaload
     234: ifnull        259
     237: iload         14
     239: ifne          259
     242: aload         8
     244: iconst_0
     245: aaload
     246: ifnull        282
     249: aload         8
     251: iconst_0
     252: aaload
     253: getstatic     #261                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     256: if_acmpeq     282
     259: aload_0
     260: aload         13
     262: new           #262                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     265: dup
     266: aload_0
     267: aload         13
     269: iload         14
     271: invokespecial #263                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     274: lload         9
     276: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     279: goto          291
     282: aload_0
     283: aload         13
     285: lload         9
     287: iconst_0
     288: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     291: aload         8
     293: iconst_0
     294: aaload
     295: ifnull        308
     298: aload         8
     300: iconst_0
     301: aaload
     302: getstatic     #261                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     305: if_acmpne     315
     308: aload         7
     310: iconst_0
     311: aaload
     312: goto          316
     315: aconst_null
     316: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #249                // Method hasWriter:()Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokevirtual #270                // Method removeWithWriter:(Ljava/lang/Object;)Ljava/lang/Object;
      12: goto          20
      15: aload_0
      16: aload_1
      17: invokevirtual #271                // Method removeNoWriter:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  V removeNoWriter(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
       4: aload_1
       5: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_3
       9: aload_0
      10: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      13: aload_3
      14: invokevirtual #272                // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          36
      20: aload_0
      21: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      24: aload_3
      25: invokevirtual #273                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      31: dup
      32: astore_2
      33: ifnonnull     38
      36: aconst_null
      37: areturn
      38: aload_2
      39: dup
      40: astore        5
      42: monitorenter
      43: aload_2
      44: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      49: astore        4
      51: aload_2
      52: invokeinterface #256,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.isAlive:()Z
      57: ifeq          66
      60: aload_2
      61: invokeinterface #274,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.retire:()V
      66: aload         5
      68: monitorexit
      69: goto          80
      72: astore        6
      74: aload         5
      76: monitorexit
      77: aload         6
      79: athrow
      80: aload         4
      82: ifnonnull     93
      85: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      88: astore        5
      90: goto          123
      93: aload_0
      94: aload_2
      95: aload_0
      96: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      99: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
     104: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     107: ifeq          118
     110: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     113: astore        5
     115: goto          123
     118: getstatic     #227                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     121: astore        5
     123: aload_0
     124: invokevirtual #60                 // Method hasRemovalListener:()Z
     127: ifeq          143
     130: aload_1
     131: astore        6
     133: aload_0
     134: aload         6
     136: aload         4
     138: aload         5
     140: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     143: aload_0
     144: aload_2
     145: new           #275                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask
     148: dup
     149: aload_0
     150: aload_2
     151: invokespecial #276                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;)V
     154: lconst_0
     155: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     158: aload         5
     160: getstatic     #227                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     163: if_acmpne     171
     166: aload         4
     168: goto          172
     171: aconst_null
     172: areturn
    Exception table:
       from    to  target type
          43    69    72   any
          72    77    72   any

  V removeWithWriter(java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_1
       3: anewarray     #3                  // class com/github/benmanes/caffeine/cache/Node
       6: astore_3
       7: iconst_1
       8: anewarray     #62                 // class java/lang/Object
      11: astore        4
      13: aload_0
      14: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      17: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      22: lstore        5
      24: iconst_1
      25: anewarray     #265                // class com/github/benmanes/caffeine/cache/RemovalCause
      28: astore        7
      30: aload_0
      31: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      34: aload_0
      35: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      38: aload_1
      39: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      42: aload_0
      43: aload         4
      45: aload         7
      47: lload         5
      49: aload_2
      50: aload_3
      51: invokedynamic #277,  0            // InvokeDynamic #11:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;JLjava/lang/Object;[Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/BiFunction;
      56: invokevirtual #135                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      59: pop
      60: aload         7
      62: iconst_0
      63: aaload
      64: ifnull        107
      67: aload_0
      68: aload_3
      69: iconst_0
      70: aaload
      71: new           #275                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask
      74: dup
      75: aload_0
      76: aload_3
      77: iconst_0
      78: aaload
      79: invokespecial #276                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;)V
      82: lload         5
      84: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
      87: aload_0
      88: invokevirtual #60                 // Method hasRemovalListener:()Z
      91: ifeq          107
      94: aload_0
      95: aload_2
      96: aload         4
      98: iconst_0
      99: aaload
     100: aload         7
     102: iconst_0
     103: aaload
     104: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     107: aload         7
     109: iconst_0
     110: aaload
     111: getstatic     #227                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     114: if_acmpne     124
     117: aload         4
     119: iconst_0
     120: aaload
     121: goto          125
     124: aconst_null
     125: areturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
       9: aload_1
      10: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_3
      14: aload_2
      15: ifnull        29
      18: aload_0
      19: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_3
      23: invokevirtual #272                // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: anewarray     #3                  // class com/github/benmanes/caffeine/cache/Node
      35: astore        4
      37: iconst_1
      38: anewarray     #62                 // class java/lang/Object
      41: astore        5
      43: iconst_1
      44: anewarray     #62                 // class java/lang/Object
      47: astore        6
      49: iconst_1
      50: anewarray     #265                // class com/github/benmanes/caffeine/cache/RemovalCause
      53: astore        7
      55: aload_0
      56: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      59: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      64: lstore        8
      66: aload_0
      67: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      70: aload_3
      71: aload_0
      72: aload         5
      74: aload         6
      76: aload         7
      78: lload         8
      80: aload_2
      81: aload         4
      83: invokedynamic #278,  0            // InvokeDynamic #12:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;[Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;JLjava/lang/Object;[Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/BiFunction;
      88: invokevirtual #135                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      91: pop
      92: aload         4
      94: iconst_0
      95: aaload
      96: ifnonnull     101
      99: iconst_0
     100: ireturn
     101: aload_0
     102: invokevirtual #60                 // Method hasRemovalListener:()Z
     105: ifeq          124
     108: aload_0
     109: aload         5
     111: iconst_0
     112: aaload
     113: aload         6
     115: iconst_0
     116: aaload
     117: aload         7
     119: iconst_0
     120: aaload
     121: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     124: aload_0
     125: aload         4
     127: iconst_0
     128: aaload
     129: new           #275                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask
     132: dup
     133: aload_0
     134: aload         4
     136: iconst_0
     137: aaload
     138: invokespecial #276                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;)V
     141: lload         8
     143: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     146: aload         7
     148: iconst_0
     149: aaload
     150: getstatic     #227                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     153: if_acmpne     160
     156: iconst_1
     157: goto          161
     160: iconst_0
     161: ireturn

  public V replace(K, V);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iconst_1
      11: newarray       int
      13: astore_3
      14: iconst_1
      15: anewarray     #62                 // class java/lang/Object
      18: astore        4
      20: iconst_1
      21: anewarray     #62                 // class java/lang/Object
      24: astore        5
      26: aload_0
      27: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      30: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      35: lstore        6
      37: aload_0
      38: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      41: aload_1
      42: aload_2
      43: invokeinterface #244,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      48: istore        8
      50: aload_0
      51: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      54: aload_0
      55: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      58: aload_1
      59: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      62: aload_0
      63: aload         4
      65: aload         5
      67: aload_3
      68: lload         6
      70: aload_2
      71: iload         8
      73: invokedynamic #279,  0            // InvokeDynamic #13:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;[Ljava/lang/Object;[IJLjava/lang/Object;I)Ljava/util/function/BiFunction;
      78: invokevirtual #135                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      81: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      84: astore        9
      86: aload         5
      88: iconst_0
      89: aaload
      90: ifnonnull     95
      93: aconst_null
      94: areturn
      95: iload         8
      97: aload_3
      98: iconst_0
      99: iaload
     100: isub
     101: istore        10
     103: aload_0
     104: invokevirtual #73                 // Method expiresAfterWrite:()Z
     107: ifne          115
     110: iload         10
     112: ifeq          138
     115: aload_0
     116: aload         9
     118: new           #262                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     121: dup
     122: aload_0
     123: aload         9
     125: iload         10
     127: invokespecial #263                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     130: lload         6
     132: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     135: goto          147
     138: aload_0
     139: aload         9
     141: lload         6
     143: iconst_0
     144: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     147: aload_0
     148: invokevirtual #60                 // Method hasRemovalListener:()Z
     151: ifeq          177
     154: aload_2
     155: aload         5
     157: iconst_0
     158: aaload
     159: if_acmpeq     177
     162: aload_0
     163: aload         4
     165: iconst_0
     166: aaload
     167: aload         5
     169: iconst_0
     170: aaload
     171: getstatic     #261                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     174: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     177: aload         5
     179: iconst_0
     180: aaload
     181: areturn

  public boolean replace(K, V, V);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_3
      11: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      19: aload_1
      20: aload_3
      21: invokeinterface #244,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      26: istore        4
      28: iconst_1
      29: newarray       boolean
      31: astore        5
      33: iconst_1
      34: anewarray     #62                 // class java/lang/Object
      37: astore        6
      39: iconst_1
      40: anewarray     #62                 // class java/lang/Object
      43: astore        7
      45: iconst_1
      46: newarray       int
      48: astore        8
      50: aload_0
      51: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      54: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      59: lstore        9
      61: aload_0
      62: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      65: aload_0
      66: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      69: aload_1
      70: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      73: aload_0
      74: aload         6
      76: aload         7
      78: aload         8
      80: lload         9
      82: aload_2
      83: aload_3
      84: aload_1
      85: iload         4
      87: aload         5
      89: invokedynamic #280,  0            // InvokeDynamic #14:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;[Ljava/lang/Object;[IJLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;I[Z)Ljava/util/function/BiFunction;
      94: invokevirtual #135                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      97: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
     100: astore        11
     102: aload         5
     104: iconst_0
     105: baload
     106: ifne          111
     109: iconst_0
     110: ireturn
     111: iload         4
     113: aload         8
     115: iconst_0
     116: iaload
     117: isub
     118: istore        12
     120: aload_0
     121: invokevirtual #73                 // Method expiresAfterWrite:()Z
     124: ifne          132
     127: iload         12
     129: ifeq          155
     132: aload_0
     133: aload         11
     135: new           #262                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     138: dup
     139: aload_0
     140: aload         11
     142: iload         12
     144: invokespecial #263                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     147: lload         9
     149: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     152: goto          164
     155: aload_0
     156: aload         11
     158: lload         9
     160: iconst_0
     161: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     164: aload_0
     165: invokevirtual #60                 // Method hasRemovalListener:()Z
     168: ifeq          191
     171: aload_2
     172: aload_3
     173: if_acmpeq     191
     176: aload_0
     177: aload         6
     179: iconst_0
     180: aaload
     181: aload         7
     183: iconst_0
     184: aaload
     185: getstatic     #261                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     188: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     191: iconst_1
     192: ireturn

  public void replaceAll(java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #281,  0            // InvokeDynamic #15:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;
      12: astore_2
      13: aload_0
      14: invokevirtual #282                // Method keySet:()Ljava/util/Set;
      17: invokeinterface #283,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #232,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          78
      32: aload_3
      33: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: astore        4
      40: aload_0
      41: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      44: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      49: lstore        5
      51: aload_0
      52: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      55: aload         4
      57: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      60: astore        7
      62: aload_0
      63: aload         4
      65: aload         7
      67: aload_2
      68: lload         5
      70: iconst_0
      71: invokevirtual #284                // Method remap:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;JZ)Ljava/lang/Object;
      74: pop
      75: goto          23
      78: return

  public V computeIfAbsent(K, java.util.function.Function<? super K, ? extends V>, boolean, boolean);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      14: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      19: lstore        5
      21: aload_0
      22: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      25: aload_0
      26: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      29: aload_1
      30: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      33: invokevirtual #191                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      39: astore        7
      41: aload         7
      43: ifnull        83
      46: aload         7
      48: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      53: astore        8
      55: aload         8
      57: ifnull        83
      60: aload_0
      61: aload         7
      63: lload         5
      65: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      68: ifne          83
      71: aload_0
      72: aload         7
      74: lload         5
      76: iconst_1
      77: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
      80: aload         8
      82: areturn
      83: iload_3
      84: ifeq          95
      87: aload_0
      88: aload_2
      89: iload         4
      91: invokevirtual #285                // Method statsAware:(Ljava/util/function/Function;Z)Ljava/util/function/Function;
      94: astore_2
      95: aload_0
      96: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      99: aload_1
     100: aload_0
     101: invokevirtual #189                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     104: invokevirtual #266                // Method com/github/benmanes/caffeine/cache/NodeFactory.newReferenceKey:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
     107: astore        8
     109: aload_0
     110: aload_1
     111: aload         8
     113: aload_2
     114: lload         5
     116: invokevirtual #286                // Method doComputeIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Function;J)Ljava/lang/Object;
     119: areturn

  V doComputeIfAbsent(K, java.lang.Object, java.util.function.Function<? super K, ? extends V>, long);
    Code:
       0: iconst_1
       1: anewarray     #62                 // class java/lang/Object
       4: astore        6
       6: iconst_1
       7: anewarray     #62                 // class java/lang/Object
      10: astore        7
      12: iconst_1
      13: anewarray     #62                 // class java/lang/Object
      16: astore        8
      18: iconst_1
      19: anewarray     #3                  // class com/github/benmanes/caffeine/cache/Node
      22: astore        9
      24: iconst_2
      25: newarray       int
      27: astore        10
      29: iconst_1
      30: anewarray     #265                // class com/github/benmanes/caffeine/cache/RemovalCause
      33: astore        11
      35: aload_0
      36: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      39: aload_2
      40: aload_0
      41: aload         7
      43: aload_3
      44: aload_1
      45: aload         10
      47: lload         4
      49: aload         8
      51: aload         6
      53: aload         11
      55: aload         9
      57: invokedynamic #287,  0            // InvokeDynamic #16:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;[IJ[Ljava/lang/Object;[Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;[Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/BiFunction;
      62: invokevirtual #268                // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      65: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      68: astore        12
      70: aload         12
      72: ifnonnull     103
      75: aload         9
      77: iconst_0
      78: aaload
      79: ifnull        101
      82: aload_0
      83: aconst_null
      84: new           #275                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask
      87: dup
      88: aload_0
      89: aload         9
      91: iconst_0
      92: aaload
      93: invokespecial #276                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;)V
      96: lload         4
      98: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     101: aconst_null
     102: areturn
     103: aload         11
     105: iconst_0
     106: aaload
     107: ifnull        146
     110: aload_0
     111: invokevirtual #60                 // Method hasRemovalListener:()Z
     114: ifeq          133
     117: aload_0
     118: aload         8
     120: iconst_0
     121: aaload
     122: aload         6
     124: iconst_0
     125: aaload
     126: aload         11
     128: iconst_0
     129: aaload
     130: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     133: aload_0
     134: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     137: aload         10
     139: iconst_0
     140: iaload
     141: invokeinterface #141,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordEviction:(I)V
     146: aload         7
     148: iconst_0
     149: aaload
     150: ifnonnull     167
     153: aload_0
     154: aload         12
     156: lload         4
     158: iconst_1
     159: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     162: aload         6
     164: iconst_0
     165: aaload
     166: areturn
     167: aload         6
     169: iconst_0
     170: aaload
     171: ifnonnull     206
     174: aload         11
     176: iconst_0
     177: aaload
     178: ifnonnull     206
     181: aload_0
     182: aload         12
     184: new           #252                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask
     187: dup
     188: aload_0
     189: aload         12
     191: aload         10
     193: iconst_1
     194: iaload
     195: invokespecial #253                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     198: lload         4
     200: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     203: goto          237
     206: aload         10
     208: iconst_1
     209: iaload
     210: aload         10
     212: iconst_0
     213: iaload
     214: isub
     215: istore        13
     217: aload_0
     218: aload         12
     220: new           #262                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     223: dup
     224: aload_0
     225: aload         12
     227: iload         13
     229: invokespecial #263                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     232: lload         4
     234: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     237: aload         7
     239: iconst_0
     240: aaload
     241: areturn

  public V computeIfPresent(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      14: aload_1
      15: invokevirtual #229                // Method com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      18: astore_3
      19: aload_0
      20: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      23: aload_3
      24: invokevirtual #191                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      30: astore        4
      32: aload         4
      34: ifnull        68
      37: aload         4
      39: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      44: ifnull        68
      47: aload_0
      48: aload         4
      50: aload_0
      51: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      54: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      59: dup2
      60: lstore        5
      62: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      65: ifeq          74
      68: aload_0
      69: invokevirtual #149                // Method scheduleDrainBuffers:()V
      72: aconst_null
      73: areturn
      74: iconst_0
      75: istore        7
      77: aload_0
      78: aload_2
      79: iconst_0
      80: iconst_1
      81: invokevirtual #288                // Method statsAware:(Ljava/util/function/BiFunction;ZZ)Ljava/util/function/BiFunction;
      84: astore        8
      86: aload_0
      87: aload_1
      88: aload_3
      89: aload         8
      91: lload         5
      93: iload         7
      95: invokevirtual #284                // Method remap:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;JZ)Ljava/lang/Object;
      98: areturn

  public V compute(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>, boolean, boolean);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      14: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      19: lstore        5
      21: iconst_1
      22: istore        7
      24: aload_0
      25: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      28: aload_1
      29: aload_0
      30: invokevirtual #189                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      33: invokevirtual #266                // Method com/github/benmanes/caffeine/cache/NodeFactory.newReferenceKey:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
      36: astore        8
      38: aload_0
      39: aload_2
      40: iload_3
      41: iload         4
      43: invokevirtual #288                // Method statsAware:(Ljava/util/function/BiFunction;ZZ)Ljava/util/function/BiFunction;
      46: astore        9
      48: aload_0
      49: aload_1
      50: aload         8
      52: aload         9
      54: lload         5
      56: iload         7
      58: invokevirtual #284                // Method remap:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;JZ)Ljava/lang/Object;
      61: areturn

  public V merge(K, V, java.util.function.BiFunction<? super V, ? super V, ? extends V>);
    Code:
       0: aload_1
       1: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_3
      11: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: iconst_1
      16: istore        4
      18: aload_0
      19: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      22: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      27: lstore        5
      29: aload_0
      30: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      33: aload_1
      34: aload_0
      35: invokevirtual #189                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      38: invokevirtual #266                // Method com/github/benmanes/caffeine/cache/NodeFactory.newReferenceKey:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
      41: astore        7
      43: aload_0
      44: aload_2
      45: aload_3
      46: invokedynamic #289,  0            // InvokeDynamic #17:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;
      51: astore        8
      53: aload_0
      54: aload_1
      55: aload         7
      57: aload         8
      59: lload         5
      61: iload         4
      63: invokevirtual #284                // Method remap:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;JZ)Ljava/lang/Object;
      66: areturn

  V remap(K, java.lang.Object, java.util.function.BiFunction<? super K, ? super V, ? extends V>, long, boolean);
    Code:
       0: iconst_1
       1: anewarray     #62                 // class java/lang/Object
       4: astore        7
       6: iconst_1
       7: anewarray     #62                 // class java/lang/Object
      10: astore        8
      12: iconst_1
      13: anewarray     #62                 // class java/lang/Object
      16: astore        9
      18: iconst_1
      19: anewarray     #3                  // class com/github/benmanes/caffeine/cache/Node
      22: astore        10
      24: iconst_2
      25: newarray       int
      27: astore        11
      29: iconst_1
      30: anewarray     #265                // class com/github/benmanes/caffeine/cache/RemovalCause
      33: astore        12
      35: aload_0
      36: getfield      #19                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      39: aload_2
      40: aload_0
      41: iload         6
      43: aload         9
      45: aload_3
      46: aload_1
      47: aload         11
      49: aload_2
      50: lload         4
      52: aload         7
      54: aload         8
      56: aload         12
      58: aload         10
      60: invokedynamic #290,  0            // InvokeDynamic #18:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Z[Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/lang/Object;[ILjava/lang/Object;J[Ljava/lang/Object;[Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;[Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/BiFunction;
      65: invokevirtual #268                // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      68: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
      71: astore        13
      73: aload         12
      75: iconst_0
      76: aaload
      77: ifnull        126
      80: aload         12
      82: iconst_0
      83: aaload
      84: invokevirtual #269                // Method com/github/benmanes/caffeine/cache/RemovalCause.wasEvicted:()Z
      87: ifeq          103
      90: aload_0
      91: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      94: aload         11
      96: iconst_0
      97: iaload
      98: invokeinterface #141,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordEviction:(I)V
     103: aload_0
     104: invokevirtual #60                 // Method hasRemovalListener:()Z
     107: ifeq          126
     110: aload_0
     111: aload         7
     113: iconst_0
     114: aaload
     115: aload         8
     117: iconst_0
     118: aaload
     119: aload         12
     121: iconst_0
     122: aaload
     123: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     126: aload         10
     128: iconst_0
     129: aaload
     130: ifnull        158
     133: aload_0
     134: aload         10
     136: iconst_0
     137: aaload
     138: new           #275                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask
     141: dup
     142: aload_0
     143: aload         10
     145: iconst_0
     146: aaload
     147: invokespecial #276                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;)V
     150: lload         4
     152: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     155: goto          274
     158: aload         13
     160: ifnonnull     166
     163: goto          274
     166: aload         8
     168: iconst_0
     169: aaload
     170: ifnonnull     205
     173: aload         12
     175: iconst_0
     176: aaload
     177: ifnonnull     205
     180: aload_0
     181: aload         13
     183: new           #252                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask
     186: dup
     187: aload_0
     188: aload         13
     190: aload         11
     192: iconst_1
     193: iaload
     194: invokespecial #253                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     197: lload         4
     199: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     202: goto          274
     205: aload         11
     207: iconst_1
     208: iaload
     209: aload         11
     211: iconst_0
     212: iaload
     213: isub
     214: istore        14
     216: aload_0
     217: invokevirtual #73                 // Method expiresAfterWrite:()Z
     220: ifne          228
     223: iload         14
     225: ifeq          251
     228: aload_0
     229: aload         13
     231: new           #262                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     234: dup
     235: aload_0
     236: aload         13
     238: iload         14
     240: invokespecial #263                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     243: lload         4
     245: invokevirtual #254                // Method afterWrite:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Runnable;J)V
     248: goto          274
     251: aload_0
     252: aload         13
     254: lload         4
     256: iconst_0
     257: invokevirtual #237                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     260: aload         12
     262: iconst_0
     263: aaload
     264: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     267: if_acmpne     274
     270: aload_0
     271: invokevirtual #149                // Method scheduleDrainBuffers:()V
     274: aload         9
     276: iconst_0
     277: aaload
     278: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #291                // Field keySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     25
       9: aload_0
      10: new           #292                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$KeySetView
      13: dup
      14: aload_0
      15: invokespecial #293                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$KeySetView."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      18: dup_x1
      19: putfield      #291                // Field keySet:Ljava/util/Set;
      22: goto          26
      25: aload_1
      26: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #294                // Field values:Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnonnull     25
       9: aload_0
      10: new           #295                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$ValuesView
      13: dup
      14: aload_0
      15: invokespecial #296                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$ValuesView."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      18: dup_x1
      19: putfield      #294                // Field values:Ljava/util/Collection;
      22: goto          26
      25: aload_1
      26: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #297                // Field entrySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     25
       9: aload_0
      10: new           #298                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$EntrySetView
      13: dup
      14: aload_0
      15: invokespecial #299                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$EntrySetView."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      18: dup_x1
      19: putfield      #297                // Field entrySet:Ljava/util/Set;
      22: goto          26
      25: aload_1
      26: areturn

  java.util.Map<K, V> evictionOrder(int, java.util.function.Function<V, V>, boolean);
    Code:
       0: aload_0
       1: invokedynamic #300,  0            // InvokeDynamic #19:applyAsInt:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)Ljava/util/function/ToIntFunction;
       6: invokestatic  #301                // InterfaceMethod java/util/Comparator.comparingInt:(Ljava/util/function/ToIntFunction;)Ljava/util/Comparator;
       9: astore        4
      11: iload_3
      12: ifeq          20
      15: aload         4
      17: goto          27
      20: aload         4
      22: invokeinterface #302,  1          // InterfaceMethod java/util/Comparator.reversed:()Ljava/util/Comparator;
      27: astore        4
      29: iload_3
      30: ifeq          64
      33: aload_0
      34: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      37: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      40: astore        5
      42: aload_0
      43: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      46: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      49: aload_0
      50: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      53: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      56: invokestatic  #304                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.concat:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      59: astore        6
      61: goto          92
      64: aload_0
      65: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      68: invokevirtual #305                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      71: astore        5
      73: aload_0
      74: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      77: invokevirtual #305                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      80: aload_0
      81: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      84: invokevirtual #305                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      87: invokestatic  #304                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.concat:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      90: astore        6
      92: aload         5
      94: aload         6
      96: aload         4
      98: invokestatic  #306                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.comparing:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Ljava/util/Comparator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
     101: astore        7
     103: aload_0
     104: aload         7
     106: aload_2
     107: iload_1
     108: invokevirtual #307                // Method snapshot:(Ljava/util/Iterator;Ljava/util/function/Function;I)Ljava/util/Map;
     111: areturn

  java.util.Map<K, V> expireAfterAcessOrder(int, java.util.function.Function<V, V>, boolean);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method evicts:()Z
       4: ifne          39
       7: iload_3
       8: ifeq          21
      11: aload_0
      12: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      15: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      18: goto          28
      21: aload_0
      22: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      25: invokevirtual #305                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      28: astore        4
      30: aload_0
      31: aload         4
      33: aload_2
      34: iload_1
      35: invokevirtual #307                // Method snapshot:(Ljava/util/Iterator;Ljava/util/function/Function;I)Ljava/util/Map;
      38: areturn
      39: invokedynamic #308,  0            // InvokeDynamic #20:applyAsLong:()Ljava/util/function/ToLongFunction;
      44: invokestatic  #309                // InterfaceMethod java/util/Comparator.comparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;
      47: astore        4
      49: iload_3
      50: ifeq          83
      53: aload_0
      54: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      57: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      60: astore        5
      62: aload_0
      63: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      66: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      69: astore        6
      71: aload_0
      72: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      75: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      78: astore        7
      80: goto          119
      83: aload         4
      85: invokeinterface #302,  1          // InterfaceMethod java/util/Comparator.reversed:()Ljava/util/Comparator;
      90: astore        4
      92: aload_0
      93: invokevirtual #95                 // Method accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      96: invokevirtual #305                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      99: astore        5
     101: aload_0
     102: invokevirtual #103                // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     105: invokevirtual #305                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
     108: astore        6
     110: aload_0
     111: invokevirtual #110                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     114: invokevirtual #305                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
     117: astore        7
     119: aload         5
     121: aload         6
     123: aload         4
     125: invokestatic  #306                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.comparing:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Ljava/util/Comparator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
     128: aload         7
     130: aload         4
     132: invokestatic  #306                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.comparing:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Ljava/util/Comparator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
     135: astore        8
     137: aload_0
     138: aload         8
     140: aload_2
     141: iload_1
     142: invokevirtual #307                // Method snapshot:(Ljava/util/Iterator;Ljava/util/function/Function;I)Ljava/util/Map;
     145: areturn

  java.util.Map<K, V> expireAfterWriteOrder(int, java.util.function.Function<V, V>, boolean);
    Code:
       0: iload_3
       1: ifeq          14
       4: aload_0
       5: invokevirtual #129                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
       8: invokevirtual #310                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      11: goto          21
      14: aload_0
      15: invokevirtual #129                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
      18: invokevirtual #311                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      21: astore        4
      23: aload_0
      24: aload         4
      26: aload_2
      27: iload_1
      28: invokevirtual #307                // Method snapshot:(Ljava/util/Iterator;Ljava/util/function/Function;I)Ljava/util/Map;
      31: areturn

  java.util.Map<K, V> snapshot(java.util.Iterator<com.github.benmanes.caffeine.cache.Node<K, V>>, java.util.function.Function<V, V>, int);
    Code:
       0: iload_3
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #76                 // Method com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      12: aload_0
      13: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
      16: invokeinterface #181,  1          // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      21: aload_0
      22: invokevirtual #182                // Method maintenance:()V
      25: aload_0
      26: invokevirtual #89                 // Method isWeighted:()Z
      29: ifeq          37
      32: bipush        16
      34: goto          60
      37: iload_3
      38: aload_0
      39: invokevirtual #38                 // Method evicts:()Z
      42: ifeq          53
      45: aload_0
      46: invokevirtual #312                // Method adjustedWeightedSize:()J
      49: l2i
      50: goto          57
      53: aload_0
      54: invokevirtual #313                // Method size:()I
      57: invokestatic  #314                // Method java/lang/Math.min:(II)I
      60: istore        4
      62: new           #238                // class java/util/LinkedHashMap
      65: dup
      66: iload         4
      68: invokespecial #315                // Method java/util/LinkedHashMap."<init>":(I)V
      71: astore        5
      73: aload         5
      75: invokeinterface #242,  1          // InterfaceMethod java/util/Map.size:()I
      80: iload_3
      81: if_icmpge     163
      84: aload_1
      85: invokeinterface #232,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          163
      93: aload_1
      94: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Node
     102: astore        6
     104: aload         6
     106: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
     111: astore        7
     113: aload         6
     115: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     120: astore        8
     122: aload         7
     124: ifnull        160
     127: aload         8
     129: ifnull        160
     132: aload         6
     134: invokeinterface #256,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.isAlive:()Z
     139: ifeq          160
     142: aload         5
     144: aload         7
     146: aload_2
     147: aload         8
     149: invokeinterface #316,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     154: invokeinterface #241,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     159: pop
     160: goto          73
     163: aload         5
     165: invokestatic  #243                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     168: astore        6
     170: aload_0
     171: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
     174: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     179: aload         6
     181: areturn
     182: astore        9
     184: aload_0
     185: getfield      #25                 // Field evictionLock:Ljava/util/concurrent/locks/Lock;
     188: invokeinterface #177,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     193: aload         9
     195: athrow
    Exception table:
       from    to  target type
          21   170   182   any
         182   184   182   any

  static <K, V> com.github.benmanes.caffeine.cache.SerializationProxy<K, V> makeSerializationProxy(com.github.benmanes.caffeine.cache.BoundedLocalCache<?, ?>, boolean);
    Code:
       0: new           #317                // class com/github/benmanes/caffeine/cache/SerializationProxy
       3: dup
       4: invokespecial #318                // Method com/github/benmanes/caffeine/cache/SerializationProxy."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #39                 // Method collectKeys:()Z
      13: putfield      #319                // Field com/github/benmanes/caffeine/cache/SerializationProxy.weakKeys:Z
      16: aload_2
      17: aload_0
      18: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      21: invokevirtual #320                // Method com/github/benmanes/caffeine/cache/NodeFactory.weakValues:()Z
      24: putfield      #321                // Field com/github/benmanes/caffeine/cache/SerializationProxy.weakValues:Z
      27: aload_2
      28: aload_0
      29: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      32: invokevirtual #322                // Method com/github/benmanes/caffeine/cache/NodeFactory.softValues:()Z
      35: putfield      #323                // Field com/github/benmanes/caffeine/cache/SerializationProxy.softValues:Z
      38: aload_2
      39: aload_0
      40: invokevirtual #324                // Method isRecordingStats:()Z
      43: putfield      #325                // Field com/github/benmanes/caffeine/cache/SerializationProxy.isRecordingStats:Z
      46: aload_2
      47: aload_0
      48: invokevirtual #326                // Method removalListener:()Lcom/github/benmanes/caffeine/cache/RemovalListener;
      51: putfield      #327                // Field com/github/benmanes/caffeine/cache/SerializationProxy.removalListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      54: aload_2
      55: aload_0
      56: invokevirtual #120                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      59: putfield      #328                // Field com/github/benmanes/caffeine/cache/SerializationProxy.ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      62: aload_2
      63: aload_0
      64: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      67: putfield      #329                // Field com/github/benmanes/caffeine/cache/SerializationProxy.writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      70: aload_0
      71: invokevirtual #41                 // Method expiresAfterAccess:()Z
      74: ifeq          85
      77: aload_2
      78: aload_0
      79: invokevirtual #124                // Method expiresAfterAccessNanos:()J
      82: putfield      #330                // Field com/github/benmanes/caffeine/cache/SerializationProxy.expiresAfterAccessNanos:J
      85: aload_0
      86: invokevirtual #73                 // Method expiresAfterWrite:()Z
      89: ifeq          100
      92: aload_2
      93: aload_0
      94: invokevirtual #128                // Method expiresAfterWriteNanos:()J
      97: putfield      #331                // Field com/github/benmanes/caffeine/cache/SerializationProxy.expiresAfterWriteNanos:J
     100: aload_0
     101: invokevirtual #38                 // Method evicts:()Z
     104: ifeq          138
     107: iload_1
     108: ifeq          130
     111: aload_2
     112: aload_0
     113: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
     116: putfield      #332                // Field com/github/benmanes/caffeine/cache/SerializationProxy.weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
     119: aload_2
     120: aload_0
     121: invokevirtual #109                // Method maximum:()J
     124: putfield      #333                // Field com/github/benmanes/caffeine/cache/SerializationProxy.maximumWeight:J
     127: goto          138
     130: aload_2
     131: aload_0
     132: invokevirtual #109                // Method maximum:()J
     135: putfield      #334                // Field com/github/benmanes/caffeine/cache/SerializationProxy.maximumSize:J
     138: aload_2
     139: areturn

  private int lambda$evictionOrder$19(com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
       4: aload_1
       5: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      10: invokevirtual #117                // Method com/github/benmanes/caffeine/cache/FrequencySketch.frequency:(Ljava/lang/Object;)I
      13: ireturn

  private com.github.benmanes.caffeine.cache.Node lambda$remap$18(boolean, java.lang.Object[], java.util.function.BiFunction, java.lang.Object, int[], java.lang.Object, long, java.lang.Object[], java.lang.Object[], com.github.benmanes.caffeine.cache.RemovalCause[], com.github.benmanes.caffeine.cache.Node[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         14
       2: ifnonnull     72
       5: iload_1
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_2
      12: iconst_0
      13: aload_3
      14: aload         4
      16: aconst_null
      17: invokeinterface #335,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: aastore
      23: aload_2
      24: iconst_0
      25: aaload
      26: ifnonnull     31
      29: aconst_null
      30: areturn
      31: aload         5
      33: iconst_1
      34: aload_0
      35: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      38: aload         4
      40: aload_2
      41: iconst_0
      42: aaload
      43: invokeinterface #244,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      48: iastore
      49: aload_0
      50: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      53: aload         6
      55: aload_2
      56: iconst_0
      57: aaload
      58: aload_0
      59: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      62: aload         5
      64: iconst_1
      65: iaload
      66: lload         7
      68: invokevirtual #336                // Method com/github/benmanes/caffeine/cache/NodeFactory.newNode:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)Lcom/github/benmanes/caffeine/cache/Node;
      71: areturn
      72: aload         14
      74: dup
      75: astore        15
      77: monitorenter
      78: aload         9
      80: iconst_0
      81: aload         14
      83: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      88: aastore
      89: aload         10
      91: iconst_0
      92: aload         14
      94: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      99: aastore
     100: aload         9
     102: ifnull        112
     105: aload         10
     107: iconst_0
     108: aaload
     109: ifnonnull     122
     112: aload         11
     114: iconst_0
     115: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     118: aastore
     119: goto          140
     122: aload_0
     123: aload         14
     125: lload         7
     127: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     130: ifeq          140
     133: aload         11
     135: iconst_0
     136: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     139: aastore
     140: aload         11
     142: iconst_0
     143: aaload
     144: ifnull        190
     147: aload_0
     148: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     151: aload         9
     153: iconst_0
     154: aaload
     155: aload         10
     157: iconst_0
     158: aaload
     159: aload         11
     161: iconst_0
     162: aaload
     163: invokeinterface #257,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     168: iload_1
     169: ifne          190
     172: aload         12
     174: iconst_0
     175: aload         14
     177: aastore
     178: aload         14
     180: invokeinterface #274,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.retire:()V
     185: aconst_null
     186: aload         15
     188: monitorexit
     189: areturn
     190: aload_2
     191: iconst_0
     192: aload_3
     193: aload         9
     195: iconst_0
     196: aaload
     197: aload         11
     199: iconst_0
     200: aaload
     201: ifnonnull     211
     204: aload         10
     206: iconst_0
     207: aaload
     208: goto          212
     211: aconst_null
     212: invokeinterface #335,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     217: aastore
     218: aload_2
     219: iconst_0
     220: aaload
     221: ifnonnull     256
     224: aload         11
     226: iconst_0
     227: aaload
     228: ifnonnull     238
     231: aload         11
     233: iconst_0
     234: getstatic     #227                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     237: aastore
     238: aload         12
     240: iconst_0
     241: aload         14
     243: aastore
     244: aload         14
     246: invokeinterface #274,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.retire:()V
     251: aconst_null
     252: aload         15
     254: monitorexit
     255: areturn
     256: aload         5
     258: iconst_0
     259: aload         14
     261: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
     266: iastore
     267: aload         5
     269: iconst_1
     270: aload_0
     271: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
     274: aload         4
     276: aload_2
     277: iconst_0
     278: aaload
     279: invokeinterface #244,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
     284: iastore
     285: aload         14
     287: aload_2
     288: iconst_0
     289: aaload
     290: aload_0
     291: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     294: invokeinterface #259,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     299: aload         14
     301: aload         5
     303: iconst_1
     304: iaload
     305: invokeinterface #260,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     310: aload         14
     312: lload         7
     314: invokeinterface #163,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
     319: aload         14
     321: lload         7
     323: invokeinterface #144,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setAccessTime:(J)V
     328: aload         11
     330: iconst_0
     331: aaload
     332: ifnonnull     352
     335: aload_2
     336: iconst_0
     337: aaload
     338: aload         10
     340: iconst_0
     341: aaload
     342: if_acmpeq     352
     345: aload         11
     347: iconst_0
     348: getstatic     #261                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     351: aastore
     352: aload         14
     354: aload         15
     356: monitorexit
     357: areturn
     358: astore        16
     360: aload         15
     362: monitorexit
     363: aload         16
     365: athrow
    Exception table:
       from    to  target type
          78   189   358   any
         190   255   358   any
         256   357   358   any
         358   363   358   any

  private java.lang.Object lambda$merge$17(java.lang.Object, java.util.function.BiFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload         4
       2: ifnonnull     9
       5: aload_1
       6: goto          22
       9: aload_0
      10: aload_2
      11: invokevirtual #337                // Method statsAware:(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;
      14: aload         4
      16: aload_1
      17: invokeinterface #335,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn

  private com.github.benmanes.caffeine.cache.Node lambda$doComputeIfAbsent$16(java.lang.Object[], java.util.function.Function, java.lang.Object, int[], long, java.lang.Object[], java.lang.Object[], com.github.benmanes.caffeine.cache.RemovalCause[], com.github.benmanes.caffeine.cache.Node[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         12
       2: ifnonnull     66
       5: aload_1
       6: iconst_0
       7: aload_2
       8: aload_3
       9: invokeinterface #316,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aastore
      15: aload_1
      16: iconst_0
      17: aaload
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: aload         4
      25: iconst_1
      26: aload_0
      27: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      30: aload_3
      31: aload_1
      32: iconst_0
      33: aaload
      34: invokeinterface #244,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      39: iastore
      40: aload_0
      41: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      44: aload_3
      45: aload_0
      46: invokevirtual #189                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      49: aload_1
      50: iconst_0
      51: aaload
      52: aload_0
      53: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      56: aload         4
      58: iconst_1
      59: iaload
      60: lload         5
      62: invokevirtual #248                // Method com/github/benmanes/caffeine/cache/NodeFactory.newNode:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)Lcom/github/benmanes/caffeine/cache/Node;
      65: areturn
      66: aload         12
      68: dup
      69: astore        13
      71: monitorenter
      72: aload         7
      74: iconst_0
      75: aload         12
      77: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      82: aastore
      83: aload         4
      85: iconst_0
      86: aload         12
      88: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
      93: iastore
      94: aload         8
      96: iconst_0
      97: aload         12
      99: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     104: aastore
     105: aload         7
     107: ifnull        117
     110: aload         8
     112: iconst_0
     113: aaload
     114: ifnonnull     127
     117: aload         9
     119: iconst_0
     120: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     123: aastore
     124: goto          172
     127: aload_0
     128: aload         12
     130: lload         5
     132: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     135: ifeq          166
     138: aload         9
     140: iconst_0
     141: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     144: aastore
     145: aload         12
     147: lload         5
     149: invokeinterface #144,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setAccessTime:(J)V
     154: aload         12
     156: lload         5
     158: invokeinterface #163,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
     163: goto          172
     166: aload         12
     168: aload         13
     170: monitorexit
     171: areturn
     172: aload_0
     173: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     176: aload         7
     178: iconst_0
     179: aaload
     180: aload         8
     182: iconst_0
     183: aaload
     184: aload         9
     186: iconst_0
     187: aaload
     188: invokeinterface #257,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     193: aload_1
     194: iconst_0
     195: aload_2
     196: aload_3
     197: invokeinterface #316,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     202: aastore
     203: aload_1
     204: iconst_0
     205: aaload
     206: ifnonnull     227
     209: aload         10
     211: iconst_0
     212: aload         12
     214: aastore
     215: aload         12
     217: invokeinterface #274,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.retire:()V
     222: aconst_null
     223: aload         13
     225: monitorexit
     226: areturn
     227: aload         4
     229: iconst_1
     230: aload_0
     231: getfield      #12                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
     234: aload_3
     235: aload_1
     236: iconst_0
     237: aaload
     238: invokeinterface #244,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
     243: iastore
     244: aload         12
     246: aload_1
     247: iconst_0
     248: aaload
     249: aload_0
     250: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     253: invokeinterface #259,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     258: aload         12
     260: aload         4
     262: iconst_1
     263: iaload
     264: invokeinterface #260,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     269: aload         12
     271: aload         13
     273: monitorexit
     274: areturn
     275: astore        14
     277: aload         13
     279: monitorexit
     280: aload         14
     282: athrow
    Exception table:
       from    to  target type
          72   171   275   any
         172   226   275   any
         227   274   275   any
         275   280   275   any

  private java.lang.Object lambda$replaceAll$15(java.util.function.BiFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #335,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: invokestatic  #230                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore        4
      13: aload_3
      14: aload         4
      16: if_acmpeq     31
      19: aload_0
      20: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      23: aload_2
      24: aload         4
      26: invokeinterface #258,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      31: aload         4
      33: areturn

  private com.github.benmanes.caffeine.cache.Node lambda$replace$14(java.lang.Object[], java.lang.Object[], int[], long, java.lang.Object, java.lang.Object, java.lang.Object, int, boolean[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         12
       2: dup
       3: astore        13
       5: monitorenter
       6: aload_1
       7: iconst_0
       8: aload         12
      10: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      15: aastore
      16: aload_2
      17: iconst_0
      18: aload         12
      20: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      25: aastore
      26: aload_3
      27: iconst_0
      28: aload         12
      30: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
      35: iastore
      36: aload_1
      37: iconst_0
      38: aaload
      39: ifnull        71
      42: aload_2
      43: iconst_0
      44: aaload
      45: ifnull        71
      48: aload_0
      49: aload         12
      51: lload         4
      53: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      56: ifne          71
      59: aload         12
      61: aload         6
      63: invokeinterface #234,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.containsValue:(Ljava/lang/Object;)Z
      68: ifne          77
      71: aload         12
      73: aload         13
      75: monitorexit
      76: areturn
      77: aload         7
      79: aload_2
      80: iconst_0
      81: aaload
      82: if_acmpeq     98
      85: aload_0
      86: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      89: aload         8
      91: aload         7
      93: invokeinterface #258,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      98: aload         12
     100: aload         7
     102: aload_0
     103: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     106: invokeinterface #259,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     111: aload         12
     113: iload         9
     115: invokeinterface #260,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     120: aload         12
     122: lload         4
     124: invokeinterface #163,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
     129: aload         10
     131: iconst_0
     132: iconst_1
     133: bastore
     134: aload         13
     136: monitorexit
     137: goto          148
     140: astore        14
     142: aload         13
     144: monitorexit
     145: aload         14
     147: athrow
     148: aload         12
     150: areturn
    Exception table:
       from    to  target type
           6    76   140   any
          77   137   140   any
         140   145   140   any

  private com.github.benmanes.caffeine.cache.Node lambda$replace$13(java.lang.Object[], java.lang.Object[], int[], long, java.lang.Object, int, java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         9
       2: dup
       3: astore        10
       5: monitorenter
       6: aload_1
       7: iconst_0
       8: aload         9
      10: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      15: aastore
      16: aload_2
      17: iconst_0
      18: aload         9
      20: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      25: aastore
      26: aload_3
      27: iconst_0
      28: aload         9
      30: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
      35: iastore
      36: aload_1
      37: iconst_0
      38: aaload
      39: ifnull        59
      42: aload_2
      43: iconst_0
      44: aaload
      45: ifnull        59
      48: aload_0
      49: aload         9
      51: lload         4
      53: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      56: ifeq          69
      59: aload_2
      60: iconst_0
      61: aconst_null
      62: aastore
      63: aload         9
      65: aload         10
      67: monitorexit
      68: areturn
      69: aload         6
      71: aload_2
      72: iconst_0
      73: aaload
      74: if_acmpeq     91
      77: aload_0
      78: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      81: aload_1
      82: iconst_0
      83: aaload
      84: aload         6
      86: invokeinterface #258,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      91: aload         9
      93: aload         6
      95: aload_0
      96: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      99: invokeinterface #259,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     104: aload         9
     106: lload         4
     108: invokeinterface #163,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
     113: aload         9
     115: iload         7
     117: invokeinterface #260,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     122: aload         9
     124: aload         10
     126: monitorexit
     127: areturn
     128: astore        11
     130: aload         10
     132: monitorexit
     133: aload         11
     135: athrow
    Exception table:
       from    to  target type
           6    68   128   any
          69   127   128   any
         128   133   128   any

  private com.github.benmanes.caffeine.cache.Node lambda$remove$12(java.lang.Object[], java.lang.Object[], com.github.benmanes.caffeine.cache.RemovalCause[], long, java.lang.Object, com.github.benmanes.caffeine.cache.Node[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         9
       2: dup
       3: astore        10
       5: monitorenter
       6: aload_1
       7: iconst_0
       8: aload         9
      10: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      15: aastore
      16: aload_2
      17: iconst_0
      18: aload         9
      20: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      25: aastore
      26: aload_1
      27: iconst_0
      28: aaload
      29: ifnonnull     41
      32: aload_3
      33: iconst_0
      34: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      37: aastore
      38: goto          88
      41: aload_0
      42: aload         9
      44: lload         4
      46: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      49: ifeq          61
      52: aload_3
      53: iconst_0
      54: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      57: aastore
      58: goto          88
      61: aload         9
      63: aload         6
      65: invokeinterface #234,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.containsValue:(Ljava/lang/Object;)Z
      70: ifeq          82
      73: aload_3
      74: iconst_0
      75: getstatic     #227                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      78: aastore
      79: goto          88
      82: aload         9
      84: aload         10
      86: monitorexit
      87: areturn
      88: aload_0
      89: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      92: aload_1
      93: iconst_0
      94: aaload
      95: aload_2
      96: iconst_0
      97: aaload
      98: aload_3
      99: iconst_0
     100: aaload
     101: invokeinterface #257,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     106: aload         7
     108: iconst_0
     109: aload         9
     111: aastore
     112: aload         9
     114: invokeinterface #274,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.retire:()V
     119: aconst_null
     120: aload         10
     122: monitorexit
     123: areturn
     124: astore        11
     126: aload         10
     128: monitorexit
     129: aload         11
     131: athrow
    Exception table:
       from    to  target type
           6    87   124   any
          88   123   124   any
         124   129   124   any

  private com.github.benmanes.caffeine.cache.Node lambda$removeWithWriter$11(java.lang.Object[], com.github.benmanes.caffeine.cache.RemovalCause[], long, java.lang.Object, com.github.benmanes.caffeine.cache.Node[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         8
       2: dup
       3: astore        9
       5: monitorenter
       6: aload_1
       7: iconst_0
       8: aload         8
      10: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      15: aastore
      16: aload_1
      17: iconst_0
      18: aaload
      19: ifnonnull     31
      22: aload_2
      23: iconst_0
      24: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      27: aastore
      28: goto          56
      31: aload_0
      32: aload         8
      34: lload_3
      35: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      38: ifeq          50
      41: aload_2
      42: iconst_0
      43: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      46: aastore
      47: goto          56
      50: aload_2
      51: iconst_0
      52: getstatic     #227                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      55: aastore
      56: aload_0
      57: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      60: aload         5
      62: aload_1
      63: iconst_0
      64: aaload
      65: aload_2
      66: iconst_0
      67: aaload
      68: invokeinterface #257,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
      73: aload         8
      75: invokeinterface #274,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.retire:()V
      80: aload         9
      82: monitorexit
      83: goto          94
      86: astore        10
      88: aload         9
      90: monitorexit
      91: aload         10
      93: athrow
      94: aload         6
      96: iconst_0
      97: aload         8
      99: aastore
     100: aconst_null
     101: areturn
    Exception table:
       from    to  target type
           6    83    86   any
          86    91    86   any

  private com.github.benmanes.caffeine.cache.Node lambda$putSlow$10(boolean, java.lang.Object, java.lang.Object, int, long, java.lang.Object[], java.lang.Object[], int[], com.github.benmanes.caffeine.cache.RemovalCause[], boolean, java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         13
       2: ifnonnull     39
       5: iload_1
       6: ifeq          20
       9: aload_0
      10: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      13: aload_2
      14: aload_3
      15: invokeinterface #258,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      20: aload_0
      21: getfield      #37                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      24: aload         12
      26: aload_3
      27: aload_0
      28: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      31: iload         4
      33: lload         5
      35: invokevirtual #336                // Method com/github/benmanes/caffeine/cache/NodeFactory.newNode:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)Lcom/github/benmanes/caffeine/cache/Node;
      38: areturn
      39: aload         13
      41: dup
      42: astore        14
      44: monitorenter
      45: aload         7
      47: iconst_0
      48: aload         13
      50: invokeinterface #114,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      55: aastore
      56: aload         8
      58: iconst_0
      59: aload         13
      61: invokeinterface #52,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      66: aastore
      67: aload         9
      69: iconst_0
      70: aload         13
      72: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
      77: iastore
      78: aload         7
      80: ifnull        90
      83: aload         8
      85: iconst_0
      86: aaload
      87: ifnonnull     100
      90: aload         10
      92: iconst_0
      93: getstatic     #115                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      96: aastore
      97: goto          118
     100: aload_0
     101: aload         13
     103: lload         5
     105: invokevirtual #226                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     108: ifeq          118
     111: aload         10
     113: iconst_0
     114: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     117: aastore
     118: aload         10
     120: iconst_0
     121: aaload
     122: ifnull        149
     125: aload_0
     126: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     129: aload         7
     131: iconst_0
     132: aaload
     133: aload         8
     135: iconst_0
     136: aaload
     137: aload         10
     139: iconst_0
     140: aaload
     141: invokeinterface #257,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     146: goto          167
     149: iload         11
     151: ifeq          167
     154: aload         8
     156: iconst_0
     157: aaload
     158: ifnull        167
     161: aload         13
     163: aload         14
     165: monitorexit
     166: areturn
     167: aload_3
     168: aload         8
     170: iconst_0
     171: aaload
     172: if_acmpeq     204
     175: aload         10
     177: iconst_0
     178: aaload
     179: ifnonnull     189
     182: aload         10
     184: iconst_0
     185: getstatic     #261                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     188: aastore
     189: iload_1
     190: ifeq          204
     193: aload_0
     194: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     197: aload_2
     198: aload_3
     199: invokeinterface #258,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
     204: aload         13
     206: aload_3
     207: aload_0
     208: invokevirtual #192                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     211: invokeinterface #259,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     216: aload         13
     218: iload         4
     220: invokeinterface #260,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     225: aload         13
     227: lload         5
     229: invokeinterface #144,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setAccessTime:(J)V
     234: aload         13
     236: lload         5
     238: invokeinterface #163,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
     243: aload         13
     245: aload         14
     247: monitorexit
     248: areturn
     249: astore        15
     251: aload         14
     253: monitorexit
     254: aload         15
     256: athrow
    Exception table:
       from    to  target type
          45   166   249   any
         167   248   249   any
         249   254   249   any

  private com.github.benmanes.caffeine.cache.Node lambda$putFast$9(java.lang.Object, java.lang.Object, com.github.benmanes.caffeine.cache.Node, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
       4: aload_1
       5: aload_2
       6: invokeinterface #258,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      11: aload_3
      12: areturn

  private com.github.benmanes.caffeine.cache.Node lambda$removeNode$8(com.github.benmanes.caffeine.cache.Node, java.lang.Object, java.lang.Object, com.github.benmanes.caffeine.cache.RemovalCause, boolean[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         7
       2: aload_1
       3: if_acmpne     26
       6: aload_0
       7: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokeinterface #257,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
      19: aload         5
      21: iconst_0
      22: iconst_1
      23: bastore
      24: aconst_null
      25: areturn
      26: aload         7
      28: areturn

  private static void lambda$clear$7(com.github.benmanes.caffeine.cache.Node);
    Code:
       0: return

  private void lambda$clear$6(long, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #224                // Method removeNode:(Lcom/github/benmanes/caffeine/cache/Node;J)V
       6: return

  private void lambda$refreshIfNeeded$5(long, com.github.benmanes.caffeine.cache.Node, long, long, java.util.concurrent.CompletableFuture, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #338                // Method statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       4: invokeinterface #121,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
       9: lload_1
      10: lsub
      11: lstore        13
      13: aload         12
      15: ifnull        55
      18: getstatic     #68                 // Field logger:Ljava/util/logging/Logger;
      21: getstatic     #179                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      24: ldc_w         #339                // String Exception thrown during refresh
      27: aload         12
      29: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_3
      33: lload         4
      35: lload         6
      37: invokeinterface #156,  5          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.casWriteTime:(JJ)Z
      42: pop
      43: aload_0
      44: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      47: lload         13
      49: invokeinterface #340,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
      54: return
      55: aload_0
      56: getfield      #5                  // Field isAsync:Z
      59: ifeq          72
      62: aload         11
      64: ifnull        72
      67: aload         8
      69: goto          74
      72: aload         11
      74: astore        15
      76: iconst_1
      77: newarray       boolean
      79: astore        16
      81: aload_0
      82: aload         9
      84: aload         15
      86: aload         10
      88: aload_3
      89: lload         4
      91: aload         16
      93: invokedynamic #341,  0            // InvokeDynamic #21:apply:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Node;J[Z)Ljava/util/function/BiFunction;
      98: iconst_0
      99: iconst_0
     100: invokevirtual #342                // Method compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;ZZ)Ljava/lang/Object;
     103: pop
     104: aload         16
     106: iconst_0
     107: baload
     108: ifeq          129
     111: aload_0
     112: invokevirtual #60                 // Method hasRemovalListener:()Z
     115: ifeq          129
     118: aload_0
     119: aload         9
     121: aload         15
     123: getstatic     #261                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     126: invokevirtual #142                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     129: aload         11
     131: ifnonnull     148
     134: aload_0
     135: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     138: lload         13
     140: invokeinterface #340,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
     145: goto          159
     148: aload_0
     149: invokevirtual #140                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     152: lload         13
     154: invokeinterface #343,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadSuccess:(J)V
     159: return

  private static java.lang.Object lambda$null$4(java.lang.Object, java.lang.Object, com.github.benmanes.caffeine.cache.Node, long, boolean[], java.lang.Object, java.lang.Object);
    Code:
       0: aload         7
       2: ifnonnull     7
       5: aload_0
       6: areturn
       7: aload         7
       9: aload_1
      10: if_acmpne     26
      13: aload_2
      14: invokeinterface #131,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      19: lload_3
      20: lcmp
      21: ifne          26
      24: aload_0
      25: areturn
      26: aload         5
      28: iconst_0
      29: iconst_1
      30: bastore
      31: aload         7
      33: areturn

  private java.util.concurrent.CompletionStage lambda$refreshIfNeeded$3(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cacheLoader:Lcom/github/benmanes/caffeine/cache/CacheLoader;
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #8                  // Field executor:Ljava/util/concurrent/Executor;
      10: invokeinterface #159,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheLoader.asyncReload:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  private com.github.benmanes.caffeine.cache.Node lambda$evictEntry$2(com.github.benmanes.caffeine.cache.Node, com.github.benmanes.caffeine.cache.RemovalCause, long, boolean[], java.lang.Object, java.lang.Object, boolean[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         10
       2: aload_1
       3: if_acmpeq     9
       6: aload         10
       8: areturn
       9: aload_2
      10: getstatic     #127                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      13: if_acmpne     111
      16: iconst_0
      17: istore        11
      19: aload_0
      20: invokevirtual #41                 // Method expiresAfterAccess:()Z
      23: ifeq          57
      26: lload_3
      27: aload_0
      28: invokevirtual #124                // Method expiresAfterAccessNanos:()J
      31: lsub
      32: lstore        12
      34: iload         11
      36: aload         10
      38: invokeinterface #126,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getAccessTime:()J
      43: lload         12
      45: lcmp
      46: ifgt          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ior
      55: istore        11
      57: aload_0
      58: invokevirtual #73                 // Method expiresAfterWrite:()Z
      61: ifeq          95
      64: lload_3
      65: aload_0
      66: invokevirtual #128                // Method expiresAfterWriteNanos:()J
      69: lsub
      70: lstore        12
      72: iload         11
      74: aload         10
      76: invokeinterface #131,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      81: lload         12
      83: lcmp
      84: ifgt          91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: ior
      93: istore        11
      95: iload         11
      97: ifne          108
     100: aload         5
     102: iconst_0
     103: iconst_1
     104: bastore
     105: aload         10
     107: areturn
     108: goto          158
     111: aload_2
     112: getstatic     #112                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     115: if_acmpne     158
     118: aload_1
     119: dup
     120: astore        12
     122: monitorenter
     123: aload_1
     124: invokeinterface #100,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getWeight:()I
     129: istore        11
     131: aload         12
     133: monitorexit
     134: goto          145
     137: astore        14
     139: aload         12
     141: monitorexit
     142: aload         14
     144: athrow
     145: iload         11
     147: ifne          158
     150: aload         5
     152: iconst_0
     153: iconst_1
     154: bastore
     155: aload         10
     157: areturn
     158: aload_0
     159: getfield      #10                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     162: aload         6
     164: aload         7
     166: aload_2
     167: invokeinterface #257,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     172: aload         8
     174: iconst_0
     175: iconst_1
     176: bastore
     177: aconst_null
     178: areturn
    Exception table:
       from    to  target type
         123   134   137   any
         137   142   137   any

  private void lambda$notifyRemoval$1(java.lang.Object, java.lang.Object, com.github.benmanes.caffeine.cache.RemovalCause);
    Code:
       0: aload_0
       1: invokevirtual #326                // Method removalListener:()Lcom/github/benmanes/caffeine/cache/RemovalListener;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #344,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/RemovalListener.onRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
      12: goto          31
      15: astore        4
      17: getstatic     #68                 // Field logger:Ljava/util/logging/Logger;
      20: getstatic     #179                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      23: ldc_w         #345                // String Exception thrown by removal listener
      26: aload         4
      28: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      31: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/Throwable

  private static void lambda$new$0(com.github.benmanes.caffeine.cache.Node);
    Code:
       0: return

  static {};
    Code:
       0: ldc           #77                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache
       2: invokevirtual #346                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #347                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #68                 // Field logger:Ljava/util/logging/Logger;
      11: invokestatic  #348                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      14: invokevirtual #349                // Method java/lang/Runtime.availableProcessors:()I
      17: putstatic     #350                // Field NCPU:I
      20: sipush        128
      23: getstatic     #350                // Field NCPU:I
      26: invokestatic  #351                // Method ceilingPowerOfTwo:(I)I
      29: imul
      30: putstatic     #208                // Field WRITE_BUFFER_MAX:I
      33: getstatic     #352                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      36: lconst_1
      37: invokevirtual #353                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      40: putstatic     #264                // Field EXPIRE_WRITE_TOLERANCE:J
      43: return
}
