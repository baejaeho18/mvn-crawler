Compiled from "LocalAsyncLoadingCache.java"
abstract class com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache<C extends com.github.benmanes.caffeine.cache.LocalCache<K, java.util.concurrent.CompletableFuture<V>>, K, V> implements com.github.benmanes.caffeine.cache.AsyncLoadingCache<K, V> {
  static final java.util.logging.Logger logger;

  final C cache;

  final boolean canBulkLoad;

  final com.github.benmanes.caffeine.cache.AsyncCacheLoader<K, V> loader;

  com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache<C, K, V>.LoadingCacheView localCacheView;

  com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache(C, com.github.benmanes.caffeine.cache.AsyncCacheLoader<? super K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
       9: aload_0
      10: aload_2
      11: invokestatic  #3                  // Method canBulkLoad:(Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)Z
      14: putfield      #4                  // Field canBulkLoad:Z
      17: aload_0
      18: aload_1
      19: putfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      22: return

  protected abstract com.github.benmanes.caffeine.cache.Policy<K, V> policy();

  private static boolean canBulkLoad(com.github.benmanes.caffeine.cache.AsyncCacheLoader<?, ?>);
    Code:
       0: ldc           #6                  // class com/github/benmanes/caffeine/cache/AsyncCacheLoader
       2: astore_1
       3: aload_0
       4: instanceof    #7                  // class com/github/benmanes/caffeine/cache/CacheLoader
       7: ifeq          59
      10: ldc           #7                  // class com/github/benmanes/caffeine/cache/CacheLoader
      12: astore_1
      13: aload_0
      14: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: ldc           #9                  // String loadAll
      19: iconst_1
      20: anewarray     #10                 // class java/lang/Class
      23: dup
      24: iconst_0
      25: ldc           #11                 // class java/lang/Iterable
      27: aastore
      28: invokevirtual #12                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      31: astore_2
      32: ldc           #7                  // class com/github/benmanes/caffeine/cache/CacheLoader
      34: ldc           #9                  // String loadAll
      36: iconst_1
      37: anewarray     #10                 // class java/lang/Class
      40: dup
      41: iconst_0
      42: ldc           #11                 // class java/lang/Iterable
      44: aastore
      45: invokevirtual #12                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      48: astore_3
      49: aload_2
      50: aload_3
      51: invokevirtual #13                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
      54: ifne          59
      57: iconst_1
      58: ireturn
      59: aload_0
      60: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      63: ldc           #14                 // String asyncLoadAll
      65: iconst_2
      66: anewarray     #10                 // class java/lang/Class
      69: dup
      70: iconst_0
      71: ldc           #11                 // class java/lang/Iterable
      73: aastore
      74: dup
      75: iconst_1
      76: ldc           #15                 // class java/util/concurrent/Executor
      78: aastore
      79: invokevirtual #12                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      82: astore_2
      83: aload_1
      84: ldc           #14                 // String asyncLoadAll
      86: iconst_2
      87: anewarray     #10                 // class java/lang/Class
      90: dup
      91: iconst_0
      92: ldc           #11                 // class java/lang/Iterable
      94: aastore
      95: dup
      96: iconst_1
      97: ldc           #15                 // class java/util/concurrent/Executor
      99: aastore
     100: invokevirtual #12                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     103: astore_3
     104: aload_2
     105: aload_3
     106: invokevirtual #13                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
     109: ifne          116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: ireturn
     118: astore_1
     119: getstatic     #18                 // Field logger:Ljava/util/logging/Logger;
     122: getstatic     #19                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     125: ldc           #20                 // String Cannot determine if CacheLoader can bulk load
     127: aload_1
     128: invokevirtual #21                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     131: iconst_0
     132: ireturn
    Exception table:
       from    to  target type
           0    58   118   Class java/lang/NoSuchMethodException
           0    58   118   Class java/lang/SecurityException
          59   117   118   Class java/lang/NoSuchMethodException
          59   117   118   Class java/lang/SecurityException

  public java.util.concurrent.CompletableFuture<V> getIfPresent(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
       4: aload_1
       5: iconst_1
       6: invokeinterface #22,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.getIfPresent:(Ljava/lang/Object;Z)Ljava/lang/Object;
      11: checkcast     #23                 // class java/util/concurrent/CompletableFuture
      14: areturn

  public java.util.concurrent.CompletableFuture<V> get(K, java.util.function.Function<? super K, ? extends V>);
    Code:
       0: aload_2
       1: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_1
       9: invokedynamic #25,  0             // InvokeDynamic #0:apply:(Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/function/BiFunction;
      14: invokevirtual #26                 // Method get:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
      17: areturn

  public java.util.concurrent.CompletableFuture<V> get(K, java.util.function.BiFunction<? super K, java.util.concurrent.Executor, java.util.concurrent.CompletableFuture<V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #27                 // Method get:(Ljava/lang/Object;Ljava/util/function/BiFunction;Z)Ljava/util/concurrent/CompletableFuture;
       7: areturn

  java.util.concurrent.CompletableFuture<V> get(K, java.util.function.BiFunction<? super K, java.util.concurrent.Executor, java.util.concurrent.CompletableFuture<V>>, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
       4: invokeinterface #28,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       9: invokeinterface #29,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      14: lstore        4
      16: iconst_1
      17: anewarray     #23                 // class java/util/concurrent/CompletableFuture
      20: astore        6
      22: aload_0
      23: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      26: aload_1
      27: aload_0
      28: aload         6
      30: aload_2
      31: aload_1
      32: lload         4
      34: invokedynamic #30,  0             // InvokeDynamic #1:apply:(Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache;[Ljava/util/concurrent/CompletableFuture;Ljava/util/function/BiFunction;Ljava/lang/Object;J)Ljava/util/function/Function;
      39: iload_3
      40: iconst_0
      41: invokeinterface #31,  5           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;ZZ)Ljava/lang/Object;
      46: checkcast     #23                 // class java/util/concurrent/CompletableFuture
      49: astore        7
      51: aload         6
      53: iconst_0
      54: aaload
      55: ifnull        88
      58: new           #32                 // class java/util/concurrent/atomic/AtomicBoolean
      61: dup
      62: invokespecial #33                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      65: astore        8
      67: aload         6
      69: iconst_0
      70: aaload
      71: aload_0
      72: aload         8
      74: lload         4
      76: aload_1
      77: aload         6
      79: invokedynamic #34,  0             // InvokeDynamic #2:accept:(Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache;Ljava/util/concurrent/atomic/AtomicBoolean;JLjava/lang/Object;[Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/BiConsumer;
      84: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      87: pop
      88: aload         7
      90: areturn

  public java.util.concurrent.CompletableFuture<V> get(K);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
       6: dup
       7: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: invokedynamic #36,  0             // InvokeDynamic #3:apply:(Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)Ljava/util/function/BiFunction;
      16: invokevirtual #26                 // Method get:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
      19: astore_2
      20: aload_2
      21: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #23                 // class java/util/concurrent/CompletableFuture
      27: areturn

  public java.util.concurrent.CompletableFuture<java.util.Map<K, V>> getAll(java.lang.Iterable<? extends K>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field canBulkLoad:Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #37                 // Method getAllBulk:(Ljava/lang/Iterable;)Ljava/util/concurrent/CompletableFuture;
      12: areturn
      13: new           #38                 // class java/util/HashMap
      16: dup
      17: invokespecial #39                 // Method java/util/HashMap."<init>":()V
      20: astore_2
      21: aload_1
      22: invokeinterface #40,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          63
      37: aload_3
      38: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: astore        4
      45: aload_2
      46: aload         4
      48: aload_0
      49: aload         4
      51: invokevirtual #43                 // Method get:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      54: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: goto          28
      63: aload_0
      64: aload_2
      65: invokespecial #45                 // Method composeResult:(Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;
      68: areturn

  private java.util.concurrent.CompletableFuture<java.util.Map<K, V>> getAllBulk(java.lang.Iterable<? extends K>);
    Code:
       0: new           #38                 // class java/util/HashMap
       3: dup
       4: invokespecial #39                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: new           #38                 // class java/util/HashMap
      11: dup
      12: invokespecial #39                 // Method java/util/HashMap."<init>":()V
      15: astore_3
      16: aload_1
      17: invokeinterface #40,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          126
      34: aload         4
      36: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: astore        5
      43: aload_0
      44: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      47: aload         5
      49: iconst_0
      50: invokeinterface #22,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.getIfPresent:(Ljava/lang/Object;Z)Ljava/lang/Object;
      55: checkcast     #23                 // class java/util/concurrent/CompletableFuture
      58: astore        6
      60: aload         6
      62: ifnonnull     112
      65: new           #23                 // class java/util/concurrent/CompletableFuture
      68: dup
      69: invokespecial #46                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      72: astore        7
      74: aload_0
      75: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      78: aload         5
      80: aload         7
      82: invokeinterface #47,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #23                 // class java/util/concurrent/CompletableFuture
      90: astore        6
      92: aload         6
      94: ifnonnull     112
      97: aload         7
      99: astore        6
     101: aload_3
     102: aload         5
     104: aload         7
     106: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: aload_2
     113: aload         5
     115: aload         6
     117: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     122: pop
     123: goto          24
     126: aload_0
     127: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
     130: invokeinterface #48,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     135: aload_3
     136: invokeinterface #49,  1           // InterfaceMethod java/util/Map.size:()I
     141: invokeinterface #50,  2           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordMisses:(I)V
     146: aload_0
     147: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
     150: invokeinterface #48,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     155: aload_2
     156: invokeinterface #49,  1           // InterfaceMethod java/util/Map.size:()I
     161: aload_3
     162: invokeinterface #49,  1           // InterfaceMethod java/util/Map.size:()I
     167: isub
     168: invokeinterface #51,  2           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordHits:(I)V
     173: aload_3
     174: invokeinterface #52,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     179: ifeq          188
     182: aload_0
     183: aload_2
     184: invokespecial #45                 // Method composeResult:(Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;
     187: areturn
     188: aload_0
     189: getfield      #2                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
     192: aload_3
     193: invokeinterface #53,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     198: aload_0
     199: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
     202: invokeinterface #54,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.executor:()Ljava/util/concurrent/Executor;
     207: invokeinterface #55,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/AsyncCacheLoader.asyncLoadAll:(Ljava/lang/Iterable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
     212: new           #56                 // class com/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$AsyncBulkCompleter
     215: dup
     216: aload_0
     217: aload_3
     218: invokespecial #57                 // Method com/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$AsyncBulkCompleter."<init>":(Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache;Ljava/util/Map;)V
     221: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
     224: pop
     225: aload_0
     226: aload_2
     227: invokespecial #45                 // Method composeResult:(Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;
     230: areturn

  private java.util.concurrent.CompletableFuture<java.util.Map<K, V>> composeResult(java.util.Map<K, java.util.concurrent.CompletableFuture<V>>);
    Code:
       0: aload_1
       1: invokeinterface #52,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifeq          16
       9: invokestatic  #58                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      12: invokestatic  #59                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      15: areturn
      16: aload_1
      17: invokeinterface #60,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      22: iconst_0
      23: anewarray     #23                 // class java/util/concurrent/CompletableFuture
      26: invokeinterface #61,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      31: checkcast     #62                 // class "[Ljava/util/concurrent/CompletableFuture;"
      34: astore_2
      35: aload_2
      36: invokestatic  #63                 // Method java/util/concurrent/CompletableFuture.allOf:([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
      39: aload_1
      40: invokedynamic #64,  0             // InvokeDynamic #4:apply:(Ljava/util/Map;)Ljava/util/function/Function;
      45: invokevirtual #65                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      48: areturn

  public void put(K, java.util.concurrent.CompletableFuture<V>);
    Code:
       0: aload_2
       1: invokevirtual #66                 // Method java/util/concurrent/CompletableFuture.isCompletedExceptionally:()Z
       4: ifne          21
       7: aload_2
       8: invokevirtual #67                 // Method java/util/concurrent/CompletableFuture.isDone:()Z
      11: ifeq          48
      14: aload_2
      15: invokevirtual #68                 // Method java/util/concurrent/CompletableFuture.join:()Ljava/lang/Object;
      18: ifnonnull     48
      21: aload_0
      22: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      25: invokeinterface #48,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      30: lconst_0
      31: invokeinterface #69,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
      36: aload_0
      37: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      40: aload_1
      41: invokeinterface #70,  2           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: return
      48: new           #32                 // class java/util/concurrent/atomic/AtomicBoolean
      51: dup
      52: invokespecial #33                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      55: astore_3
      56: aload_0
      57: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      60: invokeinterface #28,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      65: invokeinterface #29,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      70: lstore        4
      72: aload_0
      73: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      76: aload_1
      77: aload_2
      78: invokeinterface #71,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload_2
      85: aload_0
      86: aload_3
      87: lload         4
      89: aload_1
      90: aload_2
      91: invokedynamic #72,  0             // InvokeDynamic #5:accept:(Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache;Ljava/util/concurrent/atomic/AtomicBoolean;JLjava/lang/Object;Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/BiConsumer;
      96: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      99: pop
     100: return

  public com.github.benmanes.caffeine.cache.LoadingCache<K, V> synchronous();
    Code:
       0: aload_0
       1: getfield      #73                 // Field localCacheView:Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView;
       4: ifnonnull     23
       7: aload_0
       8: new           #74                 // class com/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView
      11: dup
      12: aload_0
      13: invokespecial #75                 // Method com/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView."<init>":(Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache;)V
      16: dup_x1
      17: putfield      #73                 // Field localCacheView:Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView;
      20: goto          27
      23: aload_0
      24: getfield      #73                 // Field localCacheView:Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView;
      27: areturn

  private void lambda$put$6(java.util.concurrent.atomic.AtomicBoolean, long, java.lang.Object, java.util.concurrent.CompletableFuture, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: iconst_0
       2: iconst_1
       3: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      14: invokeinterface #28,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      19: invokeinterface #29,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      24: lload_2
      25: lsub
      26: lstore        8
      28: aload         6
      30: ifnonnull     84
      33: aload         7
      35: ifnull        51
      38: getstatic     #18                 // Field logger:Ljava/util/logging/Logger;
      41: getstatic     #19                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      44: ldc           #77                 // String Exception thrown during asynchronous load
      46: aload         7
      48: invokevirtual #21                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      51: aload_0
      52: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      55: aload         4
      57: aload         5
      59: invokeinterface #78,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: pop
      65: aload_0
      66: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      69: invokeinterface #48,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      74: lload         8
      76: invokeinterface #69,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
      81: goto          116
      84: aload_0
      85: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      88: aload         4
      90: aload         5
      92: aload         5
      94: invokeinterface #79,  4           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      99: pop
     100: aload_0
     101: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
     104: invokeinterface #48,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     109: lload         8
     111: invokeinterface #80,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadSuccess:(J)V
     116: return

  private static java.util.Map lambda$composeResult$5(java.util.Map, java.lang.Void);
    Code:
       0: new           #38                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokeinterface #49,  1           // InterfaceMethod java/util/Map.size:()I
      10: invokespecial #81                 // Method java/util/HashMap."<init>":(I)V
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokedynamic #82,  0             // InvokeDynamic #6:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      21: invokeinterface #83,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      26: aload_2
      27: invokestatic  #84                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      30: areturn

  private static void lambda$null$4(java.util.Map, java.lang.Object, java.util.concurrent.CompletableFuture);
    Code:
       0: aload_2
       1: aconst_null
       2: invokevirtual #85                 // Method java/util/concurrent/CompletableFuture.getNow:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnull        19
      10: aload_0
      11: aload_1
      12: aload_3
      13: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: return

  private void lambda$get$3(java.util.concurrent.atomic.AtomicBoolean, long, java.lang.Object, java.util.concurrent.CompletableFuture[], java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: iconst_0
       2: iconst_1
       3: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      14: invokeinterface #28,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      19: invokeinterface #29,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      24: lload_2
      25: lsub
      26: lstore        8
      28: aload         6
      30: ifnonnull     86
      33: aload         7
      35: ifnull        51
      38: getstatic     #18                 // Field logger:Ljava/util/logging/Logger;
      41: getstatic     #19                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      44: ldc           #77                 // String Exception thrown during asynchronous load
      46: aload         7
      48: invokevirtual #21                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      51: aload_0
      52: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      55: invokeinterface #48,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      60: lload         8
      62: invokeinterface #69,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
      67: aload_0
      68: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      71: aload         4
      73: aload         5
      75: iconst_0
      76: aaload
      77: invokeinterface #78,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      82: pop
      83: goto          122
      86: aload_0
      87: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      90: aload         4
      92: aload         5
      94: iconst_0
      95: aaload
      96: aload         5
      98: iconst_0
      99: aaload
     100: invokeinterface #79,  4           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     105: pop
     106: aload_0
     107: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
     110: invokeinterface #48,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     115: lload         8
     117: invokeinterface #80,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadSuccess:(J)V
     122: return

  private java.util.concurrent.CompletableFuture lambda$get$2(java.util.concurrent.CompletableFuture[], java.util.function.BiFunction, java.lang.Object, long, java.lang.Object);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_2
       3: aload_3
       4: aload_0
       5: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
       8: invokeinterface #54,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.executor:()Ljava/util/concurrent/Executor;
      13: invokeinterface #86,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #23                 // class java/util/concurrent/CompletableFuture
      21: aastore
      22: aload_1
      23: iconst_0
      24: aaload
      25: ifnonnull     59
      28: aload_0
      29: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      32: invokeinterface #48,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      37: aload_0
      38: getfield      #5                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      41: invokeinterface #28,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      46: invokeinterface #29,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      51: lload         4
      53: lsub
      54: invokeinterface #69,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
      59: aload_1
      60: iconst_0
      61: aaload
      62: areturn

  private static java.util.concurrent.CompletableFuture lambda$get$1(java.util.function.Function, java.lang.Object, java.lang.Object, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #87,  0             // InvokeDynamic #7:get:(Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/function/Supplier;
       7: aload_3
       8: invokestatic  #88                 // Method java/util/concurrent/CompletableFuture.supplyAsync:(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  private static java.lang.Object lambda$null$0(java.util.function.Function, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #89,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  static {};
    Code:
       0: ldc           #90                 // class com/github/benmanes/caffeine/cache/LocalAsyncLoadingCache
       2: invokevirtual #91                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #92                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #18                 // Field logger:Ljava/util/logging/Logger;
      11: return
}
