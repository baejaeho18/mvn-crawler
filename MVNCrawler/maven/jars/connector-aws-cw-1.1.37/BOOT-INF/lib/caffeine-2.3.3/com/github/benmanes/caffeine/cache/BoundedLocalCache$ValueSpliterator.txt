Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$ValueSpliterator<K, V> implements java.util.Spliterator<V> {
  final java.util.Spliterator<com.github.benmanes.caffeine.cache.Node<K, V>> spliterator;

  final com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V> cache;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$ValueSpliterator(com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: getfield      #1                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
       6: invokevirtual #2                  // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       9: invokeinterface #3,  1            // InterfaceMethod java/util/Collection.spliterator:()Ljava/util/Spliterator;
      14: invokespecial #4                  // Method "<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/util/Spliterator;)V
      17: return

  com.github.benmanes.caffeine.cache.BoundedLocalCache$ValueSpliterator(com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V>, java.util.Spliterator<com.github.benmanes.caffeine.cache.Node<K, V>>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #7                  // class java/util/Spliterator
      12: putfield      #8                  // Field spliterator:Ljava/util/Spliterator;
      15: aload_0
      16: aload_1
      17: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #9                  // class com/github/benmanes/caffeine/cache/BoundedLocalCache
      23: putfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      26: return

  public void forEachRemaining(java.util.function.Consumer<? super V>);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       9: invokevirtual #11                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      12: invokeinterface #12,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      17: lstore_2
      18: aload_0
      19: lload_2
      20: aload_1
      21: invokedynamic #13,  0             // InvokeDynamic #0:accept:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$ValueSpliterator;JLjava/util/function/Consumer;)Ljava/util/function/Consumer;
      26: astore        4
      28: aload_0
      29: getfield      #8                  // Field spliterator:Ljava/util/Spliterator;
      32: aload         4
      34: invokeinterface #14,  2           // InterfaceMethod java/util/Spliterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      39: return

  public boolean tryAdvance(java.util.function.Consumer<? super V>);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_1
       6: newarray       boolean
       8: dup
       9: iconst_0
      10: iconst_0
      11: bastore
      12: astore_2
      13: aload_0
      14: getfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      17: invokevirtual #11                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      20: invokeinterface #12,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      25: lstore_3
      26: aload_0
      27: lload_3
      28: aload_1
      29: aload_2
      30: invokedynamic #15,  0             // InvokeDynamic #1:accept:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$ValueSpliterator;JLjava/util/function/Consumer;[Z)Ljava/util/function/Consumer;
      35: astore        5
      37: aload_0
      38: getfield      #8                  // Field spliterator:Ljava/util/Spliterator;
      41: aload         5
      43: invokeinterface #16,  2           // InterfaceMethod java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z
      48: ifeq          59
      51: aload_2
      52: iconst_0
      53: baload
      54: ifeq          37
      57: iconst_1
      58: ireturn
      59: iconst_0
      60: ireturn

  public java.util.Spliterator<V> trySplit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field spliterator:Ljava/util/Spliterator;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Spliterator.trySplit:()Ljava/util/Spliterator;
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: aconst_null
      15: goto          30
      18: new           #18                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache$ValueSpliterator
      21: dup
      22: aload_0
      23: getfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      26: aload_1
      27: invokespecial #4                  // Method "<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/util/Spliterator;)V
      30: areturn

  public long estimateSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field spliterator:Ljava/util/Spliterator;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Spliterator.estimateSize:()J
       9: lreturn

  public int characteristics();
    Code:
       0: sipush        4352
       3: ireturn

  private void lambda$tryAdvance$1(long, java.util.function.Consumer, boolean[], com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         5
       2: invokeinterface #20,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
       7: astore        6
       9: aload         5
      11: invokeinterface #21,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      16: astore        7
      18: aload         6
      20: ifnull        64
      23: aload         7
      25: ifnull        64
      28: aload_0
      29: getfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      32: aload         5
      34: lload_1
      35: invokevirtual #22                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      38: ifne          64
      41: aload         5
      43: invokeinterface #23,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.isAlive:()Z
      48: ifeq          64
      51: aload_3
      52: aload         7
      54: invokeinterface #24,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      59: aload         4
      61: iconst_0
      62: iconst_1
      63: bastore
      64: return

  private void lambda$forEachRemaining$0(long, java.util.function.Consumer, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         4
       2: invokeinterface #20,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
       7: astore        5
       9: aload         4
      11: invokeinterface #21,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      16: astore        6
      18: aload         5
      20: ifnull        59
      23: aload         6
      25: ifnull        59
      28: aload_0
      29: getfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      32: aload         4
      34: lload_1
      35: invokevirtual #22                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      38: ifne          59
      41: aload         4
      43: invokeinterface #23,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.isAlive:()Z
      48: ifeq          59
      51: aload_3
      52: aload         6
      54: invokeinterface #24,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      59: return
}
