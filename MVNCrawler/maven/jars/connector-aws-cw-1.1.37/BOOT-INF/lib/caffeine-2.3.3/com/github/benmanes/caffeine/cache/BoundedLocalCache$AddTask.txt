Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$AddTask implements java.lang.Runnable {
  final com.github.benmanes.caffeine.cache.Node<K, V> node;

  final int weight;

  final com.github.benmanes.caffeine.cache.BoundedLocalCache this$0;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$AddTask(com.github.benmanes.caffeine.cache.Node<K, V>, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iload_3
      11: putfield      #3                  // Field weight:I
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
      19: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.evicts:()Z
       7: ifeq          147
      10: aload_0
      11: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
      14: aload_0
      15: getfield      #3                  // Field weight:I
      18: invokeinterface #6,  2            // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setPolicyWeight:(I)V
      23: aload_0
      24: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      27: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.weightedSize:()J
      30: lstore_1
      31: aload_0
      32: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      35: lload_1
      36: aload_0
      37: getfield      #3                  // Field weight:I
      40: i2l
      41: ladd
      42: invokevirtual #8                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.lazySetWeightedSize:(J)V
      45: aload_0
      46: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      49: aload_0
      50: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      53: invokevirtual #9                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.edenWeightedSize:()J
      56: aload_0
      57: getfield      #3                  // Field weight:I
      60: i2l
      61: ladd
      62: invokevirtual #10                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.lazySetEdenWeightedSize:(J)V
      65: aload_0
      66: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      69: invokevirtual #11                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.maximum:()J
      72: lstore_3
      73: lload_1
      74: lload_3
      75: iconst_1
      76: lushr
      77: lcmp
      78: iflt          119
      81: aload_0
      82: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      85: invokevirtual #12                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.isWeighted:()Z
      88: ifeq          104
      91: aload_0
      92: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      95: getfield      #13                 // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
      98: invokevirtual #14                 // Method java/util/concurrent/ConcurrentHashMap.mappingCount:()J
     101: goto          105
     104: lload_3
     105: lstore        5
     107: aload_0
     108: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
     111: invokevirtual #15                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
     114: lload         5
     116: invokevirtual #16                 // Method com/github/benmanes/caffeine/cache/FrequencySketch.ensureCapacity:(J)V
     119: aload_0
     120: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
     123: invokeinterface #17,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
     128: astore        5
     130: aload         5
     132: ifnull        147
     135: aload_0
     136: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
     139: invokevirtual #15                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
     142: aload         5
     144: invokevirtual #18                 // Method com/github/benmanes/caffeine/cache/FrequencySketch.increment:(Ljava/lang/Object;)V
     147: aload_0
     148: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
     151: dup
     152: astore_2
     153: monitorenter
     154: aload_0
     155: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
     158: invokeinterface #19,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.isAlive:()Z
     163: istore_1
     164: aload_2
     165: monitorexit
     166: goto          176
     169: astore        7
     171: aload_2
     172: monitorexit
     173: aload         7
     175: athrow
     176: iload_1
     177: ifeq          240
     180: aload_0
     181: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
     184: invokevirtual #20                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.expiresAfterWrite:()Z
     187: ifeq          205
     190: aload_0
     191: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
     194: invokevirtual #21                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
     197: aload_0
     198: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
     201: invokevirtual #22                 // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.add:(Ljava/lang/Object;)Z
     204: pop
     205: aload_0
     206: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
     209: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.evicts:()Z
     212: ifne          225
     215: aload_0
     216: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
     219: invokevirtual #23                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.expiresAfterAccess:()Z
     222: ifeq          240
     225: aload_0
     226: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
     229: invokevirtual #24                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.accessOrderEdenDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     232: aload_0
     233: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
     236: invokevirtual #25                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.add:(Ljava/lang/Object;)Z
     239: pop
     240: aload_0
     241: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
     244: aload_0
     245: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
     248: invokevirtual #26                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
     251: ifeq          306
     254: aload_0
     255: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
     258: invokeinterface #27,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     263: checkcast     #28                 // class java/util/concurrent/CompletableFuture
     266: astore_2
     267: aload_2
     268: ifnull        306
     271: aload_0
     272: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
     275: ldc2_w        #30                 // long 9223372036854775807l
     278: invokeinterface #32,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setAccessTime:(J)V
     283: aload_0
     284: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
     287: ldc2_w        #30                 // long 9223372036854775807l
     290: invokeinterface #33,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
     295: aload_2
     296: aload_0
     297: invokedynamic #34,  0             // InvokeDynamic #0:run:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask;)Ljava/lang/Runnable;
     302: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.thenRun:(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
     305: pop
     306: return
    Exception table:
       from    to  target type
         154   166   169   any
         169   173   169   any

  private void lambda$run$0();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: invokevirtual #36                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       7: invokeinterface #37,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      12: lstore_1
      13: aload_0
      14: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
      17: lload_1
      18: invokeinterface #32,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setAccessTime:(J)V
      23: aload_0
      24: getfield      #4                  // Field node:Lcom/github/benmanes/caffeine/cache/Node;
      27: lload_1
      28: invokeinterface #33,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
      33: return
}
