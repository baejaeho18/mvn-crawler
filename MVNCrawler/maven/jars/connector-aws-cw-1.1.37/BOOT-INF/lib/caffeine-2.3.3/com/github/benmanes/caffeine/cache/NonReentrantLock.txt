Compiled from "NonReentrantLock.java"
final class com.github.benmanes.caffeine.cache.NonReentrantLock implements java.util.concurrent.locks.Lock,java.io.Serializable {
  static final long serialVersionUID;

  final com.github.benmanes.caffeine.cache.NonReentrantLock$Sync sync;

  public com.github.benmanes.caffeine.cache.NonReentrantLock();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/github/benmanes/caffeine/cache/NonReentrantLock$Sync
       8: dup
       9: invokespecial #3                  // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync."<init>":()V
      12: putfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
      15: return

  public void lock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.lock:()V
       7: return

  public void lockInterruptibly() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #6                  // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.lockInterruptibly:()V
       7: return

  public boolean tryLock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.tryLock:()Z
       7: ireturn

  public boolean tryLock(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: lload_1
       5: aload_3
       6: invokevirtual #8                  // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.tryLock:(JLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public void unlock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #9                  // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.unlock:()V
       7: return

  public java.util.concurrent.locks.Condition newCondition();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #10                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.newCondition:()Ljava/util/concurrent/locks/Condition;
       7: areturn

  public boolean isHeldByCurrentThread();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #11                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.isHeldExclusively:()Z
       7: ireturn

  public boolean isLocked();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #12                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.isLocked:()Z
       7: ireturn

  public java.lang.Thread getOwner();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.getOwner:()Ljava/lang/Thread;
       7: areturn

  public boolean hasQueuedThreads();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #14                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.hasQueuedThreads:()Z
       7: ireturn

  public boolean hasQueuedThread(java.lang.Thread);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: aload_1
       5: invokevirtual #15                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.isQueued:(Ljava/lang/Thread;)Z
       8: ireturn

  public int getQueueLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #16                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.getQueueLength:()I
       7: ireturn

  public java.util.Collection<java.lang.Thread> getQueuedThreads();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #17                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.getQueuedThreads:()Ljava/util/Collection;
       7: areturn

  public boolean hasWaiters(java.util.concurrent.locks.Condition);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: instanceof    #19                 // class java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
       9: ifne          22
      12: new           #20                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #21                 // String not owner
      18: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
      26: aload_1
      27: checkcast     #19                 // class java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
      30: invokevirtual #23                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.hasWaiters:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z
      33: ireturn

  public int getWaitQueueLength(java.util.concurrent.locks.Condition);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: instanceof    #19                 // class java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
       9: ifne          22
      12: new           #20                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #21                 // String not owner
      18: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
      26: aload_1
      27: checkcast     #19                 // class java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
      30: invokevirtual #24                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.getWaitQueueLength:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)I
      33: ireturn

  public java.util.Collection<java.lang.Thread> getWaitingThreads(java.util.concurrent.locks.Condition);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: instanceof    #19                 // class java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
       9: ifne          22
      12: new           #20                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #21                 // String not owner
      18: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
      26: aload_1
      27: checkcast     #19                 // class java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
      30: invokevirtual #25                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.getWaitingThreads:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Ljava/util/Collection;
      33: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lcom/github/benmanes/caffeine/cache/NonReentrantLock$Sync;
       4: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/NonReentrantLock$Sync.getOwner:()Ljava/lang/Thread;
       7: astore_1
       8: aload_1
       9: ifnonnull     17
      12: ldc           #26                 // String [Unlocked]
      14: goto          44
      17: new           #27                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #29                 // String [Locked by thread
      26: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #31                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #32                 // String ]
      38: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore_2
      45: new           #27                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      52: aload_0
      53: invokespecial #34                 // Method java/lang/Object.toString:()Ljava/lang/String;
      56: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_2
      60: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn
}
