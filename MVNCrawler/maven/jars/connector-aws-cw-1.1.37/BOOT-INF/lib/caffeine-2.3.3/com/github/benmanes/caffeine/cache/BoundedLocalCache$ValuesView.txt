Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$ValuesView<K, V> extends java.util.AbstractCollection<V> {
  final com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V> cache;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$ValuesView(com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractCollection."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class com/github/benmanes/caffeine/cache/BoundedLocalCache
      12: putfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      15: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.size:()I
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: invokevirtual #6                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.clear:()V
       7: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: aload_1
       5: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean removeIf(java.util.function.Predicate<? super V>);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: aload_0
       8: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      11: invokevirtual #8                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.entrySet:()Ljava/util/Set;
      14: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          83
      29: aload_3
      30: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #12                 // class java/util/Map$Entry
      38: astore        4
      40: aload_1
      41: aload         4
      43: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: invokeinterface #14,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      53: ifeq          80
      56: iload_2
      57: aload_0
      58: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      61: aload         4
      63: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      68: aload         4
      70: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokevirtual #16                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      78: ior
      79: istore_2
      80: goto          20
      83: iload_2
      84: ireturn

  public java.util.Iterator<V> iterator();
    Code:
       0: new           #17                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache$ValueIterator
       3: dup
       4: aload_0
       5: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       8: invokespecial #18                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$ValueIterator."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      11: areturn

  public java.util.Spliterator<V> spliterator();
    Code:
       0: new           #19                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache$ValueSpliterator
       3: dup
       4: aload_0
       5: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       8: invokespecial #20                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$ValueSpliterator."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      11: areturn
}
