Compiled from "LocalManualCache.java"
interface com.github.benmanes.caffeine.cache.LocalManualCache<C extends com.github.benmanes.caffeine.cache.LocalCache<K, V>, K, V> extends com.github.benmanes.caffeine.cache.Cache<K, V> {
  public abstract C cache();

  public default long estimatedSize();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: invokeinterface #2,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.estimatedSize:()J
      11: lreturn

  public default void cleanUp();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: invokeinterface #3,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.cleanUp:()V
      11: return

  public default V getIfPresent(java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: aload_1
       7: iconst_1
       8: invokeinterface #4,  3            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.getIfPresent:(Ljava/lang/Object;Z)Ljava/lang/Object;
      13: areturn

  public default V get(K, java.util.function.Function<? super K, ? extends V>);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: aload_1
       7: aload_2
       8: invokeinterface #5,  3            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      13: areturn

  public default java.util.Map<K, V> getAllPresent(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: aload_1
       7: invokeinterface #6,  2            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.getAllPresent:(Ljava/lang/Iterable;)Ljava/util/Map;
      12: areturn

  public default void put(K, V);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: aload_1
       7: aload_2
       8: invokeinterface #7,  3            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  public default void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: aload_1
       7: invokeinterface #8,  2            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.putAll:(Ljava/util/Map;)V
      12: return

  public default void invalidate(java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: aload_1
       7: invokeinterface #9,  2            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: return

  public default void invalidateAll(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: aload_1
       7: invokeinterface #10,  2           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.invalidateAll:(Ljava/lang/Iterable;)V
      12: return

  public default void invalidateAll();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: invokeinterface #11,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.clear:()V
      11: return

  public default com.github.benmanes.caffeine.cache.stats.CacheStats stats();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: invokeinterface #12,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      11: invokeinterface #13,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.snapshot:()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
      16: areturn

  public default java.util.concurrent.ConcurrentMap<K, V> asMap();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: areturn
}
