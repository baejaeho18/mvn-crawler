Compiled from "LocalCacheFactory.java"
class com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSA<K, V> extends com.github.benmanes.caffeine.cache.LocalCacheFactory$SSS<K, V> {
  private final com.github.benmanes.caffeine.cache.Ticker ticker;

  private final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderEdenDeque;

  private volatile long expiresAfterAccessNanos;

  private final com.github.benmanes.caffeine.cache.WriteBuffer<java.lang.Runnable> writeBuffer;

  com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSA(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/LocalCacheFactory$SSS."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;Z)V
       7: aload_0
       8: aload_1
       9: invokevirtual #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.getTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      12: putfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      15: aload_0
      16: new           #4                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque
      19: dup
      20: invokespecial #5                  // Method com/github/benmanes/caffeine/cache/AccessOrderDeque."<init>":()V
      23: putfield      #6                  // Field accessOrderEdenDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      26: aload_0
      27: aload_1
      28: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/Caffeine.getExpiresAfterAccessNanos:()J
      31: putfield      #8                  // Field expiresAfterAccessNanos:J
      34: aload_0
      35: new           #9                  // class com/github/benmanes/caffeine/cache/WriteBuffer
      38: dup
      39: iconst_4
      40: getstatic     #11                 // Field WRITE_BUFFER_MAX:I
      43: invokespecial #12                 // Method com/github/benmanes/caffeine/cache/WriteBuffer."<init>":(II)V
      46: putfield      #13                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/WriteBuffer;
      49: return

  public final com.github.benmanes.caffeine.cache.Ticker expirationTicker();
    Code:
       0: aload_0
       1: getfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
       4: areturn

  protected final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderEdenDeque();
    Code:
       0: aload_0
       1: getfield      #6                  // Field accessOrderEdenDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       4: areturn

  protected final boolean expiresAfterAccess();
    Code:
       0: iconst_1
       1: ireturn

  protected final long expiresAfterAccessNanos();
    Code:
       0: aload_0
       1: getfield      #8                  // Field expiresAfterAccessNanos:J
       4: lreturn

  protected final void setExpiresAfterAccessNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field expiresAfterAccessNanos:J
       5: return

  protected final com.github.benmanes.caffeine.cache.WriteBuffer<java.lang.Runnable> writeBuffer();
    Code:
       0: aload_0
       1: getfield      #13                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/WriteBuffer;
       4: areturn

  protected final boolean buffersWrites();
    Code:
       0: iconst_1
       1: ireturn
}
