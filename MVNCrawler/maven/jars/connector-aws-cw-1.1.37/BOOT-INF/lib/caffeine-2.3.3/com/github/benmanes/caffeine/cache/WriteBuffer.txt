Compiled from "WriteBuffer.java"
final class com.github.benmanes.caffeine.cache.WriteBuffer<E> extends com.github.benmanes.caffeine.cache.WBHeader$ConsumerRef<E> {
  long p60;

  long p61;

  long p62;

  long p63;

  long p64;

  long p65;

  long p66;

  long p67;

  long p70;

  long p71;

  long p72;

  long p73;

  long p74;

  long p75;

  long p76;

  static final long ARRAY_BASE;

  static final java.lang.Object JUMP;

  static final int ELEMENT_SHIFT;

  public com.github.benmanes.caffeine.cache.WriteBuffer(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/WBHeader$ConsumerRef."<init>":()V
       4: iload_2
       5: iconst_4
       6: if_icmple     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      17: iload_1
      18: iconst_2
      19: if_icmple     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: invokestatic  #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      30: iload_1
      31: invokestatic  #3                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.ceilingPowerOfTwo:(I)I
      34: iload_2
      35: invokestatic  #3                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.ceilingPowerOfTwo:(I)I
      38: if_icmplt     51
      41: new           #4                  // class java/lang/IllegalArgumentException
      44: dup
      45: ldc           #5                  // String Initial capacity cannot exceed maximum capacity(both rounded up to a power of 2)
      47: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: iload_1
      52: invokestatic  #3                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.ceilingPowerOfTwo:(I)I
      55: istore_3
      56: iload_3
      57: iconst_1
      58: isub
      59: iconst_1
      60: ishl
      61: i2l
      62: lstore        4
      64: iload_3
      65: iconst_1
      66: iadd
      67: anewarray     #7                  // class java/lang/Object
      70: astore        6
      72: aload_0
      73: aload         6
      75: putfield      #8                  // Field producerBuffer:[Ljava/lang/Object;
      78: aload_0
      79: lload         4
      81: putfield      #9                  // Field producerMask:J
      84: aload_0
      85: aload         6
      87: putfield      #10                 // Field consumerBuffer:[Ljava/lang/Object;
      90: aload_0
      91: lload         4
      93: putfield      #11                 // Field consumerMask:J
      96: aload_0
      97: iload_2
      98: invokestatic  #3                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.ceilingPowerOfTwo:(I)I
     101: i2l
     102: iconst_1
     103: lshl
     104: putfield      #12                 // Field maxQueueCapacity:J
     107: aload_0
     108: lload         4
     110: invokespecial #13                 // Method soProducerLimit:(J)V
     113: return

  public boolean offer(E);
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokespecial #15                 // Method lvProducerLimit:()J
       9: lstore        7
      11: aload_0
      12: invokespecial #16                 // Method lvProducerIndex:()J
      15: lstore        5
      17: lload         5
      19: lconst_1
      20: land
      21: lconst_1
      22: lcmp
      23: ifne          29
      26: goto          5
      29: aload_0
      30: getfield      #9                  // Field producerMask:J
      33: lstore_2
      34: aload_0
      35: getfield      #8                  // Field producerBuffer:[Ljava/lang/Object;
      38: astore        4
      40: lload         7
      42: lload         5
      44: lcmp
      45: ifgt          106
      48: aload_0
      49: aload_1
      50: lload_2
      51: aload         4
      53: lload         5
      55: lload         7
      57: invokespecial #17                 // Method offerSlowPath:(Ljava/lang/Object;J[Ljava/lang/Object;JJ)I
      60: istore        9
      62: iload         9
      64: tableswitch   { // 0 to 3
                     0: 96
                     1: 99
                     2: 102
                     3: 104
               default: 106
          }
      96: goto          106
      99: goto          5
     102: iconst_0
     103: ireturn
     104: iconst_1
     105: ireturn
     106: aload_0
     107: lload         5
     109: lload         5
     111: ldc2_w        #18                 // long 2l
     114: ladd
     115: invokespecial #20                 // Method casProducerIndex:(JJ)Z
     118: ifeq          124
     121: goto          127
     124: goto          5
     127: lload         5
     129: lload_2
     130: invokestatic  #21                 // Method modifiedCalcElementOffset:(JJ)J
     133: lstore        7
     135: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
     138: aload         4
     140: lload         7
     142: aload_1
     143: invokevirtual #23                 // Method sun/misc/Unsafe.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
     146: iconst_1
     147: ireturn

  private int offerSlowPath(E, long, E[], long, long);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method lvConsumerIndex:()J
       4: lstore        10
       6: aload_0
       7: getfield      #12                 // Field maxQueueCapacity:J
      10: lstore        12
      12: lload_2
      13: ldc2_w        #18                 // long 2l
      16: ladd
      17: lload         12
      19: lcmp
      20: ifne          28
      23: lload         12
      25: goto          29
      28: lload_2
      29: lstore        14
      31: lload         10
      33: lload         14
      35: ladd
      36: lload         5
      38: lcmp
      39: ifle          65
      42: aload_0
      43: lload         7
      45: lload         10
      47: lload         14
      49: ladd
      50: invokespecial #25                 // Method casProducerLimit:(JJ)Z
      53: ifne          59
      56: iconst_1
      57: istore        9
      59: iconst_0
      60: istore        9
      62: goto          268
      65: lload         10
      67: lload         5
      69: lload         12
      71: lsub
      72: lcmp
      73: ifne          82
      76: iconst_2
      77: istore        9
      79: goto          268
      82: aload_0
      83: lload         5
      85: lload         5
      87: lconst_1
      88: ladd
      89: invokespecial #20                 // Method casProducerIndex:(JJ)Z
      92: ifeq          265
      95: aload         4
      97: arraylength
      98: istore        16
     100: aload         4
     102: arraylength
     103: iconst_1
     104: isub
     105: i2l
     106: lload         12
     108: lcmp
     109: ifne          120
     112: new           #26                 // class java/lang/IllegalStateException
     115: dup
     116: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":()V
     119: athrow
     120: iconst_2
     121: aload         4
     123: arraylength
     124: imul
     125: iconst_1
     126: isub
     127: istore        16
     129: iload         16
     131: anewarray     #7                  // class java/lang/Object
     134: astore        17
     136: aload_0
     137: aload         17
     139: putfield      #8                  // Field producerBuffer:[Ljava/lang/Object;
     142: aload_0
     143: iload         16
     145: iconst_2
     146: isub
     147: iconst_1
     148: ishl
     149: i2l
     150: putfield      #9                  // Field producerMask:J
     153: lload         5
     155: lload_2
     156: invokestatic  #21                 // Method modifiedCalcElementOffset:(JJ)J
     159: lstore        18
     161: lload         5
     163: aload_0
     164: getfield      #9                  // Field producerMask:J
     167: invokestatic  #21                 // Method modifiedCalcElementOffset:(JJ)J
     170: lstore        20
     172: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
     175: aload         17
     177: lload         20
     179: aload_1
     180: invokevirtual #23                 // Method sun/misc/Unsafe.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
     183: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
     186: aload         4
     188: aload_0
     189: lload_2
     190: invokespecial #28                 // Method nextArrayOffset:(J)J
     193: aload         17
     195: invokevirtual #23                 // Method sun/misc/Unsafe.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
     198: lload         12
     200: lload         5
     202: lload         10
     204: lsub
     205: lsub
     206: lstore        22
     208: lload         22
     210: lconst_0
     211: lcmp
     212: ifgt          223
     215: new           #26                 // class java/lang/IllegalStateException
     218: dup
     219: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":()V
     222: athrow
     223: aload_0
     224: lload         5
     226: lload_2
     227: lload         22
     229: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
     232: ladd
     233: invokespecial #13                 // Method soProducerLimit:(J)V
     236: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
     239: aload         4
     241: lload         18
     243: getstatic     #30                 // Field JUMP:Ljava/lang/Object;
     246: invokevirtual #23                 // Method sun/misc/Unsafe.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
     249: aload_0
     250: lload         5
     252: ldc2_w        #18                 // long 2l
     255: ladd
     256: invokespecial #31                 // Method soProducerIndex:(J)V
     259: iconst_3
     260: istore        9
     262: goto          268
     265: iconst_1
     266: istore        9
     268: iload         9
     270: ireturn

  public E poll();
    Code:
       0: aload_0
       1: getfield      #10                 // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #32                 // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #11                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #21                 // Method modifiedCalcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #33                 // Method lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: ifnonnull     64
      37: lload_2
      38: aload_0
      39: invokespecial #16                 // Method lvProducerIndex:()J
      42: lcmp
      43: ifeq          62
      46: aload_1
      47: lload         6
      49: invokestatic  #33                 // Method lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      52: astore        8
      54: aload         8
      56: ifnull        46
      59: goto          64
      62: aconst_null
      63: areturn
      64: aload         8
      66: getstatic     #30                 // Field JUMP:Ljava/lang/Object;
      69: if_acmpne     89
      72: aload_0
      73: aload_1
      74: lload         4
      76: invokespecial #34                 // Method getNextBuffer:([Ljava/lang/Object;J)[Ljava/lang/Object;
      79: astore        9
      81: aload_0
      82: aload         9
      84: lload_2
      85: invokespecial #35                 // Method newBufferPoll:([Ljava/lang/Object;J)Ljava/lang/Object;
      88: areturn
      89: aload_1
      90: lload         6
      92: aconst_null
      93: invokestatic  #36                 // Method soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      96: aload_0
      97: lload_2
      98: ldc2_w        #18                 // long 2l
     101: ladd
     102: invokespecial #37                 // Method soConsumerIndex:(J)V
     105: aload         8
     107: astore        9
     109: aload         9
     111: areturn

  public int size();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method lvConsumerIndex:()J
       4: lstore_1
       5: lload_1
       6: lstore_3
       7: aload_0
       8: invokespecial #16                 // Method lvProducerIndex:()J
      11: lstore        5
      13: aload_0
      14: invokespecial #24                 // Method lvConsumerIndex:()J
      17: lstore_1
      18: lload_3
      19: lload_1
      20: lcmp
      21: ifne          32
      24: lload         5
      26: lload_1
      27: lsub
      28: l2i
      29: iconst_1
      30: ishr
      31: ireturn
      32: goto          5

  private static long modifiedCalcElementOffset(long, long);
    Code:
       0: getstatic     #38                 // Field ARRAY_BASE:J
       3: lload_0
       4: lload_2
       5: land
       6: getstatic     #39                 // Field ELEMENT_SHIFT:I
       9: iconst_1
      10: isub
      11: lshl
      12: ladd
      13: lreturn

  private E[] getNextBuffer(E[], long);
    Code:
       0: aload_0
       1: lload_2
       2: invokespecial #28                 // Method nextArrayOffset:(J)J
       5: lstore        4
       7: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      10: aload_1
      11: lload         4
      13: invokevirtual #40                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      16: checkcast     #41                 // class "[Ljava/lang/Object;"
      19: astore        6
      21: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      24: aload_1
      25: lload         4
      27: aconst_null
      28: invokevirtual #23                 // Method sun/misc/Unsafe.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
      31: aload         6
      33: areturn

  private long nextArrayOffset(long);
    Code:
       0: lload_1
       1: ldc2_w        #18                 // long 2l
       4: ladd
       5: ldc2_w        #43                 // long 9223372036854775807l
       8: invokestatic  #21                 // Method modifiedCalcElementOffset:(JJ)J
      11: lreturn

  private E newBufferPoll(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #45                 // Method newBufferAndOffset:([Ljava/lang/Object;J)J
       6: lstore        4
       8: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      11: aload_1
      12: lload         4
      14: invokevirtual #40                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      17: astore        6
      19: aload         6
      21: ifnonnull     34
      24: new           #26                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #46                 // String new buffer must have at least one element
      30: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      37: aload_1
      38: lload         4
      40: aconst_null
      41: invokevirtual #23                 // Method sun/misc/Unsafe.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
      44: aload_0
      45: lload_2
      46: ldc2_w        #18                 // long 2l
      49: ladd
      50: invokespecial #37                 // Method soConsumerIndex:(J)V
      53: aload         6
      55: areturn

  private long newBufferAndOffset(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field consumerBuffer:[Ljava/lang/Object;
       5: aload_0
       6: aload_1
       7: arraylength
       8: iconst_2
       9: isub
      10: iconst_1
      11: ishl
      12: i2l
      13: putfield      #11                 // Field consumerMask:J
      16: lload_2
      17: aload_0
      18: getfield      #11                 // Field consumerMask:J
      21: invokestatic  #21                 // Method modifiedCalcElementOffset:(JJ)J
      24: lstore        4
      26: lload         4
      28: lreturn

  public static <E> E lvElement(E[], long);
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: lload_1
       5: invokevirtual #40                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
       8: areturn

  public static <E> void soElement(E[], long, E);
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: lload_1
       5: aload_3
       6: invokevirtual #23                 // Method sun/misc/Unsafe.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
       9: return

  private long lvProducerIndex();
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #48                 // Field P_INDEX_OFFSET:J
       7: invokevirtual #49                 // Method sun/misc/Unsafe.getLongVolatile:(Ljava/lang/Object;J)J
      10: lreturn

  private long lvConsumerIndex();
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #50                 // Field C_INDEX_OFFSET:J
       7: invokevirtual #49                 // Method sun/misc/Unsafe.getLongVolatile:(Ljava/lang/Object;J)J
      10: lreturn

  private void soProducerIndex(long);
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #48                 // Field P_INDEX_OFFSET:J
       7: lload_1
       8: invokevirtual #51                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      11: return

  private boolean casProducerIndex(long, long);
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #48                 // Field P_INDEX_OFFSET:J
       7: lload_1
       8: lload_3
       9: invokevirtual #52                 // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      12: ireturn

  private void soConsumerIndex(long);
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #50                 // Field C_INDEX_OFFSET:J
       7: lload_1
       8: invokevirtual #51                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      11: return

  private long lvProducerLimit();
    Code:
       0: aload_0
       1: getfield      #53                 // Field producerLimit:J
       4: lreturn

  private boolean casProducerLimit(long, long);
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #54                 // Field P_LIMIT_OFFSET:J
       7: lload_1
       8: lload_3
       9: invokevirtual #52                 // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      12: ireturn

  private void soProducerLimit(long);
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #54                 // Field P_LIMIT_OFFSET:J
       7: lload_1
       8: invokevirtual #51                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      11: return

  static {};
    Code:
       0: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: ldc           #41                 // class "[Ljava/lang/Object;"
       5: invokevirtual #55                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
       8: i2l
       9: putstatic     #38                 // Field ARRAY_BASE:J
      12: new           #7                  // class java/lang/Object
      15: dup
      16: invokespecial #56                 // Method java/lang/Object."<init>":()V
      19: putstatic     #30                 // Field JUMP:Ljava/lang/Object;
      22: getstatic     #22                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      25: ldc           #41                 // class "[Ljava/lang/Object;"
      27: invokevirtual #57                 // Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
      30: istore_0
      31: iload_0
      32: iconst_4
      33: if_icmpne     43
      36: iconst_2
      37: putstatic     #39                 // Field ELEMENT_SHIFT:I
      40: goto          66
      43: iload_0
      44: bipush        8
      46: if_icmpne     56
      49: iconst_3
      50: putstatic     #39                 // Field ELEMENT_SHIFT:I
      53: goto          66
      56: new           #26                 // class java/lang/IllegalStateException
      59: dup
      60: ldc           #58                 // String Unknown pointer size
      62: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: return
}
