Compiled from "AccessOrderDeque.java"
final class com.github.benmanes.caffeine.cache.AccessOrderDeque<E extends com.github.benmanes.caffeine.cache.AccessOrderDeque$AccessOrder<E>> extends com.github.benmanes.caffeine.cache.AbstractLinkedDeque<E> {
  com.github.benmanes.caffeine.cache.AccessOrderDeque();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/AbstractLinkedDeque."<init>":()V
       4: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
      12: invokevirtual #3                  // Method contains:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  boolean contains(com.github.benmanes.caffeine.cache.AccessOrderDeque$AccessOrder<?>);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;
       6: ifnonnull     26
       9: aload_1
      10: invokeinterface #5,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;
      15: ifnonnull     26
      18: aload_1
      19: aload_0
      20: getfield      #6                  // Field first:Ljava/lang/Object;
      23: if_acmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
      12: invokevirtual #7                  // Method remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  boolean remove(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method contains:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
       5: ifeq          15
       8: aload_0
       9: aload_1
      10: invokevirtual #8                  // Method unlink:(Ljava/lang/Object;)V
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public E getPrevious(E);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;
       6: areturn

  public void setPrevious(E, E);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #9,  2            // InterfaceMethod com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder.setPreviousInAccessOrder:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)V
       7: return

  public E getNext(E);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;
       6: areturn

  public void setNext(E, E);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #10,  2           // InterfaceMethod com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder.setNextInAccessOrder:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)V
       7: return

  public void setNext(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
       5: aload_2
       6: checkcast     #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
       9: invokevirtual #11                 // Method setNext:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)V
      12: return

  public java.lang.Object getNext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
       5: invokevirtual #12                 // Method getNext:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;
       8: areturn

  public void setPrevious(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
       5: aload_2
       6: checkcast     #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
       9: invokevirtual #13                 // Method setPrevious:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)V
      12: return

  public java.lang.Object getPrevious(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder
       5: invokevirtual #14                 // Method getPrevious:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;
       8: areturn
}
