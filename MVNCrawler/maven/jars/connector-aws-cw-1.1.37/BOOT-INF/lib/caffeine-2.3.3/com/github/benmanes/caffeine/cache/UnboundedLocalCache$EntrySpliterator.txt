Compiled from "UnboundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator<K, V> implements java.util.Spliterator<java.util.Map$Entry<K, V>> {
  final java.util.Spliterator<java.util.Map$Entry<K, V>> spliterator;

  final com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, V> cache;

  com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator(com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: getfield      #1                  // Field com/github/benmanes/caffeine/cache/UnboundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
       6: invokevirtual #2                  // Method java/util/concurrent/ConcurrentHashMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #3,  1            // InterfaceMethod java/util/Set.spliterator:()Ljava/util/Spliterator;
      14: invokespecial #4                  // Method "<init>":(Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;Ljava/util/Spliterator;)V
      17: return

  com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator(com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, V>, java.util.Spliterator<java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #7                  // class java/util/Spliterator
      12: putfield      #8                  // Field spliterator:Ljava/util/Spliterator;
      15: aload_0
      16: aload_1
      17: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #9                  // class com/github/benmanes/caffeine/cache/UnboundedLocalCache
      23: putfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      26: return

  public void forEachRemaining(java.util.function.Consumer<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #8                  // Field spliterator:Ljava/util/Spliterator;
       9: aload_0
      10: aload_1
      11: invokedynamic #11,  0             // InvokeDynamic #0:accept:(Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
      16: invokeinterface #12,  2           // InterfaceMethod java/util/Spliterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      21: return

  public boolean tryAdvance(java.util.function.Consumer<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #8                  // Field spliterator:Ljava/util/Spliterator;
       9: aload_0
      10: aload_1
      11: invokedynamic #13,  0             // InvokeDynamic #1:accept:(Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
      16: invokeinterface #14,  2           // InterfaceMethod java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z
      21: ireturn

  public com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator<K, V> trySplit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field spliterator:Ljava/util/Spliterator;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Spliterator.trySplit:()Ljava/util/Spliterator;
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: aconst_null
      15: goto          30
      18: new           #16                 // class com/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator
      21: dup
      22: aload_0
      23: getfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      26: aload_1
      27: invokespecial #4                  // Method "<init>":(Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;Ljava/util/Spliterator;)V
      30: areturn

  public long estimateSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field spliterator:Ljava/util/Spliterator;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Spliterator.estimateSize:()J
       9: lreturn

  public int characteristics();
    Code:
       0: aload_0
       1: getfield      #8                  // Field spliterator:Ljava/util/Spliterator;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Spliterator.characteristics:()I
       9: ireturn

  public java.util.Spliterator trySplit();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method trySplit:()Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator;
       4: areturn

  private void lambda$tryAdvance$1(java.util.function.Consumer, java.util.Map$Entry);
    Code:
       0: new           #20                 // class com/github/benmanes/caffeine/cache/WriteThroughEntry
       3: dup
       4: aload_0
       5: getfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       8: aload_2
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      14: aload_2
      15: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      20: invokespecial #23                 // Method com/github/benmanes/caffeine/cache/WriteThroughEntry."<init>":(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)V
      23: astore_3
      24: aload_1
      25: aload_3
      26: invokeinterface #24,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      31: return

  private void lambda$forEachRemaining$0(java.util.function.Consumer, java.util.Map$Entry);
    Code:
       0: new           #20                 // class com/github/benmanes/caffeine/cache/WriteThroughEntry
       3: dup
       4: aload_0
       5: getfield      #10                 // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       8: aload_2
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      14: aload_2
      15: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      20: invokespecial #23                 // Method com/github/benmanes/caffeine/cache/WriteThroughEntry."<init>":(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)V
      23: astore_3
      24: aload_1
      25: aload_3
      26: invokeinterface #24,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      31: return
}
