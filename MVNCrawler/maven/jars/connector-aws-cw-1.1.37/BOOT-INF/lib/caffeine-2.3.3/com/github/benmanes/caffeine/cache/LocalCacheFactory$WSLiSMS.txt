Compiled from "LocalCacheFactory.java"
class com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMS<K, V> extends com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiS<K, V> {
  protected static final long MAXIMUM_OFFSET;

  protected static final long EDEN_MAXIMUM_OFFSET;

  protected static final long MAIN_PROTECTED_MAXIMUM_OFFSET;

  protected static final long WEIGHTED_SIZE_OFFSET;

  protected static final long EDEN_WEIGHTED_SIZE_OFFSET;

  protected static final long MAIN_PROTECTED_WEIGHTED_SIZE_OFFSET;

  private volatile long maximum;

  private volatile long edenMaximum;

  private volatile long mainProtectedMaximum;

  private volatile long weightedSize;

  private volatile long edenWeightedSize;

  private volatile long mainProtectedWeightedSize;

  private final com.github.benmanes.caffeine.cache.FrequencySketch<K> sketch;

  private final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderEdenDeque;

  private final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderProbationDeque;

  private final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderProtectedDeque;

  private final com.github.benmanes.caffeine.cache.WriteBuffer<java.lang.Runnable> writeBuffer;

  com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMS(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/LocalCacheFactory$WSLiS."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;Z)V
       7: aload_0
       8: new           #2                  // class com/github/benmanes/caffeine/cache/FrequencySketch
      11: dup
      12: invokespecial #3                  // Method com/github/benmanes/caffeine/cache/FrequencySketch."<init>":()V
      15: putfield      #4                  // Field sketch:Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      18: aload_1
      19: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/Caffeine.hasInitialCapacity:()Z
      22: ifeq          48
      25: aload_1
      26: invokevirtual #6                  // Method com/github/benmanes/caffeine/cache/Caffeine.getMaximum:()J
      29: aload_1
      30: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/Caffeine.getInitialCapacity:()I
      33: i2l
      34: invokestatic  #8                  // Method java/lang/Math.min:(JJ)J
      37: lstore        4
      39: aload_0
      40: getfield      #4                  // Field sketch:Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      43: lload         4
      45: invokevirtual #9                  // Method com/github/benmanes/caffeine/cache/FrequencySketch.ensureCapacity:(J)V
      48: aload_0
      49: new           #10                 // class com/github/benmanes/caffeine/cache/AccessOrderDeque
      52: dup
      53: invokespecial #11                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque."<init>":()V
      56: putfield      #12                 // Field accessOrderEdenDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      59: aload_0
      60: new           #10                 // class com/github/benmanes/caffeine/cache/AccessOrderDeque
      63: dup
      64: invokespecial #11                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque."<init>":()V
      67: putfield      #13                 // Field accessOrderProbationDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      70: aload_0
      71: new           #10                 // class com/github/benmanes/caffeine/cache/AccessOrderDeque
      74: dup
      75: invokespecial #11                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque."<init>":()V
      78: putfield      #14                 // Field accessOrderProtectedDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      81: aload_0
      82: new           #15                 // class com/github/benmanes/caffeine/cache/WriteBuffer
      85: dup
      86: iconst_4
      87: getstatic     #17                 // Field WRITE_BUFFER_MAX:I
      90: invokespecial #18                 // Method com/github/benmanes/caffeine/cache/WriteBuffer."<init>":(II)V
      93: putfield      #19                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/WriteBuffer;
      96: return

  protected final boolean evicts();
    Code:
       0: iconst_1
       1: ireturn

  protected final long maximum();
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #21                 // Field MAXIMUM_OFFSET:J
       7: invokevirtual #22                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      10: lreturn

  protected final void lazySetMaximum(long);
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #21                 // Field MAXIMUM_OFFSET:J
       7: lload_1
       8: invokevirtual #23                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      11: return

  protected final long edenMaximum();
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #24                 // Field EDEN_MAXIMUM_OFFSET:J
       7: invokevirtual #22                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      10: lreturn

  protected final void lazySetEdenMaximum(long);
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #24                 // Field EDEN_MAXIMUM_OFFSET:J
       7: lload_1
       8: invokevirtual #23                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      11: return

  protected final long mainProtectedMaximum();
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #25                 // Field MAIN_PROTECTED_MAXIMUM_OFFSET:J
       7: invokevirtual #22                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      10: lreturn

  protected final void lazySetMainProtectedMaximum(long);
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #25                 // Field MAIN_PROTECTED_MAXIMUM_OFFSET:J
       7: lload_1
       8: invokevirtual #23                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      11: return

  protected final long weightedSize();
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #26                 // Field WEIGHTED_SIZE_OFFSET:J
       7: invokevirtual #22                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      10: lreturn

  protected final void lazySetWeightedSize(long);
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #26                 // Field WEIGHTED_SIZE_OFFSET:J
       7: lload_1
       8: invokevirtual #23                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      11: return

  protected final long edenWeightedSize();
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #27                 // Field EDEN_WEIGHTED_SIZE_OFFSET:J
       7: invokevirtual #22                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      10: lreturn

  protected final void lazySetEdenWeightedSize(long);
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #27                 // Field EDEN_WEIGHTED_SIZE_OFFSET:J
       7: lload_1
       8: invokevirtual #23                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      11: return

  protected final long mainProtectedWeightedSize();
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #28                 // Field MAIN_PROTECTED_WEIGHTED_SIZE_OFFSET:J
       7: invokevirtual #22                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      10: lreturn

  protected final void lazySetMainProtectedWeightedSize(long);
    Code:
       0: getstatic     #20                 // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #28                 // Field MAIN_PROTECTED_WEIGHTED_SIZE_OFFSET:J
       7: lload_1
       8: invokevirtual #23                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      11: return

  protected final com.github.benmanes.caffeine.cache.FrequencySketch<K> frequencySketch();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sketch:Lcom/github/benmanes/caffeine/cache/FrequencySketch;
       4: areturn

  protected final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderEdenDeque();
    Code:
       0: aload_0
       1: getfield      #12                 // Field accessOrderEdenDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       4: areturn

  protected final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderProbationDeque();
    Code:
       0: aload_0
       1: getfield      #13                 // Field accessOrderProbationDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       4: areturn

  protected final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderProtectedDeque();
    Code:
       0: aload_0
       1: getfield      #14                 // Field accessOrderProtectedDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       4: areturn

  protected final com.github.benmanes.caffeine.cache.WriteBuffer<java.lang.Runnable> writeBuffer();
    Code:
       0: aload_0
       1: getfield      #19                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/WriteBuffer;
       4: areturn

  protected final boolean buffersWrites();
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: ldc           #29                 // class com/github/benmanes/caffeine/cache/LocalCacheFactory$WSLiSMS
       2: ldc           #30                 // String maximum
       4: invokestatic  #31                 // Method com/github/benmanes/caffeine/base/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
       7: putstatic     #21                 // Field MAXIMUM_OFFSET:J
      10: ldc           #29                 // class com/github/benmanes/caffeine/cache/LocalCacheFactory$WSLiSMS
      12: ldc           #32                 // String edenMaximum
      14: invokestatic  #31                 // Method com/github/benmanes/caffeine/base/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      17: putstatic     #24                 // Field EDEN_MAXIMUM_OFFSET:J
      20: ldc           #29                 // class com/github/benmanes/caffeine/cache/LocalCacheFactory$WSLiSMS
      22: ldc           #33                 // String mainProtectedMaximum
      24: invokestatic  #31                 // Method com/github/benmanes/caffeine/base/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      27: putstatic     #25                 // Field MAIN_PROTECTED_MAXIMUM_OFFSET:J
      30: ldc           #29                 // class com/github/benmanes/caffeine/cache/LocalCacheFactory$WSLiSMS
      32: ldc           #34                 // String weightedSize
      34: invokestatic  #31                 // Method com/github/benmanes/caffeine/base/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      37: putstatic     #26                 // Field WEIGHTED_SIZE_OFFSET:J
      40: ldc           #29                 // class com/github/benmanes/caffeine/cache/LocalCacheFactory$WSLiSMS
      42: ldc           #35                 // String edenWeightedSize
      44: invokestatic  #31                 // Method com/github/benmanes/caffeine/base/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      47: putstatic     #27                 // Field EDEN_WEIGHTED_SIZE_OFFSET:J
      50: ldc           #29                 // class com/github/benmanes/caffeine/cache/LocalCacheFactory$WSLiSMS
      52: ldc           #36                 // String mainProtectedWeightedSize
      54: invokestatic  #31                 // Method com/github/benmanes/caffeine/base/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      57: putstatic     #28                 // Field MAIN_PROTECTED_WEIGHTED_SIZE_OFFSET:J
      60: return
}
