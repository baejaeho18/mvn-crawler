Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedEviction implements com.github.benmanes.caffeine.cache.Policy$Eviction<K, V> {
  final com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy this$0;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedEviction(com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean isWeighted();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #3                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.isWeighted:Z
       7: ireturn

  public java.util.OptionalLong weightedSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.evicts:()Z
      10: ifeq          84
      13: aload_0
      14: invokevirtual #6                  // Method isWeighted:()Z
      17: ifeq          84
      20: aload_0
      21: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      24: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      27: getfield      #7                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.evictionLock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      35: aload_0
      36: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      39: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      42: invokevirtual #9                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.adjustedWeightedSize:()J
      45: invokestatic  #10                 // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
      48: astore_1
      49: aload_0
      50: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      53: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      56: getfield      #7                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.evictionLock:Ljava/util/concurrent/locks/Lock;
      59: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      64: aload_1
      65: areturn
      66: astore_2
      67: aload_0
      68: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      71: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      74: getfield      #7                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.evictionLock:Ljava/util/concurrent/locks/Lock;
      77: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      82: aload_2
      83: athrow
      84: invokestatic  #12                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      87: areturn
    Exception table:
       from    to  target type
          35    49    66   any

  public long getMaximum();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.maximum:()J
      10: lreturn

  public void setMaximum(long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: getfield      #7                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.evictionLock:Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: aload_0
      16: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      19: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      22: lload_1
      23: invokevirtual #14                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.setMaximum:(J)V
      26: aload_0
      27: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      30: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      33: invokevirtual #15                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.maintenance:()V
      36: aload_0
      37: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      40: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      43: getfield      #7                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.evictionLock:Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: goto          72
      54: astore_3
      55: aload_0
      56: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      59: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      62: getfield      #7                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.evictionLock:Ljava/util/concurrent/locks/Lock;
      65: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      70: aload_3
      71: athrow
      72: return
    Exception table:
       from    to  target type
          15    36    54   any

  public java.util.Map<K, V> coldest(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: iload_1
       8: aload_0
       9: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      12: getfield      #16                 // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.transformer:Ljava/util/function/Function;
      15: iconst_1
      16: invokevirtual #17                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.evictionOrder:(ILjava/util/function/Function;Z)Ljava/util/Map;
      19: areturn

  public java.util.Map<K, V> hottest(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #4                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: iload_1
       8: aload_0
       9: getfield      #1                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      12: getfield      #16                 // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.transformer:Ljava/util/function/Function;
      15: iconst_0
      16: invokevirtual #17                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.evictionOrder:(ILjava/util/function/Function;Z)Ljava/util/Map;
      19: areturn
}
