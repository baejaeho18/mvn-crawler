Compiled from "NodeFactory.java"
class com.github.benmanes.caffeine.cache.NodeFactory$SStAR<K, V> extends com.github.benmanes.caffeine.cache.NodeFactory$SStA<K, V> {
  protected static final long WRITE_TIME_OFFSET;

  private volatile long writeTime;

  com.github.benmanes.caffeine.cache.NodeFactory$SStAR(K, java.lang.ref.ReferenceQueue<K>, V, java.lang.ref.ReferenceQueue<V>, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: lload         6
      10: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/NodeFactory$SStA."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)V
      13: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getstatic     #3                  // Field WRITE_TIME_OFFSET:J
      20: lload         6
      22: invokevirtual #4                  // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      25: return

  com.github.benmanes.caffeine.cache.NodeFactory$SStAR(java.lang.Object, V, java.lang.ref.ReferenceQueue<V>, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: lload         5
       8: invokespecial #5                  // Method com/github/benmanes/caffeine/cache/NodeFactory$SStA."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)V
      11: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aload_0
      15: getstatic     #3                  // Field WRITE_TIME_OFFSET:J
      18: lload         5
      20: invokevirtual #4                  // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      23: return

  public final long getWriteTime();
    Code:
       0: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #3                  // Field WRITE_TIME_OFFSET:J
       7: invokevirtual #6                  // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      10: lreturn

  public final void setWriteTime(long);
    Code:
       0: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #3                  // Field WRITE_TIME_OFFSET:J
       7: lload_1
       8: invokevirtual #4                  // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      11: return

  public final boolean casWriteTime(long, long);
    Code:
       0: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #3                  // Field WRITE_TIME_OFFSET:J
       7: lload_1
       8: lload_3
       9: invokevirtual #7                  // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      12: ireturn

  static {};
    Code:
       0: ldc           #8                  // class com/github/benmanes/caffeine/cache/NodeFactory$SStAR
       2: ldc           #9                  // String writeTime
       4: invokestatic  #10                 // Method com/github/benmanes/caffeine/base/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
       7: putstatic     #3                  // Field WRITE_TIME_OFFSET:J
      10: return
}
