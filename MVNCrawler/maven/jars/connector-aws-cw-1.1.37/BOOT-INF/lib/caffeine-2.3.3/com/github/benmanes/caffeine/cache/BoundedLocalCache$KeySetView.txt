Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$KeySetView<K, V> extends java.util.AbstractSet<K> {
  final com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V> cache;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$KeySetView(com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class com/github/benmanes/caffeine/cache/BoundedLocalCache
      12: putfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      15: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.size:()I
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: invokevirtual #6                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.clear:()V
       7: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: aload_1
       5: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: aload_1
       5: invokevirtual #8                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.util.Iterator<K> iterator();
    Code:
       0: new           #9                  // class com/github/benmanes/caffeine/cache/BoundedLocalCache$KeyIterator
       3: dup
       4: aload_0
       5: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       8: invokespecial #10                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$KeyIterator."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      11: areturn

  public java.util.Spliterator<K> spliterator();
    Code:
       0: new           #11                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache$KeySpliterator
       3: dup
       4: aload_0
       5: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       8: invokespecial #12                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$KeySpliterator."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      11: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.collectKeys:()Z
       7: ifeq          61
      10: new           #14                 // class java/util/ArrayList
      13: dup
      14: aload_0
      15: invokevirtual #15                 // Method size:()I
      18: invokespecial #16                 // Method java/util/ArrayList."<init>":(I)V
      21: astore_1
      22: aload_0
      23: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          54
      36: aload_2
      37: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: astore_3
      43: aload_1
      44: aload_3
      45: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: goto          27
      54: aload_1
      55: invokeinterface #21,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
      60: areturn
      61: aload_0
      62: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      65: getfield      #22                 // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
      68: invokevirtual #23                 // Method java/util/concurrent/ConcurrentHashMap.keySet:()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
      71: invokevirtual #24                 // Method java/util/concurrent/ConcurrentHashMap$KeySetView.toArray:()[Ljava/lang/Object;
      74: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.collectKeys:()Z
       7: ifeq          64
      10: new           #14                 // class java/util/ArrayList
      13: dup
      14: aload_0
      15: invokevirtual #15                 // Method size:()I
      18: invokespecial #16                 // Method java/util/ArrayList."<init>":(I)V
      21: astore_2
      22: aload_0
      23: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          56
      36: aload_3
      37: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: astore        4
      44: aload_2
      45: aload         4
      47: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          27
      56: aload_2
      57: aload_1
      58: invokeinterface #25,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      63: areturn
      64: aload_0
      65: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      68: getfield      #22                 // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
      71: invokevirtual #23                 // Method java/util/concurrent/ConcurrentHashMap.keySet:()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
      74: aload_1
      75: invokevirtual #26                 // Method java/util/concurrent/ConcurrentHashMap$KeySetView.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      78: areturn
}
