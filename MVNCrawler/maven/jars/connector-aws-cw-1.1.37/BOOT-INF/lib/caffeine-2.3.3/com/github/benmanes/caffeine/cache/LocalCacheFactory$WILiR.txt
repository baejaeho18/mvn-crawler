Compiled from "LocalCacheFactory.java"
final class com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiR<K, V> extends com.github.benmanes.caffeine.cache.LocalCacheFactory$WILi<K, V> {
  private final com.github.benmanes.caffeine.cache.Ticker ticker;

  private volatile long refreshAfterWriteNanos;

  private final com.github.benmanes.caffeine.cache.WriteBuffer<java.lang.Runnable> writeBuffer;

  com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiR(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/LocalCacheFactory$WILi."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;Z)V
       7: aload_0
       8: aload_1
       9: invokevirtual #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.getTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      12: putfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      15: aload_0
      16: aload_1
      17: invokevirtual #4                  // Method com/github/benmanes/caffeine/cache/Caffeine.getRefreshAfterWriteNanos:()J
      20: putfield      #5                  // Field refreshAfterWriteNanos:J
      23: aload_0
      24: new           #6                  // class com/github/benmanes/caffeine/cache/WriteBuffer
      27: dup
      28: iconst_4
      29: getstatic     #8                  // Field WRITE_BUFFER_MAX:I
      32: invokespecial #9                  // Method com/github/benmanes/caffeine/cache/WriteBuffer."<init>":(II)V
      35: putfield      #10                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/WriteBuffer;
      38: return

  public final com.github.benmanes.caffeine.cache.Ticker expirationTicker();
    Code:
       0: aload_0
       1: getfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
       4: areturn

  protected final boolean refreshAfterWrite();
    Code:
       0: iconst_1
       1: ireturn

  protected final long refreshAfterWriteNanos();
    Code:
       0: aload_0
       1: getfield      #5                  // Field refreshAfterWriteNanos:J
       4: lreturn

  protected final void setRefreshAfterWriteNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field refreshAfterWriteNanos:J
       5: return

  protected final com.github.benmanes.caffeine.cache.WriteBuffer<java.lang.Runnable> writeBuffer();
    Code:
       0: aload_0
       1: getfield      #10                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/WriteBuffer;
       4: areturn

  protected final boolean buffersWrites();
    Code:
       0: iconst_1
       1: ireturn
}
