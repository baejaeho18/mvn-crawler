Compiled from "NodeFactory.java"
class com.github.benmanes.caffeine.cache.NodeFactory$WWA<K, V> extends com.github.benmanes.caffeine.cache.NodeFactory$WW<K, V> {
  protected static final long ACCESS_TIME_OFFSET;

  private volatile long accessTime;

  private com.github.benmanes.caffeine.cache.Node<K, V> previousInAccessOrder;

  private com.github.benmanes.caffeine.cache.Node<K, V> nextInAccessOrder;

  com.github.benmanes.caffeine.cache.NodeFactory$WWA(K, java.lang.ref.ReferenceQueue<K>, V, java.lang.ref.ReferenceQueue<V>, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: lload         6
      10: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/NodeFactory$WW."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)V
      13: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getstatic     #3                  // Field ACCESS_TIME_OFFSET:J
      20: lload         6
      22: invokevirtual #4                  // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      25: return

  com.github.benmanes.caffeine.cache.NodeFactory$WWA(java.lang.Object, V, java.lang.ref.ReferenceQueue<V>, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: lload         5
       8: invokespecial #5                  // Method com/github/benmanes/caffeine/cache/NodeFactory$WW."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)V
      11: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aload_0
      15: getstatic     #3                  // Field ACCESS_TIME_OFFSET:J
      18: lload         5
      20: invokevirtual #4                  // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      23: return

  public final long getAccessTime();
    Code:
       0: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #3                  // Field ACCESS_TIME_OFFSET:J
       7: invokevirtual #6                  // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      10: lreturn

  public final void setAccessTime(long);
    Code:
       0: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #3                  // Field ACCESS_TIME_OFFSET:J
       7: lload_1
       8: invokevirtual #4                  // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      11: return

  public final com.github.benmanes.caffeine.cache.Node<K, V> getPreviousInAccessOrder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field previousInAccessOrder:Lcom/github/benmanes/caffeine/cache/Node;
       4: areturn

  public final void setPreviousInAccessOrder(com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field previousInAccessOrder:Lcom/github/benmanes/caffeine/cache/Node;
       5: return

  public final com.github.benmanes.caffeine.cache.Node<K, V> getNextInAccessOrder();
    Code:
       0: aload_0
       1: getfield      #8                  // Field nextInAccessOrder:Lcom/github/benmanes/caffeine/cache/Node;
       4: areturn

  public final void setNextInAccessOrder(com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field nextInAccessOrder:Lcom/github/benmanes/caffeine/cache/Node;
       5: return

  public void setNextInAccessOrder(com.github.benmanes.caffeine.cache.AccessOrderDeque$AccessOrder);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class com/github/benmanes/caffeine/cache/Node
       5: invokevirtual #10                 // Method setNextInAccessOrder:(Lcom/github/benmanes/caffeine/cache/Node;)V
       8: return

  public com.github.benmanes.caffeine.cache.AccessOrderDeque$AccessOrder getNextInAccessOrder();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
       4: areturn

  public void setPreviousInAccessOrder(com.github.benmanes.caffeine.cache.AccessOrderDeque$AccessOrder);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class com/github/benmanes/caffeine/cache/Node
       5: invokevirtual #12                 // Method setPreviousInAccessOrder:(Lcom/github/benmanes/caffeine/cache/Node;)V
       8: return

  public com.github.benmanes.caffeine.cache.AccessOrderDeque$AccessOrder getPreviousInAccessOrder();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
       4: areturn

  static {};
    Code:
       0: ldc           #14                 // class com/github/benmanes/caffeine/cache/NodeFactory$WWA
       2: ldc           #15                 // String accessTime
       4: invokestatic  #16                 // Method com/github/benmanes/caffeine/base/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
       7: putstatic     #3                  // Field ACCESS_TIME_OFFSET:J
      10: return
}
