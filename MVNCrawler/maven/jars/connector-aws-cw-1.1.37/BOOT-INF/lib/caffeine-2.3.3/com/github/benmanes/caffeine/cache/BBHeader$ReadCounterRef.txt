Compiled from "BoundedBuffer.java"
abstract class com.github.benmanes.caffeine.cache.BBHeader$ReadCounterRef extends com.github.benmanes.caffeine.cache.BBHeader$PadReadCounter {
  static final long READ_OFFSET;

  volatile long readCounter;

  com.github.benmanes.caffeine.cache.BBHeader$ReadCounterRef();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/BBHeader$PadReadCounter."<init>":()V
       4: return

  void lazySetReadCounter(long);
    Code:
       0: getstatic     #2                  // Field com/github/benmanes/caffeine/base/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #3                  // Field READ_OFFSET:J
       7: lload_1
       8: invokevirtual #4                  // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      11: return

  static {};
    Code:
       0: ldc           #5                  // class com/github/benmanes/caffeine/cache/BBHeader$ReadCounterRef
       2: ldc           #6                  // String readCounter
       4: invokestatic  #7                  // Method com/github/benmanes/caffeine/base/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
       7: putstatic     #3                  // Field READ_OFFSET:J
      10: return
}
