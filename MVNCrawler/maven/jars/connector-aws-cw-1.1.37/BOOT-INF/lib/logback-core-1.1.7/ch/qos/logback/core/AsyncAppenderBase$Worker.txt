Compiled from "AsyncAppenderBase.java"
class ch.qos.logback.core.AsyncAppenderBase$Worker extends java.lang.Thread {
  final ch.qos.logback.core.AsyncAppenderBase this$0;

  ch.qos.logback.core.AsyncAppenderBase$Worker(ch.qos.logback.core.AsyncAppenderBase);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lch/qos/logback/core/AsyncAppenderBase;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Thread."<init>":()V
       9: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lch/qos/logback/core/AsyncAppenderBase;
       4: astore_1
       5: aload_1
       6: getfield      #3                  // Field ch/qos/logback/core/AsyncAppenderBase.aai:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       9: astore_2
      10: aload_1
      11: invokevirtual #4                  // Method ch/qos/logback/core/AsyncAppenderBase.isStarted:()Z
      14: ifeq          40
      17: aload_1
      18: getfield      #5                  // Field ch/qos/logback/core/AsyncAppenderBase.blockingQueue:Ljava/util/concurrent/BlockingQueue;
      21: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      26: astore_3
      27: aload_2
      28: aload_3
      29: invokevirtual #7                  // Method ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders:(Ljava/lang/Object;)I
      32: pop
      33: goto          10
      36: astore_3
      37: goto          40
      40: aload_0
      41: getfield      #1                  // Field this$0:Lch/qos/logback/core/AsyncAppenderBase;
      44: ldc           #9                  // String Worker thread will flush remaining events before exiting.
      46: invokevirtual #10                 // Method ch/qos/logback/core/AsyncAppenderBase.addInfo:(Ljava/lang/String;)V
      49: aload_1
      50: getfield      #5                  // Field ch/qos/logback/core/AsyncAppenderBase.blockingQueue:Ljava/util/concurrent/BlockingQueue;
      53: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.iterator:()Ljava/util/Iterator;
      58: astore_3
      59: aload_3
      60: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          98
      68: aload_3
      69: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: astore        4
      76: aload_2
      77: aload         4
      79: invokevirtual #7                  // Method ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders:(Ljava/lang/Object;)I
      82: pop
      83: aload_1
      84: getfield      #5                  // Field ch/qos/logback/core/AsyncAppenderBase.blockingQueue:Ljava/util/concurrent/BlockingQueue;
      87: aload         4
      89: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.remove:(Ljava/lang/Object;)Z
      94: pop
      95: goto          59
      98: aload_2
      99: invokevirtual #15                 // Method ch/qos/logback/core/spi/AppenderAttachableImpl.detachAndStopAllAppenders:()V
     102: return
    Exception table:
       from    to  target type
          17    33    36   Class java/lang/InterruptedException
}
