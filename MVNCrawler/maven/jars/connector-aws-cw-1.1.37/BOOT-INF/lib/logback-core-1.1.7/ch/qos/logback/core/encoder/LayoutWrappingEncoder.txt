Compiled from "LayoutWrappingEncoder.java"
public class ch.qos.logback.core.encoder.LayoutWrappingEncoder<E> extends ch.qos.logback.core.encoder.EncoderBase<E> {
  protected ch.qos.logback.core.Layout<E> layout;

  private java.nio.charset.Charset charset;

  private boolean immediateFlush;

  public ch.qos.logback.core.encoder.LayoutWrappingEncoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/encoder/EncoderBase."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field immediateFlush:Z
       9: return

  public void setImmediateFlush(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field immediateFlush:Z
       5: return

  public boolean isImmediateFlush();
    Code:
       0: aload_0
       1: getfield      #2                  // Field immediateFlush:Z
       4: ireturn

  public ch.qos.logback.core.Layout<E> getLayout();
    Code:
       0: aload_0
       1: getfield      #3                  // Field layout:Lch/qos/logback/core/Layout;
       4: areturn

  public void setLayout(ch.qos.logback.core.Layout<E>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field layout:Lch/qos/logback/core/Layout;
       5: return

  public java.nio.charset.Charset getCharset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field charset:Ljava/nio/charset/Charset;
       4: areturn

  public void setCharset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field charset:Ljava/nio/charset/Charset;
       5: return

  public void init(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method ch/qos/logback/core/encoder/EncoderBase.init:(Ljava/io/OutputStream;)V
       5: aload_0
       6: invokevirtual #6                  // Method writeHeader:()V
       9: return

  void writeHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field layout:Lch/qos/logback/core/Layout;
       4: ifnull        87
       7: aload_0
       8: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
      11: ifnull        87
      14: new           #8                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      21: astore_1
      22: aload_0
      23: aload_1
      24: aload_0
      25: getfield      #3                  // Field layout:Lch/qos/logback/core/Layout;
      28: invokeinterface #10,  1           // InterfaceMethod ch/qos/logback/core/Layout.getFileHeader:()Ljava/lang/String;
      33: invokespecial #11                 // Method appendIfNotNull:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
      36: aload_0
      37: aload_1
      38: aload_0
      39: getfield      #3                  // Field layout:Lch/qos/logback/core/Layout;
      42: invokeinterface #12,  1           // InterfaceMethod ch/qos/logback/core/Layout.getPresentationHeader:()Ljava/lang/String;
      47: invokespecial #11                 // Method appendIfNotNull:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
      50: aload_1
      51: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
      54: ifle          87
      57: aload_1
      58: getstatic     #14                 // Field ch/qos/logback/core/CoreConstants.LINE_SEPARATOR:Ljava/lang/String;
      61: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: pop
      65: aload_0
      66: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
      69: aload_0
      70: aload_1
      71: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #17                 // Method convertToBytes:(Ljava/lang/String;)[B
      77: invokevirtual #18                 // Method java/io/OutputStream.write:([B)V
      80: aload_0
      81: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
      84: invokevirtual #19                 // Method java/io/OutputStream.flush:()V
      87: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method writeFooter:()V
       4: return

  void writeFooter() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field layout:Lch/qos/logback/core/Layout;
       4: ifnull        79
       7: aload_0
       8: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
      11: ifnull        79
      14: new           #8                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      21: astore_1
      22: aload_0
      23: aload_1
      24: aload_0
      25: getfield      #3                  // Field layout:Lch/qos/logback/core/Layout;
      28: invokeinterface #21,  1           // InterfaceMethod ch/qos/logback/core/Layout.getPresentationFooter:()Ljava/lang/String;
      33: invokespecial #11                 // Method appendIfNotNull:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
      36: aload_0
      37: aload_1
      38: aload_0
      39: getfield      #3                  // Field layout:Lch/qos/logback/core/Layout;
      42: invokeinterface #22,  1           // InterfaceMethod ch/qos/logback/core/Layout.getFileFooter:()Ljava/lang/String;
      47: invokespecial #11                 // Method appendIfNotNull:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
      50: aload_1
      51: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
      54: ifle          79
      57: aload_0
      58: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
      61: aload_0
      62: aload_1
      63: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #17                 // Method convertToBytes:(Ljava/lang/String;)[B
      69: invokevirtual #18                 // Method java/io/OutputStream.write:([B)V
      72: aload_0
      73: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
      76: invokevirtual #19                 // Method java/io/OutputStream.flush:()V
      79: return

  private byte[] convertToBytes(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field charset:Ljava/nio/charset/Charset;
       4: ifnonnull     12
       7: aload_1
       8: invokevirtual #23                 // Method java/lang/String.getBytes:()[B
      11: areturn
      12: aload_1
      13: aload_0
      14: getfield      #4                  // Field charset:Ljava/nio/charset/Charset;
      17: invokevirtual #24                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      20: invokevirtual #25                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      23: areturn
      24: astore_2
      25: new           #27                 // class java/lang/IllegalStateException
      28: dup
      29: ldc           #28                 // String An existing charset cannot possibly be unsupported.
      31: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      34: athrow
    Exception table:
       from    to  target type
          12    23    24   Class java/io/UnsupportedEncodingException

  public void doEncode(E) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field layout:Lch/qos/logback/core/Layout;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod ch/qos/logback/core/Layout.doLayout:(Ljava/lang/Object;)Ljava/lang/String;
      10: astore_2
      11: aload_0
      12: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
      15: aload_0
      16: aload_2
      17: invokespecial #17                 // Method convertToBytes:(Ljava/lang/String;)[B
      20: invokevirtual #18                 // Method java/io/OutputStream.write:([B)V
      23: aload_0
      24: getfield      #2                  // Field immediateFlush:Z
      27: ifeq          37
      30: aload_0
      31: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
      34: invokevirtual #19                 // Method java/io/OutputStream.flush:()V
      37: return

  public boolean isStarted();
    Code:
       0: iconst_0
       1: ireturn

  public void start();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #31                 // Field started:Z
       5: return

  public void stop();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #31                 // Field started:Z
       5: aload_0
       6: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
       9: ifnull        23
      12: aload_0
      13: getfield      #7                  // Field outputStream:Ljava/io/OutputStream;
      16: invokevirtual #19                 // Method java/io/OutputStream.flush:()V
      19: goto          23
      22: astore_1
      23: return
    Exception table:
       from    to  target type
          12    19    22   Class java/io/IOException

  private void appendIfNotNull(java.lang.StringBuilder, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        10
       4: aload_1
       5: aload_2
       6: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       9: pop
      10: return
}
