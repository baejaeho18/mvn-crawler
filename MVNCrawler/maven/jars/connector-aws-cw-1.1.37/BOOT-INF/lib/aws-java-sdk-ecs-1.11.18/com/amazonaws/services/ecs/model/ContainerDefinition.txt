Compiled from "ContainerDefinition.java"
public class com.amazonaws.services.ecs.model.ContainerDefinition implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String name;

  private java.lang.String image;

  private java.lang.Integer cpu;

  private java.lang.Integer memory;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> links;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ecs.model.PortMapping> portMappings;

  private java.lang.Boolean essential;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> entryPoint;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> command;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ecs.model.KeyValuePair> environment;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ecs.model.MountPoint> mountPoints;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ecs.model.VolumeFrom> volumesFrom;

  private java.lang.String hostname;

  private java.lang.String user;

  private java.lang.String workingDirectory;

  private java.lang.Boolean disableNetworking;

  private java.lang.Boolean privileged;

  private java.lang.Boolean readonlyRootFilesystem;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> dnsServers;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> dnsSearchDomains;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ecs.model.HostEntry> extraHosts;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> dockerSecurityOptions;

  private java.util.Map<java.lang.String, java.lang.String> dockerLabels;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ecs.model.Ulimit> ulimits;

  private com.amazonaws.services.ecs.model.LogConfiguration logConfiguration;

  public com.amazonaws.services.ecs.model.ContainerDefinition();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field name:Ljava/lang/String;
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setImage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field image:Ljava/lang/String;
       5: return

  public java.lang.String getImage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field image:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withImage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setImage:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setCpu(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field cpu:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getCpu();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cpu:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withCpu(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setCpu:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setMemory(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field memory:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMemory();
    Code:
       0: aload_0
       1: getfield      #8                  // Field memory:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withMemory(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setMemory:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getLinks();
    Code:
       0: aload_0
       1: getfield      #10                 // Field links:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #10                 // Field links:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #10                 // Field links:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setLinks(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #10                 // Field links:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #10                 // Field links:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withLinks(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #10                 // Field links:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #15                 // Method setLinks:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #10                 // Field links:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withLinks(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setLinks:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ecs.model.PortMapping> getPortMappings();
    Code:
       0: aload_0
       1: getfield      #17                 // Field portMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #17                 // Field portMappings:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #17                 // Field portMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setPortMappings(java.util.Collection<com.amazonaws.services.ecs.model.PortMapping>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #17                 // Field portMappings:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #17                 // Field portMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withPortMappings(com.amazonaws.services.ecs.model.PortMapping...);
    Code:
       0: aload_0
       1: getfield      #17                 // Field portMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #18                 // Method setPortMappings:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #17                 // Field portMappings:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withPortMappings(java.util.Collection<com.amazonaws.services.ecs.model.PortMapping>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method setPortMappings:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setEssential(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field essential:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getEssential();
    Code:
       0: aload_0
       1: getfield      #19                 // Field essential:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withEssential(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setEssential:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isEssential();
    Code:
       0: aload_0
       1: getfield      #19                 // Field essential:Ljava/lang/Boolean;
       4: areturn

  public java.util.List<java.lang.String> getEntryPoint();
    Code:
       0: aload_0
       1: getfield      #21                 // Field entryPoint:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #21                 // Field entryPoint:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #21                 // Field entryPoint:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setEntryPoint(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #21                 // Field entryPoint:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #21                 // Field entryPoint:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withEntryPoint(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #21                 // Field entryPoint:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #22                 // Method setEntryPoint:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #21                 // Field entryPoint:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withEntryPoint(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method setEntryPoint:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getCommand();
    Code:
       0: aload_0
       1: getfield      #23                 // Field command:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #23                 // Field command:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #23                 // Field command:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setCommand(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #23                 // Field command:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #23                 // Field command:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withCommand(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #23                 // Field command:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #24                 // Method setCommand:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #23                 // Field command:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withCommand(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setCommand:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ecs.model.KeyValuePair> getEnvironment();
    Code:
       0: aload_0
       1: getfield      #25                 // Field environment:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #25                 // Field environment:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #25                 // Field environment:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setEnvironment(java.util.Collection<com.amazonaws.services.ecs.model.KeyValuePair>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #25                 // Field environment:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #25                 // Field environment:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withEnvironment(com.amazonaws.services.ecs.model.KeyValuePair...);
    Code:
       0: aload_0
       1: getfield      #25                 // Field environment:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #26                 // Method setEnvironment:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #25                 // Field environment:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withEnvironment(java.util.Collection<com.amazonaws.services.ecs.model.KeyValuePair>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setEnvironment:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ecs.model.MountPoint> getMountPoints();
    Code:
       0: aload_0
       1: getfield      #27                 // Field mountPoints:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #27                 // Field mountPoints:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #27                 // Field mountPoints:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setMountPoints(java.util.Collection<com.amazonaws.services.ecs.model.MountPoint>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #27                 // Field mountPoints:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #27                 // Field mountPoints:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withMountPoints(com.amazonaws.services.ecs.model.MountPoint...);
    Code:
       0: aload_0
       1: getfield      #27                 // Field mountPoints:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #28                 // Method setMountPoints:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #27                 // Field mountPoints:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withMountPoints(java.util.Collection<com.amazonaws.services.ecs.model.MountPoint>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setMountPoints:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ecs.model.VolumeFrom> getVolumesFrom();
    Code:
       0: aload_0
       1: getfield      #29                 // Field volumesFrom:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #29                 // Field volumesFrom:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #29                 // Field volumesFrom:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setVolumesFrom(java.util.Collection<com.amazonaws.services.ecs.model.VolumeFrom>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #29                 // Field volumesFrom:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #29                 // Field volumesFrom:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withVolumesFrom(com.amazonaws.services.ecs.model.VolumeFrom...);
    Code:
       0: aload_0
       1: getfield      #29                 // Field volumesFrom:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #30                 // Method setVolumesFrom:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #29                 // Field volumesFrom:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withVolumesFrom(java.util.Collection<com.amazonaws.services.ecs.model.VolumeFrom>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setVolumesFrom:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setHostname(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field hostname:Ljava/lang/String;
       5: return

  public java.lang.String getHostname();
    Code:
       0: aload_0
       1: getfield      #31                 // Field hostname:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withHostname(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method setHostname:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field user:Ljava/lang/String;
       5: return

  public java.lang.String getUser();
    Code:
       0: aload_0
       1: getfield      #33                 // Field user:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method setUser:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setWorkingDirectory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field workingDirectory:Ljava/lang/String;
       5: return

  public java.lang.String getWorkingDirectory();
    Code:
       0: aload_0
       1: getfield      #35                 // Field workingDirectory:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withWorkingDirectory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setWorkingDirectory:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setDisableNetworking(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field disableNetworking:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getDisableNetworking();
    Code:
       0: aload_0
       1: getfield      #37                 // Field disableNetworking:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withDisableNetworking(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setDisableNetworking:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isDisableNetworking();
    Code:
       0: aload_0
       1: getfield      #37                 // Field disableNetworking:Ljava/lang/Boolean;
       4: areturn

  public void setPrivileged(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field privileged:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getPrivileged();
    Code:
       0: aload_0
       1: getfield      #39                 // Field privileged:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withPrivileged(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setPrivileged:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isPrivileged();
    Code:
       0: aload_0
       1: getfield      #39                 // Field privileged:Ljava/lang/Boolean;
       4: areturn

  public void setReadonlyRootFilesystem(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field readonlyRootFilesystem:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getReadonlyRootFilesystem();
    Code:
       0: aload_0
       1: getfield      #41                 // Field readonlyRootFilesystem:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withReadonlyRootFilesystem(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method setReadonlyRootFilesystem:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isReadonlyRootFilesystem();
    Code:
       0: aload_0
       1: getfield      #41                 // Field readonlyRootFilesystem:Ljava/lang/Boolean;
       4: areturn

  public java.util.List<java.lang.String> getDnsServers();
    Code:
       0: aload_0
       1: getfield      #43                 // Field dnsServers:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #43                 // Field dnsServers:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #43                 // Field dnsServers:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setDnsServers(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #43                 // Field dnsServers:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #43                 // Field dnsServers:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withDnsServers(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #43                 // Field dnsServers:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #44                 // Method setDnsServers:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #43                 // Field dnsServers:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withDnsServers(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setDnsServers:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getDnsSearchDomains();
    Code:
       0: aload_0
       1: getfield      #45                 // Field dnsSearchDomains:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #45                 // Field dnsSearchDomains:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #45                 // Field dnsSearchDomains:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setDnsSearchDomains(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #45                 // Field dnsSearchDomains:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #45                 // Field dnsSearchDomains:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withDnsSearchDomains(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #45                 // Field dnsSearchDomains:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #46                 // Method setDnsSearchDomains:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #45                 // Field dnsSearchDomains:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withDnsSearchDomains(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setDnsSearchDomains:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ecs.model.HostEntry> getExtraHosts();
    Code:
       0: aload_0
       1: getfield      #47                 // Field extraHosts:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #47                 // Field extraHosts:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #47                 // Field extraHosts:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setExtraHosts(java.util.Collection<com.amazonaws.services.ecs.model.HostEntry>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #47                 // Field extraHosts:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #47                 // Field extraHosts:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withExtraHosts(com.amazonaws.services.ecs.model.HostEntry...);
    Code:
       0: aload_0
       1: getfield      #47                 // Field extraHosts:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #48                 // Method setExtraHosts:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #47                 // Field extraHosts:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withExtraHosts(java.util.Collection<com.amazonaws.services.ecs.model.HostEntry>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method setExtraHosts:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getDockerSecurityOptions();
    Code:
       0: aload_0
       1: getfield      #49                 // Field dockerSecurityOptions:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #49                 // Field dockerSecurityOptions:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #49                 // Field dockerSecurityOptions:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setDockerSecurityOptions(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #49                 // Field dockerSecurityOptions:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #49                 // Field dockerSecurityOptions:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withDockerSecurityOptions(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #49                 // Field dockerSecurityOptions:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #50                 // Method setDockerSecurityOptions:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #49                 // Field dockerSecurityOptions:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withDockerSecurityOptions(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setDockerSecurityOptions:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getDockerLabels();
    Code:
       0: aload_0
       1: getfield      #51                 // Field dockerLabels:Ljava/util/Map;
       4: areturn

  public void setDockerLabels(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field dockerLabels:Ljava/util/Map;
       5: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withDockerLabels(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method setDockerLabels:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition addDockerLabelsEntry(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #51                 // Field dockerLabels:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #53                 // class java/util/HashMap
      12: dup
      13: invokespecial #54                 // Method java/util/HashMap."<init>":()V
      16: putfield      #51                 // Field dockerLabels:Ljava/util/Map;
      19: aload_0
      20: getfield      #51                 // Field dockerLabels:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #55,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #56                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #57                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #59                 // String Duplicated keys (
      45: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #61                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #62                 // String ) are provided.
      57: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #51                 // Field dockerLabels:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition clearDockerLabelsEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #51                 // Field dockerLabels:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ecs.model.Ulimit> getUlimits();
    Code:
       0: aload_0
       1: getfield      #66                 // Field ulimits:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #66                 // Field ulimits:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #66                 // Field ulimits:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setUlimits(java.util.Collection<com.amazonaws.services.ecs.model.Ulimit>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #66                 // Field ulimits:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #11                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #66                 // Field ulimits:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ecs.model.ContainerDefinition withUlimits(com.amazonaws.services.ecs.model.Ulimit...);
    Code:
       0: aload_0
       1: getfield      #66                 // Field ulimits:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #14                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #67                 // Method setUlimits:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #66                 // Field ulimits:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #16                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withUlimits(java.util.Collection<com.amazonaws.services.ecs.model.Ulimit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method setUlimits:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setLogConfiguration(com.amazonaws.services.ecs.model.LogConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field logConfiguration:Lcom/amazonaws/services/ecs/model/LogConfiguration;
       5: return

  public com.amazonaws.services.ecs.model.LogConfiguration getLogConfiguration();
    Code:
       0: aload_0
       1: getfield      #68                 // Field logConfiguration:Lcom/amazonaws/services/ecs/model/LogConfiguration;
       4: areturn

  public com.amazonaws.services.ecs.model.ContainerDefinition withLogConfiguration(com.amazonaws.services.ecs.model.LogConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method setLogConfiguration:(Lcom/amazonaws/services/ecs/model/LogConfiguration;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #57                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #70                 // String {
      11: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #71                 // Method getName:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #57                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #72                 // String Name:
      32: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #71                 // Method getName:()Ljava/lang/String;
      39: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #73                 // String ,
      44: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #74                 // Method getImage:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #57                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #75                 // String Image:
      71: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #74                 // Method getImage:()Ljava/lang/String;
      78: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #73                 // String ,
      83: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #76                 // Method getCpu:()Ljava/lang/Integer;
      97: ifnull        132
     100: aload_1
     101: new           #57                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #77                 // String Cpu:
     110: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #76                 // Method getCpu:()Ljava/lang/Integer;
     117: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #73                 // String ,
     122: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #79                 // Method getMemory:()Ljava/lang/Integer;
     136: ifnull        171
     139: aload_1
     140: new           #57                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #80                 // String Memory:
     149: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #79                 // Method getMemory:()Ljava/lang/Integer;
     156: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #73                 // String ,
     161: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #81                 // Method getLinks:()Ljava/util/List;
     175: ifnull        210
     178: aload_1
     179: new           #57                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #82                 // String Links:
     188: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #81                 // Method getLinks:()Ljava/util/List;
     195: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     198: ldc           #73                 // String ,
     200: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #83                 // Method getPortMappings:()Ljava/util/List;
     214: ifnull        249
     217: aload_1
     218: new           #57                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #84                 // String PortMappings:
     227: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #83                 // Method getPortMappings:()Ljava/util/List;
     234: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #73                 // String ,
     239: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #85                 // Method getEssential:()Ljava/lang/Boolean;
     253: ifnull        288
     256: aload_1
     257: new           #57                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #86                 // String Essential:
     266: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #85                 // Method getEssential:()Ljava/lang/Boolean;
     273: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #73                 // String ,
     278: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #87                 // Method getEntryPoint:()Ljava/util/List;
     292: ifnull        327
     295: aload_1
     296: new           #57                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #88                 // String EntryPoint:
     305: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #87                 // Method getEntryPoint:()Ljava/util/List;
     312: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #73                 // String ,
     317: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #89                 // Method getCommand:()Ljava/util/List;
     331: ifnull        366
     334: aload_1
     335: new           #57                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #90                 // String Command:
     344: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #89                 // Method getCommand:()Ljava/util/List;
     351: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     354: ldc           #73                 // String ,
     356: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #91                 // Method getEnvironment:()Ljava/util/List;
     370: ifnull        405
     373: aload_1
     374: new           #57                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #92                 // String Environment:
     383: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #91                 // Method getEnvironment:()Ljava/util/List;
     390: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     393: ldc           #73                 // String ,
     395: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #93                 // Method getMountPoints:()Ljava/util/List;
     409: ifnull        444
     412: aload_1
     413: new           #57                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #94                 // String MountPoints:
     422: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #93                 // Method getMountPoints:()Ljava/util/List;
     429: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     432: ldc           #73                 // String ,
     434: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #95                 // Method getVolumesFrom:()Ljava/util/List;
     448: ifnull        483
     451: aload_1
     452: new           #57                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #96                 // String VolumesFrom:
     461: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #95                 // Method getVolumesFrom:()Ljava/util/List;
     468: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     471: ldc           #73                 // String ,
     473: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #97                 // Method getHostname:()Ljava/lang/String;
     487: ifnull        522
     490: aload_1
     491: new           #57                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #98                 // String Hostname:
     500: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #97                 // Method getHostname:()Ljava/lang/String;
     507: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     510: ldc           #73                 // String ,
     512: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #99                 // Method getUser:()Ljava/lang/String;
     526: ifnull        561
     529: aload_1
     530: new           #57                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #100                // String User:
     539: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #99                 // Method getUser:()Ljava/lang/String;
     546: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     549: ldc           #73                 // String ,
     551: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #101                // Method getWorkingDirectory:()Ljava/lang/String;
     565: ifnull        600
     568: aload_1
     569: new           #57                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #102                // String WorkingDirectory:
     578: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #101                // Method getWorkingDirectory:()Ljava/lang/String;
     585: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     588: ldc           #73                 // String ,
     590: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #103                // Method getDisableNetworking:()Ljava/lang/Boolean;
     604: ifnull        639
     607: aload_1
     608: new           #57                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #104                // String DisableNetworking:
     617: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #103                // Method getDisableNetworking:()Ljava/lang/Boolean;
     624: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     627: ldc           #73                 // String ,
     629: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     632: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     635: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     638: pop
     639: aload_0
     640: invokevirtual #105                // Method getPrivileged:()Ljava/lang/Boolean;
     643: ifnull        678
     646: aload_1
     647: new           #57                 // class java/lang/StringBuilder
     650: dup
     651: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     654: ldc           #106                // String Privileged:
     656: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     659: aload_0
     660: invokevirtual #105                // Method getPrivileged:()Ljava/lang/Boolean;
     663: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     666: ldc           #73                 // String ,
     668: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     671: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     674: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     677: pop
     678: aload_0
     679: invokevirtual #107                // Method getReadonlyRootFilesystem:()Ljava/lang/Boolean;
     682: ifnull        717
     685: aload_1
     686: new           #57                 // class java/lang/StringBuilder
     689: dup
     690: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     693: ldc           #108                // String ReadonlyRootFilesystem:
     695: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     698: aload_0
     699: invokevirtual #107                // Method getReadonlyRootFilesystem:()Ljava/lang/Boolean;
     702: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     705: ldc           #73                 // String ,
     707: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     710: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     713: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     716: pop
     717: aload_0
     718: invokevirtual #109                // Method getDnsServers:()Ljava/util/List;
     721: ifnull        756
     724: aload_1
     725: new           #57                 // class java/lang/StringBuilder
     728: dup
     729: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     732: ldc           #110                // String DnsServers:
     734: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     737: aload_0
     738: invokevirtual #109                // Method getDnsServers:()Ljava/util/List;
     741: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     744: ldc           #73                 // String ,
     746: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     749: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     752: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     755: pop
     756: aload_0
     757: invokevirtual #111                // Method getDnsSearchDomains:()Ljava/util/List;
     760: ifnull        795
     763: aload_1
     764: new           #57                 // class java/lang/StringBuilder
     767: dup
     768: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     771: ldc           #112                // String DnsSearchDomains:
     773: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     776: aload_0
     777: invokevirtual #111                // Method getDnsSearchDomains:()Ljava/util/List;
     780: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     783: ldc           #73                 // String ,
     785: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     788: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     791: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     794: pop
     795: aload_0
     796: invokevirtual #113                // Method getExtraHosts:()Ljava/util/List;
     799: ifnull        834
     802: aload_1
     803: new           #57                 // class java/lang/StringBuilder
     806: dup
     807: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     810: ldc           #114                // String ExtraHosts:
     812: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     815: aload_0
     816: invokevirtual #113                // Method getExtraHosts:()Ljava/util/List;
     819: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     822: ldc           #73                 // String ,
     824: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     827: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     830: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     833: pop
     834: aload_0
     835: invokevirtual #115                // Method getDockerSecurityOptions:()Ljava/util/List;
     838: ifnull        873
     841: aload_1
     842: new           #57                 // class java/lang/StringBuilder
     845: dup
     846: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     849: ldc           #116                // String DockerSecurityOptions:
     851: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     854: aload_0
     855: invokevirtual #115                // Method getDockerSecurityOptions:()Ljava/util/List;
     858: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     861: ldc           #73                 // String ,
     863: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     866: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     869: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     872: pop
     873: aload_0
     874: invokevirtual #117                // Method getDockerLabels:()Ljava/util/Map;
     877: ifnull        912
     880: aload_1
     881: new           #57                 // class java/lang/StringBuilder
     884: dup
     885: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     888: ldc           #118                // String DockerLabels:
     890: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     893: aload_0
     894: invokevirtual #117                // Method getDockerLabels:()Ljava/util/Map;
     897: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     900: ldc           #73                 // String ,
     902: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     905: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     908: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     911: pop
     912: aload_0
     913: invokevirtual #119                // Method getUlimits:()Ljava/util/List;
     916: ifnull        951
     919: aload_1
     920: new           #57                 // class java/lang/StringBuilder
     923: dup
     924: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     927: ldc           #120                // String Ulimits:
     929: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     932: aload_0
     933: invokevirtual #119                // Method getUlimits:()Ljava/util/List;
     936: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     939: ldc           #73                 // String ,
     941: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     944: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     947: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     950: pop
     951: aload_0
     952: invokevirtual #121                // Method getLogConfiguration:()Lcom/amazonaws/services/ecs/model/LogConfiguration;
     955: ifnull        985
     958: aload_1
     959: new           #57                 // class java/lang/StringBuilder
     962: dup
     963: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     966: ldc           #122                // String LogConfiguration:
     968: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     971: aload_0
     972: invokevirtual #121                // Method getLogConfiguration:()Lcom/amazonaws/services/ecs/model/LogConfiguration;
     975: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     978: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     981: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     984: pop
     985: aload_1
     986: ldc           #123                // String }
     988: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     991: pop
     992: aload_1
     993: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     996: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #124                // class com/amazonaws/services/ecs/model/ContainerDefinition
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #124                // class com/amazonaws/services/ecs/model/ContainerDefinition
      26: astore_2
      27: aload_2
      28: invokevirtual #71                 // Method getName:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #71                 // Method getName:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #71                 // Method getName:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #71                 // Method getName:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #71                 // Method getName:()Ljava/lang/String;
      72: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #74                 // Method getImage:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #74                 // Method getImage:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #74                 // Method getImage:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #74                 // Method getImage:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #74                 // Method getImage:()Ljava/lang/String;
     125: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #76                 // Method getCpu:()Ljava/lang/Integer;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #76                 // Method getCpu:()Ljava/lang/Integer;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #76                 // Method getCpu:()Ljava/lang/Integer;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #76                 // Method getCpu:()Ljava/lang/Integer;
     174: aload_0
     175: invokevirtual #76                 // Method getCpu:()Ljava/lang/Integer;
     178: invokevirtual #126                // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #79                 // Method getMemory:()Ljava/lang/Integer;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #79                 // Method getMemory:()Ljava/lang/Integer;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #79                 // Method getMemory:()Ljava/lang/Integer;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #79                 // Method getMemory:()Ljava/lang/Integer;
     227: aload_0
     228: invokevirtual #79                 // Method getMemory:()Ljava/lang/Integer;
     231: invokevirtual #126                // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #81                 // Method getLinks:()Ljava/util/List;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #81                 // Method getLinks:()Ljava/util/List;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #81                 // Method getLinks:()Ljava/util/List;
     273: ifnull        294
     276: aload_2
     277: invokevirtual #81                 // Method getLinks:()Ljava/util/List;
     280: aload_0
     281: invokevirtual #81                 // Method getLinks:()Ljava/util/List;
     284: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     289: ifne          294
     292: iconst_0
     293: ireturn
     294: aload_2
     295: invokevirtual #83                 // Method getPortMappings:()Ljava/util/List;
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: aload_0
     307: invokevirtual #83                 // Method getPortMappings:()Ljava/util/List;
     310: ifnonnull     317
     313: iconst_1
     314: goto          318
     317: iconst_0
     318: ixor
     319: ifeq          324
     322: iconst_0
     323: ireturn
     324: aload_2
     325: invokevirtual #83                 // Method getPortMappings:()Ljava/util/List;
     328: ifnull        349
     331: aload_2
     332: invokevirtual #83                 // Method getPortMappings:()Ljava/util/List;
     335: aload_0
     336: invokevirtual #83                 // Method getPortMappings:()Ljava/util/List;
     339: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     344: ifne          349
     347: iconst_0
     348: ireturn
     349: aload_2
     350: invokevirtual #85                 // Method getEssential:()Ljava/lang/Boolean;
     353: ifnonnull     360
     356: iconst_1
     357: goto          361
     360: iconst_0
     361: aload_0
     362: invokevirtual #85                 // Method getEssential:()Ljava/lang/Boolean;
     365: ifnonnull     372
     368: iconst_1
     369: goto          373
     372: iconst_0
     373: ixor
     374: ifeq          379
     377: iconst_0
     378: ireturn
     379: aload_2
     380: invokevirtual #85                 // Method getEssential:()Ljava/lang/Boolean;
     383: ifnull        402
     386: aload_2
     387: invokevirtual #85                 // Method getEssential:()Ljava/lang/Boolean;
     390: aload_0
     391: invokevirtual #85                 // Method getEssential:()Ljava/lang/Boolean;
     394: invokevirtual #128                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     397: ifne          402
     400: iconst_0
     401: ireturn
     402: aload_2
     403: invokevirtual #87                 // Method getEntryPoint:()Ljava/util/List;
     406: ifnonnull     413
     409: iconst_1
     410: goto          414
     413: iconst_0
     414: aload_0
     415: invokevirtual #87                 // Method getEntryPoint:()Ljava/util/List;
     418: ifnonnull     425
     421: iconst_1
     422: goto          426
     425: iconst_0
     426: ixor
     427: ifeq          432
     430: iconst_0
     431: ireturn
     432: aload_2
     433: invokevirtual #87                 // Method getEntryPoint:()Ljava/util/List;
     436: ifnull        457
     439: aload_2
     440: invokevirtual #87                 // Method getEntryPoint:()Ljava/util/List;
     443: aload_0
     444: invokevirtual #87                 // Method getEntryPoint:()Ljava/util/List;
     447: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     452: ifne          457
     455: iconst_0
     456: ireturn
     457: aload_2
     458: invokevirtual #89                 // Method getCommand:()Ljava/util/List;
     461: ifnonnull     468
     464: iconst_1
     465: goto          469
     468: iconst_0
     469: aload_0
     470: invokevirtual #89                 // Method getCommand:()Ljava/util/List;
     473: ifnonnull     480
     476: iconst_1
     477: goto          481
     480: iconst_0
     481: ixor
     482: ifeq          487
     485: iconst_0
     486: ireturn
     487: aload_2
     488: invokevirtual #89                 // Method getCommand:()Ljava/util/List;
     491: ifnull        512
     494: aload_2
     495: invokevirtual #89                 // Method getCommand:()Ljava/util/List;
     498: aload_0
     499: invokevirtual #89                 // Method getCommand:()Ljava/util/List;
     502: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     507: ifne          512
     510: iconst_0
     511: ireturn
     512: aload_2
     513: invokevirtual #91                 // Method getEnvironment:()Ljava/util/List;
     516: ifnonnull     523
     519: iconst_1
     520: goto          524
     523: iconst_0
     524: aload_0
     525: invokevirtual #91                 // Method getEnvironment:()Ljava/util/List;
     528: ifnonnull     535
     531: iconst_1
     532: goto          536
     535: iconst_0
     536: ixor
     537: ifeq          542
     540: iconst_0
     541: ireturn
     542: aload_2
     543: invokevirtual #91                 // Method getEnvironment:()Ljava/util/List;
     546: ifnull        567
     549: aload_2
     550: invokevirtual #91                 // Method getEnvironment:()Ljava/util/List;
     553: aload_0
     554: invokevirtual #91                 // Method getEnvironment:()Ljava/util/List;
     557: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     562: ifne          567
     565: iconst_0
     566: ireturn
     567: aload_2
     568: invokevirtual #93                 // Method getMountPoints:()Ljava/util/List;
     571: ifnonnull     578
     574: iconst_1
     575: goto          579
     578: iconst_0
     579: aload_0
     580: invokevirtual #93                 // Method getMountPoints:()Ljava/util/List;
     583: ifnonnull     590
     586: iconst_1
     587: goto          591
     590: iconst_0
     591: ixor
     592: ifeq          597
     595: iconst_0
     596: ireturn
     597: aload_2
     598: invokevirtual #93                 // Method getMountPoints:()Ljava/util/List;
     601: ifnull        622
     604: aload_2
     605: invokevirtual #93                 // Method getMountPoints:()Ljava/util/List;
     608: aload_0
     609: invokevirtual #93                 // Method getMountPoints:()Ljava/util/List;
     612: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     617: ifne          622
     620: iconst_0
     621: ireturn
     622: aload_2
     623: invokevirtual #95                 // Method getVolumesFrom:()Ljava/util/List;
     626: ifnonnull     633
     629: iconst_1
     630: goto          634
     633: iconst_0
     634: aload_0
     635: invokevirtual #95                 // Method getVolumesFrom:()Ljava/util/List;
     638: ifnonnull     645
     641: iconst_1
     642: goto          646
     645: iconst_0
     646: ixor
     647: ifeq          652
     650: iconst_0
     651: ireturn
     652: aload_2
     653: invokevirtual #95                 // Method getVolumesFrom:()Ljava/util/List;
     656: ifnull        677
     659: aload_2
     660: invokevirtual #95                 // Method getVolumesFrom:()Ljava/util/List;
     663: aload_0
     664: invokevirtual #95                 // Method getVolumesFrom:()Ljava/util/List;
     667: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     672: ifne          677
     675: iconst_0
     676: ireturn
     677: aload_2
     678: invokevirtual #97                 // Method getHostname:()Ljava/lang/String;
     681: ifnonnull     688
     684: iconst_1
     685: goto          689
     688: iconst_0
     689: aload_0
     690: invokevirtual #97                 // Method getHostname:()Ljava/lang/String;
     693: ifnonnull     700
     696: iconst_1
     697: goto          701
     700: iconst_0
     701: ixor
     702: ifeq          707
     705: iconst_0
     706: ireturn
     707: aload_2
     708: invokevirtual #97                 // Method getHostname:()Ljava/lang/String;
     711: ifnull        730
     714: aload_2
     715: invokevirtual #97                 // Method getHostname:()Ljava/lang/String;
     718: aload_0
     719: invokevirtual #97                 // Method getHostname:()Ljava/lang/String;
     722: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     725: ifne          730
     728: iconst_0
     729: ireturn
     730: aload_2
     731: invokevirtual #99                 // Method getUser:()Ljava/lang/String;
     734: ifnonnull     741
     737: iconst_1
     738: goto          742
     741: iconst_0
     742: aload_0
     743: invokevirtual #99                 // Method getUser:()Ljava/lang/String;
     746: ifnonnull     753
     749: iconst_1
     750: goto          754
     753: iconst_0
     754: ixor
     755: ifeq          760
     758: iconst_0
     759: ireturn
     760: aload_2
     761: invokevirtual #99                 // Method getUser:()Ljava/lang/String;
     764: ifnull        783
     767: aload_2
     768: invokevirtual #99                 // Method getUser:()Ljava/lang/String;
     771: aload_0
     772: invokevirtual #99                 // Method getUser:()Ljava/lang/String;
     775: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     778: ifne          783
     781: iconst_0
     782: ireturn
     783: aload_2
     784: invokevirtual #101                // Method getWorkingDirectory:()Ljava/lang/String;
     787: ifnonnull     794
     790: iconst_1
     791: goto          795
     794: iconst_0
     795: aload_0
     796: invokevirtual #101                // Method getWorkingDirectory:()Ljava/lang/String;
     799: ifnonnull     806
     802: iconst_1
     803: goto          807
     806: iconst_0
     807: ixor
     808: ifeq          813
     811: iconst_0
     812: ireturn
     813: aload_2
     814: invokevirtual #101                // Method getWorkingDirectory:()Ljava/lang/String;
     817: ifnull        836
     820: aload_2
     821: invokevirtual #101                // Method getWorkingDirectory:()Ljava/lang/String;
     824: aload_0
     825: invokevirtual #101                // Method getWorkingDirectory:()Ljava/lang/String;
     828: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     831: ifne          836
     834: iconst_0
     835: ireturn
     836: aload_2
     837: invokevirtual #103                // Method getDisableNetworking:()Ljava/lang/Boolean;
     840: ifnonnull     847
     843: iconst_1
     844: goto          848
     847: iconst_0
     848: aload_0
     849: invokevirtual #103                // Method getDisableNetworking:()Ljava/lang/Boolean;
     852: ifnonnull     859
     855: iconst_1
     856: goto          860
     859: iconst_0
     860: ixor
     861: ifeq          866
     864: iconst_0
     865: ireturn
     866: aload_2
     867: invokevirtual #103                // Method getDisableNetworking:()Ljava/lang/Boolean;
     870: ifnull        889
     873: aload_2
     874: invokevirtual #103                // Method getDisableNetworking:()Ljava/lang/Boolean;
     877: aload_0
     878: invokevirtual #103                // Method getDisableNetworking:()Ljava/lang/Boolean;
     881: invokevirtual #128                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     884: ifne          889
     887: iconst_0
     888: ireturn
     889: aload_2
     890: invokevirtual #105                // Method getPrivileged:()Ljava/lang/Boolean;
     893: ifnonnull     900
     896: iconst_1
     897: goto          901
     900: iconst_0
     901: aload_0
     902: invokevirtual #105                // Method getPrivileged:()Ljava/lang/Boolean;
     905: ifnonnull     912
     908: iconst_1
     909: goto          913
     912: iconst_0
     913: ixor
     914: ifeq          919
     917: iconst_0
     918: ireturn
     919: aload_2
     920: invokevirtual #105                // Method getPrivileged:()Ljava/lang/Boolean;
     923: ifnull        942
     926: aload_2
     927: invokevirtual #105                // Method getPrivileged:()Ljava/lang/Boolean;
     930: aload_0
     931: invokevirtual #105                // Method getPrivileged:()Ljava/lang/Boolean;
     934: invokevirtual #128                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     937: ifne          942
     940: iconst_0
     941: ireturn
     942: aload_2
     943: invokevirtual #107                // Method getReadonlyRootFilesystem:()Ljava/lang/Boolean;
     946: ifnonnull     953
     949: iconst_1
     950: goto          954
     953: iconst_0
     954: aload_0
     955: invokevirtual #107                // Method getReadonlyRootFilesystem:()Ljava/lang/Boolean;
     958: ifnonnull     965
     961: iconst_1
     962: goto          966
     965: iconst_0
     966: ixor
     967: ifeq          972
     970: iconst_0
     971: ireturn
     972: aload_2
     973: invokevirtual #107                // Method getReadonlyRootFilesystem:()Ljava/lang/Boolean;
     976: ifnull        995
     979: aload_2
     980: invokevirtual #107                // Method getReadonlyRootFilesystem:()Ljava/lang/Boolean;
     983: aload_0
     984: invokevirtual #107                // Method getReadonlyRootFilesystem:()Ljava/lang/Boolean;
     987: invokevirtual #128                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     990: ifne          995
     993: iconst_0
     994: ireturn
     995: aload_2
     996: invokevirtual #109                // Method getDnsServers:()Ljava/util/List;
     999: ifnonnull     1006
    1002: iconst_1
    1003: goto          1007
    1006: iconst_0
    1007: aload_0
    1008: invokevirtual #109                // Method getDnsServers:()Ljava/util/List;
    1011: ifnonnull     1018
    1014: iconst_1
    1015: goto          1019
    1018: iconst_0
    1019: ixor
    1020: ifeq          1025
    1023: iconst_0
    1024: ireturn
    1025: aload_2
    1026: invokevirtual #109                // Method getDnsServers:()Ljava/util/List;
    1029: ifnull        1050
    1032: aload_2
    1033: invokevirtual #109                // Method getDnsServers:()Ljava/util/List;
    1036: aload_0
    1037: invokevirtual #109                // Method getDnsServers:()Ljava/util/List;
    1040: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1045: ifne          1050
    1048: iconst_0
    1049: ireturn
    1050: aload_2
    1051: invokevirtual #111                // Method getDnsSearchDomains:()Ljava/util/List;
    1054: ifnonnull     1061
    1057: iconst_1
    1058: goto          1062
    1061: iconst_0
    1062: aload_0
    1063: invokevirtual #111                // Method getDnsSearchDomains:()Ljava/util/List;
    1066: ifnonnull     1073
    1069: iconst_1
    1070: goto          1074
    1073: iconst_0
    1074: ixor
    1075: ifeq          1080
    1078: iconst_0
    1079: ireturn
    1080: aload_2
    1081: invokevirtual #111                // Method getDnsSearchDomains:()Ljava/util/List;
    1084: ifnull        1105
    1087: aload_2
    1088: invokevirtual #111                // Method getDnsSearchDomains:()Ljava/util/List;
    1091: aload_0
    1092: invokevirtual #111                // Method getDnsSearchDomains:()Ljava/util/List;
    1095: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1100: ifne          1105
    1103: iconst_0
    1104: ireturn
    1105: aload_2
    1106: invokevirtual #113                // Method getExtraHosts:()Ljava/util/List;
    1109: ifnonnull     1116
    1112: iconst_1
    1113: goto          1117
    1116: iconst_0
    1117: aload_0
    1118: invokevirtual #113                // Method getExtraHosts:()Ljava/util/List;
    1121: ifnonnull     1128
    1124: iconst_1
    1125: goto          1129
    1128: iconst_0
    1129: ixor
    1130: ifeq          1135
    1133: iconst_0
    1134: ireturn
    1135: aload_2
    1136: invokevirtual #113                // Method getExtraHosts:()Ljava/util/List;
    1139: ifnull        1160
    1142: aload_2
    1143: invokevirtual #113                // Method getExtraHosts:()Ljava/util/List;
    1146: aload_0
    1147: invokevirtual #113                // Method getExtraHosts:()Ljava/util/List;
    1150: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1155: ifne          1160
    1158: iconst_0
    1159: ireturn
    1160: aload_2
    1161: invokevirtual #115                // Method getDockerSecurityOptions:()Ljava/util/List;
    1164: ifnonnull     1171
    1167: iconst_1
    1168: goto          1172
    1171: iconst_0
    1172: aload_0
    1173: invokevirtual #115                // Method getDockerSecurityOptions:()Ljava/util/List;
    1176: ifnonnull     1183
    1179: iconst_1
    1180: goto          1184
    1183: iconst_0
    1184: ixor
    1185: ifeq          1190
    1188: iconst_0
    1189: ireturn
    1190: aload_2
    1191: invokevirtual #115                // Method getDockerSecurityOptions:()Ljava/util/List;
    1194: ifnull        1215
    1197: aload_2
    1198: invokevirtual #115                // Method getDockerSecurityOptions:()Ljava/util/List;
    1201: aload_0
    1202: invokevirtual #115                // Method getDockerSecurityOptions:()Ljava/util/List;
    1205: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1210: ifne          1215
    1213: iconst_0
    1214: ireturn
    1215: aload_2
    1216: invokevirtual #117                // Method getDockerLabels:()Ljava/util/Map;
    1219: ifnonnull     1226
    1222: iconst_1
    1223: goto          1227
    1226: iconst_0
    1227: aload_0
    1228: invokevirtual #117                // Method getDockerLabels:()Ljava/util/Map;
    1231: ifnonnull     1238
    1234: iconst_1
    1235: goto          1239
    1238: iconst_0
    1239: ixor
    1240: ifeq          1245
    1243: iconst_0
    1244: ireturn
    1245: aload_2
    1246: invokevirtual #117                // Method getDockerLabels:()Ljava/util/Map;
    1249: ifnull        1270
    1252: aload_2
    1253: invokevirtual #117                // Method getDockerLabels:()Ljava/util/Map;
    1256: aload_0
    1257: invokevirtual #117                // Method getDockerLabels:()Ljava/util/Map;
    1260: invokeinterface #129,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
    1265: ifne          1270
    1268: iconst_0
    1269: ireturn
    1270: aload_2
    1271: invokevirtual #119                // Method getUlimits:()Ljava/util/List;
    1274: ifnonnull     1281
    1277: iconst_1
    1278: goto          1282
    1281: iconst_0
    1282: aload_0
    1283: invokevirtual #119                // Method getUlimits:()Ljava/util/List;
    1286: ifnonnull     1293
    1289: iconst_1
    1290: goto          1294
    1293: iconst_0
    1294: ixor
    1295: ifeq          1300
    1298: iconst_0
    1299: ireturn
    1300: aload_2
    1301: invokevirtual #119                // Method getUlimits:()Ljava/util/List;
    1304: ifnull        1325
    1307: aload_2
    1308: invokevirtual #119                // Method getUlimits:()Ljava/util/List;
    1311: aload_0
    1312: invokevirtual #119                // Method getUlimits:()Ljava/util/List;
    1315: invokeinterface #127,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1320: ifne          1325
    1323: iconst_0
    1324: ireturn
    1325: aload_2
    1326: invokevirtual #121                // Method getLogConfiguration:()Lcom/amazonaws/services/ecs/model/LogConfiguration;
    1329: ifnonnull     1336
    1332: iconst_1
    1333: goto          1337
    1336: iconst_0
    1337: aload_0
    1338: invokevirtual #121                // Method getLogConfiguration:()Lcom/amazonaws/services/ecs/model/LogConfiguration;
    1341: ifnonnull     1348
    1344: iconst_1
    1345: goto          1349
    1348: iconst_0
    1349: ixor
    1350: ifeq          1355
    1353: iconst_0
    1354: ireturn
    1355: aload_2
    1356: invokevirtual #121                // Method getLogConfiguration:()Lcom/amazonaws/services/ecs/model/LogConfiguration;
    1359: ifnull        1378
    1362: aload_2
    1363: invokevirtual #121                // Method getLogConfiguration:()Lcom/amazonaws/services/ecs/model/LogConfiguration;
    1366: aload_0
    1367: invokevirtual #121                // Method getLogConfiguration:()Lcom/amazonaws/services/ecs/model/LogConfiguration;
    1370: invokevirtual #130                // Method com/amazonaws/services/ecs/model/LogConfiguration.equals:(Ljava/lang/Object;)Z
    1373: ifne          1378
    1376: iconst_0
    1377: ireturn
    1378: iconst_1
    1379: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #71                 // Method getName:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #71                 // Method getName:()Ljava/lang/String;
      24: invokevirtual #131                // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #74                 // Method getImage:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #74                 // Method getImage:()Ljava/lang/String;
      48: invokevirtual #131                // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #76                 // Method getCpu:()Ljava/lang/Integer;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #76                 // Method getCpu:()Ljava/lang/Integer;
      72: invokevirtual #132                // Method java/lang/Integer.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #79                 // Method getMemory:()Ljava/lang/Integer;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #79                 // Method getMemory:()Ljava/lang/Integer;
      96: invokevirtual #132                // Method java/lang/Integer.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #81                 // Method getLinks:()Ljava/util/List;
     109: ifnonnull     116
     112: iconst_0
     113: goto          125
     116: aload_0
     117: invokevirtual #81                 // Method getLinks:()Ljava/util/List;
     120: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     125: iadd
     126: istore_2
     127: bipush        31
     129: iload_2
     130: imul
     131: aload_0
     132: invokevirtual #83                 // Method getPortMappings:()Ljava/util/List;
     135: ifnonnull     142
     138: iconst_0
     139: goto          151
     142: aload_0
     143: invokevirtual #83                 // Method getPortMappings:()Ljava/util/List;
     146: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     151: iadd
     152: istore_2
     153: bipush        31
     155: iload_2
     156: imul
     157: aload_0
     158: invokevirtual #85                 // Method getEssential:()Ljava/lang/Boolean;
     161: ifnonnull     168
     164: iconst_0
     165: goto          175
     168: aload_0
     169: invokevirtual #85                 // Method getEssential:()Ljava/lang/Boolean;
     172: invokevirtual #134                // Method java/lang/Boolean.hashCode:()I
     175: iadd
     176: istore_2
     177: bipush        31
     179: iload_2
     180: imul
     181: aload_0
     182: invokevirtual #87                 // Method getEntryPoint:()Ljava/util/List;
     185: ifnonnull     192
     188: iconst_0
     189: goto          201
     192: aload_0
     193: invokevirtual #87                 // Method getEntryPoint:()Ljava/util/List;
     196: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     201: iadd
     202: istore_2
     203: bipush        31
     205: iload_2
     206: imul
     207: aload_0
     208: invokevirtual #89                 // Method getCommand:()Ljava/util/List;
     211: ifnonnull     218
     214: iconst_0
     215: goto          227
     218: aload_0
     219: invokevirtual #89                 // Method getCommand:()Ljava/util/List;
     222: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     227: iadd
     228: istore_2
     229: bipush        31
     231: iload_2
     232: imul
     233: aload_0
     234: invokevirtual #91                 // Method getEnvironment:()Ljava/util/List;
     237: ifnonnull     244
     240: iconst_0
     241: goto          253
     244: aload_0
     245: invokevirtual #91                 // Method getEnvironment:()Ljava/util/List;
     248: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     253: iadd
     254: istore_2
     255: bipush        31
     257: iload_2
     258: imul
     259: aload_0
     260: invokevirtual #93                 // Method getMountPoints:()Ljava/util/List;
     263: ifnonnull     270
     266: iconst_0
     267: goto          279
     270: aload_0
     271: invokevirtual #93                 // Method getMountPoints:()Ljava/util/List;
     274: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     279: iadd
     280: istore_2
     281: bipush        31
     283: iload_2
     284: imul
     285: aload_0
     286: invokevirtual #95                 // Method getVolumesFrom:()Ljava/util/List;
     289: ifnonnull     296
     292: iconst_0
     293: goto          305
     296: aload_0
     297: invokevirtual #95                 // Method getVolumesFrom:()Ljava/util/List;
     300: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     305: iadd
     306: istore_2
     307: bipush        31
     309: iload_2
     310: imul
     311: aload_0
     312: invokevirtual #97                 // Method getHostname:()Ljava/lang/String;
     315: ifnonnull     322
     318: iconst_0
     319: goto          329
     322: aload_0
     323: invokevirtual #97                 // Method getHostname:()Ljava/lang/String;
     326: invokevirtual #131                // Method java/lang/String.hashCode:()I
     329: iadd
     330: istore_2
     331: bipush        31
     333: iload_2
     334: imul
     335: aload_0
     336: invokevirtual #99                 // Method getUser:()Ljava/lang/String;
     339: ifnonnull     346
     342: iconst_0
     343: goto          353
     346: aload_0
     347: invokevirtual #99                 // Method getUser:()Ljava/lang/String;
     350: invokevirtual #131                // Method java/lang/String.hashCode:()I
     353: iadd
     354: istore_2
     355: bipush        31
     357: iload_2
     358: imul
     359: aload_0
     360: invokevirtual #101                // Method getWorkingDirectory:()Ljava/lang/String;
     363: ifnonnull     370
     366: iconst_0
     367: goto          377
     370: aload_0
     371: invokevirtual #101                // Method getWorkingDirectory:()Ljava/lang/String;
     374: invokevirtual #131                // Method java/lang/String.hashCode:()I
     377: iadd
     378: istore_2
     379: bipush        31
     381: iload_2
     382: imul
     383: aload_0
     384: invokevirtual #103                // Method getDisableNetworking:()Ljava/lang/Boolean;
     387: ifnonnull     394
     390: iconst_0
     391: goto          401
     394: aload_0
     395: invokevirtual #103                // Method getDisableNetworking:()Ljava/lang/Boolean;
     398: invokevirtual #134                // Method java/lang/Boolean.hashCode:()I
     401: iadd
     402: istore_2
     403: bipush        31
     405: iload_2
     406: imul
     407: aload_0
     408: invokevirtual #105                // Method getPrivileged:()Ljava/lang/Boolean;
     411: ifnonnull     418
     414: iconst_0
     415: goto          425
     418: aload_0
     419: invokevirtual #105                // Method getPrivileged:()Ljava/lang/Boolean;
     422: invokevirtual #134                // Method java/lang/Boolean.hashCode:()I
     425: iadd
     426: istore_2
     427: bipush        31
     429: iload_2
     430: imul
     431: aload_0
     432: invokevirtual #107                // Method getReadonlyRootFilesystem:()Ljava/lang/Boolean;
     435: ifnonnull     442
     438: iconst_0
     439: goto          449
     442: aload_0
     443: invokevirtual #107                // Method getReadonlyRootFilesystem:()Ljava/lang/Boolean;
     446: invokevirtual #134                // Method java/lang/Boolean.hashCode:()I
     449: iadd
     450: istore_2
     451: bipush        31
     453: iload_2
     454: imul
     455: aload_0
     456: invokevirtual #109                // Method getDnsServers:()Ljava/util/List;
     459: ifnonnull     466
     462: iconst_0
     463: goto          475
     466: aload_0
     467: invokevirtual #109                // Method getDnsServers:()Ljava/util/List;
     470: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     475: iadd
     476: istore_2
     477: bipush        31
     479: iload_2
     480: imul
     481: aload_0
     482: invokevirtual #111                // Method getDnsSearchDomains:()Ljava/util/List;
     485: ifnonnull     492
     488: iconst_0
     489: goto          501
     492: aload_0
     493: invokevirtual #111                // Method getDnsSearchDomains:()Ljava/util/List;
     496: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     501: iadd
     502: istore_2
     503: bipush        31
     505: iload_2
     506: imul
     507: aload_0
     508: invokevirtual #113                // Method getExtraHosts:()Ljava/util/List;
     511: ifnonnull     518
     514: iconst_0
     515: goto          527
     518: aload_0
     519: invokevirtual #113                // Method getExtraHosts:()Ljava/util/List;
     522: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     527: iadd
     528: istore_2
     529: bipush        31
     531: iload_2
     532: imul
     533: aload_0
     534: invokevirtual #115                // Method getDockerSecurityOptions:()Ljava/util/List;
     537: ifnonnull     544
     540: iconst_0
     541: goto          553
     544: aload_0
     545: invokevirtual #115                // Method getDockerSecurityOptions:()Ljava/util/List;
     548: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     553: iadd
     554: istore_2
     555: bipush        31
     557: iload_2
     558: imul
     559: aload_0
     560: invokevirtual #117                // Method getDockerLabels:()Ljava/util/Map;
     563: ifnonnull     570
     566: iconst_0
     567: goto          579
     570: aload_0
     571: invokevirtual #117                // Method getDockerLabels:()Ljava/util/Map;
     574: invokeinterface #135,  1          // InterfaceMethod java/util/Map.hashCode:()I
     579: iadd
     580: istore_2
     581: bipush        31
     583: iload_2
     584: imul
     585: aload_0
     586: invokevirtual #119                // Method getUlimits:()Ljava/util/List;
     589: ifnonnull     596
     592: iconst_0
     593: goto          605
     596: aload_0
     597: invokevirtual #119                // Method getUlimits:()Ljava/util/List;
     600: invokeinterface #133,  1          // InterfaceMethod java/util/List.hashCode:()I
     605: iadd
     606: istore_2
     607: bipush        31
     609: iload_2
     610: imul
     611: aload_0
     612: invokevirtual #121                // Method getLogConfiguration:()Lcom/amazonaws/services/ecs/model/LogConfiguration;
     615: ifnonnull     622
     618: iconst_0
     619: goto          629
     622: aload_0
     623: invokevirtual #121                // Method getLogConfiguration:()Lcom/amazonaws/services/ecs/model/LogConfiguration;
     626: invokevirtual #136                // Method com/amazonaws/services/ecs/model/LogConfiguration.hashCode:()I
     629: iadd
     630: istore_2
     631: iload_2
     632: ireturn

  public com.amazonaws.services.ecs.model.ContainerDefinition clone();
    Code:
       0: aload_0
       1: invokespecial #137                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #124                // class com/amazonaws/services/ecs/model/ContainerDefinition
       7: areturn
       8: astore_1
       9: new           #139                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #140                // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #141                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method clone:()Lcom/amazonaws/services/ecs/model/ContainerDefinition;
       4: areturn
}
