{
  "groups": [
    {
      "name": "endpoints",
      "type": "org.springframework.boot.actuate.endpoint.EndpointProperties",
      "sourceType": "org.springframework.boot.actuate.endpoint.EndpointProperties"
    },
    {
      "name": "endpoints.actuator",
      "type": "org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint"
    },
    {
      "name": "endpoints.autoconfig",
      "type": "org.springframework.boot.actuate.endpoint.AutoConfigurationReportEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.AutoConfigurationReportEndpoint"
    },
    {
      "name": "endpoints.beans",
      "type": "org.springframework.boot.actuate.endpoint.BeansEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.BeansEndpoint"
    },
    {
      "name": "endpoints.configprops",
      "type": "org.springframework.boot.actuate.endpoint.ConfigurationPropertiesReportEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.ConfigurationPropertiesReportEndpoint"
    },
    {
      "name": "endpoints.cors",
      "type": "org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties"
    },
    {
      "name": "endpoints.docs",
      "type": "org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint"
    },
    {
      "name": "endpoints.docs.curies",
      "type": "org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint$Curies",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint",
      "sourceMethod": "getCuries()"
    },
    {
      "name": "endpoints.dump",
      "type": "org.springframework.boot.actuate.endpoint.DumpEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.DumpEndpoint"
    },
    {
      "name": "endpoints.env",
      "type": "org.springframework.boot.actuate.endpoint.EnvironmentEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.EnvironmentEndpoint"
    },
    {
      "name": "endpoints.env",
      "type": "org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint"
    },
    {
      "name": "endpoints.flyway",
      "type": "org.springframework.boot.actuate.endpoint.FlywayEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.FlywayEndpoint"
    },
    {
      "name": "endpoints.health",
      "type": "org.springframework.boot.actuate.autoconfigure.HealthMvcEndpointProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.HealthMvcEndpointProperties"
    },
    {
      "name": "endpoints.health",
      "type": "org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint"
    },
    {
      "name": "endpoints.health",
      "type": "org.springframework.boot.actuate.endpoint.HealthEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.HealthEndpoint"
    },
    {
      "name": "endpoints.heapdump",
      "type": "org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint"
    },
    {
      "name": "endpoints.info",
      "type": "org.springframework.boot.actuate.endpoint.InfoEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.InfoEndpoint"
    },
    {
      "name": "endpoints.jmx",
      "type": "org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties"
    },
    {
      "name": "endpoints.jolokia",
      "type": "org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint"
    },
    {
      "name": "endpoints.liquibase",
      "type": "org.springframework.boot.actuate.endpoint.LiquibaseEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.LiquibaseEndpoint"
    },
    {
      "name": "endpoints.logfile",
      "type": "org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint"
    },
    {
      "name": "endpoints.mappings",
      "type": "org.springframework.boot.actuate.endpoint.RequestMappingEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.RequestMappingEndpoint"
    },
    {
      "name": "endpoints.metrics",
      "type": "org.springframework.boot.actuate.endpoint.MetricsEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.MetricsEndpoint"
    },
    {
      "name": "endpoints.metrics",
      "type": "org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint"
    },
    {
      "name": "endpoints.metrics.filter",
      "type": "org.springframework.boot.actuate.autoconfigure.MetricFilterProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.MetricFilterProperties"
    },
    {
      "name": "endpoints.shutdown",
      "type": "org.springframework.boot.actuate.endpoint.ShutdownEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.ShutdownEndpoint"
    },
    {
      "name": "endpoints.shutdown",
      "type": "org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint"
    },
    {
      "name": "endpoints.trace",
      "type": "org.springframework.boot.actuate.endpoint.TraceEndpoint",
      "sourceType": "org.springframework.boot.actuate.endpoint.TraceEndpoint"
    },
    {
      "name": "jolokia",
      "type": "org.springframework.boot.actuate.autoconfigure.JolokiaProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.JolokiaProperties"
    },
    {
      "name": "management",
      "type": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties"
    },
    {
      "name": "management.health.diskspace",
      "type": "org.springframework.boot.actuate.health.DiskSpaceHealthIndicatorProperties",
      "sourceType": "org.springframework.boot.actuate.health.DiskSpaceHealthIndicatorProperties"
    },
    {
      "name": "management.health.elasticsearch",
      "type": "org.springframework.boot.actuate.health.ElasticsearchHealthIndicatorProperties",
      "sourceType": "org.springframework.boot.actuate.health.ElasticsearchHealthIndicatorProperties"
    },
    {
      "name": "management.health.status",
      "type": "org.springframework.boot.actuate.autoconfigure.HealthIndicatorProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.HealthIndicatorProperties"
    },
    {
      "name": "management.info",
      "type": "org.springframework.boot.actuate.autoconfigure.InfoContributorProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.InfoContributorProperties"
    },
    {
      "name": "management.info.git",
      "type": "org.springframework.boot.actuate.autoconfigure.InfoContributorProperties$Git",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.InfoContributorProperties",
      "sourceMethod": "getGit()"
    },
    {
      "name": "management.security",
      "type": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties$Security",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties",
      "sourceMethod": "getSecurity()"
    },
    {
      "name": "management.shell",
      "type": "org.springframework.boot.actuate.autoconfigure.ShellProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties"
    },
    {
      "name": "management.shell.auth",
      "type": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Auth",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties",
      "sourceMethod": "getAuth()"
    },
    {
      "name": "management.shell.auth.jaas",
      "type": "org.springframework.boot.actuate.autoconfigure.ShellProperties$JaasAuthenticationProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$JaasAuthenticationProperties"
    },
    {
      "name": "management.shell.auth.key",
      "type": "org.springframework.boot.actuate.autoconfigure.ShellProperties$KeyAuthenticationProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$KeyAuthenticationProperties"
    },
    {
      "name": "management.shell.auth.simple",
      "type": "org.springframework.boot.actuate.autoconfigure.ShellProperties$SimpleAuthenticationProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$SimpleAuthenticationProperties"
    },
    {
      "name": "management.shell.auth.simple.user",
      "type": "org.springframework.boot.actuate.autoconfigure.ShellProperties$SimpleAuthenticationProperties$User",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$SimpleAuthenticationProperties",
      "sourceMethod": "getUser()"
    },
    {
      "name": "management.shell.auth.spring",
      "type": "org.springframework.boot.actuate.autoconfigure.ShellProperties$SpringAuthenticationProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$SpringAuthenticationProperties"
    },
    {
      "name": "management.shell.ssh",
      "type": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Ssh",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties",
      "sourceMethod": "getSsh()"
    },
    {
      "name": "management.shell.telnet",
      "type": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Telnet",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties",
      "sourceMethod": "getTelnet()"
    },
    {
      "name": "management.ssl",
      "type": "org.springframework.boot.context.embedded.Ssl",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties",
      "sourceMethod": "getSsl()"
    },
    {
      "name": "management.trace",
      "type": "org.springframework.boot.actuate.trace.TraceProperties",
      "sourceType": "org.springframework.boot.actuate.trace.TraceProperties"
    },
    {
      "name": "spring.metrics.export",
      "type": "org.springframework.boot.actuate.metrics.export.MetricExportProperties",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties"
    },
    {
      "name": "spring.metrics.export.aggregate",
      "type": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Aggregate",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties",
      "sourceMethod": "getAggregate()"
    },
    {
      "name": "spring.metrics.export.redis",
      "type": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Redis",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties",
      "sourceMethod": "getRedis()"
    },
    {
      "name": "spring.metrics.export.statsd",
      "type": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Statsd",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties",
      "sourceMethod": "getStatsd()"
    }
  ],
  "properties": [
    {
      "name": "endpoints.actuator.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint"
    },
    {
      "name": "endpoints.actuator.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint"
    },
    {
      "name": "endpoints.actuator.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint"
    },
    {
      "name": "endpoints.autoconfig.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.AutoConfigurationReportEndpoint"
    },
    {
      "name": "endpoints.autoconfig.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.AutoConfigurationReportEndpoint"
    },
    {
      "name": "endpoints.autoconfig.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path."
    },
    {
      "name": "endpoints.autoconfig.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.AutoConfigurationReportEndpoint"
    },
    {
      "name": "endpoints.beans.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.BeansEndpoint"
    },
    {
      "name": "endpoints.beans.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.BeansEndpoint"
    },
    {
      "name": "endpoints.beans.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path."
    },
    {
      "name": "endpoints.beans.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.BeansEndpoint"
    },
    {
      "name": "endpoints.configprops.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.ConfigurationPropertiesReportEndpoint"
    },
    {
      "name": "endpoints.configprops.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.ConfigurationPropertiesReportEndpoint"
    },
    {
      "name": "endpoints.configprops.keys-to-sanitize",
      "type": "java.lang.String[]",
      "description": "Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.",
      "sourceType": "org.springframework.boot.actuate.endpoint.ConfigurationPropertiesReportEndpoint",
      "defaultValue": [
        "password",
        "secret",
        "key",
        "token",
        ".*credentials.*",
        "vcap_services"
      ]
    },
    {
      "name": "endpoints.configprops.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path."
    },
    {
      "name": "endpoints.configprops.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.ConfigurationPropertiesReportEndpoint"
    },
    {
      "name": "endpoints.cors.allow-credentials",
      "type": "java.lang.Boolean",
      "description": "Set whether credentials are supported. When not set, credentials are not supported.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties"
    },
    {
      "name": "endpoints.cors.allowed-headers",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of headers to allow in a request. '*' allows all headers.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties"
    },
    {
      "name": "endpoints.cors.allowed-methods",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of methods to allow. '*' allows all methods. When not set,\n defaults to GET.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties"
    },
    {
      "name": "endpoints.cors.allowed-origins",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of origins to allow. '*' allows all origins. When not set,\n CORS support is disabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties"
    },
    {
      "name": "endpoints.cors.exposed-headers",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of headers to include in a response.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties"
    },
    {
      "name": "endpoints.cors.max-age",
      "type": "java.lang.Long",
      "description": "How long, in seconds, the response from a pre-flight request can be cached by\n clients.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties",
      "defaultValue": 1800
    },
    {
      "name": "endpoints.docs.curies.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the curie generation.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint$Curies",
      "defaultValue": false
    },
    {
      "name": "endpoints.docs.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint"
    },
    {
      "name": "endpoints.docs.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint"
    },
    {
      "name": "endpoints.docs.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint"
    },
    {
      "name": "endpoints.dump.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.DumpEndpoint"
    },
    {
      "name": "endpoints.dump.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.DumpEndpoint"
    },
    {
      "name": "endpoints.dump.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path."
    },
    {
      "name": "endpoints.dump.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.DumpEndpoint"
    },
    {
      "name": "endpoints.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable endpoints.",
      "sourceType": "org.springframework.boot.actuate.endpoint.EndpointProperties",
      "defaultValue": true
    },
    {
      "name": "endpoints.env.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.EnvironmentEndpoint"
    },
    {
      "name": "endpoints.env.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.EnvironmentEndpoint"
    },
    {
      "name": "endpoints.env.keys-to-sanitize",
      "type": "java.lang.String[]",
      "description": "Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.",
      "sourceType": "org.springframework.boot.actuate.endpoint.EnvironmentEndpoint",
      "defaultValue": [
        "password",
        "secret",
        "key",
        "token",
        ".*credentials.*",
        "vcap_services"
      ]
    },
    {
      "name": "endpoints.env.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint"
    },
    {
      "name": "endpoints.env.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.EnvironmentEndpoint"
    },
    {
      "name": "endpoints.flyway.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.FlywayEndpoint"
    },
    {
      "name": "endpoints.flyway.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.FlywayEndpoint"
    },
    {
      "name": "endpoints.flyway.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.FlywayEndpoint"
    },
    {
      "name": "endpoints.health.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.HealthEndpoint"
    },
    {
      "name": "endpoints.health.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.HealthEndpoint"
    },
    {
      "name": "endpoints.health.mapping",
      "type": "java.util.Map<java.lang.String,org.springframework.http.HttpStatus>",
      "description": "Mapping of health statuses to HttpStatus codes. By default, registered health\n statuses map to sensible defaults (i.e. UP maps to 200).",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.HealthMvcEndpointProperties"
    },
    {
      "name": "endpoints.health.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint"
    },
    {
      "name": "endpoints.health.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.HealthEndpoint"
    },
    {
      "name": "endpoints.health.time-to-live",
      "type": "java.lang.Long",
      "description": "Time to live for cached result, in milliseconds.",
      "sourceType": "org.springframework.boot.actuate.endpoint.HealthEndpoint",
      "defaultValue": 1000
    },
    {
      "name": "endpoints.heapdump.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint"
    },
    {
      "name": "endpoints.heapdump.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint"
    },
    {
      "name": "endpoints.heapdump.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint"
    },
    {
      "name": "endpoints.info.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.InfoEndpoint"
    },
    {
      "name": "endpoints.info.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.InfoEndpoint"
    },
    {
      "name": "endpoints.info.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path."
    },
    {
      "name": "endpoints.info.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.InfoEndpoint"
    },
    {
      "name": "endpoints.jmx.domain",
      "type": "java.lang.String",
      "description": "JMX domain name. Initialized with the value of 'spring.jmx.default-domain' if set.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties"
    },
    {
      "name": "endpoints.jmx.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable JMX export of all endpoints.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties",
      "defaultValue": true
    },
    {
      "name": "endpoints.jmx.static-names",
      "type": "java.util.Properties",
      "description": "Additional static properties to append to all ObjectNames of MBeans representing\n Endpoints.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties"
    },
    {
      "name": "endpoints.jmx.unique-names",
      "type": "java.lang.Boolean",
      "description": "Ensure that ObjectNames are modified in case of conflict.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties",
      "defaultValue": false
    },
    {
      "name": "endpoints.jolokia.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint"
    },
    {
      "name": "endpoints.jolokia.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint"
    },
    {
      "name": "endpoints.jolokia.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint"
    },
    {
      "name": "endpoints.liquibase.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.LiquibaseEndpoint"
    },
    {
      "name": "endpoints.liquibase.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.LiquibaseEndpoint"
    },
    {
      "name": "endpoints.liquibase.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.LiquibaseEndpoint"
    },
    {
      "name": "endpoints.logfile.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint"
    },
    {
      "name": "endpoints.logfile.external-file",
      "type": "java.io.File",
      "description": "External Logfile to be accessed. Can be used if the logfile is written by output\n redirect and not by the logging-system itself.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint"
    },
    {
      "name": "endpoints.logfile.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint"
    },
    {
      "name": "endpoints.logfile.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint"
    },
    {
      "name": "endpoints.mappings.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.RequestMappingEndpoint"
    },
    {
      "name": "endpoints.mappings.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.RequestMappingEndpoint"
    },
    {
      "name": "endpoints.mappings.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path."
    },
    {
      "name": "endpoints.mappings.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.RequestMappingEndpoint"
    },
    {
      "name": "endpoints.metrics.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.MetricsEndpoint"
    },
    {
      "name": "endpoints.metrics.filter.counter-submissions",
      "type": "java.util.Set<org.springframework.boot.actuate.autoconfigure.MetricsFilterSubmission>",
      "description": "Submissions that should be made to the counter.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.MetricFilterProperties"
    },
    {
      "name": "endpoints.metrics.filter.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the metrics servlet filter.",
      "defaultValue": true
    },
    {
      "name": "endpoints.metrics.filter.gauge-submissions",
      "type": "java.util.Set<org.springframework.boot.actuate.autoconfigure.MetricsFilterSubmission>",
      "description": "Submissions that should be made to the gauge.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.MetricFilterProperties"
    },
    {
      "name": "endpoints.metrics.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.MetricsEndpoint"
    },
    {
      "name": "endpoints.metrics.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint"
    },
    {
      "name": "endpoints.metrics.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.MetricsEndpoint"
    },
    {
      "name": "endpoints.sensitive",
      "type": "java.lang.Boolean",
      "description": "Default endpoint sensitive setting.",
      "sourceType": "org.springframework.boot.actuate.endpoint.EndpointProperties"
    },
    {
      "name": "endpoints.shutdown.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.ShutdownEndpoint"
    },
    {
      "name": "endpoints.shutdown.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.ShutdownEndpoint"
    },
    {
      "name": "endpoints.shutdown.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path.",
      "sourceType": "org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint"
    },
    {
      "name": "endpoints.shutdown.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.ShutdownEndpoint"
    },
    {
      "name": "endpoints.trace.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the endpoint.",
      "sourceType": "org.springframework.boot.actuate.endpoint.TraceEndpoint"
    },
    {
      "name": "endpoints.trace.id",
      "type": "java.lang.String",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '/foo').",
      "sourceType": "org.springframework.boot.actuate.endpoint.TraceEndpoint"
    },
    {
      "name": "endpoints.trace.path",
      "type": "java.lang.String",
      "description": "Endpoint URL path."
    },
    {
      "name": "endpoints.trace.sensitive",
      "type": "java.lang.Boolean",
      "description": "Mark if the endpoint exposes sensitive information.",
      "sourceType": "org.springframework.boot.actuate.endpoint.TraceEndpoint"
    },
    {
      "name": "info",
      "type": "java.util.Map<java.lang.String,java.lang.Object>",
      "description": "Arbitrary properties to add to the info endpoint."
    },
    {
      "name": "jolokia.config",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Jolokia settings. These are traditionally set using servlet parameters. Refer to\n the documentation of Jolokia for more details.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.JolokiaProperties"
    },
    {
      "name": "management.add-application-context-header",
      "type": "java.lang.Boolean",
      "description": "Add the \"X-Application-Context\" HTTP header in each response.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties",
      "defaultValue": true
    },
    {
      "name": "management.address",
      "type": "java.net.InetAddress",
      "description": "Network address that the management endpoints should bind to.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties"
    },
    {
      "name": "management.context-path",
      "type": "java.lang.String",
      "description": "Management endpoint context-path.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties",
      "defaultValue": ""
    },
    {
      "name": "management.health.db.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable database health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.defaults.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable default health indicators.",
      "defaultValue": true
    },
    {
      "name": "management.health.diskspace.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable disk space health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.diskspace.path",
      "type": "java.io.File",
      "description": "Path used to compute the available disk space.",
      "sourceType": "org.springframework.boot.actuate.health.DiskSpaceHealthIndicatorProperties"
    },
    {
      "name": "management.health.diskspace.threshold",
      "type": "java.lang.Long",
      "description": "Minimum disk space that should be available, in bytes.",
      "sourceType": "org.springframework.boot.actuate.health.DiskSpaceHealthIndicatorProperties",
      "defaultValue": 0
    },
    {
      "name": "management.health.elasticsearch.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable elasticsearch health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.elasticsearch.indices",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated index names.",
      "sourceType": "org.springframework.boot.actuate.health.ElasticsearchHealthIndicatorProperties"
    },
    {
      "name": "management.health.elasticsearch.response-timeout",
      "type": "java.lang.Long",
      "description": "Time, in milliseconds, to wait for a response from the cluster.",
      "sourceType": "org.springframework.boot.actuate.health.ElasticsearchHealthIndicatorProperties",
      "defaultValue": 100
    },
    {
      "name": "management.health.jms.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable JMS health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.mail.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable Mail health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.mongo.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable MongoDB health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.rabbit.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable RabbitMQ health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.redis.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable Redis health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.solr.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable Solr health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.status.order",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of health statuses in order of severity.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.HealthIndicatorProperties"
    },
    {
      "name": "management.info.build.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable build info.",
      "defaultValue": true
    },
    {
      "name": "management.info.defaults.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable default info contributors.",
      "defaultValue": true
    },
    {
      "name": "management.info.env.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable environment info.",
      "defaultValue": true
    },
    {
      "name": "management.info.git.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable git info.",
      "defaultValue": true
    },
    {
      "name": "management.info.git.mode",
      "type": "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor<T>$Mode",
      "description": "Mode to use to expose git information.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.InfoContributorProperties$Git"
    },
    {
      "name": "management.port",
      "type": "java.lang.Integer",
      "description": "Management endpoint HTTP port. Use the same port as the application by default.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties"
    },
    {
      "name": "management.security.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable security.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties$Security",
      "defaultValue": true
    },
    {
      "name": "management.security.role",
      "type": "java.lang.String",
      "description": "Roles required to access the management endpoint.",
      "defaultValue": "ADMIN",
      "deprecated": true,
      "deprecation": {"replacement": "management.security.roles"}
    },
    {
      "name": "management.security.roles",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of roles that can access the management endpoint.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties$Security",
      "defaultValue": "ADMIN"
    },
    {
      "name": "management.security.sessions",
      "type": "org.springframework.security.config.http.SessionCreationPolicy",
      "description": "Session creating policy to use (always, never, if_required, stateless).",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ManagementServerProperties$Security"
    },
    {
      "name": "management.shell.auth.jaas.domain",
      "type": "java.lang.String",
      "description": "JAAS domain.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$JaasAuthenticationProperties",
      "defaultValue": "my-domain"
    },
    {
      "name": "management.shell.auth.key.path",
      "type": "java.lang.String",
      "description": "Path to the authentication key. This should point to a valid \".pem\" file.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$KeyAuthenticationProperties"
    },
    {
      "name": "management.shell.auth.simple.user.name",
      "type": "java.lang.String",
      "description": "Login user.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$SimpleAuthenticationProperties$User",
      "defaultValue": "user"
    },
    {
      "name": "management.shell.auth.simple.user.password",
      "type": "java.lang.String",
      "description": "Login password.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$SimpleAuthenticationProperties$User"
    },
    {
      "name": "management.shell.auth.spring.roles",
      "type": "java.lang.String[]",
      "description": "Comma-separated list of required roles to login to the CRaSH console.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$SpringAuthenticationProperties",
      "defaultValue": ["ADMIN"]
    },
    {
      "name": "management.shell.auth.type",
      "type": "java.lang.String",
      "description": "Authentication type. Auto-detected according to the environment (i.e. if Spring\n Security is available, \"spring\" is used by default).",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Auth",
      "defaultValue": "simple"
    },
    {
      "name": "management.shell.command-path-patterns",
      "type": "java.lang.String[]",
      "description": "Patterns to use to look for commands.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties",
      "defaultValue": [
        "classpath*:/commands/**",
        "classpath*:/crash/commands/**"
      ]
    },
    {
      "name": "management.shell.command-refresh-interval",
      "type": "java.lang.Integer",
      "description": "Scan for changes and update the command if necessary (in seconds).",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties",
      "defaultValue": -1
    },
    {
      "name": "management.shell.config-path-patterns",
      "type": "java.lang.String[]",
      "description": "Patterns to use to look for configurations.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties",
      "defaultValue": ["classpath*:/crash/*"]
    },
    {
      "name": "management.shell.disabled-commands",
      "type": "java.lang.String[]",
      "description": "Comma-separated list of commands to disable.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties",
      "defaultValue": [
        "jpa*",
        "jdbc*",
        "jndi*"
      ]
    },
    {
      "name": "management.shell.disabled-plugins",
      "type": "java.lang.String[]",
      "description": "Comma-separated list of plugins to disable. Certain plugins are disabled by default\n based on the environment.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties",
      "defaultValue": []
    },
    {
      "name": "management.shell.ssh.auth-timeout",
      "type": "java.lang.Integer",
      "description": "Number of milliseconds after user will be prompted to login again.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Ssh",
      "defaultValue": 600000
    },
    {
      "name": "management.shell.ssh.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable CRaSH SSH support.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Ssh",
      "defaultValue": true
    },
    {
      "name": "management.shell.ssh.idle-timeout",
      "type": "java.lang.Integer",
      "description": "Number of milliseconds after which unused connections are closed.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Ssh",
      "defaultValue": 600000
    },
    {
      "name": "management.shell.ssh.key-path",
      "type": "java.lang.String",
      "description": "Path to the SSH server key.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Ssh"
    },
    {
      "name": "management.shell.ssh.port",
      "type": "java.lang.Integer",
      "description": "SSH port.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Ssh",
      "defaultValue": 2000
    },
    {
      "name": "management.shell.telnet.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable CRaSH telnet support. Enabled by default if the TelnetPlugin is\n available.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Telnet",
      "defaultValue": false
    },
    {
      "name": "management.shell.telnet.port",
      "type": "java.lang.Integer",
      "description": "Telnet port.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.ShellProperties$Telnet",
      "defaultValue": 5000
    },
    {
      "name": "management.ssl.ciphers",
      "type": "java.lang.String[]",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.client-auth",
      "type": "org.springframework.boot.context.embedded.Ssl$ClientAuth",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.enabled-protocols",
      "type": "java.lang.String[]",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.key-alias",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.key-password",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.key-store",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.key-store-password",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.key-store-provider",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.key-store-type",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.protocol",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.trust-store",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.trust-store-password",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.trust-store-provider",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.ssl.trust-store-type",
      "type": "java.lang.String",
      "sourceType": "org.springframework.boot.context.embedded.Ssl"
    },
    {
      "name": "management.trace.include",
      "type": "java.util.Set<org.springframework.boot.actuate.trace.TraceProperties.Include>",
      "description": "Items to be included in the trace. Defaults to request/response headers (including\n cookies) and errors.",
      "sourceType": "org.springframework.boot.actuate.trace.TraceProperties"
    },
    {
      "name": "spring.git.properties",
      "type": "java.lang.String",
      "description": "Resource reference to a generated git info properties file.",
      "deprecated": true,
      "deprecation": {"replacement": "spring.info.git.location"}
    },
    {
      "name": "spring.metrics.export.aggregate.key-pattern",
      "type": "java.lang.String",
      "description": "Pattern that tells the aggregator what to do with the keys from the source\n repository. The keys in the source repository are assumed to be period\n separated, and the pattern is in the same format, e.g. \"d.d.k.d\". Here \"d\"\n means \"discard\" and \"k\" means \"keep\" the key segment in the corresponding\n position in the source.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Aggregate",
      "defaultValue": ""
    },
    {
      "name": "spring.metrics.export.aggregate.prefix",
      "type": "java.lang.String",
      "description": "Prefix for global repository if active. Should be unique for this JVM, but most\n useful if it also has the form \"a.b\" where \"a\" is unique to this logical\n process (this application) and \"b\" is unique to this physical process. If you\n set spring.application.name elsewhere, then the default will be in the right\n form.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Aggregate",
      "defaultValue": ""
    },
    {
      "name": "spring.metrics.export.delay-millis",
      "type": "java.lang.Long",
      "description": "Delay in milliseconds between export ticks. Metrics are exported to external\n sources on a schedule with this delay.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties"
    },
    {
      "name": "spring.metrics.export.enabled",
      "type": "java.lang.Boolean",
      "description": "Flag to enable metric export (assuming a MetricWriter is available).",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties"
    },
    {
      "name": "spring.metrics.export.excludes",
      "type": "java.lang.String[]",
      "description": "List of patterns for metric names to exclude. Applied after the includes.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties"
    },
    {
      "name": "spring.metrics.export.includes",
      "type": "java.lang.String[]",
      "description": "List of patterns for metric names to include.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties"
    },
    {
      "name": "spring.metrics.export.redis.key",
      "type": "java.lang.String",
      "description": "Key for redis repository export (if active). Should be globally unique for a\n system sharing a redis repository across multiple processes.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Redis",
      "defaultValue": "keys.spring.metrics"
    },
    {
      "name": "spring.metrics.export.redis.prefix",
      "type": "java.lang.String",
      "description": "Prefix for redis repository if active. Should be globally unique across all\n processes sharing the same repository.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Redis",
      "defaultValue": "spring.metrics"
    },
    {
      "name": "spring.metrics.export.send-latest",
      "type": "java.lang.Boolean",
      "description": "Flag to switch off any available optimizations based on not exporting unchanged\n metric values.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties"
    },
    {
      "name": "spring.metrics.export.statsd.host",
      "type": "java.lang.String",
      "description": "Host of a statsd server to receive exported metrics.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Statsd"
    },
    {
      "name": "spring.metrics.export.statsd.port",
      "type": "java.lang.Integer",
      "description": "Port of a statsd server to receive exported metrics.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Statsd",
      "defaultValue": 8125
    },
    {
      "name": "spring.metrics.export.statsd.prefix",
      "type": "java.lang.String",
      "description": "Prefix for statsd exported metrics.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties$Statsd"
    },
    {
      "name": "spring.metrics.export.triggers",
      "type": "java.util.Map<java.lang.String,org.springframework.boot.actuate.metrics.export.SpecificTriggerProperties>",
      "description": "Specific trigger properties per MetricWriter bean name.",
      "sourceType": "org.springframework.boot.actuate.metrics.export.MetricExportProperties"
    },
    {
      "name": "spring.pid.fail-on-write-error",
      "type": "java.lang.Boolean",
      "description": "Fail if ApplicationPidFileWriter is used but it cannot write the PID file.",
      "sourceType": "org.springframework.boot.actuate.system.ApplicationPidFileWriter"
    },
    {
      "name": "spring.pid.file",
      "type": "java.lang.String",
      "description": "Location of the PID file to write (if ApplicationPidFileWriter is used).",
      "sourceType": "org.springframework.boot.actuate.system.ApplicationPidFileWriter"
    },
    {
      "name": "spring.pidfile",
      "type": "java.lang.String",
      "description": "Location of the PID file to write (if ApplicationPidFileWriter is used).",
      "sourceType": "org.springframework.boot.actuate.system.ApplicationPidFileWriter",
      "deprecated": true,
      "deprecation": {"replacement": "spring.pid.file"}
    }
  ],
  "hints": [
    {
      "name": "endpoints.cors.allowed-headers",
      "values": [{"value": "*"}],
      "providers": [{"name": "any"}]
    },
    {
      "name": "endpoints.cors.allowed-methods",
      "values": [{"value": "*"}],
      "providers": [{"name": "any"}]
    },
    {
      "name": "endpoints.cors.allowed-origins",
      "values": [{"value": "*"}],
      "providers": [{"name": "any"}]
    },
    {
      "name": "management.health.status.order",
      "values": [
        {"value": "UNKNOWN"},
        {"value": "UP"},
        {"value": "DOWN"},
        {"value": "OUT_OF_SERVICE"}
      ],
      "providers": [{"name": "any"}]
    },
    {
      "name": "management.shell.auth.type",
      "values": [
        {
          "value": "simple",
          "description": "Use a simple user/password based authentication."
        },
        {
          "value": "spring",
          "description": "Integrate with Spring Security."
        },
        {
          "value": "key",
          "description": "Use a Key-based authentication."
        },
        {
          "value": "jaas",
          "description": "Use JAAS authentication."
        }
      ]
    }
  ]
}