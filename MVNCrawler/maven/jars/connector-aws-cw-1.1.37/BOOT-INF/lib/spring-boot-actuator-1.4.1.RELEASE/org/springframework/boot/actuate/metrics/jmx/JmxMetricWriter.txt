Compiled from "JmxMetricWriter.java"
public class org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter implements org.springframework.boot.actuate.metrics.writer.MetricWriter {
  private static final org.apache.commons.logging.Log logger;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter$MetricValue> values;

  private final org.springframework.jmx.export.MBeanExporter exporter;

  private org.springframework.jmx.export.naming.ObjectNamingStrategy namingStrategy;

  private java.lang.String domain;

  public org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter(org.springframework.jmx.export.MBeanExporter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #5                  // class org/springframework/boot/actuate/metrics/jmx/DefaultMetricNamingStrategy
      19: dup
      20: invokespecial #6                  // Method org/springframework/boot/actuate/metrics/jmx/DefaultMetricNamingStrategy."<init>":()V
      23: putfield      #7                  // Field namingStrategy:Lorg/springframework/jmx/export/naming/ObjectNamingStrategy;
      26: aload_0
      27: ldc           #8                  // String org.springframework.metrics
      29: putfield      #9                  // Field domain:Ljava/lang/String;
      32: aload_0
      33: aload_1
      34: putfield      #10                 // Field exporter:Lorg/springframework/jmx/export/MBeanExporter;
      37: return

  public void setNamingStrategy(org.springframework.jmx.export.naming.ObjectNamingStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field namingStrategy:Lorg/springframework/jmx/export/naming/ObjectNamingStrategy;
       5: return

  public void setDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field domain:Ljava/lang/String;
       5: return

  public void increment(java.lang.String, long);
    Code:
       0: aload_0
       1: new           #11                 // class org/springframework/boot/actuate/metrics/writer/Delta
       4: dup
       5: aload_1
       6: lload_2
       7: invokestatic  #12                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      10: invokespecial #13                 // Method org/springframework/boot/actuate/metrics/writer/Delta."<init>":(Ljava/lang/String;Ljava/lang/Number;)V
      13: invokevirtual #14                 // Method increment:(Lorg/springframework/boot/actuate/metrics/writer/Delta;)V
      16: return

  public void increment(org.springframework.boot.actuate.metrics.writer.Delta<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method org/springframework/boot/actuate/metrics/writer/Delta.getName:()Ljava/lang/String;
       5: invokespecial #16                 // Method getValue:(Ljava/lang/String;)Lorg/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue;
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #17                 // Method org/springframework/boot/actuate/metrics/writer/Delta.getValue:()Ljava/lang/Number;
      14: invokevirtual #18                 // Method java/lang/Number.longValue:()J
      17: invokevirtual #19                 // Method org/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue.increment:(J)V
      20: return

  public void set(java.lang.String, double);
    Code:
       0: aload_0
       1: new           #20                 // class org/springframework/boot/actuate/metrics/Metric
       4: dup
       5: aload_1
       6: dload_2
       7: invokestatic  #21                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      10: invokespecial #22                 // Method org/springframework/boot/actuate/metrics/Metric."<init>":(Ljava/lang/String;Ljava/lang/Number;)V
      13: invokevirtual #23                 // Method set:(Lorg/springframework/boot/actuate/metrics/Metric;)V
      16: return

  public void set(org.springframework.boot.actuate.metrics.Metric<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method org/springframework/boot/actuate/metrics/Metric.getName:()Ljava/lang/String;
       5: invokespecial #16                 // Method getValue:(Ljava/lang/String;)Lorg/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue;
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #25                 // Method org/springframework/boot/actuate/metrics/Metric.getValue:()Ljava/lang/Number;
      14: invokevirtual #26                 // Method java/lang/Number.doubleValue:()D
      17: invokevirtual #27                 // Method org/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue.setValue:(D)V
      20: return

  public void reset(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class org/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue
      13: astore_2
      14: aload_2
      15: ifnull        62
      18: aload_0
      19: getfield      #10                 // Field exporter:Lorg/springframework/jmx/export/MBeanExporter;
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokespecial #30                 // Method getName:(Ljava/lang/String;Lorg/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue;)Ljavax/management/ObjectName;
      28: invokevirtual #31                 // Method org/springframework/jmx/export/MBeanExporter.unregisterManagedResource:(Ljavax/management/ObjectName;)V
      31: goto          62
      34: astore_3
      35: getstatic     #33                 // Field logger:Lorg/apache/commons/logging/Log;
      38: new           #34                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #36                 // String Could not unregister MBean for
      47: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      62: return
    Exception table:
       from    to  target type
          18    31    34   Class javax/management/MalformedObjectNameException

  private org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter$MetricValue getValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class org/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue
      13: astore_2
      14: aload_2
      15: ifnonnull     66
      18: new           #29                 // class org/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue
      21: dup
      22: invokespecial #41                 // Method org/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue."<init>":()V
      25: astore_2
      26: aload_0
      27: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentMap;
      30: aload_1
      31: aload_2
      32: invokeinterface #42,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #29                 // class org/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue
      40: astore_3
      41: aload_3
      42: ifnull        47
      45: aload_3
      46: astore_2
      47: aload_0
      48: getfield      #10                 // Field exporter:Lorg/springframework/jmx/export/MBeanExporter;
      51: aload_2
      52: aload_0
      53: aload_1
      54: aload_2
      55: invokespecial #30                 // Method getName:(Ljava/lang/String;Lorg/springframework/boot/actuate/metrics/jmx/JmxMetricWriter$MetricValue;)Ljavax/management/ObjectName;
      58: invokevirtual #43                 // Method org/springframework/jmx/export/MBeanExporter.registerManagedResource:(Ljava/lang/Object;Ljavax/management/ObjectName;)V
      61: goto          66
      64: astore        4
      66: aload_2
      67: areturn
    Exception table:
       from    to  target type
          47    61    64   Class java/lang/Exception

  private javax.management.ObjectName getName(java.lang.String, org.springframework.boot.actuate.metrics.jmx.JmxMetricWriter$MetricValue) throws javax.management.MalformedObjectNameException;
    Code:
       0: new           #34                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #9                  // Field domain:Ljava/lang/String;
      11: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #45                 // String :type=MetricValue,name=%s
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: iconst_1
      23: anewarray     #46                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_1
      29: aastore
      30: invokestatic  #47                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: astore_3
      34: aload_0
      35: getfield      #7                  // Field namingStrategy:Lorg/springframework/jmx/export/naming/ObjectNamingStrategy;
      38: aload_2
      39: aload_3
      40: invokeinterface #48,  3           // InterfaceMethod org/springframework/jmx/export/naming/ObjectNamingStrategy.getObjectName:(Ljava/lang/Object;Ljava/lang/String;)Ljavax/management/ObjectName;
      45: areturn

  static {};
    Code:
       0: ldc           #49                 // class org/springframework/boot/actuate/metrics/jmx/JmxMetricWriter
       2: invokestatic  #50                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #33                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
