Compiled from "RichGauge.java"
public final class org.springframework.boot.actuate.metrics.rich.RichGauge {
  public static final java.lang.String COUNT;

  public static final java.lang.String MAX;

  public static final java.lang.String MIN;

  public static final java.lang.String AVG;

  public static final java.lang.String ALPHA;

  public static final java.lang.String VAL;

  private final java.lang.String name;

  private double value;

  private double average;

  private double max;

  private double min;

  private long count;

  private double alpha;

  public org.springframework.boot.actuate.metrics.rich.RichGauge(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;D)V
       6: aload_0
       7: lconst_0
       8: putfield      #2                  // Field count:J
      11: return

  public org.springframework.boot.actuate.metrics.rich.RichGauge(java.lang.String, double);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String The gauge name cannot be null or empty
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #6                  // Field name:Ljava/lang/String;
      15: aload_0
      16: dload_2
      17: putfield      #7                  // Field value:D
      20: aload_0
      21: aload_0
      22: getfield      #7                  // Field value:D
      25: putfield      #8                  // Field average:D
      28: aload_0
      29: aload_0
      30: getfield      #7                  // Field value:D
      33: putfield      #9                  // Field min:D
      36: aload_0
      37: aload_0
      38: getfield      #7                  // Field value:D
      41: putfield      #10                 // Field max:D
      44: aload_0
      45: ldc2_w        #11                 // double -1.0d
      48: putfield      #13                 // Field alpha:D
      51: aload_0
      52: lconst_1
      53: putfield      #2                  // Field count:J
      56: return

  public org.springframework.boot.actuate.metrics.rich.RichGauge(java.lang.String, double, double, double, double, double, long);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field name:Ljava/lang/String;
       9: aload_0
      10: dload_2
      11: putfield      #7                  // Field value:D
      14: aload_0
      15: dload         4
      17: putfield      #13                 // Field alpha:D
      20: aload_0
      21: dload         6
      23: putfield      #8                  // Field average:D
      26: aload_0
      27: dload         8
      29: putfield      #10                 // Field max:D
      32: aload_0
      33: dload         10
      35: putfield      #9                  // Field min:D
      38: aload_0
      39: lload         12
      41: putfield      #2                  // Field count:J
      44: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field name:Ljava/lang/String;
       4: areturn

  public double getValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field value:D
       4: dreturn

  public double getAverage();
    Code:
       0: aload_0
       1: getfield      #8                  // Field average:D
       4: dreturn

  public double getMax();
    Code:
       0: aload_0
       1: getfield      #10                 // Field max:D
       4: dreturn

  public double getMin();
    Code:
       0: aload_0
       1: getfield      #9                  // Field min:D
       4: dreturn

  public long getCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:J
       4: lreturn

  public double getAlpha();
    Code:
       0: aload_0
       1: getfield      #13                 // Field alpha:D
       4: dreturn

  public org.springframework.boot.actuate.metrics.rich.RichGauge setAlpha(double);
    Code:
       0: dload_1
       1: ldc2_w        #11                 // double -1.0d
       4: dcmpl
       5: ifeq          20
       8: dload_1
       9: dconst_0
      10: dcmpl
      11: ifle          24
      14: dload_1
      15: dconst_1
      16: dcmpg
      17: ifge          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #14                 // String Smoothing constant must be between 0 and 1, or -1 to use arithmetic mean
      27: invokestatic  #15                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      30: aload_0
      31: dload_1
      32: putfield      #13                 // Field alpha:D
      35: aload_0
      36: areturn

  org.springframework.boot.actuate.metrics.rich.RichGauge set(double);
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:J
       4: lconst_0
       5: lcmp
       6: ifne          22
       9: aload_0
      10: dload_1
      11: putfield      #10                 // Field max:D
      14: aload_0
      15: dload_1
      16: putfield      #9                  // Field min:D
      19: goto          53
      22: dload_1
      23: aload_0
      24: getfield      #10                 // Field max:D
      27: dcmpl
      28: ifle          39
      31: aload_0
      32: dload_1
      33: putfield      #10                 // Field max:D
      36: goto          53
      39: dload_1
      40: aload_0
      41: getfield      #9                  // Field min:D
      44: dcmpg
      45: ifge          53
      48: aload_0
      49: dload_1
      50: putfield      #9                  // Field min:D
      53: aload_0
      54: getfield      #13                 // Field alpha:D
      57: dconst_0
      58: dcmpl
      59: ifle          99
      62: aload_0
      63: getfield      #2                  // Field count:J
      66: lconst_0
      67: lcmp
      68: ifle          99
      71: aload_0
      72: aload_0
      73: getfield      #13                 // Field alpha:D
      76: aload_0
      77: getfield      #7                  // Field value:D
      80: dmul
      81: dconst_1
      82: aload_0
      83: getfield      #13                 // Field alpha:D
      86: dsub
      87: aload_0
      88: getfield      #8                  // Field average:D
      91: dmul
      92: dadd
      93: putfield      #8                  // Field average:D
      96: goto          127
      99: aload_0
     100: getfield      #8                  // Field average:D
     103: aload_0
     104: getfield      #2                  // Field count:J
     107: l2d
     108: dmul
     109: dstore_3
     110: dload_3
     111: dload_1
     112: dadd
     113: dstore_3
     114: aload_0
     115: dload_3
     116: aload_0
     117: getfield      #2                  // Field count:J
     120: lconst_1
     121: ladd
     122: l2d
     123: ddiv
     124: putfield      #8                  // Field average:D
     127: aload_0
     128: dup
     129: getfield      #2                  // Field count:J
     132: lconst_1
     133: ladd
     134: putfield      #2                  // Field count:J
     137: aload_0
     138: dload_1
     139: putfield      #7                  // Field value:D
     142: aload_0
     143: areturn

  org.springframework.boot.actuate.metrics.rich.RichGauge reset();
    Code:
       0: aload_0
       1: dconst_0
       2: putfield      #7                  // Field value:D
       5: aload_0
       6: dconst_0
       7: putfield      #10                 // Field max:D
      10: aload_0
      11: dconst_0
      12: putfield      #9                  // Field min:D
      15: aload_0
      16: dconst_0
      17: putfield      #8                  // Field average:D
      20: aload_0
      21: lconst_0
      22: putfield      #2                  // Field count:J
      25: aload_0
      26: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #17                 // class org/springframework/boot/actuate/metrics/rich/RichGauge
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field name:Ljava/lang/String;
      33: aload_2
      34: getfield      #6                  // Field name:Ljava/lang/String;
      37: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: iconst_1
      46: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field name:Ljava/lang/String;
       4: invokevirtual #19                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #22                 // String Gauge [name =
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field name:Ljava/lang/String;
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #24                 // String , value =
      21: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field value:D
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      31: ldc           #26                 // String , alpha =
      33: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #13                 // Field alpha:D
      40: invokevirtual #25                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      43: ldc           #27                 // String , average =
      45: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #8                  // Field average:D
      52: invokevirtual #25                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      55: ldc           #28                 // String , max =
      57: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #10                 // Field max:D
      64: invokevirtual #25                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      67: ldc           #29                 // String , min =
      69: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #9                  // Field min:D
      76: invokevirtual #25                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      79: ldc           #30                 // String , count =
      81: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #2                  // Field count:J
      88: invokevirtual #31                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      91: ldc           #32                 // String ]
      93: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: areturn
}
