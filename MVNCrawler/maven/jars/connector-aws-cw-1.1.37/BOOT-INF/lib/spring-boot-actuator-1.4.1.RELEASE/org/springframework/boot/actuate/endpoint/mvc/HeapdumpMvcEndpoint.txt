Compiled from "HeapdumpMvcEndpoint.java"
public class org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint extends org.springframework.boot.actuate.endpoint.mvc.AbstractMvcEndpoint {
  private final long timeout;

  private final java.util.concurrent.locks.Lock lock;

  private org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint$HeapDumper heapDumper;

  public org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       4: ldc2_w        #2                  // long 10l
       7: invokevirtual #4                  // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      10: invokespecial #5                  // Method "<init>":(J)V
      13: return

  protected org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint(long);
    Code:
       0: aload_0
       1: ldc           #6                  // String /heapdump
       3: iconst_1
       4: invokespecial #7                  // Method org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint."<init>":(Ljava/lang/String;Z)V
       7: aload_0
       8: new           #8                  // class java/util/concurrent/locks/ReentrantLock
      11: dup
      12: invokespecial #9                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      15: putfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: aload_0
      19: lload_1
      20: putfield      #11                 // Field timeout:J
      23: return

  public void invoke(boolean, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isEnabled:()Z
       4: ifne          20
       7: aload_3
       8: getstatic     #13                 // Field org/springframework/http/HttpStatus.NOT_FOUND:Lorg/springframework/http/HttpStatus;
      11: invokevirtual #14                 // Method org/springframework/http/HttpStatus.value:()I
      14: invokeinterface #15,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      19: return
      20: aload_0
      21: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      24: aload_0
      25: getfield      #11                 // Field timeout:J
      28: getstatic     #16                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      31: invokeinterface #17,  4           // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:(JLjava/util/concurrent/TimeUnit;)Z
      36: ifeq          70
      39: aload_0
      40: iload_1
      41: aload_2
      42: aload_3
      43: invokespecial #18                 // Method dumpHeap:(ZLjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      46: aload_0
      47: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      50: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      55: return
      56: astore        4
      58: aload_0
      59: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      62: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      67: aload         4
      69: athrow
      70: goto          81
      73: astore        4
      75: invokestatic  #21                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      78: invokevirtual #22                 // Method java/lang/Thread.interrupt:()V
      81: aload_3
      82: getstatic     #23                 // Field org/springframework/http/HttpStatus.TOO_MANY_REQUESTS:Lorg/springframework/http/HttpStatus;
      85: invokevirtual #14                 // Method org/springframework/http/HttpStatus.value:()I
      88: invokeinterface #15,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      93: return
    Exception table:
       from    to  target type
          39    46    56   any
          56    58    56   any
          20    55    73   Class java/lang/InterruptedException
          56    70    73   Class java/lang/InterruptedException

  private void dumpHeap(boolean, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field heapDumper:Lorg/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint$HeapDumper;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #25                 // Method createHeapDumper:()Lorg/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint$HeapDumper;
      12: putfield      #24                 // Field heapDumper:Lorg/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint$HeapDumper;
      15: aload_0
      16: iload_1
      17: invokespecial #26                 // Method createTempFile:(Z)Ljava/io/File;
      20: astore        4
      22: aload_0
      23: getfield      #24                 // Field heapDumper:Lorg/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint$HeapDumper;
      26: aload         4
      28: iload_1
      29: invokeinterface #27,  3           // InterfaceMethod org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint$HeapDumper.dumpHeap:(Ljava/io/File;Z)V
      34: aload_0
      35: aload         4
      37: aload_2
      38: aload_3
      39: invokevirtual #28                 // Method handle:(Ljava/io/File;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      42: aload         4
      44: invokevirtual #29                 // Method java/io/File.delete:()Z
      47: pop
      48: goto          62
      51: astore        5
      53: aload         4
      55: invokevirtual #29                 // Method java/io/File.delete:()Z
      58: pop
      59: aload         5
      61: athrow
      62: return
    Exception table:
       from    to  target type
          22    42    51   any
          51    53    51   any

  private java.io.File createTempFile(boolean) throws java.io.IOException;
    Code:
       0: new           #30                 // class java/text/SimpleDateFormat
       3: dup
       4: ldc           #31                 // String yyyy-MM-dd-HH-mm
       6: invokespecial #32                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
       9: new           #33                 // class java/util/Date
      12: dup
      13: invokespecial #34                 // Method java/util/Date."<init>":()V
      16: invokevirtual #35                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      19: astore_2
      20: new           #36                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #38                 // String heapdump
      29: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_2
      33: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: iload_1
      37: ifeq          45
      40: ldc           #40                 // String -live
      42: goto          47
      45: ldc           #41                 // String
      47: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: ldc           #43                 // String .hprof
      55: invokestatic  #44                 // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
      58: astore_3
      59: aload_3
      60: invokevirtual #29                 // Method java/io/File.delete:()Z
      63: pop
      64: aload_3
      65: areturn

  protected org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint$HeapDumper createHeapDumper() throws org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint$HeapDumperUnavailableException;
    Code:
       0: new           #45                 // class org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint$HotSpotDiagnosticMXBeanHeapDumper
       3: dup
       4: invokespecial #46                 // Method org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint$HotSpotDiagnosticMXBeanHeapDumper."<init>":()V
       7: areturn

  protected void handle(java.io.File, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_3
       1: ldc           #47                 // String application/octet-stream
       3: invokeinterface #48,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
       8: aload_3
       9: ldc           #49                 // String Content-Disposition
      11: new           #36                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #50                 // String attachment; filename=\"
      20: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #51                 // Method java/io/File.getName:()Ljava/lang/String;
      27: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #52                 // String .gz
      32: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #53                 // String \"
      37: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #54,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      48: new           #55                 // class java/io/FileInputStream
      51: dup
      52: aload_1
      53: invokespecial #56                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      56: astore        4
      58: new           #57                 // class java/util/zip/GZIPOutputStream
      61: dup
      62: aload_3
      63: invokeinterface #58,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getOutputStream:()Ljavax/servlet/ServletOutputStream;
      68: invokespecial #59                 // Method java/util/zip/GZIPOutputStream."<init>":(Ljava/io/OutputStream;)V
      71: astore        5
      73: aload         4
      75: aload         5
      77: invokestatic  #60                 // Method org/springframework/util/StreamUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      80: pop
      81: aload         5
      83: invokevirtual #61                 // Method java/util/zip/GZIPOutputStream.finish:()V
      86: aload         4
      88: invokevirtual #62                 // Method java/io/InputStream.close:()V
      91: goto          129
      94: astore        5
      96: goto          129
      99: astore        5
     101: aload         4
     103: invokevirtual #62                 // Method java/io/InputStream.close:()V
     106: goto          129
     109: astore        5
     111: goto          129
     114: astore        6
     116: aload         4
     118: invokevirtual #62                 // Method java/io/InputStream.close:()V
     121: goto          126
     124: astore        7
     126: aload         6
     128: athrow
     129: goto          134
     132: astore        4
     134: return
    Exception table:
       from    to  target type
          86    91    94   Class java/lang/Throwable
          58    86    99   Class java/lang/NullPointerException
         101   106   109   Class java/lang/Throwable
          58    86   114   any
          99   101   114   any
         116   121   124   Class java/lang/Throwable
         114   116   114   any
          48   129   132   Class java/io/FileNotFoundException
}
