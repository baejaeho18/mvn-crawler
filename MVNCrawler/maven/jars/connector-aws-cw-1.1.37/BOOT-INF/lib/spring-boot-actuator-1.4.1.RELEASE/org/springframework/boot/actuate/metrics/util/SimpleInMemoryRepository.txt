Compiled from "SimpleInMemoryRepository.java"
public class org.springframework.boot.actuate.metrics.util.SimpleInMemoryRepository<T> {
  private java.util.concurrent.ConcurrentNavigableMap<java.lang.String, T> values;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> locks;

  public org.springframework.boot.actuate.metrics.util.SimpleInMemoryRepository();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentSkipListMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
      12: putfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #7                  // Field locks:Ljava/util/concurrent/ConcurrentMap;
      26: return

  public T update(java.lang.String, org.springframework.boot.actuate.metrics.util.SimpleInMemoryRepository$Callback<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method getLock:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: dup
       8: astore        4
      10: monitorenter
      11: aload_0
      12: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
      15: aload_1
      16: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore        5
      23: aload_2
      24: aload         5
      26: invokeinterface #10,  2           // InterfaceMethod org/springframework/boot/actuate/metrics/util/SimpleInMemoryRepository$Callback.modify:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore        6
      33: aload_0
      34: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
      37: aload_1
      38: aload         6
      40: invokeinterface #11,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload         6
      48: aload         4
      50: monitorexit
      51: areturn
      52: astore        7
      54: aload         4
      56: monitorexit
      57: aload         7
      59: athrow
    Exception table:
       from    to  target type
          11    51    52   any
          52    57    52   any

  private java.lang.Object getLock(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field locks:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnonnull     41
      15: new           #13                 // class java/lang/Object
      18: dup
      19: invokespecial #1                  // Method java/lang/Object."<init>":()V
      22: astore_3
      23: aload_0
      24: getfield      #7                  // Field locks:Ljava/util/concurrent/ConcurrentMap;
      27: aload_1
      28: aload_3
      29: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: astore_2
      35: aload_2
      36: ifnonnull     41
      39: aload_3
      40: astore_2
      41: aload_2
      42: areturn

  public void set(java.lang.String, T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #11,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public long count();
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.size:()I
       9: i2l
      10: lreturn

  public void remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public T findOne(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.lang.Iterable<T> findAll();
    Code:
       0: new           #17                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
       8: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.values:()Ljava/util/Collection;
      13: invokespecial #19                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: areturn

  public java.lang.Iterable<T> findAllWithPrefix(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #20                 // String .*
       3: invokevirtual #21                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifeq          21
       9: aload_1
      10: iconst_0
      11: aload_1
      12: invokevirtual #22                 // Method java/lang/String.length:()I
      15: iconst_1
      16: isub
      17: invokevirtual #23                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      20: astore_1
      21: aload_1
      22: ldc           #24                 // String .
      24: invokevirtual #21                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      27: ifne          50
      30: new           #25                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      37: aload_1
      38: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #24                 // String .
      43: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: astore_1
      50: new           #17                 // class java/util/ArrayList
      53: dup
      54: aload_0
      55: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
      58: aload_1
      59: iconst_0
      60: new           #25                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      67: aload_1
      68: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #29                 // String ~
      73: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: iconst_1
      80: invokeinterface #30,  5           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      85: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.values:()Ljava/util/Collection;
      90: invokespecial #19                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      93: areturn

  public void setValues(java.util.concurrent.ConcurrentNavigableMap<java.lang.String, T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
       5: return

  protected java.util.NavigableMap<java.lang.String, T> getValues();
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: areturn
}
