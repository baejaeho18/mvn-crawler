Compiled from "DropwizardMetricServices.java"
public class org.springframework.boot.actuate.metrics.dropwizard.DropwizardMetricServices implements org.springframework.boot.actuate.metrics.CounterService,org.springframework.boot.actuate.metrics.GaugeService {
  private final com.codahale.metrics.MetricRegistry registry;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.springframework.boot.actuate.metrics.dropwizard.DropwizardMetricServices$SimpleGauge> gauges;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.String> names;

  public org.springframework.boot.actuate.metrics.dropwizard.DropwizardMetricServices(com.codahale.metrics.MetricRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field gauges:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #5                  // Field names:Ljava/util/concurrent/ConcurrentHashMap;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field registry:Lcom/codahale/metrics/MetricRegistry;
      31: return

  public void increment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_1
       3: invokespecial #7                  // Method incrementInternal:(Ljava/lang/String;J)V
       6: return

  public void decrement(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #8                  // long -1l
       5: invokespecial #7                  // Method incrementInternal:(Ljava/lang/String;J)V
       8: return

  private void incrementInternal(java.lang.String, long);
    Code:
       0: aload_1
       1: ldc           #10                 // String meter
       3: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          28
       9: aload_0
      10: getfield      #6                  // Field registry:Lcom/codahale/metrics/MetricRegistry;
      13: aload_1
      14: invokevirtual #12                 // Method com/codahale/metrics/MetricRegistry.meter:(Ljava/lang/String;)Lcom/codahale/metrics/Meter;
      17: astore        4
      19: aload         4
      21: lload_2
      22: invokevirtual #13                 // Method com/codahale/metrics/Meter.mark:(J)V
      25: goto          50
      28: aload_0
      29: aload_1
      30: invokespecial #14                 // Method wrapCounterName:(Ljava/lang/String;)Ljava/lang/String;
      33: astore_1
      34: aload_0
      35: getfield      #6                  // Field registry:Lcom/codahale/metrics/MetricRegistry;
      38: aload_1
      39: invokevirtual #15                 // Method com/codahale/metrics/MetricRegistry.counter:(Ljava/lang/String;)Lcom/codahale/metrics/Counter;
      42: astore        4
      44: aload         4
      46: lload_2
      47: invokevirtual #16                 // Method com/codahale/metrics/Counter.inc:(J)V
      50: return

  public void submit(java.lang.String, double);
    Code:
       0: aload_1
       1: ldc           #17                 // String histogram
       3: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          33
       9: dload_2
      10: d2l
      11: lstore        4
      13: aload_0
      14: getfield      #6                  // Field registry:Lcom/codahale/metrics/MetricRegistry;
      17: aload_1
      18: invokevirtual #18                 // Method com/codahale/metrics/MetricRegistry.histogram:(Ljava/lang/String;)Lcom/codahale/metrics/Histogram;
      21: astore        6
      23: aload         6
      25: lload         4
      27: invokevirtual #19                 // Method com/codahale/metrics/Histogram.update:(J)V
      30: goto          81
      33: aload_1
      34: ldc           #20                 // String timer
      36: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      39: ifeq          69
      42: dload_2
      43: d2l
      44: lstore        4
      46: aload_0
      47: getfield      #6                  // Field registry:Lcom/codahale/metrics/MetricRegistry;
      50: aload_1
      51: invokevirtual #21                 // Method com/codahale/metrics/MetricRegistry.timer:(Ljava/lang/String;)Lcom/codahale/metrics/Timer;
      54: astore        6
      56: aload         6
      58: lload         4
      60: getstatic     #22                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      63: invokevirtual #23                 // Method com/codahale/metrics/Timer.update:(JLjava/util/concurrent/TimeUnit;)V
      66: goto          81
      69: aload_0
      70: aload_1
      71: invokespecial #24                 // Method wrapGaugeName:(Ljava/lang/String;)Ljava/lang/String;
      74: astore_1
      75: aload_0
      76: aload_1
      77: dload_2
      78: invokespecial #25                 // Method setGaugeValue:(Ljava/lang/String;D)V
      81: return

  private void setGaugeValue(java.lang.String, double);
    Code:
       0: aload_0
       1: getfield      #4                  // Field gauges:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #27                 // class org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices$SimpleGauge
      13: astore        4
      15: aload         4
      17: ifnonnull     65
      20: new           #27                 // class org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices$SimpleGauge
      23: dup
      24: dload_2
      25: aconst_null
      26: invokespecial #28                 // Method org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices$SimpleGauge."<init>":(DLorg/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices$1;)V
      29: astore        5
      31: aload_0
      32: getfield      #4                  // Field gauges:Ljava/util/concurrent/ConcurrentMap;
      35: aload_1
      36: aload         5
      38: invokeinterface #29,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #27                 // class org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices$SimpleGauge
      46: astore        4
      48: aload         4
      50: ifnonnull     65
      53: aload_0
      54: getfield      #6                  // Field registry:Lcom/codahale/metrics/MetricRegistry;
      57: aload_1
      58: aload         5
      60: invokevirtual #30                 // Method com/codahale/metrics/MetricRegistry.register:(Ljava/lang/String;Lcom/codahale/metrics/Metric;)Lcom/codahale/metrics/Metric;
      63: pop
      64: return
      65: aload         4
      67: dload_2
      68: invokevirtual #31                 // Method org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices$SimpleGauge.setValue:(D)V
      71: return

  private java.lang.String wrapGaugeName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #32                 // String gauge.
       4: invokespecial #33                 // Method wrapName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  private java.lang.String wrapCounterName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #34                 // String counter.
       4: invokespecial #33                 // Method wrapName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  private java.lang.String wrapName(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field names:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #35                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #36                 // class java/lang/String
      11: astore_3
      12: aload_3
      13: ifnull        18
      16: aload_3
      17: areturn
      18: aload_1
      19: aload_2
      20: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      23: ifeq          28
      26: aload_1
      27: areturn
      28: new           #37                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      35: aload_2
      36: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: astore        4
      48: aload_0
      49: getfield      #5                  // Field names:Ljava/util/concurrent/ConcurrentHashMap;
      52: aload_1
      53: aload         4
      55: invokevirtual #41                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload         4
      61: areturn

  public void reset(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #10                 // String meter
       3: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokespecial #14                 // Method wrapCounterName:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_1
      15: aload_0
      16: getfield      #6                  // Field registry:Lcom/codahale/metrics/MetricRegistry;
      19: aload_1
      20: invokevirtual #42                 // Method com/codahale/metrics/MetricRegistry.remove:(Ljava/lang/String;)Z
      23: pop
      24: return
}
