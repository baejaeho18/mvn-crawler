Compiled from "PropertyUtils.java"
public class org.yaml.snakeyaml.introspector.PropertyUtils {
  private final java.util.Map<java.lang.Class<?>, java.util.Map<java.lang.String, org.yaml.snakeyaml.introspector.Property>> propertiesCache;

  private final java.util.Map<java.lang.Class<?>, java.util.Set<org.yaml.snakeyaml.introspector.Property>> readableProperties;

  private org.yaml.snakeyaml.introspector.BeanAccess beanAccess;

  private boolean allowReadOnlyProperties;

  private boolean skipMissingProperties;

  public org.yaml.snakeyaml.introspector.PropertyUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field propertiesCache:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field readableProperties:Ljava/util/Map;
      26: aload_0
      27: getstatic     #6                  // Field org/yaml/snakeyaml/introspector/BeanAccess.DEFAULT:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      30: putfield      #7                  // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      33: aload_0
      34: iconst_0
      35: putfield      #8                  // Field allowReadOnlyProperties:Z
      38: aload_0
      39: iconst_0
      40: putfield      #9                  // Field skipMissingProperties:Z
      43: return

  protected java.util.Map<java.lang.String, org.yaml.snakeyaml.introspector.Property> getPropertiesMap(java.lang.Class<?>, org.yaml.snakeyaml.introspector.BeanAccess) throws java.beans.IntrospectionException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertiesCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #4                  // Field propertiesCache:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #12                 // class java/util/Map
      26: areturn
      27: new           #13                 // class java/util/LinkedHashMap
      30: dup
      31: invokespecial #14                 // Method java/util/LinkedHashMap."<init>":()V
      34: astore_3
      35: iconst_0
      36: istore        4
      38: getstatic     #15                 // Field org/yaml/snakeyaml/introspector/PropertyUtils$1.$SwitchMap$org$yaml$snakeyaml$introspector$BeanAccess:[I
      41: aload_2
      42: invokevirtual #16                 // Method org/yaml/snakeyaml/introspector/BeanAccess.ordinal:()I
      45: iaload
      46: lookupswitch  { // 1
                     1: 64
               default: 178
          }
      64: aload_1
      65: astore        5
      67: aload         5
      69: ifnull        175
      72: aload         5
      74: invokevirtual #17                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      77: astore        6
      79: aload         6
      81: arraylength
      82: istore        7
      84: iconst_0
      85: istore        8
      87: iload         8
      89: iload         7
      91: if_icmpge     165
      94: aload         6
      96: iload         8
      98: aaload
      99: astore        9
     101: aload         9
     103: invokevirtual #18                 // Method java/lang/reflect/Field.getModifiers:()I
     106: istore        10
     108: iload         10
     110: invokestatic  #19                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
     113: ifne          159
     116: iload         10
     118: invokestatic  #20                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
     121: ifne          159
     124: aload_3
     125: aload         9
     127: invokevirtual #21                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     130: invokeinterface #10,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     135: ifne          159
     138: aload_3
     139: aload         9
     141: invokevirtual #21                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     144: new           #22                 // class org/yaml/snakeyaml/introspector/FieldProperty
     147: dup
     148: aload         9
     150: invokespecial #23                 // Method org/yaml/snakeyaml/introspector/FieldProperty."<init>":(Ljava/lang/reflect/Field;)V
     153: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     158: pop
     159: iinc          8, 1
     162: goto          87
     165: aload         5
     167: invokevirtual #25                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     170: astore        5
     172: goto          67
     175: goto          374
     178: aload_1
     179: invokestatic  #26                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;)Ljava/beans/BeanInfo;
     182: invokeinterface #27,  1           // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
     187: astore        5
     189: aload         5
     191: arraylength
     192: istore        6
     194: iconst_0
     195: istore        7
     197: iload         7
     199: iload         6
     201: if_icmpge     263
     204: aload         5
     206: iload         7
     208: aaload
     209: astore        8
     211: aload         8
     213: invokevirtual #28                 // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
     216: astore        9
     218: aload         9
     220: ifnull        236
     223: aload         9
     225: invokevirtual #29                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     228: ldc           #30                 // String getClass
     230: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     233: ifne          257
     236: aload_3
     237: aload         8
     239: invokevirtual #32                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
     242: new           #33                 // class org/yaml/snakeyaml/introspector/MethodProperty
     245: dup
     246: aload         8
     248: invokespecial #34                 // Method org/yaml/snakeyaml/introspector/MethodProperty."<init>":(Ljava/beans/PropertyDescriptor;)V
     251: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     256: pop
     257: iinc          7, 1
     260: goto          197
     263: aload_1
     264: astore        5
     266: aload         5
     268: ifnull        374
     271: aload         5
     273: invokevirtual #17                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
     276: astore        6
     278: aload         6
     280: arraylength
     281: istore        7
     283: iconst_0
     284: istore        8
     286: iload         8
     288: iload         7
     290: if_icmpge     364
     293: aload         6
     295: iload         8
     297: aaload
     298: astore        9
     300: aload         9
     302: invokevirtual #18                 // Method java/lang/reflect/Field.getModifiers:()I
     305: istore        10
     307: iload         10
     309: invokestatic  #19                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
     312: ifne          358
     315: iload         10
     317: invokestatic  #20                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
     320: ifne          358
     323: iload         10
     325: invokestatic  #35                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
     328: ifeq          355
     331: aload_3
     332: aload         9
     334: invokevirtual #21                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     337: new           #22                 // class org/yaml/snakeyaml/introspector/FieldProperty
     340: dup
     341: aload         9
     343: invokespecial #23                 // Method org/yaml/snakeyaml/introspector/FieldProperty."<init>":(Ljava/lang/reflect/Field;)V
     346: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     351: pop
     352: goto          358
     355: iconst_1
     356: istore        4
     358: iinc          8, 1
     361: goto          286
     364: aload         5
     366: invokevirtual #25                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     369: astore        5
     371: goto          266
     374: aload_3
     375: invokeinterface #36,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     380: ifeq          418
     383: iload         4
     385: ifeq          418
     388: new           #37                 // class org/yaml/snakeyaml/error/YAMLException
     391: dup
     392: new           #38                 // class java/lang/StringBuilder
     395: dup
     396: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     399: ldc           #40                 // String No JavaBean properties found in
     401: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: aload_1
     405: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
     408: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     411: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     414: invokespecial #44                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     417: athrow
     418: aload_0
     419: getfield      #4                  // Field propertiesCache:Ljava/util/Map;
     422: aload_1
     423: aload_3
     424: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     429: pop
     430: aload_3
     431: areturn

  public java.util.Set<org.yaml.snakeyaml.introspector.Property> getProperties(java.lang.Class<? extends java.lang.Object>) throws java.beans.IntrospectionException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #7                  // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
       6: invokevirtual #45                 // Method getProperties:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Set;
       9: areturn

  public java.util.Set<org.yaml.snakeyaml.introspector.Property> getProperties(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.introspector.BeanAccess) throws java.beans.IntrospectionException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field readableProperties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #5                  // Field readableProperties:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #46                 // class java/util/Set
      26: areturn
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokevirtual #47                 // Method createPropertySet:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Set;
      33: astore_3
      34: aload_0
      35: getfield      #5                  // Field readableProperties:Ljava/util/Map;
      38: aload_1
      39: aload_3
      40: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_3
      47: areturn

  protected java.util.Set<org.yaml.snakeyaml.introspector.Property> createPropertySet(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.introspector.BeanAccess) throws java.beans.IntrospectionException;
    Code:
       0: new           #48                 // class java/util/TreeSet
       3: dup
       4: invokespecial #49                 // Method java/util/TreeSet."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #50                 // Method getPropertiesMap:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Map;
      14: invokeinterface #51,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      19: astore        4
      21: aload         4
      23: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore        5
      30: aload         5
      32: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          87
      40: aload         5
      42: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #55                 // class org/yaml/snakeyaml/introspector/Property
      50: astore        6
      52: aload         6
      54: invokevirtual #56                 // Method org/yaml/snakeyaml/introspector/Property.isReadable:()Z
      57: ifeq          84
      60: aload_0
      61: getfield      #8                  // Field allowReadOnlyProperties:Z
      64: ifne          75
      67: aload         6
      69: invokevirtual #57                 // Method org/yaml/snakeyaml/introspector/Property.isWritable:()Z
      72: ifeq          84
      75: aload_3
      76: aload         6
      78: invokeinterface #58,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          30
      87: aload_3
      88: areturn

  public org.yaml.snakeyaml.introspector.Property getProperty(java.lang.Class<? extends java.lang.Object>, java.lang.String) throws java.beans.IntrospectionException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #7                  // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
       7: invokevirtual #59                 // Method getProperty:(Ljava/lang/Class;Ljava/lang/String;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Lorg/yaml/snakeyaml/introspector/Property;
      10: areturn

  public org.yaml.snakeyaml.introspector.Property getProperty(java.lang.Class<? extends java.lang.Object>, java.lang.String, org.yaml.snakeyaml.introspector.BeanAccess) throws java.beans.IntrospectionException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #50                 // Method getPropertiesMap:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Map;
       6: astore        4
       8: aload         4
      10: aload_2
      11: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #55                 // class org/yaml/snakeyaml/introspector/Property
      19: astore        5
      21: aload         5
      23: ifnonnull     43
      26: aload_0
      27: getfield      #9                  // Field skipMissingProperties:Z
      30: ifeq          43
      33: new           #60                 // class org/yaml/snakeyaml/introspector/MissingProperty
      36: dup
      37: aload_2
      38: invokespecial #61                 // Method org/yaml/snakeyaml/introspector/MissingProperty."<init>":(Ljava/lang/String;)V
      41: astore        5
      43: aload         5
      45: ifnull        56
      48: aload         5
      50: invokevirtual #57                 // Method org/yaml/snakeyaml/introspector/Property.isWritable:()Z
      53: ifne          95
      56: new           #37                 // class org/yaml/snakeyaml/error/YAMLException
      59: dup
      60: new           #38                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #62                 // String Unable to find property \'
      69: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_2
      73: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #63                 // String \' on class:
      78: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_1
      82: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
      85: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #44                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload         5
      97: areturn

  public void setBeanAccess(org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: getfield      #7                  // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
       4: aload_1
       5: if_acmpeq     31
       8: aload_0
       9: aload_1
      10: putfield      #7                  // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      13: aload_0
      14: getfield      #4                  // Field propertiesCache:Ljava/util/Map;
      17: invokeinterface #64,  1           // InterfaceMethod java/util/Map.clear:()V
      22: aload_0
      23: getfield      #5                  // Field readableProperties:Ljava/util/Map;
      26: invokeinterface #64,  1           // InterfaceMethod java/util/Map.clear:()V
      31: return

  public void setAllowReadOnlyProperties(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field allowReadOnlyProperties:Z
       4: iload_1
       5: if_icmpeq     22
       8: aload_0
       9: iload_1
      10: putfield      #8                  // Field allowReadOnlyProperties:Z
      13: aload_0
      14: getfield      #5                  // Field readableProperties:Ljava/util/Map;
      17: invokeinterface #64,  1           // InterfaceMethod java/util/Map.clear:()V
      22: return

  public void setSkipMissingProperties(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field skipMissingProperties:Z
       4: iload_1
       5: if_icmpeq     22
       8: aload_0
       9: iload_1
      10: putfield      #9                  // Field skipMissingProperties:Z
      13: aload_0
      14: getfield      #5                  // Field readableProperties:Ljava/util/Map;
      17: invokeinterface #64,  1           // InterfaceMethod java/util/Map.clear:()V
      22: return
}
