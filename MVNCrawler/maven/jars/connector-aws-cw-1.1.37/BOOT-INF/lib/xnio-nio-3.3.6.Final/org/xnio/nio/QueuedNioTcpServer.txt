Compiled from "QueuedNioTcpServer.java"
final class org.xnio.nio.QueuedNioTcpServer extends org.xnio.nio.AbstractNioChannel<org.xnio.nio.QueuedNioTcpServer> implements org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection>, org.xnio.channels.AcceptListenerSettable<org.xnio.nio.QueuedNioTcpServer> {
  private static final java.lang.String FQCN;

  private volatile org.xnio.ChannelListener<? super org.xnio.nio.QueuedNioTcpServer> acceptListener;

  private final org.xnio.nio.QueuedNioTcpServerHandle handle;

  private final org.xnio.nio.WorkerThread thread;

  private final java.nio.channels.ServerSocketChannel channel;

  private final java.net.ServerSocket socket;

  private final java.io.Closeable mbeanHandle;

  private final java.util.List<java.util.concurrent.BlockingQueue<java.nio.channels.SocketChannel>> acceptQueues;

  private static final java.util.Set<org.xnio.Option<?>> options;

  private volatile int keepAlive;

  private volatile int oobInline;

  private volatile int tcpNoDelay;

  private volatile int sendBuffer;

  private volatile long connectionStatus;

  private volatile int readTimeout;

  private volatile int writeTimeout;

  private static final long CONN_LOW_MASK;

  private static final long CONN_LOW_BIT;

  private static final long CONN_LOW_ONE;

  private static final long CONN_HIGH_MASK;

  private static final long CONN_HIGH_BIT;

  private static final long CONN_HIGH_ONE;

  private int openConnections;

  private volatile boolean suspendedDueToWatermark;

  private volatile boolean suspended;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> keepAliveUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> oobInlineUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> tcpNoDelayUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> sendBufferUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> readTimeoutUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> writeTimeoutUpdater;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<org.xnio.nio.QueuedNioTcpServer> connectionStatusUpdater;

  private final java.lang.Runnable acceptTask;

  private final java.lang.Runnable connectionClosedTask;

  static final boolean $assertionsDisabled;

  org.xnio.nio.QueuedNioTcpServer(org.xnio.nio.NioXnioWorker, java.nio.channels.ServerSocketChannel, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method org/xnio/nio/AbstractNioChannel."<init>":(Lorg/xnio/nio/NioXnioWorker;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #10                 // Field sendBuffer:I
      10: aload_0
      11: ldc2_w        #11                 // long 4611686018427387903l
      14: putfield      #5                  // Field connectionStatus:J
      17: aload_0
      18: new           #13                 // class org/xnio/nio/QueuedNioTcpServer$1
      21: dup
      22: aload_0
      23: invokespecial #14                 // Method org/xnio/nio/QueuedNioTcpServer$1."<init>":(Lorg/xnio/nio/QueuedNioTcpServer;)V
      26: putfield      #15                 // Field acceptTask:Ljava/lang/Runnable;
      29: aload_0
      30: new           #16                 // class org/xnio/nio/QueuedNioTcpServer$2
      33: dup
      34: aload_0
      35: invokespecial #17                 // Method org/xnio/nio/QueuedNioTcpServer$2."<init>":(Lorg/xnio/nio/QueuedNioTcpServer;)V
      38: putfield      #18                 // Field connectionClosedTask:Ljava/lang/Runnable;
      41: aload_0
      42: aload_2
      43: putfield      #19                 // Field channel:Ljava/nio/channels/ServerSocketChannel;
      46: aload_0
      47: aload_1
      48: invokevirtual #20                 // Method org/xnio/nio/NioXnioWorker.getAcceptThread:()Lorg/xnio/nio/WorkerThread;
      51: putfield      #21                 // Field thread:Lorg/xnio/nio/WorkerThread;
      54: aload_1
      55: invokevirtual #22                 // Method org/xnio/nio/NioXnioWorker.getAll:()[Lorg/xnio/nio/WorkerThread;
      58: astore        4
      60: new           #23                 // class java/util/ArrayList
      63: dup
      64: aload         4
      66: arraylength
      67: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      70: astore        5
      72: iconst_0
      73: istore        6
      75: iload         6
      77: aload         4
      79: arraylength
      80: if_icmpge     105
      83: aload         5
      85: iload         6
      87: new           #25                 // class java/util/concurrent/LinkedBlockingQueue
      90: dup
      91: invokespecial #26                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      94: invokeinterface #27,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      99: iinc          6, 1
     102: goto          75
     105: aload_0
     106: aload         5
     108: putfield      #8                  // Field acceptQueues:Ljava/util/List;
     111: aload_0
     112: aload_2
     113: invokevirtual #28                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
     116: putfield      #29                 // Field socket:Ljava/net/ServerSocket;
     119: aload_3
     120: getstatic     #30                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     123: invokevirtual #31                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     126: ifeq          166
     129: aload_3
     130: getstatic     #30                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     133: ldc           #32                 // int 65536
     135: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     138: istore        6
     140: iload         6
     142: iconst_1
     143: if_icmpge     157
     146: getstatic     #34                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     149: ldc           #35                 // String sendBufferSize
     151: invokeinterface #36,  2           // InterfaceMethod org/xnio/nio/Log.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     156: athrow
     157: getstatic     #37                 // Field sendBufferUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     160: aload_0
     161: iload         6
     163: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     166: aload_3
     167: getstatic     #39                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     170: invokevirtual #31                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     173: ifeq          199
     176: getstatic     #40                 // Field keepAliveUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     179: aload_0
     180: aload_3
     181: getstatic     #39                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     184: iconst_0
     185: invokevirtual #41                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     188: ifeq          195
     191: iconst_1
     192: goto          196
     195: iconst_0
     196: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     199: aload_3
     200: getstatic     #43                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     203: invokevirtual #31                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     206: ifeq          232
     209: getstatic     #44                 // Field oobInlineUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     212: aload_0
     213: aload_3
     214: getstatic     #43                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     217: iconst_0
     218: invokevirtual #41                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     221: ifeq          228
     224: iconst_1
     225: goto          229
     228: iconst_0
     229: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     232: aload_3
     233: getstatic     #45                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     236: invokevirtual #31                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     239: ifeq          265
     242: getstatic     #46                 // Field tcpNoDelayUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     245: aload_0
     246: aload_3
     247: getstatic     #45                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     250: iconst_0
     251: invokevirtual #41                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     254: ifeq          261
     257: iconst_1
     258: goto          262
     261: iconst_0
     262: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     265: aload_3
     266: getstatic     #47                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     269: invokevirtual #31                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     272: ifeq          290
     275: getstatic     #48                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     278: aload_0
     279: aload_3
     280: getstatic     #47                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     283: iconst_0
     284: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     287: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     290: aload_3
     291: getstatic     #49                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     294: invokevirtual #31                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     297: ifeq          315
     300: getstatic     #50                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     303: aload_0
     304: aload_3
     305: getstatic     #49                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     308: iconst_0
     309: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     312: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     315: aload_3
     316: getstatic     #51                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     319: invokevirtual #31                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     322: ifne          335
     325: aload_3
     326: getstatic     #52                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     329: invokevirtual #31                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     332: ifeq          410
     335: aload_3
     336: getstatic     #51                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     339: ldc           #53                 // int 2147483647
     341: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     344: istore        6
     346: aload_3
     347: getstatic     #52                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     350: iload         6
     352: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     355: istore        7
     357: iload         6
     359: ifgt          366
     362: invokestatic  #54                 // Method badHighWater:()Ljava/lang/IllegalArgumentException;
     365: athrow
     366: iload         7
     368: ifle          378
     371: iload         7
     373: iload         6
     375: if_icmple     384
     378: iload         6
     380: invokestatic  #55                 // Method badLowWater:(I)Ljava/lang/IllegalArgumentException;
     383: athrow
     384: iload         6
     386: i2l
     387: bipush        31
     389: lshl
     390: iload         7
     392: i2l
     393: iconst_0
     394: lshl
     395: lor
     396: lstore        8
     398: getstatic     #56                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     401: aload_0
     402: lload         8
     404: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.lazySet:(Ljava/lang/Object;J)V
     407: goto          428
     410: ldc           #53                 // int 2147483647
     412: istore        6
     414: ldc           #53                 // int 2147483647
     416: istore        7
     418: getstatic     #56                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     421: aload_0
     422: ldc2_w        #11                 // long 4611686018427387903l
     425: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.lazySet:(Ljava/lang/Object;J)V
     428: aload_0
     429: getfield      #21                 // Field thread:Lorg/xnio/nio/WorkerThread;
     432: aload_2
     433: invokevirtual #58                 // Method org/xnio/nio/WorkerThread.registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     436: astore        8
     438: aload_0
     439: new           #59                 // class org/xnio/nio/QueuedNioTcpServerHandle
     442: dup
     443: aload_0
     444: aload_0
     445: getfield      #21                 // Field thread:Lorg/xnio/nio/WorkerThread;
     448: aload         8
     450: iload         6
     452: iload         7
     454: invokespecial #60                 // Method org/xnio/nio/QueuedNioTcpServerHandle."<init>":(Lorg/xnio/nio/QueuedNioTcpServer;Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;II)V
     457: putfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     460: aload         8
     462: aload_0
     463: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     466: invokevirtual #61                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
     469: pop
     470: aload_0
     471: new           #62                 // class org/xnio/nio/QueuedNioTcpServer$3
     474: dup
     475: aload_0
     476: aload_1
     477: invokespecial #63                 // Method org/xnio/nio/QueuedNioTcpServer$3."<init>":(Lorg/xnio/nio/QueuedNioTcpServer;Lorg/xnio/nio/NioXnioWorker;)V
     480: invokestatic  #64                 // Method org/xnio/nio/NioXnio.register:(Lorg/xnio/management/XnioServerMXBean;)Ljava/io/Closeable;
     483: putfield      #65                 // Field mbeanHandle:Ljava/io/Closeable;
     486: return

  private static java.lang.IllegalArgumentException badLowWater(int);
    Code:
       0: new           #66                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #67                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #69                 // String Low water must be greater than 0 and less than or equal to high water (
      13: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_0
      17: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #72                 // String )
      22: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #74                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: areturn

  private static java.lang.IllegalArgumentException badHighWater();
    Code:
       0: new           #66                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #75                 // String High water must be greater than 0
       6: invokespecial #74                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field channel:Ljava/nio/channels/ServerSocketChannel;
       4: invokevirtual #76                 // Method java/nio/channels/ServerSocketChannel.close:()V
       7: aload_0
       8: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      11: invokevirtual #77                 // Method org/xnio/nio/QueuedNioTcpServerHandle.getWorkerThread:()Lorg/xnio/nio/WorkerThread;
      14: aload_0
      15: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      18: invokevirtual #78                 // Method org/xnio/nio/QueuedNioTcpServerHandle.getSelectionKey:()Ljava/nio/channels/SelectionKey;
      21: invokevirtual #79                 // Method org/xnio/nio/WorkerThread.cancelKey:(Ljava/nio/channels/SelectionKey;)V
      24: aload_0
      25: getfield      #65                 // Field mbeanHandle:Ljava/io/Closeable;
      28: invokestatic  #80                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      31: goto          61
      34: astore_1
      35: aload_0
      36: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      39: invokevirtual #77                 // Method org/xnio/nio/QueuedNioTcpServerHandle.getWorkerThread:()Lorg/xnio/nio/WorkerThread;
      42: aload_0
      43: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      46: invokevirtual #78                 // Method org/xnio/nio/QueuedNioTcpServerHandle.getSelectionKey:()Ljava/nio/channels/SelectionKey;
      49: invokevirtual #79                 // Method org/xnio/nio/WorkerThread.cancelKey:(Ljava/nio/channels/SelectionKey;)V
      52: aload_0
      53: getfield      #65                 // Field mbeanHandle:Ljava/io/Closeable;
      56: invokestatic  #80                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      59: aload_1
      60: athrow
      61: return
    Exception table:
       from    to  target type
           0     7    34   any
          34    35    34   any

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #81                 // Field options:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #82,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws org.xnio.channels.UnsupportedOptionException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #83                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
       4: if_acmpne     22
       7: aload_1
       8: aload_0
       9: getfield      #29                 // Field socket:Ljava/net/ServerSocket;
      12: invokevirtual #84                 // Method java/net/ServerSocket.getReuseAddress:()Z
      15: invokestatic  #85                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      21: areturn
      22: aload_1
      23: getstatic     #87                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      26: if_acmpne     44
      29: aload_1
      30: aload_0
      31: getfield      #29                 // Field socket:Ljava/net/ServerSocket;
      34: invokevirtual #88                 // Method java/net/ServerSocket.getReceiveBufferSize:()I
      37: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      43: areturn
      44: aload_1
      45: getstatic     #30                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      48: if_acmpne     74
      51: aload_0
      52: getfield      #10                 // Field sendBuffer:I
      55: istore_2
      56: iload_2
      57: iconst_m1
      58: if_icmpne     65
      61: aconst_null
      62: goto          73
      65: aload_1
      66: iload_2
      67: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      73: areturn
      74: aload_1
      75: getstatic     #39                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
      78: if_acmpne     101
      81: aload_1
      82: aload_0
      83: getfield      #90                 // Field keepAlive:I
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: invokestatic  #85                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      97: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     100: areturn
     101: aload_1
     102: getstatic     #43                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     105: if_acmpne     128
     108: aload_1
     109: aload_0
     110: getfield      #91                 // Field oobInline:I
     113: ifeq          120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: invokestatic  #85                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     124: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     127: areturn
     128: aload_1
     129: getstatic     #45                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     132: if_acmpne     155
     135: aload_1
     136: aload_0
     137: getfield      #92                 // Field tcpNoDelay:I
     140: ifeq          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: invokestatic  #85                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     151: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     154: areturn
     155: aload_1
     156: getstatic     #47                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     159: if_acmpne     174
     162: aload_1
     163: aload_0
     164: getfield      #93                 // Field readTimeout:I
     167: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     170: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     173: areturn
     174: aload_1
     175: getstatic     #49                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     178: if_acmpne     193
     181: aload_1
     182: aload_0
     183: getfield      #94                 // Field writeTimeout:I
     186: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     189: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     192: areturn
     193: aload_1
     194: getstatic     #51                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     197: if_acmpne     215
     200: aload_1
     201: aload_0
     202: getfield      #5                  // Field connectionStatus:J
     205: invokestatic  #1                  // Method getHighWater:(J)I
     208: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     211: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     214: areturn
     215: aload_1
     216: getstatic     #52                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     219: if_acmpne     237
     222: aload_1
     223: aload_0
     224: getfield      #5                  // Field connectionStatus:J
     227: invokestatic  #4                  // Method getLowWater:(J)I
     230: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     233: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     236: areturn
     237: aconst_null
     238: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #83                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
       4: if_acmpne     44
       7: aload_0
       8: getfield      #29                 // Field socket:Ljava/net/ServerSocket;
      11: invokevirtual #84                 // Method java/net/ServerSocket.getReuseAddress:()Z
      14: invokestatic  #85                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: astore_3
      18: aload_0
      19: getfield      #29                 // Field socket:Ljava/net/ServerSocket;
      22: getstatic     #83                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
      25: aload_2
      26: getstatic     #95                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      29: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #97                 // class java/lang/Boolean
      35: invokevirtual #98                 // Method java/lang/Boolean.booleanValue:()Z
      38: invokevirtual #99                 // Method java/net/ServerSocket.setReuseAddress:(Z)V
      41: goto          502
      44: aload_1
      45: getstatic     #87                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      48: if_acmpne     111
      51: aload_0
      52: getfield      #29                 // Field socket:Ljava/net/ServerSocket;
      55: invokevirtual #88                 // Method java/net/ServerSocket.getReceiveBufferSize:()I
      58: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: astore_3
      62: getstatic     #87                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      65: aload_2
      66: ldc           #32                 // int 65536
      68: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #100                // class java/lang/Integer
      77: invokevirtual #101                // Method java/lang/Integer.intValue:()I
      80: istore        4
      82: iload         4
      84: iconst_1
      85: if_icmpge     99
      88: getstatic     #34                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      91: ldc           #102                // String RECEIVE_BUFFER
      93: invokeinterface #103,  2          // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      98: athrow
      99: aload_0
     100: getfield      #29                 // Field socket:Ljava/net/ServerSocket;
     103: iload         4
     105: invokevirtual #104                // Method java/net/ServerSocket.setReceiveBufferSize:(I)V
     108: goto          502
     111: aload_1
     112: getstatic     #30                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     115: if_acmpne     185
     118: getstatic     #30                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     121: aload_2
     122: ldc           #32                 // int 65536
     124: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     127: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: checkcast     #100                // class java/lang/Integer
     133: invokevirtual #101                // Method java/lang/Integer.intValue:()I
     136: istore        4
     138: iload         4
     140: iconst_1
     141: if_icmpge     155
     144: getstatic     #34                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     147: ldc           #105                // String SEND_BUFFER
     149: invokeinterface #103,  2          // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     154: athrow
     155: getstatic     #37                 // Field sendBufferUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     158: aload_0
     159: iload         4
     161: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     164: istore        5
     166: iload         5
     168: iconst_m1
     169: if_icmpne     176
     172: aconst_null
     173: goto          181
     176: iload         5
     178: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     181: astore_3
     182: goto          502
     185: aload_1
     186: getstatic     #39                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     189: if_acmpne     238
     192: getstatic     #40                 // Field keepAliveUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     195: aload_0
     196: getstatic     #39                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     199: aload_2
     200: getstatic     #95                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     203: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     206: checkcast     #97                 // class java/lang/Boolean
     209: invokevirtual #98                 // Method java/lang/Boolean.booleanValue:()Z
     212: ifeq          219
     215: iconst_1
     216: goto          220
     219: iconst_0
     220: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     223: ifeq          230
     226: iconst_1
     227: goto          231
     230: iconst_0
     231: invokestatic  #85                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     234: astore_3
     235: goto          502
     238: aload_1
     239: getstatic     #43                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     242: if_acmpne     291
     245: getstatic     #44                 // Field oobInlineUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     248: aload_0
     249: getstatic     #43                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     252: aload_2
     253: getstatic     #95                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     256: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     259: checkcast     #97                 // class java/lang/Boolean
     262: invokevirtual #98                 // Method java/lang/Boolean.booleanValue:()Z
     265: ifeq          272
     268: iconst_1
     269: goto          273
     272: iconst_0
     273: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     276: ifeq          283
     279: iconst_1
     280: goto          284
     283: iconst_0
     284: invokestatic  #85                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     287: astore_3
     288: goto          502
     291: aload_1
     292: getstatic     #45                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     295: if_acmpne     344
     298: getstatic     #46                 // Field tcpNoDelayUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     301: aload_0
     302: getstatic     #45                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     305: aload_2
     306: getstatic     #95                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     309: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     312: checkcast     #97                 // class java/lang/Boolean
     315: invokevirtual #98                 // Method java/lang/Boolean.booleanValue:()Z
     318: ifeq          325
     321: iconst_1
     322: goto          326
     325: iconst_0
     326: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     329: ifeq          336
     332: iconst_1
     333: goto          337
     336: iconst_0
     337: invokestatic  #85                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     340: astore_3
     341: goto          502
     344: aload_1
     345: getstatic     #47                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     348: if_acmpne     382
     351: getstatic     #48                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     354: aload_0
     355: getstatic     #47                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     358: aload_2
     359: iconst_0
     360: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     363: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     366: checkcast     #100                // class java/lang/Integer
     369: invokevirtual #101                // Method java/lang/Integer.intValue:()I
     372: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     375: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     378: astore_3
     379: goto          502
     382: aload_1
     383: getstatic     #49                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     386: if_acmpne     420
     389: getstatic     #50                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     392: aload_0
     393: getstatic     #49                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     396: aload_2
     397: iconst_0
     398: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     401: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     404: checkcast     #100                // class java/lang/Integer
     407: invokevirtual #101                // Method java/lang/Integer.intValue:()I
     410: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     413: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     416: astore_3
     417: goto          502
     420: aload_1
     421: getstatic     #51                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     424: if_acmpne     460
     427: aload_0
     428: iconst_m1
     429: getstatic     #51                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     432: aload_2
     433: ldc           #53                 // int 2147483647
     435: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     438: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     441: checkcast     #100                // class java/lang/Integer
     444: invokevirtual #101                // Method java/lang/Integer.intValue:()I
     447: invokespecial #107                // Method updateWaterMark:(II)J
     450: invokestatic  #1                  // Method getHighWater:(J)I
     453: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     456: astore_3
     457: goto          502
     460: aload_1
     461: getstatic     #52                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     464: if_acmpne     500
     467: aload_0
     468: getstatic     #52                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     471: aload_2
     472: ldc           #53                 // int 2147483647
     474: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     477: invokevirtual #96                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     480: checkcast     #100                // class java/lang/Integer
     483: invokevirtual #101                // Method java/lang/Integer.intValue:()I
     486: iconst_m1
     487: invokespecial #107                // Method updateWaterMark:(II)J
     490: invokestatic  #4                  // Method getLowWater:(J)I
     493: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     496: astore_3
     497: goto          502
     500: aconst_null
     501: areturn
     502: aload_1
     503: aload_3
     504: invokevirtual #86                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     507: areturn

  private long updateWaterMark(int, int);
    Code:
       0: getstatic     #108                // Field $assertionsDisabled:Z
       3: ifne          24
       6: iload_1
       7: iconst_m1
       8: if_icmpne     24
      11: iload_2
      12: iconst_m1
      13: if_icmpne     24
      16: new           #109                // class java/lang/AssertionError
      19: dup
      20: invokespecial #110                // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: getstatic     #108                // Field $assertionsDisabled:Z
      27: ifne          53
      30: iload_1
      31: iconst_m1
      32: if_icmpeq     53
      35: iload_2
      36: iconst_m1
      37: if_icmpeq     53
      40: iload_1
      41: iload_2
      42: if_icmple     53
      45: new           #109                // class java/lang/AssertionError
      48: dup
      49: invokespecial #110                // Method java/lang/AssertionError."<init>":()V
      52: athrow
      53: aload_0
      54: getfield      #5                  // Field connectionStatus:J
      57: lstore_3
      58: lload_3
      59: invokestatic  #4                  // Method getLowWater:(J)I
      62: istore        8
      64: lload_3
      65: invokestatic  #1                  // Method getHighWater:(J)I
      68: istore        7
      70: iload_1
      71: iconst_m1
      72: if_icmpne     80
      75: iload         8
      77: goto          81
      80: iload_1
      81: istore        9
      83: iload_2
      84: iconst_m1
      85: if_icmpne     93
      88: iload         7
      90: goto          94
      93: iload_2
      94: istore        10
      96: iload_1
      97: iconst_m1
      98: if_icmpeq     115
     101: iload         9
     103: iload         10
     105: if_icmple     115
     108: iload         9
     110: istore        10
     112: goto          131
     115: iload_2
     116: iconst_m1
     117: if_icmpeq     131
     120: iload         10
     122: iload         9
     124: if_icmpge     131
     127: iload         10
     129: istore        9
     131: iload         8
     133: iload         9
     135: if_icmpne     147
     138: iload         7
     140: iload         10
     142: if_icmpne     147
     145: lload_3
     146: lreturn
     147: iload         9
     149: i2l
     150: iconst_0
     151: lshl
     152: iload         10
     154: i2l
     155: bipush        31
     157: lshl
     158: lor
     159: lstore        5
     161: getstatic     #56                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     164: aload_0
     165: lload_3
     166: lload         5
     168: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
     171: ifeq          53
     174: aload_0
     175: invokevirtual #112                // Method getIoThread:()Lorg/xnio/XnioIoThread;
     178: new           #113                // class org/xnio/nio/QueuedNioTcpServer$4
     181: dup
     182: aload_0
     183: invokespecial #114                // Method org/xnio/nio/QueuedNioTcpServer$4."<init>":(Lorg/xnio/nio/QueuedNioTcpServer;)V
     186: invokevirtual #115                // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
     189: lload_3
     190: lreturn

  private static int getHighWater(long);
    Code:
       0: lload_0
       1: ldc2_w        #116                // long 4611686016279904256l
       4: land
       5: bipush        31
       7: lshr
       8: l2i
       9: ireturn

  private static int getLowWater(long);
    Code:
       0: lload_0
       1: ldc2_w        #118                // long 2147483647l
       4: land
       5: iconst_0
       6: lshr
       7: l2i
       8: ireturn

  public org.xnio.nio.NioSocketStreamConnection accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field suspendedDueToWatermark:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: invokestatic  #120                // Method org/xnio/nio/WorkerThread.getCurrent:()Lorg/xnio/nio/WorkerThread;
      12: astore_1
      13: aload_1
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aload_0
      20: getfield      #8                  // Field acceptQueues:Ljava/util/List;
      23: aload_1
      24: invokevirtual #121                // Method org/xnio/nio/WorkerThread.getNumber:()I
      27: invokeinterface #122,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      32: checkcast     #123                // class java/util/concurrent/BlockingQueue
      35: astore_2
      36: iconst_0
      37: istore        4
      39: aload_2
      40: invokeinterface #124,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      45: checkcast     #125                // class java/nio/channels/SocketChannel
      48: astore_3
      49: aload_3
      50: ifnull        234
      53: aload_3
      54: iconst_0
      55: invokevirtual #126                // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      58: pop
      59: aload_3
      60: invokevirtual #127                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      63: astore        5
      65: aload         5
      67: aload_0
      68: getfield      #90                 // Field keepAlive:I
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: invokevirtual #128                // Method java/net/Socket.setKeepAlive:(Z)V
      82: aload         5
      84: aload_0
      85: getfield      #91                 // Field oobInline:I
      88: ifeq          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: invokevirtual #129                // Method java/net/Socket.setOOBInline:(Z)V
      99: aload         5
     101: aload_0
     102: getfield      #92                 // Field tcpNoDelay:I
     105: ifeq          112
     108: iconst_1
     109: goto          113
     112: iconst_0
     113: invokevirtual #130                // Method java/net/Socket.setTcpNoDelay:(Z)V
     116: aload_0
     117: getfield      #10                 // Field sendBuffer:I
     120: istore        6
     122: iload         6
     124: ifle          134
     127: aload         5
     129: iload         6
     131: invokevirtual #131                // Method java/net/Socket.setSendBufferSize:(I)V
     134: aload_1
     135: aload_3
     136: invokevirtual #58                 // Method org/xnio/nio/WorkerThread.registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     139: astore        7
     141: new           #132                // class org/xnio/nio/NioSocketStreamConnection
     144: dup
     145: aload_1
     146: aload         7
     148: aload_0
     149: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     152: invokespecial #133                // Method org/xnio/nio/NioSocketStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Lorg/xnio/nio/ChannelClosed;)V
     155: astore        8
     157: aload         8
     159: getstatic     #47                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     162: aload_0
     163: getfield      #93                 // Field readTimeout:I
     166: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     169: invokevirtual #134                // Method org/xnio/nio/NioSocketStreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     172: pop
     173: aload         8
     175: getstatic     #49                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     178: aload_0
     179: getfield      #94                 // Field writeTimeout:I
     182: invokestatic  #89                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     185: invokevirtual #134                // Method org/xnio/nio/NioSocketStreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     188: pop
     189: iconst_1
     190: istore        4
     192: aload         8
     194: astore        9
     196: iload         4
     198: ifne          205
     201: aload_3
     202: invokestatic  #80                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     205: iload         4
     207: ifne          217
     210: aload_0
     211: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     214: invokevirtual #135                // Method org/xnio/nio/QueuedNioTcpServerHandle.freeConnection:()V
     217: aload         9
     219: areturn
     220: astore        10
     222: iload         4
     224: ifne          231
     227: aload_3
     228: invokestatic  #80                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     231: aload         10
     233: athrow
     234: iload         4
     236: ifne          286
     239: aload_0
     240: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     243: invokevirtual #135                // Method org/xnio/nio/QueuedNioTcpServerHandle.freeConnection:()V
     246: goto          286
     249: astore        5
     251: aconst_null
     252: astore        6
     254: iload         4
     256: ifne          266
     259: aload_0
     260: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     263: invokevirtual #135                // Method org/xnio/nio/QueuedNioTcpServerHandle.freeConnection:()V
     266: aload         6
     268: areturn
     269: astore        11
     271: iload         4
     273: ifne          283
     276: aload_0
     277: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     280: invokevirtual #135                // Method org/xnio/nio/QueuedNioTcpServerHandle.freeConnection:()V
     283: aload         11
     285: athrow
     286: aconst_null
     287: areturn
    Exception table:
       from    to  target type
          53   196   220   any
         220   222   220   any
          39   205   249   Class java/io/IOException
         220   234   249   Class java/io/IOException
          39   205   269   any
         220   234   269   any
         249   254   269   any
         269   271   269   any

  public java.lang.String toString();
    Code:
       0: ldc           #137                // String TCP server (NIO) <%s>
       2: iconst_1
       3: anewarray     #138                // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #139                // Method java/lang/Object.hashCode:()I
      12: invokestatic  #140                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      15: aastore
      16: invokestatic  #141                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  public org.xnio.ChannelListener<? super org.xnio.nio.QueuedNioTcpServer> getAcceptListener();
    Code:
       0: aload_0
       1: getfield      #142                // Field acceptListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setAcceptListener(org.xnio.ChannelListener<? super org.xnio.nio.QueuedNioTcpServer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #142                // Field acceptListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener$Setter<org.xnio.nio.QueuedNioTcpServer> getAcceptSetter();
    Code:
       0: new           #143                // class org/xnio/channels/AcceptListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #144                // Method org/xnio/channels/AcceptListenerSettable$Setter."<init>":(Lorg/xnio/channels/AcceptListenerSettable;)V
       8: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #19                 // Field channel:Ljava/nio/channels/ServerSocketChannel;
       4: invokevirtual #145                // Method java/nio/channels/ServerSocketChannel.isOpen:()Z
       7: ireturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #29                 // Field socket:Ljava/net/ServerSocket;
       4: invokevirtual #146                // Method java/net/ServerSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: invokevirtual #147                // Method getLocalAddress:()Ljava/net/SocketAddress;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokevirtual #148                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      10: ifeq          24
      13: aload_1
      14: aload_2
      15: invokevirtual #149                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #150                // class java/net/SocketAddress
      21: goto          25
      24: aconst_null
      25: areturn

  public void suspendAccepts();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
       8: bipush        16
      10: invokevirtual #151                // Method org/xnio/nio/QueuedNioTcpServerHandle.suspend:(I)V
      13: aload_0
      14: iconst_1
      15: putfield      #3                  // Field suspended:Z
      18: aload_1
      19: monitorexit
      20: goto          28
      23: astore_2
      24: aload_1
      25: monitorexit
      26: aload_2
      27: athrow
      28: return
    Exception table:
       from    to  target type
           4    20    23   any
          23    26    23   any

  public void resumeAccepts();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field suspended:Z
       9: aload_0
      10: getfield      #6                  // Field suspendedDueToWatermark:Z
      13: ifne          25
      16: aload_0
      17: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      20: bipush        16
      22: invokevirtual #152                // Method org/xnio/nio/QueuedNioTcpServerHandle.resume:(I)V
      25: aload_1
      26: monitorexit
      27: goto          35
      30: astore_2
      31: aload_1
      32: monitorexit
      33: aload_2
      34: athrow
      35: return
    Exception table:
       from    to  target type
           4    27    30   any
          30    33    30   any

  public boolean isAcceptResumed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field suspended:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void wakeupAccepts();
    Code:
       0: getstatic     #153                // Field org/xnio/nio/Log.tcpServerLog:Lorg/xnio/nio/Log;
       3: getstatic     #154                // Field FQCN:Ljava/lang/String;
       6: getstatic     #155                // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
       9: aconst_null
      10: ldc           #156                // String Wake up accepts on %s
      12: aload_0
      13: invokeinterface #157,  6          // InterfaceMethod org/xnio/nio/Log.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #158                // Method resumeAccepts:()V
      22: aload_0
      23: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      26: bipush        16
      28: invokevirtual #159                // Method org/xnio/nio/QueuedNioTcpServerHandle.wakeup:(I)V
      31: return

  public void awaitAcceptable() throws java.io.IOException;
    Code:
       0: getstatic     #34                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: ldc           #160                // String awaitAcceptable
       5: invokeinterface #161,  2          // InterfaceMethod org/xnio/nio/Log.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      10: athrow

  public void awaitAcceptable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: getstatic     #34                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: ldc           #160                // String awaitAcceptable
       5: invokeinterface #161,  2          // InterfaceMethod org/xnio/nio/Log.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      10: athrow

  public org.xnio.XnioExecutor getAcceptThread();
    Code:
       0: aload_0
       1: invokevirtual #112                // Method getIoThread:()Lorg/xnio/XnioIoThread;
       4: areturn

  void handleReady();
    Code:
       0: aload_0
       1: getfield      #19                 // Field channel:Ljava/nio/channels/ServerSocketChannel;
       4: invokevirtual #162                // Method java/nio/channels/ServerSocketChannel.accept:()Ljava/nio/channels/SocketChannel;
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_1
      11: ifnull        389
      14: aload_1
      15: invokevirtual #163                // Method java/nio/channels/SocketChannel.getLocalAddress:()Ljava/net/SocketAddress;
      18: astore_3
      19: aload_3
      20: instanceof    #164                // class java/net/InetSocketAddress
      23: ifeq          54
      26: aload_3
      27: checkcast     #164                // class java/net/InetSocketAddress
      30: astore        5
      32: aload         5
      34: invokevirtual #165                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      37: invokevirtual #166                // Method java/net/InetAddress.hashCode:()I
      40: bipush        23
      42: imul
      43: aload         5
      45: invokevirtual #167                // Method java/net/InetSocketAddress.getPort:()I
      48: iadd
      49: istore        4
      51: goto          82
      54: aload_3
      55: instanceof    #168                // class org/xnio/LocalSocketAddress
      58: ifeq          76
      61: aload_3
      62: checkcast     #168                // class org/xnio/LocalSocketAddress
      65: invokevirtual #169                // Method org/xnio/LocalSocketAddress.getName:()Ljava/lang/String;
      68: invokevirtual #170                // Method java/lang/String.hashCode:()I
      71: istore        4
      73: goto          82
      76: aload_3
      77: invokevirtual #139                // Method java/lang/Object.hashCode:()I
      80: istore        4
      82: aload_1
      83: invokevirtual #171                // Method java/nio/channels/SocketChannel.getRemoteAddress:()Ljava/net/SocketAddress;
      86: astore        5
      88: aload         5
      90: instanceof    #164                // class java/net/InetSocketAddress
      93: ifeq          131
      96: aload         5
      98: checkcast     #164                // class java/net/InetSocketAddress
     101: astore        6
     103: aload         6
     105: invokevirtual #165                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
     108: invokevirtual #166                // Method java/net/InetAddress.hashCode:()I
     111: bipush        23
     113: imul
     114: aload         6
     116: invokevirtual #167                // Method java/net/InetSocketAddress.getPort:()I
     119: iadd
     120: bipush        23
     122: imul
     123: iload         4
     125: iadd
     126: istore        4
     128: goto          173
     131: aload         5
     133: instanceof    #168                // class org/xnio/LocalSocketAddress
     136: ifeq          161
     139: aload         5
     141: checkcast     #168                // class org/xnio/LocalSocketAddress
     144: invokevirtual #169                // Method org/xnio/LocalSocketAddress.getName:()Ljava/lang/String;
     147: invokevirtual #170                // Method java/lang/String.hashCode:()I
     150: bipush        23
     152: imul
     153: iload         4
     155: iadd
     156: istore        4
     158: goto          173
     161: aload_3
     162: invokevirtual #139                // Method java/lang/Object.hashCode:()I
     165: bipush        23
     167: imul
     168: iload         4
     170: iadd
     171: istore        4
     173: aload_1
     174: iconst_0
     175: invokevirtual #126                // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
     178: pop
     179: aload_1
     180: invokevirtual #127                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     183: astore        6
     185: aload         6
     187: aload_0
     188: getfield      #90                 // Field keepAlive:I
     191: ifeq          198
     194: iconst_1
     195: goto          199
     198: iconst_0
     199: invokevirtual #128                // Method java/net/Socket.setKeepAlive:(Z)V
     202: aload         6
     204: aload_0
     205: getfield      #91                 // Field oobInline:I
     208: ifeq          215
     211: iconst_1
     212: goto          216
     215: iconst_0
     216: invokevirtual #129                // Method java/net/Socket.setOOBInline:(Z)V
     219: aload         6
     221: aload_0
     222: getfield      #92                 // Field tcpNoDelay:I
     225: ifeq          232
     228: iconst_1
     229: goto          233
     232: iconst_0
     233: invokevirtual #130                // Method java/net/Socket.setTcpNoDelay:(Z)V
     236: aload_0
     237: getfield      #10                 // Field sendBuffer:I
     240: istore        7
     242: iload         7
     244: ifle          254
     247: aload         6
     249: iload         7
     251: invokevirtual #131                // Method java/net/Socket.setSendBufferSize:(I)V
     254: aload_0
     255: getfield      #172                // Field worker:Lorg/xnio/nio/NioXnioWorker;
     258: iload         4
     260: invokevirtual #173                // Method org/xnio/nio/NioXnioWorker.getIoThread:(I)Lorg/xnio/nio/WorkerThread;
     263: astore        8
     265: iconst_1
     266: istore_2
     267: aload         8
     269: invokevirtual #121                // Method org/xnio/nio/WorkerThread.getNumber:()I
     272: istore        9
     274: aload_0
     275: getfield      #8                  // Field acceptQueues:Ljava/util/List;
     278: iload         9
     280: invokeinterface #122,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     285: checkcast     #123                // class java/util/concurrent/BlockingQueue
     288: astore        10
     290: aload         10
     292: aload_1
     293: invokeinterface #174,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
     298: pop
     299: aload         8
     301: aload_0
     302: getfield      #15                 // Field acceptTask:Ljava/lang/Runnable;
     305: invokevirtual #175                // Method org/xnio/nio/WorkerThread.execute:(Ljava/lang/Runnable;)V
     308: aload_0
     309: dup
     310: getfield      #7                  // Field openConnections:I
     313: iconst_1
     314: iadd
     315: putfield      #7                  // Field openConnections:I
     318: aload_0
     319: getfield      #7                  // Field openConnections:I
     322: aload_0
     323: getfield      #5                  // Field connectionStatus:J
     326: invokestatic  #1                  // Method getHighWater:(J)I
     329: if_icmplt     365
     332: aload_0
     333: dup
     334: astore        11
     336: monitorenter
     337: aload_0
     338: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     341: bipush        16
     343: invokevirtual #151                // Method org/xnio/nio/QueuedNioTcpServerHandle.suspend:(I)V
     346: aload_0
     347: iconst_1
     348: putfield      #6                  // Field suspendedDueToWatermark:Z
     351: aload         11
     353: monitorexit
     354: goto          365
     357: astore        12
     359: aload         11
     361: monitorexit
     362: aload         12
     364: athrow
     365: iload_2
     366: ifne          389
     369: aload_1
     370: invokestatic  #80                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     373: goto          389
     376: astore        13
     378: iload_2
     379: ifne          386
     382: aload_1
     383: invokestatic  #80                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     386: aload         13
     388: athrow
     389: goto          393
     392: astore_1
     393: return
    Exception table:
       from    to  target type
         337   354   357   any
         357   362   357   any
          14   365   376   any
         376   378   376   any
           0   389   392   Class java/io/IOException

  public void connectionClosed();
    Code:
       0: aload_0
       1: getfield      #21                 // Field thread:Lorg/xnio/nio/WorkerThread;
       4: aload_0
       5: getfield      #18                 // Field connectionClosedTask:Ljava/lang/Runnable;
       8: invokevirtual #175                // Method org/xnio/nio/WorkerThread.execute:(Ljava/lang/Runnable;)V
      11: return

  public org.xnio.channels.ConnectedChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #176                // Method accept:()Lorg/xnio/nio/NioSocketStreamConnection;
       4: areturn

  public org.xnio.channels.CloseableChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #176                // Method accept:()Lorg/xnio/nio/NioSocketStreamConnection;
       4: areturn

  static java.util.List access$000(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: getfield      #8                  // Field acceptQueues:Ljava/util/List;
       4: areturn

  static int access$110(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: dup
       2: getfield      #7                  // Field openConnections:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #7                  // Field openConnections:I
      11: ireturn

  static boolean access$200(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field suspendedDueToWatermark:Z
       4: ireturn

  static int access$100(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: getfield      #7                  // Field openConnections:I
       4: ireturn

  static long access$300(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectionStatus:J
       4: lreturn

  static int access$400(long);
    Code:
       0: lload_0
       1: invokestatic  #4                  // Method getLowWater:(J)I
       4: ireturn

  static boolean access$500(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field suspended:Z
       4: ireturn

  static org.xnio.nio.QueuedNioTcpServerHandle access$600(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
       4: areturn

  static boolean access$202(org.xnio.nio.QueuedNioTcpServer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field suspendedDueToWatermark:Z
       6: ireturn

  static int access$700(long);
    Code:
       0: lload_0
       1: invokestatic  #1                  // Method getHighWater:(J)I
       4: ireturn

  static {};
    Code:
       0: ldc_w         #177                // class org/xnio/nio/QueuedNioTcpServer
       3: invokevirtual #178                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #108                // Field $assertionsDisabled:Z
      17: ldc_w         #177                // class org/xnio/nio/QueuedNioTcpServer
      20: invokevirtual #179                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: putstatic     #154                // Field FQCN:Ljava/lang/String;
      26: invokestatic  #180                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
      29: getstatic     #83                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
      32: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      35: getstatic     #87                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      38: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      41: getstatic     #30                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      44: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      47: getstatic     #39                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
      50: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      53: getstatic     #43                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
      56: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      59: getstatic     #45                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      62: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      65: getstatic     #51                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
      68: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      71: getstatic     #52                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
      74: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      77: getstatic     #47                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
      80: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      83: getstatic     #49                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
      86: invokevirtual #181                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      89: invokevirtual #182                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      92: putstatic     #81                 // Field options:Ljava/util/Set;
      95: ldc_w         #177                // class org/xnio/nio/QueuedNioTcpServer
      98: ldc           #183                // String keepAlive
     100: invokestatic  #184                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     103: putstatic     #40                 // Field keepAliveUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     106: ldc_w         #177                // class org/xnio/nio/QueuedNioTcpServer
     109: ldc           #185                // String oobInline
     111: invokestatic  #184                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     114: putstatic     #44                 // Field oobInlineUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     117: ldc_w         #177                // class org/xnio/nio/QueuedNioTcpServer
     120: ldc           #186                // String tcpNoDelay
     122: invokestatic  #184                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     125: putstatic     #46                 // Field tcpNoDelayUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     128: ldc_w         #177                // class org/xnio/nio/QueuedNioTcpServer
     131: ldc           #187                // String sendBuffer
     133: invokestatic  #184                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     136: putstatic     #37                 // Field sendBufferUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     139: ldc_w         #177                // class org/xnio/nio/QueuedNioTcpServer
     142: ldc           #188                // String readTimeout
     144: invokestatic  #184                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     147: putstatic     #48                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     150: ldc_w         #177                // class org/xnio/nio/QueuedNioTcpServer
     153: ldc           #189                // String writeTimeout
     155: invokestatic  #184                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     158: putstatic     #50                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     161: ldc_w         #177                // class org/xnio/nio/QueuedNioTcpServer
     164: ldc           #190                // String connectionStatus
     166: invokestatic  #191                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     169: putstatic     #56                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     172: return
}
