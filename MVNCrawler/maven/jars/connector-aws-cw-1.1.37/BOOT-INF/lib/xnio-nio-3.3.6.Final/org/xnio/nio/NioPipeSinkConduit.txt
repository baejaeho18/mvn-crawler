Compiled from "NioPipeSinkConduit.java"
final class org.xnio.nio.NioPipeSinkConduit extends org.xnio.nio.NioHandle implements org.xnio.conduits.StreamSinkConduit {
  private final java.nio.channels.Pipe$SinkChannel sinkChannel;

  private final org.xnio.nio.NioPipeStreamConnection connection;

  private org.xnio.conduits.WriteReadyHandler writeReadyHandler;

  private volatile int writeTimeout;

  private long lastWrite;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioPipeSinkConduit> writeTimeoutUpdater;

  org.xnio.nio.NioPipeSinkConduit(org.xnio.nio.WorkerThread, java.nio.channels.SelectionKey, org.xnio.nio.NioPipeStreamConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/xnio/nio/NioHandle."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field connection:Lorg/xnio/nio/NioPipeStreamConnection;
      11: aload_0
      12: aload_2
      13: invokevirtual #3                  // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      16: checkcast     #4                  // class java/nio/channels/Pipe$SinkChannel
      19: putfield      #5                  // Field sinkChannel:Ljava/nio/channels/Pipe$SinkChannel;
      22: return

  void handleReady(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
       4: invokeinterface #7,  1            // InterfaceMethod org/xnio/conduits/WriteReadyHandler.writeReady:()V
       9: goto          13
      12: astore_2
      13: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Throwable

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getWorkerThread:()Lorg/xnio/nio/WorkerThread;
       4: invokevirtual #10                 // Method org/xnio/nio/WorkerThread.getWorker:()Lorg/xnio/nio/NioXnioWorker;
       7: areturn

  void forceTermination();
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #11,  1           // InterfaceMethod org/xnio/conduits/WriteReadyHandler.forceTermination:()V
      15: return

  void terminated();
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #12,  1           // InterfaceMethod org/xnio/conduits/WriteReadyHandler.terminated:()V
      15: return

  int getAndSetWriteTimeout(int);
    Code:
       0: getstatic     #13                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iload_1
       5: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
       8: ireturn

  int getWriteTimeout();
    Code:
       0: aload_0
       1: getfield      #15                 // Field writeTimeout:I
       4: ireturn

  private void checkWriteTimeout(boolean) throws org.xnio.channels.WriteTimeoutException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field writeTimeout:I
       4: istore_2
       5: iload_2
       6: ifle          58
       9: iload_1
      10: ifeq          23
      13: aload_0
      14: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      17: putfield      #17                 // Field lastWrite:J
      20: goto          58
      23: aload_0
      24: getfield      #17                 // Field lastWrite:J
      27: lstore_3
      28: lload_3
      29: lconst_0
      30: lcmp
      31: ifle          58
      34: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      37: lload_3
      38: lsub
      39: ldc2_w        #18                 // long 1000000l
      42: ldiv
      43: iload_2
      44: i2l
      45: lcmp
      46: ifle          58
      49: getstatic     #20                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      52: invokeinterface #21,  1           // InterfaceMethod org/xnio/nio/Log.writeTimeout:()Lorg/xnio/channels/WriteTimeoutException;
      57: athrow
      58: return

  public final long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: lload         4
       4: aload_0
       5: getfield      #5                  // Field sinkChannel:Ljava/nio/channels/Pipe$SinkChannel;
       8: invokevirtual #22                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      11: lstore        6
      13: aload_0
      14: lload         6
      16: lconst_0
      17: lcmp
      18: ifle          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: invokespecial #23                 // Method checkWriteTimeout:(Z)V
      29: lload         6
      31: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: aload         4
       4: aload_0
       5: invokestatic  #24                 // Method org/xnio/conduits/Conduits.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Lorg/xnio/conduits/StreamSinkConduit;)J
       8: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field sinkChannel:Ljava/nio/channels/Pipe$SinkChannel;
       4: aload_1
       5: invokevirtual #25                 // Method java/nio/channels/Pipe$SinkChannel.write:(Ljava/nio/ByteBuffer;)I
       8: istore_2
       9: aload_0
      10: iload_2
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokespecial #23                 // Method checkWriteTimeout:(Z)V
      22: iload_2
      23: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpne     14
       5: aload_0
       6: aload_1
       7: iload_2
       8: aaload
       9: invokevirtual #26                 // Method write:(Ljava/nio/ByteBuffer;)I
      12: i2l
      13: lreturn
      14: aload_0
      15: getfield      #5                  // Field sinkChannel:Ljava/nio/channels/Pipe$SinkChannel;
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokevirtual #27                 // Method java/nio/channels/Pipe$SinkChannel.write:([Ljava/nio/ByteBuffer;II)J
      24: lstore        4
      26: aload_0
      27: lload         4
      29: lconst_0
      30: lcmp
      31: ifle          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: invokespecial #23                 // Method checkWriteTimeout:(Z)V
      42: lload         4
      44: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;Ljava/nio/ByteBuffer;)I
       5: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #29                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public boolean flush() throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/xnio/nio/NioPipeStreamConnection;
       4: invokevirtual #30                 // Method org/xnio/nio/NioPipeStreamConnection.writeClosed:()Z
       7: ifeq          39
      10: aload_0
      11: getfield      #5                  // Field sinkChannel:Ljava/nio/channels/Pipe$SinkChannel;
      14: invokevirtual #31                 // Method java/nio/channels/Pipe$SinkChannel.close:()V
      17: aload_0
      18: invokevirtual #32                 // Method writeTerminated:()V
      21: goto          39
      24: astore_1
      25: aload_0
      26: invokevirtual #32                 // Method writeTerminated:()V
      29: goto          39
      32: astore_2
      33: aload_0
      34: invokevirtual #32                 // Method writeTerminated:()V
      37: aload_2
      38: athrow
      39: return
    Exception table:
       from    to  target type
          10    17    24   Class java/nio/channels/ClosedChannelException
          10    17    32   any
          24    25    32   any
          32    33    32   any

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method terminateWrites:()V
       4: return

  void writeTerminated();
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: invokeinterface #12,  1           // InterfaceMethod org/xnio/conduits/WriteReadyHandler.terminated:()V
      15: goto          19
      18: astore_2
      19: return
    Exception table:
       from    to  target type
           9    15    18   Class java/lang/Throwable

  public boolean isWriteShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/xnio/nio/NioPipeStreamConnection;
       4: invokevirtual #35                 // Method org/xnio/nio/NioPipeStreamConnection.isWriteShutdown:()Z
       7: ireturn

  public void resumeWrites();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #36                 // Method resume:(I)V
       5: return

  public void suspendWrites();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #37                 // Method suspend:(I)V
       5: return

  public void wakeupWrites();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #38                 // Method wakeup:(I)V
       5: return

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #39                 // Method isResumed:(I)Z
       5: ireturn

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: invokestatic  #40                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
       3: aload_0
       4: invokevirtual #41                 // Method getWorker:()Lorg/xnio/XnioWorker;
       7: invokevirtual #42                 // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      10: checkcast     #43                 // class org/xnio/nio/NioXnio
      13: aload_0
      14: getfield      #5                  // Field sinkChannel:Ljava/nio/channels/Pipe$SinkChannel;
      17: iconst_4
      18: invokestatic  #44                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;I)V
      21: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #40                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
       3: aload_0
       4: invokevirtual #41                 // Method getWorker:()Lorg/xnio/XnioWorker;
       7: invokevirtual #42                 // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      10: checkcast     #43                 // class org/xnio/nio/NioXnio
      13: aload_0
      14: getfield      #5                  // Field sinkChannel:Ljava/nio/channels/Pipe$SinkChannel;
      17: iconst_4
      18: lload_1
      19: aload_3
      20: invokestatic  #45                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;IJLjava/util/concurrent/TimeUnit;)V
      23: return

  public org.xnio.XnioIoThread getWriteThread();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getWorkerThread:()Lorg/xnio/nio/WorkerThread;
       4: areturn

  public void setWriteReadyHandler(org.xnio.conduits.WriteReadyHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
       5: return

  static {};
    Code:
       0: ldc_w         #46                 // class org/xnio/nio/NioPipeSinkConduit
       3: ldc           #47                 // String writeTimeout
       5: invokestatic  #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: putstatic     #13                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: return
}
