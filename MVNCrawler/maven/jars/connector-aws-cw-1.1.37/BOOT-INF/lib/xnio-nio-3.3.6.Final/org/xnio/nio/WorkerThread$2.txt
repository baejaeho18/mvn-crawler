Compiled from "WorkerThread.java"
class org.xnio.nio.WorkerThread$2 extends org.xnio.nio.NioHandle {
  final java.nio.channels.ServerSocketChannel val$serverChannel;

  final org.xnio.OptionMap val$optionMap;

  final org.xnio.FutureResult val$futureResult;

  final org.xnio.ChannelListener val$openListener;

  final org.xnio.nio.WorkerThread this$0;

  org.xnio.nio.WorkerThread$2(org.xnio.nio.WorkerThread, org.xnio.nio.WorkerThread, java.nio.channels.SelectionKey, java.nio.channels.ServerSocketChannel, org.xnio.OptionMap, org.xnio.FutureResult, org.xnio.ChannelListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/xnio/nio/WorkerThread;
       5: aload_0
       6: aload         4
       8: putfield      #2                  // Field val$serverChannel:Ljava/nio/channels/ServerSocketChannel;
      11: aload_0
      12: aload         5
      14: putfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
      17: aload_0
      18: aload         6
      20: putfield      #4                  // Field val$futureResult:Lorg/xnio/FutureResult;
      23: aload_0
      24: aload         7
      26: putfield      #5                  // Field val$openListener:Lorg/xnio/ChannelListener;
      29: aload_0
      30: aload_2
      31: aload_3
      32: invokespecial #6                  // Method org/xnio/nio/NioHandle."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;)V
      35: return

  void handleReady(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #2                  // Field val$serverChannel:Ljava/nio/channels/ServerSocketChannel;
       6: invokevirtual #7                  // Method java/nio/channels/ServerSocketChannel.accept:()Ljava/nio/channels/SocketChannel;
       9: astore_3
      10: aload_3
      11: ifnonnull     28
      14: iconst_1
      15: istore_2
      16: iload_2
      17: ifne          27
      20: aload_0
      21: getfield      #2                  // Field val$serverChannel:Ljava/nio/channels/ServerSocketChannel;
      24: invokestatic  #8                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      27: return
      28: aload_0
      29: getfield      #2                  // Field val$serverChannel:Ljava/nio/channels/ServerSocketChannel;
      32: invokestatic  #8                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      35: aload_3
      36: iconst_0
      37: invokevirtual #9                  // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      40: pop
      41: aload_0
      42: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
      45: getstatic     #10                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
      48: invokevirtual #11                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      51: ifeq          72
      54: aload_3
      55: invokevirtual #12                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      58: aload_0
      59: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
      62: getstatic     #10                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
      65: iconst_0
      66: invokevirtual #13                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      69: invokevirtual #14                 // Method java/net/Socket.setOOBInline:(Z)V
      72: aload_0
      73: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
      76: getstatic     #15                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      79: invokevirtual #11                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      82: ifeq          103
      85: aload_3
      86: invokevirtual #12                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      89: aload_0
      90: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
      93: getstatic     #15                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      96: iconst_0
      97: invokevirtual #13                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     100: invokevirtual #16                 // Method java/net/Socket.setTcpNoDelay:(Z)V
     103: aload_0
     104: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
     107: getstatic     #17                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
     110: invokevirtual #11                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     113: ifeq          134
     116: aload_3
     117: invokevirtual #12                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     120: aload_0
     121: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
     124: getstatic     #17                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
     127: iconst_m1
     128: invokevirtual #18                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     131: invokevirtual #19                 // Method java/net/Socket.setTrafficClass:(I)V
     134: aload_0
     135: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
     138: getstatic     #20                 // Field org/xnio/Options.CLOSE_ABORT:Lorg/xnio/Option;
     141: invokevirtual #11                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     144: ifeq          166
     147: aload_3
     148: invokevirtual #12                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     151: aload_0
     152: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
     155: getstatic     #20                 // Field org/xnio/Options.CLOSE_ABORT:Lorg/xnio/Option;
     158: iconst_0
     159: invokevirtual #13                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     162: iconst_0
     163: invokevirtual #21                 // Method java/net/Socket.setSoLinger:(ZI)V
     166: aload_0
     167: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
     170: getstatic     #22                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     173: invokevirtual #11                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     176: ifeq          197
     179: aload_3
     180: invokevirtual #12                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     183: aload_0
     184: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
     187: getstatic     #22                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     190: iconst_0
     191: invokevirtual #13                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     194: invokevirtual #23                 // Method java/net/Socket.setKeepAlive:(Z)V
     197: aload_0
     198: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
     201: getstatic     #24                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     204: invokevirtual #11                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     207: ifeq          228
     210: aload_3
     211: invokevirtual #12                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     214: aload_0
     215: getfield      #3                  // Field val$optionMap:Lorg/xnio/OptionMap;
     218: getstatic     #24                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     221: iconst_m1
     222: invokevirtual #18                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     225: invokevirtual #25                 // Method java/net/Socket.setSendBufferSize:(I)V
     228: aload_0
     229: getfield      #1                  // Field this$0:Lorg/xnio/nio/WorkerThread;
     232: aload_3
     233: invokevirtual #26                 // Method org/xnio/nio/WorkerThread.registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     236: astore        4
     238: new           #27                 // class org/xnio/nio/NioSocketStreamConnection
     241: dup
     242: aload_0
     243: getfield      #1                  // Field this$0:Lorg/xnio/nio/WorkerThread;
     246: aload         4
     248: aconst_null
     249: invokespecial #28                 // Method org/xnio/nio/NioSocketStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Lorg/xnio/nio/ChannelClosed;)V
     252: astore        5
     254: aload_0
     255: getfield      #4                  // Field val$futureResult:Lorg/xnio/FutureResult;
     258: aload         5
     260: invokevirtual #29                 // Method org/xnio/FutureResult.setResult:(Ljava/lang/Object;)Z
     263: ifeq          278
     266: iconst_1
     267: istore_2
     268: aload         5
     270: aload_0
     271: getfield      #5                  // Field val$openListener:Lorg/xnio/ChannelListener;
     274: invokestatic  #30                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     277: pop
     278: iload_2
     279: ifne          302
     282: aload_3
     283: invokestatic  #8                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     286: goto          302
     289: astore        6
     291: iload_2
     292: ifne          299
     295: aload_3
     296: invokestatic  #8                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     299: aload         6
     301: athrow
     302: iload_2
     303: ifne          356
     306: aload_0
     307: getfield      #2                  // Field val$serverChannel:Ljava/nio/channels/ServerSocketChannel;
     310: invokestatic  #8                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     313: goto          356
     316: astore_3
     317: aload_0
     318: getfield      #4                  // Field val$futureResult:Lorg/xnio/FutureResult;
     321: aload_3
     322: invokevirtual #32                 // Method org/xnio/FutureResult.setException:(Ljava/io/IOException;)Z
     325: pop
     326: iload_2
     327: ifne          356
     330: aload_0
     331: getfield      #2                  // Field val$serverChannel:Ljava/nio/channels/ServerSocketChannel;
     334: invokestatic  #8                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     337: goto          356
     340: astore        7
     342: iload_2
     343: ifne          353
     346: aload_0
     347: getfield      #2                  // Field val$serverChannel:Ljava/nio/channels/ServerSocketChannel;
     350: invokestatic  #8                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     353: aload         7
     355: athrow
     356: return
    Exception table:
       from    to  target type
          35   278   289   any
         289   291   289   any
           2    16   316   Class java/io/IOException
          28   302   316   Class java/io/IOException
           2    16   340   any
          28   302   340   any
         316   326   340   any
         340   342   340   any

  void terminated();
    Code:
       0: return

  void forceTermination();
    Code:
       0: aload_0
       1: getfield      #4                  // Field val$futureResult:Lorg/xnio/FutureResult;
       4: invokevirtual #33                 // Method org/xnio/FutureResult.setCancelled:()Z
       7: pop
       8: return
}
