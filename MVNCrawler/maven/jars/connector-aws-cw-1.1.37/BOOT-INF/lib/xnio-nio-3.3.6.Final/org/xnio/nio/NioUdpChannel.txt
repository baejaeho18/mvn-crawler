Compiled from "NioUdpChannel.java"
class org.xnio.nio.NioUdpChannel extends org.xnio.nio.AbstractNioChannel<org.xnio.nio.NioUdpChannel> implements org.xnio.channels.MulticastMessageChannel, org.xnio.channels.ReadListenerSettable<org.xnio.nio.NioUdpChannel>, org.xnio.channels.WriteListenerSettable<org.xnio.nio.NioUdpChannel> {
  private final org.xnio.nio.NioUdpChannelHandle handle;

  private org.xnio.ChannelListener<? super org.xnio.nio.NioUdpChannel> readListener;

  private org.xnio.ChannelListener<? super org.xnio.nio.NioUdpChannel> writeListener;

  private final java.nio.channels.DatagramChannel datagramChannel;

  private final java.util.concurrent.atomic.AtomicBoolean callFlag;

  private static final java.util.Set<org.xnio.Option<?>> OPTIONS;

  org.xnio.nio.NioUdpChannel(org.xnio.nio.NioXnioWorker, java.nio.channels.DatagramChannel) throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/xnio/nio/AbstractNioChannel."<init>":(Lorg/xnio/nio/NioXnioWorker;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       9: dup
      10: iconst_0
      11: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      14: putfield      #4                  // Field callFlag:Ljava/util/concurrent/atomic/AtomicBoolean;
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
      22: aload_1
      23: invokevirtual #6                  // Method org/xnio/nio/NioXnioWorker.chooseThread:()Lorg/xnio/nio/WorkerThread;
      26: astore_3
      27: aload_3
      28: aload_2
      29: invokevirtual #7                  // Method org/xnio/nio/WorkerThread.registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
      32: astore        4
      34: aload_0
      35: new           #8                  // class org/xnio/nio/NioUdpChannelHandle
      38: dup
      39: aload_3
      40: aload         4
      42: aload_0
      43: invokespecial #9                  // Method org/xnio/nio/NioUdpChannelHandle."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Lorg/xnio/nio/NioUdpChannel;)V
      46: putfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
      49: aload         4
      51: aload_0
      52: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
      55: invokevirtual #11                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: return

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
       4: invokevirtual #12                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
       7: invokevirtual #13                 // Method java/net/DatagramSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      10: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #14                 // Method getLocalAddress:()Ljava/net/SocketAddress;
       5: invokevirtual #15                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       8: ifeq          25
      11: aload_1
      12: aload_0
      13: invokevirtual #14                 // Method getLocalAddress:()Ljava/net/SocketAddress;
      16: invokevirtual #16                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #17                 // class java/net/SocketAddress
      22: goto          26
      25: aconst_null
      26: areturn

  public int receiveFrom(org.xnio.channels.SocketAddressBuffer, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_3
       5: aload_0
       6: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
       9: aload_2
      10: invokevirtual #19                 // Method java/nio/channels/DatagramChannel.receive:(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;
      13: astore        4
      15: goto          22
      18: astore        5
      20: iconst_m1
      21: ireturn
      22: aload         4
      24: ifnonnull     29
      27: iconst_0
      28: ireturn
      29: iload_3
      30: aload_2
      31: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      34: isub
      35: istore        5
      37: aload_1
      38: ifnull        52
      41: aload_1
      42: aload         4
      44: invokevirtual #21                 // Method org/xnio/channels/SocketAddressBuffer.setSourceAddress:(Ljava/net/SocketAddress;)V
      47: aload_1
      48: aconst_null
      49: invokevirtual #22                 // Method org/xnio/channels/SocketAddressBuffer.setDestinationAddress:(Ljava/net/SocketAddress;)V
      52: iload         5
      54: ireturn
    Exception table:
       from    to  target type
           5    15    18   Class java/nio/channels/ClosedChannelException

  public long receiveFrom(org.xnio.channels.SocketAddressBuffer, java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #23                 // Method receiveFrom:(Lorg/xnio/channels/SocketAddressBuffer;[Ljava/nio/ByteBuffer;II)J
       9: lreturn

  public long receiveFrom(org.xnio.channels.SocketAddressBuffer, java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifne          7
       5: lconst_0
       6: lreturn
       7: iload         4
       9: iconst_1
      10: if_icmpne     23
      13: aload_0
      14: aload_1
      15: aload_2
      16: iload_3
      17: aaload
      18: invokevirtual #24                 // Method receiveFrom:(Lorg/xnio/channels/SocketAddressBuffer;Ljava/nio/ByteBuffer;)I
      21: i2l
      22: lreturn
      23: aload_2
      24: iload_3
      25: iload         4
      27: invokestatic  #25                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;II)J
      30: ldc2_w        #26                 // long 65536l
      33: invokestatic  #28                 // Method java/lang/Math.min:(JJ)J
      36: l2i
      37: istore        5
      39: iload         5
      41: invokestatic  #29                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      44: astore        6
      46: aload_0
      47: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
      50: aload         6
      52: invokevirtual #19                 // Method java/nio/channels/DatagramChannel.receive:(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;
      55: astore        7
      57: goto          66
      60: astore        8
      62: ldc2_w        #30                 // long -1l
      65: lreturn
      66: aload         7
      68: ifnonnull     73
      71: lconst_0
      72: lreturn
      73: iload         5
      75: aload         6
      77: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      80: isub
      81: istore        8
      83: aload         6
      85: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      88: pop
      89: aload_2
      90: iload_3
      91: iload         4
      93: aload         6
      95: invokestatic  #33                 // Method org/xnio/Buffers.copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      98: pop
      99: aload_1
     100: ifnull        114
     103: aload_1
     104: aload         7
     106: invokevirtual #21                 // Method org/xnio/channels/SocketAddressBuffer.setSourceAddress:(Ljava/net/SocketAddress;)V
     109: aload_1
     110: aconst_null
     111: invokevirtual #22                 // Method org/xnio/channels/SocketAddressBuffer.setDestinationAddress:(Ljava/net/SocketAddress;)V
     114: iload         8
     116: i2l
     117: lreturn
    Exception table:
       from    to  target type
          46    57    60   Class java/nio/channels/ClosedChannelException

  public boolean sendTo(java.net.SocketAddress, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
       4: aload_2
       5: aload_1
       6: invokevirtual #34                 // Method java/nio/channels/DatagramChannel.send:(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean sendTo(java.net.SocketAddress, java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #35                 // Method sendTo:(Ljava/net/SocketAddress;[Ljava/nio/ByteBuffer;II)Z
       9: ireturn

  public boolean sendTo(java.net.SocketAddress, java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifne          7
       5: iconst_0
       6: ireturn
       7: iload         4
       9: iconst_1
      10: if_icmpne     22
      13: aload_0
      14: aload_1
      15: aload_2
      16: iload_3
      17: aaload
      18: invokevirtual #36                 // Method sendTo:(Ljava/net/SocketAddress;Ljava/nio/ByteBuffer;)Z
      21: ireturn
      22: aload_2
      23: iload_3
      24: iload         4
      26: invokestatic  #25                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;II)J
      29: lstore        5
      31: lload         5
      33: ldc2_w        #37                 // long 65535l
      36: lcmp
      37: ifle          49
      40: getstatic     #39                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      43: invokeinterface #40,  1           // InterfaceMethod org/xnio/nio/Log.bufferTooLarge:()Ljava/lang/IllegalArgumentException;
      48: athrow
      49: lload         5
      51: l2i
      52: invokestatic  #29                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      55: astore        7
      57: aload         7
      59: aload_2
      60: iload_3
      61: iload         4
      63: invokestatic  #41                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
      66: pop
      67: aload         7
      69: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      72: pop
      73: aload_0
      74: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
      77: aload         7
      79: aload_1
      80: invokevirtual #34                 // Method java/nio/channels/DatagramChannel.send:(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I
      83: ifeq          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: ireturn

  public org.xnio.ChannelListener<? super org.xnio.nio.NioUdpChannel> getReadListener();
    Code:
       0: aload_0
       1: getfield      #42                 // Field readListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setReadListener(org.xnio.ChannelListener<? super org.xnio.nio.NioUdpChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field readListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener<? super org.xnio.nio.NioUdpChannel> getWriteListener();
    Code:
       0: aload_0
       1: getfield      #43                 // Field writeListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setWriteListener(org.xnio.ChannelListener<? super org.xnio.nio.NioUdpChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field writeListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener$Setter<org.xnio.nio.NioUdpChannel> getReadSetter();
    Code:
       0: new           #44                 // class org/xnio/channels/ReadListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method org/xnio/channels/ReadListenerSettable$Setter."<init>":(Lorg/xnio/channels/ReadListenerSettable;)V
       8: areturn

  public org.xnio.ChannelListener$Setter<org.xnio.nio.NioUdpChannel> getWriteSetter();
    Code:
       0: new           #46                 // class org/xnio/channels/WriteListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #47                 // Method org/xnio/channels/WriteListenerSettable$Setter."<init>":(Lorg/xnio/channels/WriteListenerSettable;)V
       8: areturn

  public boolean flush() throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
       4: invokevirtual #48                 // Method java/nio/channels/DatagramChannel.isOpen:()Z
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field callFlag:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifne          51
      11: getstatic     #50                 // Field org/xnio/nio/Log.udpServerChannelLog:Lorg/xnio/nio/Log;
      14: ldc           #51                 // String Closing %s
      16: aload_0
      17: invokeinterface #52,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      22: aload_0
      23: invokespecial #53                 // Method cancelKeys:()V
      26: goto          30
      29: astore_1
      30: aload_0
      31: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
      34: invokevirtual #55                 // Method java/nio/channels/DatagramChannel.close:()V
      37: aload_0
      38: invokevirtual #56                 // Method invokeCloseHandler:()V
      41: goto          51
      44: astore_2
      45: aload_0
      46: invokevirtual #56                 // Method invokeCloseHandler:()V
      49: aload_2
      50: athrow
      51: return
    Exception table:
       from    to  target type
          22    26    29   Class java/lang/Throwable
          30    37    44   any
          44    45    44   any

  private void cancelKeys();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
       4: invokevirtual #57                 // Method org/xnio/nio/NioUdpChannelHandle.getWorkerThread:()Lorg/xnio/nio/WorkerThread;
       7: aload_0
       8: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
      11: invokevirtual #58                 // Method org/xnio/nio/NioUdpChannelHandle.getSelectionKey:()Ljava/nio/channels/SelectionKey;
      14: invokevirtual #59                 // Method org/xnio/nio/WorkerThread.cancelKey:(Ljava/nio/channels/SelectionKey;)V
      17: goto          21
      20: astore_1
      21: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Throwable

  public void suspendReads();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
       4: iconst_1
       5: invokevirtual #60                 // Method org/xnio/nio/NioUdpChannelHandle.suspend:(I)V
       8: return

  public void suspendWrites();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
       4: iconst_4
       5: invokevirtual #60                 // Method org/xnio/nio/NioUdpChannelHandle.suspend:(I)V
       8: return

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
       4: iconst_1
       5: invokevirtual #61                 // Method org/xnio/nio/NioUdpChannelHandle.resume:(I)V
       8: return

  public void resumeWrites();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
       4: iconst_4
       5: invokevirtual #61                 // Method org/xnio/nio/NioUdpChannelHandle.resume:(I)V
       8: return

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
       4: iconst_1
       5: invokevirtual #62                 // Method org/xnio/nio/NioUdpChannelHandle.isResumed:(I)Z
       8: ireturn

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
       4: iconst_4
       5: invokevirtual #62                 // Method org/xnio/nio/NioUdpChannelHandle.isResumed:(I)Z
       8: ireturn

  public void wakeupReads();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
       4: iconst_1
       5: invokevirtual #63                 // Method org/xnio/nio/NioUdpChannelHandle.wakeup:(I)V
       8: return

  public void wakeupWrites();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handle:Lorg/xnio/nio/NioUdpChannelHandle;
       4: iconst_4
       5: invokevirtual #63                 // Method org/xnio/nio/NioUdpChannelHandle.wakeup:(I)V
       8: return

  public void shutdownReads() throws java.io.IOException;
    Code:
       0: getstatic     #39                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: ldc           #64                 // String shutdownReads
       5: invokeinterface #65,  2           // InterfaceMethod org/xnio/nio/Log.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      10: athrow

  public void shutdownWrites() throws java.io.IOException;
    Code:
       0: getstatic     #39                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: ldc           #66                 // String shutdownWrites
       5: invokeinterface #65,  2           // InterfaceMethod org/xnio/nio/Log.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      10: athrow

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #67                 // Field worker:Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #68                 // Method org/xnio/nio/NioXnioWorker.getXnio:()Lorg/xnio/nio/NioXnio;
       7: aload_0
       8: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
      11: iconst_1
      12: invokestatic  #69                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;I)V
      15: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #67                 // Field worker:Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #68                 // Method org/xnio/nio/NioXnioWorker.getXnio:()Lorg/xnio/nio/NioXnio;
       7: aload_0
       8: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
      11: iconst_1
      12: lload_1
      13: aload_3
      14: invokestatic  #70                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;IJLjava/util/concurrent/TimeUnit;)V
      17: return

  public org.xnio.XnioExecutor getReadThread();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       4: areturn

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #67                 // Field worker:Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #68                 // Method org/xnio/nio/NioXnioWorker.getXnio:()Lorg/xnio/nio/NioXnio;
       7: aload_0
       8: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
      11: iconst_4
      12: invokestatic  #69                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;I)V
      15: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #67                 // Field worker:Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #68                 // Method org/xnio/nio/NioXnioWorker.getXnio:()Lorg/xnio/nio/NioXnio;
       7: aload_0
       8: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
      11: iconst_4
      12: lload_1
      13: aload_3
      14: invokestatic  #70                 // Method org/xnio/nio/SelectorUtils.await:(Lorg/xnio/nio/NioXnio;Ljava/nio/channels/SelectableChannel;IJLjava/util/concurrent/TimeUnit;)V
      17: return

  public org.xnio.XnioExecutor getWriteThread();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       4: areturn

  public org.xnio.channels.MulticastMessageChannel$Key join(java.net.InetAddress, java.net.NetworkInterface) throws java.io.IOException;
    Code:
       0: new           #72                 // class org/xnio/nio/NioUdpChannel$NioKey
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
       9: aload_1
      10: aload_2
      11: invokevirtual #73                 // Method java/nio/channels/DatagramChannel.join:(Ljava/net/InetAddress;Ljava/net/NetworkInterface;)Ljava/nio/channels/MembershipKey;
      14: invokespecial #74                 // Method org/xnio/nio/NioUdpChannel$NioKey."<init>":(Lorg/xnio/nio/NioUdpChannel;Ljava/nio/channels/MembershipKey;)V
      17: areturn

  public org.xnio.channels.MulticastMessageChannel$Key join(java.net.InetAddress, java.net.NetworkInterface, java.net.InetAddress) throws java.io.IOException;
    Code:
       0: new           #72                 // class org/xnio/nio/NioUdpChannel$NioKey
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokevirtual #75                 // Method java/nio/channels/DatagramChannel.join:(Ljava/net/InetAddress;Ljava/net/NetworkInterface;Ljava/net/InetAddress;)Ljava/nio/channels/MembershipKey;
      15: invokespecial #74                 // Method org/xnio/nio/NioUdpChannel$NioKey."<init>":(Lorg/xnio/nio/NioUdpChannel;Ljava/nio/channels/MembershipKey;)V
      18: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #76                 // Field OPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #77,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws org.xnio.channels.UnsupportedOptionException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
       4: astore_2
       5: aload_2
       6: invokevirtual #12                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
       9: astore_3
      10: aload_1
      11: getstatic     #78                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      14: if_acmpne     29
      17: aload_1
      18: aload_3
      19: invokevirtual #79                 // Method java/net/DatagramSocket.getReceiveBufferSize:()I
      22: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: invokevirtual #81                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn
      29: aload_1
      30: getstatic     #82                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      33: if_acmpne     48
      36: aload_1
      37: aload_3
      38: invokevirtual #83                 // Method java/net/DatagramSocket.getSendBufferSize:()I
      41: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: invokevirtual #81                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      47: areturn
      48: aload_1
      49: getstatic     #84                 // Field org/xnio/Options.BROADCAST:Lorg/xnio/Option;
      52: if_acmpne     67
      55: aload_1
      56: aload_3
      57: invokevirtual #85                 // Method java/net/DatagramSocket.getBroadcast:()Z
      60: invokestatic  #86                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      63: invokevirtual #81                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      66: areturn
      67: aload_1
      68: getstatic     #87                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
      71: if_acmpne     86
      74: aload_1
      75: aload_3
      76: invokevirtual #88                 // Method java/net/DatagramSocket.getTrafficClass:()I
      79: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      82: invokevirtual #81                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      85: areturn
      86: getstatic     #89                 // Field org/xnio/Xnio.NIO2:Z
      89: ifeq          113
      92: aload_1
      93: getstatic     #90                 // Field org/xnio/Options.MULTICAST_TTL:Lorg/xnio/Option;
      96: if_acmpne     111
      99: aload_1
     100: aload_2
     101: getstatic     #91                 // Field java/net/StandardSocketOptions.IP_MULTICAST_TTL:Ljava/net/SocketOption;
     104: invokevirtual #92                 // Method java/nio/channels/DatagramChannel.getOption:(Ljava/net/SocketOption;)Ljava/lang/Object;
     107: invokevirtual #81                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     110: areturn
     111: aconst_null
     112: areturn
     113: aconst_null
     114: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field datagramChannel:Ljava/nio/channels/DatagramChannel;
       4: astore_3
       5: aload_3
       6: invokevirtual #12                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
       9: astore        4
      11: aload_1
      12: getstatic     #78                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      15: if_acmpne     75
      18: aload         4
      20: invokevirtual #79                 // Method java/net/DatagramSocket.getReceiveBufferSize:()I
      23: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: astore        5
      28: getstatic     #78                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      31: aload_2
      32: ldc           #93                 // int 65536
      34: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: invokevirtual #94                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #95                 // class java/lang/Integer
      43: invokevirtual #96                 // Method java/lang/Integer.intValue:()I
      46: istore        6
      48: iload         6
      50: iconst_1
      51: if_icmpge     65
      54: getstatic     #39                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      57: ldc           #97                 // String RECEIVE_BUFFER
      59: invokeinterface #98,  2           // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      64: athrow
      65: aload         4
      67: iload         6
      69: invokevirtual #99                 // Method java/net/DatagramSocket.setReceiveBufferSize:(I)V
      72: goto          267
      75: aload_1
      76: getstatic     #82                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      79: if_acmpne     139
      82: aload         4
      84: invokevirtual #83                 // Method java/net/DatagramSocket.getSendBufferSize:()I
      87: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      90: astore        5
      92: getstatic     #82                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      95: aload_2
      96: ldc           #93                 // int 65536
      98: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     101: invokevirtual #94                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #95                 // class java/lang/Integer
     107: invokevirtual #96                 // Method java/lang/Integer.intValue:()I
     110: istore        6
     112: iload         6
     114: iconst_1
     115: if_icmpge     129
     118: getstatic     #39                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     121: ldc           #100                // String SEND_BUFFER
     123: invokeinterface #98,  2           // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     128: athrow
     129: aload         4
     131: iload         6
     133: invokevirtual #101                // Method java/net/DatagramSocket.setSendBufferSize:(I)V
     136: goto          267
     139: aload_1
     140: getstatic     #87                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
     143: if_acmpne     181
     146: aload         4
     148: invokevirtual #88                 // Method java/net/DatagramSocket.getTrafficClass:()I
     151: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     154: astore        5
     156: aload         4
     158: getstatic     #87                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
     161: aload_2
     162: iconst_0
     163: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     166: invokevirtual #94                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     169: checkcast     #95                 // class java/lang/Integer
     172: invokevirtual #96                 // Method java/lang/Integer.intValue:()I
     175: invokevirtual #102                // Method java/net/DatagramSocket.setTrafficClass:(I)V
     178: goto          267
     181: aload_1
     182: getstatic     #84                 // Field org/xnio/Options.BROADCAST:Lorg/xnio/Option;
     185: if_acmpne     222
     188: aload         4
     190: invokevirtual #85                 // Method java/net/DatagramSocket.getBroadcast:()Z
     193: invokestatic  #86                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     196: astore        5
     198: aload         4
     200: getstatic     #84                 // Field org/xnio/Options.BROADCAST:Lorg/xnio/Option;
     203: aload_2
     204: getstatic     #103                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     207: invokevirtual #94                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     210: checkcast     #104                // class java/lang/Boolean
     213: invokevirtual #105                // Method java/lang/Boolean.booleanValue:()Z
     216: invokevirtual #106                // Method java/net/DatagramSocket.setBroadcast:(Z)V
     219: goto          267
     222: getstatic     #89                 // Field org/xnio/Xnio.NIO2:Z
     225: ifeq          265
     228: aload_1
     229: getstatic     #90                 // Field org/xnio/Options.MULTICAST_TTL:Lorg/xnio/Option;
     232: if_acmpne     263
     235: aload_1
     236: aload_3
     237: getstatic     #91                 // Field java/net/StandardSocketOptions.IP_MULTICAST_TTL:Ljava/net/SocketOption;
     240: invokevirtual #92                 // Method java/nio/channels/DatagramChannel.getOption:(Ljava/net/SocketOption;)Ljava/lang/Object;
     243: invokevirtual #81                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     246: astore        5
     248: aload_3
     249: getstatic     #91                 // Field java/net/StandardSocketOptions.IP_MULTICAST_TTL:Ljava/net/SocketOption;
     252: aload_2
     253: checkcast     #95                 // class java/lang/Integer
     256: invokevirtual #107                // Method java/nio/channels/DatagramChannel.setOption:(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/DatagramChannel;
     259: pop
     260: goto          267
     263: aconst_null
     264: areturn
     265: aconst_null
     266: areturn
     267: aload_1
     268: aload         5
     270: invokevirtual #81                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     273: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #108                // String UDP socket channel (NIO) <%h>
       2: iconst_1
       3: anewarray     #109                // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: invokestatic  #110                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: areturn

  static {};
    Code:
       0: invokestatic  #111                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
       3: getstatic     #84                 // Field org/xnio/Options.BROADCAST:Lorg/xnio/Option;
       6: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
       9: getstatic     #78                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      12: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      15: getstatic     #82                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      18: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      21: getstatic     #87                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
      24: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      27: getstatic     #90                 // Field org/xnio/Options.MULTICAST_TTL:Lorg/xnio/Option;
      30: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      33: invokevirtual #113                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      36: putstatic     #76                 // Field OPTIONS:Ljava/util/Set;
      39: return
}
