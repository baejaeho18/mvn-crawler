Compiled from "CreateLaunchConfigurationRequest.java"
public class com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest extends com.amazonaws.AmazonWebServiceRequest implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String launchConfigurationName;

  private java.lang.String imageId;

  private java.lang.String keyName;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> securityGroups;

  private java.lang.String classicLinkVPCId;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> classicLinkVPCSecurityGroups;

  private java.lang.String userData;

  private java.lang.String instanceId;

  private java.lang.String instanceType;

  private java.lang.String kernelId;

  private java.lang.String ramdiskId;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.autoscaling.model.BlockDeviceMapping> blockDeviceMappings;

  private com.amazonaws.services.autoscaling.model.InstanceMonitoring instanceMonitoring;

  private java.lang.String spotPrice;

  private java.lang.String iamInstanceProfile;

  private java.lang.Boolean ebsOptimized;

  private java.lang.Boolean associatePublicIpAddress;

  private java.lang.String placementTenancy;

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: return

  public void setLaunchConfigurationName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field launchConfigurationName:Ljava/lang/String;
       5: return

  public java.lang.String getLaunchConfigurationName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field launchConfigurationName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withLaunchConfigurationName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setLaunchConfigurationName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setImageId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field imageId:Ljava/lang/String;
       5: return

  public java.lang.String getImageId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field imageId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withImageId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setImageId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field keyName:Ljava/lang/String;
       5: return

  public java.lang.String getKeyName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field keyName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setKeyName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getSecurityGroups();
    Code:
       0: aload_0
       1: getfield      #8                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #10                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #8                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #8                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setSecurityGroups(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #8                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #9                  // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #11                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #8                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withSecurityGroups(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #8                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #13                 // Method setSecurityGroups:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #8                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #14                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withSecurityGroups(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setSecurityGroups:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setClassicLinkVPCId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field classicLinkVPCId:Ljava/lang/String;
       5: return

  public java.lang.String getClassicLinkVPCId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field classicLinkVPCId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withClassicLinkVPCId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method setClassicLinkVPCId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getClassicLinkVPCSecurityGroups();
    Code:
       0: aload_0
       1: getfield      #17                 // Field classicLinkVPCSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #10                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #17                 // Field classicLinkVPCSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #17                 // Field classicLinkVPCSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setClassicLinkVPCSecurityGroups(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #17                 // Field classicLinkVPCSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #9                  // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #11                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #17                 // Field classicLinkVPCSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withClassicLinkVPCSecurityGroups(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #17                 // Field classicLinkVPCSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #18                 // Method setClassicLinkVPCSecurityGroups:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #17                 // Field classicLinkVPCSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #14                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withClassicLinkVPCSecurityGroups(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method setClassicLinkVPCSecurityGroups:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setUserData(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field userData:Ljava/lang/String;
       5: return

  public java.lang.String getUserData();
    Code:
       0: aload_0
       1: getfield      #19                 // Field userData:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withUserData(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setUserData:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field instanceId:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceId();
    Code:
       0: aload_0
       1: getfield      #21                 // Field instanceId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withInstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method setInstanceId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field instanceType:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceType();
    Code:
       0: aload_0
       1: getfield      #23                 // Field instanceType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setInstanceType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setKernelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field kernelId:Ljava/lang/String;
       5: return

  public java.lang.String getKernelId();
    Code:
       0: aload_0
       1: getfield      #25                 // Field kernelId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withKernelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setKernelId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRamdiskId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field ramdiskId:Ljava/lang/String;
       5: return

  public java.lang.String getRamdiskId();
    Code:
       0: aload_0
       1: getfield      #27                 // Field ramdiskId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withRamdiskId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setRamdiskId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.autoscaling.model.BlockDeviceMapping> getBlockDeviceMappings();
    Code:
       0: aload_0
       1: getfield      #29                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #10                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #29                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #29                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setBlockDeviceMappings(java.util.Collection<com.amazonaws.services.autoscaling.model.BlockDeviceMapping>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #29                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #9                  // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #11                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #29                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withBlockDeviceMappings(com.amazonaws.services.autoscaling.model.BlockDeviceMapping...);
    Code:
       0: aload_0
       1: getfield      #29                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #30                 // Method setBlockDeviceMappings:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #29                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #14                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withBlockDeviceMappings(java.util.Collection<com.amazonaws.services.autoscaling.model.BlockDeviceMapping>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setBlockDeviceMappings:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setInstanceMonitoring(com.amazonaws.services.autoscaling.model.InstanceMonitoring);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field instanceMonitoring:Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
       5: return

  public com.amazonaws.services.autoscaling.model.InstanceMonitoring getInstanceMonitoring();
    Code:
       0: aload_0
       1: getfield      #31                 // Field instanceMonitoring:Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withInstanceMonitoring(com.amazonaws.services.autoscaling.model.InstanceMonitoring);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method setInstanceMonitoring:(Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;)V
       5: aload_0
       6: areturn

  public void setSpotPrice(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field spotPrice:Ljava/lang/String;
       5: return

  public java.lang.String getSpotPrice();
    Code:
       0: aload_0
       1: getfield      #33                 // Field spotPrice:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withSpotPrice(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method setSpotPrice:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setIamInstanceProfile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field iamInstanceProfile:Ljava/lang/String;
       5: return

  public java.lang.String getIamInstanceProfile();
    Code:
       0: aload_0
       1: getfield      #35                 // Field iamInstanceProfile:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withIamInstanceProfile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setIamInstanceProfile:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setEbsOptimized(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field ebsOptimized:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getEbsOptimized();
    Code:
       0: aload_0
       1: getfield      #37                 // Field ebsOptimized:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withEbsOptimized(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setEbsOptimized:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isEbsOptimized();
    Code:
       0: aload_0
       1: getfield      #37                 // Field ebsOptimized:Ljava/lang/Boolean;
       4: areturn

  public void setAssociatePublicIpAddress(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field associatePublicIpAddress:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getAssociatePublicIpAddress();
    Code:
       0: aload_0
       1: getfield      #39                 // Field associatePublicIpAddress:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withAssociatePublicIpAddress(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setAssociatePublicIpAddress:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isAssociatePublicIpAddress();
    Code:
       0: aload_0
       1: getfield      #39                 // Field associatePublicIpAddress:Ljava/lang/Boolean;
       4: areturn

  public void setPlacementTenancy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field placementTenancy:Ljava/lang/String;
       5: return

  public java.lang.String getPlacementTenancy();
    Code:
       0: aload_0
       1: getfield      #41                 // Field placementTenancy:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withPlacementTenancy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method setPlacementTenancy:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #45                 // String {
      11: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #47                 // Method getLaunchConfigurationName:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #43                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #48                 // String LaunchConfigurationName:
      32: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #47                 // Method getLaunchConfigurationName:()Ljava/lang/String;
      39: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #49                 // String ,
      44: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #51                 // Method getImageId:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #43                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #52                 // String ImageId:
      71: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #51                 // Method getImageId:()Ljava/lang/String;
      78: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #49                 // String ,
      83: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #53                 // Method getKeyName:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #43                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #54                 // String KeyName:
     110: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #53                 // Method getKeyName:()Ljava/lang/String;
     117: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #49                 // String ,
     122: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #55                 // Method getSecurityGroups:()Ljava/util/List;
     136: ifnull        171
     139: aload_1
     140: new           #43                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #56                 // String SecurityGroups:
     149: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #55                 // Method getSecurityGroups:()Ljava/util/List;
     156: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #49                 // String ,
     161: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #58                 // Method getClassicLinkVPCId:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #43                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #59                 // String ClassicLinkVPCId:
     188: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #58                 // Method getClassicLinkVPCId:()Ljava/lang/String;
     195: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #49                 // String ,
     200: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #60                 // Method getClassicLinkVPCSecurityGroups:()Ljava/util/List;
     214: ifnull        249
     217: aload_1
     218: new           #43                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #61                 // String ClassicLinkVPCSecurityGroups:
     227: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #60                 // Method getClassicLinkVPCSecurityGroups:()Ljava/util/List;
     234: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #49                 // String ,
     239: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #62                 // Method getUserData:()Ljava/lang/String;
     253: ifnull        288
     256: aload_1
     257: new           #43                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #63                 // String UserData:
     266: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #62                 // Method getUserData:()Ljava/lang/String;
     273: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #49                 // String ,
     278: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #64                 // Method getInstanceId:()Ljava/lang/String;
     292: ifnull        327
     295: aload_1
     296: new           #43                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #65                 // String InstanceId:
     305: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #64                 // Method getInstanceId:()Ljava/lang/String;
     312: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: ldc           #49                 // String ,
     317: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #66                 // Method getInstanceType:()Ljava/lang/String;
     331: ifnull        366
     334: aload_1
     335: new           #43                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #67                 // String InstanceType:
     344: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #66                 // Method getInstanceType:()Ljava/lang/String;
     351: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: ldc           #49                 // String ,
     356: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #68                 // Method getKernelId:()Ljava/lang/String;
     370: ifnull        405
     373: aload_1
     374: new           #43                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #69                 // String KernelId:
     383: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #68                 // Method getKernelId:()Ljava/lang/String;
     390: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: ldc           #49                 // String ,
     395: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #70                 // Method getRamdiskId:()Ljava/lang/String;
     409: ifnull        444
     412: aload_1
     413: new           #43                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #71                 // String RamdiskId:
     422: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #70                 // Method getRamdiskId:()Ljava/lang/String;
     429: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     432: ldc           #49                 // String ,
     434: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #72                 // Method getBlockDeviceMappings:()Ljava/util/List;
     448: ifnull        483
     451: aload_1
     452: new           #43                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #73                 // String BlockDeviceMappings:
     461: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #72                 // Method getBlockDeviceMappings:()Ljava/util/List;
     468: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     471: ldc           #49                 // String ,
     473: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #74                 // Method getInstanceMonitoring:()Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
     487: ifnull        522
     490: aload_1
     491: new           #43                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #75                 // String InstanceMonitoring:
     500: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #74                 // Method getInstanceMonitoring:()Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
     507: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     510: ldc           #49                 // String ,
     512: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #76                 // Method getSpotPrice:()Ljava/lang/String;
     526: ifnull        561
     529: aload_1
     530: new           #43                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #77                 // String SpotPrice:
     539: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #76                 // Method getSpotPrice:()Ljava/lang/String;
     546: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     549: ldc           #49                 // String ,
     551: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #78                 // Method getIamInstanceProfile:()Ljava/lang/String;
     565: ifnull        600
     568: aload_1
     569: new           #43                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #79                 // String IamInstanceProfile:
     578: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #78                 // Method getIamInstanceProfile:()Ljava/lang/String;
     585: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     588: ldc           #49                 // String ,
     590: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #80                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     604: ifnull        639
     607: aload_1
     608: new           #43                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #81                 // String EbsOptimized:
     617: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #80                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     624: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     627: ldc           #49                 // String ,
     629: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     632: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     635: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     638: pop
     639: aload_0
     640: invokevirtual #82                 // Method getAssociatePublicIpAddress:()Ljava/lang/Boolean;
     643: ifnull        678
     646: aload_1
     647: new           #43                 // class java/lang/StringBuilder
     650: dup
     651: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     654: ldc           #83                 // String AssociatePublicIpAddress:
     656: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     659: aload_0
     660: invokevirtual #82                 // Method getAssociatePublicIpAddress:()Ljava/lang/Boolean;
     663: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     666: ldc           #49                 // String ,
     668: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     671: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     674: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     677: pop
     678: aload_0
     679: invokevirtual #84                 // Method getPlacementTenancy:()Ljava/lang/String;
     682: ifnull        712
     685: aload_1
     686: new           #43                 // class java/lang/StringBuilder
     689: dup
     690: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     693: ldc           #85                 // String PlacementTenancy:
     695: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     698: aload_0
     699: invokevirtual #84                 // Method getPlacementTenancy:()Ljava/lang/String;
     702: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     705: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     708: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     711: pop
     712: aload_1
     713: ldc           #86                 // String }
     715: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     718: pop
     719: aload_1
     720: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     723: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #87                 // class com/amazonaws/services/autoscaling/model/CreateLaunchConfigurationRequest
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #87                 // class com/amazonaws/services/autoscaling/model/CreateLaunchConfigurationRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #47                 // Method getLaunchConfigurationName:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #47                 // Method getLaunchConfigurationName:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #47                 // Method getLaunchConfigurationName:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #47                 // Method getLaunchConfigurationName:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #47                 // Method getLaunchConfigurationName:()Ljava/lang/String;
      72: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #51                 // Method getImageId:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #51                 // Method getImageId:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #51                 // Method getImageId:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #51                 // Method getImageId:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #51                 // Method getImageId:()Ljava/lang/String;
     125: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #53                 // Method getKeyName:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #53                 // Method getKeyName:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #53                 // Method getKeyName:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #53                 // Method getKeyName:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #53                 // Method getKeyName:()Ljava/lang/String;
     178: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #55                 // Method getSecurityGroups:()Ljava/util/List;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #55                 // Method getSecurityGroups:()Ljava/util/List;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #55                 // Method getSecurityGroups:()Ljava/util/List;
     220: ifnull        241
     223: aload_2
     224: invokevirtual #55                 // Method getSecurityGroups:()Ljava/util/List;
     227: aload_0
     228: invokevirtual #55                 // Method getSecurityGroups:()Ljava/util/List;
     231: invokeinterface #89,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     236: ifne          241
     239: iconst_0
     240: ireturn
     241: aload_2
     242: invokevirtual #58                 // Method getClassicLinkVPCId:()Ljava/lang/String;
     245: ifnonnull     252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: aload_0
     254: invokevirtual #58                 // Method getClassicLinkVPCId:()Ljava/lang/String;
     257: ifnonnull     264
     260: iconst_1
     261: goto          265
     264: iconst_0
     265: ixor
     266: ifeq          271
     269: iconst_0
     270: ireturn
     271: aload_2
     272: invokevirtual #58                 // Method getClassicLinkVPCId:()Ljava/lang/String;
     275: ifnull        294
     278: aload_2
     279: invokevirtual #58                 // Method getClassicLinkVPCId:()Ljava/lang/String;
     282: aload_0
     283: invokevirtual #58                 // Method getClassicLinkVPCId:()Ljava/lang/String;
     286: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     289: ifne          294
     292: iconst_0
     293: ireturn
     294: aload_2
     295: invokevirtual #60                 // Method getClassicLinkVPCSecurityGroups:()Ljava/util/List;
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: aload_0
     307: invokevirtual #60                 // Method getClassicLinkVPCSecurityGroups:()Ljava/util/List;
     310: ifnonnull     317
     313: iconst_1
     314: goto          318
     317: iconst_0
     318: ixor
     319: ifeq          324
     322: iconst_0
     323: ireturn
     324: aload_2
     325: invokevirtual #60                 // Method getClassicLinkVPCSecurityGroups:()Ljava/util/List;
     328: ifnull        349
     331: aload_2
     332: invokevirtual #60                 // Method getClassicLinkVPCSecurityGroups:()Ljava/util/List;
     335: aload_0
     336: invokevirtual #60                 // Method getClassicLinkVPCSecurityGroups:()Ljava/util/List;
     339: invokeinterface #89,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     344: ifne          349
     347: iconst_0
     348: ireturn
     349: aload_2
     350: invokevirtual #62                 // Method getUserData:()Ljava/lang/String;
     353: ifnonnull     360
     356: iconst_1
     357: goto          361
     360: iconst_0
     361: aload_0
     362: invokevirtual #62                 // Method getUserData:()Ljava/lang/String;
     365: ifnonnull     372
     368: iconst_1
     369: goto          373
     372: iconst_0
     373: ixor
     374: ifeq          379
     377: iconst_0
     378: ireturn
     379: aload_2
     380: invokevirtual #62                 // Method getUserData:()Ljava/lang/String;
     383: ifnull        402
     386: aload_2
     387: invokevirtual #62                 // Method getUserData:()Ljava/lang/String;
     390: aload_0
     391: invokevirtual #62                 // Method getUserData:()Ljava/lang/String;
     394: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     397: ifne          402
     400: iconst_0
     401: ireturn
     402: aload_2
     403: invokevirtual #64                 // Method getInstanceId:()Ljava/lang/String;
     406: ifnonnull     413
     409: iconst_1
     410: goto          414
     413: iconst_0
     414: aload_0
     415: invokevirtual #64                 // Method getInstanceId:()Ljava/lang/String;
     418: ifnonnull     425
     421: iconst_1
     422: goto          426
     425: iconst_0
     426: ixor
     427: ifeq          432
     430: iconst_0
     431: ireturn
     432: aload_2
     433: invokevirtual #64                 // Method getInstanceId:()Ljava/lang/String;
     436: ifnull        455
     439: aload_2
     440: invokevirtual #64                 // Method getInstanceId:()Ljava/lang/String;
     443: aload_0
     444: invokevirtual #64                 // Method getInstanceId:()Ljava/lang/String;
     447: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     450: ifne          455
     453: iconst_0
     454: ireturn
     455: aload_2
     456: invokevirtual #66                 // Method getInstanceType:()Ljava/lang/String;
     459: ifnonnull     466
     462: iconst_1
     463: goto          467
     466: iconst_0
     467: aload_0
     468: invokevirtual #66                 // Method getInstanceType:()Ljava/lang/String;
     471: ifnonnull     478
     474: iconst_1
     475: goto          479
     478: iconst_0
     479: ixor
     480: ifeq          485
     483: iconst_0
     484: ireturn
     485: aload_2
     486: invokevirtual #66                 // Method getInstanceType:()Ljava/lang/String;
     489: ifnull        508
     492: aload_2
     493: invokevirtual #66                 // Method getInstanceType:()Ljava/lang/String;
     496: aload_0
     497: invokevirtual #66                 // Method getInstanceType:()Ljava/lang/String;
     500: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     503: ifne          508
     506: iconst_0
     507: ireturn
     508: aload_2
     509: invokevirtual #68                 // Method getKernelId:()Ljava/lang/String;
     512: ifnonnull     519
     515: iconst_1
     516: goto          520
     519: iconst_0
     520: aload_0
     521: invokevirtual #68                 // Method getKernelId:()Ljava/lang/String;
     524: ifnonnull     531
     527: iconst_1
     528: goto          532
     531: iconst_0
     532: ixor
     533: ifeq          538
     536: iconst_0
     537: ireturn
     538: aload_2
     539: invokevirtual #68                 // Method getKernelId:()Ljava/lang/String;
     542: ifnull        561
     545: aload_2
     546: invokevirtual #68                 // Method getKernelId:()Ljava/lang/String;
     549: aload_0
     550: invokevirtual #68                 // Method getKernelId:()Ljava/lang/String;
     553: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     556: ifne          561
     559: iconst_0
     560: ireturn
     561: aload_2
     562: invokevirtual #70                 // Method getRamdiskId:()Ljava/lang/String;
     565: ifnonnull     572
     568: iconst_1
     569: goto          573
     572: iconst_0
     573: aload_0
     574: invokevirtual #70                 // Method getRamdiskId:()Ljava/lang/String;
     577: ifnonnull     584
     580: iconst_1
     581: goto          585
     584: iconst_0
     585: ixor
     586: ifeq          591
     589: iconst_0
     590: ireturn
     591: aload_2
     592: invokevirtual #70                 // Method getRamdiskId:()Ljava/lang/String;
     595: ifnull        614
     598: aload_2
     599: invokevirtual #70                 // Method getRamdiskId:()Ljava/lang/String;
     602: aload_0
     603: invokevirtual #70                 // Method getRamdiskId:()Ljava/lang/String;
     606: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     609: ifne          614
     612: iconst_0
     613: ireturn
     614: aload_2
     615: invokevirtual #72                 // Method getBlockDeviceMappings:()Ljava/util/List;
     618: ifnonnull     625
     621: iconst_1
     622: goto          626
     625: iconst_0
     626: aload_0
     627: invokevirtual #72                 // Method getBlockDeviceMappings:()Ljava/util/List;
     630: ifnonnull     637
     633: iconst_1
     634: goto          638
     637: iconst_0
     638: ixor
     639: ifeq          644
     642: iconst_0
     643: ireturn
     644: aload_2
     645: invokevirtual #72                 // Method getBlockDeviceMappings:()Ljava/util/List;
     648: ifnull        669
     651: aload_2
     652: invokevirtual #72                 // Method getBlockDeviceMappings:()Ljava/util/List;
     655: aload_0
     656: invokevirtual #72                 // Method getBlockDeviceMappings:()Ljava/util/List;
     659: invokeinterface #89,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     664: ifne          669
     667: iconst_0
     668: ireturn
     669: aload_2
     670: invokevirtual #74                 // Method getInstanceMonitoring:()Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
     673: ifnonnull     680
     676: iconst_1
     677: goto          681
     680: iconst_0
     681: aload_0
     682: invokevirtual #74                 // Method getInstanceMonitoring:()Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
     685: ifnonnull     692
     688: iconst_1
     689: goto          693
     692: iconst_0
     693: ixor
     694: ifeq          699
     697: iconst_0
     698: ireturn
     699: aload_2
     700: invokevirtual #74                 // Method getInstanceMonitoring:()Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
     703: ifnull        722
     706: aload_2
     707: invokevirtual #74                 // Method getInstanceMonitoring:()Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
     710: aload_0
     711: invokevirtual #74                 // Method getInstanceMonitoring:()Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
     714: invokevirtual #90                 // Method com/amazonaws/services/autoscaling/model/InstanceMonitoring.equals:(Ljava/lang/Object;)Z
     717: ifne          722
     720: iconst_0
     721: ireturn
     722: aload_2
     723: invokevirtual #76                 // Method getSpotPrice:()Ljava/lang/String;
     726: ifnonnull     733
     729: iconst_1
     730: goto          734
     733: iconst_0
     734: aload_0
     735: invokevirtual #76                 // Method getSpotPrice:()Ljava/lang/String;
     738: ifnonnull     745
     741: iconst_1
     742: goto          746
     745: iconst_0
     746: ixor
     747: ifeq          752
     750: iconst_0
     751: ireturn
     752: aload_2
     753: invokevirtual #76                 // Method getSpotPrice:()Ljava/lang/String;
     756: ifnull        775
     759: aload_2
     760: invokevirtual #76                 // Method getSpotPrice:()Ljava/lang/String;
     763: aload_0
     764: invokevirtual #76                 // Method getSpotPrice:()Ljava/lang/String;
     767: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     770: ifne          775
     773: iconst_0
     774: ireturn
     775: aload_2
     776: invokevirtual #78                 // Method getIamInstanceProfile:()Ljava/lang/String;
     779: ifnonnull     786
     782: iconst_1
     783: goto          787
     786: iconst_0
     787: aload_0
     788: invokevirtual #78                 // Method getIamInstanceProfile:()Ljava/lang/String;
     791: ifnonnull     798
     794: iconst_1
     795: goto          799
     798: iconst_0
     799: ixor
     800: ifeq          805
     803: iconst_0
     804: ireturn
     805: aload_2
     806: invokevirtual #78                 // Method getIamInstanceProfile:()Ljava/lang/String;
     809: ifnull        828
     812: aload_2
     813: invokevirtual #78                 // Method getIamInstanceProfile:()Ljava/lang/String;
     816: aload_0
     817: invokevirtual #78                 // Method getIamInstanceProfile:()Ljava/lang/String;
     820: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     823: ifne          828
     826: iconst_0
     827: ireturn
     828: aload_2
     829: invokevirtual #80                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     832: ifnonnull     839
     835: iconst_1
     836: goto          840
     839: iconst_0
     840: aload_0
     841: invokevirtual #80                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     844: ifnonnull     851
     847: iconst_1
     848: goto          852
     851: iconst_0
     852: ixor
     853: ifeq          858
     856: iconst_0
     857: ireturn
     858: aload_2
     859: invokevirtual #80                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     862: ifnull        881
     865: aload_2
     866: invokevirtual #80                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     869: aload_0
     870: invokevirtual #80                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     873: invokevirtual #91                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     876: ifne          881
     879: iconst_0
     880: ireturn
     881: aload_2
     882: invokevirtual #82                 // Method getAssociatePublicIpAddress:()Ljava/lang/Boolean;
     885: ifnonnull     892
     888: iconst_1
     889: goto          893
     892: iconst_0
     893: aload_0
     894: invokevirtual #82                 // Method getAssociatePublicIpAddress:()Ljava/lang/Boolean;
     897: ifnonnull     904
     900: iconst_1
     901: goto          905
     904: iconst_0
     905: ixor
     906: ifeq          911
     909: iconst_0
     910: ireturn
     911: aload_2
     912: invokevirtual #82                 // Method getAssociatePublicIpAddress:()Ljava/lang/Boolean;
     915: ifnull        934
     918: aload_2
     919: invokevirtual #82                 // Method getAssociatePublicIpAddress:()Ljava/lang/Boolean;
     922: aload_0
     923: invokevirtual #82                 // Method getAssociatePublicIpAddress:()Ljava/lang/Boolean;
     926: invokevirtual #91                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     929: ifne          934
     932: iconst_0
     933: ireturn
     934: aload_2
     935: invokevirtual #84                 // Method getPlacementTenancy:()Ljava/lang/String;
     938: ifnonnull     945
     941: iconst_1
     942: goto          946
     945: iconst_0
     946: aload_0
     947: invokevirtual #84                 // Method getPlacementTenancy:()Ljava/lang/String;
     950: ifnonnull     957
     953: iconst_1
     954: goto          958
     957: iconst_0
     958: ixor
     959: ifeq          964
     962: iconst_0
     963: ireturn
     964: aload_2
     965: invokevirtual #84                 // Method getPlacementTenancy:()Ljava/lang/String;
     968: ifnull        987
     971: aload_2
     972: invokevirtual #84                 // Method getPlacementTenancy:()Ljava/lang/String;
     975: aload_0
     976: invokevirtual #84                 // Method getPlacementTenancy:()Ljava/lang/String;
     979: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     982: ifne          987
     985: iconst_0
     986: ireturn
     987: iconst_1
     988: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #47                 // Method getLaunchConfigurationName:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #47                 // Method getLaunchConfigurationName:()Ljava/lang/String;
      24: invokevirtual #92                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #51                 // Method getImageId:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #51                 // Method getImageId:()Ljava/lang/String;
      48: invokevirtual #92                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #53                 // Method getKeyName:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #53                 // Method getKeyName:()Ljava/lang/String;
      72: invokevirtual #92                 // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #55                 // Method getSecurityGroups:()Ljava/util/List;
      85: ifnonnull     92
      88: iconst_0
      89: goto          101
      92: aload_0
      93: invokevirtual #55                 // Method getSecurityGroups:()Ljava/util/List;
      96: invokeinterface #93,  1           // InterfaceMethod java/util/List.hashCode:()I
     101: iadd
     102: istore_2
     103: bipush        31
     105: iload_2
     106: imul
     107: aload_0
     108: invokevirtual #58                 // Method getClassicLinkVPCId:()Ljava/lang/String;
     111: ifnonnull     118
     114: iconst_0
     115: goto          125
     118: aload_0
     119: invokevirtual #58                 // Method getClassicLinkVPCId:()Ljava/lang/String;
     122: invokevirtual #92                 // Method java/lang/String.hashCode:()I
     125: iadd
     126: istore_2
     127: bipush        31
     129: iload_2
     130: imul
     131: aload_0
     132: invokevirtual #60                 // Method getClassicLinkVPCSecurityGroups:()Ljava/util/List;
     135: ifnonnull     142
     138: iconst_0
     139: goto          151
     142: aload_0
     143: invokevirtual #60                 // Method getClassicLinkVPCSecurityGroups:()Ljava/util/List;
     146: invokeinterface #93,  1           // InterfaceMethod java/util/List.hashCode:()I
     151: iadd
     152: istore_2
     153: bipush        31
     155: iload_2
     156: imul
     157: aload_0
     158: invokevirtual #62                 // Method getUserData:()Ljava/lang/String;
     161: ifnonnull     168
     164: iconst_0
     165: goto          175
     168: aload_0
     169: invokevirtual #62                 // Method getUserData:()Ljava/lang/String;
     172: invokevirtual #92                 // Method java/lang/String.hashCode:()I
     175: iadd
     176: istore_2
     177: bipush        31
     179: iload_2
     180: imul
     181: aload_0
     182: invokevirtual #64                 // Method getInstanceId:()Ljava/lang/String;
     185: ifnonnull     192
     188: iconst_0
     189: goto          199
     192: aload_0
     193: invokevirtual #64                 // Method getInstanceId:()Ljava/lang/String;
     196: invokevirtual #92                 // Method java/lang/String.hashCode:()I
     199: iadd
     200: istore_2
     201: bipush        31
     203: iload_2
     204: imul
     205: aload_0
     206: invokevirtual #66                 // Method getInstanceType:()Ljava/lang/String;
     209: ifnonnull     216
     212: iconst_0
     213: goto          223
     216: aload_0
     217: invokevirtual #66                 // Method getInstanceType:()Ljava/lang/String;
     220: invokevirtual #92                 // Method java/lang/String.hashCode:()I
     223: iadd
     224: istore_2
     225: bipush        31
     227: iload_2
     228: imul
     229: aload_0
     230: invokevirtual #68                 // Method getKernelId:()Ljava/lang/String;
     233: ifnonnull     240
     236: iconst_0
     237: goto          247
     240: aload_0
     241: invokevirtual #68                 // Method getKernelId:()Ljava/lang/String;
     244: invokevirtual #92                 // Method java/lang/String.hashCode:()I
     247: iadd
     248: istore_2
     249: bipush        31
     251: iload_2
     252: imul
     253: aload_0
     254: invokevirtual #70                 // Method getRamdiskId:()Ljava/lang/String;
     257: ifnonnull     264
     260: iconst_0
     261: goto          271
     264: aload_0
     265: invokevirtual #70                 // Method getRamdiskId:()Ljava/lang/String;
     268: invokevirtual #92                 // Method java/lang/String.hashCode:()I
     271: iadd
     272: istore_2
     273: bipush        31
     275: iload_2
     276: imul
     277: aload_0
     278: invokevirtual #72                 // Method getBlockDeviceMappings:()Ljava/util/List;
     281: ifnonnull     288
     284: iconst_0
     285: goto          297
     288: aload_0
     289: invokevirtual #72                 // Method getBlockDeviceMappings:()Ljava/util/List;
     292: invokeinterface #93,  1           // InterfaceMethod java/util/List.hashCode:()I
     297: iadd
     298: istore_2
     299: bipush        31
     301: iload_2
     302: imul
     303: aload_0
     304: invokevirtual #74                 // Method getInstanceMonitoring:()Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
     307: ifnonnull     314
     310: iconst_0
     311: goto          321
     314: aload_0
     315: invokevirtual #74                 // Method getInstanceMonitoring:()Lcom/amazonaws/services/autoscaling/model/InstanceMonitoring;
     318: invokevirtual #94                 // Method com/amazonaws/services/autoscaling/model/InstanceMonitoring.hashCode:()I
     321: iadd
     322: istore_2
     323: bipush        31
     325: iload_2
     326: imul
     327: aload_0
     328: invokevirtual #76                 // Method getSpotPrice:()Ljava/lang/String;
     331: ifnonnull     338
     334: iconst_0
     335: goto          345
     338: aload_0
     339: invokevirtual #76                 // Method getSpotPrice:()Ljava/lang/String;
     342: invokevirtual #92                 // Method java/lang/String.hashCode:()I
     345: iadd
     346: istore_2
     347: bipush        31
     349: iload_2
     350: imul
     351: aload_0
     352: invokevirtual #78                 // Method getIamInstanceProfile:()Ljava/lang/String;
     355: ifnonnull     362
     358: iconst_0
     359: goto          369
     362: aload_0
     363: invokevirtual #78                 // Method getIamInstanceProfile:()Ljava/lang/String;
     366: invokevirtual #92                 // Method java/lang/String.hashCode:()I
     369: iadd
     370: istore_2
     371: bipush        31
     373: iload_2
     374: imul
     375: aload_0
     376: invokevirtual #80                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     379: ifnonnull     386
     382: iconst_0
     383: goto          393
     386: aload_0
     387: invokevirtual #80                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     390: invokevirtual #95                 // Method java/lang/Boolean.hashCode:()I
     393: iadd
     394: istore_2
     395: bipush        31
     397: iload_2
     398: imul
     399: aload_0
     400: invokevirtual #82                 // Method getAssociatePublicIpAddress:()Ljava/lang/Boolean;
     403: ifnonnull     410
     406: iconst_0
     407: goto          417
     410: aload_0
     411: invokevirtual #82                 // Method getAssociatePublicIpAddress:()Ljava/lang/Boolean;
     414: invokevirtual #95                 // Method java/lang/Boolean.hashCode:()I
     417: iadd
     418: istore_2
     419: bipush        31
     421: iload_2
     422: imul
     423: aload_0
     424: invokevirtual #84                 // Method getPlacementTenancy:()Ljava/lang/String;
     427: ifnonnull     434
     430: iconst_0
     431: goto          441
     434: aload_0
     435: invokevirtual #84                 // Method getPlacementTenancy:()Ljava/lang/String;
     438: invokevirtual #92                 // Method java/lang/String.hashCode:()I
     441: iadd
     442: istore_2
     443: iload_2
     444: ireturn

  public com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest clone();
    Code:
       0: aload_0
       1: invokespecial #96                 // Method com/amazonaws/AmazonWebServiceRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
       4: checkcast     #87                 // class com/amazonaws/services/autoscaling/model/CreateLaunchConfigurationRequest
       7: areturn

  public com.amazonaws.AmazonWebServiceRequest clone();
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method clone:()Lcom/amazonaws/services/autoscaling/model/CreateLaunchConfigurationRequest;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method clone:()Lcom/amazonaws/services/autoscaling/model/CreateLaunchConfigurationRequest;
       4: areturn
}
