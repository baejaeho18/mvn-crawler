Compiled from "ScopeFilter.java"
public class org.jboss.shrinkwrap.resolver.api.maven.filter.ScopeFilter implements org.jboss.shrinkwrap.resolver.api.maven.filter.MavenResolutionFilter {
  private final java.util.Set<org.jboss.shrinkwrap.resolver.api.maven.ScopeType> allowedScopes;

  public org.jboss.shrinkwrap.resolver.api.maven.filter.ScopeFilter();
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #1                  // class org/jboss/shrinkwrap/resolver/api/maven/ScopeType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/jboss/shrinkwrap/resolver/api/maven/ScopeType.COMPILE:Lorg/jboss/shrinkwrap/resolver/api/maven/ScopeType;
      10: aastore
      11: invokespecial #3                  // Method "<init>":([Lorg/jboss/shrinkwrap/resolver/api/maven/ScopeType;)V
      14: return

  public org.jboss.shrinkwrap.resolver.api.maven.filter.ScopeFilter(org.jboss.shrinkwrap.resolver.api.maven.ScopeType...);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #1                  // class org/jboss/shrinkwrap/resolver/api/maven/ScopeType
       7: invokestatic  #5                  // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      10: putfield      #6                  // Field allowedScopes:Ljava/util/Set;
      13: aload_1
      14: arraylength
      15: ifne          34
      18: aload_0
      19: getfield      #6                  // Field allowedScopes:Ljava/util/Set;
      22: getstatic     #2                  // Field org/jboss/shrinkwrap/resolver/api/maven/ScopeType.COMPILE:Lorg/jboss/shrinkwrap/resolver/api/maven/ScopeType;
      25: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      30: pop
      31: goto          48
      34: aload_0
      35: getfield      #6                  // Field allowedScopes:Ljava/util/Set;
      38: aload_1
      39: invokestatic  #8                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      42: invokeinterface #9,  2            // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      47: pop
      48: return

  public boolean accepts(org.jboss.shrinkwrap.resolver.api.maven.coordinate.MavenDependency, java.util.List<org.jboss.shrinkwrap.resolver.api.maven.coordinate.MavenDependency>, java.util.List<org.jboss.shrinkwrap.resolver.api.maven.coordinate.MavenDependency>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #6                  // Field allowedScopes:Ljava/util/Set;
      10: aload_1
      11: invokeinterface #10,  1           // InterfaceMethod org/jboss/shrinkwrap/resolver/api/maven/coordinate/MavenDependency.getScope:()Lorg/jboss/shrinkwrap/resolver/api/maven/ScopeType;
      16: invokeinterface #11,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: iconst_0
      27: ireturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #13                 // String ScopeFilter [
       6: invokespecial #14                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_0
      11: getfield      #6                  // Field allowedScopes:Ljava/util/Set;
      14: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          53
      29: aload_2
      30: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #1                  // class org/jboss/shrinkwrap/resolver/api/maven/ScopeType
      38: astore_3
      39: aload_1
      40: aload_3
      41: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #19                 // String ,
      46: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: pop
      50: goto          20
      53: aload_1
      54: ldc           #19                 // String ,
      56: invokevirtual #21                 // Method java/lang/StringBuilder.indexOf:(Ljava/lang/String;)I
      59: iconst_m1
      60: if_icmpeq     78
      63: aload_1
      64: aload_1
      65: ldc           #19                 // String ,
      67: invokevirtual #22                 // Method java/lang/StringBuilder.lastIndexOf:(Ljava/lang/String;)I
      70: aload_1
      71: invokevirtual #23                 // Method java/lang/StringBuilder.length:()I
      74: invokevirtual #24                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      77: pop
      78: aload_1
      79: ldc           #25                 // String ]
      81: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: pop
      85: aload_1
      86: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: areturn
}
