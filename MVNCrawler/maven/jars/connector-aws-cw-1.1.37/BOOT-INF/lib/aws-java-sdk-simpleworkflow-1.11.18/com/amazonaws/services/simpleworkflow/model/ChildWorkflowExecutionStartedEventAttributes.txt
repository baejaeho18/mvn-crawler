Compiled from "ChildWorkflowExecutionStartedEventAttributes.java"
public class com.amazonaws.services.simpleworkflow.model.ChildWorkflowExecutionStartedEventAttributes implements java.io.Serializable,java.lang.Cloneable {
  private com.amazonaws.services.simpleworkflow.model.WorkflowExecution workflowExecution;

  private com.amazonaws.services.simpleworkflow.model.WorkflowType workflowType;

  private java.lang.Long initiatedEventId;

  public com.amazonaws.services.simpleworkflow.model.ChildWorkflowExecutionStartedEventAttributes();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setWorkflowExecution(com.amazonaws.services.simpleworkflow.model.WorkflowExecution);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field workflowExecution:Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
       5: return

  public com.amazonaws.services.simpleworkflow.model.WorkflowExecution getWorkflowExecution();
    Code:
       0: aload_0
       1: getfield      #2                  // Field workflowExecution:Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
       4: areturn

  public com.amazonaws.services.simpleworkflow.model.ChildWorkflowExecutionStartedEventAttributes withWorkflowExecution(com.amazonaws.services.simpleworkflow.model.WorkflowExecution);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setWorkflowExecution:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;)V
       5: aload_0
       6: areturn

  public void setWorkflowType(com.amazonaws.services.simpleworkflow.model.WorkflowType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field workflowType:Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
       5: return

  public com.amazonaws.services.simpleworkflow.model.WorkflowType getWorkflowType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field workflowType:Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
       4: areturn

  public com.amazonaws.services.simpleworkflow.model.ChildWorkflowExecutionStartedEventAttributes withWorkflowType(com.amazonaws.services.simpleworkflow.model.WorkflowType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setWorkflowType:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;)V
       5: aload_0
       6: areturn

  public void setInitiatedEventId(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field initiatedEventId:Ljava/lang/Long;
       5: return

  public java.lang.Long getInitiatedEventId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field initiatedEventId:Ljava/lang/Long;
       4: areturn

  public com.amazonaws.services.simpleworkflow.model.ChildWorkflowExecutionStartedEventAttributes withInitiatedEventId(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setInitiatedEventId:(Ljava/lang/Long;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #10                 // String {
      11: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #12                 // Method getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      19: ifnull        54
      22: aload_1
      23: new           #8                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #13                 // String WorkflowExecution:
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #12                 // Method getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      39: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc           #15                 // String ,
      44: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #17                 // Method getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      58: ifnull        93
      61: aload_1
      62: new           #8                  // class java/lang/StringBuilder
      65: dup
      66: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #18                 // String WorkflowType:
      71: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #17                 // Method getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      78: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #15                 // String ,
      83: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #19                 // Method getInitiatedEventId:()Ljava/lang/Long;
      97: ifnull        127
     100: aload_1
     101: new           #8                  // class java/lang/StringBuilder
     104: dup
     105: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #20                 // String InitiatedEventId:
     110: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #19                 // Method getInitiatedEventId:()Ljava/lang/Long;
     117: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: pop
     127: aload_1
     128: ldc           #21                 // String }
     130: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: pop
     134: aload_1
     135: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #22                 // class com/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionStartedEventAttributes
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #22                 // class com/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionStartedEventAttributes
      26: astore_2
      27: aload_2
      28: invokevirtual #12                 // Method getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #12                 // Method getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #12                 // Method getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #12                 // Method getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      68: aload_0
      69: invokevirtual #12                 // Method getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      72: invokevirtual #23                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecution.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #17                 // Method getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #17                 // Method getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #17                 // Method getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #17                 // Method getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
     121: aload_0
     122: invokevirtual #17                 // Method getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
     125: invokevirtual #24                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowType.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #19                 // Method getInitiatedEventId:()Ljava/lang/Long;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #19                 // Method getInitiatedEventId:()Ljava/lang/Long;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #19                 // Method getInitiatedEventId:()Ljava/lang/Long;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #19                 // Method getInitiatedEventId:()Ljava/lang/Long;
     174: aload_0
     175: invokevirtual #19                 // Method getInitiatedEventId:()Ljava/lang/Long;
     178: invokevirtual #25                 // Method java/lang/Long.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: iconst_1
     187: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #12                 // Method getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #12                 // Method getWorkflowExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      24: invokevirtual #26                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecution.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #17                 // Method getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #17                 // Method getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      48: invokevirtual #27                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowType.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #19                 // Method getInitiatedEventId:()Ljava/lang/Long;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #19                 // Method getInitiatedEventId:()Ljava/lang/Long;
      72: invokevirtual #28                 // Method java/lang/Long.hashCode:()I
      75: iadd
      76: istore_2
      77: iload_2
      78: ireturn

  public com.amazonaws.services.simpleworkflow.model.ChildWorkflowExecutionStartedEventAttributes clone();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #22                 // class com/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionStartedEventAttributes
       7: areturn
       8: astore_1
       9: new           #31                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #32                 // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method clone:()Lcom/amazonaws/services/simpleworkflow/model/ChildWorkflowExecutionStartedEventAttributes;
       4: areturn
}
