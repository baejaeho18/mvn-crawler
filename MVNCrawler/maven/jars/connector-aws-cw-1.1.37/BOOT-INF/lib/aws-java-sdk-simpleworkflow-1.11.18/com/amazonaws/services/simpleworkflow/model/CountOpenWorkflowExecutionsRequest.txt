Compiled from "CountOpenWorkflowExecutionsRequest.java"
public class com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest extends com.amazonaws.AmazonWebServiceRequest implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String domain;

  private com.amazonaws.services.simpleworkflow.model.ExecutionTimeFilter startTimeFilter;

  private com.amazonaws.services.simpleworkflow.model.WorkflowTypeFilter typeFilter;

  private com.amazonaws.services.simpleworkflow.model.TagFilter tagFilter;

  private com.amazonaws.services.simpleworkflow.model.WorkflowExecutionFilter executionFilter;

  public com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: return

  public void setDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field domain:Ljava/lang/String;
       5: return

  public java.lang.String getDomain();
    Code:
       0: aload_0
       1: getfield      #2                  // Field domain:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest withDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setDomain:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setStartTimeFilter(com.amazonaws.services.simpleworkflow.model.ExecutionTimeFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field startTimeFilter:Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
       5: return

  public com.amazonaws.services.simpleworkflow.model.ExecutionTimeFilter getStartTimeFilter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field startTimeFilter:Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
       4: areturn

  public com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest withStartTimeFilter(com.amazonaws.services.simpleworkflow.model.ExecutionTimeFilter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setStartTimeFilter:(Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;)V
       5: aload_0
       6: areturn

  public void setTypeFilter(com.amazonaws.services.simpleworkflow.model.WorkflowTypeFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field typeFilter:Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
       5: return

  public com.amazonaws.services.simpleworkflow.model.WorkflowTypeFilter getTypeFilter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field typeFilter:Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
       4: areturn

  public com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest withTypeFilter(com.amazonaws.services.simpleworkflow.model.WorkflowTypeFilter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setTypeFilter:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;)V
       5: aload_0
       6: areturn

  public void setTagFilter(com.amazonaws.services.simpleworkflow.model.TagFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field tagFilter:Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
       5: return

  public com.amazonaws.services.simpleworkflow.model.TagFilter getTagFilter();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tagFilter:Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
       4: areturn

  public com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest withTagFilter(com.amazonaws.services.simpleworkflow.model.TagFilter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setTagFilter:(Lcom/amazonaws/services/simpleworkflow/model/TagFilter;)V
       5: aload_0
       6: areturn

  public void setExecutionFilter(com.amazonaws.services.simpleworkflow.model.WorkflowExecutionFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field executionFilter:Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
       5: return

  public com.amazonaws.services.simpleworkflow.model.WorkflowExecutionFilter getExecutionFilter();
    Code:
       0: aload_0
       1: getfield      #10                 // Field executionFilter:Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
       4: areturn

  public com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest withExecutionFilter(com.amazonaws.services.simpleworkflow.model.WorkflowExecutionFilter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setExecutionFilter:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #14                 // String {
      11: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #16                 // Method getDomain:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #12                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #17                 // String Domain:
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #16                 // Method getDomain:()Ljava/lang/String;
      39: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #18                 // String ,
      44: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #20                 // Method getStartTimeFilter:()Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
      58: ifnull        93
      61: aload_1
      62: new           #12                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #21                 // String StartTimeFilter:
      71: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #20                 // Method getStartTimeFilter:()Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
      78: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #18                 // String ,
      83: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #23                 // Method getTypeFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
      97: ifnull        132
     100: aload_1
     101: new           #12                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #24                 // String TypeFilter:
     110: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #23                 // Method getTypeFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
     117: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #18                 // String ,
     122: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #25                 // Method getTagFilter:()Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
     136: ifnull        171
     139: aload_1
     140: new           #12                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #26                 // String TagFilter:
     149: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #25                 // Method getTagFilter:()Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
     156: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #18                 // String ,
     161: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #27                 // Method getExecutionFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
     175: ifnull        205
     178: aload_1
     179: new           #12                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #28                 // String ExecutionFilter:
     188: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #27                 // Method getExecutionFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
     195: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     198: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: pop
     205: aload_1
     206: ldc           #29                 // String }
     208: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: pop
     212: aload_1
     213: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     216: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #30                 // class com/amazonaws/services/simpleworkflow/model/CountOpenWorkflowExecutionsRequest
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #30                 // class com/amazonaws/services/simpleworkflow/model/CountOpenWorkflowExecutionsRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #16                 // Method getDomain:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #16                 // Method getDomain:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #16                 // Method getDomain:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #16                 // Method getDomain:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #16                 // Method getDomain:()Ljava/lang/String;
      72: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #20                 // Method getStartTimeFilter:()Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #20                 // Method getStartTimeFilter:()Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #20                 // Method getStartTimeFilter:()Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #20                 // Method getStartTimeFilter:()Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
     121: aload_0
     122: invokevirtual #20                 // Method getStartTimeFilter:()Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
     125: invokevirtual #32                 // Method com/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #23                 // Method getTypeFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #23                 // Method getTypeFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #23                 // Method getTypeFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #23                 // Method getTypeFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
     174: aload_0
     175: invokevirtual #23                 // Method getTypeFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
     178: invokevirtual #33                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #25                 // Method getTagFilter:()Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #25                 // Method getTagFilter:()Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #25                 // Method getTagFilter:()Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #25                 // Method getTagFilter:()Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
     227: aload_0
     228: invokevirtual #25                 // Method getTagFilter:()Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
     231: invokevirtual #34                 // Method com/amazonaws/services/simpleworkflow/model/TagFilter.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #27                 // Method getExecutionFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #27                 // Method getExecutionFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #27                 // Method getExecutionFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #27                 // Method getExecutionFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
     280: aload_0
     281: invokevirtual #27                 // Method getExecutionFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
     284: invokevirtual #35                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: iconst_1
     293: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #16                 // Method getDomain:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #16                 // Method getDomain:()Ljava/lang/String;
      24: invokevirtual #36                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #20                 // Method getStartTimeFilter:()Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #20                 // Method getStartTimeFilter:()Lcom/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter;
      48: invokevirtual #37                 // Method com/amazonaws/services/simpleworkflow/model/ExecutionTimeFilter.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #23                 // Method getTypeFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #23                 // Method getTypeFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter;
      72: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowTypeFilter.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #25                 // Method getTagFilter:()Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #25                 // Method getTagFilter:()Lcom/amazonaws/services/simpleworkflow/model/TagFilter;
      96: invokevirtual #39                 // Method com/amazonaws/services/simpleworkflow/model/TagFilter.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #27                 // Method getExecutionFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #27                 // Method getExecutionFilter:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter;
     120: invokevirtual #40                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionFilter.hashCode:()I
     123: iadd
     124: istore_2
     125: iload_2
     126: ireturn

  public com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest clone();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method com/amazonaws/AmazonWebServiceRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
       4: checkcast     #30                 // class com/amazonaws/services/simpleworkflow/model/CountOpenWorkflowExecutionsRequest
       7: areturn

  public com.amazonaws.AmazonWebServiceRequest clone();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method clone:()Lcom/amazonaws/services/simpleworkflow/model/CountOpenWorkflowExecutionsRequest;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method clone:()Lcom/amazonaws/services/simpleworkflow/model/CountOpenWorkflowExecutionsRequest;
       4: areturn
}
