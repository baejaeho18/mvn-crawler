Compiled from "AmazonSimpleWorkflowAsyncClient.java"
public class com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient extends com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowClient implements com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsync {
  private static final int DEFAULT_THREAD_POOL_SIZE;

  private final java.util.concurrent.ExecutorService executorService;

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient();
    Code:
       0: aload_0
       1: new           #1                  // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       4: dup
       5: invokespecial #2                  // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      11: return

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient(com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: new           #1                  // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       4: dup
       5: invokespecial #2                  // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
       8: aload_1
       9: aload_1
      10: invokevirtual #4                  // Method com/amazonaws/ClientConfiguration.getMaxConnections:()I
      13: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      16: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      19: return

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient(com.amazonaws.auth.AWSCredentials);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        50
       4: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
       7: invokespecial #8                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Ljava/util/concurrent/ExecutorService;)V
      10: return

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient(com.amazonaws.auth.AWSCredentials, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #9                  // Field configFactory:Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowClientConfigurationFactory;
       5: invokevirtual #10                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       8: aload_2
       9: invokespecial #11                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      12: return

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient(com.amazonaws.auth.AWSCredentials, com.amazonaws.ClientConfiguration, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowClient."<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/ClientConfiguration;)V
       6: aload_0
       7: aload_3
       8: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      11: return

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient(com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        50
       4: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
       7: invokespecial #14                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Ljava/util/concurrent/ExecutorService;)V
      10: return

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokevirtual #4                  // Method com/amazonaws/ClientConfiguration.getMaxConnections:()I
       7: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      10: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      13: return

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient(com.amazonaws.auth.AWSCredentialsProvider, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #9                  // Field configFactory:Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowClientConfigurationFactory;
       5: invokevirtual #10                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       8: aload_2
       9: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      12: return

  public com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowClient."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;)V
       6: aload_0
       7: aload_3
       8: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      11: return

  com.amazonaws.services.simpleworkflow.AmazonSimpleWorkflowAsyncClient(com.amazonaws.client.AwsAsyncClientParams);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowClient."<init>":(Lcom/amazonaws/client/AwsSyncClientParams;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #17                 // Method com/amazonaws/client/AwsAsyncClientParams.getExecutor:()Ljava/util/concurrent/ExecutorService;
      10: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      13: return

  public java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionCount> countClosedWorkflowExecutionsAsync(com.amazonaws.services.simpleworkflow.model.CountClosedWorkflowExecutionsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #18                 // Method countClosedWorkflowExecutionsAsync:(Lcom/amazonaws/services/simpleworkflow/model/CountClosedWorkflowExecutionsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionCount> countClosedWorkflowExecutionsAsync(com.amazonaws.services.simpleworkflow.model.CountClosedWorkflowExecutionsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.CountClosedWorkflowExecutionsRequest, com.amazonaws.services.simpleworkflow.model.WorkflowExecutionCount>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #19                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$1
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #20                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$1."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/CountClosedWorkflowExecutionsRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionCount> countOpenWorkflowExecutionsAsync(com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #22                 // Method countOpenWorkflowExecutionsAsync:(Lcom/amazonaws/services/simpleworkflow/model/CountOpenWorkflowExecutionsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionCount> countOpenWorkflowExecutionsAsync(com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.CountOpenWorkflowExecutionsRequest, com.amazonaws.services.simpleworkflow.model.WorkflowExecutionCount>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #23                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$2
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #24                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$2."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/CountOpenWorkflowExecutionsRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.PendingTaskCount> countPendingActivityTasksAsync(com.amazonaws.services.simpleworkflow.model.CountPendingActivityTasksRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #25                 // Method countPendingActivityTasksAsync:(Lcom/amazonaws/services/simpleworkflow/model/CountPendingActivityTasksRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.PendingTaskCount> countPendingActivityTasksAsync(com.amazonaws.services.simpleworkflow.model.CountPendingActivityTasksRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.CountPendingActivityTasksRequest, com.amazonaws.services.simpleworkflow.model.PendingTaskCount>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #26                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$3
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #27                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$3."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/CountPendingActivityTasksRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.PendingTaskCount> countPendingDecisionTasksAsync(com.amazonaws.services.simpleworkflow.model.CountPendingDecisionTasksRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #28                 // Method countPendingDecisionTasksAsync:(Lcom/amazonaws/services/simpleworkflow/model/CountPendingDecisionTasksRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.PendingTaskCount> countPendingDecisionTasksAsync(com.amazonaws.services.simpleworkflow.model.CountPendingDecisionTasksRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.CountPendingDecisionTasksRequest, com.amazonaws.services.simpleworkflow.model.PendingTaskCount>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #29                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$4
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #30                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$4."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/CountPendingDecisionTasksRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> deprecateActivityTypeAsync(com.amazonaws.services.simpleworkflow.model.DeprecateActivityTypeRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #31                 // Method deprecateActivityTypeAsync:(Lcom/amazonaws/services/simpleworkflow/model/DeprecateActivityTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> deprecateActivityTypeAsync(com.amazonaws.services.simpleworkflow.model.DeprecateActivityTypeRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.DeprecateActivityTypeRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #32                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$5
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #33                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$5."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/DeprecateActivityTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> deprecateDomainAsync(com.amazonaws.services.simpleworkflow.model.DeprecateDomainRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #34                 // Method deprecateDomainAsync:(Lcom/amazonaws/services/simpleworkflow/model/DeprecateDomainRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> deprecateDomainAsync(com.amazonaws.services.simpleworkflow.model.DeprecateDomainRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.DeprecateDomainRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #35                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$6
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #36                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$6."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/DeprecateDomainRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> deprecateWorkflowTypeAsync(com.amazonaws.services.simpleworkflow.model.DeprecateWorkflowTypeRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #37                 // Method deprecateWorkflowTypeAsync:(Lcom/amazonaws/services/simpleworkflow/model/DeprecateWorkflowTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> deprecateWorkflowTypeAsync(com.amazonaws.services.simpleworkflow.model.DeprecateWorkflowTypeRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.DeprecateWorkflowTypeRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #38                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$7
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #39                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$7."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/DeprecateWorkflowTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.ActivityTypeDetail> describeActivityTypeAsync(com.amazonaws.services.simpleworkflow.model.DescribeActivityTypeRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #40                 // Method describeActivityTypeAsync:(Lcom/amazonaws/services/simpleworkflow/model/DescribeActivityTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.ActivityTypeDetail> describeActivityTypeAsync(com.amazonaws.services.simpleworkflow.model.DescribeActivityTypeRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.DescribeActivityTypeRequest, com.amazonaws.services.simpleworkflow.model.ActivityTypeDetail>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #41                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$8
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #42                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$8."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/DescribeActivityTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.DomainDetail> describeDomainAsync(com.amazonaws.services.simpleworkflow.model.DescribeDomainRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #43                 // Method describeDomainAsync:(Lcom/amazonaws/services/simpleworkflow/model/DescribeDomainRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.DomainDetail> describeDomainAsync(com.amazonaws.services.simpleworkflow.model.DescribeDomainRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.DescribeDomainRequest, com.amazonaws.services.simpleworkflow.model.DomainDetail>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #44                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$9
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #45                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$9."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/DescribeDomainRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionDetail> describeWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.DescribeWorkflowExecutionRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #46                 // Method describeWorkflowExecutionAsync:(Lcom/amazonaws/services/simpleworkflow/model/DescribeWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionDetail> describeWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.DescribeWorkflowExecutionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.DescribeWorkflowExecutionRequest, com.amazonaws.services.simpleworkflow.model.WorkflowExecutionDetail>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #47                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$10
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #48                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$10."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/DescribeWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowTypeDetail> describeWorkflowTypeAsync(com.amazonaws.services.simpleworkflow.model.DescribeWorkflowTypeRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #49                 // Method describeWorkflowTypeAsync:(Lcom/amazonaws/services/simpleworkflow/model/DescribeWorkflowTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowTypeDetail> describeWorkflowTypeAsync(com.amazonaws.services.simpleworkflow.model.DescribeWorkflowTypeRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.DescribeWorkflowTypeRequest, com.amazonaws.services.simpleworkflow.model.WorkflowTypeDetail>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #50                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$11
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #51                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$11."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/DescribeWorkflowTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.History> getWorkflowExecutionHistoryAsync(com.amazonaws.services.simpleworkflow.model.GetWorkflowExecutionHistoryRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #52                 // Method getWorkflowExecutionHistoryAsync:(Lcom/amazonaws/services/simpleworkflow/model/GetWorkflowExecutionHistoryRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.History> getWorkflowExecutionHistoryAsync(com.amazonaws.services.simpleworkflow.model.GetWorkflowExecutionHistoryRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.GetWorkflowExecutionHistoryRequest, com.amazonaws.services.simpleworkflow.model.History>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #53                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$12
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #54                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$12."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/GetWorkflowExecutionHistoryRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.ActivityTypeInfos> listActivityTypesAsync(com.amazonaws.services.simpleworkflow.model.ListActivityTypesRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #55                 // Method listActivityTypesAsync:(Lcom/amazonaws/services/simpleworkflow/model/ListActivityTypesRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.ActivityTypeInfos> listActivityTypesAsync(com.amazonaws.services.simpleworkflow.model.ListActivityTypesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.ListActivityTypesRequest, com.amazonaws.services.simpleworkflow.model.ActivityTypeInfos>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #56                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$13
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #57                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$13."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/ListActivityTypesRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionInfos> listClosedWorkflowExecutionsAsync(com.amazonaws.services.simpleworkflow.model.ListClosedWorkflowExecutionsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #58                 // Method listClosedWorkflowExecutionsAsync:(Lcom/amazonaws/services/simpleworkflow/model/ListClosedWorkflowExecutionsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionInfos> listClosedWorkflowExecutionsAsync(com.amazonaws.services.simpleworkflow.model.ListClosedWorkflowExecutionsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.ListClosedWorkflowExecutionsRequest, com.amazonaws.services.simpleworkflow.model.WorkflowExecutionInfos>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #59                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$14
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #60                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$14."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/ListClosedWorkflowExecutionsRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.DomainInfos> listDomainsAsync(com.amazonaws.services.simpleworkflow.model.ListDomainsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #61                 // Method listDomainsAsync:(Lcom/amazonaws/services/simpleworkflow/model/ListDomainsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.DomainInfos> listDomainsAsync(com.amazonaws.services.simpleworkflow.model.ListDomainsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.ListDomainsRequest, com.amazonaws.services.simpleworkflow.model.DomainInfos>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #62                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$15
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #63                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$15."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/ListDomainsRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionInfos> listOpenWorkflowExecutionsAsync(com.amazonaws.services.simpleworkflow.model.ListOpenWorkflowExecutionsRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #64                 // Method listOpenWorkflowExecutionsAsync:(Lcom/amazonaws/services/simpleworkflow/model/ListOpenWorkflowExecutionsRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowExecutionInfos> listOpenWorkflowExecutionsAsync(com.amazonaws.services.simpleworkflow.model.ListOpenWorkflowExecutionsRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.ListOpenWorkflowExecutionsRequest, com.amazonaws.services.simpleworkflow.model.WorkflowExecutionInfos>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #65                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$16
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #66                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$16."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/ListOpenWorkflowExecutionsRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowTypeInfos> listWorkflowTypesAsync(com.amazonaws.services.simpleworkflow.model.ListWorkflowTypesRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #67                 // Method listWorkflowTypesAsync:(Lcom/amazonaws/services/simpleworkflow/model/ListWorkflowTypesRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.WorkflowTypeInfos> listWorkflowTypesAsync(com.amazonaws.services.simpleworkflow.model.ListWorkflowTypesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.ListWorkflowTypesRequest, com.amazonaws.services.simpleworkflow.model.WorkflowTypeInfos>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #68                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$17
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #69                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$17."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/ListWorkflowTypesRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.ActivityTask> pollForActivityTaskAsync(com.amazonaws.services.simpleworkflow.model.PollForActivityTaskRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #70                 // Method pollForActivityTaskAsync:(Lcom/amazonaws/services/simpleworkflow/model/PollForActivityTaskRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.ActivityTask> pollForActivityTaskAsync(com.amazonaws.services.simpleworkflow.model.PollForActivityTaskRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.PollForActivityTaskRequest, com.amazonaws.services.simpleworkflow.model.ActivityTask>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #71                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$18
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #72                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$18."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/PollForActivityTaskRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.DecisionTask> pollForDecisionTaskAsync(com.amazonaws.services.simpleworkflow.model.PollForDecisionTaskRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #73                 // Method pollForDecisionTaskAsync:(Lcom/amazonaws/services/simpleworkflow/model/PollForDecisionTaskRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.DecisionTask> pollForDecisionTaskAsync(com.amazonaws.services.simpleworkflow.model.PollForDecisionTaskRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.PollForDecisionTaskRequest, com.amazonaws.services.simpleworkflow.model.DecisionTask>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #74                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$19
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #75                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$19."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/PollForDecisionTaskRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.ActivityTaskStatus> recordActivityTaskHeartbeatAsync(com.amazonaws.services.simpleworkflow.model.RecordActivityTaskHeartbeatRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #76                 // Method recordActivityTaskHeartbeatAsync:(Lcom/amazonaws/services/simpleworkflow/model/RecordActivityTaskHeartbeatRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.ActivityTaskStatus> recordActivityTaskHeartbeatAsync(com.amazonaws.services.simpleworkflow.model.RecordActivityTaskHeartbeatRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.RecordActivityTaskHeartbeatRequest, com.amazonaws.services.simpleworkflow.model.ActivityTaskStatus>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #77                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$20
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #78                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$20."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/RecordActivityTaskHeartbeatRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> registerActivityTypeAsync(com.amazonaws.services.simpleworkflow.model.RegisterActivityTypeRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #79                 // Method registerActivityTypeAsync:(Lcom/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> registerActivityTypeAsync(com.amazonaws.services.simpleworkflow.model.RegisterActivityTypeRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.RegisterActivityTypeRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #80                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$21
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #81                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$21."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/RegisterActivityTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> registerDomainAsync(com.amazonaws.services.simpleworkflow.model.RegisterDomainRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #82                 // Method registerDomainAsync:(Lcom/amazonaws/services/simpleworkflow/model/RegisterDomainRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> registerDomainAsync(com.amazonaws.services.simpleworkflow.model.RegisterDomainRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.RegisterDomainRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #83                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$22
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #84                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$22."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/RegisterDomainRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> registerWorkflowTypeAsync(com.amazonaws.services.simpleworkflow.model.RegisterWorkflowTypeRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #85                 // Method registerWorkflowTypeAsync:(Lcom/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> registerWorkflowTypeAsync(com.amazonaws.services.simpleworkflow.model.RegisterWorkflowTypeRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.RegisterWorkflowTypeRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #86                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$23
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #87                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$23."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> requestCancelWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.RequestCancelWorkflowExecutionRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #88                 // Method requestCancelWorkflowExecutionAsync:(Lcom/amazonaws/services/simpleworkflow/model/RequestCancelWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> requestCancelWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.RequestCancelWorkflowExecutionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.RequestCancelWorkflowExecutionRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #89                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$24
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #90                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$24."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/RequestCancelWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> respondActivityTaskCanceledAsync(com.amazonaws.services.simpleworkflow.model.RespondActivityTaskCanceledRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #91                 // Method respondActivityTaskCanceledAsync:(Lcom/amazonaws/services/simpleworkflow/model/RespondActivityTaskCanceledRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> respondActivityTaskCanceledAsync(com.amazonaws.services.simpleworkflow.model.RespondActivityTaskCanceledRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.RespondActivityTaskCanceledRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #92                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$25
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #93                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$25."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/RespondActivityTaskCanceledRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> respondActivityTaskCompletedAsync(com.amazonaws.services.simpleworkflow.model.RespondActivityTaskCompletedRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #94                 // Method respondActivityTaskCompletedAsync:(Lcom/amazonaws/services/simpleworkflow/model/RespondActivityTaskCompletedRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> respondActivityTaskCompletedAsync(com.amazonaws.services.simpleworkflow.model.RespondActivityTaskCompletedRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.RespondActivityTaskCompletedRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #95                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$26
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #96                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$26."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/RespondActivityTaskCompletedRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> respondActivityTaskFailedAsync(com.amazonaws.services.simpleworkflow.model.RespondActivityTaskFailedRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #97                 // Method respondActivityTaskFailedAsync:(Lcom/amazonaws/services/simpleworkflow/model/RespondActivityTaskFailedRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> respondActivityTaskFailedAsync(com.amazonaws.services.simpleworkflow.model.RespondActivityTaskFailedRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.RespondActivityTaskFailedRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #98                 // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$27
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #99                 // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$27."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/RespondActivityTaskFailedRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> respondDecisionTaskCompletedAsync(com.amazonaws.services.simpleworkflow.model.RespondDecisionTaskCompletedRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #100                // Method respondDecisionTaskCompletedAsync:(Lcom/amazonaws/services/simpleworkflow/model/RespondDecisionTaskCompletedRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> respondDecisionTaskCompletedAsync(com.amazonaws.services.simpleworkflow.model.RespondDecisionTaskCompletedRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.RespondDecisionTaskCompletedRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #101                // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$28
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #102                // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$28."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/RespondDecisionTaskCompletedRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> signalWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.SignalWorkflowExecutionRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #103                // Method signalWorkflowExecutionAsync:(Lcom/amazonaws/services/simpleworkflow/model/SignalWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> signalWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.SignalWorkflowExecutionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.SignalWorkflowExecutionRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #104                // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$29
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #105                // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$29."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/SignalWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.Run> startWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.StartWorkflowExecutionRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #106                // Method startWorkflowExecutionAsync:(Lcom/amazonaws/services/simpleworkflow/model/StartWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.simpleworkflow.model.Run> startWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.StartWorkflowExecutionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.StartWorkflowExecutionRequest, com.amazonaws.services.simpleworkflow.model.Run>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #107                // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$30
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #108                // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$30."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/StartWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<java.lang.Void> terminateWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.TerminateWorkflowExecutionRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #109                // Method terminateWorkflowExecutionAsync:(Lcom/amazonaws/services/simpleworkflow/model/TerminateWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<java.lang.Void> terminateWorkflowExecutionAsync(com.amazonaws.services.simpleworkflow.model.TerminateWorkflowExecutionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.simpleworkflow.model.TerminateWorkflowExecutionRequest, java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #110                // class com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$31
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #111                // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient$31."<init>":(Lcom/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowAsyncClient;Lcom/amazonaws/services/simpleworkflow/model/TerminateWorkflowExecutionRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: invokespecial #112                // Method com/amazonaws/services/simpleworkflow/AmazonSimpleWorkflowClient.shutdown:()V
       4: aload_0
       5: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       8: invokeinterface #113,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
      13: pop
      14: return
}
