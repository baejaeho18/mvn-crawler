Compiled from "RegisterWorkflowTypeRequestMarshaller.java"
public class com.amazonaws.services.simpleworkflow.model.transform.RegisterWorkflowTypeRequestMarshaller implements com.amazonaws.transform.Marshaller<com.amazonaws.Request<com.amazonaws.services.simpleworkflow.model.RegisterWorkflowTypeRequest>, com.amazonaws.services.simpleworkflow.model.RegisterWorkflowTypeRequest> {
  private final com.amazonaws.protocol.json.SdkJsonProtocolFactory protocolFactory;

  public com.amazonaws.services.simpleworkflow.model.transform.RegisterWorkflowTypeRequestMarshaller(com.amazonaws.protocol.json.SdkJsonProtocolFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field protocolFactory:Lcom/amazonaws/protocol/json/SdkJsonProtocolFactory;
       9: return

  public com.amazonaws.Request<com.amazonaws.services.simpleworkflow.model.RegisterWorkflowTypeRequest> marshall(com.amazonaws.services.simpleworkflow.model.RegisterWorkflowTypeRequest);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class com/amazonaws/AmazonClientException
       7: dup
       8: ldc           #4                  // String Invalid argument passed to marshall(...)
      10: invokespecial #5                  // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #6                  // class com/amazonaws/DefaultRequest
      17: dup
      18: aload_1
      19: ldc           #7                  // String AmazonSimpleWorkflow
      21: invokespecial #8                  // Method com/amazonaws/DefaultRequest."<init>":(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)V
      24: astore_2
      25: aload_2
      26: ldc           #9                  // String X-Amz-Target
      28: ldc           #10                 // String SimpleWorkflowService.RegisterWorkflowType
      30: invokeinterface #11,  3           // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      35: aload_2
      36: getstatic     #12                 // Field com/amazonaws/http/HttpMethodName.POST:Lcom/amazonaws/http/HttpMethodName;
      39: invokeinterface #13,  2           // InterfaceMethod com/amazonaws/Request.setHttpMethod:(Lcom/amazonaws/http/HttpMethodName;)V
      44: aload_2
      45: ldc           #14                 // String
      47: invokeinterface #15,  2           // InterfaceMethod com/amazonaws/Request.setResourcePath:(Ljava/lang/String;)V
      52: aload_0
      53: getfield      #2                  // Field protocolFactory:Lcom/amazonaws/protocol/json/SdkJsonProtocolFactory;
      56: invokevirtual #16                 // Method com/amazonaws/protocol/json/SdkJsonProtocolFactory.createGenerator:()Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
      59: astore_3
      60: aload_3
      61: invokeinterface #17,  1           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeStartObject:()Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
      66: pop
      67: aload_1
      68: invokevirtual #18                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDomain:()Ljava/lang/String;
      71: ifnull        92
      74: aload_3
      75: ldc           #19                 // String domain
      77: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
      82: aload_1
      83: invokevirtual #18                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDomain:()Ljava/lang/String;
      86: invokeinterface #21,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
      91: pop
      92: aload_1
      93: invokevirtual #22                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getName:()Ljava/lang/String;
      96: ifnull        117
      99: aload_3
     100: ldc           #23                 // String name
     102: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     107: aload_1
     108: invokevirtual #22                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getName:()Ljava/lang/String;
     111: invokeinterface #21,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     116: pop
     117: aload_1
     118: invokevirtual #24                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getVersion:()Ljava/lang/String;
     121: ifnull        142
     124: aload_3
     125: ldc           #25                 // String version
     127: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     132: aload_1
     133: invokevirtual #24                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getVersion:()Ljava/lang/String;
     136: invokeinterface #21,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     141: pop
     142: aload_1
     143: invokevirtual #26                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDescription:()Ljava/lang/String;
     146: ifnull        167
     149: aload_3
     150: ldc           #27                 // String description
     152: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     157: aload_1
     158: invokevirtual #26                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDescription:()Ljava/lang/String;
     161: invokeinterface #21,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     166: pop
     167: aload_1
     168: invokevirtual #28                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultTaskStartToCloseTimeout:()Ljava/lang/String;
     171: ifnull        192
     174: aload_3
     175: ldc           #29                 // String defaultTaskStartToCloseTimeout
     177: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     182: aload_1
     183: invokevirtual #28                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultTaskStartToCloseTimeout:()Ljava/lang/String;
     186: invokeinterface #21,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     191: pop
     192: aload_1
     193: invokevirtual #30                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultExecutionStartToCloseTimeout:()Ljava/lang/String;
     196: ifnull        217
     199: aload_3
     200: ldc           #31                 // String defaultExecutionStartToCloseTimeout
     202: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     207: aload_1
     208: invokevirtual #30                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultExecutionStartToCloseTimeout:()Ljava/lang/String;
     211: invokeinterface #21,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     216: pop
     217: aload_1
     218: invokevirtual #32                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultTaskList:()Lcom/amazonaws/services/simpleworkflow/model/TaskList;
     221: ifnull        244
     224: aload_3
     225: ldc           #33                 // String defaultTaskList
     227: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     232: pop
     233: invokestatic  #34                 // Method com/amazonaws/services/simpleworkflow/model/transform/TaskListJsonMarshaller.getInstance:()Lcom/amazonaws/services/simpleworkflow/model/transform/TaskListJsonMarshaller;
     236: aload_1
     237: invokevirtual #32                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultTaskList:()Lcom/amazonaws/services/simpleworkflow/model/TaskList;
     240: aload_3
     241: invokevirtual #35                 // Method com/amazonaws/services/simpleworkflow/model/transform/TaskListJsonMarshaller.marshall:(Lcom/amazonaws/services/simpleworkflow/model/TaskList;Lcom/amazonaws/protocol/json/StructuredJsonGenerator;)V
     244: aload_1
     245: invokevirtual #36                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultTaskPriority:()Ljava/lang/String;
     248: ifnull        269
     251: aload_3
     252: ldc           #37                 // String defaultTaskPriority
     254: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     259: aload_1
     260: invokevirtual #36                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultTaskPriority:()Ljava/lang/String;
     263: invokeinterface #21,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     268: pop
     269: aload_1
     270: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultChildPolicy:()Ljava/lang/String;
     273: ifnull        294
     276: aload_3
     277: ldc           #39                 // String defaultChildPolicy
     279: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     284: aload_1
     285: invokevirtual #38                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultChildPolicy:()Ljava/lang/String;
     288: invokeinterface #21,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     293: pop
     294: aload_1
     295: invokevirtual #40                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultLambdaRole:()Ljava/lang/String;
     298: ifnull        319
     301: aload_3
     302: ldc           #41                 // String defaultLambdaRole
     304: invokeinterface #20,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     309: aload_1
     310: invokevirtual #40                 // Method com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest.getDefaultLambdaRole:()Ljava/lang/String;
     313: invokeinterface #21,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     318: pop
     319: aload_3
     320: invokeinterface #42,  1           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeEndObject:()Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     325: pop
     326: aload_3
     327: invokeinterface #43,  1           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.getBytes:()[B
     332: astore        4
     334: aload_2
     335: new           #44                 // class java/io/ByteArrayInputStream
     338: dup
     339: aload         4
     341: invokespecial #45                 // Method java/io/ByteArrayInputStream."<init>":([B)V
     344: invokeinterface #46,  2           // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     349: aload_2
     350: ldc           #47                 // String Content-Length
     352: aload         4
     354: arraylength
     355: invokestatic  #48                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     358: invokeinterface #11,  3           // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     363: aload_2
     364: ldc           #49                 // String Content-Type
     366: aload_0
     367: getfield      #2                  // Field protocolFactory:Lcom/amazonaws/protocol/json/SdkJsonProtocolFactory;
     370: invokevirtual #50                 // Method com/amazonaws/protocol/json/SdkJsonProtocolFactory.getContentType:()Ljava/lang/String;
     373: invokeinterface #11,  3           // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     378: goto          413
     381: astore_3
     382: new           #3                  // class com/amazonaws/AmazonClientException
     385: dup
     386: new           #52                 // class java/lang/StringBuilder
     389: dup
     390: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
     393: ldc           #54                 // String Unable to marshall request to JSON:
     395: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: aload_3
     399: invokevirtual #56                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     402: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     405: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     408: aload_3
     409: invokespecial #58                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     412: athrow
     413: aload_2
     414: areturn
    Exception table:
       from    to  target type
          52   378   381   Class java/lang/Throwable

  public java.lang.Object marshall(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #59                 // class com/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest
       5: invokevirtual #60                 // Method marshall:(Lcom/amazonaws/services/simpleworkflow/model/RegisterWorkflowTypeRequest;)Lcom/amazonaws/Request;
       8: areturn
}
