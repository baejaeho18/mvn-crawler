Compiled from "WorkflowExecutionInfoJsonMarshaller.java"
public class com.amazonaws.services.simpleworkflow.model.transform.WorkflowExecutionInfoJsonMarshaller {
  private static com.amazonaws.services.simpleworkflow.model.transform.WorkflowExecutionInfoJsonMarshaller instance;

  public com.amazonaws.services.simpleworkflow.model.transform.WorkflowExecutionInfoJsonMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void marshall(com.amazonaws.services.simpleworkflow.model.WorkflowExecutionInfo, com.amazonaws.protocol.json.StructuredJsonGenerator);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class com/amazonaws/AmazonClientException
       7: dup
       8: ldc           #3                  // String Invalid argument passed to marshall(...)
      10: invokespecial #4                  // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: invokeinterface #5,  1            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeStartObject:()Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
      20: pop
      21: aload_1
      22: invokevirtual #6                  // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      25: ifnull        48
      28: aload_2
      29: ldc           #7                  // String execution
      31: invokeinterface #8,  2            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
      36: pop
      37: invokestatic  #9                  // Method com/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionJsonMarshaller.getInstance:()Lcom/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionJsonMarshaller;
      40: aload_1
      41: invokevirtual #6                  // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getExecution:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
      44: aload_2
      45: invokevirtual #10                 // Method com/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionJsonMarshaller.marshall:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;Lcom/amazonaws/protocol/json/StructuredJsonGenerator;)V
      48: aload_1
      49: invokevirtual #11                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      52: ifnull        75
      55: aload_2
      56: ldc           #12                 // String workflowType
      58: invokeinterface #8,  2            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
      63: pop
      64: invokestatic  #13                 // Method com/amazonaws/services/simpleworkflow/model/transform/WorkflowTypeJsonMarshaller.getInstance:()Lcom/amazonaws/services/simpleworkflow/model/transform/WorkflowTypeJsonMarshaller;
      67: aload_1
      68: invokevirtual #11                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getWorkflowType:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;
      71: aload_2
      72: invokevirtual #14                 // Method com/amazonaws/services/simpleworkflow/model/transform/WorkflowTypeJsonMarshaller.marshall:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowType;Lcom/amazonaws/protocol/json/StructuredJsonGenerator;)V
      75: aload_1
      76: invokevirtual #15                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getStartTimestamp:()Ljava/util/Date;
      79: ifnull        100
      82: aload_2
      83: ldc           #16                 // String startTimestamp
      85: invokeinterface #8,  2            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
      90: aload_1
      91: invokevirtual #15                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getStartTimestamp:()Ljava/util/Date;
      94: invokeinterface #17,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/util/Date;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
      99: pop
     100: aload_1
     101: invokevirtual #18                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getCloseTimestamp:()Ljava/util/Date;
     104: ifnull        125
     107: aload_2
     108: ldc           #19                 // String closeTimestamp
     110: invokeinterface #8,  2            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     115: aload_1
     116: invokevirtual #18                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getCloseTimestamp:()Ljava/util/Date;
     119: invokeinterface #17,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/util/Date;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     124: pop
     125: aload_1
     126: invokevirtual #20                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getExecutionStatus:()Ljava/lang/String;
     129: ifnull        150
     132: aload_2
     133: ldc           #21                 // String executionStatus
     135: invokeinterface #8,  2            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     140: aload_1
     141: invokevirtual #20                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getExecutionStatus:()Ljava/lang/String;
     144: invokeinterface #22,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     149: pop
     150: aload_1
     151: invokevirtual #23                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getCloseStatus:()Ljava/lang/String;
     154: ifnull        175
     157: aload_2
     158: ldc           #24                 // String closeStatus
     160: invokeinterface #8,  2            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     165: aload_1
     166: invokevirtual #23                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getCloseStatus:()Ljava/lang/String;
     169: invokeinterface #22,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     174: pop
     175: aload_1
     176: invokevirtual #25                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getParent:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
     179: ifnull        202
     182: aload_2
     183: ldc           #26                 // String parent
     185: invokeinterface #8,  2            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     190: pop
     191: invokestatic  #9                  // Method com/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionJsonMarshaller.getInstance:()Lcom/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionJsonMarshaller;
     194: aload_1
     195: invokevirtual #25                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getParent:()Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;
     198: aload_2
     199: invokevirtual #10                 // Method com/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionJsonMarshaller.marshall:(Lcom/amazonaws/services/simpleworkflow/model/WorkflowExecution;Lcom/amazonaws/protocol/json/StructuredJsonGenerator;)V
     202: aload_1
     203: invokevirtual #27                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getTagList:()Ljava/util/List;
     206: astore_3
     207: aload_3
     208: ifnull        281
     211: aload_2
     212: ldc           #28                 // String tagList
     214: invokeinterface #8,  2            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     219: pop
     220: aload_2
     221: invokeinterface #29,  1           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeStartArray:()Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     226: pop
     227: aload_3
     228: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     233: astore        4
     235: aload         4
     237: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     242: ifeq          274
     245: aload         4
     247: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     252: checkcast     #33                 // class java/lang/String
     255: astore        5
     257: aload         5
     259: ifnull        271
     262: aload_2
     263: aload         5
     265: invokeinterface #22,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     270: pop
     271: goto          235
     274: aload_2
     275: invokeinterface #34,  1           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeEndArray:()Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     280: pop
     281: aload_1
     282: invokevirtual #35                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getCancelRequested:()Ljava/lang/Boolean;
     285: ifnull        309
     288: aload_2
     289: ldc           #36                 // String cancelRequested
     291: invokeinterface #8,  2            // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeFieldName:(Ljava/lang/String;)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     296: aload_1
     297: invokevirtual #35                 // Method com/amazonaws/services/simpleworkflow/model/WorkflowExecutionInfo.getCancelRequested:()Ljava/lang/Boolean;
     300: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
     303: invokeinterface #38,  2           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeValue:(Z)Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     308: pop
     309: aload_2
     310: invokeinterface #39,  1           // InterfaceMethod com/amazonaws/protocol/json/StructuredJsonGenerator.writeEndObject:()Lcom/amazonaws/protocol/json/StructuredJsonGenerator;
     315: pop
     316: goto          351
     319: astore_3
     320: new           #2                  // class com/amazonaws/AmazonClientException
     323: dup
     324: new           #41                 // class java/lang/StringBuilder
     327: dup
     328: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     331: ldc           #43                 // String Unable to marshall request to JSON:
     333: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     336: aload_3
     337: invokevirtual #45                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     340: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     343: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     346: aload_3
     347: invokespecial #47                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     350: athrow
     351: return
    Exception table:
       from    to  target type
          14   316   319   Class java/lang/Throwable

  public static com.amazonaws.services.simpleworkflow.model.transform.WorkflowExecutionInfoJsonMarshaller getInstance();
    Code:
       0: getstatic     #48                 // Field instance:Lcom/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionInfoJsonMarshaller;
       3: ifnonnull     16
       6: new           #49                 // class com/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionInfoJsonMarshaller
       9: dup
      10: invokespecial #50                 // Method "<init>":()V
      13: putstatic     #48                 // Field instance:Lcom/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionInfoJsonMarshaller;
      16: getstatic     #48                 // Field instance:Lcom/amazonaws/services/simpleworkflow/model/transform/WorkflowExecutionInfoJsonMarshaller;
      19: areturn
}
