Compiled from "ImportKeyPairRequest.java"
public class com.amazonaws.services.ec2.model.ImportKeyPairRequest extends com.amazonaws.AmazonWebServiceRequest implements java.io.Serializable, java.lang.Cloneable, com.amazonaws.services.ec2.model.DryRunSupportedRequest<com.amazonaws.services.ec2.model.ImportKeyPairRequest> {
  private java.lang.String keyName;

  private java.lang.String publicKeyMaterial;

  public com.amazonaws.services.ec2.model.ImportKeyPairRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: return

  public com.amazonaws.services.ec2.model.ImportKeyPairRequest(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setKeyName:(Ljava/lang/String;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #3                  // Method setPublicKeyMaterial:(Ljava/lang/String;)V
      14: return

  public void setKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field keyName:Ljava/lang/String;
       5: return

  public java.lang.String getKeyName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ImportKeyPairRequest withKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method setKeyName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPublicKeyMaterial(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field publicKeyMaterial:Ljava/lang/String;
       5: return

  public java.lang.String getPublicKeyMaterial();
    Code:
       0: aload_0
       1: getfield      #5                  // Field publicKeyMaterial:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ImportKeyPairRequest withPublicKeyMaterial(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setPublicKeyMaterial:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public com.amazonaws.Request<com.amazonaws.services.ec2.model.ImportKeyPairRequest> getDryRunRequest();
    Code:
       0: new           #6                  // class com/amazonaws/services/ec2/model/transform/ImportKeyPairRequestMarshaller
       3: dup
       4: invokespecial #7                  // Method com/amazonaws/services/ec2/model/transform/ImportKeyPairRequestMarshaller."<init>":()V
       7: aload_0
       8: invokevirtual #8                  // Method com/amazonaws/services/ec2/model/transform/ImportKeyPairRequestMarshaller.marshall:(Lcom/amazonaws/services/ec2/model/ImportKeyPairRequest;)Lcom/amazonaws/Request;
      11: astore_1
      12: aload_1
      13: ldc           #9                  // String DryRun
      15: iconst_1
      16: invokestatic  #10                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      19: invokeinterface #11,  3           // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      24: aload_1
      25: areturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #14                 // String {
      11: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #16                 // Method getKeyName:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #12                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #17                 // String KeyName:
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #16                 // Method getKeyName:()Ljava/lang/String;
      39: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #18                 // String ,
      44: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #20                 // Method getPublicKeyMaterial:()Ljava/lang/String;
      58: ifnull        88
      61: aload_1
      62: new           #12                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #21                 // String PublicKeyMaterial:
      71: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #20                 // Method getPublicKeyMaterial:()Ljava/lang/String;
      78: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_1
      89: ldc           #22                 // String }
      91: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: pop
      95: aload_1
      96: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #23                 // class com/amazonaws/services/ec2/model/ImportKeyPairRequest
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #23                 // class com/amazonaws/services/ec2/model/ImportKeyPairRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #16                 // Method getKeyName:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #16                 // Method getKeyName:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #16                 // Method getKeyName:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #16                 // Method getKeyName:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #16                 // Method getKeyName:()Ljava/lang/String;
      72: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #20                 // Method getPublicKeyMaterial:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #20                 // Method getPublicKeyMaterial:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #20                 // Method getPublicKeyMaterial:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #20                 // Method getPublicKeyMaterial:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #20                 // Method getPublicKeyMaterial:()Ljava/lang/String;
     125: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: iconst_1
     134: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #16                 // Method getKeyName:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #16                 // Method getKeyName:()Ljava/lang/String;
      24: invokevirtual #25                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #20                 // Method getPublicKeyMaterial:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #20                 // Method getPublicKeyMaterial:()Ljava/lang/String;
      48: invokevirtual #25                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: iload_2
      54: ireturn

  public com.amazonaws.services.ec2.model.ImportKeyPairRequest clone();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method com/amazonaws/AmazonWebServiceRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
       4: checkcast     #23                 // class com/amazonaws/services/ec2/model/ImportKeyPairRequest
       7: areturn

  public com.amazonaws.AmazonWebServiceRequest clone();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lcom/amazonaws/services/ec2/model/ImportKeyPairRequest;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lcom/amazonaws/services/ec2/model/ImportKeyPairRequest;
       4: areturn
}
