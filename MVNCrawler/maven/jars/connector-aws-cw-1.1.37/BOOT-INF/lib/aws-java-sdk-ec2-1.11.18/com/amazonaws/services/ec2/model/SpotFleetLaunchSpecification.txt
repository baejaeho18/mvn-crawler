Compiled from "SpotFleetLaunchSpecification.java"
public class com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String imageId;

  private java.lang.String keyName;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.GroupIdentifier> securityGroups;

  private java.lang.String userData;

  private java.lang.String addressingType;

  private java.lang.String instanceType;

  private com.amazonaws.services.ec2.model.SpotPlacement placement;

  private java.lang.String kernelId;

  private java.lang.String ramdiskId;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.BlockDeviceMapping> blockDeviceMappings;

  private com.amazonaws.services.ec2.model.SpotFleetMonitoring monitoring;

  private java.lang.String subnetId;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.InstanceNetworkInterfaceSpecification> networkInterfaces;

  private com.amazonaws.services.ec2.model.IamInstanceProfileSpecification iamInstanceProfile;

  private java.lang.Boolean ebsOptimized;

  private java.lang.Double weightedCapacity;

  private java.lang.String spotPrice;

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setImageId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field imageId:Ljava/lang/String;
       5: return

  public java.lang.String getImageId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field imageId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withImageId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setImageId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field keyName:Ljava/lang/String;
       5: return

  public java.lang.String getKeyName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setKeyName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.GroupIdentifier> getSecurityGroups();
    Code:
       0: aload_0
       1: getfield      #6                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #7                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #8                  // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #6                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #6                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setSecurityGroups(java.util.Collection<com.amazonaws.services.ec2.model.GroupIdentifier>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #7                  // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #9                  // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #6                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withSecurityGroups(com.amazonaws.services.ec2.model.GroupIdentifier...);
    Code:
       0: aload_0
       1: getfield      #6                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #7                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #10                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #11                 // Method setSecurityGroups:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #6                  // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #12                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withSecurityGroups(java.util.Collection<com.amazonaws.services.ec2.model.GroupIdentifier>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setSecurityGroups:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setUserData(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field userData:Ljava/lang/String;
       5: return

  public java.lang.String getUserData();
    Code:
       0: aload_0
       1: getfield      #13                 // Field userData:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withUserData(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method setUserData:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setAddressingType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field addressingType:Ljava/lang/String;
       5: return

  public java.lang.String getAddressingType();
    Code:
       0: aload_0
       1: getfield      #15                 // Field addressingType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withAddressingType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method setAddressingType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field instanceType:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceType();
    Code:
       0: aload_0
       1: getfield      #17                 // Field instanceType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method setInstanceType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceType(com.amazonaws.services.ec2.model.InstanceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method com/amazonaws/services/ec2/model/InstanceType.toString:()Ljava/lang/String;
       5: putfield      #17                 // Field instanceType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withInstanceType(com.amazonaws.services.ec2.model.InstanceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setInstanceType:(Lcom/amazonaws/services/ec2/model/InstanceType;)V
       5: aload_0
       6: areturn

  public void setPlacement(com.amazonaws.services.ec2.model.SpotPlacement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field placement:Lcom/amazonaws/services/ec2/model/SpotPlacement;
       5: return

  public com.amazonaws.services.ec2.model.SpotPlacement getPlacement();
    Code:
       0: aload_0
       1: getfield      #21                 // Field placement:Lcom/amazonaws/services/ec2/model/SpotPlacement;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withPlacement(com.amazonaws.services.ec2.model.SpotPlacement);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method setPlacement:(Lcom/amazonaws/services/ec2/model/SpotPlacement;)V
       5: aload_0
       6: areturn

  public void setKernelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field kernelId:Ljava/lang/String;
       5: return

  public java.lang.String getKernelId();
    Code:
       0: aload_0
       1: getfield      #23                 // Field kernelId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withKernelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setKernelId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRamdiskId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field ramdiskId:Ljava/lang/String;
       5: return

  public java.lang.String getRamdiskId();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ramdiskId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withRamdiskId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setRamdiskId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.BlockDeviceMapping> getBlockDeviceMappings();
    Code:
       0: aload_0
       1: getfield      #27                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #7                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #8                  // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #27                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #27                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setBlockDeviceMappings(java.util.Collection<com.amazonaws.services.ec2.model.BlockDeviceMapping>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #27                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #7                  // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #9                  // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #27                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withBlockDeviceMappings(com.amazonaws.services.ec2.model.BlockDeviceMapping...);
    Code:
       0: aload_0
       1: getfield      #27                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #7                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #10                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #28                 // Method setBlockDeviceMappings:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #27                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #12                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withBlockDeviceMappings(java.util.Collection<com.amazonaws.services.ec2.model.BlockDeviceMapping>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setBlockDeviceMappings:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setMonitoring(com.amazonaws.services.ec2.model.SpotFleetMonitoring);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field monitoring:Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
       5: return

  public com.amazonaws.services.ec2.model.SpotFleetMonitoring getMonitoring();
    Code:
       0: aload_0
       1: getfield      #29                 // Field monitoring:Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withMonitoring(com.amazonaws.services.ec2.model.SpotFleetMonitoring);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setMonitoring:(Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;)V
       5: aload_0
       6: areturn

  public void setSubnetId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field subnetId:Ljava/lang/String;
       5: return

  public java.lang.String getSubnetId();
    Code:
       0: aload_0
       1: getfield      #31                 // Field subnetId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withSubnetId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method setSubnetId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.InstanceNetworkInterfaceSpecification> getNetworkInterfaces();
    Code:
       0: aload_0
       1: getfield      #33                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #7                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #8                  // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #33                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #33                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setNetworkInterfaces(java.util.Collection<com.amazonaws.services.ec2.model.InstanceNetworkInterfaceSpecification>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #33                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #7                  // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #9                  // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #33                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withNetworkInterfaces(com.amazonaws.services.ec2.model.InstanceNetworkInterfaceSpecification...);
    Code:
       0: aload_0
       1: getfield      #33                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #7                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #10                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #34                 // Method setNetworkInterfaces:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #33                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #12                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withNetworkInterfaces(java.util.Collection<com.amazonaws.services.ec2.model.InstanceNetworkInterfaceSpecification>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method setNetworkInterfaces:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setIamInstanceProfile(com.amazonaws.services.ec2.model.IamInstanceProfileSpecification);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field iamInstanceProfile:Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
       5: return

  public com.amazonaws.services.ec2.model.IamInstanceProfileSpecification getIamInstanceProfile();
    Code:
       0: aload_0
       1: getfield      #35                 // Field iamInstanceProfile:Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withIamInstanceProfile(com.amazonaws.services.ec2.model.IamInstanceProfileSpecification);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setIamInstanceProfile:(Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;)V
       5: aload_0
       6: areturn

  public void setEbsOptimized(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field ebsOptimized:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getEbsOptimized();
    Code:
       0: aload_0
       1: getfield      #37                 // Field ebsOptimized:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withEbsOptimized(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setEbsOptimized:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isEbsOptimized();
    Code:
       0: aload_0
       1: getfield      #37                 // Field ebsOptimized:Ljava/lang/Boolean;
       4: areturn

  public void setWeightedCapacity(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field weightedCapacity:Ljava/lang/Double;
       5: return

  public java.lang.Double getWeightedCapacity();
    Code:
       0: aload_0
       1: getfield      #39                 // Field weightedCapacity:Ljava/lang/Double;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withWeightedCapacity(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setWeightedCapacity:(Ljava/lang/Double;)V
       5: aload_0
       6: areturn

  public void setSpotPrice(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field spotPrice:Ljava/lang/String;
       5: return

  public java.lang.String getSpotPrice();
    Code:
       0: aload_0
       1: getfield      #41                 // Field spotPrice:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification withSpotPrice(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method setSpotPrice:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #45                 // String {
      11: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #47                 // Method getImageId:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #43                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #48                 // String ImageId:
      32: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #47                 // Method getImageId:()Ljava/lang/String;
      39: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #49                 // String ,
      44: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #51                 // Method getKeyName:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #43                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #52                 // String KeyName:
      71: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #51                 // Method getKeyName:()Ljava/lang/String;
      78: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #49                 // String ,
      83: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #53                 // Method getSecurityGroups:()Ljava/util/List;
      97: ifnull        132
     100: aload_1
     101: new           #43                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #54                 // String SecurityGroups:
     110: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #53                 // Method getSecurityGroups:()Ljava/util/List;
     117: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #49                 // String ,
     122: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #56                 // Method getUserData:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #43                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #57                 // String UserData:
     149: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #56                 // Method getUserData:()Ljava/lang/String;
     156: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #49                 // String ,
     161: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #58                 // Method getAddressingType:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #43                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #59                 // String AddressingType:
     188: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #58                 // Method getAddressingType:()Ljava/lang/String;
     195: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #49                 // String ,
     200: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #60                 // Method getInstanceType:()Ljava/lang/String;
     214: ifnull        249
     217: aload_1
     218: new           #43                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #61                 // String InstanceType:
     227: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #60                 // Method getInstanceType:()Ljava/lang/String;
     234: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: ldc           #49                 // String ,
     239: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #62                 // Method getPlacement:()Lcom/amazonaws/services/ec2/model/SpotPlacement;
     253: ifnull        288
     256: aload_1
     257: new           #43                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #63                 // String Placement:
     266: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #62                 // Method getPlacement:()Lcom/amazonaws/services/ec2/model/SpotPlacement;
     273: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #49                 // String ,
     278: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #64                 // Method getKernelId:()Ljava/lang/String;
     292: ifnull        327
     295: aload_1
     296: new           #43                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #65                 // String KernelId:
     305: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #64                 // Method getKernelId:()Ljava/lang/String;
     312: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: ldc           #49                 // String ,
     317: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #66                 // Method getRamdiskId:()Ljava/lang/String;
     331: ifnull        366
     334: aload_1
     335: new           #43                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #67                 // String RamdiskId:
     344: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #66                 // Method getRamdiskId:()Ljava/lang/String;
     351: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: ldc           #49                 // String ,
     356: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #68                 // Method getBlockDeviceMappings:()Ljava/util/List;
     370: ifnull        405
     373: aload_1
     374: new           #43                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #69                 // String BlockDeviceMappings:
     383: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #68                 // Method getBlockDeviceMappings:()Ljava/util/List;
     390: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     393: ldc           #49                 // String ,
     395: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #70                 // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
     409: ifnull        444
     412: aload_1
     413: new           #43                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #71                 // String Monitoring:
     422: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #70                 // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
     429: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     432: ldc           #49                 // String ,
     434: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #72                 // Method getSubnetId:()Ljava/lang/String;
     448: ifnull        483
     451: aload_1
     452: new           #43                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #73                 // String SubnetId:
     461: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #72                 // Method getSubnetId:()Ljava/lang/String;
     468: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     471: ldc           #49                 // String ,
     473: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #74                 // Method getNetworkInterfaces:()Ljava/util/List;
     487: ifnull        522
     490: aload_1
     491: new           #43                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #75                 // String NetworkInterfaces:
     500: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #74                 // Method getNetworkInterfaces:()Ljava/util/List;
     507: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     510: ldc           #49                 // String ,
     512: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #76                 // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
     526: ifnull        561
     529: aload_1
     530: new           #43                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #77                 // String IamInstanceProfile:
     539: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #76                 // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
     546: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     549: ldc           #49                 // String ,
     551: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #78                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     565: ifnull        600
     568: aload_1
     569: new           #43                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #79                 // String EbsOptimized:
     578: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #78                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     585: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     588: ldc           #49                 // String ,
     590: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #80                 // Method getWeightedCapacity:()Ljava/lang/Double;
     604: ifnull        639
     607: aload_1
     608: new           #43                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #81                 // String WeightedCapacity:
     617: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #80                 // Method getWeightedCapacity:()Ljava/lang/Double;
     624: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     627: ldc           #49                 // String ,
     629: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     632: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     635: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     638: pop
     639: aload_0
     640: invokevirtual #82                 // Method getSpotPrice:()Ljava/lang/String;
     643: ifnull        673
     646: aload_1
     647: new           #43                 // class java/lang/StringBuilder
     650: dup
     651: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     654: ldc           #83                 // String SpotPrice:
     656: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     659: aload_0
     660: invokevirtual #82                 // Method getSpotPrice:()Ljava/lang/String;
     663: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     666: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     669: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     672: pop
     673: aload_1
     674: ldc           #84                 // String }
     676: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     679: pop
     680: aload_1
     681: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     684: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #85                 // class com/amazonaws/services/ec2/model/SpotFleetLaunchSpecification
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #85                 // class com/amazonaws/services/ec2/model/SpotFleetLaunchSpecification
      26: astore_2
      27: aload_2
      28: invokevirtual #47                 // Method getImageId:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #47                 // Method getImageId:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #47                 // Method getImageId:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #47                 // Method getImageId:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #47                 // Method getImageId:()Ljava/lang/String;
      72: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #51                 // Method getKeyName:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #51                 // Method getKeyName:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #51                 // Method getKeyName:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #51                 // Method getKeyName:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #51                 // Method getKeyName:()Ljava/lang/String;
     125: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #53                 // Method getSecurityGroups:()Ljava/util/List;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #53                 // Method getSecurityGroups:()Ljava/util/List;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #53                 // Method getSecurityGroups:()Ljava/util/List;
     167: ifnull        188
     170: aload_2
     171: invokevirtual #53                 // Method getSecurityGroups:()Ljava/util/List;
     174: aload_0
     175: invokevirtual #53                 // Method getSecurityGroups:()Ljava/util/List;
     178: invokeinterface #87,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     183: ifne          188
     186: iconst_0
     187: ireturn
     188: aload_2
     189: invokevirtual #56                 // Method getUserData:()Ljava/lang/String;
     192: ifnonnull     199
     195: iconst_1
     196: goto          200
     199: iconst_0
     200: aload_0
     201: invokevirtual #56                 // Method getUserData:()Ljava/lang/String;
     204: ifnonnull     211
     207: iconst_1
     208: goto          212
     211: iconst_0
     212: ixor
     213: ifeq          218
     216: iconst_0
     217: ireturn
     218: aload_2
     219: invokevirtual #56                 // Method getUserData:()Ljava/lang/String;
     222: ifnull        241
     225: aload_2
     226: invokevirtual #56                 // Method getUserData:()Ljava/lang/String;
     229: aload_0
     230: invokevirtual #56                 // Method getUserData:()Ljava/lang/String;
     233: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     236: ifne          241
     239: iconst_0
     240: ireturn
     241: aload_2
     242: invokevirtual #58                 // Method getAddressingType:()Ljava/lang/String;
     245: ifnonnull     252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: aload_0
     254: invokevirtual #58                 // Method getAddressingType:()Ljava/lang/String;
     257: ifnonnull     264
     260: iconst_1
     261: goto          265
     264: iconst_0
     265: ixor
     266: ifeq          271
     269: iconst_0
     270: ireturn
     271: aload_2
     272: invokevirtual #58                 // Method getAddressingType:()Ljava/lang/String;
     275: ifnull        294
     278: aload_2
     279: invokevirtual #58                 // Method getAddressingType:()Ljava/lang/String;
     282: aload_0
     283: invokevirtual #58                 // Method getAddressingType:()Ljava/lang/String;
     286: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     289: ifne          294
     292: iconst_0
     293: ireturn
     294: aload_2
     295: invokevirtual #60                 // Method getInstanceType:()Ljava/lang/String;
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: aload_0
     307: invokevirtual #60                 // Method getInstanceType:()Ljava/lang/String;
     310: ifnonnull     317
     313: iconst_1
     314: goto          318
     317: iconst_0
     318: ixor
     319: ifeq          324
     322: iconst_0
     323: ireturn
     324: aload_2
     325: invokevirtual #60                 // Method getInstanceType:()Ljava/lang/String;
     328: ifnull        347
     331: aload_2
     332: invokevirtual #60                 // Method getInstanceType:()Ljava/lang/String;
     335: aload_0
     336: invokevirtual #60                 // Method getInstanceType:()Ljava/lang/String;
     339: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     342: ifne          347
     345: iconst_0
     346: ireturn
     347: aload_2
     348: invokevirtual #62                 // Method getPlacement:()Lcom/amazonaws/services/ec2/model/SpotPlacement;
     351: ifnonnull     358
     354: iconst_1
     355: goto          359
     358: iconst_0
     359: aload_0
     360: invokevirtual #62                 // Method getPlacement:()Lcom/amazonaws/services/ec2/model/SpotPlacement;
     363: ifnonnull     370
     366: iconst_1
     367: goto          371
     370: iconst_0
     371: ixor
     372: ifeq          377
     375: iconst_0
     376: ireturn
     377: aload_2
     378: invokevirtual #62                 // Method getPlacement:()Lcom/amazonaws/services/ec2/model/SpotPlacement;
     381: ifnull        400
     384: aload_2
     385: invokevirtual #62                 // Method getPlacement:()Lcom/amazonaws/services/ec2/model/SpotPlacement;
     388: aload_0
     389: invokevirtual #62                 // Method getPlacement:()Lcom/amazonaws/services/ec2/model/SpotPlacement;
     392: invokevirtual #88                 // Method com/amazonaws/services/ec2/model/SpotPlacement.equals:(Ljava/lang/Object;)Z
     395: ifne          400
     398: iconst_0
     399: ireturn
     400: aload_2
     401: invokevirtual #64                 // Method getKernelId:()Ljava/lang/String;
     404: ifnonnull     411
     407: iconst_1
     408: goto          412
     411: iconst_0
     412: aload_0
     413: invokevirtual #64                 // Method getKernelId:()Ljava/lang/String;
     416: ifnonnull     423
     419: iconst_1
     420: goto          424
     423: iconst_0
     424: ixor
     425: ifeq          430
     428: iconst_0
     429: ireturn
     430: aload_2
     431: invokevirtual #64                 // Method getKernelId:()Ljava/lang/String;
     434: ifnull        453
     437: aload_2
     438: invokevirtual #64                 // Method getKernelId:()Ljava/lang/String;
     441: aload_0
     442: invokevirtual #64                 // Method getKernelId:()Ljava/lang/String;
     445: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     448: ifne          453
     451: iconst_0
     452: ireturn
     453: aload_2
     454: invokevirtual #66                 // Method getRamdiskId:()Ljava/lang/String;
     457: ifnonnull     464
     460: iconst_1
     461: goto          465
     464: iconst_0
     465: aload_0
     466: invokevirtual #66                 // Method getRamdiskId:()Ljava/lang/String;
     469: ifnonnull     476
     472: iconst_1
     473: goto          477
     476: iconst_0
     477: ixor
     478: ifeq          483
     481: iconst_0
     482: ireturn
     483: aload_2
     484: invokevirtual #66                 // Method getRamdiskId:()Ljava/lang/String;
     487: ifnull        506
     490: aload_2
     491: invokevirtual #66                 // Method getRamdiskId:()Ljava/lang/String;
     494: aload_0
     495: invokevirtual #66                 // Method getRamdiskId:()Ljava/lang/String;
     498: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     501: ifne          506
     504: iconst_0
     505: ireturn
     506: aload_2
     507: invokevirtual #68                 // Method getBlockDeviceMappings:()Ljava/util/List;
     510: ifnonnull     517
     513: iconst_1
     514: goto          518
     517: iconst_0
     518: aload_0
     519: invokevirtual #68                 // Method getBlockDeviceMappings:()Ljava/util/List;
     522: ifnonnull     529
     525: iconst_1
     526: goto          530
     529: iconst_0
     530: ixor
     531: ifeq          536
     534: iconst_0
     535: ireturn
     536: aload_2
     537: invokevirtual #68                 // Method getBlockDeviceMappings:()Ljava/util/List;
     540: ifnull        561
     543: aload_2
     544: invokevirtual #68                 // Method getBlockDeviceMappings:()Ljava/util/List;
     547: aload_0
     548: invokevirtual #68                 // Method getBlockDeviceMappings:()Ljava/util/List;
     551: invokeinterface #87,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     556: ifne          561
     559: iconst_0
     560: ireturn
     561: aload_2
     562: invokevirtual #70                 // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
     565: ifnonnull     572
     568: iconst_1
     569: goto          573
     572: iconst_0
     573: aload_0
     574: invokevirtual #70                 // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
     577: ifnonnull     584
     580: iconst_1
     581: goto          585
     584: iconst_0
     585: ixor
     586: ifeq          591
     589: iconst_0
     590: ireturn
     591: aload_2
     592: invokevirtual #70                 // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
     595: ifnull        614
     598: aload_2
     599: invokevirtual #70                 // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
     602: aload_0
     603: invokevirtual #70                 // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
     606: invokevirtual #89                 // Method com/amazonaws/services/ec2/model/SpotFleetMonitoring.equals:(Ljava/lang/Object;)Z
     609: ifne          614
     612: iconst_0
     613: ireturn
     614: aload_2
     615: invokevirtual #72                 // Method getSubnetId:()Ljava/lang/String;
     618: ifnonnull     625
     621: iconst_1
     622: goto          626
     625: iconst_0
     626: aload_0
     627: invokevirtual #72                 // Method getSubnetId:()Ljava/lang/String;
     630: ifnonnull     637
     633: iconst_1
     634: goto          638
     637: iconst_0
     638: ixor
     639: ifeq          644
     642: iconst_0
     643: ireturn
     644: aload_2
     645: invokevirtual #72                 // Method getSubnetId:()Ljava/lang/String;
     648: ifnull        667
     651: aload_2
     652: invokevirtual #72                 // Method getSubnetId:()Ljava/lang/String;
     655: aload_0
     656: invokevirtual #72                 // Method getSubnetId:()Ljava/lang/String;
     659: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     662: ifne          667
     665: iconst_0
     666: ireturn
     667: aload_2
     668: invokevirtual #74                 // Method getNetworkInterfaces:()Ljava/util/List;
     671: ifnonnull     678
     674: iconst_1
     675: goto          679
     678: iconst_0
     679: aload_0
     680: invokevirtual #74                 // Method getNetworkInterfaces:()Ljava/util/List;
     683: ifnonnull     690
     686: iconst_1
     687: goto          691
     690: iconst_0
     691: ixor
     692: ifeq          697
     695: iconst_0
     696: ireturn
     697: aload_2
     698: invokevirtual #74                 // Method getNetworkInterfaces:()Ljava/util/List;
     701: ifnull        722
     704: aload_2
     705: invokevirtual #74                 // Method getNetworkInterfaces:()Ljava/util/List;
     708: aload_0
     709: invokevirtual #74                 // Method getNetworkInterfaces:()Ljava/util/List;
     712: invokeinterface #87,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     717: ifne          722
     720: iconst_0
     721: ireturn
     722: aload_2
     723: invokevirtual #76                 // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
     726: ifnonnull     733
     729: iconst_1
     730: goto          734
     733: iconst_0
     734: aload_0
     735: invokevirtual #76                 // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
     738: ifnonnull     745
     741: iconst_1
     742: goto          746
     745: iconst_0
     746: ixor
     747: ifeq          752
     750: iconst_0
     751: ireturn
     752: aload_2
     753: invokevirtual #76                 // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
     756: ifnull        775
     759: aload_2
     760: invokevirtual #76                 // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
     763: aload_0
     764: invokevirtual #76                 // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
     767: invokevirtual #90                 // Method com/amazonaws/services/ec2/model/IamInstanceProfileSpecification.equals:(Ljava/lang/Object;)Z
     770: ifne          775
     773: iconst_0
     774: ireturn
     775: aload_2
     776: invokevirtual #78                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     779: ifnonnull     786
     782: iconst_1
     783: goto          787
     786: iconst_0
     787: aload_0
     788: invokevirtual #78                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     791: ifnonnull     798
     794: iconst_1
     795: goto          799
     798: iconst_0
     799: ixor
     800: ifeq          805
     803: iconst_0
     804: ireturn
     805: aload_2
     806: invokevirtual #78                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     809: ifnull        828
     812: aload_2
     813: invokevirtual #78                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     816: aload_0
     817: invokevirtual #78                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     820: invokevirtual #91                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     823: ifne          828
     826: iconst_0
     827: ireturn
     828: aload_2
     829: invokevirtual #80                 // Method getWeightedCapacity:()Ljava/lang/Double;
     832: ifnonnull     839
     835: iconst_1
     836: goto          840
     839: iconst_0
     840: aload_0
     841: invokevirtual #80                 // Method getWeightedCapacity:()Ljava/lang/Double;
     844: ifnonnull     851
     847: iconst_1
     848: goto          852
     851: iconst_0
     852: ixor
     853: ifeq          858
     856: iconst_0
     857: ireturn
     858: aload_2
     859: invokevirtual #80                 // Method getWeightedCapacity:()Ljava/lang/Double;
     862: ifnull        881
     865: aload_2
     866: invokevirtual #80                 // Method getWeightedCapacity:()Ljava/lang/Double;
     869: aload_0
     870: invokevirtual #80                 // Method getWeightedCapacity:()Ljava/lang/Double;
     873: invokevirtual #92                 // Method java/lang/Double.equals:(Ljava/lang/Object;)Z
     876: ifne          881
     879: iconst_0
     880: ireturn
     881: aload_2
     882: invokevirtual #82                 // Method getSpotPrice:()Ljava/lang/String;
     885: ifnonnull     892
     888: iconst_1
     889: goto          893
     892: iconst_0
     893: aload_0
     894: invokevirtual #82                 // Method getSpotPrice:()Ljava/lang/String;
     897: ifnonnull     904
     900: iconst_1
     901: goto          905
     904: iconst_0
     905: ixor
     906: ifeq          911
     909: iconst_0
     910: ireturn
     911: aload_2
     912: invokevirtual #82                 // Method getSpotPrice:()Ljava/lang/String;
     915: ifnull        934
     918: aload_2
     919: invokevirtual #82                 // Method getSpotPrice:()Ljava/lang/String;
     922: aload_0
     923: invokevirtual #82                 // Method getSpotPrice:()Ljava/lang/String;
     926: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     929: ifne          934
     932: iconst_0
     933: ireturn
     934: iconst_1
     935: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #47                 // Method getImageId:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #47                 // Method getImageId:()Ljava/lang/String;
      24: invokevirtual #93                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #51                 // Method getKeyName:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #51                 // Method getKeyName:()Ljava/lang/String;
      48: invokevirtual #93                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #53                 // Method getSecurityGroups:()Ljava/util/List;
      61: ifnonnull     68
      64: iconst_0
      65: goto          77
      68: aload_0
      69: invokevirtual #53                 // Method getSecurityGroups:()Ljava/util/List;
      72: invokeinterface #94,  1           // InterfaceMethod java/util/List.hashCode:()I
      77: iadd
      78: istore_2
      79: bipush        31
      81: iload_2
      82: imul
      83: aload_0
      84: invokevirtual #56                 // Method getUserData:()Ljava/lang/String;
      87: ifnonnull     94
      90: iconst_0
      91: goto          101
      94: aload_0
      95: invokevirtual #56                 // Method getUserData:()Ljava/lang/String;
      98: invokevirtual #93                 // Method java/lang/String.hashCode:()I
     101: iadd
     102: istore_2
     103: bipush        31
     105: iload_2
     106: imul
     107: aload_0
     108: invokevirtual #58                 // Method getAddressingType:()Ljava/lang/String;
     111: ifnonnull     118
     114: iconst_0
     115: goto          125
     118: aload_0
     119: invokevirtual #58                 // Method getAddressingType:()Ljava/lang/String;
     122: invokevirtual #93                 // Method java/lang/String.hashCode:()I
     125: iadd
     126: istore_2
     127: bipush        31
     129: iload_2
     130: imul
     131: aload_0
     132: invokevirtual #60                 // Method getInstanceType:()Ljava/lang/String;
     135: ifnonnull     142
     138: iconst_0
     139: goto          149
     142: aload_0
     143: invokevirtual #60                 // Method getInstanceType:()Ljava/lang/String;
     146: invokevirtual #93                 // Method java/lang/String.hashCode:()I
     149: iadd
     150: istore_2
     151: bipush        31
     153: iload_2
     154: imul
     155: aload_0
     156: invokevirtual #62                 // Method getPlacement:()Lcom/amazonaws/services/ec2/model/SpotPlacement;
     159: ifnonnull     166
     162: iconst_0
     163: goto          173
     166: aload_0
     167: invokevirtual #62                 // Method getPlacement:()Lcom/amazonaws/services/ec2/model/SpotPlacement;
     170: invokevirtual #95                 // Method com/amazonaws/services/ec2/model/SpotPlacement.hashCode:()I
     173: iadd
     174: istore_2
     175: bipush        31
     177: iload_2
     178: imul
     179: aload_0
     180: invokevirtual #64                 // Method getKernelId:()Ljava/lang/String;
     183: ifnonnull     190
     186: iconst_0
     187: goto          197
     190: aload_0
     191: invokevirtual #64                 // Method getKernelId:()Ljava/lang/String;
     194: invokevirtual #93                 // Method java/lang/String.hashCode:()I
     197: iadd
     198: istore_2
     199: bipush        31
     201: iload_2
     202: imul
     203: aload_0
     204: invokevirtual #66                 // Method getRamdiskId:()Ljava/lang/String;
     207: ifnonnull     214
     210: iconst_0
     211: goto          221
     214: aload_0
     215: invokevirtual #66                 // Method getRamdiskId:()Ljava/lang/String;
     218: invokevirtual #93                 // Method java/lang/String.hashCode:()I
     221: iadd
     222: istore_2
     223: bipush        31
     225: iload_2
     226: imul
     227: aload_0
     228: invokevirtual #68                 // Method getBlockDeviceMappings:()Ljava/util/List;
     231: ifnonnull     238
     234: iconst_0
     235: goto          247
     238: aload_0
     239: invokevirtual #68                 // Method getBlockDeviceMappings:()Ljava/util/List;
     242: invokeinterface #94,  1           // InterfaceMethod java/util/List.hashCode:()I
     247: iadd
     248: istore_2
     249: bipush        31
     251: iload_2
     252: imul
     253: aload_0
     254: invokevirtual #70                 // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
     257: ifnonnull     264
     260: iconst_0
     261: goto          271
     264: aload_0
     265: invokevirtual #70                 // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/SpotFleetMonitoring;
     268: invokevirtual #96                 // Method com/amazonaws/services/ec2/model/SpotFleetMonitoring.hashCode:()I
     271: iadd
     272: istore_2
     273: bipush        31
     275: iload_2
     276: imul
     277: aload_0
     278: invokevirtual #72                 // Method getSubnetId:()Ljava/lang/String;
     281: ifnonnull     288
     284: iconst_0
     285: goto          295
     288: aload_0
     289: invokevirtual #72                 // Method getSubnetId:()Ljava/lang/String;
     292: invokevirtual #93                 // Method java/lang/String.hashCode:()I
     295: iadd
     296: istore_2
     297: bipush        31
     299: iload_2
     300: imul
     301: aload_0
     302: invokevirtual #74                 // Method getNetworkInterfaces:()Ljava/util/List;
     305: ifnonnull     312
     308: iconst_0
     309: goto          321
     312: aload_0
     313: invokevirtual #74                 // Method getNetworkInterfaces:()Ljava/util/List;
     316: invokeinterface #94,  1           // InterfaceMethod java/util/List.hashCode:()I
     321: iadd
     322: istore_2
     323: bipush        31
     325: iload_2
     326: imul
     327: aload_0
     328: invokevirtual #76                 // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
     331: ifnonnull     338
     334: iconst_0
     335: goto          345
     338: aload_0
     339: invokevirtual #76                 // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfileSpecification;
     342: invokevirtual #97                 // Method com/amazonaws/services/ec2/model/IamInstanceProfileSpecification.hashCode:()I
     345: iadd
     346: istore_2
     347: bipush        31
     349: iload_2
     350: imul
     351: aload_0
     352: invokevirtual #78                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     355: ifnonnull     362
     358: iconst_0
     359: goto          369
     362: aload_0
     363: invokevirtual #78                 // Method getEbsOptimized:()Ljava/lang/Boolean;
     366: invokevirtual #98                 // Method java/lang/Boolean.hashCode:()I
     369: iadd
     370: istore_2
     371: bipush        31
     373: iload_2
     374: imul
     375: aload_0
     376: invokevirtual #80                 // Method getWeightedCapacity:()Ljava/lang/Double;
     379: ifnonnull     386
     382: iconst_0
     383: goto          393
     386: aload_0
     387: invokevirtual #80                 // Method getWeightedCapacity:()Ljava/lang/Double;
     390: invokevirtual #99                 // Method java/lang/Double.hashCode:()I
     393: iadd
     394: istore_2
     395: bipush        31
     397: iload_2
     398: imul
     399: aload_0
     400: invokevirtual #82                 // Method getSpotPrice:()Ljava/lang/String;
     403: ifnonnull     410
     406: iconst_0
     407: goto          417
     410: aload_0
     411: invokevirtual #82                 // Method getSpotPrice:()Ljava/lang/String;
     414: invokevirtual #93                 // Method java/lang/String.hashCode:()I
     417: iadd
     418: istore_2
     419: iload_2
     420: ireturn

  public com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification clone();
    Code:
       0: aload_0
       1: invokespecial #100                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #85                 // class com/amazonaws/services/ec2/model/SpotFleetLaunchSpecification
       7: areturn
       8: astore_1
       9: new           #102                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #103                // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #105                // Method clone:()Lcom/amazonaws/services/ec2/model/SpotFleetLaunchSpecification;
       4: areturn
}
