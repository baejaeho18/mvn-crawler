Compiled from "ReservedInstances.java"
public class com.amazonaws.services.ec2.model.ReservedInstances implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String reservedInstancesId;

  private java.lang.String instanceType;

  private java.lang.String availabilityZone;

  private java.util.Date start;

  private java.util.Date end;

  private java.lang.Long duration;

  private java.lang.Float usagePrice;

  private java.lang.Float fixedPrice;

  private java.lang.Integer instanceCount;

  private java.lang.String productDescription;

  private java.lang.String state;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.Tag> tags;

  private java.lang.String instanceTenancy;

  private java.lang.String currencyCode;

  private java.lang.String offeringType;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.RecurringCharge> recurringCharges;

  public com.amazonaws.services.ec2.model.ReservedInstances();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setReservedInstancesId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field reservedInstancesId:Ljava/lang/String;
       5: return

  public java.lang.String getReservedInstancesId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field reservedInstancesId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withReservedInstancesId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setReservedInstancesId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field instanceType:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field instanceType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setInstanceType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceType(com.amazonaws.services.ec2.model.InstanceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method com/amazonaws/services/ec2/model/InstanceType.toString:()Ljava/lang/String;
       5: putfield      #4                  // Field instanceType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.ReservedInstances withInstanceType(com.amazonaws.services.ec2.model.InstanceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setInstanceType:(Lcom/amazonaws/services/ec2/model/InstanceType;)V
       5: aload_0
       6: areturn

  public void setAvailabilityZone(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field availabilityZone:Ljava/lang/String;
       5: return

  public java.lang.String getAvailabilityZone();
    Code:
       0: aload_0
       1: getfield      #8                  // Field availabilityZone:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withAvailabilityZone(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setAvailabilityZone:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setStart(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field start:Ljava/util/Date;
       5: return

  public java.util.Date getStart();
    Code:
       0: aload_0
       1: getfield      #10                 // Field start:Ljava/util/Date;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withStart(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setStart:(Ljava/util/Date;)V
       5: aload_0
       6: areturn

  public void setEnd(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field end:Ljava/util/Date;
       5: return

  public java.util.Date getEnd();
    Code:
       0: aload_0
       1: getfield      #12                 // Field end:Ljava/util/Date;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withEnd(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setEnd:(Ljava/util/Date;)V
       5: aload_0
       6: areturn

  public void setDuration(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field duration:Ljava/lang/Long;
       5: return

  public java.lang.Long getDuration();
    Code:
       0: aload_0
       1: getfield      #14                 // Field duration:Ljava/lang/Long;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withDuration(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setDuration:(Ljava/lang/Long;)V
       5: aload_0
       6: areturn

  public void setUsagePrice(java.lang.Float);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field usagePrice:Ljava/lang/Float;
       5: return

  public java.lang.Float getUsagePrice();
    Code:
       0: aload_0
       1: getfield      #16                 // Field usagePrice:Ljava/lang/Float;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withUsagePrice(java.lang.Float);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setUsagePrice:(Ljava/lang/Float;)V
       5: aload_0
       6: areturn

  public void setFixedPrice(java.lang.Float);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field fixedPrice:Ljava/lang/Float;
       5: return

  public java.lang.Float getFixedPrice();
    Code:
       0: aload_0
       1: getfield      #18                 // Field fixedPrice:Ljava/lang/Float;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withFixedPrice(java.lang.Float);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method setFixedPrice:(Ljava/lang/Float;)V
       5: aload_0
       6: areturn

  public void setInstanceCount(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field instanceCount:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getInstanceCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field instanceCount:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withInstanceCount(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method setInstanceCount:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setProductDescription(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field productDescription:Ljava/lang/String;
       5: return

  public java.lang.String getProductDescription();
    Code:
       0: aload_0
       1: getfield      #22                 // Field productDescription:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withProductDescription(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method setProductDescription:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setProductDescription(com.amazonaws.services.ec2.model.RIProductDescription);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method com/amazonaws/services/ec2/model/RIProductDescription.toString:()Ljava/lang/String;
       5: putfield      #22                 // Field productDescription:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.ReservedInstances withProductDescription(com.amazonaws.services.ec2.model.RIProductDescription);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method setProductDescription:(Lcom/amazonaws/services/ec2/model/RIProductDescription;)V
       5: aload_0
       6: areturn

  public void setState(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field state:Ljava/lang/String;
       5: return

  public java.lang.String getState();
    Code:
       0: aload_0
       1: getfield      #26                 // Field state:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withState(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method setState:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setState(com.amazonaws.services.ec2.model.ReservedInstanceState);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method com/amazonaws/services/ec2/model/ReservedInstanceState.toString:()Ljava/lang/String;
       5: putfield      #26                 // Field state:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.ReservedInstances withState(com.amazonaws.services.ec2.model.ReservedInstanceState);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method setState:(Lcom/amazonaws/services/ec2/model/ReservedInstanceState;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.Tag> getTags();
    Code:
       0: aload_0
       1: getfield      #30                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #31                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #32                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #30                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #30                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setTags(java.util.Collection<com.amazonaws.services.ec2.model.Tag>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #30                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #31                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #33                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #30                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.ReservedInstances withTags(com.amazonaws.services.ec2.model.Tag...);
    Code:
       0: aload_0
       1: getfield      #30                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #31                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #34                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #35                 // Method setTags:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #30                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #36                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withTags(java.util.Collection<com.amazonaws.services.ec2.model.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method setTags:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setInstanceTenancy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field instanceTenancy:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceTenancy();
    Code:
       0: aload_0
       1: getfield      #37                 // Field instanceTenancy:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withInstanceTenancy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setInstanceTenancy:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceTenancy(com.amazonaws.services.ec2.model.Tenancy);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method com/amazonaws/services/ec2/model/Tenancy.toString:()Ljava/lang/String;
       5: putfield      #37                 // Field instanceTenancy:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.ReservedInstances withInstanceTenancy(com.amazonaws.services.ec2.model.Tenancy);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setInstanceTenancy:(Lcom/amazonaws/services/ec2/model/Tenancy;)V
       5: aload_0
       6: areturn

  public void setCurrencyCode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field currencyCode:Ljava/lang/String;
       5: return

  public java.lang.String getCurrencyCode();
    Code:
       0: aload_0
       1: getfield      #41                 // Field currencyCode:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withCurrencyCode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method setCurrencyCode:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setCurrencyCode(com.amazonaws.services.ec2.model.CurrencyCodeValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method com/amazonaws/services/ec2/model/CurrencyCodeValues.toString:()Ljava/lang/String;
       5: putfield      #41                 // Field currencyCode:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.ReservedInstances withCurrencyCode(com.amazonaws.services.ec2.model.CurrencyCodeValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setCurrencyCode:(Lcom/amazonaws/services/ec2/model/CurrencyCodeValues;)V
       5: aload_0
       6: areturn

  public void setOfferingType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field offeringType:Ljava/lang/String;
       5: return

  public java.lang.String getOfferingType();
    Code:
       0: aload_0
       1: getfield      #45                 // Field offeringType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withOfferingType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setOfferingType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setOfferingType(com.amazonaws.services.ec2.model.OfferingTypeValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method com/amazonaws/services/ec2/model/OfferingTypeValues.toString:()Ljava/lang/String;
       5: putfield      #45                 // Field offeringType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.ReservedInstances withOfferingType(com.amazonaws.services.ec2.model.OfferingTypeValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method setOfferingType:(Lcom/amazonaws/services/ec2/model/OfferingTypeValues;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.RecurringCharge> getRecurringCharges();
    Code:
       0: aload_0
       1: getfield      #49                 // Field recurringCharges:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #31                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #32                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #49                 // Field recurringCharges:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #49                 // Field recurringCharges:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setRecurringCharges(java.util.Collection<com.amazonaws.services.ec2.model.RecurringCharge>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #49                 // Field recurringCharges:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #31                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #33                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #49                 // Field recurringCharges:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.ReservedInstances withRecurringCharges(com.amazonaws.services.ec2.model.RecurringCharge...);
    Code:
       0: aload_0
       1: getfield      #49                 // Field recurringCharges:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #31                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #34                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #50                 // Method setRecurringCharges:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #49                 // Field recurringCharges:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #36                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.ReservedInstances withRecurringCharges(java.util.Collection<com.amazonaws.services.ec2.model.RecurringCharge>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setRecurringCharges:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #51                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #53                 // String {
      11: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #55                 // Method getReservedInstancesId:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #51                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #56                 // String ReservedInstancesId:
      32: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #55                 // Method getReservedInstancesId:()Ljava/lang/String;
      39: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #57                 // String ,
      44: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #59                 // Method getInstanceType:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #51                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #60                 // String InstanceType:
      71: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #59                 // Method getInstanceType:()Ljava/lang/String;
      78: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #57                 // String ,
      83: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #61                 // Method getAvailabilityZone:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #51                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #62                 // String AvailabilityZone:
     110: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #61                 // Method getAvailabilityZone:()Ljava/lang/String;
     117: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #57                 // String ,
     122: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #63                 // Method getStart:()Ljava/util/Date;
     136: ifnull        171
     139: aload_1
     140: new           #51                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #64                 // String Start:
     149: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #63                 // Method getStart:()Ljava/util/Date;
     156: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #57                 // String ,
     161: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #66                 // Method getEnd:()Ljava/util/Date;
     175: ifnull        210
     178: aload_1
     179: new           #51                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #67                 // String End:
     188: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #66                 // Method getEnd:()Ljava/util/Date;
     195: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     198: ldc           #57                 // String ,
     200: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #68                 // Method getDuration:()Ljava/lang/Long;
     214: ifnull        249
     217: aload_1
     218: new           #51                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #69                 // String Duration:
     227: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #68                 // Method getDuration:()Ljava/lang/Long;
     234: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #57                 // String ,
     239: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #70                 // Method getUsagePrice:()Ljava/lang/Float;
     253: ifnull        288
     256: aload_1
     257: new           #51                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #71                 // String UsagePrice:
     266: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #70                 // Method getUsagePrice:()Ljava/lang/Float;
     273: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #57                 // String ,
     278: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #72                 // Method getFixedPrice:()Ljava/lang/Float;
     292: ifnull        327
     295: aload_1
     296: new           #51                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #73                 // String FixedPrice:
     305: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #72                 // Method getFixedPrice:()Ljava/lang/Float;
     312: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #57                 // String ,
     317: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #74                 // Method getInstanceCount:()Ljava/lang/Integer;
     331: ifnull        366
     334: aload_1
     335: new           #51                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #75                 // String InstanceCount:
     344: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #74                 // Method getInstanceCount:()Ljava/lang/Integer;
     351: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     354: ldc           #57                 // String ,
     356: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #76                 // Method getProductDescription:()Ljava/lang/String;
     370: ifnull        405
     373: aload_1
     374: new           #51                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #77                 // String ProductDescription:
     383: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #76                 // Method getProductDescription:()Ljava/lang/String;
     390: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: ldc           #57                 // String ,
     395: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #78                 // Method getState:()Ljava/lang/String;
     409: ifnull        444
     412: aload_1
     413: new           #51                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #79                 // String State:
     422: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #78                 // Method getState:()Ljava/lang/String;
     429: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     432: ldc           #57                 // String ,
     434: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #80                 // Method getTags:()Ljava/util/List;
     448: ifnull        483
     451: aload_1
     452: new           #51                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #81                 // String Tags:
     461: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #80                 // Method getTags:()Ljava/util/List;
     468: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     471: ldc           #57                 // String ,
     473: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #82                 // Method getInstanceTenancy:()Ljava/lang/String;
     487: ifnull        522
     490: aload_1
     491: new           #51                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #83                 // String InstanceTenancy:
     500: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #82                 // Method getInstanceTenancy:()Ljava/lang/String;
     507: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     510: ldc           #57                 // String ,
     512: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #84                 // Method getCurrencyCode:()Ljava/lang/String;
     526: ifnull        561
     529: aload_1
     530: new           #51                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #85                 // String CurrencyCode:
     539: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #84                 // Method getCurrencyCode:()Ljava/lang/String;
     546: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     549: ldc           #57                 // String ,
     551: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #86                 // Method getOfferingType:()Ljava/lang/String;
     565: ifnull        600
     568: aload_1
     569: new           #51                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #87                 // String OfferingType:
     578: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #86                 // Method getOfferingType:()Ljava/lang/String;
     585: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     588: ldc           #57                 // String ,
     590: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #88                 // Method getRecurringCharges:()Ljava/util/List;
     604: ifnull        634
     607: aload_1
     608: new           #51                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #89                 // String RecurringCharges:
     617: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #88                 // Method getRecurringCharges:()Ljava/util/List;
     624: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     627: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     630: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     633: pop
     634: aload_1
     635: ldc           #90                 // String }
     637: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     640: pop
     641: aload_1
     642: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     645: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #91                 // class com/amazonaws/services/ec2/model/ReservedInstances
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #91                 // class com/amazonaws/services/ec2/model/ReservedInstances
      26: astore_2
      27: aload_2
      28: invokevirtual #55                 // Method getReservedInstancesId:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #55                 // Method getReservedInstancesId:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #55                 // Method getReservedInstancesId:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #55                 // Method getReservedInstancesId:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #55                 // Method getReservedInstancesId:()Ljava/lang/String;
      72: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #59                 // Method getInstanceType:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #59                 // Method getInstanceType:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #59                 // Method getInstanceType:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #59                 // Method getInstanceType:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #59                 // Method getInstanceType:()Ljava/lang/String;
     125: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #61                 // Method getAvailabilityZone:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #61                 // Method getAvailabilityZone:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #61                 // Method getAvailabilityZone:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #61                 // Method getAvailabilityZone:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #61                 // Method getAvailabilityZone:()Ljava/lang/String;
     178: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #63                 // Method getStart:()Ljava/util/Date;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #63                 // Method getStart:()Ljava/util/Date;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #63                 // Method getStart:()Ljava/util/Date;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #63                 // Method getStart:()Ljava/util/Date;
     227: aload_0
     228: invokevirtual #63                 // Method getStart:()Ljava/util/Date;
     231: invokevirtual #93                 // Method java/util/Date.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #66                 // Method getEnd:()Ljava/util/Date;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #66                 // Method getEnd:()Ljava/util/Date;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #66                 // Method getEnd:()Ljava/util/Date;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #66                 // Method getEnd:()Ljava/util/Date;
     280: aload_0
     281: invokevirtual #66                 // Method getEnd:()Ljava/util/Date;
     284: invokevirtual #93                 // Method java/util/Date.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload_2
     293: invokevirtual #68                 // Method getDuration:()Ljava/lang/Long;
     296: ifnonnull     303
     299: iconst_1
     300: goto          304
     303: iconst_0
     304: aload_0
     305: invokevirtual #68                 // Method getDuration:()Ljava/lang/Long;
     308: ifnonnull     315
     311: iconst_1
     312: goto          316
     315: iconst_0
     316: ixor
     317: ifeq          322
     320: iconst_0
     321: ireturn
     322: aload_2
     323: invokevirtual #68                 // Method getDuration:()Ljava/lang/Long;
     326: ifnull        345
     329: aload_2
     330: invokevirtual #68                 // Method getDuration:()Ljava/lang/Long;
     333: aload_0
     334: invokevirtual #68                 // Method getDuration:()Ljava/lang/Long;
     337: invokevirtual #94                 // Method java/lang/Long.equals:(Ljava/lang/Object;)Z
     340: ifne          345
     343: iconst_0
     344: ireturn
     345: aload_2
     346: invokevirtual #70                 // Method getUsagePrice:()Ljava/lang/Float;
     349: ifnonnull     356
     352: iconst_1
     353: goto          357
     356: iconst_0
     357: aload_0
     358: invokevirtual #70                 // Method getUsagePrice:()Ljava/lang/Float;
     361: ifnonnull     368
     364: iconst_1
     365: goto          369
     368: iconst_0
     369: ixor
     370: ifeq          375
     373: iconst_0
     374: ireturn
     375: aload_2
     376: invokevirtual #70                 // Method getUsagePrice:()Ljava/lang/Float;
     379: ifnull        398
     382: aload_2
     383: invokevirtual #70                 // Method getUsagePrice:()Ljava/lang/Float;
     386: aload_0
     387: invokevirtual #70                 // Method getUsagePrice:()Ljava/lang/Float;
     390: invokevirtual #95                 // Method java/lang/Float.equals:(Ljava/lang/Object;)Z
     393: ifne          398
     396: iconst_0
     397: ireturn
     398: aload_2
     399: invokevirtual #72                 // Method getFixedPrice:()Ljava/lang/Float;
     402: ifnonnull     409
     405: iconst_1
     406: goto          410
     409: iconst_0
     410: aload_0
     411: invokevirtual #72                 // Method getFixedPrice:()Ljava/lang/Float;
     414: ifnonnull     421
     417: iconst_1
     418: goto          422
     421: iconst_0
     422: ixor
     423: ifeq          428
     426: iconst_0
     427: ireturn
     428: aload_2
     429: invokevirtual #72                 // Method getFixedPrice:()Ljava/lang/Float;
     432: ifnull        451
     435: aload_2
     436: invokevirtual #72                 // Method getFixedPrice:()Ljava/lang/Float;
     439: aload_0
     440: invokevirtual #72                 // Method getFixedPrice:()Ljava/lang/Float;
     443: invokevirtual #95                 // Method java/lang/Float.equals:(Ljava/lang/Object;)Z
     446: ifne          451
     449: iconst_0
     450: ireturn
     451: aload_2
     452: invokevirtual #74                 // Method getInstanceCount:()Ljava/lang/Integer;
     455: ifnonnull     462
     458: iconst_1
     459: goto          463
     462: iconst_0
     463: aload_0
     464: invokevirtual #74                 // Method getInstanceCount:()Ljava/lang/Integer;
     467: ifnonnull     474
     470: iconst_1
     471: goto          475
     474: iconst_0
     475: ixor
     476: ifeq          481
     479: iconst_0
     480: ireturn
     481: aload_2
     482: invokevirtual #74                 // Method getInstanceCount:()Ljava/lang/Integer;
     485: ifnull        504
     488: aload_2
     489: invokevirtual #74                 // Method getInstanceCount:()Ljava/lang/Integer;
     492: aload_0
     493: invokevirtual #74                 // Method getInstanceCount:()Ljava/lang/Integer;
     496: invokevirtual #96                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     499: ifne          504
     502: iconst_0
     503: ireturn
     504: aload_2
     505: invokevirtual #76                 // Method getProductDescription:()Ljava/lang/String;
     508: ifnonnull     515
     511: iconst_1
     512: goto          516
     515: iconst_0
     516: aload_0
     517: invokevirtual #76                 // Method getProductDescription:()Ljava/lang/String;
     520: ifnonnull     527
     523: iconst_1
     524: goto          528
     527: iconst_0
     528: ixor
     529: ifeq          534
     532: iconst_0
     533: ireturn
     534: aload_2
     535: invokevirtual #76                 // Method getProductDescription:()Ljava/lang/String;
     538: ifnull        557
     541: aload_2
     542: invokevirtual #76                 // Method getProductDescription:()Ljava/lang/String;
     545: aload_0
     546: invokevirtual #76                 // Method getProductDescription:()Ljava/lang/String;
     549: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     552: ifne          557
     555: iconst_0
     556: ireturn
     557: aload_2
     558: invokevirtual #78                 // Method getState:()Ljava/lang/String;
     561: ifnonnull     568
     564: iconst_1
     565: goto          569
     568: iconst_0
     569: aload_0
     570: invokevirtual #78                 // Method getState:()Ljava/lang/String;
     573: ifnonnull     580
     576: iconst_1
     577: goto          581
     580: iconst_0
     581: ixor
     582: ifeq          587
     585: iconst_0
     586: ireturn
     587: aload_2
     588: invokevirtual #78                 // Method getState:()Ljava/lang/String;
     591: ifnull        610
     594: aload_2
     595: invokevirtual #78                 // Method getState:()Ljava/lang/String;
     598: aload_0
     599: invokevirtual #78                 // Method getState:()Ljava/lang/String;
     602: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     605: ifne          610
     608: iconst_0
     609: ireturn
     610: aload_2
     611: invokevirtual #80                 // Method getTags:()Ljava/util/List;
     614: ifnonnull     621
     617: iconst_1
     618: goto          622
     621: iconst_0
     622: aload_0
     623: invokevirtual #80                 // Method getTags:()Ljava/util/List;
     626: ifnonnull     633
     629: iconst_1
     630: goto          634
     633: iconst_0
     634: ixor
     635: ifeq          640
     638: iconst_0
     639: ireturn
     640: aload_2
     641: invokevirtual #80                 // Method getTags:()Ljava/util/List;
     644: ifnull        665
     647: aload_2
     648: invokevirtual #80                 // Method getTags:()Ljava/util/List;
     651: aload_0
     652: invokevirtual #80                 // Method getTags:()Ljava/util/List;
     655: invokeinterface #97,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     660: ifne          665
     663: iconst_0
     664: ireturn
     665: aload_2
     666: invokevirtual #82                 // Method getInstanceTenancy:()Ljava/lang/String;
     669: ifnonnull     676
     672: iconst_1
     673: goto          677
     676: iconst_0
     677: aload_0
     678: invokevirtual #82                 // Method getInstanceTenancy:()Ljava/lang/String;
     681: ifnonnull     688
     684: iconst_1
     685: goto          689
     688: iconst_0
     689: ixor
     690: ifeq          695
     693: iconst_0
     694: ireturn
     695: aload_2
     696: invokevirtual #82                 // Method getInstanceTenancy:()Ljava/lang/String;
     699: ifnull        718
     702: aload_2
     703: invokevirtual #82                 // Method getInstanceTenancy:()Ljava/lang/String;
     706: aload_0
     707: invokevirtual #82                 // Method getInstanceTenancy:()Ljava/lang/String;
     710: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     713: ifne          718
     716: iconst_0
     717: ireturn
     718: aload_2
     719: invokevirtual #84                 // Method getCurrencyCode:()Ljava/lang/String;
     722: ifnonnull     729
     725: iconst_1
     726: goto          730
     729: iconst_0
     730: aload_0
     731: invokevirtual #84                 // Method getCurrencyCode:()Ljava/lang/String;
     734: ifnonnull     741
     737: iconst_1
     738: goto          742
     741: iconst_0
     742: ixor
     743: ifeq          748
     746: iconst_0
     747: ireturn
     748: aload_2
     749: invokevirtual #84                 // Method getCurrencyCode:()Ljava/lang/String;
     752: ifnull        771
     755: aload_2
     756: invokevirtual #84                 // Method getCurrencyCode:()Ljava/lang/String;
     759: aload_0
     760: invokevirtual #84                 // Method getCurrencyCode:()Ljava/lang/String;
     763: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     766: ifne          771
     769: iconst_0
     770: ireturn
     771: aload_2
     772: invokevirtual #86                 // Method getOfferingType:()Ljava/lang/String;
     775: ifnonnull     782
     778: iconst_1
     779: goto          783
     782: iconst_0
     783: aload_0
     784: invokevirtual #86                 // Method getOfferingType:()Ljava/lang/String;
     787: ifnonnull     794
     790: iconst_1
     791: goto          795
     794: iconst_0
     795: ixor
     796: ifeq          801
     799: iconst_0
     800: ireturn
     801: aload_2
     802: invokevirtual #86                 // Method getOfferingType:()Ljava/lang/String;
     805: ifnull        824
     808: aload_2
     809: invokevirtual #86                 // Method getOfferingType:()Ljava/lang/String;
     812: aload_0
     813: invokevirtual #86                 // Method getOfferingType:()Ljava/lang/String;
     816: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     819: ifne          824
     822: iconst_0
     823: ireturn
     824: aload_2
     825: invokevirtual #88                 // Method getRecurringCharges:()Ljava/util/List;
     828: ifnonnull     835
     831: iconst_1
     832: goto          836
     835: iconst_0
     836: aload_0
     837: invokevirtual #88                 // Method getRecurringCharges:()Ljava/util/List;
     840: ifnonnull     847
     843: iconst_1
     844: goto          848
     847: iconst_0
     848: ixor
     849: ifeq          854
     852: iconst_0
     853: ireturn
     854: aload_2
     855: invokevirtual #88                 // Method getRecurringCharges:()Ljava/util/List;
     858: ifnull        879
     861: aload_2
     862: invokevirtual #88                 // Method getRecurringCharges:()Ljava/util/List;
     865: aload_0
     866: invokevirtual #88                 // Method getRecurringCharges:()Ljava/util/List;
     869: invokeinterface #97,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     874: ifne          879
     877: iconst_0
     878: ireturn
     879: iconst_1
     880: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #55                 // Method getReservedInstancesId:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #55                 // Method getReservedInstancesId:()Ljava/lang/String;
      24: invokevirtual #98                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #59                 // Method getInstanceType:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #59                 // Method getInstanceType:()Ljava/lang/String;
      48: invokevirtual #98                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #61                 // Method getAvailabilityZone:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #61                 // Method getAvailabilityZone:()Ljava/lang/String;
      72: invokevirtual #98                 // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #63                 // Method getStart:()Ljava/util/Date;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #63                 // Method getStart:()Ljava/util/Date;
      96: invokevirtual #99                 // Method java/util/Date.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #66                 // Method getEnd:()Ljava/util/Date;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #66                 // Method getEnd:()Ljava/util/Date;
     120: invokevirtual #99                 // Method java/util/Date.hashCode:()I
     123: iadd
     124: istore_2
     125: bipush        31
     127: iload_2
     128: imul
     129: aload_0
     130: invokevirtual #68                 // Method getDuration:()Ljava/lang/Long;
     133: ifnonnull     140
     136: iconst_0
     137: goto          147
     140: aload_0
     141: invokevirtual #68                 // Method getDuration:()Ljava/lang/Long;
     144: invokevirtual #100                // Method java/lang/Long.hashCode:()I
     147: iadd
     148: istore_2
     149: bipush        31
     151: iload_2
     152: imul
     153: aload_0
     154: invokevirtual #70                 // Method getUsagePrice:()Ljava/lang/Float;
     157: ifnonnull     164
     160: iconst_0
     161: goto          171
     164: aload_0
     165: invokevirtual #70                 // Method getUsagePrice:()Ljava/lang/Float;
     168: invokevirtual #101                // Method java/lang/Float.hashCode:()I
     171: iadd
     172: istore_2
     173: bipush        31
     175: iload_2
     176: imul
     177: aload_0
     178: invokevirtual #72                 // Method getFixedPrice:()Ljava/lang/Float;
     181: ifnonnull     188
     184: iconst_0
     185: goto          195
     188: aload_0
     189: invokevirtual #72                 // Method getFixedPrice:()Ljava/lang/Float;
     192: invokevirtual #101                // Method java/lang/Float.hashCode:()I
     195: iadd
     196: istore_2
     197: bipush        31
     199: iload_2
     200: imul
     201: aload_0
     202: invokevirtual #74                 // Method getInstanceCount:()Ljava/lang/Integer;
     205: ifnonnull     212
     208: iconst_0
     209: goto          219
     212: aload_0
     213: invokevirtual #74                 // Method getInstanceCount:()Ljava/lang/Integer;
     216: invokevirtual #102                // Method java/lang/Integer.hashCode:()I
     219: iadd
     220: istore_2
     221: bipush        31
     223: iload_2
     224: imul
     225: aload_0
     226: invokevirtual #76                 // Method getProductDescription:()Ljava/lang/String;
     229: ifnonnull     236
     232: iconst_0
     233: goto          243
     236: aload_0
     237: invokevirtual #76                 // Method getProductDescription:()Ljava/lang/String;
     240: invokevirtual #98                 // Method java/lang/String.hashCode:()I
     243: iadd
     244: istore_2
     245: bipush        31
     247: iload_2
     248: imul
     249: aload_0
     250: invokevirtual #78                 // Method getState:()Ljava/lang/String;
     253: ifnonnull     260
     256: iconst_0
     257: goto          267
     260: aload_0
     261: invokevirtual #78                 // Method getState:()Ljava/lang/String;
     264: invokevirtual #98                 // Method java/lang/String.hashCode:()I
     267: iadd
     268: istore_2
     269: bipush        31
     271: iload_2
     272: imul
     273: aload_0
     274: invokevirtual #80                 // Method getTags:()Ljava/util/List;
     277: ifnonnull     284
     280: iconst_0
     281: goto          293
     284: aload_0
     285: invokevirtual #80                 // Method getTags:()Ljava/util/List;
     288: invokeinterface #103,  1          // InterfaceMethod java/util/List.hashCode:()I
     293: iadd
     294: istore_2
     295: bipush        31
     297: iload_2
     298: imul
     299: aload_0
     300: invokevirtual #82                 // Method getInstanceTenancy:()Ljava/lang/String;
     303: ifnonnull     310
     306: iconst_0
     307: goto          317
     310: aload_0
     311: invokevirtual #82                 // Method getInstanceTenancy:()Ljava/lang/String;
     314: invokevirtual #98                 // Method java/lang/String.hashCode:()I
     317: iadd
     318: istore_2
     319: bipush        31
     321: iload_2
     322: imul
     323: aload_0
     324: invokevirtual #84                 // Method getCurrencyCode:()Ljava/lang/String;
     327: ifnonnull     334
     330: iconst_0
     331: goto          341
     334: aload_0
     335: invokevirtual #84                 // Method getCurrencyCode:()Ljava/lang/String;
     338: invokevirtual #98                 // Method java/lang/String.hashCode:()I
     341: iadd
     342: istore_2
     343: bipush        31
     345: iload_2
     346: imul
     347: aload_0
     348: invokevirtual #86                 // Method getOfferingType:()Ljava/lang/String;
     351: ifnonnull     358
     354: iconst_0
     355: goto          365
     358: aload_0
     359: invokevirtual #86                 // Method getOfferingType:()Ljava/lang/String;
     362: invokevirtual #98                 // Method java/lang/String.hashCode:()I
     365: iadd
     366: istore_2
     367: bipush        31
     369: iload_2
     370: imul
     371: aload_0
     372: invokevirtual #88                 // Method getRecurringCharges:()Ljava/util/List;
     375: ifnonnull     382
     378: iconst_0
     379: goto          391
     382: aload_0
     383: invokevirtual #88                 // Method getRecurringCharges:()Ljava/util/List;
     386: invokeinterface #103,  1          // InterfaceMethod java/util/List.hashCode:()I
     391: iadd
     392: istore_2
     393: iload_2
     394: ireturn

  public com.amazonaws.services.ec2.model.ReservedInstances clone();
    Code:
       0: aload_0
       1: invokespecial #104                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #91                 // class com/amazonaws/services/ec2/model/ReservedInstances
       7: areturn
       8: astore_1
       9: new           #106                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #107                // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #108                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #109                // Method clone:()Lcom/amazonaws/services/ec2/model/ReservedInstances;
       4: areturn
}
