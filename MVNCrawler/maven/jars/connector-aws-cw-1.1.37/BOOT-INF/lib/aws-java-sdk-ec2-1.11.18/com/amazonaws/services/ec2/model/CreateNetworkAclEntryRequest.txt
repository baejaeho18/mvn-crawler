Compiled from "CreateNetworkAclEntryRequest.java"
public class com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest extends com.amazonaws.AmazonWebServiceRequest implements java.io.Serializable, java.lang.Cloneable, com.amazonaws.services.ec2.model.DryRunSupportedRequest<com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest> {
  private java.lang.String networkAclId;

  private java.lang.Integer ruleNumber;

  private java.lang.String protocol;

  private java.lang.String ruleAction;

  private java.lang.Boolean egress;

  private java.lang.String cidrBlock;

  private com.amazonaws.services.ec2.model.IcmpTypeCode icmpTypeCode;

  private com.amazonaws.services.ec2.model.PortRange portRange;

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: return

  public void setNetworkAclId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field networkAclId:Ljava/lang/String;
       5: return

  public java.lang.String getNetworkAclId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field networkAclId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest withNetworkAclId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setNetworkAclId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRuleNumber(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field ruleNumber:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getRuleNumber();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ruleNumber:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest withRuleNumber(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setRuleNumber:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field protocol:Ljava/lang/String;
       5: return

  public java.lang.String getProtocol();
    Code:
       0: aload_0
       1: getfield      #6                  // Field protocol:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest withProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setProtocol:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRuleAction(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field ruleAction:Ljava/lang/String;
       5: return

  public java.lang.String getRuleAction();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ruleAction:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest withRuleAction(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setRuleAction:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRuleAction(com.amazonaws.services.ec2.model.RuleAction);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method com/amazonaws/services/ec2/model/RuleAction.toString:()Ljava/lang/String;
       5: putfield      #8                  // Field ruleAction:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest withRuleAction(com.amazonaws.services.ec2.model.RuleAction);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setRuleAction:(Lcom/amazonaws/services/ec2/model/RuleAction;)V
       5: aload_0
       6: areturn

  public void setEgress(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field egress:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getEgress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field egress:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest withEgress(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setEgress:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isEgress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field egress:Ljava/lang/Boolean;
       4: areturn

  public void setCidrBlock(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field cidrBlock:Ljava/lang/String;
       5: return

  public java.lang.String getCidrBlock();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cidrBlock:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest withCidrBlock(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setCidrBlock:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setIcmpTypeCode(com.amazonaws.services.ec2.model.IcmpTypeCode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field icmpTypeCode:Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
       5: return

  public com.amazonaws.services.ec2.model.IcmpTypeCode getIcmpTypeCode();
    Code:
       0: aload_0
       1: getfield      #16                 // Field icmpTypeCode:Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
       4: areturn

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest withIcmpTypeCode(com.amazonaws.services.ec2.model.IcmpTypeCode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setIcmpTypeCode:(Lcom/amazonaws/services/ec2/model/IcmpTypeCode;)V
       5: aload_0
       6: areturn

  public void setPortRange(com.amazonaws.services.ec2.model.PortRange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field portRange:Lcom/amazonaws/services/ec2/model/PortRange;
       5: return

  public com.amazonaws.services.ec2.model.PortRange getPortRange();
    Code:
       0: aload_0
       1: getfield      #18                 // Field portRange:Lcom/amazonaws/services/ec2/model/PortRange;
       4: areturn

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest withPortRange(com.amazonaws.services.ec2.model.PortRange);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method setPortRange:(Lcom/amazonaws/services/ec2/model/PortRange;)V
       5: aload_0
       6: areturn

  public com.amazonaws.Request<com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest> getDryRunRequest();
    Code:
       0: new           #20                 // class com/amazonaws/services/ec2/model/transform/CreateNetworkAclEntryRequestMarshaller
       3: dup
       4: invokespecial #21                 // Method com/amazonaws/services/ec2/model/transform/CreateNetworkAclEntryRequestMarshaller."<init>":()V
       7: aload_0
       8: invokevirtual #22                 // Method com/amazonaws/services/ec2/model/transform/CreateNetworkAclEntryRequestMarshaller.marshall:(Lcom/amazonaws/services/ec2/model/CreateNetworkAclEntryRequest;)Lcom/amazonaws/Request;
      11: astore_1
      12: aload_1
      13: ldc           #23                 // String DryRun
      15: iconst_1
      16: invokestatic  #24                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      19: invokeinterface #25,  3           // InterfaceMethod com/amazonaws/Request.addParameter:(Ljava/lang/String;Ljava/lang/String;)V
      24: aload_1
      25: areturn

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #28                 // String {
      11: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #30                 // Method getNetworkAclId:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #26                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #31                 // String NetworkAclId:
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #30                 // Method getNetworkAclId:()Ljava/lang/String;
      39: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #32                 // String ,
      44: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #34                 // Method getRuleNumber:()Ljava/lang/Integer;
      58: ifnull        93
      61: aload_1
      62: new           #26                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #35                 // String RuleNumber:
      71: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #34                 // Method getRuleNumber:()Ljava/lang/Integer;
      78: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #32                 // String ,
      83: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #37                 // Method getProtocol:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #26                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #38                 // String Protocol:
     110: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #37                 // Method getProtocol:()Ljava/lang/String;
     117: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #32                 // String ,
     122: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #39                 // Method getRuleAction:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #26                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #40                 // String RuleAction:
     149: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #39                 // Method getRuleAction:()Ljava/lang/String;
     156: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #32                 // String ,
     161: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #41                 // Method getEgress:()Ljava/lang/Boolean;
     175: ifnull        210
     178: aload_1
     179: new           #26                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #42                 // String Egress:
     188: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #41                 // Method getEgress:()Ljava/lang/Boolean;
     195: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     198: ldc           #32                 // String ,
     200: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #43                 // Method getCidrBlock:()Ljava/lang/String;
     214: ifnull        249
     217: aload_1
     218: new           #26                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #44                 // String CidrBlock:
     227: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #43                 // Method getCidrBlock:()Ljava/lang/String;
     234: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: ldc           #32                 // String ,
     239: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #45                 // Method getIcmpTypeCode:()Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
     253: ifnull        288
     256: aload_1
     257: new           #26                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #46                 // String IcmpTypeCode:
     266: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #45                 // Method getIcmpTypeCode:()Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
     273: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #32                 // String ,
     278: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #47                 // Method getPortRange:()Lcom/amazonaws/services/ec2/model/PortRange;
     292: ifnull        322
     295: aload_1
     296: new           #26                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #48                 // String PortRange:
     305: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #47                 // Method getPortRange:()Lcom/amazonaws/services/ec2/model/PortRange;
     312: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     318: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     321: pop
     322: aload_1
     323: ldc           #49                 // String }
     325: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     328: pop
     329: aload_1
     330: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     333: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #50                 // class com/amazonaws/services/ec2/model/CreateNetworkAclEntryRequest
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #50                 // class com/amazonaws/services/ec2/model/CreateNetworkAclEntryRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #30                 // Method getNetworkAclId:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #30                 // Method getNetworkAclId:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #30                 // Method getNetworkAclId:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #30                 // Method getNetworkAclId:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #30                 // Method getNetworkAclId:()Ljava/lang/String;
      72: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #34                 // Method getRuleNumber:()Ljava/lang/Integer;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #34                 // Method getRuleNumber:()Ljava/lang/Integer;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #34                 // Method getRuleNumber:()Ljava/lang/Integer;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #34                 // Method getRuleNumber:()Ljava/lang/Integer;
     121: aload_0
     122: invokevirtual #34                 // Method getRuleNumber:()Ljava/lang/Integer;
     125: invokevirtual #52                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #37                 // Method getProtocol:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #37                 // Method getProtocol:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #37                 // Method getProtocol:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #37                 // Method getProtocol:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #37                 // Method getProtocol:()Ljava/lang/String;
     178: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #39                 // Method getRuleAction:()Ljava/lang/String;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #39                 // Method getRuleAction:()Ljava/lang/String;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #39                 // Method getRuleAction:()Ljava/lang/String;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #39                 // Method getRuleAction:()Ljava/lang/String;
     227: aload_0
     228: invokevirtual #39                 // Method getRuleAction:()Ljava/lang/String;
     231: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #41                 // Method getEgress:()Ljava/lang/Boolean;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #41                 // Method getEgress:()Ljava/lang/Boolean;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #41                 // Method getEgress:()Ljava/lang/Boolean;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #41                 // Method getEgress:()Ljava/lang/Boolean;
     280: aload_0
     281: invokevirtual #41                 // Method getEgress:()Ljava/lang/Boolean;
     284: invokevirtual #53                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload_2
     293: invokevirtual #43                 // Method getCidrBlock:()Ljava/lang/String;
     296: ifnonnull     303
     299: iconst_1
     300: goto          304
     303: iconst_0
     304: aload_0
     305: invokevirtual #43                 // Method getCidrBlock:()Ljava/lang/String;
     308: ifnonnull     315
     311: iconst_1
     312: goto          316
     315: iconst_0
     316: ixor
     317: ifeq          322
     320: iconst_0
     321: ireturn
     322: aload_2
     323: invokevirtual #43                 // Method getCidrBlock:()Ljava/lang/String;
     326: ifnull        345
     329: aload_2
     330: invokevirtual #43                 // Method getCidrBlock:()Ljava/lang/String;
     333: aload_0
     334: invokevirtual #43                 // Method getCidrBlock:()Ljava/lang/String;
     337: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     340: ifne          345
     343: iconst_0
     344: ireturn
     345: aload_2
     346: invokevirtual #45                 // Method getIcmpTypeCode:()Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
     349: ifnonnull     356
     352: iconst_1
     353: goto          357
     356: iconst_0
     357: aload_0
     358: invokevirtual #45                 // Method getIcmpTypeCode:()Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
     361: ifnonnull     368
     364: iconst_1
     365: goto          369
     368: iconst_0
     369: ixor
     370: ifeq          375
     373: iconst_0
     374: ireturn
     375: aload_2
     376: invokevirtual #45                 // Method getIcmpTypeCode:()Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
     379: ifnull        398
     382: aload_2
     383: invokevirtual #45                 // Method getIcmpTypeCode:()Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
     386: aload_0
     387: invokevirtual #45                 // Method getIcmpTypeCode:()Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
     390: invokevirtual #54                 // Method com/amazonaws/services/ec2/model/IcmpTypeCode.equals:(Ljava/lang/Object;)Z
     393: ifne          398
     396: iconst_0
     397: ireturn
     398: aload_2
     399: invokevirtual #47                 // Method getPortRange:()Lcom/amazonaws/services/ec2/model/PortRange;
     402: ifnonnull     409
     405: iconst_1
     406: goto          410
     409: iconst_0
     410: aload_0
     411: invokevirtual #47                 // Method getPortRange:()Lcom/amazonaws/services/ec2/model/PortRange;
     414: ifnonnull     421
     417: iconst_1
     418: goto          422
     421: iconst_0
     422: ixor
     423: ifeq          428
     426: iconst_0
     427: ireturn
     428: aload_2
     429: invokevirtual #47                 // Method getPortRange:()Lcom/amazonaws/services/ec2/model/PortRange;
     432: ifnull        451
     435: aload_2
     436: invokevirtual #47                 // Method getPortRange:()Lcom/amazonaws/services/ec2/model/PortRange;
     439: aload_0
     440: invokevirtual #47                 // Method getPortRange:()Lcom/amazonaws/services/ec2/model/PortRange;
     443: invokevirtual #55                 // Method com/amazonaws/services/ec2/model/PortRange.equals:(Ljava/lang/Object;)Z
     446: ifne          451
     449: iconst_0
     450: ireturn
     451: iconst_1
     452: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #30                 // Method getNetworkAclId:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #30                 // Method getNetworkAclId:()Ljava/lang/String;
      24: invokevirtual #56                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #34                 // Method getRuleNumber:()Ljava/lang/Integer;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #34                 // Method getRuleNumber:()Ljava/lang/Integer;
      48: invokevirtual #57                 // Method java/lang/Integer.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #37                 // Method getProtocol:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #37                 // Method getProtocol:()Ljava/lang/String;
      72: invokevirtual #56                 // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #39                 // Method getRuleAction:()Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #39                 // Method getRuleAction:()Ljava/lang/String;
      96: invokevirtual #56                 // Method java/lang/String.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #41                 // Method getEgress:()Ljava/lang/Boolean;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #41                 // Method getEgress:()Ljava/lang/Boolean;
     120: invokevirtual #58                 // Method java/lang/Boolean.hashCode:()I
     123: iadd
     124: istore_2
     125: bipush        31
     127: iload_2
     128: imul
     129: aload_0
     130: invokevirtual #43                 // Method getCidrBlock:()Ljava/lang/String;
     133: ifnonnull     140
     136: iconst_0
     137: goto          147
     140: aload_0
     141: invokevirtual #43                 // Method getCidrBlock:()Ljava/lang/String;
     144: invokevirtual #56                 // Method java/lang/String.hashCode:()I
     147: iadd
     148: istore_2
     149: bipush        31
     151: iload_2
     152: imul
     153: aload_0
     154: invokevirtual #45                 // Method getIcmpTypeCode:()Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
     157: ifnonnull     164
     160: iconst_0
     161: goto          171
     164: aload_0
     165: invokevirtual #45                 // Method getIcmpTypeCode:()Lcom/amazonaws/services/ec2/model/IcmpTypeCode;
     168: invokevirtual #59                 // Method com/amazonaws/services/ec2/model/IcmpTypeCode.hashCode:()I
     171: iadd
     172: istore_2
     173: bipush        31
     175: iload_2
     176: imul
     177: aload_0
     178: invokevirtual #47                 // Method getPortRange:()Lcom/amazonaws/services/ec2/model/PortRange;
     181: ifnonnull     188
     184: iconst_0
     185: goto          195
     188: aload_0
     189: invokevirtual #47                 // Method getPortRange:()Lcom/amazonaws/services/ec2/model/PortRange;
     192: invokevirtual #60                 // Method com/amazonaws/services/ec2/model/PortRange.hashCode:()I
     195: iadd
     196: istore_2
     197: iload_2
     198: ireturn

  public com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest clone();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method com/amazonaws/AmazonWebServiceRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
       4: checkcast     #50                 // class com/amazonaws/services/ec2/model/CreateNetworkAclEntryRequest
       7: areturn

  public com.amazonaws.AmazonWebServiceRequest clone();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method clone:()Lcom/amazonaws/services/ec2/model/CreateNetworkAclEntryRequest;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method clone:()Lcom/amazonaws/services/ec2/model/CreateNetworkAclEntryRequest;
       4: areturn
}
