Compiled from "VpnConnection.java"
public class com.amazonaws.services.ec2.model.VpnConnection implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String vpnConnectionId;

  private java.lang.String state;

  private java.lang.String customerGatewayConfiguration;

  private java.lang.String type;

  private java.lang.String customerGatewayId;

  private java.lang.String vpnGatewayId;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.Tag> tags;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.VgwTelemetry> vgwTelemetry;

  private com.amazonaws.services.ec2.model.VpnConnectionOptions options;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.VpnStaticRoute> routes;

  public com.amazonaws.services.ec2.model.VpnConnection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setVpnConnectionId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field vpnConnectionId:Ljava/lang/String;
       5: return

  public java.lang.String getVpnConnectionId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field vpnConnectionId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withVpnConnectionId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setVpnConnectionId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setState(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field state:Ljava/lang/String;
       5: return

  public java.lang.String getState();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withState(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setState:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setState(com.amazonaws.services.ec2.model.VpnState);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method com/amazonaws/services/ec2/model/VpnState.toString:()Ljava/lang/String;
       5: putfield      #4                  // Field state:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.VpnConnection withState(com.amazonaws.services.ec2.model.VpnState);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setState:(Lcom/amazonaws/services/ec2/model/VpnState;)V
       5: aload_0
       6: areturn

  public void setCustomerGatewayConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field customerGatewayConfiguration:Ljava/lang/String;
       5: return

  public java.lang.String getCustomerGatewayConfiguration();
    Code:
       0: aload_0
       1: getfield      #8                  // Field customerGatewayConfiguration:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withCustomerGatewayConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setCustomerGatewayConfiguration:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field type:Ljava/lang/String;
       5: return

  public java.lang.String getType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field type:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setType(com.amazonaws.services.ec2.model.GatewayType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method com/amazonaws/services/ec2/model/GatewayType.toString:()Ljava/lang/String;
       5: putfield      #10                 // Field type:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.VpnConnection withType(com.amazonaws.services.ec2.model.GatewayType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setType:(Lcom/amazonaws/services/ec2/model/GatewayType;)V
       5: aload_0
       6: areturn

  public void setCustomerGatewayId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field customerGatewayId:Ljava/lang/String;
       5: return

  public java.lang.String getCustomerGatewayId();
    Code:
       0: aload_0
       1: getfield      #14                 // Field customerGatewayId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withCustomerGatewayId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setCustomerGatewayId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setVpnGatewayId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field vpnGatewayId:Ljava/lang/String;
       5: return

  public java.lang.String getVpnGatewayId();
    Code:
       0: aload_0
       1: getfield      #16                 // Field vpnGatewayId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withVpnGatewayId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setVpnGatewayId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.Tag> getTags();
    Code:
       0: aload_0
       1: getfield      #18                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #18                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #18                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setTags(java.util.Collection<com.amazonaws.services.ec2.model.Tag>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #18                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #19                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #18                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.VpnConnection withTags(com.amazonaws.services.ec2.model.Tag...);
    Code:
       0: aload_0
       1: getfield      #18                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #22                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #23                 // Method setTags:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #18                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #24                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withTags(java.util.Collection<com.amazonaws.services.ec2.model.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method setTags:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.VgwTelemetry> getVgwTelemetry();
    Code:
       0: aload_0
       1: getfield      #25                 // Field vgwTelemetry:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #25                 // Field vgwTelemetry:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #25                 // Field vgwTelemetry:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setVgwTelemetry(java.util.Collection<com.amazonaws.services.ec2.model.VgwTelemetry>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #25                 // Field vgwTelemetry:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #19                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #25                 // Field vgwTelemetry:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.VpnConnection withVgwTelemetry(com.amazonaws.services.ec2.model.VgwTelemetry...);
    Code:
       0: aload_0
       1: getfield      #25                 // Field vgwTelemetry:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #22                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #26                 // Method setVgwTelemetry:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #25                 // Field vgwTelemetry:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #24                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withVgwTelemetry(java.util.Collection<com.amazonaws.services.ec2.model.VgwTelemetry>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setVgwTelemetry:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setOptions(com.amazonaws.services.ec2.model.VpnConnectionOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field options:Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
       5: return

  public com.amazonaws.services.ec2.model.VpnConnectionOptions getOptions();
    Code:
       0: aload_0
       1: getfield      #27                 // Field options:Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
       4: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withOptions(com.amazonaws.services.ec2.model.VpnConnectionOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setOptions:(Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.VpnStaticRoute> getRoutes();
    Code:
       0: aload_0
       1: getfield      #29                 // Field routes:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #29                 // Field routes:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #29                 // Field routes:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setRoutes(java.util.Collection<com.amazonaws.services.ec2.model.VpnStaticRoute>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #29                 // Field routes:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #19                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #29                 // Field routes:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.VpnConnection withRoutes(com.amazonaws.services.ec2.model.VpnStaticRoute...);
    Code:
       0: aload_0
       1: getfield      #29                 // Field routes:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #22                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #30                 // Method setRoutes:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #29                 // Field routes:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #24                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.VpnConnection withRoutes(java.util.Collection<com.amazonaws.services.ec2.model.VpnStaticRoute>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setRoutes:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #33                 // String {
      11: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #35                 // Method getVpnConnectionId:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #31                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #36                 // String VpnConnectionId:
      32: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #35                 // Method getVpnConnectionId:()Ljava/lang/String;
      39: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #37                 // String ,
      44: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #39                 // Method getState:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #31                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #40                 // String State:
      71: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #39                 // Method getState:()Ljava/lang/String;
      78: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #37                 // String ,
      83: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #41                 // Method getCustomerGatewayConfiguration:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #31                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #42                 // String CustomerGatewayConfiguration:
     110: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #41                 // Method getCustomerGatewayConfiguration:()Ljava/lang/String;
     117: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #37                 // String ,
     122: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #43                 // Method getType:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #31                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #44                 // String Type:
     149: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #43                 // Method getType:()Ljava/lang/String;
     156: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #37                 // String ,
     161: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #45                 // Method getCustomerGatewayId:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #31                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #46                 // String CustomerGatewayId:
     188: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #45                 // Method getCustomerGatewayId:()Ljava/lang/String;
     195: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #37                 // String ,
     200: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #47                 // Method getVpnGatewayId:()Ljava/lang/String;
     214: ifnull        249
     217: aload_1
     218: new           #31                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #48                 // String VpnGatewayId:
     227: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #47                 // Method getVpnGatewayId:()Ljava/lang/String;
     234: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: ldc           #37                 // String ,
     239: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #49                 // Method getTags:()Ljava/util/List;
     253: ifnull        288
     256: aload_1
     257: new           #31                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #50                 // String Tags:
     266: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #49                 // Method getTags:()Ljava/util/List;
     273: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #37                 // String ,
     278: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #52                 // Method getVgwTelemetry:()Ljava/util/List;
     292: ifnull        327
     295: aload_1
     296: new           #31                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #53                 // String VgwTelemetry:
     305: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #52                 // Method getVgwTelemetry:()Ljava/util/List;
     312: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #37                 // String ,
     317: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #54                 // Method getOptions:()Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
     331: ifnull        366
     334: aload_1
     335: new           #31                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #55                 // String Options:
     344: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #54                 // Method getOptions:()Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
     351: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     354: ldc           #37                 // String ,
     356: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #56                 // Method getRoutes:()Ljava/util/List;
     370: ifnull        400
     373: aload_1
     374: new           #31                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #57                 // String Routes:
     383: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #56                 // Method getRoutes:()Ljava/util/List;
     390: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     393: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     396: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     399: pop
     400: aload_1
     401: ldc           #58                 // String }
     403: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     406: pop
     407: aload_1
     408: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     411: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #59                 // class com/amazonaws/services/ec2/model/VpnConnection
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #59                 // class com/amazonaws/services/ec2/model/VpnConnection
      26: astore_2
      27: aload_2
      28: invokevirtual #35                 // Method getVpnConnectionId:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #35                 // Method getVpnConnectionId:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #35                 // Method getVpnConnectionId:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #35                 // Method getVpnConnectionId:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #35                 // Method getVpnConnectionId:()Ljava/lang/String;
      72: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #39                 // Method getState:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #39                 // Method getState:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #39                 // Method getState:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #39                 // Method getState:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #39                 // Method getState:()Ljava/lang/String;
     125: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #41                 // Method getCustomerGatewayConfiguration:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #41                 // Method getCustomerGatewayConfiguration:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #41                 // Method getCustomerGatewayConfiguration:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #41                 // Method getCustomerGatewayConfiguration:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #41                 // Method getCustomerGatewayConfiguration:()Ljava/lang/String;
     178: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #43                 // Method getType:()Ljava/lang/String;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #43                 // Method getType:()Ljava/lang/String;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #43                 // Method getType:()Ljava/lang/String;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #43                 // Method getType:()Ljava/lang/String;
     227: aload_0
     228: invokevirtual #43                 // Method getType:()Ljava/lang/String;
     231: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #45                 // Method getCustomerGatewayId:()Ljava/lang/String;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #45                 // Method getCustomerGatewayId:()Ljava/lang/String;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #45                 // Method getCustomerGatewayId:()Ljava/lang/String;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #45                 // Method getCustomerGatewayId:()Ljava/lang/String;
     280: aload_0
     281: invokevirtual #45                 // Method getCustomerGatewayId:()Ljava/lang/String;
     284: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload_2
     293: invokevirtual #47                 // Method getVpnGatewayId:()Ljava/lang/String;
     296: ifnonnull     303
     299: iconst_1
     300: goto          304
     303: iconst_0
     304: aload_0
     305: invokevirtual #47                 // Method getVpnGatewayId:()Ljava/lang/String;
     308: ifnonnull     315
     311: iconst_1
     312: goto          316
     315: iconst_0
     316: ixor
     317: ifeq          322
     320: iconst_0
     321: ireturn
     322: aload_2
     323: invokevirtual #47                 // Method getVpnGatewayId:()Ljava/lang/String;
     326: ifnull        345
     329: aload_2
     330: invokevirtual #47                 // Method getVpnGatewayId:()Ljava/lang/String;
     333: aload_0
     334: invokevirtual #47                 // Method getVpnGatewayId:()Ljava/lang/String;
     337: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     340: ifne          345
     343: iconst_0
     344: ireturn
     345: aload_2
     346: invokevirtual #49                 // Method getTags:()Ljava/util/List;
     349: ifnonnull     356
     352: iconst_1
     353: goto          357
     356: iconst_0
     357: aload_0
     358: invokevirtual #49                 // Method getTags:()Ljava/util/List;
     361: ifnonnull     368
     364: iconst_1
     365: goto          369
     368: iconst_0
     369: ixor
     370: ifeq          375
     373: iconst_0
     374: ireturn
     375: aload_2
     376: invokevirtual #49                 // Method getTags:()Ljava/util/List;
     379: ifnull        400
     382: aload_2
     383: invokevirtual #49                 // Method getTags:()Ljava/util/List;
     386: aload_0
     387: invokevirtual #49                 // Method getTags:()Ljava/util/List;
     390: invokeinterface #61,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     395: ifne          400
     398: iconst_0
     399: ireturn
     400: aload_2
     401: invokevirtual #52                 // Method getVgwTelemetry:()Ljava/util/List;
     404: ifnonnull     411
     407: iconst_1
     408: goto          412
     411: iconst_0
     412: aload_0
     413: invokevirtual #52                 // Method getVgwTelemetry:()Ljava/util/List;
     416: ifnonnull     423
     419: iconst_1
     420: goto          424
     423: iconst_0
     424: ixor
     425: ifeq          430
     428: iconst_0
     429: ireturn
     430: aload_2
     431: invokevirtual #52                 // Method getVgwTelemetry:()Ljava/util/List;
     434: ifnull        455
     437: aload_2
     438: invokevirtual #52                 // Method getVgwTelemetry:()Ljava/util/List;
     441: aload_0
     442: invokevirtual #52                 // Method getVgwTelemetry:()Ljava/util/List;
     445: invokeinterface #61,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     450: ifne          455
     453: iconst_0
     454: ireturn
     455: aload_2
     456: invokevirtual #54                 // Method getOptions:()Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
     459: ifnonnull     466
     462: iconst_1
     463: goto          467
     466: iconst_0
     467: aload_0
     468: invokevirtual #54                 // Method getOptions:()Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
     471: ifnonnull     478
     474: iconst_1
     475: goto          479
     478: iconst_0
     479: ixor
     480: ifeq          485
     483: iconst_0
     484: ireturn
     485: aload_2
     486: invokevirtual #54                 // Method getOptions:()Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
     489: ifnull        508
     492: aload_2
     493: invokevirtual #54                 // Method getOptions:()Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
     496: aload_0
     497: invokevirtual #54                 // Method getOptions:()Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
     500: invokevirtual #62                 // Method com/amazonaws/services/ec2/model/VpnConnectionOptions.equals:(Ljava/lang/Object;)Z
     503: ifne          508
     506: iconst_0
     507: ireturn
     508: aload_2
     509: invokevirtual #56                 // Method getRoutes:()Ljava/util/List;
     512: ifnonnull     519
     515: iconst_1
     516: goto          520
     519: iconst_0
     520: aload_0
     521: invokevirtual #56                 // Method getRoutes:()Ljava/util/List;
     524: ifnonnull     531
     527: iconst_1
     528: goto          532
     531: iconst_0
     532: ixor
     533: ifeq          538
     536: iconst_0
     537: ireturn
     538: aload_2
     539: invokevirtual #56                 // Method getRoutes:()Ljava/util/List;
     542: ifnull        563
     545: aload_2
     546: invokevirtual #56                 // Method getRoutes:()Ljava/util/List;
     549: aload_0
     550: invokevirtual #56                 // Method getRoutes:()Ljava/util/List;
     553: invokeinterface #61,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     558: ifne          563
     561: iconst_0
     562: ireturn
     563: iconst_1
     564: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #35                 // Method getVpnConnectionId:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #35                 // Method getVpnConnectionId:()Ljava/lang/String;
      24: invokevirtual #63                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #39                 // Method getState:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #39                 // Method getState:()Ljava/lang/String;
      48: invokevirtual #63                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #41                 // Method getCustomerGatewayConfiguration:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #41                 // Method getCustomerGatewayConfiguration:()Ljava/lang/String;
      72: invokevirtual #63                 // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #43                 // Method getType:()Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #43                 // Method getType:()Ljava/lang/String;
      96: invokevirtual #63                 // Method java/lang/String.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #45                 // Method getCustomerGatewayId:()Ljava/lang/String;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #45                 // Method getCustomerGatewayId:()Ljava/lang/String;
     120: invokevirtual #63                 // Method java/lang/String.hashCode:()I
     123: iadd
     124: istore_2
     125: bipush        31
     127: iload_2
     128: imul
     129: aload_0
     130: invokevirtual #47                 // Method getVpnGatewayId:()Ljava/lang/String;
     133: ifnonnull     140
     136: iconst_0
     137: goto          147
     140: aload_0
     141: invokevirtual #47                 // Method getVpnGatewayId:()Ljava/lang/String;
     144: invokevirtual #63                 // Method java/lang/String.hashCode:()I
     147: iadd
     148: istore_2
     149: bipush        31
     151: iload_2
     152: imul
     153: aload_0
     154: invokevirtual #49                 // Method getTags:()Ljava/util/List;
     157: ifnonnull     164
     160: iconst_0
     161: goto          173
     164: aload_0
     165: invokevirtual #49                 // Method getTags:()Ljava/util/List;
     168: invokeinterface #64,  1           // InterfaceMethod java/util/List.hashCode:()I
     173: iadd
     174: istore_2
     175: bipush        31
     177: iload_2
     178: imul
     179: aload_0
     180: invokevirtual #52                 // Method getVgwTelemetry:()Ljava/util/List;
     183: ifnonnull     190
     186: iconst_0
     187: goto          199
     190: aload_0
     191: invokevirtual #52                 // Method getVgwTelemetry:()Ljava/util/List;
     194: invokeinterface #64,  1           // InterfaceMethod java/util/List.hashCode:()I
     199: iadd
     200: istore_2
     201: bipush        31
     203: iload_2
     204: imul
     205: aload_0
     206: invokevirtual #54                 // Method getOptions:()Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
     209: ifnonnull     216
     212: iconst_0
     213: goto          223
     216: aload_0
     217: invokevirtual #54                 // Method getOptions:()Lcom/amazonaws/services/ec2/model/VpnConnectionOptions;
     220: invokevirtual #65                 // Method com/amazonaws/services/ec2/model/VpnConnectionOptions.hashCode:()I
     223: iadd
     224: istore_2
     225: bipush        31
     227: iload_2
     228: imul
     229: aload_0
     230: invokevirtual #56                 // Method getRoutes:()Ljava/util/List;
     233: ifnonnull     240
     236: iconst_0
     237: goto          249
     240: aload_0
     241: invokevirtual #56                 // Method getRoutes:()Ljava/util/List;
     244: invokeinterface #64,  1           // InterfaceMethod java/util/List.hashCode:()I
     249: iadd
     250: istore_2
     251: iload_2
     252: ireturn

  public com.amazonaws.services.ec2.model.VpnConnection clone();
    Code:
       0: aload_0
       1: invokespecial #66                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #59                 // class com/amazonaws/services/ec2/model/VpnConnection
       7: areturn
       8: astore_1
       9: new           #68                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #69                 // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #70                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method clone:()Lcom/amazonaws/services/ec2/model/VpnConnection;
       4: areturn
}
