Compiled from "TimestampFormatRequestHandler.java"
public final class com.amazonaws.services.ec2.model.transform.TimestampFormatRequestHandler extends com.amazonaws.handlers.RequestHandler2 {
  private static final java.util.regex.Pattern PATTERN;

  private static final java.lang.String START_TIME;

  private static final java.lang.String VALID_FROM;

  private static final java.lang.String VALID_UNTIL;

  public com.amazonaws.services.ec2.model.transform.TimestampFormatRequestHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/handlers/RequestHandler2."<init>":()V
       4: return

  public void beforeRequest(com.amazonaws.Request<?>);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod com/amazonaws/Request.getOriginalRequest:()Lcom/amazonaws/AmazonWebServiceRequest;
       6: astore_2
       7: aload_2
       8: instanceof    #3                  // class com/amazonaws/services/ec2/model/DescribeSpotFleetRequestHistoryRequest
      11: ifeq          86
      14: aload_1
      15: invokeinterface #4,  1            // InterfaceMethod com/amazonaws/Request.getParameters:()Ljava/util/Map;
      20: astore_3
      21: aload_3
      22: ldc           #6                  // String StartTime
      24: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #8                  // class java/util/List
      32: astore        4
      34: aload         4
      36: ifnull        83
      39: aload         4
      41: invokeinterface #9,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      46: ifne          83
      49: aload_3
      50: ldc           #6                  // String StartTime
      52: iconst_1
      53: anewarray     #10                 // class java/lang/String
      56: dup
      57: iconst_0
      58: aload_0
      59: aload         4
      61: iconst_0
      62: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      67: checkcast     #10                 // class java/lang/String
      70: invokespecial #12                 // Method sanitize:(Ljava/lang/String;)Ljava/lang/String;
      73: aastore
      74: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      77: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: goto          224
      86: aload_2
      87: instanceof    #15                 // class com/amazonaws/services/ec2/model/RequestSpotFleetRequest
      90: ifeq          224
      93: aload_1
      94: invokeinterface #4,  1            // InterfaceMethod com/amazonaws/Request.getParameters:()Ljava/util/Map;
      99: astore_3
     100: aload_3
     101: ldc           #16                 // String SpotFleetRequestConfig.ValidFrom
     103: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     108: checkcast     #8                  // class java/util/List
     111: astore        4
     113: aload_3
     114: ldc           #17                 // String SpotFleetRequestConfig.ValidUntil
     116: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     121: checkcast     #8                  // class java/util/List
     124: astore        5
     126: aload         4
     128: ifnull        175
     131: aload         4
     133: invokeinterface #9,  1            // InterfaceMethod java/util/List.isEmpty:()Z
     138: ifne          175
     141: aload_3
     142: ldc           #16                 // String SpotFleetRequestConfig.ValidFrom
     144: iconst_1
     145: anewarray     #10                 // class java/lang/String
     148: dup
     149: iconst_0
     150: aload_0
     151: aload         4
     153: iconst_0
     154: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     159: checkcast     #10                 // class java/lang/String
     162: invokespecial #12                 // Method sanitize:(Ljava/lang/String;)Ljava/lang/String;
     165: aastore
     166: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     169: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     174: pop
     175: aload         5
     177: ifnull        224
     180: aload         5
     182: invokeinterface #9,  1            // InterfaceMethod java/util/List.isEmpty:()Z
     187: ifne          224
     190: aload_3
     191: ldc           #17                 // String SpotFleetRequestConfig.ValidUntil
     193: iconst_1
     194: anewarray     #10                 // class java/lang/String
     197: dup
     198: iconst_0
     199: aload_0
     200: aload         5
     202: iconst_0
     203: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     208: checkcast     #10                 // class java/lang/String
     211: invokespecial #12                 // Method sanitize:(Ljava/lang/String;)Ljava/lang/String;
     214: aastore
     215: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     218: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     223: pop
     224: return

  private java.lang.String sanitize(java.lang.String);
    Code:
       0: getstatic     #18                 // Field PATTERN:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: ldc           #20                 // String Z
       9: invokevirtual #21                 // Method java/util/regex/Matcher.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public void afterResponse(com.amazonaws.Request<?>, com.amazonaws.Response<?>);
    Code:
       0: return

  public void afterError(com.amazonaws.Request<?>, com.amazonaws.Response<?>, java.lang.Exception);
    Code:
       0: return

  static {};
    Code:
       0: ldc           #22                 // String \\.\\d\\d\\dZ
       2: invokestatic  #23                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #18                 // Field PATTERN:Ljava/util/regex/Pattern;
       8: return
}
