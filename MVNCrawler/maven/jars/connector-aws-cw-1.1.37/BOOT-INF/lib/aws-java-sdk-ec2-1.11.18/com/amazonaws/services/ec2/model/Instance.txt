Compiled from "Instance.java"
public class com.amazonaws.services.ec2.model.Instance implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String instanceId;

  private java.lang.String imageId;

  private com.amazonaws.services.ec2.model.InstanceState state;

  private java.lang.String privateDnsName;

  private java.lang.String publicDnsName;

  private java.lang.String stateTransitionReason;

  private java.lang.String keyName;

  private java.lang.Integer amiLaunchIndex;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.ProductCode> productCodes;

  private java.lang.String instanceType;

  private java.util.Date launchTime;

  private com.amazonaws.services.ec2.model.Placement placement;

  private java.lang.String kernelId;

  private java.lang.String ramdiskId;

  private java.lang.String platform;

  private com.amazonaws.services.ec2.model.Monitoring monitoring;

  private java.lang.String subnetId;

  private java.lang.String vpcId;

  private java.lang.String privateIpAddress;

  private java.lang.String publicIpAddress;

  private com.amazonaws.services.ec2.model.StateReason stateReason;

  private java.lang.String architecture;

  private java.lang.String rootDeviceType;

  private java.lang.String rootDeviceName;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping> blockDeviceMappings;

  private java.lang.String virtualizationType;

  private java.lang.String instanceLifecycle;

  private java.lang.String spotInstanceRequestId;

  private java.lang.String clientToken;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.Tag> tags;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.GroupIdentifier> securityGroups;

  private java.lang.Boolean sourceDestCheck;

  private java.lang.String hypervisor;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.ec2.model.InstanceNetworkInterface> networkInterfaces;

  private com.amazonaws.services.ec2.model.IamInstanceProfile iamInstanceProfile;

  private java.lang.Boolean ebsOptimized;

  private java.lang.String sriovNetSupport;

  private java.lang.Boolean enaSupport;

  public com.amazonaws.services.ec2.model.Instance();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setInstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field instanceId:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field instanceId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withInstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setInstanceId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setImageId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field imageId:Ljava/lang/String;
       5: return

  public java.lang.String getImageId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field imageId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withImageId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setImageId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setState(com.amazonaws.services.ec2.model.InstanceState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field state:Lcom/amazonaws/services/ec2/model/InstanceState;
       5: return

  public com.amazonaws.services.ec2.model.InstanceState getState();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:Lcom/amazonaws/services/ec2/model/InstanceState;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withState(com.amazonaws.services.ec2.model.InstanceState);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setState:(Lcom/amazonaws/services/ec2/model/InstanceState;)V
       5: aload_0
       6: areturn

  public void setPrivateDnsName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field privateDnsName:Ljava/lang/String;
       5: return

  public java.lang.String getPrivateDnsName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field privateDnsName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withPrivateDnsName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setPrivateDnsName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPublicDnsName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field publicDnsName:Ljava/lang/String;
       5: return

  public java.lang.String getPublicDnsName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field publicDnsName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withPublicDnsName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setPublicDnsName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setStateTransitionReason(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field stateTransitionReason:Ljava/lang/String;
       5: return

  public java.lang.String getStateTransitionReason();
    Code:
       0: aload_0
       1: getfield      #12                 // Field stateTransitionReason:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withStateTransitionReason(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setStateTransitionReason:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field keyName:Ljava/lang/String;
       5: return

  public java.lang.String getKeyName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field keyName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setKeyName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setAmiLaunchIndex(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field amiLaunchIndex:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getAmiLaunchIndex();
    Code:
       0: aload_0
       1: getfield      #16                 // Field amiLaunchIndex:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withAmiLaunchIndex(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setAmiLaunchIndex:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.ProductCode> getProductCodes();
    Code:
       0: aload_0
       1: getfield      #18                 // Field productCodes:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #18                 // Field productCodes:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #18                 // Field productCodes:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setProductCodes(java.util.Collection<com.amazonaws.services.ec2.model.ProductCode>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #18                 // Field productCodes:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #19                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #18                 // Field productCodes:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.Instance withProductCodes(com.amazonaws.services.ec2.model.ProductCode...);
    Code:
       0: aload_0
       1: getfield      #18                 // Field productCodes:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #22                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #23                 // Method setProductCodes:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #18                 // Field productCodes:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #24                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.Instance withProductCodes(java.util.Collection<com.amazonaws.services.ec2.model.ProductCode>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method setProductCodes:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field instanceType:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceType();
    Code:
       0: aload_0
       1: getfield      #25                 // Field instanceType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setInstanceType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceType(com.amazonaws.services.ec2.model.InstanceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method com/amazonaws/services/ec2/model/InstanceType.toString:()Ljava/lang/String;
       5: putfield      #25                 // Field instanceType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.Instance withInstanceType(com.amazonaws.services.ec2.model.InstanceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setInstanceType:(Lcom/amazonaws/services/ec2/model/InstanceType;)V
       5: aload_0
       6: areturn

  public void setLaunchTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field launchTime:Ljava/util/Date;
       5: return

  public java.util.Date getLaunchTime();
    Code:
       0: aload_0
       1: getfield      #29                 // Field launchTime:Ljava/util/Date;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withLaunchTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setLaunchTime:(Ljava/util/Date;)V
       5: aload_0
       6: areturn

  public void setPlacement(com.amazonaws.services.ec2.model.Placement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field placement:Lcom/amazonaws/services/ec2/model/Placement;
       5: return

  public com.amazonaws.services.ec2.model.Placement getPlacement();
    Code:
       0: aload_0
       1: getfield      #31                 // Field placement:Lcom/amazonaws/services/ec2/model/Placement;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withPlacement(com.amazonaws.services.ec2.model.Placement);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method setPlacement:(Lcom/amazonaws/services/ec2/model/Placement;)V
       5: aload_0
       6: areturn

  public void setKernelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field kernelId:Ljava/lang/String;
       5: return

  public java.lang.String getKernelId();
    Code:
       0: aload_0
       1: getfield      #33                 // Field kernelId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withKernelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method setKernelId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRamdiskId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field ramdiskId:Ljava/lang/String;
       5: return

  public java.lang.String getRamdiskId();
    Code:
       0: aload_0
       1: getfield      #35                 // Field ramdiskId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withRamdiskId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setRamdiskId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPlatform(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field platform:Ljava/lang/String;
       5: return

  public java.lang.String getPlatform();
    Code:
       0: aload_0
       1: getfield      #37                 // Field platform:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withPlatform(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setPlatform:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPlatform(com.amazonaws.services.ec2.model.PlatformValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method com/amazonaws/services/ec2/model/PlatformValues.toString:()Ljava/lang/String;
       5: putfield      #37                 // Field platform:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.Instance withPlatform(com.amazonaws.services.ec2.model.PlatformValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setPlatform:(Lcom/amazonaws/services/ec2/model/PlatformValues;)V
       5: aload_0
       6: areturn

  public void setMonitoring(com.amazonaws.services.ec2.model.Monitoring);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field monitoring:Lcom/amazonaws/services/ec2/model/Monitoring;
       5: return

  public com.amazonaws.services.ec2.model.Monitoring getMonitoring();
    Code:
       0: aload_0
       1: getfield      #41                 // Field monitoring:Lcom/amazonaws/services/ec2/model/Monitoring;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withMonitoring(com.amazonaws.services.ec2.model.Monitoring);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method setMonitoring:(Lcom/amazonaws/services/ec2/model/Monitoring;)V
       5: aload_0
       6: areturn

  public void setSubnetId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field subnetId:Ljava/lang/String;
       5: return

  public java.lang.String getSubnetId();
    Code:
       0: aload_0
       1: getfield      #43                 // Field subnetId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withSubnetId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setSubnetId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setVpcId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field vpcId:Ljava/lang/String;
       5: return

  public java.lang.String getVpcId();
    Code:
       0: aload_0
       1: getfield      #45                 // Field vpcId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withVpcId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setVpcId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPrivateIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field privateIpAddress:Ljava/lang/String;
       5: return

  public java.lang.String getPrivateIpAddress();
    Code:
       0: aload_0
       1: getfield      #47                 // Field privateIpAddress:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withPrivateIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method setPrivateIpAddress:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPublicIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field publicIpAddress:Ljava/lang/String;
       5: return

  public java.lang.String getPublicIpAddress();
    Code:
       0: aload_0
       1: getfield      #49                 // Field publicIpAddress:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withPublicIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setPublicIpAddress:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setStateReason(com.amazonaws.services.ec2.model.StateReason);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field stateReason:Lcom/amazonaws/services/ec2/model/StateReason;
       5: return

  public com.amazonaws.services.ec2.model.StateReason getStateReason();
    Code:
       0: aload_0
       1: getfield      #51                 // Field stateReason:Lcom/amazonaws/services/ec2/model/StateReason;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withStateReason(com.amazonaws.services.ec2.model.StateReason);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method setStateReason:(Lcom/amazonaws/services/ec2/model/StateReason;)V
       5: aload_0
       6: areturn

  public void setArchitecture(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field architecture:Ljava/lang/String;
       5: return

  public java.lang.String getArchitecture();
    Code:
       0: aload_0
       1: getfield      #53                 // Field architecture:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withArchitecture(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method setArchitecture:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setArchitecture(com.amazonaws.services.ec2.model.ArchitectureValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method com/amazonaws/services/ec2/model/ArchitectureValues.toString:()Ljava/lang/String;
       5: putfield      #53                 // Field architecture:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.Instance withArchitecture(com.amazonaws.services.ec2.model.ArchitectureValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setArchitecture:(Lcom/amazonaws/services/ec2/model/ArchitectureValues;)V
       5: aload_0
       6: areturn

  public void setRootDeviceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field rootDeviceType:Ljava/lang/String;
       5: return

  public java.lang.String getRootDeviceType();
    Code:
       0: aload_0
       1: getfield      #57                 // Field rootDeviceType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withRootDeviceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setRootDeviceType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRootDeviceType(com.amazonaws.services.ec2.model.DeviceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method com/amazonaws/services/ec2/model/DeviceType.toString:()Ljava/lang/String;
       5: putfield      #57                 // Field rootDeviceType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.Instance withRootDeviceType(com.amazonaws.services.ec2.model.DeviceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method setRootDeviceType:(Lcom/amazonaws/services/ec2/model/DeviceType;)V
       5: aload_0
       6: areturn

  public void setRootDeviceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field rootDeviceName:Ljava/lang/String;
       5: return

  public java.lang.String getRootDeviceName();
    Code:
       0: aload_0
       1: getfield      #61                 // Field rootDeviceName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withRootDeviceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method setRootDeviceName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping> getBlockDeviceMappings();
    Code:
       0: aload_0
       1: getfield      #63                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #63                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #63                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setBlockDeviceMappings(java.util.Collection<com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #63                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #19                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #63                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.Instance withBlockDeviceMappings(com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping...);
    Code:
       0: aload_0
       1: getfield      #63                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #22                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #64                 // Method setBlockDeviceMappings:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #63                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #24                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.Instance withBlockDeviceMappings(java.util.Collection<com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method setBlockDeviceMappings:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setVirtualizationType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field virtualizationType:Ljava/lang/String;
       5: return

  public java.lang.String getVirtualizationType();
    Code:
       0: aload_0
       1: getfield      #65                 // Field virtualizationType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withVirtualizationType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method setVirtualizationType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setVirtualizationType(com.amazonaws.services.ec2.model.VirtualizationType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method com/amazonaws/services/ec2/model/VirtualizationType.toString:()Ljava/lang/String;
       5: putfield      #65                 // Field virtualizationType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.Instance withVirtualizationType(com.amazonaws.services.ec2.model.VirtualizationType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method setVirtualizationType:(Lcom/amazonaws/services/ec2/model/VirtualizationType;)V
       5: aload_0
       6: areturn

  public void setInstanceLifecycle(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field instanceLifecycle:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceLifecycle();
    Code:
       0: aload_0
       1: getfield      #69                 // Field instanceLifecycle:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withInstanceLifecycle(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #70                 // Method setInstanceLifecycle:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceLifecycle(com.amazonaws.services.ec2.model.InstanceLifecycleType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method com/amazonaws/services/ec2/model/InstanceLifecycleType.toString:()Ljava/lang/String;
       5: putfield      #69                 // Field instanceLifecycle:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.Instance withInstanceLifecycle(com.amazonaws.services.ec2.model.InstanceLifecycleType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method setInstanceLifecycle:(Lcom/amazonaws/services/ec2/model/InstanceLifecycleType;)V
       5: aload_0
       6: areturn

  public void setSpotInstanceRequestId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field spotInstanceRequestId:Ljava/lang/String;
       5: return

  public java.lang.String getSpotInstanceRequestId();
    Code:
       0: aload_0
       1: getfield      #73                 // Field spotInstanceRequestId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withSpotInstanceRequestId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method setSpotInstanceRequestId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setClientToken(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field clientToken:Ljava/lang/String;
       5: return

  public java.lang.String getClientToken();
    Code:
       0: aload_0
       1: getfield      #75                 // Field clientToken:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withClientToken(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method setClientToken:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.Tag> getTags();
    Code:
       0: aload_0
       1: getfield      #77                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #77                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #77                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setTags(java.util.Collection<com.amazonaws.services.ec2.model.Tag>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #77                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #19                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #77                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.Instance withTags(com.amazonaws.services.ec2.model.Tag...);
    Code:
       0: aload_0
       1: getfield      #77                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #22                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #78                 // Method setTags:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #77                 // Field tags:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #24                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.Instance withTags(java.util.Collection<com.amazonaws.services.ec2.model.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #78                 // Method setTags:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.GroupIdentifier> getSecurityGroups();
    Code:
       0: aload_0
       1: getfield      #79                 // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #79                 // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #79                 // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setSecurityGroups(java.util.Collection<com.amazonaws.services.ec2.model.GroupIdentifier>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #79                 // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #19                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #79                 // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.Instance withSecurityGroups(com.amazonaws.services.ec2.model.GroupIdentifier...);
    Code:
       0: aload_0
       1: getfield      #79                 // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #22                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #80                 // Method setSecurityGroups:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #79                 // Field securityGroups:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #24                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.Instance withSecurityGroups(java.util.Collection<com.amazonaws.services.ec2.model.GroupIdentifier>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method setSecurityGroups:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setSourceDestCheck(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #81                 // Field sourceDestCheck:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getSourceDestCheck();
    Code:
       0: aload_0
       1: getfield      #81                 // Field sourceDestCheck:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withSourceDestCheck(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method setSourceDestCheck:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isSourceDestCheck();
    Code:
       0: aload_0
       1: getfield      #81                 // Field sourceDestCheck:Ljava/lang/Boolean;
       4: areturn

  public void setHypervisor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field hypervisor:Ljava/lang/String;
       5: return

  public java.lang.String getHypervisor();
    Code:
       0: aload_0
       1: getfield      #83                 // Field hypervisor:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withHypervisor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #84                 // Method setHypervisor:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setHypervisor(com.amazonaws.services.ec2.model.HypervisorType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #85                 // Method com/amazonaws/services/ec2/model/HypervisorType.toString:()Ljava/lang/String;
       5: putfield      #83                 // Field hypervisor:Ljava/lang/String;
       8: return

  public com.amazonaws.services.ec2.model.Instance withHypervisor(com.amazonaws.services.ec2.model.HypervisorType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #86                 // Method setHypervisor:(Lcom/amazonaws/services/ec2/model/HypervisorType;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.ec2.model.InstanceNetworkInterface> getNetworkInterfaces();
    Code:
       0: aload_0
       1: getfield      #87                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #87                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #87                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setNetworkInterfaces(java.util.Collection<com.amazonaws.services.ec2.model.InstanceNetworkInterface>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #87                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #19                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #87                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.ec2.model.Instance withNetworkInterfaces(com.amazonaws.services.ec2.model.InstanceNetworkInterface...);
    Code:
       0: aload_0
       1: getfield      #87                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #22                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #88                 // Method setNetworkInterfaces:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #87                 // Field networkInterfaces:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #24                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.ec2.model.Instance withNetworkInterfaces(java.util.Collection<com.amazonaws.services.ec2.model.InstanceNetworkInterface>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method setNetworkInterfaces:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setIamInstanceProfile(com.amazonaws.services.ec2.model.IamInstanceProfile);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field iamInstanceProfile:Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
       5: return

  public com.amazonaws.services.ec2.model.IamInstanceProfile getIamInstanceProfile();
    Code:
       0: aload_0
       1: getfield      #89                 // Field iamInstanceProfile:Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withIamInstanceProfile(com.amazonaws.services.ec2.model.IamInstanceProfile);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method setIamInstanceProfile:(Lcom/amazonaws/services/ec2/model/IamInstanceProfile;)V
       5: aload_0
       6: areturn

  public void setEbsOptimized(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field ebsOptimized:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getEbsOptimized();
    Code:
       0: aload_0
       1: getfield      #91                 // Field ebsOptimized:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withEbsOptimized(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #92                 // Method setEbsOptimized:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isEbsOptimized();
    Code:
       0: aload_0
       1: getfield      #91                 // Field ebsOptimized:Ljava/lang/Boolean;
       4: areturn

  public void setSriovNetSupport(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #93                 // Field sriovNetSupport:Ljava/lang/String;
       5: return

  public java.lang.String getSriovNetSupport();
    Code:
       0: aload_0
       1: getfield      #93                 // Field sriovNetSupport:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withSriovNetSupport(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #94                 // Method setSriovNetSupport:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setEnaSupport(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field enaSupport:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getEnaSupport();
    Code:
       0: aload_0
       1: getfield      #95                 // Field enaSupport:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.ec2.model.Instance withEnaSupport(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #96                 // Method setEnaSupport:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isEnaSupport();
    Code:
       0: aload_0
       1: getfield      #95                 // Field enaSupport:Ljava/lang/Boolean;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #97                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #99                 // String {
      11: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #101                // Method getInstanceId:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #97                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #102                // String InstanceId:
      32: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #101                // Method getInstanceId:()Ljava/lang/String;
      39: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #103                // String ,
      44: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #105                // Method getImageId:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #97                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #106                // String ImageId:
      71: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #105                // Method getImageId:()Ljava/lang/String;
      78: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #103                // String ,
      83: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #107                // Method getState:()Lcom/amazonaws/services/ec2/model/InstanceState;
      97: ifnull        132
     100: aload_1
     101: new           #97                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #108                // String State:
     110: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #107                // Method getState:()Lcom/amazonaws/services/ec2/model/InstanceState;
     117: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #103                // String ,
     122: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #110                // Method getPrivateDnsName:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #97                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #111                // String PrivateDnsName:
     149: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #110                // Method getPrivateDnsName:()Ljava/lang/String;
     156: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #103                // String ,
     161: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #112                // Method getPublicDnsName:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #97                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #113                // String PublicDnsName:
     188: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #112                // Method getPublicDnsName:()Ljava/lang/String;
     195: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #103                // String ,
     200: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #114                // Method getStateTransitionReason:()Ljava/lang/String;
     214: ifnull        249
     217: aload_1
     218: new           #97                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #115                // String StateTransitionReason:
     227: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #114                // Method getStateTransitionReason:()Ljava/lang/String;
     234: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: ldc           #103                // String ,
     239: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #116                // Method getKeyName:()Ljava/lang/String;
     253: ifnull        288
     256: aload_1
     257: new           #97                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #117                // String KeyName:
     266: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #116                // Method getKeyName:()Ljava/lang/String;
     273: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #103                // String ,
     278: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #118                // Method getAmiLaunchIndex:()Ljava/lang/Integer;
     292: ifnull        327
     295: aload_1
     296: new           #97                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #119                // String AmiLaunchIndex:
     305: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #118                // Method getAmiLaunchIndex:()Ljava/lang/Integer;
     312: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #103                // String ,
     317: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #120                // Method getProductCodes:()Ljava/util/List;
     331: ifnull        366
     334: aload_1
     335: new           #97                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #121                // String ProductCodes:
     344: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #120                // Method getProductCodes:()Ljava/util/List;
     351: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     354: ldc           #103                // String ,
     356: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #122                // Method getInstanceType:()Ljava/lang/String;
     370: ifnull        405
     373: aload_1
     374: new           #97                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #123                // String InstanceType:
     383: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #122                // Method getInstanceType:()Ljava/lang/String;
     390: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: ldc           #103                // String ,
     395: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #124                // Method getLaunchTime:()Ljava/util/Date;
     409: ifnull        444
     412: aload_1
     413: new           #97                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #125                // String LaunchTime:
     422: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #124                // Method getLaunchTime:()Ljava/util/Date;
     429: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     432: ldc           #103                // String ,
     434: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #126                // Method getPlacement:()Lcom/amazonaws/services/ec2/model/Placement;
     448: ifnull        483
     451: aload_1
     452: new           #97                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #127                // String Placement:
     461: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #126                // Method getPlacement:()Lcom/amazonaws/services/ec2/model/Placement;
     468: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     471: ldc           #103                // String ,
     473: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #128                // Method getKernelId:()Ljava/lang/String;
     487: ifnull        522
     490: aload_1
     491: new           #97                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #129                // String KernelId:
     500: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #128                // Method getKernelId:()Ljava/lang/String;
     507: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     510: ldc           #103                // String ,
     512: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #130                // Method getRamdiskId:()Ljava/lang/String;
     526: ifnull        561
     529: aload_1
     530: new           #97                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #131                // String RamdiskId:
     539: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #130                // Method getRamdiskId:()Ljava/lang/String;
     546: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     549: ldc           #103                // String ,
     551: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #132                // Method getPlatform:()Ljava/lang/String;
     565: ifnull        600
     568: aload_1
     569: new           #97                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #133                // String Platform:
     578: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #132                // Method getPlatform:()Ljava/lang/String;
     585: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     588: ldc           #103                // String ,
     590: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #134                // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/Monitoring;
     604: ifnull        639
     607: aload_1
     608: new           #97                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #135                // String Monitoring:
     617: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #134                // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/Monitoring;
     624: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     627: ldc           #103                // String ,
     629: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     632: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     635: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     638: pop
     639: aload_0
     640: invokevirtual #136                // Method getSubnetId:()Ljava/lang/String;
     643: ifnull        678
     646: aload_1
     647: new           #97                 // class java/lang/StringBuilder
     650: dup
     651: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     654: ldc           #137                // String SubnetId:
     656: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     659: aload_0
     660: invokevirtual #136                // Method getSubnetId:()Ljava/lang/String;
     663: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     666: ldc           #103                // String ,
     668: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     671: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     674: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     677: pop
     678: aload_0
     679: invokevirtual #138                // Method getVpcId:()Ljava/lang/String;
     682: ifnull        717
     685: aload_1
     686: new           #97                 // class java/lang/StringBuilder
     689: dup
     690: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     693: ldc           #139                // String VpcId:
     695: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     698: aload_0
     699: invokevirtual #138                // Method getVpcId:()Ljava/lang/String;
     702: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     705: ldc           #103                // String ,
     707: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     710: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     713: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     716: pop
     717: aload_0
     718: invokevirtual #140                // Method getPrivateIpAddress:()Ljava/lang/String;
     721: ifnull        756
     724: aload_1
     725: new           #97                 // class java/lang/StringBuilder
     728: dup
     729: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     732: ldc           #141                // String PrivateIpAddress:
     734: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     737: aload_0
     738: invokevirtual #140                // Method getPrivateIpAddress:()Ljava/lang/String;
     741: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     744: ldc           #103                // String ,
     746: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     749: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     752: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     755: pop
     756: aload_0
     757: invokevirtual #142                // Method getPublicIpAddress:()Ljava/lang/String;
     760: ifnull        795
     763: aload_1
     764: new           #97                 // class java/lang/StringBuilder
     767: dup
     768: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     771: ldc           #143                // String PublicIpAddress:
     773: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     776: aload_0
     777: invokevirtual #142                // Method getPublicIpAddress:()Ljava/lang/String;
     780: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     783: ldc           #103                // String ,
     785: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     788: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     791: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     794: pop
     795: aload_0
     796: invokevirtual #144                // Method getStateReason:()Lcom/amazonaws/services/ec2/model/StateReason;
     799: ifnull        834
     802: aload_1
     803: new           #97                 // class java/lang/StringBuilder
     806: dup
     807: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     810: ldc           #145                // String StateReason:
     812: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     815: aload_0
     816: invokevirtual #144                // Method getStateReason:()Lcom/amazonaws/services/ec2/model/StateReason;
     819: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     822: ldc           #103                // String ,
     824: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     827: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     830: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     833: pop
     834: aload_0
     835: invokevirtual #146                // Method getArchitecture:()Ljava/lang/String;
     838: ifnull        873
     841: aload_1
     842: new           #97                 // class java/lang/StringBuilder
     845: dup
     846: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     849: ldc           #147                // String Architecture:
     851: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     854: aload_0
     855: invokevirtual #146                // Method getArchitecture:()Ljava/lang/String;
     858: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     861: ldc           #103                // String ,
     863: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     866: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     869: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     872: pop
     873: aload_0
     874: invokevirtual #148                // Method getRootDeviceType:()Ljava/lang/String;
     877: ifnull        912
     880: aload_1
     881: new           #97                 // class java/lang/StringBuilder
     884: dup
     885: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     888: ldc           #149                // String RootDeviceType:
     890: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     893: aload_0
     894: invokevirtual #148                // Method getRootDeviceType:()Ljava/lang/String;
     897: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     900: ldc           #103                // String ,
     902: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     905: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     908: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     911: pop
     912: aload_0
     913: invokevirtual #150                // Method getRootDeviceName:()Ljava/lang/String;
     916: ifnull        951
     919: aload_1
     920: new           #97                 // class java/lang/StringBuilder
     923: dup
     924: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     927: ldc           #151                // String RootDeviceName:
     929: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     932: aload_0
     933: invokevirtual #150                // Method getRootDeviceName:()Ljava/lang/String;
     936: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     939: ldc           #103                // String ,
     941: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     944: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     947: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     950: pop
     951: aload_0
     952: invokevirtual #152                // Method getBlockDeviceMappings:()Ljava/util/List;
     955: ifnull        990
     958: aload_1
     959: new           #97                 // class java/lang/StringBuilder
     962: dup
     963: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
     966: ldc           #153                // String BlockDeviceMappings:
     968: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     971: aload_0
     972: invokevirtual #152                // Method getBlockDeviceMappings:()Ljava/util/List;
     975: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     978: ldc           #103                // String ,
     980: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     983: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     986: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     989: pop
     990: aload_0
     991: invokevirtual #154                // Method getVirtualizationType:()Ljava/lang/String;
     994: ifnull        1029
     997: aload_1
     998: new           #97                 // class java/lang/StringBuilder
    1001: dup
    1002: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1005: ldc           #155                // String VirtualizationType:
    1007: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1010: aload_0
    1011: invokevirtual #154                // Method getVirtualizationType:()Ljava/lang/String;
    1014: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1017: ldc           #103                // String ,
    1019: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1022: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1025: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1028: pop
    1029: aload_0
    1030: invokevirtual #156                // Method getInstanceLifecycle:()Ljava/lang/String;
    1033: ifnull        1068
    1036: aload_1
    1037: new           #97                 // class java/lang/StringBuilder
    1040: dup
    1041: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1044: ldc           #157                // String InstanceLifecycle:
    1046: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1049: aload_0
    1050: invokevirtual #156                // Method getInstanceLifecycle:()Ljava/lang/String;
    1053: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1056: ldc           #103                // String ,
    1058: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1061: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1064: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1067: pop
    1068: aload_0
    1069: invokevirtual #158                // Method getSpotInstanceRequestId:()Ljava/lang/String;
    1072: ifnull        1107
    1075: aload_1
    1076: new           #97                 // class java/lang/StringBuilder
    1079: dup
    1080: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1083: ldc           #159                // String SpotInstanceRequestId:
    1085: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1088: aload_0
    1089: invokevirtual #158                // Method getSpotInstanceRequestId:()Ljava/lang/String;
    1092: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1095: ldc           #103                // String ,
    1097: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1100: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1103: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1106: pop
    1107: aload_0
    1108: invokevirtual #160                // Method getClientToken:()Ljava/lang/String;
    1111: ifnull        1146
    1114: aload_1
    1115: new           #97                 // class java/lang/StringBuilder
    1118: dup
    1119: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1122: ldc           #161                // String ClientToken:
    1124: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1127: aload_0
    1128: invokevirtual #160                // Method getClientToken:()Ljava/lang/String;
    1131: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1134: ldc           #103                // String ,
    1136: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1139: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1142: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1145: pop
    1146: aload_0
    1147: invokevirtual #162                // Method getTags:()Ljava/util/List;
    1150: ifnull        1185
    1153: aload_1
    1154: new           #97                 // class java/lang/StringBuilder
    1157: dup
    1158: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1161: ldc           #163                // String Tags:
    1163: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1166: aload_0
    1167: invokevirtual #162                // Method getTags:()Ljava/util/List;
    1170: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1173: ldc           #103                // String ,
    1175: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1178: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1181: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1184: pop
    1185: aload_0
    1186: invokevirtual #164                // Method getSecurityGroups:()Ljava/util/List;
    1189: ifnull        1224
    1192: aload_1
    1193: new           #97                 // class java/lang/StringBuilder
    1196: dup
    1197: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1200: ldc           #165                // String SecurityGroups:
    1202: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1205: aload_0
    1206: invokevirtual #164                // Method getSecurityGroups:()Ljava/util/List;
    1209: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1212: ldc           #103                // String ,
    1214: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1217: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1220: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1223: pop
    1224: aload_0
    1225: invokevirtual #166                // Method getSourceDestCheck:()Ljava/lang/Boolean;
    1228: ifnull        1263
    1231: aload_1
    1232: new           #97                 // class java/lang/StringBuilder
    1235: dup
    1236: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1239: ldc           #167                // String SourceDestCheck:
    1241: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1244: aload_0
    1245: invokevirtual #166                // Method getSourceDestCheck:()Ljava/lang/Boolean;
    1248: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1251: ldc           #103                // String ,
    1253: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1256: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1259: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1262: pop
    1263: aload_0
    1264: invokevirtual #168                // Method getHypervisor:()Ljava/lang/String;
    1267: ifnull        1302
    1270: aload_1
    1271: new           #97                 // class java/lang/StringBuilder
    1274: dup
    1275: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1278: ldc           #169                // String Hypervisor:
    1280: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1283: aload_0
    1284: invokevirtual #168                // Method getHypervisor:()Ljava/lang/String;
    1287: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1290: ldc           #103                // String ,
    1292: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1295: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1298: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1301: pop
    1302: aload_0
    1303: invokevirtual #170                // Method getNetworkInterfaces:()Ljava/util/List;
    1306: ifnull        1341
    1309: aload_1
    1310: new           #97                 // class java/lang/StringBuilder
    1313: dup
    1314: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1317: ldc           #171                // String NetworkInterfaces:
    1319: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1322: aload_0
    1323: invokevirtual #170                // Method getNetworkInterfaces:()Ljava/util/List;
    1326: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1329: ldc           #103                // String ,
    1331: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1334: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1337: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1340: pop
    1341: aload_0
    1342: invokevirtual #172                // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
    1345: ifnull        1380
    1348: aload_1
    1349: new           #97                 // class java/lang/StringBuilder
    1352: dup
    1353: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1356: ldc           #173                // String IamInstanceProfile:
    1358: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1361: aload_0
    1362: invokevirtual #172                // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
    1365: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1368: ldc           #103                // String ,
    1370: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1373: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1376: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1379: pop
    1380: aload_0
    1381: invokevirtual #174                // Method getEbsOptimized:()Ljava/lang/Boolean;
    1384: ifnull        1419
    1387: aload_1
    1388: new           #97                 // class java/lang/StringBuilder
    1391: dup
    1392: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1395: ldc           #175                // String EbsOptimized:
    1397: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1400: aload_0
    1401: invokevirtual #174                // Method getEbsOptimized:()Ljava/lang/Boolean;
    1404: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1407: ldc           #103                // String ,
    1409: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1412: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1415: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1418: pop
    1419: aload_0
    1420: invokevirtual #176                // Method getSriovNetSupport:()Ljava/lang/String;
    1423: ifnull        1458
    1426: aload_1
    1427: new           #97                 // class java/lang/StringBuilder
    1430: dup
    1431: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1434: ldc           #177                // String SriovNetSupport:
    1436: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1439: aload_0
    1440: invokevirtual #176                // Method getSriovNetSupport:()Ljava/lang/String;
    1443: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1446: ldc           #103                // String ,
    1448: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1451: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1454: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1457: pop
    1458: aload_0
    1459: invokevirtual #178                // Method getEnaSupport:()Ljava/lang/Boolean;
    1462: ifnull        1492
    1465: aload_1
    1466: new           #97                 // class java/lang/StringBuilder
    1469: dup
    1470: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
    1473: ldc           #179                // String EnaSupport:
    1475: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1478: aload_0
    1479: invokevirtual #178                // Method getEnaSupport:()Ljava/lang/Boolean;
    1482: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1485: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1488: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1491: pop
    1492: aload_1
    1493: ldc           #180                // String }
    1495: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1498: pop
    1499: aload_1
    1500: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1503: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #181                // class com/amazonaws/services/ec2/model/Instance
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #181                // class com/amazonaws/services/ec2/model/Instance
      26: astore_2
      27: aload_2
      28: invokevirtual #101                // Method getInstanceId:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #101                // Method getInstanceId:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #101                // Method getInstanceId:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #101                // Method getInstanceId:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #101                // Method getInstanceId:()Ljava/lang/String;
      72: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #105                // Method getImageId:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #105                // Method getImageId:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #105                // Method getImageId:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #105                // Method getImageId:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #105                // Method getImageId:()Ljava/lang/String;
     125: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #107                // Method getState:()Lcom/amazonaws/services/ec2/model/InstanceState;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #107                // Method getState:()Lcom/amazonaws/services/ec2/model/InstanceState;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #107                // Method getState:()Lcom/amazonaws/services/ec2/model/InstanceState;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #107                // Method getState:()Lcom/amazonaws/services/ec2/model/InstanceState;
     174: aload_0
     175: invokevirtual #107                // Method getState:()Lcom/amazonaws/services/ec2/model/InstanceState;
     178: invokevirtual #183                // Method com/amazonaws/services/ec2/model/InstanceState.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #110                // Method getPrivateDnsName:()Ljava/lang/String;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #110                // Method getPrivateDnsName:()Ljava/lang/String;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #110                // Method getPrivateDnsName:()Ljava/lang/String;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #110                // Method getPrivateDnsName:()Ljava/lang/String;
     227: aload_0
     228: invokevirtual #110                // Method getPrivateDnsName:()Ljava/lang/String;
     231: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #112                // Method getPublicDnsName:()Ljava/lang/String;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #112                // Method getPublicDnsName:()Ljava/lang/String;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #112                // Method getPublicDnsName:()Ljava/lang/String;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #112                // Method getPublicDnsName:()Ljava/lang/String;
     280: aload_0
     281: invokevirtual #112                // Method getPublicDnsName:()Ljava/lang/String;
     284: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload_2
     293: invokevirtual #114                // Method getStateTransitionReason:()Ljava/lang/String;
     296: ifnonnull     303
     299: iconst_1
     300: goto          304
     303: iconst_0
     304: aload_0
     305: invokevirtual #114                // Method getStateTransitionReason:()Ljava/lang/String;
     308: ifnonnull     315
     311: iconst_1
     312: goto          316
     315: iconst_0
     316: ixor
     317: ifeq          322
     320: iconst_0
     321: ireturn
     322: aload_2
     323: invokevirtual #114                // Method getStateTransitionReason:()Ljava/lang/String;
     326: ifnull        345
     329: aload_2
     330: invokevirtual #114                // Method getStateTransitionReason:()Ljava/lang/String;
     333: aload_0
     334: invokevirtual #114                // Method getStateTransitionReason:()Ljava/lang/String;
     337: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     340: ifne          345
     343: iconst_0
     344: ireturn
     345: aload_2
     346: invokevirtual #116                // Method getKeyName:()Ljava/lang/String;
     349: ifnonnull     356
     352: iconst_1
     353: goto          357
     356: iconst_0
     357: aload_0
     358: invokevirtual #116                // Method getKeyName:()Ljava/lang/String;
     361: ifnonnull     368
     364: iconst_1
     365: goto          369
     368: iconst_0
     369: ixor
     370: ifeq          375
     373: iconst_0
     374: ireturn
     375: aload_2
     376: invokevirtual #116                // Method getKeyName:()Ljava/lang/String;
     379: ifnull        398
     382: aload_2
     383: invokevirtual #116                // Method getKeyName:()Ljava/lang/String;
     386: aload_0
     387: invokevirtual #116                // Method getKeyName:()Ljava/lang/String;
     390: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     393: ifne          398
     396: iconst_0
     397: ireturn
     398: aload_2
     399: invokevirtual #118                // Method getAmiLaunchIndex:()Ljava/lang/Integer;
     402: ifnonnull     409
     405: iconst_1
     406: goto          410
     409: iconst_0
     410: aload_0
     411: invokevirtual #118                // Method getAmiLaunchIndex:()Ljava/lang/Integer;
     414: ifnonnull     421
     417: iconst_1
     418: goto          422
     421: iconst_0
     422: ixor
     423: ifeq          428
     426: iconst_0
     427: ireturn
     428: aload_2
     429: invokevirtual #118                // Method getAmiLaunchIndex:()Ljava/lang/Integer;
     432: ifnull        451
     435: aload_2
     436: invokevirtual #118                // Method getAmiLaunchIndex:()Ljava/lang/Integer;
     439: aload_0
     440: invokevirtual #118                // Method getAmiLaunchIndex:()Ljava/lang/Integer;
     443: invokevirtual #184                // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     446: ifne          451
     449: iconst_0
     450: ireturn
     451: aload_2
     452: invokevirtual #120                // Method getProductCodes:()Ljava/util/List;
     455: ifnonnull     462
     458: iconst_1
     459: goto          463
     462: iconst_0
     463: aload_0
     464: invokevirtual #120                // Method getProductCodes:()Ljava/util/List;
     467: ifnonnull     474
     470: iconst_1
     471: goto          475
     474: iconst_0
     475: ixor
     476: ifeq          481
     479: iconst_0
     480: ireturn
     481: aload_2
     482: invokevirtual #120                // Method getProductCodes:()Ljava/util/List;
     485: ifnull        506
     488: aload_2
     489: invokevirtual #120                // Method getProductCodes:()Ljava/util/List;
     492: aload_0
     493: invokevirtual #120                // Method getProductCodes:()Ljava/util/List;
     496: invokeinterface #185,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     501: ifne          506
     504: iconst_0
     505: ireturn
     506: aload_2
     507: invokevirtual #122                // Method getInstanceType:()Ljava/lang/String;
     510: ifnonnull     517
     513: iconst_1
     514: goto          518
     517: iconst_0
     518: aload_0
     519: invokevirtual #122                // Method getInstanceType:()Ljava/lang/String;
     522: ifnonnull     529
     525: iconst_1
     526: goto          530
     529: iconst_0
     530: ixor
     531: ifeq          536
     534: iconst_0
     535: ireturn
     536: aload_2
     537: invokevirtual #122                // Method getInstanceType:()Ljava/lang/String;
     540: ifnull        559
     543: aload_2
     544: invokevirtual #122                // Method getInstanceType:()Ljava/lang/String;
     547: aload_0
     548: invokevirtual #122                // Method getInstanceType:()Ljava/lang/String;
     551: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     554: ifne          559
     557: iconst_0
     558: ireturn
     559: aload_2
     560: invokevirtual #124                // Method getLaunchTime:()Ljava/util/Date;
     563: ifnonnull     570
     566: iconst_1
     567: goto          571
     570: iconst_0
     571: aload_0
     572: invokevirtual #124                // Method getLaunchTime:()Ljava/util/Date;
     575: ifnonnull     582
     578: iconst_1
     579: goto          583
     582: iconst_0
     583: ixor
     584: ifeq          589
     587: iconst_0
     588: ireturn
     589: aload_2
     590: invokevirtual #124                // Method getLaunchTime:()Ljava/util/Date;
     593: ifnull        612
     596: aload_2
     597: invokevirtual #124                // Method getLaunchTime:()Ljava/util/Date;
     600: aload_0
     601: invokevirtual #124                // Method getLaunchTime:()Ljava/util/Date;
     604: invokevirtual #186                // Method java/util/Date.equals:(Ljava/lang/Object;)Z
     607: ifne          612
     610: iconst_0
     611: ireturn
     612: aload_2
     613: invokevirtual #126                // Method getPlacement:()Lcom/amazonaws/services/ec2/model/Placement;
     616: ifnonnull     623
     619: iconst_1
     620: goto          624
     623: iconst_0
     624: aload_0
     625: invokevirtual #126                // Method getPlacement:()Lcom/amazonaws/services/ec2/model/Placement;
     628: ifnonnull     635
     631: iconst_1
     632: goto          636
     635: iconst_0
     636: ixor
     637: ifeq          642
     640: iconst_0
     641: ireturn
     642: aload_2
     643: invokevirtual #126                // Method getPlacement:()Lcom/amazonaws/services/ec2/model/Placement;
     646: ifnull        665
     649: aload_2
     650: invokevirtual #126                // Method getPlacement:()Lcom/amazonaws/services/ec2/model/Placement;
     653: aload_0
     654: invokevirtual #126                // Method getPlacement:()Lcom/amazonaws/services/ec2/model/Placement;
     657: invokevirtual #187                // Method com/amazonaws/services/ec2/model/Placement.equals:(Ljava/lang/Object;)Z
     660: ifne          665
     663: iconst_0
     664: ireturn
     665: aload_2
     666: invokevirtual #128                // Method getKernelId:()Ljava/lang/String;
     669: ifnonnull     676
     672: iconst_1
     673: goto          677
     676: iconst_0
     677: aload_0
     678: invokevirtual #128                // Method getKernelId:()Ljava/lang/String;
     681: ifnonnull     688
     684: iconst_1
     685: goto          689
     688: iconst_0
     689: ixor
     690: ifeq          695
     693: iconst_0
     694: ireturn
     695: aload_2
     696: invokevirtual #128                // Method getKernelId:()Ljava/lang/String;
     699: ifnull        718
     702: aload_2
     703: invokevirtual #128                // Method getKernelId:()Ljava/lang/String;
     706: aload_0
     707: invokevirtual #128                // Method getKernelId:()Ljava/lang/String;
     710: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     713: ifne          718
     716: iconst_0
     717: ireturn
     718: aload_2
     719: invokevirtual #130                // Method getRamdiskId:()Ljava/lang/String;
     722: ifnonnull     729
     725: iconst_1
     726: goto          730
     729: iconst_0
     730: aload_0
     731: invokevirtual #130                // Method getRamdiskId:()Ljava/lang/String;
     734: ifnonnull     741
     737: iconst_1
     738: goto          742
     741: iconst_0
     742: ixor
     743: ifeq          748
     746: iconst_0
     747: ireturn
     748: aload_2
     749: invokevirtual #130                // Method getRamdiskId:()Ljava/lang/String;
     752: ifnull        771
     755: aload_2
     756: invokevirtual #130                // Method getRamdiskId:()Ljava/lang/String;
     759: aload_0
     760: invokevirtual #130                // Method getRamdiskId:()Ljava/lang/String;
     763: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     766: ifne          771
     769: iconst_0
     770: ireturn
     771: aload_2
     772: invokevirtual #132                // Method getPlatform:()Ljava/lang/String;
     775: ifnonnull     782
     778: iconst_1
     779: goto          783
     782: iconst_0
     783: aload_0
     784: invokevirtual #132                // Method getPlatform:()Ljava/lang/String;
     787: ifnonnull     794
     790: iconst_1
     791: goto          795
     794: iconst_0
     795: ixor
     796: ifeq          801
     799: iconst_0
     800: ireturn
     801: aload_2
     802: invokevirtual #132                // Method getPlatform:()Ljava/lang/String;
     805: ifnull        824
     808: aload_2
     809: invokevirtual #132                // Method getPlatform:()Ljava/lang/String;
     812: aload_0
     813: invokevirtual #132                // Method getPlatform:()Ljava/lang/String;
     816: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     819: ifne          824
     822: iconst_0
     823: ireturn
     824: aload_2
     825: invokevirtual #134                // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/Monitoring;
     828: ifnonnull     835
     831: iconst_1
     832: goto          836
     835: iconst_0
     836: aload_0
     837: invokevirtual #134                // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/Monitoring;
     840: ifnonnull     847
     843: iconst_1
     844: goto          848
     847: iconst_0
     848: ixor
     849: ifeq          854
     852: iconst_0
     853: ireturn
     854: aload_2
     855: invokevirtual #134                // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/Monitoring;
     858: ifnull        877
     861: aload_2
     862: invokevirtual #134                // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/Monitoring;
     865: aload_0
     866: invokevirtual #134                // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/Monitoring;
     869: invokevirtual #188                // Method com/amazonaws/services/ec2/model/Monitoring.equals:(Ljava/lang/Object;)Z
     872: ifne          877
     875: iconst_0
     876: ireturn
     877: aload_2
     878: invokevirtual #136                // Method getSubnetId:()Ljava/lang/String;
     881: ifnonnull     888
     884: iconst_1
     885: goto          889
     888: iconst_0
     889: aload_0
     890: invokevirtual #136                // Method getSubnetId:()Ljava/lang/String;
     893: ifnonnull     900
     896: iconst_1
     897: goto          901
     900: iconst_0
     901: ixor
     902: ifeq          907
     905: iconst_0
     906: ireturn
     907: aload_2
     908: invokevirtual #136                // Method getSubnetId:()Ljava/lang/String;
     911: ifnull        930
     914: aload_2
     915: invokevirtual #136                // Method getSubnetId:()Ljava/lang/String;
     918: aload_0
     919: invokevirtual #136                // Method getSubnetId:()Ljava/lang/String;
     922: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     925: ifne          930
     928: iconst_0
     929: ireturn
     930: aload_2
     931: invokevirtual #138                // Method getVpcId:()Ljava/lang/String;
     934: ifnonnull     941
     937: iconst_1
     938: goto          942
     941: iconst_0
     942: aload_0
     943: invokevirtual #138                // Method getVpcId:()Ljava/lang/String;
     946: ifnonnull     953
     949: iconst_1
     950: goto          954
     953: iconst_0
     954: ixor
     955: ifeq          960
     958: iconst_0
     959: ireturn
     960: aload_2
     961: invokevirtual #138                // Method getVpcId:()Ljava/lang/String;
     964: ifnull        983
     967: aload_2
     968: invokevirtual #138                // Method getVpcId:()Ljava/lang/String;
     971: aload_0
     972: invokevirtual #138                // Method getVpcId:()Ljava/lang/String;
     975: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     978: ifne          983
     981: iconst_0
     982: ireturn
     983: aload_2
     984: invokevirtual #140                // Method getPrivateIpAddress:()Ljava/lang/String;
     987: ifnonnull     994
     990: iconst_1
     991: goto          995
     994: iconst_0
     995: aload_0
     996: invokevirtual #140                // Method getPrivateIpAddress:()Ljava/lang/String;
     999: ifnonnull     1006
    1002: iconst_1
    1003: goto          1007
    1006: iconst_0
    1007: ixor
    1008: ifeq          1013
    1011: iconst_0
    1012: ireturn
    1013: aload_2
    1014: invokevirtual #140                // Method getPrivateIpAddress:()Ljava/lang/String;
    1017: ifnull        1036
    1020: aload_2
    1021: invokevirtual #140                // Method getPrivateIpAddress:()Ljava/lang/String;
    1024: aload_0
    1025: invokevirtual #140                // Method getPrivateIpAddress:()Ljava/lang/String;
    1028: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1031: ifne          1036
    1034: iconst_0
    1035: ireturn
    1036: aload_2
    1037: invokevirtual #142                // Method getPublicIpAddress:()Ljava/lang/String;
    1040: ifnonnull     1047
    1043: iconst_1
    1044: goto          1048
    1047: iconst_0
    1048: aload_0
    1049: invokevirtual #142                // Method getPublicIpAddress:()Ljava/lang/String;
    1052: ifnonnull     1059
    1055: iconst_1
    1056: goto          1060
    1059: iconst_0
    1060: ixor
    1061: ifeq          1066
    1064: iconst_0
    1065: ireturn
    1066: aload_2
    1067: invokevirtual #142                // Method getPublicIpAddress:()Ljava/lang/String;
    1070: ifnull        1089
    1073: aload_2
    1074: invokevirtual #142                // Method getPublicIpAddress:()Ljava/lang/String;
    1077: aload_0
    1078: invokevirtual #142                // Method getPublicIpAddress:()Ljava/lang/String;
    1081: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1084: ifne          1089
    1087: iconst_0
    1088: ireturn
    1089: aload_2
    1090: invokevirtual #144                // Method getStateReason:()Lcom/amazonaws/services/ec2/model/StateReason;
    1093: ifnonnull     1100
    1096: iconst_1
    1097: goto          1101
    1100: iconst_0
    1101: aload_0
    1102: invokevirtual #144                // Method getStateReason:()Lcom/amazonaws/services/ec2/model/StateReason;
    1105: ifnonnull     1112
    1108: iconst_1
    1109: goto          1113
    1112: iconst_0
    1113: ixor
    1114: ifeq          1119
    1117: iconst_0
    1118: ireturn
    1119: aload_2
    1120: invokevirtual #144                // Method getStateReason:()Lcom/amazonaws/services/ec2/model/StateReason;
    1123: ifnull        1142
    1126: aload_2
    1127: invokevirtual #144                // Method getStateReason:()Lcom/amazonaws/services/ec2/model/StateReason;
    1130: aload_0
    1131: invokevirtual #144                // Method getStateReason:()Lcom/amazonaws/services/ec2/model/StateReason;
    1134: invokevirtual #189                // Method com/amazonaws/services/ec2/model/StateReason.equals:(Ljava/lang/Object;)Z
    1137: ifne          1142
    1140: iconst_0
    1141: ireturn
    1142: aload_2
    1143: invokevirtual #146                // Method getArchitecture:()Ljava/lang/String;
    1146: ifnonnull     1153
    1149: iconst_1
    1150: goto          1154
    1153: iconst_0
    1154: aload_0
    1155: invokevirtual #146                // Method getArchitecture:()Ljava/lang/String;
    1158: ifnonnull     1165
    1161: iconst_1
    1162: goto          1166
    1165: iconst_0
    1166: ixor
    1167: ifeq          1172
    1170: iconst_0
    1171: ireturn
    1172: aload_2
    1173: invokevirtual #146                // Method getArchitecture:()Ljava/lang/String;
    1176: ifnull        1195
    1179: aload_2
    1180: invokevirtual #146                // Method getArchitecture:()Ljava/lang/String;
    1183: aload_0
    1184: invokevirtual #146                // Method getArchitecture:()Ljava/lang/String;
    1187: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1190: ifne          1195
    1193: iconst_0
    1194: ireturn
    1195: aload_2
    1196: invokevirtual #148                // Method getRootDeviceType:()Ljava/lang/String;
    1199: ifnonnull     1206
    1202: iconst_1
    1203: goto          1207
    1206: iconst_0
    1207: aload_0
    1208: invokevirtual #148                // Method getRootDeviceType:()Ljava/lang/String;
    1211: ifnonnull     1218
    1214: iconst_1
    1215: goto          1219
    1218: iconst_0
    1219: ixor
    1220: ifeq          1225
    1223: iconst_0
    1224: ireturn
    1225: aload_2
    1226: invokevirtual #148                // Method getRootDeviceType:()Ljava/lang/String;
    1229: ifnull        1248
    1232: aload_2
    1233: invokevirtual #148                // Method getRootDeviceType:()Ljava/lang/String;
    1236: aload_0
    1237: invokevirtual #148                // Method getRootDeviceType:()Ljava/lang/String;
    1240: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1243: ifne          1248
    1246: iconst_0
    1247: ireturn
    1248: aload_2
    1249: invokevirtual #150                // Method getRootDeviceName:()Ljava/lang/String;
    1252: ifnonnull     1259
    1255: iconst_1
    1256: goto          1260
    1259: iconst_0
    1260: aload_0
    1261: invokevirtual #150                // Method getRootDeviceName:()Ljava/lang/String;
    1264: ifnonnull     1271
    1267: iconst_1
    1268: goto          1272
    1271: iconst_0
    1272: ixor
    1273: ifeq          1278
    1276: iconst_0
    1277: ireturn
    1278: aload_2
    1279: invokevirtual #150                // Method getRootDeviceName:()Ljava/lang/String;
    1282: ifnull        1301
    1285: aload_2
    1286: invokevirtual #150                // Method getRootDeviceName:()Ljava/lang/String;
    1289: aload_0
    1290: invokevirtual #150                // Method getRootDeviceName:()Ljava/lang/String;
    1293: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1296: ifne          1301
    1299: iconst_0
    1300: ireturn
    1301: aload_2
    1302: invokevirtual #152                // Method getBlockDeviceMappings:()Ljava/util/List;
    1305: ifnonnull     1312
    1308: iconst_1
    1309: goto          1313
    1312: iconst_0
    1313: aload_0
    1314: invokevirtual #152                // Method getBlockDeviceMappings:()Ljava/util/List;
    1317: ifnonnull     1324
    1320: iconst_1
    1321: goto          1325
    1324: iconst_0
    1325: ixor
    1326: ifeq          1331
    1329: iconst_0
    1330: ireturn
    1331: aload_2
    1332: invokevirtual #152                // Method getBlockDeviceMappings:()Ljava/util/List;
    1335: ifnull        1356
    1338: aload_2
    1339: invokevirtual #152                // Method getBlockDeviceMappings:()Ljava/util/List;
    1342: aload_0
    1343: invokevirtual #152                // Method getBlockDeviceMappings:()Ljava/util/List;
    1346: invokeinterface #185,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1351: ifne          1356
    1354: iconst_0
    1355: ireturn
    1356: aload_2
    1357: invokevirtual #154                // Method getVirtualizationType:()Ljava/lang/String;
    1360: ifnonnull     1367
    1363: iconst_1
    1364: goto          1368
    1367: iconst_0
    1368: aload_0
    1369: invokevirtual #154                // Method getVirtualizationType:()Ljava/lang/String;
    1372: ifnonnull     1379
    1375: iconst_1
    1376: goto          1380
    1379: iconst_0
    1380: ixor
    1381: ifeq          1386
    1384: iconst_0
    1385: ireturn
    1386: aload_2
    1387: invokevirtual #154                // Method getVirtualizationType:()Ljava/lang/String;
    1390: ifnull        1409
    1393: aload_2
    1394: invokevirtual #154                // Method getVirtualizationType:()Ljava/lang/String;
    1397: aload_0
    1398: invokevirtual #154                // Method getVirtualizationType:()Ljava/lang/String;
    1401: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1404: ifne          1409
    1407: iconst_0
    1408: ireturn
    1409: aload_2
    1410: invokevirtual #156                // Method getInstanceLifecycle:()Ljava/lang/String;
    1413: ifnonnull     1420
    1416: iconst_1
    1417: goto          1421
    1420: iconst_0
    1421: aload_0
    1422: invokevirtual #156                // Method getInstanceLifecycle:()Ljava/lang/String;
    1425: ifnonnull     1432
    1428: iconst_1
    1429: goto          1433
    1432: iconst_0
    1433: ixor
    1434: ifeq          1439
    1437: iconst_0
    1438: ireturn
    1439: aload_2
    1440: invokevirtual #156                // Method getInstanceLifecycle:()Ljava/lang/String;
    1443: ifnull        1462
    1446: aload_2
    1447: invokevirtual #156                // Method getInstanceLifecycle:()Ljava/lang/String;
    1450: aload_0
    1451: invokevirtual #156                // Method getInstanceLifecycle:()Ljava/lang/String;
    1454: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1457: ifne          1462
    1460: iconst_0
    1461: ireturn
    1462: aload_2
    1463: invokevirtual #158                // Method getSpotInstanceRequestId:()Ljava/lang/String;
    1466: ifnonnull     1473
    1469: iconst_1
    1470: goto          1474
    1473: iconst_0
    1474: aload_0
    1475: invokevirtual #158                // Method getSpotInstanceRequestId:()Ljava/lang/String;
    1478: ifnonnull     1485
    1481: iconst_1
    1482: goto          1486
    1485: iconst_0
    1486: ixor
    1487: ifeq          1492
    1490: iconst_0
    1491: ireturn
    1492: aload_2
    1493: invokevirtual #158                // Method getSpotInstanceRequestId:()Ljava/lang/String;
    1496: ifnull        1515
    1499: aload_2
    1500: invokevirtual #158                // Method getSpotInstanceRequestId:()Ljava/lang/String;
    1503: aload_0
    1504: invokevirtual #158                // Method getSpotInstanceRequestId:()Ljava/lang/String;
    1507: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1510: ifne          1515
    1513: iconst_0
    1514: ireturn
    1515: aload_2
    1516: invokevirtual #160                // Method getClientToken:()Ljava/lang/String;
    1519: ifnonnull     1526
    1522: iconst_1
    1523: goto          1527
    1526: iconst_0
    1527: aload_0
    1528: invokevirtual #160                // Method getClientToken:()Ljava/lang/String;
    1531: ifnonnull     1538
    1534: iconst_1
    1535: goto          1539
    1538: iconst_0
    1539: ixor
    1540: ifeq          1545
    1543: iconst_0
    1544: ireturn
    1545: aload_2
    1546: invokevirtual #160                // Method getClientToken:()Ljava/lang/String;
    1549: ifnull        1568
    1552: aload_2
    1553: invokevirtual #160                // Method getClientToken:()Ljava/lang/String;
    1556: aload_0
    1557: invokevirtual #160                // Method getClientToken:()Ljava/lang/String;
    1560: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1563: ifne          1568
    1566: iconst_0
    1567: ireturn
    1568: aload_2
    1569: invokevirtual #162                // Method getTags:()Ljava/util/List;
    1572: ifnonnull     1579
    1575: iconst_1
    1576: goto          1580
    1579: iconst_0
    1580: aload_0
    1581: invokevirtual #162                // Method getTags:()Ljava/util/List;
    1584: ifnonnull     1591
    1587: iconst_1
    1588: goto          1592
    1591: iconst_0
    1592: ixor
    1593: ifeq          1598
    1596: iconst_0
    1597: ireturn
    1598: aload_2
    1599: invokevirtual #162                // Method getTags:()Ljava/util/List;
    1602: ifnull        1623
    1605: aload_2
    1606: invokevirtual #162                // Method getTags:()Ljava/util/List;
    1609: aload_0
    1610: invokevirtual #162                // Method getTags:()Ljava/util/List;
    1613: invokeinterface #185,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1618: ifne          1623
    1621: iconst_0
    1622: ireturn
    1623: aload_2
    1624: invokevirtual #164                // Method getSecurityGroups:()Ljava/util/List;
    1627: ifnonnull     1634
    1630: iconst_1
    1631: goto          1635
    1634: iconst_0
    1635: aload_0
    1636: invokevirtual #164                // Method getSecurityGroups:()Ljava/util/List;
    1639: ifnonnull     1646
    1642: iconst_1
    1643: goto          1647
    1646: iconst_0
    1647: ixor
    1648: ifeq          1653
    1651: iconst_0
    1652: ireturn
    1653: aload_2
    1654: invokevirtual #164                // Method getSecurityGroups:()Ljava/util/List;
    1657: ifnull        1678
    1660: aload_2
    1661: invokevirtual #164                // Method getSecurityGroups:()Ljava/util/List;
    1664: aload_0
    1665: invokevirtual #164                // Method getSecurityGroups:()Ljava/util/List;
    1668: invokeinterface #185,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1673: ifne          1678
    1676: iconst_0
    1677: ireturn
    1678: aload_2
    1679: invokevirtual #166                // Method getSourceDestCheck:()Ljava/lang/Boolean;
    1682: ifnonnull     1689
    1685: iconst_1
    1686: goto          1690
    1689: iconst_0
    1690: aload_0
    1691: invokevirtual #166                // Method getSourceDestCheck:()Ljava/lang/Boolean;
    1694: ifnonnull     1701
    1697: iconst_1
    1698: goto          1702
    1701: iconst_0
    1702: ixor
    1703: ifeq          1708
    1706: iconst_0
    1707: ireturn
    1708: aload_2
    1709: invokevirtual #166                // Method getSourceDestCheck:()Ljava/lang/Boolean;
    1712: ifnull        1731
    1715: aload_2
    1716: invokevirtual #166                // Method getSourceDestCheck:()Ljava/lang/Boolean;
    1719: aload_0
    1720: invokevirtual #166                // Method getSourceDestCheck:()Ljava/lang/Boolean;
    1723: invokevirtual #190                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
    1726: ifne          1731
    1729: iconst_0
    1730: ireturn
    1731: aload_2
    1732: invokevirtual #168                // Method getHypervisor:()Ljava/lang/String;
    1735: ifnonnull     1742
    1738: iconst_1
    1739: goto          1743
    1742: iconst_0
    1743: aload_0
    1744: invokevirtual #168                // Method getHypervisor:()Ljava/lang/String;
    1747: ifnonnull     1754
    1750: iconst_1
    1751: goto          1755
    1754: iconst_0
    1755: ixor
    1756: ifeq          1761
    1759: iconst_0
    1760: ireturn
    1761: aload_2
    1762: invokevirtual #168                // Method getHypervisor:()Ljava/lang/String;
    1765: ifnull        1784
    1768: aload_2
    1769: invokevirtual #168                // Method getHypervisor:()Ljava/lang/String;
    1772: aload_0
    1773: invokevirtual #168                // Method getHypervisor:()Ljava/lang/String;
    1776: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1779: ifne          1784
    1782: iconst_0
    1783: ireturn
    1784: aload_2
    1785: invokevirtual #170                // Method getNetworkInterfaces:()Ljava/util/List;
    1788: ifnonnull     1795
    1791: iconst_1
    1792: goto          1796
    1795: iconst_0
    1796: aload_0
    1797: invokevirtual #170                // Method getNetworkInterfaces:()Ljava/util/List;
    1800: ifnonnull     1807
    1803: iconst_1
    1804: goto          1808
    1807: iconst_0
    1808: ixor
    1809: ifeq          1814
    1812: iconst_0
    1813: ireturn
    1814: aload_2
    1815: invokevirtual #170                // Method getNetworkInterfaces:()Ljava/util/List;
    1818: ifnull        1839
    1821: aload_2
    1822: invokevirtual #170                // Method getNetworkInterfaces:()Ljava/util/List;
    1825: aload_0
    1826: invokevirtual #170                // Method getNetworkInterfaces:()Ljava/util/List;
    1829: invokeinterface #185,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1834: ifne          1839
    1837: iconst_0
    1838: ireturn
    1839: aload_2
    1840: invokevirtual #172                // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
    1843: ifnonnull     1850
    1846: iconst_1
    1847: goto          1851
    1850: iconst_0
    1851: aload_0
    1852: invokevirtual #172                // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
    1855: ifnonnull     1862
    1858: iconst_1
    1859: goto          1863
    1862: iconst_0
    1863: ixor
    1864: ifeq          1869
    1867: iconst_0
    1868: ireturn
    1869: aload_2
    1870: invokevirtual #172                // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
    1873: ifnull        1892
    1876: aload_2
    1877: invokevirtual #172                // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
    1880: aload_0
    1881: invokevirtual #172                // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
    1884: invokevirtual #191                // Method com/amazonaws/services/ec2/model/IamInstanceProfile.equals:(Ljava/lang/Object;)Z
    1887: ifne          1892
    1890: iconst_0
    1891: ireturn
    1892: aload_2
    1893: invokevirtual #174                // Method getEbsOptimized:()Ljava/lang/Boolean;
    1896: ifnonnull     1903
    1899: iconst_1
    1900: goto          1904
    1903: iconst_0
    1904: aload_0
    1905: invokevirtual #174                // Method getEbsOptimized:()Ljava/lang/Boolean;
    1908: ifnonnull     1915
    1911: iconst_1
    1912: goto          1916
    1915: iconst_0
    1916: ixor
    1917: ifeq          1922
    1920: iconst_0
    1921: ireturn
    1922: aload_2
    1923: invokevirtual #174                // Method getEbsOptimized:()Ljava/lang/Boolean;
    1926: ifnull        1945
    1929: aload_2
    1930: invokevirtual #174                // Method getEbsOptimized:()Ljava/lang/Boolean;
    1933: aload_0
    1934: invokevirtual #174                // Method getEbsOptimized:()Ljava/lang/Boolean;
    1937: invokevirtual #190                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
    1940: ifne          1945
    1943: iconst_0
    1944: ireturn
    1945: aload_2
    1946: invokevirtual #176                // Method getSriovNetSupport:()Ljava/lang/String;
    1949: ifnonnull     1956
    1952: iconst_1
    1953: goto          1957
    1956: iconst_0
    1957: aload_0
    1958: invokevirtual #176                // Method getSriovNetSupport:()Ljava/lang/String;
    1961: ifnonnull     1968
    1964: iconst_1
    1965: goto          1969
    1968: iconst_0
    1969: ixor
    1970: ifeq          1975
    1973: iconst_0
    1974: ireturn
    1975: aload_2
    1976: invokevirtual #176                // Method getSriovNetSupport:()Ljava/lang/String;
    1979: ifnull        1998
    1982: aload_2
    1983: invokevirtual #176                // Method getSriovNetSupport:()Ljava/lang/String;
    1986: aload_0
    1987: invokevirtual #176                // Method getSriovNetSupport:()Ljava/lang/String;
    1990: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1993: ifne          1998
    1996: iconst_0
    1997: ireturn
    1998: aload_2
    1999: invokevirtual #178                // Method getEnaSupport:()Ljava/lang/Boolean;
    2002: ifnonnull     2009
    2005: iconst_1
    2006: goto          2010
    2009: iconst_0
    2010: aload_0
    2011: invokevirtual #178                // Method getEnaSupport:()Ljava/lang/Boolean;
    2014: ifnonnull     2021
    2017: iconst_1
    2018: goto          2022
    2021: iconst_0
    2022: ixor
    2023: ifeq          2028
    2026: iconst_0
    2027: ireturn
    2028: aload_2
    2029: invokevirtual #178                // Method getEnaSupport:()Ljava/lang/Boolean;
    2032: ifnull        2051
    2035: aload_2
    2036: invokevirtual #178                // Method getEnaSupport:()Ljava/lang/Boolean;
    2039: aload_0
    2040: invokevirtual #178                // Method getEnaSupport:()Ljava/lang/Boolean;
    2043: invokevirtual #190                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
    2046: ifne          2051
    2049: iconst_0
    2050: ireturn
    2051: iconst_1
    2052: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #101                // Method getInstanceId:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #101                // Method getInstanceId:()Ljava/lang/String;
      24: invokevirtual #192                // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #105                // Method getImageId:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #105                // Method getImageId:()Ljava/lang/String;
      48: invokevirtual #192                // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #107                // Method getState:()Lcom/amazonaws/services/ec2/model/InstanceState;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #107                // Method getState:()Lcom/amazonaws/services/ec2/model/InstanceState;
      72: invokevirtual #193                // Method com/amazonaws/services/ec2/model/InstanceState.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #110                // Method getPrivateDnsName:()Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #110                // Method getPrivateDnsName:()Ljava/lang/String;
      96: invokevirtual #192                // Method java/lang/String.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #112                // Method getPublicDnsName:()Ljava/lang/String;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #112                // Method getPublicDnsName:()Ljava/lang/String;
     120: invokevirtual #192                // Method java/lang/String.hashCode:()I
     123: iadd
     124: istore_2
     125: bipush        31
     127: iload_2
     128: imul
     129: aload_0
     130: invokevirtual #114                // Method getStateTransitionReason:()Ljava/lang/String;
     133: ifnonnull     140
     136: iconst_0
     137: goto          147
     140: aload_0
     141: invokevirtual #114                // Method getStateTransitionReason:()Ljava/lang/String;
     144: invokevirtual #192                // Method java/lang/String.hashCode:()I
     147: iadd
     148: istore_2
     149: bipush        31
     151: iload_2
     152: imul
     153: aload_0
     154: invokevirtual #116                // Method getKeyName:()Ljava/lang/String;
     157: ifnonnull     164
     160: iconst_0
     161: goto          171
     164: aload_0
     165: invokevirtual #116                // Method getKeyName:()Ljava/lang/String;
     168: invokevirtual #192                // Method java/lang/String.hashCode:()I
     171: iadd
     172: istore_2
     173: bipush        31
     175: iload_2
     176: imul
     177: aload_0
     178: invokevirtual #118                // Method getAmiLaunchIndex:()Ljava/lang/Integer;
     181: ifnonnull     188
     184: iconst_0
     185: goto          195
     188: aload_0
     189: invokevirtual #118                // Method getAmiLaunchIndex:()Ljava/lang/Integer;
     192: invokevirtual #194                // Method java/lang/Integer.hashCode:()I
     195: iadd
     196: istore_2
     197: bipush        31
     199: iload_2
     200: imul
     201: aload_0
     202: invokevirtual #120                // Method getProductCodes:()Ljava/util/List;
     205: ifnonnull     212
     208: iconst_0
     209: goto          221
     212: aload_0
     213: invokevirtual #120                // Method getProductCodes:()Ljava/util/List;
     216: invokeinterface #195,  1          // InterfaceMethod java/util/List.hashCode:()I
     221: iadd
     222: istore_2
     223: bipush        31
     225: iload_2
     226: imul
     227: aload_0
     228: invokevirtual #122                // Method getInstanceType:()Ljava/lang/String;
     231: ifnonnull     238
     234: iconst_0
     235: goto          245
     238: aload_0
     239: invokevirtual #122                // Method getInstanceType:()Ljava/lang/String;
     242: invokevirtual #192                // Method java/lang/String.hashCode:()I
     245: iadd
     246: istore_2
     247: bipush        31
     249: iload_2
     250: imul
     251: aload_0
     252: invokevirtual #124                // Method getLaunchTime:()Ljava/util/Date;
     255: ifnonnull     262
     258: iconst_0
     259: goto          269
     262: aload_0
     263: invokevirtual #124                // Method getLaunchTime:()Ljava/util/Date;
     266: invokevirtual #196                // Method java/util/Date.hashCode:()I
     269: iadd
     270: istore_2
     271: bipush        31
     273: iload_2
     274: imul
     275: aload_0
     276: invokevirtual #126                // Method getPlacement:()Lcom/amazonaws/services/ec2/model/Placement;
     279: ifnonnull     286
     282: iconst_0
     283: goto          293
     286: aload_0
     287: invokevirtual #126                // Method getPlacement:()Lcom/amazonaws/services/ec2/model/Placement;
     290: invokevirtual #197                // Method com/amazonaws/services/ec2/model/Placement.hashCode:()I
     293: iadd
     294: istore_2
     295: bipush        31
     297: iload_2
     298: imul
     299: aload_0
     300: invokevirtual #128                // Method getKernelId:()Ljava/lang/String;
     303: ifnonnull     310
     306: iconst_0
     307: goto          317
     310: aload_0
     311: invokevirtual #128                // Method getKernelId:()Ljava/lang/String;
     314: invokevirtual #192                // Method java/lang/String.hashCode:()I
     317: iadd
     318: istore_2
     319: bipush        31
     321: iload_2
     322: imul
     323: aload_0
     324: invokevirtual #130                // Method getRamdiskId:()Ljava/lang/String;
     327: ifnonnull     334
     330: iconst_0
     331: goto          341
     334: aload_0
     335: invokevirtual #130                // Method getRamdiskId:()Ljava/lang/String;
     338: invokevirtual #192                // Method java/lang/String.hashCode:()I
     341: iadd
     342: istore_2
     343: bipush        31
     345: iload_2
     346: imul
     347: aload_0
     348: invokevirtual #132                // Method getPlatform:()Ljava/lang/String;
     351: ifnonnull     358
     354: iconst_0
     355: goto          365
     358: aload_0
     359: invokevirtual #132                // Method getPlatform:()Ljava/lang/String;
     362: invokevirtual #192                // Method java/lang/String.hashCode:()I
     365: iadd
     366: istore_2
     367: bipush        31
     369: iload_2
     370: imul
     371: aload_0
     372: invokevirtual #134                // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/Monitoring;
     375: ifnonnull     382
     378: iconst_0
     379: goto          389
     382: aload_0
     383: invokevirtual #134                // Method getMonitoring:()Lcom/amazonaws/services/ec2/model/Monitoring;
     386: invokevirtual #198                // Method com/amazonaws/services/ec2/model/Monitoring.hashCode:()I
     389: iadd
     390: istore_2
     391: bipush        31
     393: iload_2
     394: imul
     395: aload_0
     396: invokevirtual #136                // Method getSubnetId:()Ljava/lang/String;
     399: ifnonnull     406
     402: iconst_0
     403: goto          413
     406: aload_0
     407: invokevirtual #136                // Method getSubnetId:()Ljava/lang/String;
     410: invokevirtual #192                // Method java/lang/String.hashCode:()I
     413: iadd
     414: istore_2
     415: bipush        31
     417: iload_2
     418: imul
     419: aload_0
     420: invokevirtual #138                // Method getVpcId:()Ljava/lang/String;
     423: ifnonnull     430
     426: iconst_0
     427: goto          437
     430: aload_0
     431: invokevirtual #138                // Method getVpcId:()Ljava/lang/String;
     434: invokevirtual #192                // Method java/lang/String.hashCode:()I
     437: iadd
     438: istore_2
     439: bipush        31
     441: iload_2
     442: imul
     443: aload_0
     444: invokevirtual #140                // Method getPrivateIpAddress:()Ljava/lang/String;
     447: ifnonnull     454
     450: iconst_0
     451: goto          461
     454: aload_0
     455: invokevirtual #140                // Method getPrivateIpAddress:()Ljava/lang/String;
     458: invokevirtual #192                // Method java/lang/String.hashCode:()I
     461: iadd
     462: istore_2
     463: bipush        31
     465: iload_2
     466: imul
     467: aload_0
     468: invokevirtual #142                // Method getPublicIpAddress:()Ljava/lang/String;
     471: ifnonnull     478
     474: iconst_0
     475: goto          485
     478: aload_0
     479: invokevirtual #142                // Method getPublicIpAddress:()Ljava/lang/String;
     482: invokevirtual #192                // Method java/lang/String.hashCode:()I
     485: iadd
     486: istore_2
     487: bipush        31
     489: iload_2
     490: imul
     491: aload_0
     492: invokevirtual #144                // Method getStateReason:()Lcom/amazonaws/services/ec2/model/StateReason;
     495: ifnonnull     502
     498: iconst_0
     499: goto          509
     502: aload_0
     503: invokevirtual #144                // Method getStateReason:()Lcom/amazonaws/services/ec2/model/StateReason;
     506: invokevirtual #199                // Method com/amazonaws/services/ec2/model/StateReason.hashCode:()I
     509: iadd
     510: istore_2
     511: bipush        31
     513: iload_2
     514: imul
     515: aload_0
     516: invokevirtual #146                // Method getArchitecture:()Ljava/lang/String;
     519: ifnonnull     526
     522: iconst_0
     523: goto          533
     526: aload_0
     527: invokevirtual #146                // Method getArchitecture:()Ljava/lang/String;
     530: invokevirtual #192                // Method java/lang/String.hashCode:()I
     533: iadd
     534: istore_2
     535: bipush        31
     537: iload_2
     538: imul
     539: aload_0
     540: invokevirtual #148                // Method getRootDeviceType:()Ljava/lang/String;
     543: ifnonnull     550
     546: iconst_0
     547: goto          557
     550: aload_0
     551: invokevirtual #148                // Method getRootDeviceType:()Ljava/lang/String;
     554: invokevirtual #192                // Method java/lang/String.hashCode:()I
     557: iadd
     558: istore_2
     559: bipush        31
     561: iload_2
     562: imul
     563: aload_0
     564: invokevirtual #150                // Method getRootDeviceName:()Ljava/lang/String;
     567: ifnonnull     574
     570: iconst_0
     571: goto          581
     574: aload_0
     575: invokevirtual #150                // Method getRootDeviceName:()Ljava/lang/String;
     578: invokevirtual #192                // Method java/lang/String.hashCode:()I
     581: iadd
     582: istore_2
     583: bipush        31
     585: iload_2
     586: imul
     587: aload_0
     588: invokevirtual #152                // Method getBlockDeviceMappings:()Ljava/util/List;
     591: ifnonnull     598
     594: iconst_0
     595: goto          607
     598: aload_0
     599: invokevirtual #152                // Method getBlockDeviceMappings:()Ljava/util/List;
     602: invokeinterface #195,  1          // InterfaceMethod java/util/List.hashCode:()I
     607: iadd
     608: istore_2
     609: bipush        31
     611: iload_2
     612: imul
     613: aload_0
     614: invokevirtual #154                // Method getVirtualizationType:()Ljava/lang/String;
     617: ifnonnull     624
     620: iconst_0
     621: goto          631
     624: aload_0
     625: invokevirtual #154                // Method getVirtualizationType:()Ljava/lang/String;
     628: invokevirtual #192                // Method java/lang/String.hashCode:()I
     631: iadd
     632: istore_2
     633: bipush        31
     635: iload_2
     636: imul
     637: aload_0
     638: invokevirtual #156                // Method getInstanceLifecycle:()Ljava/lang/String;
     641: ifnonnull     648
     644: iconst_0
     645: goto          655
     648: aload_0
     649: invokevirtual #156                // Method getInstanceLifecycle:()Ljava/lang/String;
     652: invokevirtual #192                // Method java/lang/String.hashCode:()I
     655: iadd
     656: istore_2
     657: bipush        31
     659: iload_2
     660: imul
     661: aload_0
     662: invokevirtual #158                // Method getSpotInstanceRequestId:()Ljava/lang/String;
     665: ifnonnull     672
     668: iconst_0
     669: goto          679
     672: aload_0
     673: invokevirtual #158                // Method getSpotInstanceRequestId:()Ljava/lang/String;
     676: invokevirtual #192                // Method java/lang/String.hashCode:()I
     679: iadd
     680: istore_2
     681: bipush        31
     683: iload_2
     684: imul
     685: aload_0
     686: invokevirtual #160                // Method getClientToken:()Ljava/lang/String;
     689: ifnonnull     696
     692: iconst_0
     693: goto          703
     696: aload_0
     697: invokevirtual #160                // Method getClientToken:()Ljava/lang/String;
     700: invokevirtual #192                // Method java/lang/String.hashCode:()I
     703: iadd
     704: istore_2
     705: bipush        31
     707: iload_2
     708: imul
     709: aload_0
     710: invokevirtual #162                // Method getTags:()Ljava/util/List;
     713: ifnonnull     720
     716: iconst_0
     717: goto          729
     720: aload_0
     721: invokevirtual #162                // Method getTags:()Ljava/util/List;
     724: invokeinterface #195,  1          // InterfaceMethod java/util/List.hashCode:()I
     729: iadd
     730: istore_2
     731: bipush        31
     733: iload_2
     734: imul
     735: aload_0
     736: invokevirtual #164                // Method getSecurityGroups:()Ljava/util/List;
     739: ifnonnull     746
     742: iconst_0
     743: goto          755
     746: aload_0
     747: invokevirtual #164                // Method getSecurityGroups:()Ljava/util/List;
     750: invokeinterface #195,  1          // InterfaceMethod java/util/List.hashCode:()I
     755: iadd
     756: istore_2
     757: bipush        31
     759: iload_2
     760: imul
     761: aload_0
     762: invokevirtual #166                // Method getSourceDestCheck:()Ljava/lang/Boolean;
     765: ifnonnull     772
     768: iconst_0
     769: goto          779
     772: aload_0
     773: invokevirtual #166                // Method getSourceDestCheck:()Ljava/lang/Boolean;
     776: invokevirtual #200                // Method java/lang/Boolean.hashCode:()I
     779: iadd
     780: istore_2
     781: bipush        31
     783: iload_2
     784: imul
     785: aload_0
     786: invokevirtual #168                // Method getHypervisor:()Ljava/lang/String;
     789: ifnonnull     796
     792: iconst_0
     793: goto          803
     796: aload_0
     797: invokevirtual #168                // Method getHypervisor:()Ljava/lang/String;
     800: invokevirtual #192                // Method java/lang/String.hashCode:()I
     803: iadd
     804: istore_2
     805: bipush        31
     807: iload_2
     808: imul
     809: aload_0
     810: invokevirtual #170                // Method getNetworkInterfaces:()Ljava/util/List;
     813: ifnonnull     820
     816: iconst_0
     817: goto          829
     820: aload_0
     821: invokevirtual #170                // Method getNetworkInterfaces:()Ljava/util/List;
     824: invokeinterface #195,  1          // InterfaceMethod java/util/List.hashCode:()I
     829: iadd
     830: istore_2
     831: bipush        31
     833: iload_2
     834: imul
     835: aload_0
     836: invokevirtual #172                // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
     839: ifnonnull     846
     842: iconst_0
     843: goto          853
     846: aload_0
     847: invokevirtual #172                // Method getIamInstanceProfile:()Lcom/amazonaws/services/ec2/model/IamInstanceProfile;
     850: invokevirtual #201                // Method com/amazonaws/services/ec2/model/IamInstanceProfile.hashCode:()I
     853: iadd
     854: istore_2
     855: bipush        31
     857: iload_2
     858: imul
     859: aload_0
     860: invokevirtual #174                // Method getEbsOptimized:()Ljava/lang/Boolean;
     863: ifnonnull     870
     866: iconst_0
     867: goto          877
     870: aload_0
     871: invokevirtual #174                // Method getEbsOptimized:()Ljava/lang/Boolean;
     874: invokevirtual #200                // Method java/lang/Boolean.hashCode:()I
     877: iadd
     878: istore_2
     879: bipush        31
     881: iload_2
     882: imul
     883: aload_0
     884: invokevirtual #176                // Method getSriovNetSupport:()Ljava/lang/String;
     887: ifnonnull     894
     890: iconst_0
     891: goto          901
     894: aload_0
     895: invokevirtual #176                // Method getSriovNetSupport:()Ljava/lang/String;
     898: invokevirtual #192                // Method java/lang/String.hashCode:()I
     901: iadd
     902: istore_2
     903: bipush        31
     905: iload_2
     906: imul
     907: aload_0
     908: invokevirtual #178                // Method getEnaSupport:()Ljava/lang/Boolean;
     911: ifnonnull     918
     914: iconst_0
     915: goto          925
     918: aload_0
     919: invokevirtual #178                // Method getEnaSupport:()Ljava/lang/Boolean;
     922: invokevirtual #200                // Method java/lang/Boolean.hashCode:()I
     925: iadd
     926: istore_2
     927: iload_2
     928: ireturn

  public com.amazonaws.services.ec2.model.Instance clone();
    Code:
       0: aload_0
       1: invokespecial #202                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #181                // class com/amazonaws/services/ec2/model/Instance
       7: areturn
       8: astore_1
       9: new           #204                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #205                // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #206                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #207                // Method clone:()Lcom/amazonaws/services/ec2/model/Instance;
       4: areturn
}
