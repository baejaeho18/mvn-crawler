Compiled from "TestInvokeMethodRequest.java"
public class com.amazonaws.services.apigateway.model.TestInvokeMethodRequest extends com.amazonaws.AmazonWebServiceRequest implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String restApiId;

  private java.lang.String resourceId;

  private java.lang.String httpMethod;

  private java.lang.String pathWithQueryString;

  private java.lang.String body;

  private java.util.Map<java.lang.String, java.lang.String> headers;

  private java.lang.String clientCertificateId;

  private java.util.Map<java.lang.String, java.lang.String> stageVariables;

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: return

  public void setRestApiId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field restApiId:Ljava/lang/String;
       5: return

  public java.lang.String getRestApiId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field restApiId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest withRestApiId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setRestApiId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setResourceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field resourceId:Ljava/lang/String;
       5: return

  public java.lang.String getResourceId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resourceId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest withResourceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setResourceId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setHttpMethod(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field httpMethod:Ljava/lang/String;
       5: return

  public java.lang.String getHttpMethod();
    Code:
       0: aload_0
       1: getfield      #6                  // Field httpMethod:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest withHttpMethod(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setHttpMethod:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPathWithQueryString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field pathWithQueryString:Ljava/lang/String;
       5: return

  public java.lang.String getPathWithQueryString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field pathWithQueryString:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest withPathWithQueryString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setPathWithQueryString:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setBody(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field body:Ljava/lang/String;
       5: return

  public java.lang.String getBody();
    Code:
       0: aload_0
       1: getfield      #10                 // Field body:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest withBody(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setBody:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getHeaders();
    Code:
       0: aload_0
       1: getfield      #12                 // Field headers:Ljava/util/Map;
       4: areturn

  public void setHeaders(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field headers:Ljava/util/Map;
       5: return

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest withHeaders(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setHeaders:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest addHeadersEntry(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #12                 // Field headers:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #14                 // class java/util/HashMap
      12: dup
      13: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      16: putfield      #12                 // Field headers:Ljava/util/Map;
      19: aload_0
      20: getfield      #12                 // Field headers:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #17                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #18                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #20                 // String Duplicated keys (
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #22                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #23                 // String ) are provided.
      57: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #12                 // Field headers:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest clearHeadersEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #12                 // Field headers:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setClientCertificateId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field clientCertificateId:Ljava/lang/String;
       5: return

  public java.lang.String getClientCertificateId();
    Code:
       0: aload_0
       1: getfield      #27                 // Field clientCertificateId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest withClientCertificateId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setClientCertificateId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getStageVariables();
    Code:
       0: aload_0
       1: getfield      #29                 // Field stageVariables:Ljava/util/Map;
       4: areturn

  public void setStageVariables(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field stageVariables:Ljava/util/Map;
       5: return

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest withStageVariables(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setStageVariables:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest addStageVariablesEntry(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #29                 // Field stageVariables:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #14                 // class java/util/HashMap
      12: dup
      13: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      16: putfield      #29                 // Field stageVariables:Ljava/util/Map;
      19: aload_0
      20: getfield      #29                 // Field stageVariables:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #17                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #18                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #20                 // String Duplicated keys (
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #22                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #23                 // String ) are provided.
      57: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #29                 // Field stageVariables:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest clearStageVariablesEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #29                 // Field stageVariables:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #31                 // String {
      11: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #32                 // Method getRestApiId:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #18                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #33                 // String RestApiId:
      32: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #32                 // Method getRestApiId:()Ljava/lang/String;
      39: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #34                 // String ,
      44: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #35                 // Method getResourceId:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #18                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #36                 // String ResourceId:
      71: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #35                 // Method getResourceId:()Ljava/lang/String;
      78: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #34                 // String ,
      83: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #37                 // Method getHttpMethod:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #18                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #38                 // String HttpMethod:
     110: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #37                 // Method getHttpMethod:()Ljava/lang/String;
     117: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #34                 // String ,
     122: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #39                 // Method getPathWithQueryString:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #18                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #40                 // String PathWithQueryString:
     149: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #39                 // Method getPathWithQueryString:()Ljava/lang/String;
     156: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #34                 // String ,
     161: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #41                 // Method getBody:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #18                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #42                 // String Body:
     188: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #41                 // Method getBody:()Ljava/lang/String;
     195: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #34                 // String ,
     200: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #43                 // Method getHeaders:()Ljava/util/Map;
     214: ifnull        249
     217: aload_1
     218: new           #18                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #44                 // String Headers:
     227: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #43                 // Method getHeaders:()Ljava/util/Map;
     234: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #34                 // String ,
     239: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #46                 // Method getClientCertificateId:()Ljava/lang/String;
     253: ifnull        288
     256: aload_1
     257: new           #18                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #47                 // String ClientCertificateId:
     266: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #46                 // Method getClientCertificateId:()Ljava/lang/String;
     273: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #34                 // String ,
     278: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #48                 // Method getStageVariables:()Ljava/util/Map;
     292: ifnull        322
     295: aload_1
     296: new           #18                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #49                 // String StageVariables:
     305: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #48                 // Method getStageVariables:()Ljava/util/Map;
     312: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     318: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     321: pop
     322: aload_1
     323: ldc           #50                 // String }
     325: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     328: pop
     329: aload_1
     330: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     333: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #51                 // class com/amazonaws/services/apigateway/model/TestInvokeMethodRequest
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #51                 // class com/amazonaws/services/apigateway/model/TestInvokeMethodRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #32                 // Method getRestApiId:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #32                 // Method getRestApiId:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #32                 // Method getRestApiId:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #32                 // Method getRestApiId:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #32                 // Method getRestApiId:()Ljava/lang/String;
      72: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #35                 // Method getResourceId:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #35                 // Method getResourceId:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #35                 // Method getResourceId:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #35                 // Method getResourceId:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #35                 // Method getResourceId:()Ljava/lang/String;
     125: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #37                 // Method getHttpMethod:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #37                 // Method getHttpMethod:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #37                 // Method getHttpMethod:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #37                 // Method getHttpMethod:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #37                 // Method getHttpMethod:()Ljava/lang/String;
     178: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #39                 // Method getPathWithQueryString:()Ljava/lang/String;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #39                 // Method getPathWithQueryString:()Ljava/lang/String;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #39                 // Method getPathWithQueryString:()Ljava/lang/String;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #39                 // Method getPathWithQueryString:()Ljava/lang/String;
     227: aload_0
     228: invokevirtual #39                 // Method getPathWithQueryString:()Ljava/lang/String;
     231: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #41                 // Method getBody:()Ljava/lang/String;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #41                 // Method getBody:()Ljava/lang/String;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #41                 // Method getBody:()Ljava/lang/String;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #41                 // Method getBody:()Ljava/lang/String;
     280: aload_0
     281: invokevirtual #41                 // Method getBody:()Ljava/lang/String;
     284: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload_2
     293: invokevirtual #43                 // Method getHeaders:()Ljava/util/Map;
     296: ifnonnull     303
     299: iconst_1
     300: goto          304
     303: iconst_0
     304: aload_0
     305: invokevirtual #43                 // Method getHeaders:()Ljava/util/Map;
     308: ifnonnull     315
     311: iconst_1
     312: goto          316
     315: iconst_0
     316: ixor
     317: ifeq          322
     320: iconst_0
     321: ireturn
     322: aload_2
     323: invokevirtual #43                 // Method getHeaders:()Ljava/util/Map;
     326: ifnull        347
     329: aload_2
     330: invokevirtual #43                 // Method getHeaders:()Ljava/util/Map;
     333: aload_0
     334: invokevirtual #43                 // Method getHeaders:()Ljava/util/Map;
     337: invokeinterface #53,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     342: ifne          347
     345: iconst_0
     346: ireturn
     347: aload_2
     348: invokevirtual #46                 // Method getClientCertificateId:()Ljava/lang/String;
     351: ifnonnull     358
     354: iconst_1
     355: goto          359
     358: iconst_0
     359: aload_0
     360: invokevirtual #46                 // Method getClientCertificateId:()Ljava/lang/String;
     363: ifnonnull     370
     366: iconst_1
     367: goto          371
     370: iconst_0
     371: ixor
     372: ifeq          377
     375: iconst_0
     376: ireturn
     377: aload_2
     378: invokevirtual #46                 // Method getClientCertificateId:()Ljava/lang/String;
     381: ifnull        400
     384: aload_2
     385: invokevirtual #46                 // Method getClientCertificateId:()Ljava/lang/String;
     388: aload_0
     389: invokevirtual #46                 // Method getClientCertificateId:()Ljava/lang/String;
     392: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     395: ifne          400
     398: iconst_0
     399: ireturn
     400: aload_2
     401: invokevirtual #48                 // Method getStageVariables:()Ljava/util/Map;
     404: ifnonnull     411
     407: iconst_1
     408: goto          412
     411: iconst_0
     412: aload_0
     413: invokevirtual #48                 // Method getStageVariables:()Ljava/util/Map;
     416: ifnonnull     423
     419: iconst_1
     420: goto          424
     423: iconst_0
     424: ixor
     425: ifeq          430
     428: iconst_0
     429: ireturn
     430: aload_2
     431: invokevirtual #48                 // Method getStageVariables:()Ljava/util/Map;
     434: ifnull        455
     437: aload_2
     438: invokevirtual #48                 // Method getStageVariables:()Ljava/util/Map;
     441: aload_0
     442: invokevirtual #48                 // Method getStageVariables:()Ljava/util/Map;
     445: invokeinterface #53,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     450: ifne          455
     453: iconst_0
     454: ireturn
     455: iconst_1
     456: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #32                 // Method getRestApiId:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #32                 // Method getRestApiId:()Ljava/lang/String;
      24: invokevirtual #54                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #35                 // Method getResourceId:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #35                 // Method getResourceId:()Ljava/lang/String;
      48: invokevirtual #54                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #37                 // Method getHttpMethod:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #37                 // Method getHttpMethod:()Ljava/lang/String;
      72: invokevirtual #54                 // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #39                 // Method getPathWithQueryString:()Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #39                 // Method getPathWithQueryString:()Ljava/lang/String;
      96: invokevirtual #54                 // Method java/lang/String.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #41                 // Method getBody:()Ljava/lang/String;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #41                 // Method getBody:()Ljava/lang/String;
     120: invokevirtual #54                 // Method java/lang/String.hashCode:()I
     123: iadd
     124: istore_2
     125: bipush        31
     127: iload_2
     128: imul
     129: aload_0
     130: invokevirtual #43                 // Method getHeaders:()Ljava/util/Map;
     133: ifnonnull     140
     136: iconst_0
     137: goto          149
     140: aload_0
     141: invokevirtual #43                 // Method getHeaders:()Ljava/util/Map;
     144: invokeinterface #55,  1           // InterfaceMethod java/util/Map.hashCode:()I
     149: iadd
     150: istore_2
     151: bipush        31
     153: iload_2
     154: imul
     155: aload_0
     156: invokevirtual #46                 // Method getClientCertificateId:()Ljava/lang/String;
     159: ifnonnull     166
     162: iconst_0
     163: goto          173
     166: aload_0
     167: invokevirtual #46                 // Method getClientCertificateId:()Ljava/lang/String;
     170: invokevirtual #54                 // Method java/lang/String.hashCode:()I
     173: iadd
     174: istore_2
     175: bipush        31
     177: iload_2
     178: imul
     179: aload_0
     180: invokevirtual #48                 // Method getStageVariables:()Ljava/util/Map;
     183: ifnonnull     190
     186: iconst_0
     187: goto          199
     190: aload_0
     191: invokevirtual #48                 // Method getStageVariables:()Ljava/util/Map;
     194: invokeinterface #55,  1           // InterfaceMethod java/util/Map.hashCode:()I
     199: iadd
     200: istore_2
     201: iload_2
     202: ireturn

  public com.amazonaws.services.apigateway.model.TestInvokeMethodRequest clone();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method com/amazonaws/AmazonWebServiceRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
       4: checkcast     #51                 // class com/amazonaws/services/apigateway/model/TestInvokeMethodRequest
       7: areturn

  public com.amazonaws.AmazonWebServiceRequest clone();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method clone:()Lcom/amazonaws/services/apigateway/model/TestInvokeMethodRequest;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method clone:()Lcom/amazonaws/services/apigateway/model/TestInvokeMethodRequest;
       4: areturn
}
