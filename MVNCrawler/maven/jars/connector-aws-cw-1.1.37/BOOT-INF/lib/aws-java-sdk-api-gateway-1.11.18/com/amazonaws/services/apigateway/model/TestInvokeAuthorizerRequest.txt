Compiled from "TestInvokeAuthorizerRequest.java"
public class com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest extends com.amazonaws.AmazonWebServiceRequest implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String restApiId;

  private java.lang.String authorizerId;

  private java.util.Map<java.lang.String, java.lang.String> headers;

  private java.lang.String pathWithQueryString;

  private java.lang.String body;

  private java.util.Map<java.lang.String, java.lang.String> stageVariables;

  private java.util.Map<java.lang.String, java.lang.String> additionalContext;

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: return

  public void setRestApiId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field restApiId:Ljava/lang/String;
       5: return

  public java.lang.String getRestApiId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field restApiId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest withRestApiId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setRestApiId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setAuthorizerId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field authorizerId:Ljava/lang/String;
       5: return

  public java.lang.String getAuthorizerId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field authorizerId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest withAuthorizerId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setAuthorizerId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getHeaders();
    Code:
       0: aload_0
       1: getfield      #6                  // Field headers:Ljava/util/Map;
       4: areturn

  public void setHeaders(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field headers:Ljava/util/Map;
       5: return

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest withHeaders(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setHeaders:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest addHeadersEntry(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #6                  // Field headers:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #8                  // class java/util/HashMap
      12: dup
      13: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      16: putfield      #6                  // Field headers:Ljava/util/Map;
      19: aload_0
      20: getfield      #6                  // Field headers:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #10,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #11                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #12                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #14                 // String Duplicated keys (
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #16                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #17                 // String ) are provided.
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #6                  // Field headers:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest clearHeadersEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #6                  // Field headers:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setPathWithQueryString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field pathWithQueryString:Ljava/lang/String;
       5: return

  public java.lang.String getPathWithQueryString();
    Code:
       0: aload_0
       1: getfield      #21                 // Field pathWithQueryString:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest withPathWithQueryString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method setPathWithQueryString:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setBody(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field body:Ljava/lang/String;
       5: return

  public java.lang.String getBody();
    Code:
       0: aload_0
       1: getfield      #23                 // Field body:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest withBody(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setBody:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getStageVariables();
    Code:
       0: aload_0
       1: getfield      #25                 // Field stageVariables:Ljava/util/Map;
       4: areturn

  public void setStageVariables(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field stageVariables:Ljava/util/Map;
       5: return

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest withStageVariables(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setStageVariables:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest addStageVariablesEntry(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #25                 // Field stageVariables:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #8                  // class java/util/HashMap
      12: dup
      13: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      16: putfield      #25                 // Field stageVariables:Ljava/util/Map;
      19: aload_0
      20: getfield      #25                 // Field stageVariables:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #10,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #11                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #12                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #14                 // String Duplicated keys (
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #16                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #17                 // String ) are provided.
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #25                 // Field stageVariables:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest clearStageVariablesEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #25                 // Field stageVariables:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getAdditionalContext();
    Code:
       0: aload_0
       1: getfield      #27                 // Field additionalContext:Ljava/util/Map;
       4: areturn

  public void setAdditionalContext(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field additionalContext:Ljava/util/Map;
       5: return

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest withAdditionalContext(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setAdditionalContext:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest addAdditionalContextEntry(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #27                 // Field additionalContext:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #8                  // class java/util/HashMap
      12: dup
      13: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      16: putfield      #27                 // Field additionalContext:Ljava/util/Map;
      19: aload_0
      20: getfield      #27                 // Field additionalContext:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #10,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #11                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #12                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #14                 // String Duplicated keys (
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #16                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #17                 // String ) are provided.
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #27                 // Field additionalContext:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest clearAdditionalContextEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #27                 // Field additionalContext:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #29                 // String {
      11: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #30                 // Method getRestApiId:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #12                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #31                 // String RestApiId:
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #30                 // Method getRestApiId:()Ljava/lang/String;
      39: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #32                 // String ,
      44: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #33                 // Method getAuthorizerId:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #12                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #34                 // String AuthorizerId:
      71: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #33                 // Method getAuthorizerId:()Ljava/lang/String;
      78: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #32                 // String ,
      83: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #35                 // Method getHeaders:()Ljava/util/Map;
      97: ifnull        132
     100: aload_1
     101: new           #12                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #36                 // String Headers:
     110: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #35                 // Method getHeaders:()Ljava/util/Map;
     117: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #32                 // String ,
     122: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #38                 // Method getPathWithQueryString:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #12                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #39                 // String PathWithQueryString:
     149: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #38                 // Method getPathWithQueryString:()Ljava/lang/String;
     156: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #32                 // String ,
     161: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #40                 // Method getBody:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #12                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #41                 // String Body:
     188: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #40                 // Method getBody:()Ljava/lang/String;
     195: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #32                 // String ,
     200: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #42                 // Method getStageVariables:()Ljava/util/Map;
     214: ifnull        249
     217: aload_1
     218: new           #12                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #43                 // String StageVariables:
     227: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #42                 // Method getStageVariables:()Ljava/util/Map;
     234: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #32                 // String ,
     239: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #44                 // Method getAdditionalContext:()Ljava/util/Map;
     253: ifnull        283
     256: aload_1
     257: new           #12                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #45                 // String AdditionalContext:
     266: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #44                 // Method getAdditionalContext:()Ljava/util/Map;
     273: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     279: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     282: pop
     283: aload_1
     284: ldc           #46                 // String }
     286: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: pop
     290: aload_1
     291: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     294: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #47                 // class com/amazonaws/services/apigateway/model/TestInvokeAuthorizerRequest
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #47                 // class com/amazonaws/services/apigateway/model/TestInvokeAuthorizerRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #30                 // Method getRestApiId:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #30                 // Method getRestApiId:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #30                 // Method getRestApiId:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #30                 // Method getRestApiId:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #30                 // Method getRestApiId:()Ljava/lang/String;
      72: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #33                 // Method getAuthorizerId:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #33                 // Method getAuthorizerId:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #33                 // Method getAuthorizerId:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #33                 // Method getAuthorizerId:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #33                 // Method getAuthorizerId:()Ljava/lang/String;
     125: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #35                 // Method getHeaders:()Ljava/util/Map;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #35                 // Method getHeaders:()Ljava/util/Map;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #35                 // Method getHeaders:()Ljava/util/Map;
     167: ifnull        188
     170: aload_2
     171: invokevirtual #35                 // Method getHeaders:()Ljava/util/Map;
     174: aload_0
     175: invokevirtual #35                 // Method getHeaders:()Ljava/util/Map;
     178: invokeinterface #49,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     183: ifne          188
     186: iconst_0
     187: ireturn
     188: aload_2
     189: invokevirtual #38                 // Method getPathWithQueryString:()Ljava/lang/String;
     192: ifnonnull     199
     195: iconst_1
     196: goto          200
     199: iconst_0
     200: aload_0
     201: invokevirtual #38                 // Method getPathWithQueryString:()Ljava/lang/String;
     204: ifnonnull     211
     207: iconst_1
     208: goto          212
     211: iconst_0
     212: ixor
     213: ifeq          218
     216: iconst_0
     217: ireturn
     218: aload_2
     219: invokevirtual #38                 // Method getPathWithQueryString:()Ljava/lang/String;
     222: ifnull        241
     225: aload_2
     226: invokevirtual #38                 // Method getPathWithQueryString:()Ljava/lang/String;
     229: aload_0
     230: invokevirtual #38                 // Method getPathWithQueryString:()Ljava/lang/String;
     233: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     236: ifne          241
     239: iconst_0
     240: ireturn
     241: aload_2
     242: invokevirtual #40                 // Method getBody:()Ljava/lang/String;
     245: ifnonnull     252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: aload_0
     254: invokevirtual #40                 // Method getBody:()Ljava/lang/String;
     257: ifnonnull     264
     260: iconst_1
     261: goto          265
     264: iconst_0
     265: ixor
     266: ifeq          271
     269: iconst_0
     270: ireturn
     271: aload_2
     272: invokevirtual #40                 // Method getBody:()Ljava/lang/String;
     275: ifnull        294
     278: aload_2
     279: invokevirtual #40                 // Method getBody:()Ljava/lang/String;
     282: aload_0
     283: invokevirtual #40                 // Method getBody:()Ljava/lang/String;
     286: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     289: ifne          294
     292: iconst_0
     293: ireturn
     294: aload_2
     295: invokevirtual #42                 // Method getStageVariables:()Ljava/util/Map;
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: aload_0
     307: invokevirtual #42                 // Method getStageVariables:()Ljava/util/Map;
     310: ifnonnull     317
     313: iconst_1
     314: goto          318
     317: iconst_0
     318: ixor
     319: ifeq          324
     322: iconst_0
     323: ireturn
     324: aload_2
     325: invokevirtual #42                 // Method getStageVariables:()Ljava/util/Map;
     328: ifnull        349
     331: aload_2
     332: invokevirtual #42                 // Method getStageVariables:()Ljava/util/Map;
     335: aload_0
     336: invokevirtual #42                 // Method getStageVariables:()Ljava/util/Map;
     339: invokeinterface #49,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     344: ifne          349
     347: iconst_0
     348: ireturn
     349: aload_2
     350: invokevirtual #44                 // Method getAdditionalContext:()Ljava/util/Map;
     353: ifnonnull     360
     356: iconst_1
     357: goto          361
     360: iconst_0
     361: aload_0
     362: invokevirtual #44                 // Method getAdditionalContext:()Ljava/util/Map;
     365: ifnonnull     372
     368: iconst_1
     369: goto          373
     372: iconst_0
     373: ixor
     374: ifeq          379
     377: iconst_0
     378: ireturn
     379: aload_2
     380: invokevirtual #44                 // Method getAdditionalContext:()Ljava/util/Map;
     383: ifnull        404
     386: aload_2
     387: invokevirtual #44                 // Method getAdditionalContext:()Ljava/util/Map;
     390: aload_0
     391: invokevirtual #44                 // Method getAdditionalContext:()Ljava/util/Map;
     394: invokeinterface #49,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     399: ifne          404
     402: iconst_0
     403: ireturn
     404: iconst_1
     405: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #30                 // Method getRestApiId:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #30                 // Method getRestApiId:()Ljava/lang/String;
      24: invokevirtual #50                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #33                 // Method getAuthorizerId:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #33                 // Method getAuthorizerId:()Ljava/lang/String;
      48: invokevirtual #50                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #35                 // Method getHeaders:()Ljava/util/Map;
      61: ifnonnull     68
      64: iconst_0
      65: goto          77
      68: aload_0
      69: invokevirtual #35                 // Method getHeaders:()Ljava/util/Map;
      72: invokeinterface #51,  1           // InterfaceMethod java/util/Map.hashCode:()I
      77: iadd
      78: istore_2
      79: bipush        31
      81: iload_2
      82: imul
      83: aload_0
      84: invokevirtual #38                 // Method getPathWithQueryString:()Ljava/lang/String;
      87: ifnonnull     94
      90: iconst_0
      91: goto          101
      94: aload_0
      95: invokevirtual #38                 // Method getPathWithQueryString:()Ljava/lang/String;
      98: invokevirtual #50                 // Method java/lang/String.hashCode:()I
     101: iadd
     102: istore_2
     103: bipush        31
     105: iload_2
     106: imul
     107: aload_0
     108: invokevirtual #40                 // Method getBody:()Ljava/lang/String;
     111: ifnonnull     118
     114: iconst_0
     115: goto          125
     118: aload_0
     119: invokevirtual #40                 // Method getBody:()Ljava/lang/String;
     122: invokevirtual #50                 // Method java/lang/String.hashCode:()I
     125: iadd
     126: istore_2
     127: bipush        31
     129: iload_2
     130: imul
     131: aload_0
     132: invokevirtual #42                 // Method getStageVariables:()Ljava/util/Map;
     135: ifnonnull     142
     138: iconst_0
     139: goto          151
     142: aload_0
     143: invokevirtual #42                 // Method getStageVariables:()Ljava/util/Map;
     146: invokeinterface #51,  1           // InterfaceMethod java/util/Map.hashCode:()I
     151: iadd
     152: istore_2
     153: bipush        31
     155: iload_2
     156: imul
     157: aload_0
     158: invokevirtual #44                 // Method getAdditionalContext:()Ljava/util/Map;
     161: ifnonnull     168
     164: iconst_0
     165: goto          177
     168: aload_0
     169: invokevirtual #44                 // Method getAdditionalContext:()Ljava/util/Map;
     172: invokeinterface #51,  1           // InterfaceMethod java/util/Map.hashCode:()I
     177: iadd
     178: istore_2
     179: iload_2
     180: ireturn

  public com.amazonaws.services.apigateway.model.TestInvokeAuthorizerRequest clone();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method com/amazonaws/AmazonWebServiceRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
       4: checkcast     #47                 // class com/amazonaws/services/apigateway/model/TestInvokeAuthorizerRequest
       7: areturn

  public com.amazonaws.AmazonWebServiceRequest clone();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method clone:()Lcom/amazonaws/services/apigateway/model/TestInvokeAuthorizerRequest;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method clone:()Lcom/amazonaws/services/apigateway/model/TestInvokeAuthorizerRequest;
       4: areturn
}
