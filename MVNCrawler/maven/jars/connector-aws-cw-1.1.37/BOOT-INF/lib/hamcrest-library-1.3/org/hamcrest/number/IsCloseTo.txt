Compiled from "IsCloseTo.java"
public class org.hamcrest.number.IsCloseTo extends org.hamcrest.TypeSafeMatcher<java.lang.Double> {
  private final double delta;

  private final double value;

  public org.hamcrest.number.IsCloseTo(double, double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hamcrest/TypeSafeMatcher."<init>":()V
       4: aload_0
       5: dload_3
       6: putfield      #2                  // Field delta:D
       9: aload_0
      10: dload_1
      11: putfield      #3                  // Field value:D
      14: return

  public boolean matchesSafely(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method actualDelta:(Ljava/lang/Double;)D
       5: dconst_0
       6: dcmpg
       7: ifgt          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void describeMismatchSafely(java.lang.Double, org.hamcrest.Description);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod org/hamcrest/Description.appendValue:(Ljava/lang/Object;)Lorg/hamcrest/Description;
       7: ldc           #6                  // String  differed by
       9: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
      14: aload_0
      15: aload_1
      16: invokespecial #4                  // Method actualDelta:(Ljava/lang/Double;)D
      19: invokestatic  #8                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      22: invokeinterface #5,  2            // InterfaceMethod org/hamcrest/Description.appendValue:(Ljava/lang/Object;)Lorg/hamcrest/Description;
      27: pop
      28: return

  public void describeTo(org.hamcrest.Description);
    Code:
       0: aload_1
       1: ldc           #9                  // String a numeric value within
       3: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
       8: aload_0
       9: getfield      #2                  // Field delta:D
      12: invokestatic  #8                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      15: invokeinterface #5,  2            // InterfaceMethod org/hamcrest/Description.appendValue:(Ljava/lang/Object;)Lorg/hamcrest/Description;
      20: ldc           #10                 // String  of
      22: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
      27: aload_0
      28: getfield      #3                  // Field value:D
      31: invokestatic  #8                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      34: invokeinterface #5,  2            // InterfaceMethod org/hamcrest/Description.appendValue:(Ljava/lang/Object;)Lorg/hamcrest/Description;
      39: pop
      40: return

  private double actualDelta(java.lang.Double);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/lang/Double.doubleValue:()D
       4: aload_0
       5: getfield      #3                  // Field value:D
       8: dsub
       9: invokestatic  #12                 // Method java/lang/Math.abs:(D)D
      12: aload_0
      13: getfield      #2                  // Field delta:D
      16: dsub
      17: dreturn

  public static org.hamcrest.Matcher<java.lang.Double> closeTo(double, double);
    Code:
       0: new           #13                 // class org/hamcrest/number/IsCloseTo
       3: dup
       4: dload_0
       5: dload_2
       6: invokespecial #14                 // Method "<init>":(DD)V
       9: areturn

  public void describeMismatchSafely(java.lang.Object, org.hamcrest.Description);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class java/lang/Double
       5: aload_2
       6: invokevirtual #16                 // Method describeMismatchSafely:(Ljava/lang/Double;Lorg/hamcrest/Description;)V
       9: return

  public boolean matchesSafely(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class java/lang/Double
       5: invokevirtual #17                 // Method matchesSafely:(Ljava/lang/Double;)Z
       8: ireturn
}
