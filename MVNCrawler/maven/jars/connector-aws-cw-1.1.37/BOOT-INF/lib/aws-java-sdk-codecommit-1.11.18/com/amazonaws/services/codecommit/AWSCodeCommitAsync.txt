Compiled from "AWSCodeCommitAsync.java"
public interface com.amazonaws.services.codecommit.AWSCodeCommitAsync extends com.amazonaws.services.codecommit.AWSCodeCommit {
  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.BatchGetRepositoriesResult> batchGetRepositoriesAsync(com.amazonaws.services.codecommit.model.BatchGetRepositoriesRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.BatchGetRepositoriesResult> batchGetRepositoriesAsync(com.amazonaws.services.codecommit.model.BatchGetRepositoriesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.BatchGetRepositoriesRequest, com.amazonaws.services.codecommit.model.BatchGetRepositoriesResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.CreateBranchResult> createBranchAsync(com.amazonaws.services.codecommit.model.CreateBranchRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.CreateBranchResult> createBranchAsync(com.amazonaws.services.codecommit.model.CreateBranchRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.CreateBranchRequest, com.amazonaws.services.codecommit.model.CreateBranchResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.CreateRepositoryResult> createRepositoryAsync(com.amazonaws.services.codecommit.model.CreateRepositoryRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.CreateRepositoryResult> createRepositoryAsync(com.amazonaws.services.codecommit.model.CreateRepositoryRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.CreateRepositoryRequest, com.amazonaws.services.codecommit.model.CreateRepositoryResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.DeleteRepositoryResult> deleteRepositoryAsync(com.amazonaws.services.codecommit.model.DeleteRepositoryRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.DeleteRepositoryResult> deleteRepositoryAsync(com.amazonaws.services.codecommit.model.DeleteRepositoryRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.DeleteRepositoryRequest, com.amazonaws.services.codecommit.model.DeleteRepositoryResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetBranchResult> getBranchAsync(com.amazonaws.services.codecommit.model.GetBranchRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetBranchResult> getBranchAsync(com.amazonaws.services.codecommit.model.GetBranchRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.GetBranchRequest, com.amazonaws.services.codecommit.model.GetBranchResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetCommitResult> getCommitAsync(com.amazonaws.services.codecommit.model.GetCommitRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetCommitResult> getCommitAsync(com.amazonaws.services.codecommit.model.GetCommitRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.GetCommitRequest, com.amazonaws.services.codecommit.model.GetCommitResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetRepositoryResult> getRepositoryAsync(com.amazonaws.services.codecommit.model.GetRepositoryRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetRepositoryResult> getRepositoryAsync(com.amazonaws.services.codecommit.model.GetRepositoryRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.GetRepositoryRequest, com.amazonaws.services.codecommit.model.GetRepositoryResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetRepositoryTriggersResult> getRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.GetRepositoryTriggersRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetRepositoryTriggersResult> getRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.GetRepositoryTriggersRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.GetRepositoryTriggersRequest, com.amazonaws.services.codecommit.model.GetRepositoryTriggersResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.ListBranchesResult> listBranchesAsync(com.amazonaws.services.codecommit.model.ListBranchesRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.ListBranchesResult> listBranchesAsync(com.amazonaws.services.codecommit.model.ListBranchesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.ListBranchesRequest, com.amazonaws.services.codecommit.model.ListBranchesResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.ListRepositoriesResult> listRepositoriesAsync(com.amazonaws.services.codecommit.model.ListRepositoriesRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.ListRepositoriesResult> listRepositoriesAsync(com.amazonaws.services.codecommit.model.ListRepositoriesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.ListRepositoriesRequest, com.amazonaws.services.codecommit.model.ListRepositoriesResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.PutRepositoryTriggersResult> putRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.PutRepositoryTriggersRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.PutRepositoryTriggersResult> putRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.PutRepositoryTriggersRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.PutRepositoryTriggersRequest, com.amazonaws.services.codecommit.model.PutRepositoryTriggersResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.TestRepositoryTriggersResult> testRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.TestRepositoryTriggersRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.TestRepositoryTriggersResult> testRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.TestRepositoryTriggersRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.TestRepositoryTriggersRequest, com.amazonaws.services.codecommit.model.TestRepositoryTriggersResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateDefaultBranchResult> updateDefaultBranchAsync(com.amazonaws.services.codecommit.model.UpdateDefaultBranchRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateDefaultBranchResult> updateDefaultBranchAsync(com.amazonaws.services.codecommit.model.UpdateDefaultBranchRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.UpdateDefaultBranchRequest, com.amazonaws.services.codecommit.model.UpdateDefaultBranchResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionResult> updateRepositoryDescriptionAsync(com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionResult> updateRepositoryDescriptionAsync(com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionRequest, com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionResult>);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateRepositoryNameResult> updateRepositoryNameAsync(com.amazonaws.services.codecommit.model.UpdateRepositoryNameRequest);

  public abstract java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateRepositoryNameResult> updateRepositoryNameAsync(com.amazonaws.services.codecommit.model.UpdateRepositoryNameRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.UpdateRepositoryNameRequest, com.amazonaws.services.codecommit.model.UpdateRepositoryNameResult>);
}
