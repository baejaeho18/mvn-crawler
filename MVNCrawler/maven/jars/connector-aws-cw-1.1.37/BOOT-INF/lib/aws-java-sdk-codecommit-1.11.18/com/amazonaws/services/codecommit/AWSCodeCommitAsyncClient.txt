Compiled from "AWSCodeCommitAsyncClient.java"
public class com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient extends com.amazonaws.services.codecommit.AWSCodeCommitClient implements com.amazonaws.services.codecommit.AWSCodeCommitAsync {
  private static final int DEFAULT_THREAD_POOL_SIZE;

  private final java.util.concurrent.ExecutorService executorService;

  public com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient();
    Code:
       0: aload_0
       1: new           #1                  // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       4: dup
       5: invokespecial #2                  // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      11: return

  public com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient(com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: new           #1                  // class com/amazonaws/auth/DefaultAWSCredentialsProviderChain
       4: dup
       5: invokespecial #2                  // Method com/amazonaws/auth/DefaultAWSCredentialsProviderChain."<init>":()V
       8: aload_1
       9: aload_1
      10: invokevirtual #4                  // Method com/amazonaws/ClientConfiguration.getMaxConnections:()I
      13: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      16: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      19: return

  public com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient(com.amazonaws.auth.AWSCredentials);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        50
       4: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
       7: invokespecial #8                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Ljava/util/concurrent/ExecutorService;)V
      10: return

  public com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient(com.amazonaws.auth.AWSCredentials, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #9                  // Field configFactory:Lcom/amazonaws/ClientConfigurationFactory;
       5: invokevirtual #10                 // Method com/amazonaws/ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       8: aload_2
       9: invokespecial #11                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      12: return

  public com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient(com.amazonaws.auth.AWSCredentials, com.amazonaws.ClientConfiguration, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method com/amazonaws/services/codecommit/AWSCodeCommitClient."<init>":(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/ClientConfiguration;)V
       6: aload_0
       7: aload_3
       8: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      11: return

  public com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient(com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        50
       4: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
       7: invokespecial #14                 // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Ljava/util/concurrent/ExecutorService;)V
      10: return

  public com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokevirtual #4                  // Method com/amazonaws/ClientConfiguration.getMaxConnections:()I
       7: invokestatic  #5                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      10: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      13: return

  public com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient(com.amazonaws.auth.AWSCredentialsProvider, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #9                  // Field configFactory:Lcom/amazonaws/ClientConfigurationFactory;
       5: invokevirtual #10                 // Method com/amazonaws/ClientConfigurationFactory.getConfig:()Lcom/amazonaws/ClientConfiguration;
       8: aload_2
       9: invokespecial #6                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;Ljava/util/concurrent/ExecutorService;)V
      12: return

  public com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient(com.amazonaws.auth.AWSCredentialsProvider, com.amazonaws.ClientConfiguration, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method com/amazonaws/services/codecommit/AWSCodeCommitClient."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;)V
       6: aload_0
       7: aload_3
       8: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      11: return

  com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient(com.amazonaws.client.AwsAsyncClientParams);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method com/amazonaws/services/codecommit/AWSCodeCommitClient."<init>":(Lcom/amazonaws/client/AwsSyncClientParams;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #17                 // Method com/amazonaws/client/AwsAsyncClientParams.getExecutor:()Ljava/util/concurrent/ExecutorService;
      10: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      13: return

  public java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.BatchGetRepositoriesResult> batchGetRepositoriesAsync(com.amazonaws.services.codecommit.model.BatchGetRepositoriesRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #18                 // Method batchGetRepositoriesAsync:(Lcom/amazonaws/services/codecommit/model/BatchGetRepositoriesRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.BatchGetRepositoriesResult> batchGetRepositoriesAsync(com.amazonaws.services.codecommit.model.BatchGetRepositoriesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.BatchGetRepositoriesRequest, com.amazonaws.services.codecommit.model.BatchGetRepositoriesResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #19                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$1
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #20                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$1."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/BatchGetRepositoriesRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.CreateBranchResult> createBranchAsync(com.amazonaws.services.codecommit.model.CreateBranchRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #22                 // Method createBranchAsync:(Lcom/amazonaws/services/codecommit/model/CreateBranchRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.CreateBranchResult> createBranchAsync(com.amazonaws.services.codecommit.model.CreateBranchRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.CreateBranchRequest, com.amazonaws.services.codecommit.model.CreateBranchResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #23                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$2
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #24                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$2."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/CreateBranchRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.CreateRepositoryResult> createRepositoryAsync(com.amazonaws.services.codecommit.model.CreateRepositoryRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #25                 // Method createRepositoryAsync:(Lcom/amazonaws/services/codecommit/model/CreateRepositoryRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.CreateRepositoryResult> createRepositoryAsync(com.amazonaws.services.codecommit.model.CreateRepositoryRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.CreateRepositoryRequest, com.amazonaws.services.codecommit.model.CreateRepositoryResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #26                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$3
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #27                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$3."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/CreateRepositoryRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.DeleteRepositoryResult> deleteRepositoryAsync(com.amazonaws.services.codecommit.model.DeleteRepositoryRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #28                 // Method deleteRepositoryAsync:(Lcom/amazonaws/services/codecommit/model/DeleteRepositoryRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.DeleteRepositoryResult> deleteRepositoryAsync(com.amazonaws.services.codecommit.model.DeleteRepositoryRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.DeleteRepositoryRequest, com.amazonaws.services.codecommit.model.DeleteRepositoryResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #29                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$4
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #30                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$4."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/DeleteRepositoryRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetBranchResult> getBranchAsync(com.amazonaws.services.codecommit.model.GetBranchRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #31                 // Method getBranchAsync:(Lcom/amazonaws/services/codecommit/model/GetBranchRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetBranchResult> getBranchAsync(com.amazonaws.services.codecommit.model.GetBranchRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.GetBranchRequest, com.amazonaws.services.codecommit.model.GetBranchResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #32                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$5
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #33                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$5."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/GetBranchRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetCommitResult> getCommitAsync(com.amazonaws.services.codecommit.model.GetCommitRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #34                 // Method getCommitAsync:(Lcom/amazonaws/services/codecommit/model/GetCommitRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetCommitResult> getCommitAsync(com.amazonaws.services.codecommit.model.GetCommitRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.GetCommitRequest, com.amazonaws.services.codecommit.model.GetCommitResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #35                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$6
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #36                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$6."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/GetCommitRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetRepositoryResult> getRepositoryAsync(com.amazonaws.services.codecommit.model.GetRepositoryRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #37                 // Method getRepositoryAsync:(Lcom/amazonaws/services/codecommit/model/GetRepositoryRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetRepositoryResult> getRepositoryAsync(com.amazonaws.services.codecommit.model.GetRepositoryRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.GetRepositoryRequest, com.amazonaws.services.codecommit.model.GetRepositoryResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #38                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$7
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #39                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$7."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/GetRepositoryRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetRepositoryTriggersResult> getRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.GetRepositoryTriggersRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #40                 // Method getRepositoryTriggersAsync:(Lcom/amazonaws/services/codecommit/model/GetRepositoryTriggersRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.GetRepositoryTriggersResult> getRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.GetRepositoryTriggersRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.GetRepositoryTriggersRequest, com.amazonaws.services.codecommit.model.GetRepositoryTriggersResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #41                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$8
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #42                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$8."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/GetRepositoryTriggersRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.ListBranchesResult> listBranchesAsync(com.amazonaws.services.codecommit.model.ListBranchesRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #43                 // Method listBranchesAsync:(Lcom/amazonaws/services/codecommit/model/ListBranchesRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.ListBranchesResult> listBranchesAsync(com.amazonaws.services.codecommit.model.ListBranchesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.ListBranchesRequest, com.amazonaws.services.codecommit.model.ListBranchesResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #44                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$9
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #45                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$9."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/ListBranchesRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.ListRepositoriesResult> listRepositoriesAsync(com.amazonaws.services.codecommit.model.ListRepositoriesRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #46                 // Method listRepositoriesAsync:(Lcom/amazonaws/services/codecommit/model/ListRepositoriesRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.ListRepositoriesResult> listRepositoriesAsync(com.amazonaws.services.codecommit.model.ListRepositoriesRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.ListRepositoriesRequest, com.amazonaws.services.codecommit.model.ListRepositoriesResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #47                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$10
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #48                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$10."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/ListRepositoriesRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.PutRepositoryTriggersResult> putRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.PutRepositoryTriggersRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #49                 // Method putRepositoryTriggersAsync:(Lcom/amazonaws/services/codecommit/model/PutRepositoryTriggersRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.PutRepositoryTriggersResult> putRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.PutRepositoryTriggersRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.PutRepositoryTriggersRequest, com.amazonaws.services.codecommit.model.PutRepositoryTriggersResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #50                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$11
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #51                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$11."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/PutRepositoryTriggersRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.TestRepositoryTriggersResult> testRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.TestRepositoryTriggersRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #52                 // Method testRepositoryTriggersAsync:(Lcom/amazonaws/services/codecommit/model/TestRepositoryTriggersRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.TestRepositoryTriggersResult> testRepositoryTriggersAsync(com.amazonaws.services.codecommit.model.TestRepositoryTriggersRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.TestRepositoryTriggersRequest, com.amazonaws.services.codecommit.model.TestRepositoryTriggersResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #53                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$12
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #54                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$12."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/TestRepositoryTriggersRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateDefaultBranchResult> updateDefaultBranchAsync(com.amazonaws.services.codecommit.model.UpdateDefaultBranchRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #55                 // Method updateDefaultBranchAsync:(Lcom/amazonaws/services/codecommit/model/UpdateDefaultBranchRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateDefaultBranchResult> updateDefaultBranchAsync(com.amazonaws.services.codecommit.model.UpdateDefaultBranchRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.UpdateDefaultBranchRequest, com.amazonaws.services.codecommit.model.UpdateDefaultBranchResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #56                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$13
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #57                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$13."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/UpdateDefaultBranchRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionResult> updateRepositoryDescriptionAsync(com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #58                 // Method updateRepositoryDescriptionAsync:(Lcom/amazonaws/services/codecommit/model/UpdateRepositoryDescriptionRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionResult> updateRepositoryDescriptionAsync(com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionRequest, com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #59                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$14
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #60                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$14."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/UpdateRepositoryDescriptionRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateRepositoryNameResult> updateRepositoryNameAsync(com.amazonaws.services.codecommit.model.UpdateRepositoryNameRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #61                 // Method updateRepositoryNameAsync:(Lcom/amazonaws/services/codecommit/model/UpdateRepositoryNameRequest;Lcom/amazonaws/handlers/AsyncHandler;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<com.amazonaws.services.codecommit.model.UpdateRepositoryNameResult> updateRepositoryNameAsync(com.amazonaws.services.codecommit.model.UpdateRepositoryNameRequest, com.amazonaws.handlers.AsyncHandler<com.amazonaws.services.codecommit.model.UpdateRepositoryNameRequest, com.amazonaws.services.codecommit.model.UpdateRepositoryNameResult>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: new           #62                 // class com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$15
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #63                 // Method com/amazonaws/services/codecommit/AWSCodeCommitAsyncClient$15."<init>":(Lcom/amazonaws/services/codecommit/AWSCodeCommitAsyncClient;Lcom/amazonaws/services/codecommit/model/UpdateRepositoryNameRequest;Lcom/amazonaws/handlers/AsyncHandler;)V
      14: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      19: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: invokespecial #64                 // Method com/amazonaws/services/codecommit/AWSCodeCommitClient.shutdown:()V
       4: aload_0
       5: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       8: invokeinterface #65,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
      13: pop
      14: return
}
