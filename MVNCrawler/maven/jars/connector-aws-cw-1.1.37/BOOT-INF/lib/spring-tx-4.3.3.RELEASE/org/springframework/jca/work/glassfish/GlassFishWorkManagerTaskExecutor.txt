Compiled from "GlassFishWorkManagerTaskExecutor.java"
public class org.springframework.jca.work.glassfish.GlassFishWorkManagerTaskExecutor extends org.springframework.jca.work.WorkManagerTaskExecutor {
  private static final java.lang.String WORK_MANAGER_FACTORY_CLASS;

  private final java.lang.reflect.Method getWorkManagerMethod;

  public org.springframework.jca.work.glassfish.GlassFishWorkManagerTaskExecutor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/jca/work/WorkManagerTaskExecutor."<init>":()V
       4: aload_0
       5: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #3                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      11: ldc           #5                  // String com.sun.enterprise.connectors.work.WorkManagerFactory
      13: invokevirtual #6                  // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      16: astore_1
      17: aload_0
      18: aload_1
      19: ldc           #7                  // String getWorkManager
      21: iconst_1
      22: anewarray     #8                  // class java/lang/Class
      25: dup
      26: iconst_0
      27: ldc           #9                  // class java/lang/String
      29: aastore
      30: invokevirtual #10                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      33: putfield      #11                 // Field getWorkManagerMethod:Ljava/lang/reflect/Method;
      36: goto          51
      39: astore_1
      40: new           #13                 // class java/lang/IllegalStateException
      43: dup
      44: ldc           #14                 // String Could not initialize GlassFishWorkManagerTaskExecutor because GlassFish API is not available
      46: aload_1
      47: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      50: athrow
      51: return
    Exception table:
       from    to  target type
           4    36    39   Class java/lang/Exception

  public void setThreadPoolName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field getWorkManagerMethod:Ljava/lang/reflect/Method;
       4: aconst_null
       5: iconst_1
       6: anewarray     #16                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: invokestatic  #17                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #18                 // class javax/resource/spi/work/WorkManager
      19: astore_2
      20: aload_2
      21: ifnonnull     56
      24: new           #19                 // class java/lang/IllegalArgumentException
      27: dup
      28: new           #20                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #22                 // String Specified thread pool name \'
      37: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #24                 // String \' does not correspond to an actual pool definition in GlassFish. Check your configuration!
      46: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: aload_2
      58: invokevirtual #27                 // Method setWorkManager:(Ljavax/resource/spi/work/WorkManager;)V
      61: return

  protected javax.resource.spi.work.WorkManager getDefaultWorkManager();
    Code:
       0: aload_0
       1: getfield      #11                 // Field getWorkManagerMethod:Ljava/lang/reflect/Method;
       4: aconst_null
       5: iconst_1
       6: anewarray     #16                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aconst_null
      12: aastore
      13: invokestatic  #17                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #18                 // class javax/resource/spi/work/WorkManager
      19: areturn
}
