Compiled from "JtaTransactionManager.java"
public class org.springframework.transaction.jta.JtaTransactionManager extends org.springframework.transaction.support.AbstractPlatformTransactionManager implements org.springframework.transaction.jta.TransactionFactory,org.springframework.beans.factory.InitializingBean,java.io.Serializable {
  public static final java.lang.String DEFAULT_USER_TRANSACTION_NAME;

  public static final java.lang.String[] FALLBACK_TRANSACTION_MANAGER_NAMES;

  public static final java.lang.String DEFAULT_TRANSACTION_SYNCHRONIZATION_REGISTRY_NAME;

  private transient org.springframework.jndi.JndiTemplate jndiTemplate;

  private transient javax.transaction.UserTransaction userTransaction;

  private java.lang.String userTransactionName;

  private boolean autodetectUserTransaction;

  private boolean cacheUserTransaction;

  private boolean userTransactionObtainedFromJndi;

  private transient javax.transaction.TransactionManager transactionManager;

  private java.lang.String transactionManagerName;

  private boolean autodetectTransactionManager;

  private transient javax.transaction.TransactionSynchronizationRegistry transactionSynchronizationRegistry;

  private java.lang.String transactionSynchronizationRegistryName;

  private boolean autodetectTransactionSynchronizationRegistry;

  private boolean allowCustomIsolationLevels;

  public org.springframework.transaction.jta.JtaTransactionManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/AbstractPlatformTransactionManager."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/jndi/JndiTemplate
       8: dup
       9: invokespecial #3                  // Method org/springframework/jndi/JndiTemplate."<init>":()V
      12: putfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field autodetectUserTransaction:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field cacheUserTransaction:Z
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field userTransactionObtainedFromJndi:Z
      30: aload_0
      31: iconst_1
      32: putfield      #8                  // Field autodetectTransactionManager:Z
      35: aload_0
      36: iconst_1
      37: putfield      #9                  // Field autodetectTransactionSynchronizationRegistry:Z
      40: aload_0
      41: iconst_0
      42: putfield      #10                 // Field allowCustomIsolationLevels:Z
      45: aload_0
      46: iconst_1
      47: invokevirtual #11                 // Method setNestedTransactionAllowed:(Z)V
      50: return

  public org.springframework.transaction.jta.JtaTransactionManager(javax.transaction.UserTransaction);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method "<init>":()V
       4: aload_1
       5: ldc           #13                 // String UserTransaction must not be null
       7: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
      15: return

  public org.springframework.transaction.jta.JtaTransactionManager(javax.transaction.UserTransaction, javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method "<init>":()V
       4: aload_1
       5: ldc           #13                 // String UserTransaction must not be null
       7: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #16                 // String TransactionManager must not be null
      13: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
      21: aload_0
      22: aload_2
      23: putfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
      26: return

  public org.springframework.transaction.jta.JtaTransactionManager(javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method "<init>":()V
       4: aload_1
       5: ldc           #16                 // String TransactionManager must not be null
       7: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
      15: aload_0
      16: aload_0
      17: aload_1
      18: invokevirtual #18                 // Method buildUserTransaction:(Ljavax/transaction/TransactionManager;)Ljavax/transaction/UserTransaction;
      21: putfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
      24: return

  public void setJndiTemplate(org.springframework.jndi.JndiTemplate);
    Code:
       0: aload_1
       1: ldc           #19                 // String JndiTemplate must not be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
      11: return

  public org.springframework.jndi.JndiTemplate getJndiTemplate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
       4: areturn

  public void setJndiEnvironment(java.util.Properties);
    Code:
       0: aload_0
       1: new           #2                  // class org/springframework/jndi/JndiTemplate
       4: dup
       5: aload_1
       6: invokespecial #20                 // Method org/springframework/jndi/JndiTemplate."<init>":(Ljava/util/Properties;)V
       9: putfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
      12: return

  public java.util.Properties getJndiEnvironment();
    Code:
       0: aload_0
       1: getfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
       4: invokevirtual #21                 // Method org/springframework/jndi/JndiTemplate.getEnvironment:()Ljava/util/Properties;
       7: areturn

  public void setUserTransaction(javax.transaction.UserTransaction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
       5: return

  public javax.transaction.UserTransaction getUserTransaction();
    Code:
       0: aload_0
       1: getfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
       4: areturn

  public void setUserTransactionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field userTransactionName:Ljava/lang/String;
       5: return

  public void setAutodetectUserTransaction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field autodetectUserTransaction:Z
       5: return

  public void setCacheUserTransaction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field cacheUserTransaction:Z
       5: return

  public void setTransactionManager(javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
       5: return

  public javax.transaction.TransactionManager getTransactionManager();
    Code:
       0: aload_0
       1: getfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
       4: areturn

  public void setTransactionManagerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field transactionManagerName:Ljava/lang/String;
       5: return

  public void setAutodetectTransactionManager(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field autodetectTransactionManager:Z
       5: return

  public void setTransactionSynchronizationRegistry(javax.transaction.TransactionSynchronizationRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
       5: return

  public javax.transaction.TransactionSynchronizationRegistry getTransactionSynchronizationRegistry();
    Code:
       0: aload_0
       1: getfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
       4: areturn

  public void setTransactionSynchronizationRegistryName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field transactionSynchronizationRegistryName:Ljava/lang/String;
       5: return

  public void setAutodetectTransactionSynchronizationRegistry(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field autodetectTransactionSynchronizationRegistry:Z
       5: return

  public void setAllowCustomIsolationLevels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field allowCustomIsolationLevels:Z
       5: return

  public void afterPropertiesSet() throws org.springframework.transaction.TransactionSystemException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method initUserTransactionAndTransactionManager:()V
       4: aload_0
       5: invokevirtual #27                 // Method checkUserTransactionAndTransactionManager:()V
       8: aload_0
       9: invokevirtual #28                 // Method initTransactionSynchronizationRegistry:()V
      12: return

  protected void initUserTransactionAndTransactionManager() throws org.springframework.transaction.TransactionSystemException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
       4: ifnonnull     67
       7: aload_0
       8: getfield      #22                 // Field userTransactionName:Ljava/lang/String;
      11: invokestatic  #29                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      14: ifeq          37
      17: aload_0
      18: aload_0
      19: aload_0
      20: getfield      #22                 // Field userTransactionName:Ljava/lang/String;
      23: invokevirtual #30                 // Method lookupUserTransaction:(Ljava/lang/String;)Ljavax/transaction/UserTransaction;
      26: putfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
      29: aload_0
      30: iconst_1
      31: putfield      #7                  // Field userTransactionObtainedFromJndi:Z
      34: goto          67
      37: aload_0
      38: aload_0
      39: invokevirtual #31                 // Method retrieveUserTransaction:()Ljavax/transaction/UserTransaction;
      42: putfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
      45: aload_0
      46: getfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
      49: ifnonnull     67
      52: aload_0
      53: getfield      #5                  // Field autodetectUserTransaction:Z
      56: ifeq          67
      59: aload_0
      60: aload_0
      61: invokevirtual #32                 // Method findUserTransaction:()Ljavax/transaction/UserTransaction;
      64: putfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
      67: aload_0
      68: getfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
      71: ifnonnull     133
      74: aload_0
      75: getfield      #23                 // Field transactionManagerName:Ljava/lang/String;
      78: invokestatic  #29                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      81: ifeq          99
      84: aload_0
      85: aload_0
      86: aload_0
      87: getfield      #23                 // Field transactionManagerName:Ljava/lang/String;
      90: invokevirtual #33                 // Method lookupTransactionManager:(Ljava/lang/String;)Ljavax/transaction/TransactionManager;
      93: putfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
      96: goto          133
      99: aload_0
     100: aload_0
     101: invokevirtual #34                 // Method retrieveTransactionManager:()Ljavax/transaction/TransactionManager;
     104: putfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
     107: aload_0
     108: getfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
     111: ifnonnull     133
     114: aload_0
     115: getfield      #8                  // Field autodetectTransactionManager:Z
     118: ifeq          133
     121: aload_0
     122: aload_0
     123: aload_0
     124: getfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
     127: invokevirtual #35                 // Method findTransactionManager:(Ljavax/transaction/UserTransaction;)Ljavax/transaction/TransactionManager;
     130: putfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
     133: aload_0
     134: getfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
     137: ifnonnull     159
     140: aload_0
     141: getfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
     144: ifnull        159
     147: aload_0
     148: aload_0
     149: aload_0
     150: getfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
     153: invokevirtual #18                 // Method buildUserTransaction:(Ljavax/transaction/TransactionManager;)Ljavax/transaction/UserTransaction;
     156: putfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
     159: return

  protected void checkUserTransactionAndTransactionManager() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
       4: ifnull        53
       7: aload_0
       8: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      11: invokeinterface #37,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      16: ifeq          63
      19: aload_0
      20: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      23: new           #38                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #40                 // String Using JTA UserTransaction:
      32: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
      39: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      50: goto          63
      53: new           #45                 // class java/lang/IllegalStateException
      56: dup
      57: ldc           #46                 // String No JTA UserTransaction available - specify either \'userTransaction\' or \'userTransactionName\' or \'transactionManager\' or \'transactionManagerName\'
      59: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: getfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
      67: ifnull        116
      70: aload_0
      71: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      74: invokeinterface #37,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      79: ifeq          127
      82: aload_0
      83: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      86: new           #38                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #48                 // String Using JTA TransactionManager:
      95: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
     102: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     113: goto          127
     116: aload_0
     117: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
     120: ldc           #49                 // String No JTA TransactionManager found: transaction suspension not available
     122: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     127: return

  protected void initTransactionSynchronizationRegistry();
    Code:
       0: aload_0
       1: getfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
       4: ifnonnull     70
       7: aload_0
       8: getfield      #25                 // Field transactionSynchronizationRegistryName:Ljava/lang/String;
      11: invokestatic  #29                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      14: ifeq          32
      17: aload_0
      18: aload_0
      19: aload_0
      20: getfield      #25                 // Field transactionSynchronizationRegistryName:Ljava/lang/String;
      23: invokevirtual #51                 // Method lookupTransactionSynchronizationRegistry:(Ljava/lang/String;)Ljavax/transaction/TransactionSynchronizationRegistry;
      26: putfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
      29: goto          70
      32: aload_0
      33: aload_0
      34: invokevirtual #52                 // Method retrieveTransactionSynchronizationRegistry:()Ljavax/transaction/TransactionSynchronizationRegistry;
      37: putfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
      40: aload_0
      41: getfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
      44: ifnonnull     70
      47: aload_0
      48: getfield      #9                  // Field autodetectTransactionSynchronizationRegistry:Z
      51: ifeq          70
      54: aload_0
      55: aload_0
      56: aload_0
      57: getfield      #15                 // Field userTransaction:Ljavax/transaction/UserTransaction;
      60: aload_0
      61: getfield      #17                 // Field transactionManager:Ljavax/transaction/TransactionManager;
      64: invokevirtual #53                 // Method findTransactionSynchronizationRegistry:(Ljavax/transaction/UserTransaction;Ljavax/transaction/TransactionManager;)Ljavax/transaction/TransactionSynchronizationRegistry;
      67: putfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
      70: aload_0
      71: getfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
      74: ifnull        120
      77: aload_0
      78: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      81: invokeinterface #37,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      86: ifeq          120
      89: aload_0
      90: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      93: new           #38                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #54                 // String Using JTA TransactionSynchronizationRegistry:
     102: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: getfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
     109: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     112: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     120: return

  protected javax.transaction.UserTransaction buildUserTransaction(javax.transaction.TransactionManager);
    Code:
       0: aload_1
       1: instanceof    #55                 // class javax/transaction/UserTransaction
       4: ifeq          12
       7: aload_1
       8: checkcast     #55                 // class javax/transaction/UserTransaction
      11: areturn
      12: new           #56                 // class org/springframework/transaction/jta/UserTransactionAdapter
      15: dup
      16: aload_1
      17: invokespecial #57                 // Method org/springframework/transaction/jta/UserTransactionAdapter."<init>":(Ljavax/transaction/TransactionManager;)V
      20: areturn

  protected javax.transaction.UserTransaction lookupUserTransaction(java.lang.String) throws org.springframework.transaction.TransactionSystemException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #38                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #59                 // String Retrieving JTA UserTransaction from JNDI location [
      25: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #60                 // String ]
      34: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_0
      46: invokevirtual #62                 // Method getJndiTemplate:()Lorg/springframework/jndi/JndiTemplate;
      49: aload_1
      50: ldc           #55                 // class javax/transaction/UserTransaction
      52: invokevirtual #63                 // Method org/springframework/jndi/JndiTemplate.lookup:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      55: checkcast     #55                 // class javax/transaction/UserTransaction
      58: areturn
      59: astore_2
      60: new           #65                 // class org/springframework/transaction/TransactionSystemException
      63: dup
      64: new           #38                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #66                 // String JTA UserTransaction is not available at JNDI location [
      73: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc           #60                 // String ]
      82: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: aload_2
      89: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      92: athrow
    Exception table:
       from    to  target type
           0    58    59   Class javax/naming/NamingException

  protected javax.transaction.TransactionManager lookupTransactionManager(java.lang.String) throws org.springframework.transaction.TransactionSystemException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #38                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #68                 // String Retrieving JTA TransactionManager from JNDI location [
      25: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #60                 // String ]
      34: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_0
      46: invokevirtual #62                 // Method getJndiTemplate:()Lorg/springframework/jndi/JndiTemplate;
      49: aload_1
      50: ldc           #69                 // class javax/transaction/TransactionManager
      52: invokevirtual #63                 // Method org/springframework/jndi/JndiTemplate.lookup:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      55: checkcast     #69                 // class javax/transaction/TransactionManager
      58: areturn
      59: astore_2
      60: new           #65                 // class org/springframework/transaction/TransactionSystemException
      63: dup
      64: new           #38                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #70                 // String JTA TransactionManager is not available at JNDI location [
      73: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc           #60                 // String ]
      82: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: aload_2
      89: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      92: athrow
    Exception table:
       from    to  target type
           0    58    59   Class javax/naming/NamingException

  protected javax.transaction.TransactionSynchronizationRegistry lookupTransactionSynchronizationRegistry(java.lang.String) throws org.springframework.transaction.TransactionSystemException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #38                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #71                 // String Retrieving JTA TransactionSynchronizationRegistry from JNDI location [
      25: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #60                 // String ]
      34: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_0
      46: invokevirtual #62                 // Method getJndiTemplate:()Lorg/springframework/jndi/JndiTemplate;
      49: aload_1
      50: ldc           #72                 // class javax/transaction/TransactionSynchronizationRegistry
      52: invokevirtual #63                 // Method org/springframework/jndi/JndiTemplate.lookup:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      55: checkcast     #72                 // class javax/transaction/TransactionSynchronizationRegistry
      58: areturn
      59: astore_2
      60: new           #65                 // class org/springframework/transaction/TransactionSystemException
      63: dup
      64: new           #38                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #73                 // String JTA TransactionSynchronizationRegistry is not available at JNDI location [
      73: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc           #60                 // String ]
      82: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: aload_2
      89: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      92: athrow
    Exception table:
       from    to  target type
           0    58    59   Class javax/naming/NamingException

  protected javax.transaction.UserTransaction retrieveUserTransaction() throws org.springframework.transaction.TransactionSystemException;
    Code:
       0: aconst_null
       1: areturn

  protected javax.transaction.TransactionManager retrieveTransactionManager() throws org.springframework.transaction.TransactionSystemException;
    Code:
       0: aconst_null
       1: areturn

  protected javax.transaction.TransactionSynchronizationRegistry retrieveTransactionSynchronizationRegistry() throws org.springframework.transaction.TransactionSystemException;
    Code:
       0: aconst_null
       1: areturn

  protected javax.transaction.UserTransaction findUserTransaction();
    Code:
       0: ldc           #75                 // String java:comp/UserTransaction
       2: astore_1
       3: aload_0
       4: invokevirtual #62                 // Method getJndiTemplate:()Lorg/springframework/jndi/JndiTemplate;
       7: aload_1
       8: ldc           #55                 // class javax/transaction/UserTransaction
      10: invokevirtual #63                 // Method org/springframework/jndi/JndiTemplate.lookup:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      13: checkcast     #55                 // class javax/transaction/UserTransaction
      16: astore_2
      17: aload_0
      18: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      21: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      26: ifeq          62
      29: aload_0
      30: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      33: new           #38                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #76                 // String JTA UserTransaction found at default JNDI location [
      42: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #60                 // String ]
      51: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      62: aload_0
      63: iconst_1
      64: putfield      #7                  // Field userTransactionObtainedFromJndi:Z
      67: aload_2
      68: areturn
      69: astore_2
      70: aload_0
      71: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      74: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      79: ifeq          116
      82: aload_0
      83: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      86: new           #38                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #77                 // String No JTA UserTransaction found at default JNDI location [
      95: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_1
      99: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: ldc           #60                 // String ]
     104: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: aload_2
     111: invokeinterface #78,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     116: aconst_null
     117: areturn
    Exception table:
       from    to  target type
           3    68    69   Class javax/naming/NamingException

  protected javax.transaction.TransactionManager findTransactionManager(javax.transaction.UserTransaction);
    Code:
       0: aload_1
       1: instanceof    #69                 // class javax/transaction/TransactionManager
       4: ifeq          57
       7: aload_0
       8: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      11: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      16: ifeq          52
      19: aload_0
      20: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      23: new           #38                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #79                 // String JTA UserTransaction object [
      32: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc           #80                 // String ] implements TransactionManager
      41: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: aload_1
      53: checkcast     #69                 // class javax/transaction/TransactionManager
      56: areturn
      57: getstatic     #81                 // Field FALLBACK_TRANSACTION_MANAGER_NAMES:[Ljava/lang/String;
      60: astore_2
      61: aload_2
      62: arraylength
      63: istore_3
      64: iconst_0
      65: istore        4
      67: iload         4
      69: iload_3
      70: if_icmpge     200
      73: aload_2
      74: iload         4
      76: aaload
      77: astore        5
      79: aload_0
      80: invokevirtual #62                 // Method getJndiTemplate:()Lorg/springframework/jndi/JndiTemplate;
      83: aload         5
      85: ldc           #69                 // class javax/transaction/TransactionManager
      87: invokevirtual #63                 // Method org/springframework/jndi/JndiTemplate.lookup:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      90: checkcast     #69                 // class javax/transaction/TransactionManager
      93: astore        6
      95: aload_0
      96: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      99: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     104: ifeq          141
     107: aload_0
     108: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
     111: new           #38                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #82                 // String JTA TransactionManager found at fallback JNDI location [
     120: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload         5
     125: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: ldc           #60                 // String ]
     130: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     141: aload         6
     143: areturn
     144: astore        6
     146: aload_0
     147: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
     150: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     155: ifeq          194
     158: aload_0
     159: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
     162: new           #38                 // class java/lang/StringBuilder
     165: dup
     166: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     169: ldc           #83                 // String No JTA TransactionManager found at fallback JNDI location [
     171: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload         5
     176: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: ldc           #60                 // String ]
     181: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: aload         6
     189: invokeinterface #78,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     194: iinc          4, 1
     197: goto          67
     200: aconst_null
     201: areturn
    Exception table:
       from    to  target type
          79   143   144   Class javax/naming/NamingException

  protected javax.transaction.TransactionSynchronizationRegistry findTransactionSynchronizationRegistry(javax.transaction.UserTransaction, javax.transaction.TransactionManager) throws org.springframework.transaction.TransactionSystemException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field userTransactionObtainedFromJndi:Z
       4: ifeq          122
       7: ldc           #84                 // String java:comp/TransactionSynchronizationRegistry
       9: astore_3
      10: aload_0
      11: invokevirtual #62                 // Method getJndiTemplate:()Lorg/springframework/jndi/JndiTemplate;
      14: aload_3
      15: ldc           #72                 // class javax/transaction/TransactionSynchronizationRegistry
      17: invokevirtual #63                 // Method org/springframework/jndi/JndiTemplate.lookup:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      20: checkcast     #72                 // class javax/transaction/TransactionSynchronizationRegistry
      23: astore        4
      25: aload_0
      26: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      29: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      34: ifeq          70
      37: aload_0
      38: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      41: new           #38                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #85                 // String JTA TransactionSynchronizationRegistry found at default JNDI location [
      50: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_3
      54: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #60                 // String ]
      59: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      70: aload         4
      72: areturn
      73: astore        4
      75: aload_0
      76: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      79: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      84: ifeq          122
      87: aload_0
      88: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      91: new           #38                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #86                 // String No JTA TransactionSynchronizationRegistry found at default JNDI location [
     100: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_3
     104: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #60                 // String ]
     109: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: aload         4
     117: invokeinterface #78,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     122: aload_1
     123: instanceof    #72                 // class javax/transaction/TransactionSynchronizationRegistry
     126: ifeq          134
     129: aload_1
     130: checkcast     #72                 // class javax/transaction/TransactionSynchronizationRegistry
     133: areturn
     134: aload_2
     135: instanceof    #72                 // class javax/transaction/TransactionSynchronizationRegistry
     138: ifeq          146
     141: aload_2
     142: checkcast     #72                 // class javax/transaction/TransactionSynchronizationRegistry
     145: areturn
     146: aconst_null
     147: areturn
    Exception table:
       from    to  target type
          10    72    73   Class javax/naming/NamingException

  protected java.lang.Object doGetTransaction();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getUserTransaction:()Ljavax/transaction/UserTransaction;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #88                 // class org/springframework/transaction/CannotCreateTransactionException
      12: dup
      13: ldc           #89                 // String No JTA UserTransaction available - programmatic PlatformTransactionManager.getTransaction usage not supported
      15: invokespecial #90                 // Method org/springframework/transaction/CannotCreateTransactionException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #6                  // Field cacheUserTransaction:Z
      23: ifne          47
      26: aload_0
      27: aload_0
      28: getfield      #22                 // Field userTransactionName:Ljava/lang/String;
      31: ifnull        41
      34: aload_0
      35: getfield      #22                 // Field userTransactionName:Ljava/lang/String;
      38: goto          43
      41: ldc           #75                 // String java:comp/UserTransaction
      43: invokevirtual #30                 // Method lookupUserTransaction:(Ljava/lang/String;)Ljavax/transaction/UserTransaction;
      46: astore_1
      47: aload_0
      48: aload_1
      49: invokevirtual #91                 // Method doGetJtaTransaction:(Ljavax/transaction/UserTransaction;)Lorg/springframework/transaction/jta/JtaTransactionObject;
      52: areturn

  protected org.springframework.transaction.jta.JtaTransactionObject doGetJtaTransaction(javax.transaction.UserTransaction);
    Code:
       0: new           #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       3: dup
       4: aload_1
       5: invokespecial #93                 // Method org/springframework/transaction/jta/JtaTransactionObject."<init>":(Ljavax/transaction/UserTransaction;)V
       8: areturn

  protected boolean isExistingTransaction(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       4: astore_2
       5: aload_2
       6: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
       9: invokeinterface #95,  1           // InterfaceMethod javax/transaction/UserTransaction.getStatus:()I
      14: bipush        6
      16: if_icmpeq     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn
      25: astore_3
      26: new           #65                 // class org/springframework/transaction/TransactionSystemException
      29: dup
      30: ldc           #98                 // String JTA failure on getStatus
      32: aload_3
      33: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: athrow
    Exception table:
       from    to  target type
           5    24    25   Class javax/transaction/SystemException

  protected boolean useSavepointForNestedTransaction();
    Code:
       0: iconst_0
       1: ireturn

  protected void doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition);
    Code:
       0: aload_1
       1: checkcast     #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       4: astore_3
       5: aload_0
       6: aload_3
       7: aload_2
       8: invokevirtual #99                 // Method doJtaBegin:(Lorg/springframework/transaction/jta/JtaTransactionObject;Lorg/springframework/transaction/TransactionDefinition;)V
      11: goto          56
      14: astore        4
      16: new           #101                // class org/springframework/transaction/NestedTransactionNotSupportedException
      19: dup
      20: ldc           #102                // String JTA implementation does not support nested transactions
      22: aload         4
      24: invokespecial #103                // Method org/springframework/transaction/NestedTransactionNotSupportedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: athrow
      28: astore        4
      30: new           #101                // class org/springframework/transaction/NestedTransactionNotSupportedException
      33: dup
      34: ldc           #102                // String JTA implementation does not support nested transactions
      36: aload         4
      38: invokespecial #103                // Method org/springframework/transaction/NestedTransactionNotSupportedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      41: athrow
      42: astore        4
      44: new           #88                 // class org/springframework/transaction/CannotCreateTransactionException
      47: dup
      48: ldc           #105                // String JTA failure on begin
      50: aload         4
      52: invokespecial #106                // Method org/springframework/transaction/CannotCreateTransactionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
      56: return
    Exception table:
       from    to  target type
           5    11    14   Class javax/transaction/NotSupportedException
           5    11    28   Class java/lang/UnsupportedOperationException
           5    11    42   Class javax/transaction/SystemException

  protected void doJtaBegin(org.springframework.transaction.jta.JtaTransactionObject, org.springframework.transaction.TransactionDefinition) throws javax.transaction.NotSupportedException, javax.transaction.SystemException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #107,  1          // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
       8: invokevirtual #108                // Method applyIsolationLevel:(Lorg/springframework/transaction/jta/JtaTransactionObject;I)V
      11: aload_0
      12: aload_2
      13: invokevirtual #109                // Method determineTimeout:(Lorg/springframework/transaction/TransactionDefinition;)I
      16: istore_3
      17: aload_0
      18: aload_1
      19: iload_3
      20: invokevirtual #110                // Method applyTimeout:(Lorg/springframework/transaction/jta/JtaTransactionObject;I)V
      23: aload_1
      24: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
      27: invokeinterface #111,  1          // InterfaceMethod javax/transaction/UserTransaction.begin:()V
      32: return

  protected void applyIsolationLevel(org.springframework.transaction.jta.JtaTransactionObject, int) throws org.springframework.transaction.InvalidIsolationLevelException, javax.transaction.SystemException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field allowCustomIsolationLevels:Z
       4: ifne          22
       7: iload_2
       8: iconst_m1
       9: if_icmpeq     22
      12: new           #113                // class org/springframework/transaction/InvalidIsolationLevelException
      15: dup
      16: ldc           #114                // String JtaTransactionManager does not support custom isolation levels by default - switch \'allowCustomIsolationLevels\' to \'true\'
      18: invokespecial #115                // Method org/springframework/transaction/InvalidIsolationLevelException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: return

  protected void applyTimeout(org.springframework.transaction.jta.JtaTransactionObject, int) throws javax.transaction.SystemException;
    Code:
       0: iload_2
       1: iconst_m1
       2: if_icmple     24
       5: aload_1
       6: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
       9: iload_2
      10: invokeinterface #116,  2          // InterfaceMethod javax/transaction/UserTransaction.setTransactionTimeout:(I)V
      15: iload_2
      16: ifle          24
      19: aload_1
      20: iconst_1
      21: putfield      #117                // Field org/springframework/transaction/jta/JtaTransactionObject.resetTransactionTimeout:Z
      24: return

  protected java.lang.Object doSuspend(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #118                // Method doJtaSuspend:(Lorg/springframework/transaction/jta/JtaTransactionObject;)Ljava/lang/Object;
      10: areturn
      11: astore_3
      12: new           #65                 // class org/springframework/transaction/TransactionSystemException
      15: dup
      16: ldc           #119                // String JTA failure on suspend
      18: aload_3
      19: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           5    10    11   Class javax/transaction/SystemException

  protected java.lang.Object doJtaSuspend(org.springframework.transaction.jta.JtaTransactionObject) throws javax.transaction.SystemException;
    Code:
       0: aload_0
       1: invokevirtual #120                // Method getTransactionManager:()Ljavax/transaction/TransactionManager;
       4: ifnonnull     17
       7: new           #121                // class org/springframework/transaction/TransactionSuspensionNotSupportedException
      10: dup
      11: ldc           #122                // String JtaTransactionManager needs a JTA TransactionManager for suspending a transaction: specify the \'transactionManager\' or \'transactionManagerName\' property
      13: invokespecial #123                // Method org/springframework/transaction/TransactionSuspensionNotSupportedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #120                // Method getTransactionManager:()Ljavax/transaction/TransactionManager;
      21: invokeinterface #124,  1          // InterfaceMethod javax/transaction/TransactionManager.suspend:()Ljavax/transaction/Transaction;
      26: areturn

  protected void doResume(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       4: astore_3
       5: aload_0
       6: aload_3
       7: aload_2
       8: invokevirtual #125                // Method doJtaResume:(Lorg/springframework/transaction/jta/JtaTransactionObject;Ljava/lang/Object;)V
      11: goto          56
      14: astore        4
      16: new           #127                // class org/springframework/transaction/IllegalTransactionStateException
      19: dup
      20: ldc           #128                // String Tried to resume invalid JTA transaction
      22: aload         4
      24: invokespecial #129                // Method org/springframework/transaction/IllegalTransactionStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: athrow
      28: astore        4
      30: new           #65                 // class org/springframework/transaction/TransactionSystemException
      33: dup
      34: ldc           #130                // String Unexpected internal transaction state
      36: aload         4
      38: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      41: athrow
      42: astore        4
      44: new           #65                 // class org/springframework/transaction/TransactionSystemException
      47: dup
      48: ldc           #131                // String JTA failure on resume
      50: aload         4
      52: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
      56: return
    Exception table:
       from    to  target type
           5    11    14   Class javax/transaction/InvalidTransactionException
           5    11    28   Class java/lang/IllegalStateException
           5    11    42   Class javax/transaction/SystemException

  protected void doJtaResume(org.springframework.transaction.jta.JtaTransactionObject, java.lang.Object) throws javax.transaction.InvalidTransactionException, javax.transaction.SystemException;
    Code:
       0: aload_0
       1: invokevirtual #120                // Method getTransactionManager:()Ljavax/transaction/TransactionManager;
       4: ifnonnull     17
       7: new           #121                // class org/springframework/transaction/TransactionSuspensionNotSupportedException
      10: dup
      11: ldc           #122                // String JtaTransactionManager needs a JTA TransactionManager for suspending a transaction: specify the \'transactionManager\' or \'transactionManagerName\' property
      13: invokespecial #123                // Method org/springframework/transaction/TransactionSuspensionNotSupportedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #120                // Method getTransactionManager:()Ljavax/transaction/TransactionManager;
      21: aload_2
      22: checkcast     #132                // class javax/transaction/Transaction
      25: invokeinterface #133,  2          // InterfaceMethod javax/transaction/TransactionManager.resume:(Ljavax/transaction/Transaction;)V
      30: return

  protected boolean shouldCommitOnGlobalRollbackOnly();
    Code:
       0: iconst_1
       1: ireturn

  protected void doCommit(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #134                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       7: astore_2
       8: aload_2
       9: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
      12: invokeinterface #95,  1           // InterfaceMethod javax/transaction/UserTransaction.getStatus:()I
      17: istore_3
      18: iload_3
      19: bipush        6
      21: if_icmpne     34
      24: new           #135                // class org/springframework/transaction/UnexpectedRollbackException
      27: dup
      28: ldc           #136                // String JTA transaction already completed - probably rolled back
      30: invokespecial #137                // Method org/springframework/transaction/UnexpectedRollbackException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: iload_3
      35: iconst_4
      36: if_icmpne     104
      39: aload_2
      40: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
      43: invokeinterface #138,  1          // InterfaceMethod javax/transaction/UserTransaction.rollback:()V
      48: goto          94
      51: astore        4
      53: aload_0
      54: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      57: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      62: ifeq          94
      65: aload_0
      66: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      69: new           #38                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #139                // String Rollback failure with transaction already marked as rolled back:
      78: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload         4
      83: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      94: new           #135                // class org/springframework/transaction/UnexpectedRollbackException
      97: dup
      98: ldc           #140                // String JTA transaction already rolled back (probably due to a timeout)
     100: invokespecial #137                // Method org/springframework/transaction/UnexpectedRollbackException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_2
     105: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
     108: invokeinterface #141,  1          // InterfaceMethod javax/transaction/UserTransaction.commit:()V
     113: goto          174
     116: astore_3
     117: new           #135                // class org/springframework/transaction/UnexpectedRollbackException
     120: dup
     121: ldc           #143                // String JTA transaction unexpectedly rolled back (maybe due to a timeout)
     123: aload_3
     124: invokespecial #144                // Method org/springframework/transaction/UnexpectedRollbackException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     127: athrow
     128: astore_3
     129: new           #146                // class org/springframework/transaction/HeuristicCompletionException
     132: dup
     133: iconst_3
     134: aload_3
     135: invokespecial #147                // Method org/springframework/transaction/HeuristicCompletionException."<init>":(ILjava/lang/Throwable;)V
     138: athrow
     139: astore_3
     140: new           #146                // class org/springframework/transaction/HeuristicCompletionException
     143: dup
     144: iconst_2
     145: aload_3
     146: invokespecial #147                // Method org/springframework/transaction/HeuristicCompletionException."<init>":(ILjava/lang/Throwable;)V
     149: athrow
     150: astore_3
     151: new           #65                 // class org/springframework/transaction/TransactionSystemException
     154: dup
     155: ldc           #130                // String Unexpected internal transaction state
     157: aload_3
     158: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     161: athrow
     162: astore_3
     163: new           #65                 // class org/springframework/transaction/TransactionSystemException
     166: dup
     167: ldc           #149                // String JTA failure on commit
     169: aload_3
     170: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     173: athrow
     174: return
    Exception table:
       from    to  target type
          39    48    51   Class java/lang/IllegalStateException
           8   113   116   Class javax/transaction/RollbackException
           8   113   128   Class javax/transaction/HeuristicMixedException
           8   113   139   Class javax/transaction/HeuristicRollbackException
           8   113   150   Class java/lang/IllegalStateException
           8   113   162   Class javax/transaction/SystemException

  protected void doRollback(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #134                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       7: astore_2
       8: aload_2
       9: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
      12: invokeinterface #95,  1           // InterfaceMethod javax/transaction/UserTransaction.getStatus:()I
      17: istore_3
      18: iload_3
      19: bipush        6
      21: if_icmpeq     99
      24: aload_2
      25: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
      28: invokeinterface #138,  1          // InterfaceMethod javax/transaction/UserTransaction.rollback:()V
      33: goto          99
      36: astore        4
      38: iload_3
      39: iconst_4
      40: if_icmpne     87
      43: aload_0
      44: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      47: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      52: ifeq          99
      55: aload_0
      56: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      59: new           #38                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #139                // String Rollback failure with transaction already marked as rolled back:
      68: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload         4
      73: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      84: goto          99
      87: new           #65                 // class org/springframework/transaction/TransactionSystemException
      90: dup
      91: ldc           #130                // String Unexpected internal transaction state
      93: aload         4
      95: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: athrow
      99: goto          114
     102: astore_3
     103: new           #65                 // class org/springframework/transaction/TransactionSystemException
     106: dup
     107: ldc           #150                // String JTA failure on rollback
     109: aload_3
     110: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     113: athrow
     114: return
    Exception table:
       from    to  target type
          24    33    36   Class java/lang/IllegalStateException
           8    99   102   Class javax/transaction/SystemException

  protected void doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #134                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       7: astore_2
       8: aload_1
       9: invokevirtual #151                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      12: ifeq          26
      15: aload_0
      16: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      19: ldc           #152                // String Setting JTA transaction rollback-only
      21: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      26: aload_2
      27: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
      30: invokeinterface #95,  1           // InterfaceMethod javax/transaction/UserTransaction.getStatus:()I
      35: istore_3
      36: iload_3
      37: bipush        6
      39: if_icmpeq     56
      42: iload_3
      43: iconst_4
      44: if_icmpeq     56
      47: aload_2
      48: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
      51: invokeinterface #153,  1          // InterfaceMethod javax/transaction/UserTransaction.setRollbackOnly:()V
      56: goto          83
      59: astore_3
      60: new           #65                 // class org/springframework/transaction/TransactionSystemException
      63: dup
      64: ldc           #130                // String Unexpected internal transaction state
      66: aload_3
      67: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: athrow
      71: astore_3
      72: new           #65                 // class org/springframework/transaction/TransactionSystemException
      75: dup
      76: ldc           #154                // String JTA failure on setRollbackOnly
      78: aload_3
      79: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      82: athrow
      83: return
    Exception table:
       from    to  target type
          26    56    59   Class java/lang/IllegalStateException
          26    56    71   Class javax/transaction/SystemException

  protected void registerAfterCompletionWithExistingTransaction(java.lang.Object, java.util.List<org.springframework.transaction.support.TransactionSynchronization>);
    Code:
       0: aload_1
       1: checkcast     #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       4: astore_3
       5: aload_0
       6: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
       9: ldc           #155                // String Registering after-completion synchronization with existing JTA transaction
      11: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      16: aload_0
      17: aload_3
      18: aload_2
      19: invokevirtual #156                // Method doRegisterAfterCompletionWithJtaTransaction:(Lorg/springframework/transaction/jta/JtaTransactionObject;Ljava/util/List;)V
      22: goto          133
      25: astore        4
      27: new           #65                 // class org/springframework/transaction/TransactionSystemException
      30: dup
      31: ldc           #157                // String JTA failure on registerSynchronization
      33: aload         4
      35: invokespecial #67                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: athrow
      39: astore        4
      41: aload         4
      43: instanceof    #142                // class javax/transaction/RollbackException
      46: ifne          60
      49: aload         4
      51: invokevirtual #159                // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
      54: instanceof    #142                // class javax/transaction/RollbackException
      57: ifeq          98
      60: aload_0
      61: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      64: new           #38                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #160                // String Participating in existing JTA transaction that has been marked for rollback: cannot register Spring after-completion callbacks with outer JTA transaction - immediately performing Spring after-completion callbacks with outcome status \'rollback\'. Original exception:
      73: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload         4
      78: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      89: aload_0
      90: aload_2
      91: iconst_1
      92: invokevirtual #162                // Method invokeAfterCompletion:(Ljava/util/List;I)V
      95: goto          133
      98: aload_0
      99: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
     102: new           #38                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #163                // String Participating in existing JTA transaction, but unexpected internal transaction state encountered: cannot register Spring after-completion callbacks with outer JTA transaction - processing Spring after-completion callbacks with outcome status \'unknown\'Original exception:
     111: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload         4
     116: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     127: aload_0
     128: aload_2
     129: iconst_2
     130: invokevirtual #162                // Method invokeAfterCompletion:(Ljava/util/List;I)V
     133: return
    Exception table:
       from    to  target type
          16    22    25   Class javax/transaction/SystemException
          16    22    39   Class java/lang/Exception

  protected void doRegisterAfterCompletionWithJtaTransaction(org.springframework.transaction.jta.JtaTransactionObject, java.util.List<org.springframework.transaction.support.TransactionSynchronization>) throws javax.transaction.RollbackException, javax.transaction.SystemException;
    Code:
       0: aload_1
       1: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
       4: invokeinterface #95,  1           // InterfaceMethod javax/transaction/UserTransaction.getStatus:()I
       9: istore_3
      10: iload_3
      11: bipush        6
      13: if_icmpne     26
      16: new           #142                // class javax/transaction/RollbackException
      19: dup
      20: ldc           #136                // String JTA transaction already completed - probably rolled back
      22: invokespecial #164                // Method javax/transaction/RollbackException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: iload_3
      27: iconst_4
      28: if_icmpne     41
      31: new           #142                // class javax/transaction/RollbackException
      34: dup
      35: ldc           #140                // String JTA transaction already rolled back (probably due to a timeout)
      37: invokespecial #164                // Method javax/transaction/RollbackException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: getfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
      45: ifnull        68
      48: aload_0
      49: getfield      #24                 // Field transactionSynchronizationRegistry:Ljavax/transaction/TransactionSynchronizationRegistry;
      52: new           #165                // class org/springframework/transaction/jta/JtaAfterCompletionSynchronization
      55: dup
      56: aload_2
      57: invokespecial #166                // Method org/springframework/transaction/jta/JtaAfterCompletionSynchronization."<init>":(Ljava/util/List;)V
      60: invokeinterface #167,  2          // InterfaceMethod javax/transaction/TransactionSynchronizationRegistry.registerInterposedSynchronization:(Ljavax/transaction/Synchronization;)V
      65: goto          136
      68: aload_0
      69: invokevirtual #120                // Method getTransactionManager:()Ljavax/transaction/TransactionManager;
      72: ifnull        119
      75: aload_0
      76: invokevirtual #120                // Method getTransactionManager:()Ljavax/transaction/TransactionManager;
      79: invokeinterface #168,  1          // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      84: astore        4
      86: aload         4
      88: ifnonnull     101
      91: new           #45                 // class java/lang/IllegalStateException
      94: dup
      95: ldc           #169                // String No JTA Transaction available
      97: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: aload         4
     103: new           #165                // class org/springframework/transaction/jta/JtaAfterCompletionSynchronization
     106: dup
     107: aload_2
     108: invokespecial #166                // Method org/springframework/transaction/jta/JtaAfterCompletionSynchronization."<init>":(Ljava/util/List;)V
     111: invokeinterface #170,  2          // InterfaceMethod javax/transaction/Transaction.registerSynchronization:(Ljavax/transaction/Synchronization;)V
     116: goto          136
     119: aload_0
     120: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
     123: ldc           #171                // String Participating in existing JTA transaction, but no JTA TransactionManager available: cannot register Spring after-completion callbacks with outer JTA transaction - processing Spring after-completion callbacks with outcome status \'unknown\'
     125: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     130: aload_0
     131: aload_2
     132: iconst_2
     133: invokevirtual #162                // Method invokeAfterCompletion:(Ljava/util/List;I)V
     136: return

  protected void doCleanupAfterCompletion(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #92                 // class org/springframework/transaction/jta/JtaTransactionObject
       4: astore_2
       5: aload_2
       6: getfield      #117                // Field org/springframework/transaction/jta/JtaTransactionObject.resetTransactionTimeout:Z
       9: ifeq          38
      12: aload_2
      13: invokevirtual #94                 // Method org/springframework/transaction/jta/JtaTransactionObject.getUserTransaction:()Ljavax/transaction/UserTransaction;
      16: iconst_0
      17: invokeinterface #116,  2          // InterfaceMethod javax/transaction/UserTransaction.setTransactionTimeout:(I)V
      22: goto          38
      25: astore_3
      26: aload_0
      27: getfield      #36                 // Field logger:Lorg/apache/commons/logging/Log;
      30: ldc           #172                // String Failed to reset transaction timeout after JTA completion
      32: aload_3
      33: invokeinterface #78,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      38: return
    Exception table:
       from    to  target type
          12    22    25   Class javax/transaction/SystemException

  public javax.transaction.Transaction createTransaction(java.lang.String, int) throws javax.transaction.NotSupportedException, javax.transaction.SystemException;
    Code:
       0: aload_0
       1: invokevirtual #120                // Method getTransactionManager:()Ljavax/transaction/TransactionManager;
       4: astore_3
       5: aload_3
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #173                // String No JTA TransactionManager available
      16: invokestatic  #174                // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      19: iload_2
      20: iflt          30
      23: aload_3
      24: iload_2
      25: invokeinterface #175,  2          // InterfaceMethod javax/transaction/TransactionManager.setTransactionTimeout:(I)V
      30: aload_3
      31: invokeinterface #176,  1          // InterfaceMethod javax/transaction/TransactionManager.begin:()V
      36: new           #177                // class org/springframework/transaction/jta/ManagedTransactionAdapter
      39: dup
      40: aload_3
      41: invokespecial #178                // Method org/springframework/transaction/jta/ManagedTransactionAdapter."<init>":(Ljavax/transaction/TransactionManager;)V
      44: areturn

  public boolean supportsResourceAdapterManagedTransactions();
    Code:
       0: iconst_0
       1: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #179                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: new           #2                  // class org/springframework/jndi/JndiTemplate
       8: dup
       9: invokespecial #3                  // Method org/springframework/jndi/JndiTemplate."<init>":()V
      12: putfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
      15: aload_0
      16: invokevirtual #26                 // Method initUserTransactionAndTransactionManager:()V
      19: aload_0
      20: invokevirtual #28                 // Method initTransactionSynchronizationRegistry:()V
      23: return

  static {};
    Code:
       0: iconst_4
       1: anewarray     #180                // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #181                // String java:comp/TransactionManager
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #182                // String java:appserver/TransactionManager
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #183                // String java:pm/TransactionManager
      18: aastore
      19: dup
      20: iconst_3
      21: ldc           #184                // String java:/TransactionManager
      23: aastore
      24: putstatic     #81                 // Field FALLBACK_TRANSACTION_MANAGER_NAMES:[Ljava/lang/String;
      27: return
}
