Compiled from "ResourceHolderSupport.java"
public abstract class org.springframework.transaction.support.ResourceHolderSupport implements org.springframework.transaction.support.ResourceHolder {
  private boolean synchronizedWithTransaction;

  private boolean rollbackOnly;

  private java.util.Date deadline;

  private int referenceCount;

  private boolean isVoid;

  public org.springframework.transaction.support.ResourceHolderSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field synchronizedWithTransaction:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field rollbackOnly:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field referenceCount:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field isVoid:Z
      24: return

  public void setSynchronizedWithTransaction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field synchronizedWithTransaction:Z
       5: return

  public boolean isSynchronizedWithTransaction();
    Code:
       0: aload_0
       1: getfield      #2                  // Field synchronizedWithTransaction:Z
       4: ireturn

  public void setRollbackOnly();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field rollbackOnly:Z
       5: return

  public boolean isRollbackOnly();
    Code:
       0: aload_0
       1: getfield      #3                  // Field rollbackOnly:Z
       4: ireturn

  public void setTimeoutInSeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: sipush        1000
       5: imul
       6: i2l
       7: invokevirtual #6                  // Method setTimeoutInMillis:(J)V
      10: return

  public void setTimeoutInMillis(long);
    Code:
       0: aload_0
       1: new           #7                  // class java/util/Date
       4: dup
       5: invokestatic  #8                  // Method java/lang/System.currentTimeMillis:()J
       8: lload_1
       9: ladd
      10: invokespecial #9                  // Method java/util/Date."<init>":(J)V
      13: putfield      #10                 // Field deadline:Ljava/util/Date;
      16: return

  public boolean hasTimeout();
    Code:
       0: aload_0
       1: getfield      #10                 // Field deadline:Ljava/util/Date;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.util.Date getDeadline();
    Code:
       0: aload_0
       1: getfield      #10                 // Field deadline:Ljava/util/Date;
       4: areturn

  public int getTimeToLiveInSeconds();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getTimeToLiveInMillis:()J
       4: l2d
       5: ldc2_w        #12                 // double 1000.0d
       8: ddiv
       9: dstore_1
      10: dload_1
      11: invokestatic  #14                 // Method java/lang/Math.ceil:(D)D
      14: d2i
      15: istore_3
      16: aload_0
      17: iload_3
      18: ifgt          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: invokespecial #15                 // Method checkTransactionTimeout:(Z)V
      29: iload_3
      30: ireturn

  public long getTimeToLiveInMillis() throws org.springframework.transaction.TransactionTimedOutException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field deadline:Ljava/util/Date;
       4: ifnonnull     17
       7: new           #16                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #17                 // String No timeout specified for this resource holder
      13: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #10                 // Field deadline:Ljava/util/Date;
      21: invokevirtual #19                 // Method java/util/Date.getTime:()J
      24: invokestatic  #8                  // Method java/lang/System.currentTimeMillis:()J
      27: lsub
      28: lstore_1
      29: aload_0
      30: lload_1
      31: lconst_0
      32: lcmp
      33: ifgt          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: invokespecial #15                 // Method checkTransactionTimeout:(Z)V
      44: lload_1
      45: lreturn

  private void checkTransactionTimeout(boolean) throws org.springframework.transaction.TransactionTimedOutException;
    Code:
       0: iload_1
       1: ifeq          38
       4: aload_0
       5: invokevirtual #20                 // Method setRollbackOnly:()V
       8: new           #21                 // class org/springframework/transaction/TransactionTimedOutException
      11: dup
      12: new           #22                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #24                 // String Transaction timed out: deadline was
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #10                 // Field deadline:Ljava/util/Date;
      28: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #28                 // Method org/springframework/transaction/TransactionTimedOutException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: return

  public void requested();
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field referenceCount:I
       5: iconst_1
       6: iadd
       7: putfield      #4                  // Field referenceCount:I
      10: return

  public void released();
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field referenceCount:I
       5: iconst_1
       6: isub
       7: putfield      #4                  // Field referenceCount:I
      10: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceCount:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field synchronizedWithTransaction:Z
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field rollbackOnly:Z
      10: aload_0
      11: aconst_null
      12: putfield      #10                 // Field deadline:Ljava/util/Date;
      15: return

  public void reset();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method clear:()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field referenceCount:I
       9: return

  public void unbound();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field isVoid:Z
       5: return

  public boolean isVoid();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isVoid:Z
       4: ireturn
}
