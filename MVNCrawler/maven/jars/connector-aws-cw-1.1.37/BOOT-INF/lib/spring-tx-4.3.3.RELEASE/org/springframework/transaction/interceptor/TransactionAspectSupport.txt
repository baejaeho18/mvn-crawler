Compiled from "TransactionAspectSupport.java"
public abstract class org.springframework.transaction.interceptor.TransactionAspectSupport implements org.springframework.beans.factory.BeanFactoryAware,org.springframework.beans.factory.InitializingBean {
  private static final java.lang.Object DEFAULT_TRANSACTION_MANAGER_KEY;

  private static final java.lang.ThreadLocal<org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo> transactionInfoHolder;

  protected final org.apache.commons.logging.Log logger;

  private java.lang.String transactionManagerBeanName;

  private org.springframework.transaction.PlatformTransactionManager transactionManager;

  private org.springframework.transaction.interceptor.TransactionAttributeSource transactionAttributeSource;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, org.springframework.transaction.PlatformTransactionManager> transactionManagerCache;

  public org.springframework.transaction.interceptor.TransactionAspectSupport();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #6                  // class org/springframework/util/ConcurrentReferenceHashMap
      19: dup
      20: iconst_4
      21: invokespecial #7                  // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(I)V
      24: putfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
      27: return

  protected static org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo currentTransactionInfo() throws org.springframework.transaction.NoTransactionException;
    Code:
       0: getstatic     #1                  // Field transactionInfoHolder:Ljava/lang/ThreadLocal;
       3: invokevirtual #9                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #10                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo
       9: areturn

  public static org.springframework.transaction.TransactionStatus currentTransactionStatus() throws org.springframework.transaction.NoTransactionException;
    Code:
       0: invokestatic  #11                 // Method currentTransactionInfo:()Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
       3: astore_0
       4: aload_0
       5: ifnull        15
       8: aload_0
       9: invokestatic  #12                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$000:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/TransactionStatus;
      12: ifnonnull     25
      15: new           #13                 // class org/springframework/transaction/NoTransactionException
      18: dup
      19: ldc           #14                 // String No transaction aspect-managed TransactionStatus in scope
      21: invokespecial #15                 // Method org/springframework/transaction/NoTransactionException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: invokestatic  #12                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$000:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/TransactionStatus;
      29: areturn

  public void setTransactionManagerBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field transactionManagerBeanName:Ljava/lang/String;
       5: return

  protected final java.lang.String getTransactionManagerBeanName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field transactionManagerBeanName:Ljava/lang/String;
       4: areturn

  public void setTransactionManager(org.springframework.transaction.PlatformTransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       5: return

  public org.springframework.transaction.PlatformTransactionManager getTransactionManager();
    Code:
       0: aload_0
       1: getfield      #17                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       4: areturn

  public void setTransactionAttributes(java.util.Properties);
    Code:
       0: new           #18                 // class org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource
       3: dup
       4: invokespecial #19                 // Method org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #20                 // Method org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.setProperties:(Ljava/util/Properties;)V
      13: aload_0
      14: aload_2
      15: putfield      #21                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
      18: return

  public void setTransactionAttributeSources(org.springframework.transaction.interceptor.TransactionAttributeSource[]);
    Code:
       0: aload_0
       1: new           #22                 // class org/springframework/transaction/interceptor/CompositeTransactionAttributeSource
       4: dup
       5: aload_1
       6: invokespecial #23                 // Method org/springframework/transaction/interceptor/CompositeTransactionAttributeSource."<init>":([Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
       9: putfield      #21                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
      12: return

  public void setTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
       5: return

  public org.springframework.transaction.interceptor.TransactionAttributeSource getTransactionAttributeSource();
    Code:
       0: aload_0
       1: getfield      #21                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
       4: areturn

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  protected final org.springframework.beans.factory.BeanFactory getBeanFactory();
    Code:
       0: aload_0
       1: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       4: areturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
       4: ifnonnull     24
       7: aload_0
       8: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      11: ifnonnull     24
      14: new           #26                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #27                 // String Set the \'transactionManager\' property or make sure to run within a BeanFactory containing a PlatformTransactionManager bean!
      20: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: invokevirtual #29                 // Method getTransactionAttributeSource:()Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
      28: ifnonnull     41
      31: new           #26                 // class java/lang/IllegalStateException
      34: dup
      35: ldc           #30                 // String Either \'transactionAttributeSource\' or \'transactionAttributes\' is required: If there are no transactional methods, then don\'t use a transaction aspect.
      37: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  protected java.lang.Object invokeWithinTransaction(java.lang.reflect.Method, java.lang.Class<?>, org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getTransactionAttributeSource:()Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
       4: aload_1
       5: aload_2
       6: invokeinterface #31,  3           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttributeSource.getTransactionAttribute:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
      11: astore        4
      13: aload_0
      14: aload         4
      16: invokevirtual #32                 // Method determineTransactionManager:(Lorg/springframework/transaction/interceptor/TransactionAttribute;)Lorg/springframework/transaction/PlatformTransactionManager;
      19: astore        5
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokevirtual #33                 // Method methodIdentification:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/String;
      27: astore        6
      29: aload         4
      31: ifnull        42
      34: aload         5
      36: instanceof    #34                 // class org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager
      39: ifne          107
      42: aload_0
      43: aload         5
      45: aload         4
      47: aload         6
      49: invokevirtual #35                 // Method createTransactionIfNecessary:(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
      52: astore        7
      54: aconst_null
      55: astore        8
      57: aload_3
      58: invokeinterface #36,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback.proceedWithInvocation:()Ljava/lang/Object;
      63: astore        8
      65: aload_0
      66: aload         7
      68: invokevirtual #37                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
      71: goto          98
      74: astore        9
      76: aload_0
      77: aload         7
      79: aload         9
      81: invokevirtual #39                 // Method completeTransactionAfterThrowing:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;Ljava/lang/Throwable;)V
      84: aload         9
      86: athrow
      87: astore        10
      89: aload_0
      90: aload         7
      92: invokevirtual #37                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
      95: aload         10
      97: athrow
      98: aload_0
      99: aload         7
     101: invokevirtual #40                 // Method commitTransactionAfterReturning:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     104: aload         8
     106: areturn
     107: aload         5
     109: checkcast     #34                 // class org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager
     112: aload         4
     114: new           #41                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$1
     117: dup
     118: aload_0
     119: aload         5
     121: aload         4
     123: aload         6
     125: aload_3
     126: invokespecial #42                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$1."<init>":(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;Lorg/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback;)V
     129: invokeinterface #43,  3           // InterfaceMethod org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager.execute:(Lorg/springframework/transaction/TransactionDefinition;Lorg/springframework/transaction/support/TransactionCallback;)Ljava/lang/Object;
     134: astore        7
     136: aload         7
     138: instanceof    #44                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder
     141: ifeq          153
     144: aload         7
     146: checkcast     #44                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder
     149: invokevirtual #45                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.getThrowable:()Ljava/lang/Throwable;
     152: athrow
     153: aload         7
     155: areturn
     156: astore        7
     158: aload         7
     160: invokevirtual #47                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException.getCause:()Ljava/lang/Throwable;
     163: athrow
    Exception table:
       from    to  target type
          57    65    74   Class java/lang/Throwable
          57    65    87   any
          74    89    87   any
         107   155   156   Class org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException

  protected void clearTransactionManagerCache();
    Code:
       0: aload_0
       1: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: aload_0
      10: aconst_null
      11: putfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      14: return

  protected org.springframework.transaction.PlatformTransactionManager determineTransactionManager(org.springframework.transaction.interceptor.TransactionAttribute);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       8: ifnonnull     16
      11: aload_0
      12: invokevirtual #25                 // Method getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      15: areturn
      16: aload_1
      17: invokeinterface #49,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.getQualifier:()Ljava/lang/String;
      22: astore_2
      23: aload_2
      24: invokestatic  #50                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      27: ifeq          36
      30: aload_0
      31: aload_2
      32: invokespecial #51                 // Method determineQualifiedTransactionManager:(Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;
      35: areturn
      36: aload_0
      37: getfield      #16                 // Field transactionManagerBeanName:Ljava/lang/String;
      40: invokestatic  #50                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      43: ifeq          55
      46: aload_0
      47: aload_0
      48: getfield      #16                 // Field transactionManagerBeanName:Ljava/lang/String;
      51: invokespecial #51                 // Method determineQualifiedTransactionManager:(Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;
      54: areturn
      55: aload_0
      56: invokevirtual #25                 // Method getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      59: astore_3
      60: aload_3
      61: ifnonnull     113
      64: aload_0
      65: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
      68: getstatic     #52                 // Field DEFAULT_TRANSACTION_MANAGER_KEY:Ljava/lang/Object;
      71: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      76: checkcast     #54                 // class org/springframework/transaction/PlatformTransactionManager
      79: astore_3
      80: aload_3
      81: ifnonnull     113
      84: aload_0
      85: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      88: ldc           #54                 // class org/springframework/transaction/PlatformTransactionManager
      90: invokeinterface #55,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      95: checkcast     #54                 // class org/springframework/transaction/PlatformTransactionManager
      98: astore_3
      99: aload_0
     100: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
     103: getstatic     #52                 // Field DEFAULT_TRANSACTION_MANAGER_KEY:Ljava/lang/Object;
     106: aload_3
     107: invokeinterface #56,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: aload_3
     114: areturn

  private org.springframework.transaction.PlatformTransactionManager determineQualifiedTransactionManager(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #54                 // class org/springframework/transaction/PlatformTransactionManager
      13: astore_2
      14: aload_2
      15: ifnonnull     44
      18: aload_0
      19: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      22: ldc           #54                 // class org/springframework/transaction/PlatformTransactionManager
      24: aload_1
      25: invokestatic  #57                 // Method org/springframework/beans/factory/annotation/BeanFactoryAnnotationUtils.qualifiedBeanOfType:(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      28: checkcast     #54                 // class org/springframework/transaction/PlatformTransactionManager
      31: astore_2
      32: aload_0
      33: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
      36: aload_1
      37: aload_2
      38: invokeinterface #56,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_2
      45: areturn

  protected java.lang.String methodIdentification(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: new           #58                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_2
       8: ifnull        15
      11: aload_2
      12: goto          19
      15: aload_1
      16: invokevirtual #60                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      19: invokevirtual #61                 // Method java/lang/Class.getName:()Ljava/lang/String;
      22: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #63                 // String .
      27: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #64                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      34: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: areturn

  protected org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo createTransactionIfNecessary(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        24
       4: aload_2
       5: invokeinterface #66,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.getName:()Ljava/lang/String;
      10: ifnonnull     24
      13: new           #67                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$2
      16: dup
      17: aload_0
      18: aload_2
      19: aload_3
      20: invokespecial #68                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$2."<init>":(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
      23: astore_2
      24: aconst_null
      25: astore        4
      27: aload_2
      28: ifnull        92
      31: aload_1
      32: ifnull        47
      35: aload_1
      36: aload_2
      37: invokeinterface #69,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.getTransaction:(Lorg/springframework/transaction/TransactionDefinition;)Lorg/springframework/transaction/TransactionStatus;
      42: astore        4
      44: goto          92
      47: aload_0
      48: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      51: invokeinterface #70,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      56: ifeq          92
      59: aload_0
      60: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      63: new           #58                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #71                 // String Skipping transactional joinpoint [
      72: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_3
      76: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #72                 // String ] because no transaction manager has been configured
      81: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokeinterface #73,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      92: aload_0
      93: aload_1
      94: aload_2
      95: aload_3
      96: aload         4
      98: invokevirtual #74                 // Method prepareTransactionInfo:(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;Lorg/springframework/transaction/TransactionStatus;)Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
     101: areturn

  protected org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo prepareTransactionInfo(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String, org.springframework.transaction.TransactionStatus);
    Code:
       0: new           #10                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #75                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo."<init>":(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
      11: astore        5
      13: aload_2
      14: ifnull        76
      17: aload_0
      18: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      21: invokeinterface #76,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      26: ifeq          66
      29: aload_0
      30: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      33: new           #58                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #77                 // String Getting transaction for [
      42: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload         5
      47: invokevirtual #78                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getJoinpointIdentification:()Ljava/lang/String;
      50: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #79                 // String ]
      55: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #80,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      66: aload         5
      68: aload         4
      70: invokevirtual #81                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.newTransactionStatus:(Lorg/springframework/transaction/TransactionStatus;)V
      73: goto          121
      76: aload_0
      77: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      80: invokeinterface #76,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      85: ifeq          121
      88: aload_0
      89: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      92: new           #58                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #82                 // String Don\'t need to create transaction for [
     101: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_3
     105: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: ldc           #83                 // String ]: This method isn\'t transactional.
     110: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokeinterface #80,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     121: aload         5
     123: invokestatic  #84                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$100:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     126: aload         5
     128: areturn

  protected void commitTransactionAfterReturning(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo);
    Code:
       0: aload_1
       1: ifnull        72
       4: aload_1
       5: invokevirtual #85                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.hasTransaction:()Z
       8: ifeq          72
      11: aload_0
      12: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: invokeinterface #76,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      20: ifeq          59
      23: aload_0
      24: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      27: new           #58                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #86                 // String Completing transaction for [
      36: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #78                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getJoinpointIdentification:()Ljava/lang/String;
      43: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #79                 // String ]
      48: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #80,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      59: aload_1
      60: invokevirtual #87                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      63: aload_1
      64: invokevirtual #88                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
      67: invokeinterface #89,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.commit:(Lorg/springframework/transaction/TransactionStatus;)V
      72: return

  protected void completeTransactionAfterThrowing(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        208
       4: aload_1
       5: invokevirtual #85                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.hasTransaction:()Z
       8: ifeq          208
      11: aload_0
      12: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: invokeinterface #76,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      20: ifeq          63
      23: aload_0
      24: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      27: new           #58                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #86                 // String Completing transaction for [
      36: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #78                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getJoinpointIdentification:()Ljava/lang/String;
      43: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #90                 // String ] after exception:
      48: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokeinterface #80,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      63: aload_1
      64: invokestatic  #92                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$200:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
      67: aload_2
      68: invokeinterface #93,  2           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.rollbackOn:(Ljava/lang/Throwable;)Z
      73: ifeq          142
      76: aload_1
      77: invokevirtual #87                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      80: aload_1
      81: invokevirtual #88                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
      84: invokeinterface #94,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.rollback:(Lorg/springframework/transaction/TransactionStatus;)V
      89: goto          208
      92: astore_3
      93: aload_0
      94: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      97: ldc           #96                 // String Application exception overridden by rollback exception
      99: aload_2
     100: invokeinterface #97,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     105: aload_3
     106: aload_2
     107: invokevirtual #98                 // Method org/springframework/transaction/TransactionSystemException.initApplicationException:(Ljava/lang/Throwable;)V
     110: aload_3
     111: athrow
     112: astore_3
     113: aload_0
     114: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     117: ldc           #96                 // String Application exception overridden by rollback exception
     119: aload_2
     120: invokeinterface #97,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     125: aload_3
     126: athrow
     127: astore_3
     128: aload_0
     129: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     132: ldc           #101                // String Application exception overridden by rollback error
     134: aload_2
     135: invokeinterface #97,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     140: aload_3
     141: athrow
     142: aload_1
     143: invokevirtual #87                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
     146: aload_1
     147: invokevirtual #88                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
     150: invokeinterface #89,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.commit:(Lorg/springframework/transaction/TransactionStatus;)V
     155: goto          208
     158: astore_3
     159: aload_0
     160: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     163: ldc           #102                // String Application exception overridden by commit exception
     165: aload_2
     166: invokeinterface #97,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     171: aload_3
     172: aload_2
     173: invokevirtual #98                 // Method org/springframework/transaction/TransactionSystemException.initApplicationException:(Ljava/lang/Throwable;)V
     176: aload_3
     177: athrow
     178: astore_3
     179: aload_0
     180: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     183: ldc           #102                // String Application exception overridden by commit exception
     185: aload_2
     186: invokeinterface #97,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     191: aload_3
     192: athrow
     193: astore_3
     194: aload_0
     195: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     198: ldc           #103                // String Application exception overridden by commit error
     200: aload_2
     201: invokeinterface #97,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     206: aload_3
     207: athrow
     208: return
    Exception table:
       from    to  target type
          76    89    92   Class org/springframework/transaction/TransactionSystemException
          76    89   112   Class java/lang/RuntimeException
          76    89   127   Class java/lang/Error
         142   155   158   Class org/springframework/transaction/TransactionSystemException
         142   155   178   Class java/lang/RuntimeException
         142   155   193   Class java/lang/Error

  protected void cleanupTransactionInfo(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: invokestatic  #104                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$300:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
       8: return

  static java.lang.ThreadLocal access$400();
    Code:
       0: getstatic     #1                  // Field transactionInfoHolder:Ljava/lang/ThreadLocal;
       3: areturn

  static {};
    Code:
       0: new           #105                // class java/lang/Object
       3: dup
       4: invokespecial #2                  // Method java/lang/Object."<init>":()V
       7: putstatic     #52                 // Field DEFAULT_TRANSACTION_MANAGER_KEY:Ljava/lang/Object;
      10: new           #106                // class org/springframework/core/NamedThreadLocal
      13: dup
      14: ldc           #107                // String Current aspect-driven transaction
      16: invokespecial #108                // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      19: putstatic     #1                  // Field transactionInfoHolder:Ljava/lang/ThreadLocal;
      22: return
}
