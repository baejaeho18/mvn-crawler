Compiled from "TransactionSynchronizationUtils.java"
public abstract class org.springframework.transaction.support.TransactionSynchronizationUtils {
  private static final org.apache.commons.logging.Log logger;

  private static final boolean aopAvailable;

  public org.springframework.transaction.support.TransactionSynchronizationUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean sameResourceFactory(org.springframework.transaction.support.ResourceTransactionManager, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod org/springframework/transaction/support/ResourceTransactionManager.getResourceFactory:()Ljava/lang/Object;
       6: invokestatic  #3                  // Method unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       9: aload_1
      10: invokestatic  #3                  // Method unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
      13: invokevirtual #4                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      16: ireturn

  static java.lang.Object unwrapResourceIfNecessary(java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #5                  // String Resource must not be null
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_1
       8: aload_1
       9: instanceof    #7                  // class org/springframework/core/InfrastructureProxy
      12: ifeq          25
      15: aload_1
      16: checkcast     #7                  // class org/springframework/core/InfrastructureProxy
      19: invokeinterface #8,  1            // InterfaceMethod org/springframework/core/InfrastructureProxy.getWrappedObject:()Ljava/lang/Object;
      24: astore_1
      25: getstatic     #9                  // Field aopAvailable:Z
      28: ifeq          36
      31: aload_1
      32: invokestatic  #10                 // Method org/springframework/transaction/support/TransactionSynchronizationUtils$ScopedProxyUnwrapper.unwrapIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
      35: astore_1
      36: aload_1
      37: areturn

  public static void triggerFlush();
    Code:
       0: invokestatic  #11                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
       3: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_0
       9: aload_0
      10: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          37
      18: aload_0
      19: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #15                 // class org/springframework/transaction/support/TransactionSynchronization
      27: astore_1
      28: aload_1
      29: invokeinterface #16,  1           // InterfaceMethod org/springframework/transaction/support/TransactionSynchronization.flush:()V
      34: goto          9
      37: return

  public static void triggerBeforeCommit(boolean);
    Code:
       0: invokestatic  #11                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
       3: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          38
      18: aload_1
      19: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #15                 // class org/springframework/transaction/support/TransactionSynchronization
      27: astore_2
      28: aload_2
      29: iload_0
      30: invokeinterface #17,  2           // InterfaceMethod org/springframework/transaction/support/TransactionSynchronization.beforeCommit:(Z)V
      35: goto          9
      38: return

  public static void triggerBeforeCompletion();
    Code:
       0: invokestatic  #11                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
       3: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_0
       9: aload_0
      10: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          52
      18: aload_0
      19: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #15                 // class org/springframework/transaction/support/TransactionSynchronization
      27: astore_1
      28: aload_1
      29: invokeinterface #18,  1           // InterfaceMethod org/springframework/transaction/support/TransactionSynchronization.beforeCompletion:()V
      34: goto          49
      37: astore_2
      38: getstatic     #20                 // Field logger:Lorg/apache/commons/logging/Log;
      41: ldc           #21                 // String TransactionSynchronization.beforeCompletion threw exception
      43: aload_2
      44: invokeinterface #22,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      49: goto          9
      52: return
    Exception table:
       from    to  target type
          28    34    37   Class java/lang/Throwable

  public static void triggerAfterCommit();
    Code:
       0: invokestatic  #11                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
       3: invokestatic  #23                 // Method invokeAfterCommit:(Ljava/util/List;)V
       6: return

  public static void invokeAfterCommit(java.util.List<org.springframework.transaction.support.TransactionSynchronization>);
    Code:
       0: aload_0
       1: ifnull        39
       4: aload_0
       5: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore_1
      11: aload_1
      12: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          39
      20: aload_1
      21: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #15                 // class org/springframework/transaction/support/TransactionSynchronization
      29: astore_2
      30: aload_2
      31: invokeinterface #24,  1           // InterfaceMethod org/springframework/transaction/support/TransactionSynchronization.afterCommit:()V
      36: goto          11
      39: return

  public static void triggerAfterCompletion(int);
    Code:
       0: invokestatic  #11                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getSynchronizations:()Ljava/util/List;
       3: astore_1
       4: aload_1
       5: iload_0
       6: invokestatic  #25                 // Method invokeAfterCompletion:(Ljava/util/List;I)V
       9: return

  public static void invokeAfterCompletion(java.util.List<org.springframework.transaction.support.TransactionSynchronization>, int);
    Code:
       0: aload_0
       1: ifnull        57
       4: aload_0
       5: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          57
      20: aload_2
      21: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #15                 // class org/springframework/transaction/support/TransactionSynchronization
      29: astore_3
      30: aload_3
      31: iload_1
      32: invokeinterface #26,  2           // InterfaceMethod org/springframework/transaction/support/TransactionSynchronization.afterCompletion:(I)V
      37: goto          54
      40: astore        4
      42: getstatic     #20                 // Field logger:Lorg/apache/commons/logging/Log;
      45: ldc           #27                 // String TransactionSynchronization.afterCompletion threw exception
      47: aload         4
      49: invokeinterface #22,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      54: goto          11
      57: return
    Exception table:
       from    to  target type
          30    37    40   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #28                 // class org/springframework/transaction/support/TransactionSynchronizationUtils
       2: invokestatic  #29                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #20                 // Field logger:Lorg/apache/commons/logging/Log;
       8: ldc           #30                 // String org.springframework.aop.scope.ScopedObject
      10: ldc           #28                 // class org/springframework/transaction/support/TransactionSynchronizationUtils
      12: invokevirtual #31                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      15: invokestatic  #32                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      18: putstatic     #9                  // Field aopAvailable:Z
      21: return
}
