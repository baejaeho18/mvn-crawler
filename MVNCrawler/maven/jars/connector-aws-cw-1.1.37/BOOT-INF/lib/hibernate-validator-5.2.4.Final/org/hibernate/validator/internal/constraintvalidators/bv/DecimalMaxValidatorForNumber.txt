Compiled from "DecimalMaxValidatorForNumber.java"
public class org.hibernate.validator.internal.constraintvalidators.bv.DecimalMaxValidatorForNumber implements javax.validation.ConstraintValidator<javax.validation.constraints.DecimalMax, java.lang.Number> {
  private static final org.hibernate.validator.internal.util.logging.Log log;

  private java.math.BigDecimal maxValue;

  private boolean inclusive;

  public org.hibernate.validator.internal.constraintvalidators.bv.DecimalMaxValidatorForNumber();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void initialize(javax.validation.constraints.DecimalMax);
    Code:
       0: aload_0
       1: new           #2                  // class java/math/BigDecimal
       4: dup
       5: aload_1
       6: invokeinterface #3,  1            // InterfaceMethod javax/validation/constraints/DecimalMax.value:()Ljava/lang/String;
      11: invokespecial #4                  // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      14: putfield      #5                  // Field maxValue:Ljava/math/BigDecimal;
      17: goto          37
      20: astore_2
      21: getstatic     #7                  // Field log:Lorg/hibernate/validator/internal/util/logging/Log;
      24: aload_1
      25: invokeinterface #3,  1            // InterfaceMethod javax/validation/constraints/DecimalMax.value:()Ljava/lang/String;
      30: aload_2
      31: invokeinterface #8,  3            // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getInvalidBigDecimalFormatException:(Ljava/lang/String;Ljava/lang/NumberFormatException;)Ljava/lang/IllegalArgumentException;
      36: athrow
      37: aload_0
      38: aload_1
      39: invokeinterface #9,  1            // InterfaceMethod javax/validation/constraints/DecimalMax.inclusive:()Z
      44: putfield      #10                 // Field inclusive:Z
      47: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/NumberFormatException

  public boolean isValid(java.lang.Number, javax.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: instanceof    #11                 // class java/lang/Double
      10: ifeq          58
      13: aload_1
      14: checkcast     #11                 // class java/lang/Double
      17: invokevirtual #12                 // Method java/lang/Double.doubleValue:()D
      20: ldc2_w        #13                 // double -Infinityd
      23: dcmpl
      24: ifne          29
      27: iconst_1
      28: ireturn
      29: aload_1
      30: checkcast     #11                 // class java/lang/Double
      33: invokevirtual #12                 // Method java/lang/Double.doubleValue:()D
      36: invokestatic  #15                 // Method java/lang/Double.isNaN:(D)Z
      39: ifne          56
      42: aload_1
      43: checkcast     #11                 // class java/lang/Double
      46: invokevirtual #12                 // Method java/lang/Double.doubleValue:()D
      49: ldc2_w        #16                 // double Infinityd
      52: dcmpl
      53: ifne          108
      56: iconst_0
      57: ireturn
      58: aload_1
      59: instanceof    #18                 // class java/lang/Float
      62: ifeq          108
      65: aload_1
      66: checkcast     #18                 // class java/lang/Float
      69: invokevirtual #19                 // Method java/lang/Float.floatValue:()F
      72: ldc           #20                 // float -Infinityf
      74: fcmpl
      75: ifne          80
      78: iconst_1
      79: ireturn
      80: aload_1
      81: checkcast     #18                 // class java/lang/Float
      84: invokevirtual #19                 // Method java/lang/Float.floatValue:()F
      87: invokestatic  #21                 // Method java/lang/Float.isNaN:(F)Z
      90: ifne          106
      93: aload_1
      94: checkcast     #18                 // class java/lang/Float
      97: invokevirtual #19                 // Method java/lang/Float.floatValue:()F
     100: ldc           #22                 // float Infinityf
     102: fcmpl
     103: ifne          108
     106: iconst_0
     107: ireturn
     108: aload_1
     109: instanceof    #2                  // class java/math/BigDecimal
     112: ifeq          130
     115: aload_1
     116: checkcast     #2                  // class java/math/BigDecimal
     119: aload_0
     120: getfield      #5                  // Field maxValue:Ljava/math/BigDecimal;
     123: invokevirtual #23                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     126: istore_3
     127: goto          199
     130: aload_1
     131: instanceof    #24                 // class java/math/BigInteger
     134: ifeq          159
     137: new           #2                  // class java/math/BigDecimal
     140: dup
     141: aload_1
     142: checkcast     #24                 // class java/math/BigInteger
     145: invokespecial #25                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
     148: aload_0
     149: getfield      #5                  // Field maxValue:Ljava/math/BigDecimal;
     152: invokevirtual #23                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     155: istore_3
     156: goto          199
     159: aload_1
     160: instanceof    #26                 // class java/lang/Long
     163: ifeq          184
     166: aload_1
     167: invokevirtual #27                 // Method java/lang/Number.longValue:()J
     170: invokestatic  #28                 // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
     173: aload_0
     174: getfield      #5                  // Field maxValue:Ljava/math/BigDecimal;
     177: invokevirtual #23                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     180: istore_3
     181: goto          199
     184: aload_1
     185: invokevirtual #29                 // Method java/lang/Number.doubleValue:()D
     188: invokestatic  #30                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
     191: aload_0
     192: getfield      #5                  // Field maxValue:Ljava/math/BigDecimal;
     195: invokevirtual #23                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     198: istore_3
     199: aload_0
     200: getfield      #10                 // Field inclusive:Z
     203: ifeq          218
     206: iload_3
     207: ifgt          214
     210: iconst_1
     211: goto          227
     214: iconst_0
     215: goto          227
     218: iload_3
     219: ifge          226
     222: iconst_1
     223: goto          227
     226: iconst_0
     227: ireturn

  public boolean isValid(java.lang.Object, javax.validation.ConstraintValidatorContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class java/lang/Number
       5: aload_2
       6: invokevirtual #32                 // Method isValid:(Ljava/lang/Number;Ljavax/validation/ConstraintValidatorContext;)Z
       9: ireturn

  public void initialize(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class javax/validation/constraints/DecimalMax
       5: invokevirtual #34                 // Method initialize:(Ljavax/validation/constraints/DecimalMax;)V
       8: return

  static {};
    Code:
       0: invokestatic  #35                 // Method org/hibernate/validator/internal/util/logging/LoggerFactory.make:()Lorg/hibernate/validator/internal/util/logging/Log;
       3: putstatic     #7                  // Field log:Lorg/hibernate/validator/internal/util/logging/Log;
       6: return
}
