Compiled from "Huff.java"
public class org.json.zip.Huff implements org.json.zip.None,org.json.zip.PostMortem {
  private final int domain;

  private final org.json.zip.Huff$Symbol[] symbols;

  private org.json.zip.Huff$Symbol table;

  private boolean upToDate;

  private int width;

  public org.json.zip.Huff(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field upToDate:Z
       9: aload_0
      10: iload_1
      11: putfield      #3                  // Field domain:I
      14: iload_1
      15: iconst_2
      16: imul
      17: iconst_1
      18: isub
      19: istore_2
      20: aload_0
      21: iload_2
      22: anewarray     #4                  // class org/json/zip/Huff$Symbol
      25: putfield      #5                  // Field symbols:[Lorg/json/zip/Huff$Symbol;
      28: iconst_0
      29: istore_3
      30: iload_3
      31: iload_1
      32: if_icmpge     55
      35: aload_0
      36: getfield      #5                  // Field symbols:[Lorg/json/zip/Huff$Symbol;
      39: iload_3
      40: new           #4                  // class org/json/zip/Huff$Symbol
      43: dup
      44: iload_3
      45: invokespecial #6                  // Method org/json/zip/Huff$Symbol."<init>":(I)V
      48: aastore
      49: iinc          3, 1
      52: goto          30
      55: iload_1
      56: istore_3
      57: iload_3
      58: iload_2
      59: if_icmpge     82
      62: aload_0
      63: getfield      #5                  // Field symbols:[Lorg/json/zip/Huff$Symbol;
      66: iload_3
      67: new           #4                  // class org/json/zip/Huff$Symbol
      70: dup
      71: iconst_m1
      72: invokespecial #6                  // Method org/json/zip/Huff$Symbol."<init>":(I)V
      75: aastore
      76: iinc          3, 1
      79: goto          57
      82: return

  public void generate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field upToDate:Z
       4: ifne          317
       7: aload_0
       8: getfield      #5                  // Field symbols:[Lorg/json/zip/Huff$Symbol;
      11: iconst_0
      12: aaload
      13: astore_1
      14: aload_1
      15: astore_3
      16: aload_0
      17: aconst_null
      18: putfield      #7                  // Field table:Lorg/json/zip/Huff$Symbol;
      21: aload_1
      22: aconst_null
      23: putfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
      26: iconst_1
      27: istore        5
      29: iload         5
      31: aload_0
      32: getfield      #3                  // Field domain:I
      35: if_icmpge     138
      38: aload_0
      39: getfield      #5                  // Field symbols:[Lorg/json/zip/Huff$Symbol;
      42: iload         5
      44: aaload
      45: astore        4
      47: aload         4
      49: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
      52: aload_1
      53: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
      56: lcmp
      57: ifge          72
      60: aload         4
      62: aload_1
      63: putfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
      66: aload         4
      68: astore_1
      69: goto          132
      72: aload         4
      74: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
      77: aload_3
      78: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
      81: lcmp
      82: ifge          87
      85: aload_1
      86: astore_3
      87: aload_3
      88: getfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
      91: astore_2
      92: aload_2
      93: ifnull        117
      96: aload         4
      98: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
     101: aload_2
     102: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
     105: lcmp
     106: ifge          112
     109: goto          117
     112: aload_2
     113: astore_3
     114: goto          87
     117: aload         4
     119: aload_2
     120: putfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
     123: aload_3
     124: aload         4
     126: putfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
     129: aload         4
     131: astore_3
     132: iinc          5, 1
     135: goto          29
     138: aload_0
     139: getfield      #3                  // Field domain:I
     142: istore        5
     144: aload_1
     145: astore_3
     146: aload_1
     147: astore        6
     149: aload         6
     151: getfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
     154: astore        7
     156: aload         7
     158: getfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
     161: astore_1
     162: aload_0
     163: getfield      #5                  // Field symbols:[Lorg/json/zip/Huff$Symbol;
     166: iload         5
     168: aaload
     169: astore        4
     171: iinc          5, 1
     174: aload         4
     176: aload         6
     178: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
     181: aload         7
     183: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
     186: ladd
     187: putfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
     190: aload         4
     192: aload         6
     194: putfield      #10                 // Field org/json/zip/Huff$Symbol.zero:Lorg/json/zip/Huff$Symbol;
     197: aload         4
     199: aload         7
     201: putfield      #11                 // Field org/json/zip/Huff$Symbol.one:Lorg/json/zip/Huff$Symbol;
     204: aload         4
     206: aconst_null
     207: putfield      #12                 // Field org/json/zip/Huff$Symbol.back:Lorg/json/zip/Huff$Symbol;
     210: aload         6
     212: aload         4
     214: putfield      #12                 // Field org/json/zip/Huff$Symbol.back:Lorg/json/zip/Huff$Symbol;
     217: aload         7
     219: aload         4
     221: putfield      #12                 // Field org/json/zip/Huff$Symbol.back:Lorg/json/zip/Huff$Symbol;
     224: aload_1
     225: ifnonnull     231
     228: goto          306
     231: aload         4
     233: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
     236: aload_1
     237: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
     240: lcmp
     241: ifge          258
     244: aload         4
     246: aload_1
     247: putfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
     250: aload         4
     252: astore_1
     253: aload_1
     254: astore_3
     255: goto          146
     258: aload_3
     259: getfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
     262: astore_2
     263: aload_2
     264: ifnull        288
     267: aload         4
     269: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
     272: aload_2
     273: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
     276: lcmp
     277: ifge          283
     280: goto          288
     283: aload_2
     284: astore_3
     285: goto          258
     288: aload         4
     290: aload_2
     291: putfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
     294: aload_3
     295: aload         4
     297: putfield      #8                  // Field org/json/zip/Huff$Symbol.next:Lorg/json/zip/Huff$Symbol;
     300: aload         4
     302: astore_3
     303: goto          146
     306: aload_0
     307: aload         4
     309: putfield      #7                  // Field table:Lorg/json/zip/Huff$Symbol;
     312: aload_0
     313: iconst_1
     314: putfield      #2                  // Field upToDate:Z
     317: return

  private boolean postMortem(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field domain:I
       4: newarray       int
       6: astore_2
       7: aload_0
       8: getfield      #5                  // Field symbols:[Lorg/json/zip/Huff$Symbol;
      11: iload_1
      12: aaload
      13: astore_3
      14: aload_3
      15: getfield      #13                 // Field org/json/zip/Huff$Symbol.integer:I
      18: iload_1
      19: if_icmpeq     24
      22: iconst_0
      23: ireturn
      24: iconst_0
      25: istore        4
      27: aload_3
      28: getfield      #12                 // Field org/json/zip/Huff$Symbol.back:Lorg/json/zip/Huff$Symbol;
      31: astore        5
      33: aload         5
      35: ifnonnull     41
      38: goto          86
      41: aload         5
      43: getfield      #10                 // Field org/json/zip/Huff$Symbol.zero:Lorg/json/zip/Huff$Symbol;
      46: aload_3
      47: if_acmpne     58
      50: aload_2
      51: iload         4
      53: iconst_0
      54: iastore
      55: goto          77
      58: aload         5
      60: getfield      #11                 // Field org/json/zip/Huff$Symbol.one:Lorg/json/zip/Huff$Symbol;
      63: aload_3
      64: if_acmpne     75
      67: aload_2
      68: iload         4
      70: iconst_1
      71: iastore
      72: goto          77
      75: iconst_0
      76: ireturn
      77: iinc          4, 1
      80: aload         5
      82: astore_3
      83: goto          27
      86: aload_3
      87: aload_0
      88: getfield      #7                  // Field table:Lorg/json/zip/Huff$Symbol;
      91: if_acmpeq     96
      94: iconst_0
      95: ireturn
      96: aload_0
      97: iconst_0
      98: putfield      #14                 // Field width:I
     101: aload_0
     102: getfield      #7                  // Field table:Lorg/json/zip/Huff$Symbol;
     105: astore_3
     106: aload_3
     107: getfield      #13                 // Field org/json/zip/Huff$Symbol.integer:I
     110: iconst_m1
     111: if_icmpne     139
     114: iinc          4, -1
     117: aload_2
     118: iload         4
     120: iaload
     121: ifeq          131
     124: aload_3
     125: getfield      #11                 // Field org/json/zip/Huff$Symbol.one:Lorg/json/zip/Huff$Symbol;
     128: goto          135
     131: aload_3
     132: getfield      #10                 // Field org/json/zip/Huff$Symbol.zero:Lorg/json/zip/Huff$Symbol;
     135: astore_3
     136: goto          106
     139: aload_3
     140: getfield      #13                 // Field org/json/zip/Huff$Symbol.integer:I
     143: iload_1
     144: if_icmpne     156
     147: iload         4
     149: ifne          156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ireturn

  public boolean postMortem(org.json.zip.PostMortem);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #3                  // Field domain:I
       7: if_icmpge     36
      10: aload_0
      11: iload_2
      12: invokespecial #15                 // Method postMortem:(I)Z
      15: ifne          30
      18: ldc           #16                 // String \nBad huff
      20: invokestatic  #17                 // Method org/json/zip/JSONzip.log:(Ljava/lang/String;)V
      23: iload_2
      24: iload_2
      25: invokestatic  #18                 // Method org/json/zip/JSONzip.logchar:(II)V
      28: iconst_0
      29: ireturn
      30: iinc          2, 1
      33: goto          2
      36: aload_0
      37: getfield      #7                  // Field table:Lorg/json/zip/Huff$Symbol;
      40: aload_1
      41: checkcast     #19                 // class org/json/zip/Huff
      44: getfield      #7                  // Field table:Lorg/json/zip/Huff$Symbol;
      47: invokevirtual #20                 // Method org/json/zip/Huff$Symbol.postMortem:(Lorg/json/zip/PostMortem;)Z
      50: ireturn

  public int read(org.json.zip.BitReader) throws org.json.JSONException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #14                 // Field width:I
       5: aload_0
       6: getfield      #7                  // Field table:Lorg/json/zip/Huff$Symbol;
       9: astore_2
      10: aload_2
      11: getfield      #13                 // Field org/json/zip/Huff$Symbol.integer:I
      14: iconst_m1
      15: if_icmpne     52
      18: aload_0
      19: dup
      20: getfield      #14                 // Field width:I
      23: iconst_1
      24: iadd
      25: putfield      #14                 // Field width:I
      28: aload_1
      29: invokeinterface #21,  1           // InterfaceMethod org/json/zip/BitReader.bit:()Z
      34: ifeq          44
      37: aload_2
      38: getfield      #11                 // Field org/json/zip/Huff$Symbol.one:Lorg/json/zip/Huff$Symbol;
      41: goto          48
      44: aload_2
      45: getfield      #10                 // Field org/json/zip/Huff$Symbol.zero:Lorg/json/zip/Huff$Symbol;
      48: astore_2
      49: goto          10
      52: aload_0
      53: aload_2
      54: getfield      #13                 // Field org/json/zip/Huff$Symbol.integer:I
      57: invokevirtual #22                 // Method tick:(I)V
      60: aload_2
      61: getfield      #13                 // Field org/json/zip/Huff$Symbol.integer:I
      64: ireturn
      65: astore_2
      66: new           #24                 // class org/json/JSONException
      69: dup
      70: aload_2
      71: invokespecial #25                 // Method org/json/JSONException."<init>":(Ljava/lang/Throwable;)V
      74: athrow
    Exception table:
       from    to  target type
           0    64    65   Class java/lang/Throwable

  public void tick(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field symbols:[Lorg/json/zip/Huff$Symbol;
       4: iload_1
       5: aaload
       6: dup
       7: getfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
      10: lconst_1
      11: ladd
      12: putfield      #9                  // Field org/json/zip/Huff$Symbol.weight:J
      15: aload_0
      16: iconst_0
      17: putfield      #2                  // Field upToDate:Z
      20: return

  public void tick(int, int);
    Code:
       0: iload_1
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpgt     18
       7: aload_0
       8: iload_3
       9: invokevirtual #22                 // Method tick:(I)V
      12: iinc          3, 1
      15: goto          2
      18: return

  private void write(org.json.zip.Huff$Symbol, org.json.zip.BitWriter) throws org.json.JSONException;
    Code:
       0: aload_1
       1: getfield      #12                 // Field org/json/zip/Huff$Symbol.back:Lorg/json/zip/Huff$Symbol;
       4: astore_3
       5: aload_3
       6: ifnull        48
       9: aload_0
      10: dup
      11: getfield      #14                 // Field width:I
      14: iconst_1
      15: iadd
      16: putfield      #14                 // Field width:I
      19: aload_0
      20: aload_3
      21: aload_2
      22: invokespecial #26                 // Method write:(Lorg/json/zip/Huff$Symbol;Lorg/json/zip/BitWriter;)V
      25: aload_3
      26: getfield      #10                 // Field org/json/zip/Huff$Symbol.zero:Lorg/json/zip/Huff$Symbol;
      29: aload_1
      30: if_acmpne     42
      33: aload_2
      34: invokeinterface #27,  1           // InterfaceMethod org/json/zip/BitWriter.zero:()V
      39: goto          48
      42: aload_2
      43: invokeinterface #28,  1           // InterfaceMethod org/json/zip/BitWriter.one:()V
      48: goto          61
      51: astore_3
      52: new           #24                 // class org/json/JSONException
      55: dup
      56: aload_3
      57: invokespecial #25                 // Method org/json/JSONException."<init>":(Ljava/lang/Throwable;)V
      60: athrow
      61: return
    Exception table:
       from    to  target type
           0    48    51   Class java/lang/Throwable

  public void write(int, org.json.zip.BitWriter) throws org.json.JSONException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #14                 // Field width:I
       5: aload_0
       6: aload_0
       7: getfield      #5                  // Field symbols:[Lorg/json/zip/Huff$Symbol;
      10: iload_1
      11: aaload
      12: aload_2
      13: invokespecial #26                 // Method write:(Lorg/json/zip/Huff$Symbol;Lorg/json/zip/BitWriter;)V
      16: aload_0
      17: iload_1
      18: invokevirtual #22                 // Method tick:(I)V
      21: return
}
