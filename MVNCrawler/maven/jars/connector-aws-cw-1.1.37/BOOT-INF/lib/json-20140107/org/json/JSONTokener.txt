Compiled from "JSONTokener.java"
public class org.json.JSONTokener {
  private long character;

  private boolean eof;

  private long index;

  private long line;

  private char previous;

  private java.io.Reader reader;

  private boolean usePrevious;

  public org.json.JSONTokener(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method java/io/Reader.markSupported:()Z
       9: ifeq          16
      12: aload_1
      13: goto          24
      16: new           #3                  // class java/io/BufferedReader
      19: dup
      20: aload_1
      21: invokespecial #4                  // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      24: putfield      #5                  // Field reader:Ljava/io/Reader;
      27: aload_0
      28: iconst_0
      29: putfield      #6                  // Field eof:Z
      32: aload_0
      33: iconst_0
      34: putfield      #7                  // Field usePrevious:Z
      37: aload_0
      38: iconst_0
      39: putfield      #8                  // Field previous:C
      42: aload_0
      43: lconst_0
      44: putfield      #9                  // Field index:J
      47: aload_0
      48: lconst_1
      49: putfield      #10                 // Field character:J
      52: aload_0
      53: lconst_1
      54: putfield      #11                 // Field line:J
      57: return

  public org.json.JSONTokener(java.io.InputStream) throws org.json.JSONException;
    Code:
       0: aload_0
       1: new           #12                 // class java/io/InputStreamReader
       4: dup
       5: aload_1
       6: invokespecial #13                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
       9: invokespecial #14                 // Method "<init>":(Ljava/io/Reader;)V
      12: return

  public org.json.JSONTokener(java.lang.String);
    Code:
       0: aload_0
       1: new           #15                 // class java/io/StringReader
       4: dup
       5: aload_1
       6: invokespecial #16                 // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
       9: invokespecial #14                 // Method "<init>":(Ljava/io/Reader;)V
      12: return

  public void back() throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field usePrevious:Z
       4: ifne          16
       7: aload_0
       8: getfield      #9                  // Field index:J
      11: lconst_0
      12: lcmp
      13: ifgt          26
      16: new           #17                 // class org/json/JSONException
      19: dup
      20: ldc           #18                 // String Stepping back two steps is not supported
      22: invokespecial #19                 // Method org/json/JSONException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: dup
      28: getfield      #9                  // Field index:J
      31: lconst_1
      32: lsub
      33: putfield      #9                  // Field index:J
      36: aload_0
      37: dup
      38: getfield      #10                 // Field character:J
      41: lconst_1
      42: lsub
      43: putfield      #10                 // Field character:J
      46: aload_0
      47: iconst_1
      48: putfield      #7                  // Field usePrevious:Z
      51: aload_0
      52: iconst_0
      53: putfield      #6                  // Field eof:Z
      56: return

  public static int dehexchar(char);
    Code:
       0: iload_0
       1: bipush        48
       3: if_icmplt     17
       6: iload_0
       7: bipush        57
       9: if_icmpgt     17
      12: iload_0
      13: bipush        48
      15: isub
      16: ireturn
      17: iload_0
      18: bipush        65
      20: if_icmplt     34
      23: iload_0
      24: bipush        70
      26: if_icmpgt     34
      29: iload_0
      30: bipush        55
      32: isub
      33: ireturn
      34: iload_0
      35: bipush        97
      37: if_icmplt     51
      40: iload_0
      41: bipush        102
      43: if_icmpgt     51
      46: iload_0
      47: bipush        87
      49: isub
      50: ireturn
      51: iconst_m1
      52: ireturn

  public boolean end();
    Code:
       0: aload_0
       1: getfield      #6                  // Field eof:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #7                  // Field usePrevious:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean more() throws org.json.JSONException;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method next:()C
       4: pop
       5: aload_0
       6: invokevirtual #21                 // Method end:()Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: invokevirtual #22                 // Method back:()V
      18: iconst_1
      19: ireturn

  public char next() throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field usePrevious:Z
       4: ifeq          20
       7: aload_0
       8: iconst_0
       9: putfield      #7                  // Field usePrevious:Z
      12: aload_0
      13: getfield      #8                  // Field previous:C
      16: istore_1
      17: goto          52
      20: aload_0
      21: getfield      #5                  // Field reader:Ljava/io/Reader;
      24: invokevirtual #23                 // Method java/io/Reader.read:()I
      27: istore_1
      28: goto          41
      31: astore_2
      32: new           #17                 // class org/json/JSONException
      35: dup
      36: aload_2
      37: invokespecial #25                 // Method org/json/JSONException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
      41: iload_1
      42: ifgt          52
      45: aload_0
      46: iconst_1
      47: putfield      #6                  // Field eof:Z
      50: iconst_0
      51: istore_1
      52: aload_0
      53: dup
      54: getfield      #9                  // Field index:J
      57: lconst_1
      58: ladd
      59: putfield      #9                  // Field index:J
      62: aload_0
      63: getfield      #8                  // Field previous:C
      66: bipush        13
      68: if_icmpne     99
      71: aload_0
      72: dup
      73: getfield      #11                 // Field line:J
      76: lconst_1
      77: ladd
      78: putfield      #11                 // Field line:J
      81: aload_0
      82: iload_1
      83: bipush        10
      85: if_icmpne     92
      88: lconst_0
      89: goto          93
      92: lconst_1
      93: putfield      #10                 // Field character:J
      96: goto          133
      99: iload_1
     100: bipush        10
     102: if_icmpne     123
     105: aload_0
     106: dup
     107: getfield      #11                 // Field line:J
     110: lconst_1
     111: ladd
     112: putfield      #11                 // Field line:J
     115: aload_0
     116: lconst_0
     117: putfield      #10                 // Field character:J
     120: goto          133
     123: aload_0
     124: dup
     125: getfield      #10                 // Field character:J
     128: lconst_1
     129: ladd
     130: putfield      #10                 // Field character:J
     133: aload_0
     134: iload_1
     135: i2c
     136: putfield      #8                  // Field previous:C
     139: aload_0
     140: getfield      #8                  // Field previous:C
     143: ireturn
    Exception table:
       from    to  target type
          20    28    31   Class java/io/IOException

  public char next(char) throws org.json.JSONException;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method next:()C
       4: istore_2
       5: iload_2
       6: iload_1
       7: if_icmpeq     48
      10: aload_0
      11: new           #26                 // class java/lang/StringBuffer
      14: dup
      15: invokespecial #27                 // Method java/lang/StringBuffer."<init>":()V
      18: ldc           #28                 // String Expected \'
      20: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: iload_1
      24: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      27: ldc           #31                 // String \' and instead saw \'
      29: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      32: iload_2
      33: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      36: ldc           #32                 // String \'
      38: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      44: invokevirtual #34                 // Method syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;
      47: athrow
      48: iload_2
      49: ireturn

  public java.lang.String next(int) throws org.json.JSONException;
    Code:
       0: iload_1
       1: ifne          7
       4: ldc           #35                 // String
       6: areturn
       7: iload_1
       8: newarray       char
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: iload_1
      15: if_icmpge     45
      18: aload_2
      19: iload_3
      20: aload_0
      21: invokevirtual #20                 // Method next:()C
      24: castore
      25: aload_0
      26: invokevirtual #21                 // Method end:()Z
      29: ifeq          39
      32: aload_0
      33: ldc           #36                 // String Substring bounds error
      35: invokevirtual #34                 // Method syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;
      38: athrow
      39: iinc          3, 1
      42: goto          13
      45: new           #37                 // class java/lang/String
      48: dup
      49: aload_2
      50: invokespecial #38                 // Method java/lang/String."<init>":([C)V
      53: areturn

  public char nextClean() throws org.json.JSONException;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method next:()C
       4: istore_1
       5: iload_1
       6: ifeq          15
       9: iload_1
      10: bipush        32
      12: if_icmple     17
      15: iload_1
      16: ireturn
      17: goto          0

  public java.lang.String nextString(char) throws org.json.JSONException;
    Code:
       0: new           #26                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_3
       8: aload_0
       9: invokevirtual #20                 // Method next:()C
      12: istore_2
      13: iload_2
      14: lookupswitch  { // 4
                     0: 56
                    10: 56
                    13: 56
                    92: 63
               default: 245
          }
      56: aload_0
      57: ldc           #39                 // String Unterminated string
      59: invokevirtual #34                 // Method syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;
      62: athrow
      63: aload_0
      64: invokevirtual #20                 // Method next:()C
      67: istore_2
      68: iload_2
      69: lookupswitch  { // 10
                    34: 229
                    39: 229
                    47: 229
                    92: 229
                    98: 160
                   102: 190
                   110: 180
                   114: 200
                   116: 170
                   117: 210
               default: 238
          }
     160: aload_3
     161: bipush        8
     163: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     166: pop
     167: goto          8
     170: aload_3
     171: bipush        9
     173: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     176: pop
     177: goto          8
     180: aload_3
     181: bipush        10
     183: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     186: pop
     187: goto          8
     190: aload_3
     191: bipush        12
     193: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     196: pop
     197: goto          8
     200: aload_3
     201: bipush        13
     203: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     206: pop
     207: goto          8
     210: aload_3
     211: aload_0
     212: iconst_4
     213: invokevirtual #40                 // Method next:(I)Ljava/lang/String;
     216: bipush        16
     218: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
     221: i2c
     222: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     225: pop
     226: goto          8
     229: aload_3
     230: iload_2
     231: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     234: pop
     235: goto          8
     238: aload_0
     239: ldc           #42                 // String Illegal escape.
     241: invokevirtual #34                 // Method syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;
     244: athrow
     245: iload_2
     246: iload_1
     247: if_icmpne     255
     250: aload_3
     251: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     254: areturn
     255: aload_3
     256: iload_2
     257: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     260: pop
     261: goto          8

  public java.lang.String nextTo(char) throws org.json.JSONException;
    Code:
       0: new           #26                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #20                 // Method next:()C
      12: istore_3
      13: iload_3
      14: iload_1
      15: if_icmpeq     34
      18: iload_3
      19: ifeq          34
      22: iload_3
      23: bipush        10
      25: if_icmpeq     34
      28: iload_3
      29: bipush        13
      31: if_icmpne     50
      34: iload_3
      35: ifeq          42
      38: aload_0
      39: invokevirtual #22                 // Method back:()V
      42: aload_2
      43: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      46: invokevirtual #43                 // Method java/lang/String.trim:()Ljava/lang/String;
      49: areturn
      50: aload_2
      51: iload_3
      52: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      55: pop
      56: goto          8

  public java.lang.String nextTo(java.lang.String) throws org.json.JSONException;
    Code:
       0: new           #26                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_3
       8: aload_0
       9: invokevirtual #20                 // Method next:()C
      12: istore_2
      13: aload_1
      14: iload_2
      15: invokevirtual #44                 // Method java/lang/String.indexOf:(I)I
      18: ifge          37
      21: iload_2
      22: ifeq          37
      25: iload_2
      26: bipush        10
      28: if_icmpeq     37
      31: iload_2
      32: bipush        13
      34: if_icmpne     53
      37: iload_2
      38: ifeq          45
      41: aload_0
      42: invokevirtual #22                 // Method back:()V
      45: aload_3
      46: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      49: invokevirtual #43                 // Method java/lang/String.trim:()Ljava/lang/String;
      52: areturn
      53: aload_3
      54: iload_2
      55: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      58: pop
      59: goto          8

  public java.lang.Object nextValue() throws org.json.JSONException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method nextClean:()C
       4: istore_1
       5: iload_1
       6: lookupswitch  { // 4
                    34: 48
                    39: 48
                    91: 67
                   123: 54
               default: 80
          }
      48: aload_0
      49: iload_1
      50: invokevirtual #46                 // Method nextString:(C)Ljava/lang/String;
      53: areturn
      54: aload_0
      55: invokevirtual #22                 // Method back:()V
      58: new           #47                 // class org/json/JSONObject
      61: dup
      62: aload_0
      63: invokespecial #48                 // Method org/json/JSONObject."<init>":(Lorg/json/JSONTokener;)V
      66: areturn
      67: aload_0
      68: invokevirtual #22                 // Method back:()V
      71: new           #49                 // class org/json/JSONArray
      74: dup
      75: aload_0
      76: invokespecial #50                 // Method org/json/JSONArray."<init>":(Lorg/json/JSONTokener;)V
      79: areturn
      80: new           #26                 // class java/lang/StringBuffer
      83: dup
      84: invokespecial #27                 // Method java/lang/StringBuffer."<init>":()V
      87: astore_3
      88: iload_1
      89: bipush        32
      91: if_icmplt     117
      94: ldc           #51                 // String ,:]}/\\\"[{;=#
      96: iload_1
      97: invokevirtual #44                 // Method java/lang/String.indexOf:(I)I
     100: ifge          117
     103: aload_3
     104: iload_1
     105: invokevirtual #30                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     108: pop
     109: aload_0
     110: invokevirtual #20                 // Method next:()C
     113: istore_1
     114: goto          88
     117: aload_0
     118: invokevirtual #22                 // Method back:()V
     121: aload_3
     122: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     125: invokevirtual #43                 // Method java/lang/String.trim:()Ljava/lang/String;
     128: astore_2
     129: ldc           #35                 // String
     131: aload_2
     132: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     135: ifeq          145
     138: aload_0
     139: ldc           #53                 // String Missing value
     141: invokevirtual #34                 // Method syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;
     144: athrow
     145: aload_2
     146: invokestatic  #54                 // Method org/json/JSONObject.stringToValue:(Ljava/lang/String;)Ljava/lang/Object;
     149: areturn

  public char skipTo(char) throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field index:J
       4: lstore_3
       5: aload_0
       6: getfield      #10                 // Field character:J
       9: lstore        5
      11: aload_0
      12: getfield      #11                 // Field line:J
      15: lstore        7
      17: aload_0
      18: getfield      #5                  // Field reader:Ljava/io/Reader;
      21: ldc           #55                 // int 1000000
      23: invokevirtual #56                 // Method java/io/Reader.mark:(I)V
      26: aload_0
      27: invokevirtual #20                 // Method next:()C
      30: istore_2
      31: iload_2
      32: ifne          61
      35: aload_0
      36: getfield      #5                  // Field reader:Ljava/io/Reader;
      39: invokevirtual #57                 // Method java/io/Reader.reset:()V
      42: aload_0
      43: lload_3
      44: putfield      #9                  // Field index:J
      47: aload_0
      48: lload         5
      50: putfield      #10                 // Field character:J
      53: aload_0
      54: lload         7
      56: putfield      #11                 // Field line:J
      59: iload_2
      60: ireturn
      61: iload_2
      62: iload_1
      63: if_icmpne     26
      66: goto          79
      69: astore_3
      70: new           #17                 // class org/json/JSONException
      73: dup
      74: aload_3
      75: invokespecial #25                 // Method org/json/JSONException."<init>":(Ljava/lang/Throwable;)V
      78: athrow
      79: aload_0
      80: invokevirtual #22                 // Method back:()V
      83: iload_2
      84: ireturn
    Exception table:
       from    to  target type
           0    60    69   Class java/io/IOException
          61    66    69   Class java/io/IOException

  public org.json.JSONException syntaxError(java.lang.String);
    Code:
       0: new           #17                 // class org/json/JSONException
       3: dup
       4: new           #26                 // class java/lang/StringBuffer
       7: dup
       8: invokespecial #27                 // Method java/lang/StringBuffer."<init>":()V
      11: aload_1
      12: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      15: aload_0
      16: invokevirtual #58                 // Method toString:()Ljava/lang/String;
      19: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      22: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      25: invokespecial #19                 // Method org/json/JSONException."<init>":(Ljava/lang/String;)V
      28: areturn

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #59                 // String  at
       9: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: aload_0
      13: getfield      #9                  // Field index:J
      16: invokevirtual #60                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
      19: ldc           #61                 // String  [character
      21: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: aload_0
      25: getfield      #10                 // Field character:J
      28: invokevirtual #60                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
      31: ldc           #62                 // String  line
      33: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      36: aload_0
      37: getfield      #11                 // Field line:J
      40: invokevirtual #60                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
      43: ldc           #63                 // String ]
      45: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      51: areturn
}
