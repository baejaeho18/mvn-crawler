Compiled from "Decompressor.java"
public class org.json.zip.Decompressor extends org.json.zip.JSONzip {
  org.json.zip.BitReader bitreader;

  public org.json.zip.Decompressor(org.json.zip.BitReader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/json/zip/JSONzip."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
       9: return

  private boolean bit() throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
       4: invokeinterface #3,  1            // InterfaceMethod org/json/zip/BitReader.bit:()Z
       9: istore_1
      10: iload_1
      11: ireturn
      12: astore_2
      13: new           #5                  // class org/json/JSONException
      16: dup
      17: aload_2
      18: invokespecial #6                  // Method org/json/JSONException."<init>":(Ljava/lang/Throwable;)V
      21: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/Throwable

  private java.lang.Object getAndTick(org.json.zip.Keep, org.json.zip.BitReader) throws org.json.JSONException;
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/json/zip/Keep.bitsize:()I
       4: istore_3
       5: aload_2
       6: iload_3
       7: invokeinterface #8,  2            // InterfaceMethod org/json/zip/BitReader.read:(I)I
      12: istore        4
      14: aload_1
      15: iload         4
      17: invokevirtual #9                  // Method org/json/zip/Keep.value:(I)Ljava/lang/Object;
      20: astore        5
      22: iload         4
      24: aload_1
      25: getfield      #10                 // Field org/json/zip/Keep.length:I
      28: if_icmplt     41
      31: new           #5                  // class org/json/JSONException
      34: dup
      35: ldc           #11                 // String Deep error.
      37: invokespecial #12                 // Method org/json/JSONException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_1
      42: iload         4
      44: invokevirtual #13                 // Method org/json/zip/Keep.tick:(I)V
      47: aload         5
      49: areturn
      50: astore_3
      51: new           #5                  // class org/json/JSONException
      54: dup
      55: aload_3
      56: invokespecial #6                  // Method org/json/JSONException."<init>":(Ljava/lang/Throwable;)V
      59: athrow
    Exception table:
       from    to  target type
           0    49    50   Class java/lang/Throwable

  public boolean pad(int) throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
       4: iload_1
       5: invokeinterface #14,  2           // InterfaceMethod org/json/zip/BitReader.pad:(I)Z
      10: ireturn
      11: astore_2
      12: new           #5                  // class org/json/JSONException
      15: dup
      16: aload_2
      17: invokespecial #6                  // Method org/json/JSONException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/Throwable

  private int read(int) throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
       4: iload_1
       5: invokeinterface #8,  2            // InterfaceMethod org/json/zip/BitReader.read:(I)I
      10: istore_2
      11: iload_2
      12: ireturn
      13: astore_2
      14: new           #5                  // class org/json/JSONException
      17: dup
      18: aload_2
      19: invokespecial #6                  // Method org/json/JSONException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/Throwable

  private org.json.JSONArray readArray(boolean) throws org.json.JSONException;
    Code:
       0: new           #15                 // class org/json/JSONArray
       3: dup
       4: invokespecial #16                 // Method org/json/JSONArray."<init>":()V
       7: astore_2
       8: aload_2
       9: iload_1
      10: ifeq          20
      13: aload_0
      14: invokespecial #17                 // Method readString:()Ljava/lang/String;
      17: goto          24
      20: aload_0
      21: invokespecial #18                 // Method readValue:()Ljava/lang/Object;
      24: invokevirtual #19                 // Method org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;
      27: pop
      28: aload_0
      29: invokespecial #20                 // Method bit:()Z
      32: ifne          67
      35: aload_0
      36: invokespecial #20                 // Method bit:()Z
      39: ifne          44
      42: aload_2
      43: areturn
      44: aload_2
      45: iload_1
      46: ifeq          56
      49: aload_0
      50: invokespecial #18                 // Method readValue:()Ljava/lang/Object;
      53: goto          60
      56: aload_0
      57: invokespecial #17                 // Method readString:()Ljava/lang/String;
      60: invokevirtual #19                 // Method org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;
      63: pop
      64: goto          28
      67: aload_2
      68: iload_1
      69: ifeq          79
      72: aload_0
      73: invokespecial #17                 // Method readString:()Ljava/lang/String;
      76: goto          83
      79: aload_0
      80: invokespecial #18                 // Method readValue:()Ljava/lang/Object;
      83: invokevirtual #19                 // Method org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;
      86: pop
      87: goto          28

  private java.lang.Object readJSON() throws org.json.JSONException;
    Code:
       0: aload_0
       1: iconst_3
       2: invokespecial #21                 // Method read:(I)I
       5: tableswitch   { // 0 to 7
                     0: 69
                     1: 77
                     2: 85
                     3: 89
                     4: 93
                     5: 52
                     6: 57
                     7: 63
               default: 93
          }
      52: aload_0
      53: invokespecial #22                 // Method readObject:()Lorg/json/JSONObject;
      56: areturn
      57: aload_0
      58: iconst_1
      59: invokespecial #23                 // Method readArray:(Z)Lorg/json/JSONArray;
      62: areturn
      63: aload_0
      64: iconst_0
      65: invokespecial #23                 // Method readArray:(Z)Lorg/json/JSONArray;
      68: areturn
      69: new           #24                 // class org/json/JSONObject
      72: dup
      73: invokespecial #25                 // Method org/json/JSONObject."<init>":()V
      76: areturn
      77: new           #15                 // class org/json/JSONArray
      80: dup
      81: invokespecial #16                 // Method org/json/JSONArray."<init>":()V
      84: areturn
      85: getstatic     #26                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      88: areturn
      89: getstatic     #27                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      92: areturn
      93: getstatic     #28                 // Field org/json/JSONObject.NULL:Ljava/lang/Object;
      96: areturn

  private java.lang.String readName() throws org.json.JSONException;
    Code:
       0: ldc           #29                 // int 65536
       2: newarray       byte
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_0
       8: invokespecial #20                 // Method bit:()Z
      11: ifne          77
      14: aload_0
      15: getfield      #30                 // Field namehuff:Lorg/json/zip/Huff;
      18: aload_0
      19: getfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
      22: invokevirtual #31                 // Method org/json/zip/Huff.read:(Lorg/json/zip/BitReader;)I
      25: istore_3
      26: iload_3
      27: sipush        256
      30: if_icmpne     36
      33: goto          47
      36: aload_1
      37: iload_2
      38: iload_3
      39: i2b
      40: bastore
      41: iinc          2, 1
      44: goto          14
      47: iload_2
      48: ifne          54
      51: ldc           #32                 // String
      53: areturn
      54: new           #33                 // class org/json/Kim
      57: dup
      58: aload_1
      59: iload_2
      60: invokespecial #34                 // Method org/json/Kim."<init>":([BI)V
      63: astore_3
      64: aload_0
      65: getfield      #35                 // Field namekeep:Lorg/json/zip/MapKeep;
      68: aload_3
      69: invokevirtual #36                 // Method org/json/zip/MapKeep.register:(Ljava/lang/Object;)V
      72: aload_3
      73: invokevirtual #37                 // Method org/json/Kim.toString:()Ljava/lang/String;
      76: areturn
      77: aload_0
      78: aload_0
      79: getfield      #35                 // Field namekeep:Lorg/json/zip/MapKeep;
      82: aload_0
      83: getfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
      86: invokespecial #38                 // Method getAndTick:(Lorg/json/zip/Keep;Lorg/json/zip/BitReader;)Ljava/lang/Object;
      89: invokevirtual #39                 // Method java/lang/Object.toString:()Ljava/lang/String;
      92: areturn

  private org.json.JSONObject readObject() throws org.json.JSONException;
    Code:
       0: new           #24                 // class org/json/JSONObject
       3: dup
       4: invokespecial #25                 // Method org/json/JSONObject."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #40                 // Method readName:()Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: aload_2
      15: aload_0
      16: invokespecial #20                 // Method bit:()Z
      19: ifne          29
      22: aload_0
      23: invokespecial #17                 // Method readString:()Ljava/lang/String;
      26: goto          33
      29: aload_0
      30: invokespecial #18                 // Method readValue:()Ljava/lang/Object;
      33: invokevirtual #41                 // Method org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
      36: pop
      37: aload_0
      38: invokespecial #20                 // Method bit:()Z
      41: ifne          46
      44: aload_1
      45: areturn
      46: goto          8

  private java.lang.String readString() throws org.json.JSONException;
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iconst_m1
       5: istore        4
       7: iconst_0
       8: istore        5
      10: aload_0
      11: invokespecial #20                 // Method bit:()Z
      14: ifeq          33
      17: aload_0
      18: aload_0
      19: getfield      #42                 // Field stringkeep:Lorg/json/zip/MapKeep;
      22: aload_0
      23: getfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
      26: invokespecial #38                 // Method getAndTick:(Lorg/json/zip/Keep;Lorg/json/zip/BitReader;)Ljava/lang/Object;
      29: invokevirtual #39                 // Method java/lang/Object.toString:()Ljava/lang/String;
      32: areturn
      33: ldc           #29                 // int 65536
      35: newarray       byte
      37: astore        6
      39: aload_0
      40: invokespecial #20                 // Method bit:()Z
      43: istore        7
      45: aload_0
      46: getfield      #43                 // Field substringkeep:Lorg/json/zip/TrieKeep;
      49: invokevirtual #44                 // Method org/json/zip/TrieKeep.reserve:()V
      52: iload         7
      54: ifeq          126
      57: iload_3
      58: istore_2
      59: aload_0
      60: aload_0
      61: getfield      #43                 // Field substringkeep:Lorg/json/zip/TrieKeep;
      64: aload_0
      65: getfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
      68: invokespecial #38                 // Method getAndTick:(Lorg/json/zip/Keep;Lorg/json/zip/BitReader;)Ljava/lang/Object;
      71: checkcast     #33                 // class org/json/Kim
      74: astore_1
      75: aload_1
      76: aload         6
      78: iload_2
      79: invokevirtual #45                 // Method org/json/Kim.copy:([BI)I
      82: istore_3
      83: iload         4
      85: iconst_m1
      86: if_icmpeq     111
      89: aload_0
      90: getfield      #43                 // Field substringkeep:Lorg/json/zip/TrieKeep;
      93: new           #33                 // class org/json/Kim
      96: dup
      97: aload         6
      99: iload         4
     101: iload         5
     103: iconst_1
     104: iadd
     105: invokespecial #46                 // Method org/json/Kim."<init>":([BII)V
     108: invokevirtual #47                 // Method org/json/zip/TrieKeep.registerOne:(Lorg/json/Kim;)V
     111: iload_2
     112: istore        4
     114: iload_3
     115: istore        5
     117: aload_0
     118: invokespecial #20                 // Method bit:()Z
     121: istore        7
     123: goto          52
     126: iconst_m1
     127: istore_2
     128: aload_0
     129: getfield      #48                 // Field substringhuff:Lorg/json/zip/Huff;
     132: aload_0
     133: getfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
     136: invokevirtual #31                 // Method org/json/zip/Huff.read:(Lorg/json/zip/BitReader;)I
     139: istore        8
     141: iload         8
     143: sipush        256
     146: if_icmpne     152
     149: goto          196
     152: aload         6
     154: iload_3
     155: iload         8
     157: i2b
     158: bastore
     159: iinc          3, 1
     162: iload         4
     164: iconst_m1
     165: if_icmpeq     193
     168: aload_0
     169: getfield      #43                 // Field substringkeep:Lorg/json/zip/TrieKeep;
     172: new           #33                 // class org/json/Kim
     175: dup
     176: aload         6
     178: iload         4
     180: iload         5
     182: iconst_1
     183: iadd
     184: invokespecial #46                 // Method org/json/Kim."<init>":([BII)V
     187: invokevirtual #47                 // Method org/json/zip/TrieKeep.registerOne:(Lorg/json/Kim;)V
     190: iconst_m1
     191: istore        4
     193: goto          128
     196: aload_0
     197: invokespecial #20                 // Method bit:()Z
     200: ifne          206
     203: goto          212
     206: iconst_1
     207: istore        7
     209: goto          52
     212: iload_3
     213: ifne          219
     216: ldc           #32                 // String
     218: areturn
     219: new           #33                 // class org/json/Kim
     222: dup
     223: aload         6
     225: iload_3
     226: invokespecial #34                 // Method org/json/Kim."<init>":([BI)V
     229: astore_1
     230: aload_0
     231: getfield      #42                 // Field stringkeep:Lorg/json/zip/MapKeep;
     234: aload_1
     235: invokevirtual #36                 // Method org/json/zip/MapKeep.register:(Ljava/lang/Object;)V
     238: aload_0
     239: getfield      #43                 // Field substringkeep:Lorg/json/zip/TrieKeep;
     242: aload_1
     243: invokevirtual #49                 // Method org/json/zip/TrieKeep.registerMany:(Lorg/json/Kim;)V
     246: aload_1
     247: invokevirtual #37                 // Method org/json/Kim.toString:()Ljava/lang/String;
     250: areturn

  private java.lang.Object readValue() throws org.json.JSONException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #21                 // Method read:(I)I
       5: tableswitch   { // 0 to 3
                     0: 36
                     1: 73
                     2: 152
                     3: 165
               default: 170
          }
      36: new           #50                 // class java/lang/Integer
      39: dup
      40: aload_0
      41: aload_0
      42: invokespecial #20                 // Method bit:()Z
      45: ifne          52
      48: iconst_4
      49: goto          66
      52: aload_0
      53: invokespecial #20                 // Method bit:()Z
      56: ifne          64
      59: bipush        7
      61: goto          66
      64: bipush        14
      66: invokespecial #21                 // Method read:(I)I
      69: invokespecial #51                 // Method java/lang/Integer."<init>":(I)V
      72: areturn
      73: sipush        256
      76: newarray       byte
      78: astore_1
      79: iconst_0
      80: istore_2
      81: aload_0
      82: iconst_4
      83: invokespecial #21                 // Method read:(I)I
      86: istore_3
      87: iload_3
      88: getstatic     #52                 // Field endOfNumber:I
      91: if_icmpne     97
      94: goto          111
      97: aload_1
      98: iload_2
      99: getstatic     #53                 // Field bcd:[B
     102: iload_3
     103: baload
     104: bastore
     105: iinc          2, 1
     108: goto          81
     111: new           #54                 // class java/lang/String
     114: dup
     115: aload_1
     116: iconst_0
     117: iload_2
     118: ldc           #55                 // String US-ASCII
     120: invokespecial #56                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
     123: invokestatic  #57                 // Method org/json/JSONObject.stringToValue:(Ljava/lang/String;)Ljava/lang/Object;
     126: astore_3
     127: goto          142
     130: astore        4
     132: new           #5                  // class org/json/JSONException
     135: dup
     136: aload         4
     138: invokespecial #6                  // Method org/json/JSONException."<init>":(Ljava/lang/Throwable;)V
     141: athrow
     142: aload_0
     143: getfield      #59                 // Field values:Lorg/json/zip/MapKeep;
     146: aload_3
     147: invokevirtual #36                 // Method org/json/zip/MapKeep.register:(Ljava/lang/Object;)V
     150: aload_3
     151: areturn
     152: aload_0
     153: aload_0
     154: getfield      #59                 // Field values:Lorg/json/zip/MapKeep;
     157: aload_0
     158: getfield      #2                  // Field bitreader:Lorg/json/zip/BitReader;
     161: invokespecial #38                 // Method getAndTick:(Lorg/json/zip/Keep;Lorg/json/zip/BitReader;)Ljava/lang/Object;
     164: areturn
     165: aload_0
     166: invokespecial #60                 // Method readJSON:()Ljava/lang/Object;
     169: areturn
     170: new           #5                  // class org/json/JSONException
     173: dup
     174: ldc           #61                 // String Impossible.
     176: invokespecial #12                 // Method org/json/JSONException."<init>":(Ljava/lang/String;)V
     179: athrow
    Exception table:
       from    to  target type
         111   127   130   Class java/io/UnsupportedEncodingException

  public java.lang.Object unzip() throws org.json.JSONException;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method begin:()V
       4: aload_0
       5: invokespecial #60                 // Method readJSON:()Ljava/lang/Object;
       8: areturn
}
