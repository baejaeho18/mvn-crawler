Compiled from "MongoProperties.java"
public class org.springframework.boot.autoconfigure.mongo.MongoProperties {
  public static final int DEFAULT_PORT;

  private java.lang.String host;

  private java.lang.Integer port;

  private java.lang.String uri;

  private java.lang.String database;

  private java.lang.String authenticationDatabase;

  private java.lang.String gridFsDatabase;

  private java.lang.String username;

  private char[] password;

  private java.lang.Class<?> fieldNamingStrategy;

  public org.springframework.boot.autoconfigure.mongo.MongoProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field port:Ljava/lang/Integer;
       9: aload_0
      10: ldc           #3                  // String mongodb://localhost/test
      12: putfield      #4                  // Field uri:Ljava/lang/String;
      15: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #5                  // Field host:Ljava/lang/String;
       4: areturn

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field host:Ljava/lang/String;
       5: return

  public java.lang.String getDatabase();
    Code:
       0: aload_0
       1: getfield      #6                  // Field database:Ljava/lang/String;
       4: areturn

  public void setDatabase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field database:Ljava/lang/String;
       5: return

  public java.lang.String getAuthenticationDatabase();
    Code:
       0: aload_0
       1: getfield      #7                  // Field authenticationDatabase:Ljava/lang/String;
       4: areturn

  public void setAuthenticationDatabase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field authenticationDatabase:Ljava/lang/String;
       5: return

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #8                  // Field username:Ljava/lang/String;
       4: areturn

  public void setUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field username:Ljava/lang/String;
       5: return

  public char[] getPassword();
    Code:
       0: aload_0
       1: getfield      #9                  // Field password:[C
       4: areturn

  public void setPassword(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field password:[C
       5: return

  public java.lang.Class<?> getFieldNamingStrategy();
    Code:
       0: aload_0
       1: getfield      #10                 // Field fieldNamingStrategy:Ljava/lang/Class;
       4: areturn

  public void setFieldNamingStrategy(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field fieldNamingStrategy:Ljava/lang/Class;
       5: return

  public void clearPassword();
    Code:
       0: aload_0
       1: getfield      #9                  // Field password:[C
       4: ifnonnull     8
       7: return
       8: iconst_0
       9: istore_1
      10: iload_1
      11: aload_0
      12: getfield      #9                  // Field password:[C
      15: arraylength
      16: if_icmpge     32
      19: aload_0
      20: getfield      #9                  // Field password:[C
      23: iload_1
      24: iconst_0
      25: castore
      26: iinc          1, 1
      29: goto          10
      32: return

  public java.lang.String getUri();
    Code:
       0: aload_0
       1: getfield      #4                  // Field uri:Ljava/lang/String;
       4: areturn

  public void setUri(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field uri:Ljava/lang/String;
       5: return

  public java.lang.Integer getPort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field port:Ljava/lang/Integer;
       4: areturn

  public void setPort(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field port:Ljava/lang/Integer;
       5: return

  public java.lang.String getGridFsDatabase();
    Code:
       0: aload_0
       1: getfield      #11                 // Field gridFsDatabase:Ljava/lang/String;
       4: areturn

  public void setGridFsDatabase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field gridFsDatabase:Ljava/lang/String;
       5: return

  public java.lang.String getMongoClientDatabase();
    Code:
       0: aload_0
       1: getfield      #6                  // Field database:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #6                  // Field database:Ljava/lang/String;
      11: areturn
      12: new           #12                 // class com/mongodb/MongoClientURI
      15: dup
      16: aload_0
      17: getfield      #4                  // Field uri:Ljava/lang/String;
      20: invokespecial #13                 // Method com/mongodb/MongoClientURI."<init>":(Ljava/lang/String;)V
      23: invokevirtual #14                 // Method com/mongodb/MongoClientURI.getDatabase:()Ljava/lang/String;
      26: areturn

  public com.mongodb.MongoClient createMongoClient(com.mongodb.MongoClientOptions, org.springframework.core.env.Environment) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method hasCustomAddress:()Z
       4: ifne          14
       7: aload_0
       8: invokespecial #16                 // Method hasCustomCredentials:()Z
      11: ifeq          137
      14: aload_1
      15: ifnonnull     25
      18: invokestatic  #17                 // Method com/mongodb/MongoClientOptions.builder:()Lcom/mongodb/MongoClientOptions$Builder;
      21: invokevirtual #18                 // Method com/mongodb/MongoClientOptions$Builder.build:()Lcom/mongodb/MongoClientOptions;
      24: astore_1
      25: new           #19                 // class java/util/ArrayList
      28: dup
      29: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      32: astore_3
      33: aload_0
      34: invokespecial #16                 // Method hasCustomCredentials:()Z
      37: ifeq          80
      40: aload_0
      41: getfield      #7                  // Field authenticationDatabase:Ljava/lang/String;
      44: ifnonnull     54
      47: aload_0
      48: invokevirtual #21                 // Method getMongoClientDatabase:()Ljava/lang/String;
      51: goto          58
      54: aload_0
      55: getfield      #7                  // Field authenticationDatabase:Ljava/lang/String;
      58: astore        4
      60: aload_3
      61: aload_0
      62: getfield      #8                  // Field username:Ljava/lang/String;
      65: aload         4
      67: aload_0
      68: getfield      #9                  // Field password:[C
      71: invokestatic  #22                 // Method com/mongodb/MongoCredential.createCredential:(Ljava/lang/String;Ljava/lang/String;[C)Lcom/mongodb/MongoCredential;
      74: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: aload_0
      81: getfield      #5                  // Field host:Ljava/lang/String;
      84: ifnonnull     92
      87: ldc           #24                 // String localhost
      89: goto          96
      92: aload_0
      93: getfield      #5                  // Field host:Ljava/lang/String;
      96: astore        4
      98: aload_0
      99: aload_2
     100: invokespecial #25                 // Method determinePort:(Lorg/springframework/core/env/Environment;)I
     103: istore        5
     105: new           #26                 // class com/mongodb/MongoClient
     108: dup
     109: new           #27                 // class com/mongodb/ServerAddress
     112: dup
     113: aload         4
     115: iload         5
     117: invokespecial #28                 // Method com/mongodb/ServerAddress."<init>":(Ljava/lang/String;I)V
     120: invokestatic  #29                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     123: aload_3
     124: aload_1
     125: invokespecial #30                 // Method com/mongodb/MongoClient."<init>":(Ljava/util/List;Ljava/util/List;Lcom/mongodb/MongoClientOptions;)V
     128: astore        6
     130: aload_0
     131: invokevirtual #31                 // Method clearPassword:()V
     134: aload         6
     136: areturn
     137: new           #26                 // class com/mongodb/MongoClient
     140: dup
     141: new           #12                 // class com/mongodb/MongoClientURI
     144: dup
     145: aload_0
     146: getfield      #4                  // Field uri:Ljava/lang/String;
     149: aload_0
     150: aload_1
     151: invokespecial #32                 // Method builder:(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClientOptions$Builder;
     154: invokespecial #33                 // Method com/mongodb/MongoClientURI."<init>":(Ljava/lang/String;Lcom/mongodb/MongoClientOptions$Builder;)V
     157: invokespecial #34                 // Method com/mongodb/MongoClient."<init>":(Lcom/mongodb/MongoClientURI;)V
     160: astore_3
     161: aload_0
     162: invokevirtual #31                 // Method clearPassword:()V
     165: aload_3
     166: areturn
     167: astore        7
     169: aload_0
     170: invokevirtual #31                 // Method clearPassword:()V
     173: aload         7
     175: athrow
    Exception table:
       from    to  target type
           0   130   167   any
         137   161   167   any
         167   169   167   any

  private boolean hasCustomAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field host:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #2                  // Field port:Ljava/lang/Integer;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private boolean hasCustomCredentials();
    Code:
       0: aload_0
       1: getfield      #8                  // Field username:Ljava/lang/String;
       4: ifnull        18
       7: aload_0
       8: getfield      #9                  // Field password:[C
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private int determinePort(org.springframework.core.env.Environment);
    Code:
       0: aload_0
       1: getfield      #2                  // Field port:Ljava/lang/Integer;
       4: ifnonnull     11
       7: sipush        27017
      10: ireturn
      11: aload_0
      12: getfield      #2                  // Field port:Ljava/lang/Integer;
      15: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
      18: ifne          56
      21: aload_1
      22: ifnull        46
      25: aload_1
      26: ldc           #37                 // String local.mongo.port
      28: invokeinterface #38,  2           // InterfaceMethod org/springframework/core/env/Environment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      33: astore_2
      34: aload_2
      35: ifnull        46
      38: aload_2
      39: invokestatic  #39                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      42: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
      45: ireturn
      46: new           #40                 // class java/lang/IllegalStateException
      49: dup
      50: ldc           #41                 // String spring.data.mongodb.port=0 and no local mongo port configuration is available
      52: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: getfield      #2                  // Field port:Ljava/lang/Integer;
      60: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
      63: ireturn

  private com.mongodb.MongoClientOptions$Builder builder(com.mongodb.MongoClientOptions);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: invokestatic  #43                 // Method com/mongodb/MongoClientOptions.builder:(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClientOptions$Builder;
       8: areturn
       9: invokestatic  #17                 // Method com/mongodb/MongoClientOptions.builder:()Lcom/mongodb/MongoClientOptions$Builder;
      12: areturn
}
