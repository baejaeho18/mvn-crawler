Compiled from "XADataSourceAutoConfiguration.java"
public class org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration implements org.springframework.beans.factory.BeanClassLoaderAware {
  private org.springframework.boot.jta.XADataSourceWrapper wrapper;

  private org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties;

  private javax.sql.XADataSource xaDataSource;

  private java.lang.ClassLoader classLoader;

  public org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public javax.sql.DataSource dataSource() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field xaDataSource:Ljavax/sql/XADataSource;
       4: astore_1
       5: aload_1
       6: ifnonnull     14
       9: aload_0
      10: invokespecial #3                  // Method createXaDataSource:()Ljavax/sql/XADataSource;
      13: astore_1
      14: aload_0
      15: getfield      #4                  // Field wrapper:Lorg/springframework/boot/jta/XADataSourceWrapper;
      18: aload_1
      19: invokeinterface #5,  2            // InterfaceMethod org/springframework/boot/jta/XADataSourceWrapper.wrapDataSource:(Ljavax/sql/XADataSource;)Ljavax/sql/DataSource;
      24: areturn

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  private javax.sql.XADataSource createXaDataSource();
    Code:
       0: aload_0
       1: getfield      #7                  // Field properties:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;
       4: invokevirtual #8                  // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.getXa:()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
       7: invokevirtual #9                  // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa.getDataSourceClassName:()Ljava/lang/String;
      10: astore_1
      11: aload_1
      12: invokestatic  #10                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      15: ifne          32
      18: aload_0
      19: getfield      #7                  // Field properties:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;
      22: invokevirtual #11                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.determineUrl:()Ljava/lang/String;
      25: invokestatic  #12                 // Method org/springframework/boot/jdbc/DatabaseDriver.fromJdbcUrl:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
      28: invokevirtual #13                 // Method org/springframework/boot/jdbc/DatabaseDriver.getXaDataSourceClassName:()Ljava/lang/String;
      31: astore_1
      32: aload_1
      33: invokestatic  #10                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      36: ldc           #14                 // String No XA DataSource class name specified
      38: invokestatic  #15                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      41: aload_0
      42: aload_1
      43: invokespecial #16                 // Method createXaDataSourceInstance:(Ljava/lang/String;)Ljavax/sql/XADataSource;
      46: astore_2
      47: aload_0
      48: aload_2
      49: aload_0
      50: getfield      #7                  // Field properties:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;
      53: invokespecial #17                 // Method bindXaProperties:(Ljavax/sql/XADataSource;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)V
      56: aload_2
      57: areturn

  private javax.sql.XADataSource createXaDataSourceInstance(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
       5: invokestatic  #18                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
       8: astore_2
       9: aload_2
      10: invokestatic  #19                 // Method org/springframework/beans/BeanUtils.instantiate:(Ljava/lang/Class;)Ljava/lang/Object;
      13: astore_3
      14: ldc           #20                 // class javax/sql/XADataSource
      16: aload_3
      17: invokestatic  #21                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)V
      20: aload_3
      21: checkcast     #20                 // class javax/sql/XADataSource
      24: areturn
      25: astore_2
      26: new           #23                 // class java/lang/IllegalStateException
      29: dup
      30: new           #24                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #26                 // String Unable to create XADataSource instance from \'
      39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #28                 // String \'
      48: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/lang/Exception

  private void bindXaProperties(javax.sql.XADataSource, org.springframework.boot.autoconfigure.jdbc.DataSourceProperties);
    Code:
       0: new           #31                 // class org/springframework/beans/MutablePropertyValues
       3: dup
       4: invokespecial #32                 // Method org/springframework/beans/MutablePropertyValues."<init>":()V
       7: astore_3
       8: aload_3
       9: ldc           #33                 // String user
      11: aload_0
      12: getfield      #7                  // Field properties:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;
      15: invokevirtual #34                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.determineUsername:()Ljava/lang/String;
      18: invokevirtual #35                 // Method org/springframework/beans/MutablePropertyValues.add:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/MutablePropertyValues;
      21: pop
      22: aload_3
      23: ldc           #36                 // String password
      25: aload_0
      26: getfield      #7                  // Field properties:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;
      29: invokevirtual #37                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.determinePassword:()Ljava/lang/String;
      32: invokevirtual #35                 // Method org/springframework/beans/MutablePropertyValues.add:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/MutablePropertyValues;
      35: pop
      36: aload_3
      37: ldc           #38                 // String url
      39: aload_0
      40: getfield      #7                  // Field properties:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;
      43: invokevirtual #11                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.determineUrl:()Ljava/lang/String;
      46: invokevirtual #35                 // Method org/springframework/beans/MutablePropertyValues.add:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/MutablePropertyValues;
      49: pop
      50: aload_3
      51: aload_2
      52: invokevirtual #8                  // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.getXa:()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
      55: invokevirtual #39                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa.getProperties:()Ljava/util/Map;
      58: invokevirtual #40                 // Method org/springframework/beans/MutablePropertyValues.addPropertyValues:(Ljava/util/Map;)Lorg/springframework/beans/MutablePropertyValues;
      61: pop
      62: new           #41                 // class org/springframework/boot/bind/RelaxedDataBinder
      65: dup
      66: aload_1
      67: invokespecial #42                 // Method org/springframework/boot/bind/RelaxedDataBinder."<init>":(Ljava/lang/Object;)V
      70: ldc           #33                 // String user
      72: iconst_1
      73: anewarray     #43                 // class java/lang/String
      76: dup
      77: iconst_0
      78: ldc           #44                 // String username
      80: aastore
      81: invokevirtual #45                 // Method org/springframework/boot/bind/RelaxedDataBinder.withAlias:(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/boot/bind/RelaxedDataBinder;
      84: aload_3
      85: invokevirtual #46                 // Method org/springframework/boot/bind/RelaxedDataBinder.bind:(Lorg/springframework/beans/PropertyValues;)V
      88: return
}
