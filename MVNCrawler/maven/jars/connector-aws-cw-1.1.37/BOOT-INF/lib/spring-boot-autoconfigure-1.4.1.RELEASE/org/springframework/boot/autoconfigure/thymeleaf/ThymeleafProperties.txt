Compiled from "ThymeleafProperties.java"
public class org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties {
  private static final java.nio.charset.Charset DEFAULT_ENCODING;

  private static final org.springframework.util.MimeType DEFAULT_CONTENT_TYPE;

  public static final java.lang.String DEFAULT_PREFIX;

  public static final java.lang.String DEFAULT_SUFFIX;

  private boolean checkTemplate;

  private boolean checkTemplateLocation;

  private java.lang.String prefix;

  private java.lang.String suffix;

  private java.lang.String mode;

  private java.nio.charset.Charset encoding;

  private org.springframework.util.MimeType contentType;

  private boolean cache;

  private java.lang.Integer templateResolverOrder;

  private java.lang.String[] viewNames;

  private java.lang.String[] excludedViewNames;

  private boolean enabled;

  public org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field checkTemplate:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field checkTemplateLocation:Z
      14: aload_0
      15: ldc           #5                  // String classpath:/templates/
      17: putfield      #6                  // Field prefix:Ljava/lang/String;
      20: aload_0
      21: ldc           #7                  // String .html
      23: putfield      #8                  // Field suffix:Ljava/lang/String;
      26: aload_0
      27: ldc           #9                  // String HTML5
      29: putfield      #10                 // Field mode:Ljava/lang/String;
      32: aload_0
      33: getstatic     #11                 // Field DEFAULT_ENCODING:Ljava/nio/charset/Charset;
      36: putfield      #12                 // Field encoding:Ljava/nio/charset/Charset;
      39: aload_0
      40: getstatic     #13                 // Field DEFAULT_CONTENT_TYPE:Lorg/springframework/util/MimeType;
      43: putfield      #14                 // Field contentType:Lorg/springframework/util/MimeType;
      46: aload_0
      47: iconst_1
      48: putfield      #15                 // Field cache:Z
      51: aload_0
      52: iconst_1
      53: putfield      #16                 // Field enabled:Z
      56: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field enabled:Z
       4: ireturn

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field enabled:Z
       5: return

  public boolean isCheckTemplate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field checkTemplate:Z
       4: ireturn

  public void setCheckTemplate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field checkTemplate:Z
       5: return

  public boolean isCheckTemplateLocation();
    Code:
       0: aload_0
       1: getfield      #3                  // Field checkTemplateLocation:Z
       4: ireturn

  public void setCheckTemplateLocation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field checkTemplateLocation:Z
       5: return

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #6                  // Field prefix:Ljava/lang/String;
       4: areturn

  public void setPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field prefix:Ljava/lang/String;
       5: return

  public java.lang.String getSuffix();
    Code:
       0: aload_0
       1: getfield      #8                  // Field suffix:Ljava/lang/String;
       4: areturn

  public void setSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field suffix:Ljava/lang/String;
       5: return

  public java.lang.String getMode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field mode:Ljava/lang/String;
       4: areturn

  public void setMode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field mode:Ljava/lang/String;
       5: return

  public java.nio.charset.Charset getEncoding();
    Code:
       0: aload_0
       1: getfield      #12                 // Field encoding:Ljava/nio/charset/Charset;
       4: areturn

  public void setEncoding(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field encoding:Ljava/nio/charset/Charset;
       5: return

  public org.springframework.util.MimeType getContentType();
    Code:
       0: aload_0
       1: getfield      #14                 // Field contentType:Lorg/springframework/util/MimeType;
       4: areturn

  public void setContentType(org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field contentType:Lorg/springframework/util/MimeType;
       5: return

  public boolean isCache();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cache:Z
       4: ireturn

  public void setCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field cache:Z
       5: return

  public java.lang.Integer getTemplateResolverOrder();
    Code:
       0: aload_0
       1: getfield      #17                 // Field templateResolverOrder:Ljava/lang/Integer;
       4: areturn

  public void setTemplateResolverOrder(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field templateResolverOrder:Ljava/lang/Integer;
       5: return

  public java.lang.String[] getExcludedViewNames();
    Code:
       0: aload_0
       1: getfield      #18                 // Field excludedViewNames:[Ljava/lang/String;
       4: areturn

  public void setExcludedViewNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field excludedViewNames:[Ljava/lang/String;
       5: return

  public java.lang.String[] getViewNames();
    Code:
       0: aload_0
       1: getfield      #19                 // Field viewNames:[Ljava/lang/String;
       4: areturn

  public void setViewNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field viewNames:[Ljava/lang/String;
       5: return

  static {};
    Code:
       0: ldc           #20                 // String UTF-8
       2: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #11                 // Field DEFAULT_ENCODING:Ljava/nio/charset/Charset;
       8: ldc           #22                 // String text/html
      10: invokestatic  #23                 // Method org/springframework/util/MimeType.valueOf:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
      13: putstatic     #13                 // Field DEFAULT_CONTENT_TYPE:Lorg/springframework/util/MimeType;
      16: return
}
