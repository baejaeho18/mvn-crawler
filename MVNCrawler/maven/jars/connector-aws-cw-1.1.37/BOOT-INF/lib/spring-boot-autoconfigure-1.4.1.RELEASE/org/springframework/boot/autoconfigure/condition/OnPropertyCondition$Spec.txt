Compiled from "OnPropertyCondition.java"
class org.springframework.boot.autoconfigure.condition.OnPropertyCondition$Spec {
  private final java.lang.String prefix;

  private final java.lang.String havingValue;

  private final java.lang.String[] names;

  private final boolean relaxedNames;

  private final boolean matchIfMissing;

  org.springframework.boot.autoconfigure.condition.OnPropertyCondition$Spec(org.springframework.core.annotation.AnnotationAttributes);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #3                  // String prefix
       7: invokevirtual #4                  // Method org/springframework/core/annotation/AnnotationAttributes.getString:(Ljava/lang/String;)Ljava/lang/String;
      10: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      13: astore_2
      14: aload_2
      15: invokestatic  #6                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      18: ifeq          50
      21: aload_2
      22: ldc           #7                  // String .
      24: invokevirtual #8                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      27: ifne          50
      30: new           #9                  // class java/lang/StringBuilder
      33: dup
      34: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      37: aload_2
      38: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #7                  // String .
      43: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: astore_2
      50: aload_0
      51: aload_2
      52: putfield      #13                 // Field prefix:Ljava/lang/String;
      55: aload_0
      56: aload_1
      57: ldc           #14                 // String havingValue
      59: invokevirtual #4                  // Method org/springframework/core/annotation/AnnotationAttributes.getString:(Ljava/lang/String;)Ljava/lang/String;
      62: putfield      #15                 // Field havingValue:Ljava/lang/String;
      65: aload_0
      66: aload_0
      67: aload_1
      68: invokespecial #16                 // Method getNames:(Ljava/util/Map;)[Ljava/lang/String;
      71: putfield      #17                 // Field names:[Ljava/lang/String;
      74: aload_0
      75: aload_1
      76: ldc           #18                 // String relaxedNames
      78: invokevirtual #19                 // Method org/springframework/core/annotation/AnnotationAttributes.getBoolean:(Ljava/lang/String;)Z
      81: putfield      #20                 // Field relaxedNames:Z
      84: aload_0
      85: aload_1
      86: ldc           #21                 // String matchIfMissing
      88: invokevirtual #19                 // Method org/springframework/core/annotation/AnnotationAttributes.getBoolean:(Ljava/lang/String;)Z
      91: putfield      #22                 // Field matchIfMissing:Z
      94: return

  private java.lang.String[] getNames(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #23                 // String value
       3: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #25                 // class "[Ljava/lang/String;"
      11: checkcast     #25                 // class "[Ljava/lang/String;"
      14: astore_2
      15: aload_1
      16: ldc           #26                 // String name
      18: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #25                 // class "[Ljava/lang/String;"
      26: checkcast     #25                 // class "[Ljava/lang/String;"
      29: astore_3
      30: aload_2
      31: arraylength
      32: ifgt          40
      35: aload_3
      36: arraylength
      37: ifle          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ldc           #27                 // String The name or value attribute of @ConditionalOnProperty must be specified
      47: invokestatic  #28                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      50: aload_2
      51: arraylength
      52: ifeq          60
      55: aload_3
      56: arraylength
      57: ifne          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ldc           #29                 // String The name and value attributes of @ConditionalOnProperty are exclusive
      67: invokestatic  #28                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      70: aload_2
      71: arraylength
      72: ifle          79
      75: aload_2
      76: goto          80
      79: aload_3
      80: areturn

  private void collectProperties(org.springframework.core.env.PropertyResolver, java.util.List<java.lang.String>, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field relaxedNames:Z
       4: ifeq          20
       7: new           #30                 // class org/springframework/boot/bind/RelaxedPropertyResolver
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #13                 // Field prefix:Ljava/lang/String;
      16: invokespecial #31                 // Method org/springframework/boot/bind/RelaxedPropertyResolver."<init>":(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;)V
      19: astore_1
      20: aload_0
      21: getfield      #17                 // Field names:[Ljava/lang/String;
      24: astore        4
      26: aload         4
      28: arraylength
      29: istore        5
      31: iconst_0
      32: istore        6
      34: iload         6
      36: iload         5
      38: if_icmpge     148
      41: aload         4
      43: iload         6
      45: aaload
      46: astore        7
      48: aload_0
      49: getfield      #20                 // Field relaxedNames:Z
      52: ifeq          60
      55: aload         7
      57: goto          82
      60: new           #9                  // class java/lang/StringBuilder
      63: dup
      64: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      67: aload_0
      68: getfield      #13                 // Field prefix:Ljava/lang/String;
      71: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload         7
      76: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: astore        8
      84: aload_1
      85: aload         8
      87: invokeinterface #32,  2           // InterfaceMethod org/springframework/core/env/PropertyResolver.containsProperty:(Ljava/lang/String;)Z
      92: ifeq          126
      95: aload_0
      96: aload_1
      97: aload         8
      99: invokeinterface #33,  2           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     104: aload_0
     105: getfield      #15                 // Field havingValue:Ljava/lang/String;
     108: invokespecial #34                 // Method isMatch:(Ljava/lang/String;Ljava/lang/String;)Z
     111: ifne          142
     114: aload_3
     115: aload         7
     117: invokeinterface #35,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     122: pop
     123: goto          142
     126: aload_0
     127: getfield      #22                 // Field matchIfMissing:Z
     130: ifne          142
     133: aload_2
     134: aload         7
     136: invokeinterface #35,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     141: pop
     142: iinc          6, 1
     145: goto          34
     148: return

  private boolean isMatch(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: invokestatic  #36                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifeq          13
       7: aload_2
       8: aload_1
       9: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      12: ireturn
      13: ldc           #38                 // String false
      15: aload_1
      16: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public java.lang.String toString();
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #39                 // String (
      11: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #13                 // Field prefix:Ljava/lang/String;
      20: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_0
      25: getfield      #17                 // Field names:[Ljava/lang/String;
      28: arraylength
      29: iconst_1
      30: if_icmpne     47
      33: aload_1
      34: aload_0
      35: getfield      #17                 // Field names:[Ljava/lang/String;
      38: iconst_0
      39: aaload
      40: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: goto          73
      47: aload_1
      48: ldc           #40                 // String [
      50: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: aload_0
      56: getfield      #17                 // Field names:[Ljava/lang/String;
      59: invokestatic  #41                 // Method org/springframework/util/StringUtils.arrayToCommaDelimitedString:([Ljava/lang/Object;)Ljava/lang/String;
      62: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: ldc           #42                 // String ]
      69: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: aload_0
      74: getfield      #15                 // Field havingValue:Ljava/lang/String;
      77: invokestatic  #36                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      80: ifeq          97
      83: aload_1
      84: ldc           #43                 // String =
      86: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: getfield      #15                 // Field havingValue:Ljava/lang/String;
      93: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: pop
      97: aload_1
      98: ldc           #44                 // String )
     100: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: pop
     104: aload_1
     105: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: areturn

  static void access$000(org.springframework.boot.autoconfigure.condition.OnPropertyCondition$Spec, org.springframework.core.env.PropertyResolver, java.util.List, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method collectProperties:(Lorg/springframework/core/env/PropertyResolver;Ljava/util/List;Ljava/util/List;)V
       7: return
}
