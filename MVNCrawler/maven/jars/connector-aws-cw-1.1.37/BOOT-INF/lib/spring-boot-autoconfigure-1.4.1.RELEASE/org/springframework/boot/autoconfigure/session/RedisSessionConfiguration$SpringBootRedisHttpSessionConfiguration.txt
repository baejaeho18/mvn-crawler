Compiled from "RedisSessionConfiguration.java"
public class org.springframework.boot.autoconfigure.session.RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration extends org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration {
  private org.springframework.boot.autoconfigure.session.SessionProperties sessionProperties;

  public org.springframework.boot.autoconfigure.session.RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration."<init>":()V
       4: return

  public void customize(org.springframework.boot.autoconfigure.session.SessionProperties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field sessionProperties:Lorg/springframework/boot/autoconfigure/session/SessionProperties;
       5: aload_0
       6: getfield      #2                  // Field sessionProperties:Lorg/springframework/boot/autoconfigure/session/SessionProperties;
       9: invokevirtual #3                  // Method org/springframework/boot/autoconfigure/session/SessionProperties.getTimeout:()Ljava/lang/Integer;
      12: astore_2
      13: aload_2
      14: ifnull        25
      17: aload_0
      18: aload_2
      19: invokevirtual #4                  // Method java/lang/Integer.intValue:()I
      22: invokevirtual #5                  // Method setMaxInactiveIntervalInSeconds:(I)V
      25: aload_0
      26: getfield      #2                  // Field sessionProperties:Lorg/springframework/boot/autoconfigure/session/SessionProperties;
      29: invokevirtual #6                  // Method org/springframework/boot/autoconfigure/session/SessionProperties.getRedis:()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Redis;
      32: astore_3
      33: aload_0
      34: aload_3
      35: invokevirtual #7                  // Method org/springframework/boot/autoconfigure/session/SessionProperties$Redis.getNamespace:()Ljava/lang/String;
      38: invokevirtual #8                  // Method setRedisNamespace:(Ljava/lang/String;)V
      41: aload_0
      42: aload_3
      43: invokevirtual #9                  // Method org/springframework/boot/autoconfigure/session/SessionProperties$Redis.getFlushMode:()Lorg/springframework/session/data/redis/RedisFlushMode;
      46: invokevirtual #10                 // Method setRedisFlushMode:(Lorg/springframework/session/data/redis/RedisFlushMode;)V
      49: return

  public void validate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sessionProperties:Lorg/springframework/boot/autoconfigure/session/SessionProperties;
       4: invokevirtual #11                 // Method org/springframework/boot/autoconfigure/session/SessionProperties.getStoreType:()Lorg/springframework/boot/autoconfigure/session/StoreType;
       7: ifnonnull     20
      10: invokestatic  #12                 // Method org/springframework/boot/autoconfigure/session/RedisSessionConfiguration.access$000:()Lorg/apache/commons/logging/Log;
      13: ldc           #13                 // String Spring Session store type is mandatory: set \'spring.session.store-type=redis\' in your configuration
      15: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      20: return
}
