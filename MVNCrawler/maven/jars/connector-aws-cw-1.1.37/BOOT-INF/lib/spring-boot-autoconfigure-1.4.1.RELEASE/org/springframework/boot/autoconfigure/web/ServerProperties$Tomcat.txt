Compiled from "ServerProperties.java"
public class org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat {
  private final org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog accesslog;

  private java.lang.String internalProxies;

  private java.lang.String protocolHeader;

  private java.lang.String protocolHeaderHttpsValue;

  private java.lang.String portHeader;

  private java.lang.String remoteIpHeader;

  private java.io.File basedir;

  private int backgroundProcessorDelay;

  private int maxThreads;

  private int minSpareThreads;

  private int maxHttpHeaderSize;

  private java.lang.Boolean redirectContextRoot;

  private java.nio.charset.Charset uriEncoding;

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog
       8: dup
       9: invokespecial #5                  // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog."<init>":()V
      12: putfield      #6                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      15: aload_0
      16: ldc           #7                  // String 10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|192\\.168\\.\\d{1,3}\\.\\d{1,3}|169\\.254\\.\\d{1,3}\\.\\d{1,3}|127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|172\\.1[6-9]{1}\\.\\d{1,3}\\.\\d{1,3}|172\\.2[0-9]{1}\\.\\d{1,3}\\.\\d{1,3}|172\\.3[0-1]{1}\\.\\d{1,3}\\.\\d{1,3}
      18: putfield      #8                  // Field internalProxies:Ljava/lang/String;
      21: aload_0
      22: ldc           #9                  // String https
      24: putfield      #10                 // Field protocolHeaderHttpsValue:Ljava/lang/String;
      27: aload_0
      28: ldc           #11                 // String X-Forwarded-Port
      30: putfield      #12                 // Field portHeader:Ljava/lang/String;
      33: aload_0
      34: bipush        30
      36: putfield      #13                 // Field backgroundProcessorDelay:I
      39: aload_0
      40: iconst_0
      41: putfield      #2                  // Field maxThreads:I
      44: aload_0
      45: iconst_0
      46: putfield      #1                  // Field minSpareThreads:I
      49: aload_0
      50: iconst_0
      51: putfield      #14                 // Field maxHttpHeaderSize:I
      54: return

  public int getMaxThreads();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxThreads:I
       4: ireturn

  public void setMaxThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxThreads:I
       5: return

  public int getMinSpareThreads();
    Code:
       0: aload_0
       1: getfield      #1                  // Field minSpareThreads:I
       4: ireturn

  public void setMinSpareThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field minSpareThreads:I
       5: return

  public int getMaxHttpHeaderSize();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxHttpHeaderSize:I
       4: ireturn

  public void setMaxHttpHeaderSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field maxHttpHeaderSize:I
       5: return

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog getAccesslog();
    Code:
       0: aload_0
       1: getfield      #6                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
       4: areturn

  public int getBackgroundProcessorDelay();
    Code:
       0: aload_0
       1: getfield      #13                 // Field backgroundProcessorDelay:I
       4: ireturn

  public void setBackgroundProcessorDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field backgroundProcessorDelay:I
       5: return

  public java.io.File getBasedir();
    Code:
       0: aload_0
       1: getfield      #15                 // Field basedir:Ljava/io/File;
       4: areturn

  public void setBasedir(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field basedir:Ljava/io/File;
       5: return

  public java.lang.String getInternalProxies();
    Code:
       0: aload_0
       1: getfield      #8                  // Field internalProxies:Ljava/lang/String;
       4: areturn

  public void setInternalProxies(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field internalProxies:Ljava/lang/String;
       5: return

  public java.lang.String getProtocolHeader();
    Code:
       0: aload_0
       1: getfield      #16                 // Field protocolHeader:Ljava/lang/String;
       4: areturn

  public void setProtocolHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field protocolHeader:Ljava/lang/String;
       5: return

  public java.lang.String getProtocolHeaderHttpsValue();
    Code:
       0: aload_0
       1: getfield      #10                 // Field protocolHeaderHttpsValue:Ljava/lang/String;
       4: areturn

  public void setProtocolHeaderHttpsValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field protocolHeaderHttpsValue:Ljava/lang/String;
       5: return

  public java.lang.String getPortHeader();
    Code:
       0: aload_0
       1: getfield      #12                 // Field portHeader:Ljava/lang/String;
       4: areturn

  public void setPortHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field portHeader:Ljava/lang/String;
       5: return

  public java.lang.Boolean getRedirectContextRoot();
    Code:
       0: aload_0
       1: getfield      #17                 // Field redirectContextRoot:Ljava/lang/Boolean;
       4: areturn

  public void setRedirectContextRoot(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field redirectContextRoot:Ljava/lang/Boolean;
       5: return

  public java.lang.String getRemoteIpHeader();
    Code:
       0: aload_0
       1: getfield      #18                 // Field remoteIpHeader:Ljava/lang/String;
       4: areturn

  public void setRemoteIpHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field remoteIpHeader:Ljava/lang/String;
       5: return

  public java.nio.charset.Charset getUriEncoding();
    Code:
       0: aload_0
       1: getfield      #19                 // Field uriEncoding:Ljava/nio/charset/Charset;
       4: areturn

  public void setUriEncoding(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field uriEncoding:Ljava/nio/charset/Charset;
       5: return

  void customizeTomcat(org.springframework.boot.autoconfigure.web.ServerProperties, org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getBasedir:()Ljava/io/File;
       4: ifnull        15
       7: aload_2
       8: aload_0
       9: invokevirtual #20                 // Method getBasedir:()Ljava/io/File;
      12: invokevirtual #21                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.setBaseDirectory:(Ljava/io/File;)V
      15: aload_2
      16: aload_0
      17: getfield      #13                 // Field backgroundProcessorDelay:I
      20: invokevirtual #22                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.setBackgroundProcessorDelay:(I)V
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokespecial #23                 // Method customizeRemoteIpValve:(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
      29: aload_0
      30: getfield      #2                  // Field maxThreads:I
      33: ifle          41
      36: aload_0
      37: aload_2
      38: invokespecial #24                 // Method customizeMaxThreads:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
      41: aload_0
      42: getfield      #1                  // Field minSpareThreads:I
      45: ifle          53
      48: aload_0
      49: aload_2
      50: invokespecial #25                 // Method customizeMinThreads:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
      53: aload_1
      54: invokevirtual #26                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getMaxHttpHeaderSize:()I
      57: ifle          67
      60: aload_1
      61: invokevirtual #26                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getMaxHttpHeaderSize:()I
      64: goto          71
      67: aload_0
      68: getfield      #14                 // Field maxHttpHeaderSize:I
      71: istore_3
      72: iload_3
      73: ifle          82
      76: aload_0
      77: aload_2
      78: iload_3
      79: invokespecial #27                 // Method customizeMaxHttpHeaderSize:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;I)V
      82: aload_1
      83: invokevirtual #28                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getMaxHttpPostSize:()I
      86: ifle          98
      89: aload_0
      90: aload_2
      91: aload_1
      92: invokevirtual #28                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getMaxHttpPostSize:()I
      95: invokespecial #29                 // Method customizeMaxHttpPostSize:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;I)V
      98: aload_0
      99: getfield      #6                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
     102: invokestatic  #30                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.access$000:(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;)Z
     105: ifeq          113
     108: aload_0
     109: aload_2
     110: invokespecial #31                 // Method customizeAccessLog:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
     113: aload_0
     114: invokevirtual #32                 // Method getUriEncoding:()Ljava/nio/charset/Charset;
     117: ifnull        128
     120: aload_2
     121: aload_0
     122: invokevirtual #32                 // Method getUriEncoding:()Ljava/nio/charset/Charset;
     125: invokevirtual #33                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.setUriEncoding:(Ljava/nio/charset/Charset;)V
     128: aload_1
     129: invokevirtual #34                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getConnectionTimeout:()Ljava/lang/Integer;
     132: ifnull        147
     135: aload_0
     136: aload_2
     137: aload_1
     138: invokevirtual #34                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getConnectionTimeout:()Ljava/lang/Integer;
     141: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     144: invokespecial #36                 // Method customizeConnectionTimeout:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;I)V
     147: aload_0
     148: getfield      #17                 // Field redirectContextRoot:Ljava/lang/Boolean;
     151: ifnull        166
     154: aload_0
     155: aload_2
     156: aload_0
     157: getfield      #17                 // Field redirectContextRoot:Ljava/lang/Boolean;
     160: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
     163: invokespecial #38                 // Method customizeRedirectContextRoot:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;Z)V
     166: return

  private void customizeConnectionTimeout(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory, int);
    Code:
       0: aload_1
       1: invokevirtual #39                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.getAdditionalTomcatConnectors:()Ljava/util/List;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          60
      19: aload_3
      20: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #43                 // class org/apache/catalina/connector/Connector
      28: astore        4
      30: aload         4
      32: invokevirtual #44                 // Method org/apache/catalina/connector/Connector.getProtocolHandler:()Lorg/apache/coyote/ProtocolHandler;
      35: instanceof    #45                 // class org/apache/coyote/AbstractProtocol
      38: ifeq          57
      41: aload         4
      43: invokevirtual #44                 // Method org/apache/catalina/connector/Connector.getProtocolHandler:()Lorg/apache/coyote/ProtocolHandler;
      46: checkcast     #45                 // class org/apache/coyote/AbstractProtocol
      49: astore        5
      51: aload         5
      53: iload_2
      54: invokevirtual #46                 // Method org/apache/coyote/AbstractProtocol.setConnectionTimeout:(I)V
      57: goto          10
      60: return

  private void customizeRemoteIpValve(org.springframework.boot.autoconfigure.web.ServerProperties, org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getProtocolHeader:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: invokevirtual #48                 // Method getRemoteIpHeader:()Ljava/lang/String;
       9: astore        4
      11: aload_3
      12: invokestatic  #49                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      15: ifne          33
      18: aload         4
      20: invokestatic  #49                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      23: ifne          33
      26: aload_1
      27: invokevirtual #50                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getOrDeduceUseForwardHeaders:()Z
      30: ifeq          115
      33: new           #51                 // class org/apache/catalina/valves/RemoteIpValve
      36: dup
      37: invokespecial #52                 // Method org/apache/catalina/valves/RemoteIpValve."<init>":()V
      40: astore        5
      42: aload         5
      44: aload_3
      45: invokestatic  #53                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      48: ifeq          55
      51: aload_3
      52: goto          57
      55: ldc           #54                 // String X-Forwarded-Proto
      57: invokevirtual #55                 // Method org/apache/catalina/valves/RemoteIpValve.setProtocolHeader:(Ljava/lang/String;)V
      60: aload         4
      62: invokestatic  #53                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      65: ifeq          75
      68: aload         5
      70: aload         4
      72: invokevirtual #56                 // Method org/apache/catalina/valves/RemoteIpValve.setRemoteIpHeader:(Ljava/lang/String;)V
      75: aload         5
      77: aload_0
      78: invokevirtual #57                 // Method getInternalProxies:()Ljava/lang/String;
      81: invokevirtual #58                 // Method org/apache/catalina/valves/RemoteIpValve.setInternalProxies:(Ljava/lang/String;)V
      84: aload         5
      86: aload_0
      87: invokevirtual #59                 // Method getPortHeader:()Ljava/lang/String;
      90: invokevirtual #60                 // Method org/apache/catalina/valves/RemoteIpValve.setPortHeader:(Ljava/lang/String;)V
      93: aload         5
      95: aload_0
      96: invokevirtual #61                 // Method getProtocolHeaderHttpsValue:()Ljava/lang/String;
      99: invokevirtual #62                 // Method org/apache/catalina/valves/RemoteIpValve.setProtocolHeaderHttpsValue:(Ljava/lang/String;)V
     102: aload_2
     103: iconst_1
     104: anewarray     #63                 // class org/apache/catalina/Valve
     107: dup
     108: iconst_0
     109: aload         5
     111: aastore
     112: invokevirtual #64                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addEngineValves:([Lorg/apache/catalina/Valve;)V
     115: return

  private void customizeMaxThreads(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #65                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #66                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$1
      10: dup
      11: aload_0
      12: invokespecial #67                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$1."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;)V
      15: aastore
      16: invokevirtual #68                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      19: return

  private void customizeMinThreads(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #65                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #69                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$2
      10: dup
      11: aload_0
      12: invokespecial #70                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$2."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;)V
      15: aastore
      16: invokevirtual #68                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      19: return

  private void customizeMaxHttpHeaderSize(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory, int);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #65                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #71                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$3
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #72                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$3."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;I)V
      16: aastore
      17: invokevirtual #68                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      20: return

  private void customizeMaxHttpPostSize(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory, int);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #65                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #73                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$4
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #74                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$4."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;I)V
      16: aastore
      17: invokevirtual #68                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      20: return

  private void customizeAccessLog(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: new           #75                 // class org/apache/catalina/valves/AccessLogValve
       3: dup
       4: invokespecial #76                 // Method org/apache/catalina/valves/AccessLogValve."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #6                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      13: invokevirtual #77                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.getPattern:()Ljava/lang/String;
      16: invokevirtual #78                 // Method org/apache/catalina/valves/AccessLogValve.setPattern:(Ljava/lang/String;)V
      19: aload_2
      20: aload_0
      21: getfield      #6                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      24: invokevirtual #79                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.getDirectory:()Ljava/lang/String;
      27: invokevirtual #80                 // Method org/apache/catalina/valves/AccessLogValve.setDirectory:(Ljava/lang/String;)V
      30: aload_2
      31: aload_0
      32: getfield      #6                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      35: invokevirtual #81                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.getPrefix:()Ljava/lang/String;
      38: invokevirtual #82                 // Method org/apache/catalina/valves/AccessLogValve.setPrefix:(Ljava/lang/String;)V
      41: aload_2
      42: aload_0
      43: getfield      #6                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      46: invokevirtual #83                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.getSuffix:()Ljava/lang/String;
      49: invokevirtual #84                 // Method org/apache/catalina/valves/AccessLogValve.setSuffix:(Ljava/lang/String;)V
      52: aload_2
      53: aload_0
      54: getfield      #6                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      57: invokevirtual #85                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.isRenameOnRotate:()Z
      60: invokevirtual #86                 // Method org/apache/catalina/valves/AccessLogValve.setRenameOnRotate:(Z)V
      63: aload_1
      64: iconst_1
      65: anewarray     #63                 // class org/apache/catalina/Valve
      68: dup
      69: iconst_0
      70: aload_2
      71: aastore
      72: invokevirtual #64                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addEngineValves:([Lorg/apache/catalina/Valve;)V
      75: return

  private void customizeRedirectContextRoot(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory, boolean);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #87                 // class org/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer
       5: dup
       6: iconst_0
       7: new           #88                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$5
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #89                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$5."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;Z)V
      16: aastore
      17: invokevirtual #90                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addContextCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer;)V
      20: return

  static int access$100(org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxThreads:I
       4: ireturn

  static int access$200(org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat);
    Code:
       0: aload_0
       1: getfield      #1                  // Field minSpareThreads:I
       4: ireturn
}
