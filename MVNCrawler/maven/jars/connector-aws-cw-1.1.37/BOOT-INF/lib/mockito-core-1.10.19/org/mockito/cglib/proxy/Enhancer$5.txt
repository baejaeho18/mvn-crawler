Compiled from "Enhancer.java"
class org.mockito.cglib.proxy.Enhancer$5 implements org.mockito.cglib.core.ObjectSwitchCallback {
  final org.mockito.cglib.core.CodeEmitter val$e;

  final org.mockito.cglib.proxy.Enhancer this$0;

  org.mockito.cglib.proxy.Enhancer$5(org.mockito.cglib.proxy.Enhancer, org.mockito.cglib.core.CodeEmitter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/mockito/cglib/proxy/Enhancer;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$e:Lorg/mockito/cglib/core/CodeEmitter;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void processCase(java.lang.Object, org.mockito.asm.Label);
    Code:
       0: aload_1
       1: checkcast     #4                  // class org/mockito/cglib/core/MethodInfo
       4: astore_3
       5: aload_3
       6: invokevirtual #5                  // Method org/mockito/cglib/core/MethodInfo.getSignature:()Lorg/mockito/cglib/core/Signature;
       9: invokevirtual #6                  // Method org/mockito/cglib/core/Signature.getArgumentTypes:()[Lorg/mockito/asm/Type;
      12: astore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: aload         4
      21: arraylength
      22: if_icmpge     67
      25: aload_0
      26: getfield      #2                  // Field val$e:Lorg/mockito/cglib/core/CodeEmitter;
      29: iconst_1
      30: invokevirtual #7                  // Method org/mockito/cglib/core/CodeEmitter.load_arg:(I)V
      33: aload_0
      34: getfield      #2                  // Field val$e:Lorg/mockito/cglib/core/CodeEmitter;
      37: iload         5
      39: invokevirtual #8                  // Method org/mockito/cglib/core/CodeEmitter.push:(I)V
      42: aload_0
      43: getfield      #2                  // Field val$e:Lorg/mockito/cglib/core/CodeEmitter;
      46: invokevirtual #9                  // Method org/mockito/cglib/core/CodeEmitter.aaload:()V
      49: aload_0
      50: getfield      #2                  // Field val$e:Lorg/mockito/cglib/core/CodeEmitter;
      53: aload         4
      55: iload         5
      57: aaload
      58: invokevirtual #10                 // Method org/mockito/cglib/core/CodeEmitter.unbox:(Lorg/mockito/asm/Type;)V
      61: iinc          5, 1
      64: goto          17
      67: aload_0
      68: getfield      #2                  // Field val$e:Lorg/mockito/cglib/core/CodeEmitter;
      71: aload_3
      72: invokevirtual #5                  // Method org/mockito/cglib/core/MethodInfo.getSignature:()Lorg/mockito/cglib/core/Signature;
      75: invokevirtual #11                 // Method org/mockito/cglib/core/CodeEmitter.invoke_constructor_this:(Lorg/mockito/cglib/core/Signature;)V
      78: aload_0
      79: getfield      #2                  // Field val$e:Lorg/mockito/cglib/core/CodeEmitter;
      82: aload_2
      83: invokevirtual #12                 // Method org/mockito/cglib/core/CodeEmitter.goTo:(Lorg/mockito/asm/Label;)V
      86: return

  public void processDefault();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$e:Lorg/mockito/cglib/core/CodeEmitter;
       4: invokestatic  #13                 // Method org/mockito/cglib/proxy/Enhancer.access$200:()Lorg/mockito/asm/Type;
       7: ldc           #14                 // String Constructor not found
       9: invokevirtual #15                 // Method org/mockito/cglib/core/CodeEmitter.throw_exception:(Lorg/mockito/asm/Type;Ljava/lang/String;)V
      12: return
}
