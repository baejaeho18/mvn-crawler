Compiled from "JumpInsnNode.java"
public class org.mockito.asm.tree.JumpInsnNode extends org.mockito.asm.tree.AbstractInsnNode {
  public org.mockito.asm.tree.LabelNode label;

  public org.mockito.asm.tree.JumpInsnNode(int, org.mockito.asm.tree.LabelNode);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/mockito/asm/tree/AbstractInsnNode."<init>":(I)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field label:Lorg/mockito/asm/tree/LabelNode;
      10: return

  public void setOpcode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field opcode:I
       5: return

  public int getType();
    Code:
       0: bipush        6
       2: ireturn

  public void accept(org.mockito.asm.MethodVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field opcode:I
       5: aload_0
       6: getfield      #2                  // Field label:Lorg/mockito/asm/tree/LabelNode;
       9: invokevirtual #4                  // Method org/mockito/asm/tree/LabelNode.getLabel:()Lorg/mockito/asm/Label;
      12: invokeinterface #5,  3            // InterfaceMethod org/mockito/asm/MethodVisitor.visitJumpInsn:(ILorg/mockito/asm/Label;)V
      17: return

  public org.mockito.asm.tree.AbstractInsnNode clone(java.util.Map);
    Code:
       0: new           #6                  // class org/mockito/asm/tree/JumpInsnNode
       3: dup
       4: aload_0
       5: getfield      #3                  // Field opcode:I
       8: aload_0
       9: getfield      #2                  // Field label:Lorg/mockito/asm/tree/LabelNode;
      12: aload_1
      13: invokestatic  #7                  // Method clone:(Lorg/mockito/asm/tree/LabelNode;Ljava/util/Map;)Lorg/mockito/asm/tree/LabelNode;
      16: invokespecial #8                  // Method "<init>":(ILorg/mockito/asm/tree/LabelNode;)V
      19: areturn
}
