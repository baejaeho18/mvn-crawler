Compiled from "MockitoException.java"
public class org.mockito.exceptions.base.MockitoException extends java.lang.RuntimeException {
  private static final long serialVersionUID;

  private java.lang.StackTraceElement[] unfilteredStackTrace;

  public org.mockito.exceptions.base.MockitoException(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       6: aload_0
       7: invokespecial #2                  // Method filterStackTrace:()V
      10: return

  public org.mockito.exceptions.base.MockitoException(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: invokespecial #2                  // Method filterStackTrace:()V
       9: return

  private void filterStackTrace();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #4                  // Method getStackTrace:()[Ljava/lang/StackTraceElement;
       5: putfield      #5                  // Field unfilteredStackTrace:[Ljava/lang/StackTraceElement;
       8: new           #6                  // class org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilter
      11: dup
      12: invokespecial #7                  // Method org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilter."<init>":()V
      15: astore_1
      16: aload_1
      17: aload_0
      18: invokevirtual #8                  // Method org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilter.filter:(Ljava/lang/Throwable;)V
      21: return

  public java.lang.StackTraceElement[] getUnfilteredStackTrace();
    Code:
       0: aload_0
       1: getfield      #5                  // Field unfilteredStackTrace:[Ljava/lang/StackTraceElement;
       4: areturn
}
