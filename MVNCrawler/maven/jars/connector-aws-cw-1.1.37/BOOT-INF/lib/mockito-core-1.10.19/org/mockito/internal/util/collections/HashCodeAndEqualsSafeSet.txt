Compiled from "HashCodeAndEqualsSafeSet.java"
public class org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet implements java.util.Set<java.lang.Object> {
  private final java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper> backingHashSet;

  static final boolean $assertionsDisabled;

  public org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashSet
       8: dup
       9: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      12: putfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
      15: return

  public java.util.Iterator<java.lang.Object> iterator();
    Code:
       0: new           #5                  // class org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet$1
       3: dup
       4: aload_0
       5: invokespecial #6                  // Method org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet$1."<init>":(Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;)V
       8: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: invokevirtual #7                  // Method java/util/HashSet.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: invokevirtual #8                  // Method java/util/HashSet.isEmpty:()Z
       7: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: aload_1
       5: invokestatic  #9                  // Method org/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper.of:(Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper;
       8: invokevirtual #10                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      11: ireturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: aload_1
       5: invokestatic  #9                  // Method org/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper.of:(Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper;
       8: invokevirtual #11                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      11: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: aload_1
       5: invokestatic  #9                  // Method org/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper.of:(Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper;
       8: invokevirtual #12                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
      11: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: invokevirtual #13                 // Method java/util/HashSet.clear:()V
       7: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: new           #14                 // class java/lang/CloneNotSupportedException
       3: dup
       4: invokespecial #15                 // Method java/lang/CloneNotSupportedException."<init>":()V
       7: athrow

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #16                 // class org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #16                 // class org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet
      13: astore_2
      14: aload_0
      15: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
      18: aload_2
      19: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
      22: invokevirtual #17                 // Method java/util/HashSet.equals:(Ljava/lang/Object;)Z
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: invokevirtual #18                 // Method java/util/HashSet.hashCode:()I
       7: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #19                 // Method size:()I
       5: anewarray     #20                 // class java/lang/Object
       8: invokespecial #21                 // Method unwrapTo:([Ljava/lang/Object;)[Ljava/lang/Object;
      11: areturn

  private <T> T[] unwrapTo(T[]);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method iterator:()Ljava/util/Iterator;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: aload_1
       8: arraylength
       9: istore        4
      11: iload_3
      12: iload         4
      14: if_icmpge     41
      17: aload_2
      18: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          35
      26: aload_1
      27: iload_3
      28: aload_2
      29: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: aastore
      35: iinc          3, 1
      38: goto          11
      41: aload_1
      42: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: invokevirtual #19                 // Method size:()I
       6: if_icmplt     13
       9: aload_1
      10: goto          33
      13: aload_1
      14: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #26                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      20: aload_0
      21: invokevirtual #19                 // Method size:()I
      24: invokestatic  #27                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      27: checkcast     #28                 // class "[Ljava/lang/Object;"
      30: checkcast     #28                 // class "[Ljava/lang/Object;"
      33: astore_2
      34: aload_0
      35: aload_2
      36: invokespecial #21                 // Method unwrapTo:([Ljava/lang/Object;)[Ljava/lang/Object;
      39: areturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: aload_0
       5: aload_1
       6: invokespecial #29                 // Method asWrappedMocks:(Ljava/util/Collection;)Ljava/util/HashSet;
       9: invokevirtual #30                 // Method java/util/HashSet.removeAll:(Ljava/util/Collection;)Z
      12: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: aload_0
       5: aload_1
       6: invokespecial #29                 // Method asWrappedMocks:(Ljava/util/Collection;)Ljava/util/HashSet;
       9: invokevirtual #31                 // Method java/util/HashSet.containsAll:(Ljava/util/Collection;)Z
      12: ireturn

  public boolean addAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: aload_0
       5: aload_1
       6: invokespecial #29                 // Method asWrappedMocks:(Ljava/util/Collection;)Ljava/util/HashSet;
       9: invokevirtual #32                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
      12: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: aload_0
       5: aload_1
       6: invokespecial #29                 // Method asWrappedMocks:(Ljava/util/Collection;)Ljava/util/HashSet;
       9: invokevirtual #33                 // Method java/util/HashSet.retainAll:(Ljava/util/Collection;)Z
      12: ireturn

  private java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper> asWrappedMocks(java.util.Collection<?>);
    Code:
       0: aload_1
       1: ldc           #34                 // String Passed collection should notify() be null
       3: invokestatic  #35                 // Method org/mockito/internal/util/Checks.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #3                  // class java/util/HashSet
      10: dup
      11: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      14: astore_2
      15: aload_1
      16: invokeinterface #36,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          76
      31: aload_3
      32: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: astore        4
      39: getstatic     #37                 // Field $assertionsDisabled:Z
      42: ifne          63
      45: aload         4
      47: instanceof    #38                 // class org/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper
      50: ifeq          63
      53: new           #39                 // class java/lang/AssertionError
      56: dup
      57: ldc           #40                 // String WRONG
      59: invokespecial #41                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      62: athrow
      63: aload_2
      64: aload         4
      66: invokestatic  #9                  // Method org/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper.of:(Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper;
      69: invokevirtual #11                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      72: pop
      73: goto          22
      76: aload_2
      77: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: invokevirtual #42                 // Method java/util/HashSet.toString:()Ljava/lang/String;
       7: areturn

  public static org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet of(java.lang.Object...);
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokestatic  #44                 // Method of:(Ljava/lang/Iterable;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;
       7: areturn

  public static org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet of(java.lang.Iterable<java.lang.Object>);
    Code:
       0: new           #16                 // class org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet
       3: dup
       4: invokespecial #45                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        44
      12: aload_0
      13: invokeinterface #46,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          44
      28: aload_2
      29: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokevirtual #47                 // Method add:(Ljava/lang/Object;)Z
      40: pop
      41: goto          19
      44: aload_1
      45: areturn

  static java.util.HashSet access$000(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet);
    Code:
       0: aload_0
       1: getfield      #1                  // Field backingHashSet:Ljava/util/HashSet;
       4: areturn

  static {};
    Code:
       0: ldc_w         #16                 // class org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet
       3: invokevirtual #48                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #37                 // Field $assertionsDisabled:Z
      17: return
}
