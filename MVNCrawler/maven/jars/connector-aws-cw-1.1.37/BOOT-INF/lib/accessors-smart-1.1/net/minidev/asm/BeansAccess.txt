Compiled from "BeansAccess.java"
public abstract class net.minidev.asm.BeansAccess<T> {
  private java.util.HashMap<java.lang.String, net.minidev.asm.Accessor> map;

  private net.minidev.asm.Accessor[] accs;

  private static java.util.concurrent.ConcurrentHashMap<java.lang.Class<?>, net.minidev.asm.BeansAccess<?>> cache;

  public net.minidev.asm.BeansAccess();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected void setAccessor(net.minidev.asm.Accessor[]);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: aload_1
       4: putfield      #2                  // Field accs:[Lnet/minidev/asm/Accessor;
       7: aload_0
       8: new           #3                  // class java/util/HashMap
      11: dup
      12: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      15: putfield      #5                  // Field map:Ljava/util/HashMap;
      18: aload_1
      19: astore_3
      20: aload_3
      21: arraylength
      22: istore        4
      24: iconst_0
      25: istore        5
      27: iload         5
      29: iload         4
      31: if_icmpge     70
      34: aload_3
      35: iload         5
      37: aaload
      38: astore        6
      40: aload         6
      42: iload_2
      43: iinc          2, 1
      46: putfield      #6                  // Field net/minidev/asm/Accessor.index:I
      49: aload_0
      50: getfield      #5                  // Field map:Ljava/util/HashMap;
      53: aload         6
      55: invokevirtual #7                  // Method net/minidev/asm/Accessor.getName:()Ljava/lang/String;
      58: aload         6
      60: invokevirtual #8                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: iinc          5, 1
      67: goto          27
      70: return

  public java.util.HashMap<java.lang.String, net.minidev.asm.Accessor> getMap();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/HashMap;
       4: areturn

  public net.minidev.asm.Accessor[] getAccessors();
    Code:
       0: aload_0
       1: getfield      #2                  // Field accs:[Lnet/minidev/asm/Accessor;
       4: areturn

  public static <P> net.minidev.asm.BeansAccess<P> get(java.lang.Class<P>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #9                  // Method get:(Ljava/lang/Class;Lnet/minidev/asm/FieldFilter;)Lnet/minidev/asm/BeansAccess;
       5: areturn

  public static <P> net.minidev.asm.BeansAccess<P> get(java.lang.Class<P>, net.minidev.asm.FieldFilter);
    Code:
       0: getstatic     #10                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       3: aload_0
       4: invokevirtual #11                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #12                 // class net/minidev/asm/BeansAccess
      10: astore_2
      11: aload_2
      12: ifnull        17
      15: aload_2
      16: areturn
      17: aload_0
      18: aload_1
      19: invokestatic  #13                 // Method net/minidev/asm/ASMUtil.getAccessors:(Ljava/lang/Class;Lnet/minidev/asm/FieldFilter;)[Lnet/minidev/asm/Accessor;
      22: astore_2
      23: aload_0
      24: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
      27: astore_3
      28: aload_3
      29: ldc           #15                 // String java.util.
      31: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      34: ifeq          66
      37: new           #17                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #19                 // String net.minidev.asm.
      46: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_3
      50: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #21                 // String AccAccess
      55: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: astore        4
      63: goto          74
      66: aload_3
      67: ldc           #21                 // String AccAccess
      69: invokevirtual #23                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      72: astore        4
      74: new           #24                 // class net/minidev/asm/DynamicClassLoader
      77: dup
      78: aload_0
      79: invokevirtual #25                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      82: invokespecial #26                 // Method net/minidev/asm/DynamicClassLoader."<init>":(Ljava/lang/ClassLoader;)V
      85: astore        5
      87: aconst_null
      88: astore        6
      90: aload         5
      92: aload         4
      94: invokevirtual #27                 // Method net/minidev/asm/DynamicClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      97: astore        6
      99: goto          104
     102: astore        7
     104: aload_0
     105: invokestatic  #29                 // Method getParents:(Ljava/lang/Class;)Ljava/util/LinkedList;
     108: astore        7
     110: aload         6
     112: ifnonnull     183
     115: new           #30                 // class net/minidev/asm/BeansAccessBuilder
     118: dup
     119: aload_0
     120: aload_2
     121: aload         5
     123: invokespecial #31                 // Method net/minidev/asm/BeansAccessBuilder."<init>":(Ljava/lang/Class;[Lnet/minidev/asm/Accessor;Lnet/minidev/asm/DynamicClassLoader;)V
     126: astore        8
     128: aload         7
     130: invokevirtual #32                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     133: astore        9
     135: aload         9
     137: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     142: ifeq          176
     145: aload         9
     147: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     152: checkcast     #35                 // class java/lang/Class
     155: astore        10
     157: aload         8
     159: getstatic     #36                 // Field net/minidev/asm/BeansAccessConfig.classMapper:Ljava/util/HashMap;
     162: aload         10
     164: invokevirtual #37                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     167: checkcast     #38                 // class java/lang/Iterable
     170: invokevirtual #39                 // Method net/minidev/asm/BeansAccessBuilder.addConversion:(Ljava/lang/Iterable;)V
     173: goto          135
     176: aload         8
     178: invokevirtual #40                 // Method net/minidev/asm/BeansAccessBuilder.bulid:()Ljava/lang/Class;
     181: astore        6
     183: aload         6
     185: invokevirtual #41                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     188: checkcast     #12                 // class net/minidev/asm/BeansAccess
     191: astore        8
     193: aload         8
     195: aload_2
     196: invokevirtual #42                 // Method setAccessor:([Lnet/minidev/asm/Accessor;)V
     199: getstatic     #10                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
     202: aload_0
     203: aload         8
     205: invokevirtual #43                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     208: pop
     209: aload         7
     211: invokevirtual #32                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     214: astore        9
     216: aload         9
     218: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     223: ifeq          257
     226: aload         9
     228: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     233: checkcast     #35                 // class java/lang/Class
     236: astore        10
     238: aload         8
     240: getstatic     #44                 // Field net/minidev/asm/BeansAccessConfig.classFiledNameMapper:Ljava/util/HashMap;
     243: aload         10
     245: invokevirtual #37                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     248: checkcast     #3                  // class java/util/HashMap
     251: invokestatic  #45                 // Method addAlias:(Lnet/minidev/asm/BeansAccess;Ljava/util/HashMap;)V
     254: goto          216
     257: aload         8
     259: areturn
     260: astore        8
     262: new           #47                 // class java/lang/RuntimeException
     265: dup
     266: new           #17                 // class java/lang/StringBuilder
     269: dup
     270: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     273: ldc           #48                 // String Error constructing accessor class:
     275: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: aload         4
     280: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     283: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     286: aload         8
     288: invokespecial #49                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     291: athrow
    Exception table:
       from    to  target type
          90    99   102   Class java/lang/ClassNotFoundException
         183   259   260   Class java/lang/Exception

  private static java.util.LinkedList<java.lang.Class<?>> getParents(java.lang.Class<?>);
    Code:
       0: new           #50                 // class java/util/LinkedList
       3: dup
       4: invokespecial #51                 // Method java/util/LinkedList."<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        69
      12: aload_0
      13: ldc           #52                 // class java/lang/Object
      15: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      18: ifne          69
      21: aload_1
      22: aload_0
      23: invokevirtual #54                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
      26: aload_0
      27: invokevirtual #55                 // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      30: astore_2
      31: aload_2
      32: arraylength
      33: istore_3
      34: iconst_0
      35: istore        4
      37: iload         4
      39: iload_3
      40: if_icmpge     61
      43: aload_2
      44: iload         4
      46: aaload
      47: astore        5
      49: aload_1
      50: aload         5
      52: invokevirtual #54                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
      55: iinc          4, 1
      58: goto          37
      61: aload_0
      62: invokevirtual #56                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      65: astore_0
      66: goto          8
      69: aload_1
      70: ldc           #52                 // class java/lang/Object
      72: invokevirtual #54                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
      75: aload_1
      76: areturn

  private static void addAlias(net.minidev.asm.BeansAccess<?>, java.util.HashMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: astore_2
      13: aload_1
      14: invokevirtual #57                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #58,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          84
      32: aload_3
      33: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #59                 // class java/util/Map$Entry
      41: astore        4
      43: aload_0
      44: getfield      #5                  // Field map:Ljava/util/HashMap;
      47: aload         4
      49: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      54: invokevirtual #37                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #61                 // class net/minidev/asm/Accessor
      60: astore        5
      62: aload         5
      64: ifnull        81
      67: aload_2
      68: aload         4
      70: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: aload         5
      77: invokevirtual #8                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          23
      84: aload_0
      85: getfield      #5                  // Field map:Ljava/util/HashMap;
      88: aload_2
      89: invokevirtual #62                 // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
      92: return

  public abstract void set(T, int, java.lang.Object);

  public abstract java.lang.Object get(T, int);

  public abstract T newInstance();

  public void set(T, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #63                 // Method getIndex:(Ljava/lang/String;)I
       5: istore        4
       7: iload         4
       9: iconst_m1
      10: if_icmpne     56
      13: new           #64                 // class net/minidev/asm/ex/NoSuchFieldException
      16: dup
      17: new           #17                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_2
      25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #65                 // String  in
      30: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #68                 // String  to put value :
      42: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_3
      46: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #69                 // Method net/minidev/asm/ex/NoSuchFieldException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: aload_1
      58: iload         4
      60: aload_3
      61: invokevirtual #70                 // Method set:(Ljava/lang/Object;ILjava/lang/Object;)V
      64: return

  public java.lang.Object get(T, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokevirtual #63                 // Method getIndex:(Ljava/lang/String;)I
       7: invokevirtual #71                 // Method get:(Ljava/lang/Object;I)Ljava/lang/Object;
      10: areturn

  public int getIndex(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #37                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #61                 // class net/minidev/asm/Accessor
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: iconst_m1
      17: ireturn
      18: aload_2
      19: getfield      #6                  // Field net/minidev/asm/Accessor.index:I
      22: ireturn

  static {};
    Code:
       0: new           #72                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #73                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #10                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
      10: return
}
