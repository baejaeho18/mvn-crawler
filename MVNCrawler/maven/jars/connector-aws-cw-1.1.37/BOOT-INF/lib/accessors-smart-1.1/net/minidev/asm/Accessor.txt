Compiled from "Accessor.java"
public class net.minidev.asm.Accessor {
  protected java.lang.reflect.Field field;

  protected java.lang.reflect.Method setter;

  protected java.lang.reflect.Method getter;

  protected int index;

  protected java.lang.Class<?> type;

  protected java.lang.reflect.Type genericType;

  protected java.lang.String fieldName;

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #1                  // Field index:I
       4: ireturn

  public boolean isPublic();
    Code:
       0: aload_0
       1: getfield      #2                  // Field setter:Ljava/lang/reflect/Method;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isEnum();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Ljava/lang/Class;
       4: invokevirtual #4                  // Method java/lang/Class.isEnum:()Z
       7: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fieldName:Ljava/lang/String;
       4: areturn

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Ljava/lang/Class;
       4: areturn

  public java.lang.reflect.Type getGenericType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field genericType:Ljava/lang/reflect/Type;
       4: areturn

  public boolean isUsable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
       4: ifnonnull     21
       7: aload_0
       8: getfield      #8                  // Field getter:Ljava/lang/reflect/Method;
      11: ifnonnull     21
      14: aload_0
      15: getfield      #2                  // Field setter:Ljava/lang/reflect/Method;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean isReadable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #8                  // Field getter:Ljava/lang/reflect/Method;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #8                  // Field getter:Ljava/lang/reflect/Method;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public net.minidev.asm.Accessor(java.lang.Class<?>, java.lang.reflect.Field, net.minidev.asm.FieldFilter);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: invokevirtual #10                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       9: putfield      #5                  // Field fieldName:Ljava/lang/String;
      12: aload_2
      13: invokevirtual #11                 // Method java/lang/reflect/Field.getModifiers:()I
      16: istore        4
      18: iload         4
      20: sipush        136
      23: iand
      24: ifle          28
      27: return
      28: iload         4
      30: iconst_1
      31: iand
      32: ifle          40
      35: aload_0
      36: aload_2
      37: putfield      #7                  // Field field:Ljava/lang/reflect/Field;
      40: aload_2
      41: invokevirtual #10                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      44: invokestatic  #13                 // Method net/minidev/asm/ASMUtil.getSetterName:(Ljava/lang/String;)Ljava/lang/String;
      47: astore        5
      49: aload_0
      50: aload_1
      51: aload         5
      53: iconst_1
      54: anewarray     #14                 // class java/lang/Class
      57: dup
      58: iconst_0
      59: aload_2
      60: invokevirtual #15                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      63: aastore
      64: invokevirtual #16                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      67: putfield      #2                  // Field setter:Ljava/lang/reflect/Method;
      70: goto          75
      73: astore        6
      75: aload_2
      76: invokevirtual #15                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      79: getstatic     #18                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      82: invokevirtual #19                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      85: istore        6
      87: iload         6
      89: ifeq          104
      92: aload_2
      93: invokevirtual #10                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      96: invokestatic  #20                 // Method net/minidev/asm/ASMUtil.getIsName:(Ljava/lang/String;)Ljava/lang/String;
      99: astore        5
     101: goto          113
     104: aload_2
     105: invokevirtual #10                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     108: invokestatic  #21                 // Method net/minidev/asm/ASMUtil.getGetterName:(Ljava/lang/String;)Ljava/lang/String;
     111: astore        5
     113: aload_0
     114: aload_1
     115: aload         5
     117: iconst_0
     118: anewarray     #14                 // class java/lang/Class
     121: invokevirtual #16                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     124: putfield      #8                  // Field getter:Ljava/lang/reflect/Method;
     127: goto          132
     130: astore        7
     132: aload_0
     133: getfield      #8                  // Field getter:Ljava/lang/reflect/Method;
     136: ifnonnull     168
     139: iload         6
     141: ifeq          168
     144: aload_0
     145: aload_1
     146: aload_2
     147: invokevirtual #10                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     150: invokestatic  #21                 // Method net/minidev/asm/ASMUtil.getGetterName:(Ljava/lang/String;)Ljava/lang/String;
     153: iconst_0
     154: anewarray     #14                 // class java/lang/Class
     157: invokevirtual #16                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     160: putfield      #8                  // Field getter:Ljava/lang/reflect/Method;
     163: goto          168
     166: astore        7
     168: aload_0
     169: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
     172: ifnonnull     190
     175: aload_0
     176: getfield      #8                  // Field getter:Ljava/lang/reflect/Method;
     179: ifnonnull     190
     182: aload_0
     183: getfield      #2                  // Field setter:Ljava/lang/reflect/Method;
     186: ifnonnull     190
     189: return
     190: aload_0
     191: getfield      #8                  // Field getter:Ljava/lang/reflect/Method;
     194: ifnull        216
     197: aload_3
     198: aload_2
     199: aload_0
     200: getfield      #8                  // Field getter:Ljava/lang/reflect/Method;
     203: invokeinterface #22,  3           // InterfaceMethod net/minidev/asm/FieldFilter.canUse:(Ljava/lang/reflect/Field;Ljava/lang/reflect/Method;)Z
     208: ifne          216
     211: aload_0
     212: aconst_null
     213: putfield      #8                  // Field getter:Ljava/lang/reflect/Method;
     216: aload_0
     217: getfield      #2                  // Field setter:Ljava/lang/reflect/Method;
     220: ifnull        242
     223: aload_3
     224: aload_2
     225: aload_0
     226: getfield      #2                  // Field setter:Ljava/lang/reflect/Method;
     229: invokeinterface #22,  3           // InterfaceMethod net/minidev/asm/FieldFilter.canUse:(Ljava/lang/reflect/Field;Ljava/lang/reflect/Method;)Z
     234: ifne          242
     237: aload_0
     238: aconst_null
     239: putfield      #2                  // Field setter:Ljava/lang/reflect/Method;
     242: aload_0
     243: getfield      #8                  // Field getter:Ljava/lang/reflect/Method;
     246: ifnonnull     264
     249: aload_0
     250: getfield      #2                  // Field setter:Ljava/lang/reflect/Method;
     253: ifnonnull     264
     256: aload_0
     257: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
     260: ifnonnull     264
     263: return
     264: aload_0
     265: aload_2
     266: invokevirtual #15                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
     269: putfield      #3                  // Field type:Ljava/lang/Class;
     272: aload_0
     273: aload_2
     274: invokevirtual #23                 // Method java/lang/reflect/Field.getGenericType:()Ljava/lang/reflect/Type;
     277: putfield      #6                  // Field genericType:Ljava/lang/reflect/Type;
     280: return
    Exception table:
       from    to  target type
          49    70    73   Class java/lang/Exception
         113   127   130   Class java/lang/Exception
         144   163   166   Class java/lang/Exception
}
