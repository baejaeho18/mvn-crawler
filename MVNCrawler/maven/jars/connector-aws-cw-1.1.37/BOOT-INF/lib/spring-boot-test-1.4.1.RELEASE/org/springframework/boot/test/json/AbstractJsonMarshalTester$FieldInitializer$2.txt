Compiled from "AbstractJsonMarshalTester.java"
class org.springframework.boot.test.json.AbstractJsonMarshalTester$FieldInitializer$2 implements org.springframework.util.ReflectionUtils$FieldCallback {
  final java.lang.Object val$testInstance;

  final org.springframework.beans.factory.ObjectFactory val$marshaller;

  final org.springframework.boot.test.json.AbstractJsonMarshalTester$FieldInitializer this$0;

  org.springframework.boot.test.json.AbstractJsonMarshalTester$FieldInitializer$2(org.springframework.boot.test.json.AbstractJsonMarshalTester$FieldInitializer, java.lang.Object, org.springframework.beans.factory.ObjectFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/boot/test/json/AbstractJsonMarshalTester$FieldInitializer;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$testInstance:Ljava/lang/Object;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$marshaller:Lorg/springframework/beans/factory/ObjectFactory;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void doWith(java.lang.reflect.Field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/boot/test/json/AbstractJsonMarshalTester$FieldInitializer;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field val$testInstance:Ljava/lang/Object;
       9: aload_0
      10: getfield      #3                  // Field val$marshaller:Lorg/springframework/beans/factory/ObjectFactory;
      13: invokevirtual #5                  // Method org/springframework/boot/test/json/AbstractJsonMarshalTester$FieldInitializer.doWithField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)V
      16: return
}
