Compiled from "DefinitionsParser.java"
class org.springframework.boot.test.mock.mockito.DefinitionsParser$1 implements org.springframework.util.ReflectionUtils$FieldCallback {
  final org.springframework.boot.test.mock.mockito.DefinitionsParser this$0;

  org.springframework.boot.test.mock.mockito.DefinitionsParser$1(org.springframework.boot.test.mock.mockito.DefinitionsParser);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/boot/test/mock/mockito/DefinitionsParser;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void doWith(java.lang.reflect.Field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/boot/test/mock/mockito/DefinitionsParser;
       4: aload_1
       5: invokestatic  #3                  // Method org/springframework/boot/test/mock/mockito/DefinitionsParser.access$000:(Lorg/springframework/boot/test/mock/mockito/DefinitionsParser;Ljava/lang/reflect/AnnotatedElement;)V
       8: return
}
