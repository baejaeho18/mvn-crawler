Compiled from "ResourceUtils.java"
public abstract class org.springframework.util.ResourceUtils {
  public static final java.lang.String CLASSPATH_URL_PREFIX;

  public static final java.lang.String FILE_URL_PREFIX;

  public static final java.lang.String JAR_URL_PREFIX;

  public static final java.lang.String WAR_URL_PREFIX;

  public static final java.lang.String URL_PROTOCOL_FILE;

  public static final java.lang.String URL_PROTOCOL_JAR;

  public static final java.lang.String URL_PROTOCOL_ZIP;

  public static final java.lang.String URL_PROTOCOL_WSJAR;

  public static final java.lang.String URL_PROTOCOL_VFSZIP;

  public static final java.lang.String URL_PROTOCOL_VFSFILE;

  public static final java.lang.String URL_PROTOCOL_VFS;

  public static final java.lang.String JAR_FILE_EXTENSION;

  public static final java.lang.String JAR_URL_SEPARATOR;

  public static final java.lang.String WAR_URL_SEPARATOR;

  public org.springframework.util.ResourceUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isUrl(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: ldc           #3                  // String classpath:
       9: invokevirtual #4                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ifeq          17
      15: iconst_1
      16: ireturn
      17: new           #5                  // class java/net/URL
      20: dup
      21: aload_0
      22: invokespecial #6                  // Method java/net/URL."<init>":(Ljava/lang/String;)V
      25: pop
      26: iconst_1
      27: ireturn
      28: astore_1
      29: iconst_0
      30: ireturn
    Exception table:
       from    to  target type
          17    27    28   Class java/net/MalformedURLException

  public static java.net.URL getURL(java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ldc           #8                  // String Resource location must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #3                  // String classpath:
       9: invokevirtual #4                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ifeq          106
      15: aload_0
      16: ldc           #3                  // String classpath:
      18: invokevirtual #10                 // Method java/lang/String.length:()I
      21: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      24: astore_1
      25: invokestatic  #12                 // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      28: astore_2
      29: aload_2
      30: ifnull        41
      33: aload_2
      34: aload_1
      35: invokevirtual #13                 // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      38: goto          45
      41: aload_1
      42: invokestatic  #14                 // Method java/lang/ClassLoader.getSystemResource:(Ljava/lang/String;)Ljava/net/URL;
      45: astore_3
      46: aload_3
      47: ifnonnull     104
      50: new           #15                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #17                 // String class path resource [
      59: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #19                 // String ]
      68: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: astore        4
      76: new           #21                 // class java/io/FileNotFoundException
      79: dup
      80: new           #15                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      87: aload         4
      89: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #22                 // String  cannot be resolved to URL because it does not exist
      94: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #23                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_3
     105: areturn
     106: new           #5                  // class java/net/URL
     109: dup
     110: aload_0
     111: invokespecial #6                  // Method java/net/URL."<init>":(Ljava/lang/String;)V
     114: areturn
     115: astore_1
     116: new           #24                 // class java/io/File
     119: dup
     120: aload_0
     121: invokespecial #25                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     124: invokevirtual #26                 // Method java/io/File.toURI:()Ljava/net/URI;
     127: invokevirtual #27                 // Method java/net/URI.toURL:()Ljava/net/URL;
     130: areturn
     131: astore_2
     132: new           #21                 // class java/io/FileNotFoundException
     135: dup
     136: new           #15                 // class java/lang/StringBuilder
     139: dup
     140: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     143: ldc           #28                 // String Resource location [
     145: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload_0
     149: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: ldc           #29                 // String ] is neither a URL not a well-formed file path
     154: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: invokespecial #23                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     163: athrow
    Exception table:
       from    to  target type
         106   114   115   Class java/net/MalformedURLException
         116   130   131   Class java/net/MalformedURLException

  public static java.io.File getFile(java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ldc           #8                  // String Resource location must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #3                  // String classpath:
       9: invokevirtual #4                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ifeq          111
      15: aload_0
      16: ldc           #3                  // String classpath:
      18: invokevirtual #10                 // Method java/lang/String.length:()I
      21: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      24: astore_1
      25: new           #15                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #17                 // String class path resource [
      34: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #19                 // String ]
      43: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: astore_2
      50: invokestatic  #12                 // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      53: astore_3
      54: aload_3
      55: ifnull        66
      58: aload_3
      59: aload_1
      60: invokevirtual #13                 // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      63: goto          70
      66: aload_1
      67: invokestatic  #14                 // Method java/lang/ClassLoader.getSystemResource:(Ljava/lang/String;)Ljava/net/URL;
      70: astore        4
      72: aload         4
      74: ifnonnull     104
      77: new           #21                 // class java/io/FileNotFoundException
      80: dup
      81: new           #15                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      88: aload_2
      89: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #30                 // String  cannot be resolved to absolute file path because it does not exist
      94: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #23                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload         4
     106: aload_2
     107: invokestatic  #31                 // Method getFile:(Ljava/net/URL;Ljava/lang/String;)Ljava/io/File;
     110: areturn
     111: new           #5                  // class java/net/URL
     114: dup
     115: aload_0
     116: invokespecial #6                  // Method java/net/URL."<init>":(Ljava/lang/String;)V
     119: invokestatic  #32                 // Method getFile:(Ljava/net/URL;)Ljava/io/File;
     122: areturn
     123: astore_1
     124: new           #24                 // class java/io/File
     127: dup
     128: aload_0
     129: invokespecial #25                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     132: areturn
    Exception table:
       from    to  target type
         111   122   123   Class java/net/MalformedURLException

  public static java.io.File getFile(java.net.URL) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ldc           #33                 // String URL
       3: invokestatic  #31                 // Method getFile:(Ljava/net/URL;Ljava/lang/String;)Ljava/io/File;
       6: areturn

  public static java.io.File getFile(java.net.URL, java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ldc           #34                 // String Resource URL must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: ldc           #35                 // String file
       8: aload_0
       9: invokevirtual #36                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      12: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          49
      18: new           #21                 // class java/io/FileNotFoundException
      21: dup
      22: new           #15                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #38                 // String  cannot be resolved to absolute file path because it does not reside in the file system:
      35: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #23                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: new           #24                 // class java/io/File
      52: dup
      53: aload_0
      54: invokestatic  #40                 // Method toURI:(Ljava/net/URL;)Ljava/net/URI;
      57: invokevirtual #41                 // Method java/net/URI.getSchemeSpecificPart:()Ljava/lang/String;
      60: invokespecial #25                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      63: areturn
      64: astore_2
      65: new           #24                 // class java/io/File
      68: dup
      69: aload_0
      70: invokevirtual #43                 // Method java/net/URL.getFile:()Ljava/lang/String;
      73: invokespecial #25                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      76: areturn
    Exception table:
       from    to  target type
          49    63    64   Class java/net/URISyntaxException

  public static java.io.File getFile(java.net.URI) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ldc           #44                 // String URI
       3: invokestatic  #45                 // Method getFile:(Ljava/net/URI;Ljava/lang/String;)Ljava/io/File;
       6: areturn

  public static java.io.File getFile(java.net.URI, java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ldc           #46                 // String Resource URI must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: ldc           #35                 // String file
       8: aload_0
       9: invokevirtual #47                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      12: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          49
      18: new           #21                 // class java/io/FileNotFoundException
      21: dup
      22: new           #15                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #38                 // String  cannot be resolved to absolute file path because it does not reside in the file system:
      35: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #23                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: new           #24                 // class java/io/File
      52: dup
      53: aload_0
      54: invokevirtual #41                 // Method java/net/URI.getSchemeSpecificPart:()Ljava/lang/String;
      57: invokespecial #25                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      60: areturn

  public static boolean isFileURL(java.net.URL);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
       4: astore_1
       5: ldc           #35                 // String file
       7: aload_1
       8: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifne          32
      14: ldc           #48                 // String vfsfile
      16: aload_1
      17: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifne          32
      23: ldc           #49                 // String vfs
      25: aload_1
      26: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public static boolean isJarURL(java.net.URL);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
       4: astore_1
       5: ldc           #50                 // String jar
       7: aload_1
       8: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifne          41
      14: ldc           #51                 // String zip
      16: aload_1
      17: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifne          41
      23: ldc           #52                 // String vfszip
      25: aload_1
      26: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifne          41
      32: ldc           #53                 // String wsjar
      34: aload_1
      35: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn

  public static boolean isJarFileURL(java.net.URL);
    Code:
       0: ldc           #35                 // String file
       2: aload_0
       3: invokevirtual #36                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
       6: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          31
      12: aload_0
      13: invokevirtual #54                 // Method java/net/URL.getPath:()Ljava/lang/String;
      16: invokevirtual #55                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      19: ldc           #56                 // String .jar
      21: invokevirtual #57                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public static java.net.URL extractJarFileURL(java.net.URL) throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method java/net/URL.getFile:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ldc           #58                 // String !/
       8: invokevirtual #59                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      11: istore_2
      12: iload_2
      13: iconst_m1
      14: if_icmpeq     91
      17: aload_1
      18: iconst_0
      19: iload_2
      20: invokevirtual #60                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      23: astore_3
      24: new           #5                  // class java/net/URL
      27: dup
      28: aload_3
      29: invokespecial #6                  // Method java/net/URL."<init>":(Ljava/lang/String;)V
      32: areturn
      33: astore        4
      35: aload_3
      36: ldc           #61                 // String /
      38: invokevirtual #4                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      41: ifne          64
      44: new           #15                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #61                 // String /
      53: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_3
      57: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: astore_3
      64: new           #5                  // class java/net/URL
      67: dup
      68: new           #15                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #62                 // String file:
      77: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_3
      81: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #6                  // Method java/net/URL."<init>":(Ljava/lang/String;)V
      90: areturn
      91: aload_0
      92: areturn
    Exception table:
       from    to  target type
          24    32    33   Class java/net/MalformedURLException

  public static java.net.URL extractArchiveURL(java.net.URL) throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method java/net/URL.getFile:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ldc           #63                 // String */
       8: invokevirtual #59                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      11: istore_2
      12: iload_2
      13: iconst_m1
      14: if_icmpeq     58
      17: aload_1
      18: iconst_0
      19: iload_2
      20: invokevirtual #60                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      23: astore_3
      24: aload_3
      25: ldc           #64                 // String war:
      27: invokevirtual #59                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      30: istore        4
      32: iload         4
      34: iconst_m1
      35: if_icmpeq     58
      38: new           #5                  // class java/net/URL
      41: dup
      42: aload_3
      43: iload         4
      45: ldc           #64                 // String war:
      47: invokevirtual #10                 // Method java/lang/String.length:()I
      50: iadd
      51: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      54: invokespecial #6                  // Method java/net/URL."<init>":(Ljava/lang/String;)V
      57: areturn
      58: aload_0
      59: invokestatic  #65                 // Method extractJarFileURL:(Ljava/net/URL;)Ljava/net/URL;
      62: areturn

  public static java.net.URI toURI(java.net.URL) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method java/net/URL.toString:()Ljava/lang/String;
       4: invokestatic  #67                 // Method toURI:(Ljava/lang/String;)Ljava/net/URI;
       7: areturn

  public static java.net.URI toURI(java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: new           #68                 // class java/net/URI
       3: dup
       4: aload_0
       5: ldc           #69                 // String
       7: ldc           #70                 // String %20
       9: invokestatic  #71                 // Method org/springframework/util/StringUtils.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #72                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      15: areturn

  public static void useCachesIfNecessary(java.net.URLConnection);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #73                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #74                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       8: ldc           #75                 // String JNLP
      10: invokevirtual #4                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: invokevirtual #76                 // Method java/net/URLConnection.setUseCaches:(Z)V
      16: return
}
