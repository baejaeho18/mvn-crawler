Compiled from "WeakReferenceMonitor.java"
public class org.springframework.util.WeakReferenceMonitor {
  private static final org.apache.commons.logging.Log logger;

  private static final java.lang.ref.ReferenceQueue<java.lang.Object> handleQueue;

  private static final java.util.Map<java.lang.ref.Reference<?>, org.springframework.util.WeakReferenceMonitor$ReleaseListener> trackedEntries;

  private static java.lang.Thread monitoringThread;

  public org.springframework.util.WeakReferenceMonitor();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  public static void monitor(java.lang.Object, org.springframework.util.WeakReferenceMonitor$ReleaseListener);
    Code:
       0: getstatic     #5                  // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          52
      11: getstatic     #5                  // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #8                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #10                 // String Monitoring handle [
      23: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #13                 // String ] with release listener [
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc           #14                 // String ]
      41: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: new           #17                 // class java/lang/ref/WeakReference
      55: dup
      56: aload_0
      57: getstatic     #3                  // Field handleQueue:Ljava/lang/ref/ReferenceQueue;
      60: invokespecial #18                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      63: astore_2
      64: aload_2
      65: aload_1
      66: invokestatic  #19                 // Method addEntry:(Ljava/lang/ref/Reference;Lorg/springframework/util/WeakReferenceMonitor$ReleaseListener;)V
      69: return

  private static void addEntry(java.lang.ref.Reference<?>, org.springframework.util.WeakReferenceMonitor$ReleaseListener);
    Code:
       0: ldc           #20                 // class org/springframework/util/WeakReferenceMonitor
       2: dup
       3: astore_2
       4: monitorenter
       5: getstatic     #21                 // Field trackedEntries:Ljava/util/Map;
       8: aload_0
       9: aload_1
      10: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: getstatic     #1                  // Field monitoringThread:Ljava/lang/Thread;
      19: ifnonnull     58
      22: new           #23                 // class java/lang/Thread
      25: dup
      26: new           #24                 // class org/springframework/util/WeakReferenceMonitor$MonitoringProcess
      29: dup
      30: aconst_null
      31: invokespecial #25                 // Method org/springframework/util/WeakReferenceMonitor$MonitoringProcess."<init>":(Lorg/springframework/util/WeakReferenceMonitor$1;)V
      34: ldc           #20                 // class org/springframework/util/WeakReferenceMonitor
      36: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      39: invokespecial #27                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      42: putstatic     #1                  // Field monitoringThread:Ljava/lang/Thread;
      45: getstatic     #1                  // Field monitoringThread:Ljava/lang/Thread;
      48: iconst_1
      49: invokevirtual #28                 // Method java/lang/Thread.setDaemon:(Z)V
      52: getstatic     #1                  // Field monitoringThread:Ljava/lang/Thread;
      55: invokevirtual #29                 // Method java/lang/Thread.start:()V
      58: aload_2
      59: monitorexit
      60: goto          68
      63: astore_3
      64: aload_2
      65: monitorexit
      66: aload_3
      67: athrow
      68: return
    Exception table:
       from    to  target type
           5    60    63   any
          63    66    63   any

  private static org.springframework.util.WeakReferenceMonitor$ReleaseListener removeEntry(java.lang.ref.Reference<?>);
    Code:
       0: ldc           #20                 // class org/springframework/util/WeakReferenceMonitor
       2: dup
       3: astore_1
       4: monitorenter
       5: getstatic     #21                 // Field trackedEntries:Ljava/util/Map;
       8: aload_0
       9: invokeinterface #30,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #31                 // class org/springframework/util/WeakReferenceMonitor$ReleaseListener
      17: aload_1
      18: monitorexit
      19: areturn
      20: astore_2
      21: aload_1
      22: monitorexit
      23: aload_2
      24: athrow
    Exception table:
       from    to  target type
           5    19    20   any
          20    23    20   any

  private static boolean keepMonitoringThreadAlive();
    Code:
       0: ldc           #20                 // class org/springframework/util/WeakReferenceMonitor
       2: dup
       3: astore_0
       4: monitorenter
       5: getstatic     #21                 // Field trackedEntries:Ljava/util/Map;
       8: invokeinterface #32,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      13: ifne          20
      16: iconst_1
      17: aload_0
      18: monitorexit
      19: ireturn
      20: getstatic     #5                  // Field logger:Lorg/apache/commons/logging/Log;
      23: ldc           #33                 // String No entries left to track - stopping reference monitor thread
      25: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      30: aconst_null
      31: putstatic     #1                  // Field monitoringThread:Ljava/lang/Thread;
      34: iconst_0
      35: aload_0
      36: monitorexit
      37: ireturn
      38: astore_1
      39: aload_0
      40: monitorexit
      41: aload_1
      42: athrow
    Exception table:
       from    to  target type
           5    19    38   any
          20    37    38   any
          38    41    38   any

  static org.apache.commons.logging.Log access$100();
    Code:
       0: getstatic     #5                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static boolean access$200();
    Code:
       0: invokestatic  #4                  // Method keepMonitoringThreadAlive:()Z
       3: ireturn

  static java.lang.ref.ReferenceQueue access$300();
    Code:
       0: getstatic     #3                  // Field handleQueue:Ljava/lang/ref/ReferenceQueue;
       3: areturn

  static org.springframework.util.WeakReferenceMonitor$ReleaseListener access$400(java.lang.ref.Reference);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method removeEntry:(Ljava/lang/ref/Reference;)Lorg/springframework/util/WeakReferenceMonitor$ReleaseListener;
       4: areturn

  static java.lang.Thread access$502(java.lang.Thread);
    Code:
       0: aload_0
       1: dup
       2: putstatic     #1                  // Field monitoringThread:Ljava/lang/Thread;
       5: areturn

  static {};
    Code:
       0: ldc           #20                 // class org/springframework/util/WeakReferenceMonitor
       2: invokestatic  #34                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #5                  // Field logger:Lorg/apache/commons/logging/Log;
       8: new           #35                 // class java/lang/ref/ReferenceQueue
      11: dup
      12: invokespecial #36                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      15: putstatic     #3                  // Field handleQueue:Ljava/lang/ref/ReferenceQueue;
      18: new           #37                 // class java/util/HashMap
      21: dup
      22: invokespecial #38                 // Method java/util/HashMap."<init>":()V
      25: putstatic     #21                 // Field trackedEntries:Ljava/util/Map;
      28: aconst_null
      29: putstatic     #1                  // Field monitoringThread:Ljava/lang/Thread;
      32: return
}
