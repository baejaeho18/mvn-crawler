Compiled from "TypeDescriptor.java"
public class org.springframework.core.convert.TypeDescriptor implements java.io.Serializable {
  static final java.lang.annotation.Annotation[] EMPTY_ANNOTATION_ARRAY;

  private static final boolean streamAvailable;

  private static final java.util.Map<java.lang.Class<?>, org.springframework.core.convert.TypeDescriptor> commonTypesCache;

  private static final java.lang.Class<?>[] CACHED_COMMON_TYPES;

  private final java.lang.Class<?> type;

  private final org.springframework.core.ResolvableType resolvableType;

  private final java.lang.annotation.Annotation[] annotations;

  public org.springframework.core.convert.TypeDescriptor(org.springframework.core.MethodParameter);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String MethodParameter must not be null
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
      15: putfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      18: aload_0
      19: aload_0
      20: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      23: aload_1
      24: invokevirtual #7                  // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
      27: invokevirtual #8                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      30: putfield      #9                  // Field type:Ljava/lang/Class;
      33: aload_0
      34: aload_1
      35: invokevirtual #10                 // Method org/springframework/core/MethodParameter.getParameterIndex:()I
      38: iconst_m1
      39: if_icmpne     53
      42: aload_0
      43: aload_1
      44: invokevirtual #11                 // Method org/springframework/core/MethodParameter.getMethodAnnotations:()[Ljava/lang/annotation/Annotation;
      47: invokespecial #12                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      50: goto          61
      53: aload_0
      54: aload_1
      55: invokevirtual #13                 // Method org/springframework/core/MethodParameter.getParameterAnnotations:()[Ljava/lang/annotation/Annotation;
      58: invokespecial #12                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      61: putfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      64: return

  public org.springframework.core.convert.TypeDescriptor(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #15                 // String Field must not be null
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokestatic  #16                 // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
      15: putfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      18: aload_0
      19: aload_0
      20: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      23: aload_1
      24: invokevirtual #17                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      27: invokevirtual #8                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      30: putfield      #9                  // Field type:Ljava/lang/Class;
      33: aload_0
      34: aload_0
      35: aload_1
      36: invokevirtual #18                 // Method java/lang/reflect/Field.getAnnotations:()[Ljava/lang/annotation/Annotation;
      39: invokespecial #12                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      42: putfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      45: return

  public org.springframework.core.convert.TypeDescriptor(org.springframework.core.convert.Property);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #19                 // String Property must not be null
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #20                 // Method org/springframework/core/convert/Property.getMethodParameter:()Lorg/springframework/core/MethodParameter;
      15: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
      18: putfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      21: aload_0
      22: aload_0
      23: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      26: aload_1
      27: invokevirtual #21                 // Method org/springframework/core/convert/Property.getType:()Ljava/lang/Class;
      30: invokevirtual #8                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      33: putfield      #9                  // Field type:Ljava/lang/Class;
      36: aload_0
      37: aload_0
      38: aload_1
      39: invokevirtual #22                 // Method org/springframework/core/convert/Property.getAnnotations:()[Ljava/lang/annotation/Annotation;
      42: invokespecial #12                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      45: putfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      48: return

  protected org.springframework.core.convert.TypeDescriptor(org.springframework.core.ResolvableType, java.lang.Class<?>, java.lang.annotation.Annotation[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       9: aload_0
      10: aload_2
      11: ifnull        18
      14: aload_2
      15: goto          24
      18: aload_1
      19: ldc           #23                 // class java/lang/Object
      21: invokevirtual #8                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      24: putfield      #9                  // Field type:Ljava/lang/Class;
      27: aload_0
      28: aload_0
      29: aload_3
      30: invokespecial #12                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      33: putfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      36: return

  private java.lang.annotation.Annotation[] nullSafeAnnotations(java.lang.annotation.Annotation[]);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: goto          11
       8: getstatic     #24                 // Field EMPTY_ANNOTATION_ARRAY:[Ljava/lang/annotation/Annotation;
      11: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getType:()Ljava/lang/Class;
       4: invokestatic  #26                 // Method org/springframework/util/ClassUtils.resolvePrimitiveIfNecessary:(Ljava/lang/Class;)Ljava/lang/Class;
       7: areturn

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:Ljava/lang/Class;
       4: areturn

  public org.springframework.core.ResolvableType getResolvableType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: areturn

  public java.lang.Object getSource();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      11: invokevirtual #27                 // Method org/springframework/core/ResolvableType.getSource:()Ljava/lang/Object;
      14: goto          18
      17: aconst_null
      18: areturn

  public org.springframework.core.convert.TypeDescriptor narrow(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_1
       7: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: invokestatic  #29                 // Method org/springframework/core/ResolvableType.forType:(Ljava/lang/reflect/Type;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      17: astore_2
      18: new           #30                 // class org/springframework/core/convert/TypeDescriptor
      21: dup
      22: aload_2
      23: aconst_null
      24: aload_0
      25: getfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      28: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      31: areturn

  public org.springframework.core.convert.TypeDescriptor upcast(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: aload_0
       8: invokevirtual #25                 // Method getType:()Ljava/lang/Class;
      11: invokestatic  #32                 // Method org/springframework/util/Assert.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)V
      14: new           #30                 // class org/springframework/core/convert/TypeDescriptor
      17: dup
      18: aload_0
      19: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      22: aload_1
      23: invokevirtual #33                 // Method org/springframework/core/ResolvableType.as:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      26: aload_1
      27: aload_0
      28: getfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      31: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      34: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getType:()Ljava/lang/Class;
       4: invokestatic  #34                 // Method org/springframework/util/ClassUtils.getQualifiedName:(Ljava/lang/Class;)Ljava/lang/String;
       7: areturn

  public boolean isPrimitive();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #35                 // Method java/lang/Class.isPrimitive:()Z
       7: ireturn

  public java.lang.annotation.Annotation[] getAnnotations();
    Code:
       0: aload_0
       1: getfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
       4: areturn

  public boolean hasAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public <T extends java.lang.annotation.Annotation> T getAnnotation(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     43
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: invokeinterface #38,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      30: aload_1
      31: if_acmpne     37
      34: aload         5
      36: areturn
      37: iinc          4, 1
      40: goto          11
      43: aload_0
      44: invokevirtual #37                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      47: astore_2
      48: aload_2
      49: arraylength
      50: istore_3
      51: iconst_0
      52: istore        4
      54: iload         4
      56: iload_3
      57: if_icmpge     93
      60: aload_2
      61: iload         4
      63: aaload
      64: astore        5
      66: aload         5
      68: invokeinterface #38,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      73: aload_1
      74: invokestatic  #39                 // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      77: astore        6
      79: aload         6
      81: ifnull        87
      84: aload         6
      86: areturn
      87: iinc          4, 1
      90: goto          54
      93: aconst_null
      94: areturn

  public boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method getObjectType:()Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #40                 // Method getObjectType:()Ljava/lang/Class;
       8: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: istore_2
      12: iload_2
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: invokevirtual #42                 // Method isArray:()Z
      22: ifeq          44
      25: aload_1
      26: invokevirtual #42                 // Method isArray:()Z
      29: ifeq          44
      32: aload_0
      33: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      36: aload_1
      37: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      40: invokevirtual #44                 // Method isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
      43: ireturn
      44: aload_0
      45: invokevirtual #45                 // Method isCollection:()Z
      48: ifeq          71
      51: aload_1
      52: invokevirtual #45                 // Method isCollection:()Z
      55: ifeq          71
      58: aload_0
      59: aload_0
      60: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      63: aload_1
      64: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      67: invokespecial #46                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      70: ireturn
      71: aload_0
      72: invokevirtual #47                 // Method isMap:()Z
      75: ifeq          121
      78: aload_1
      79: invokevirtual #47                 // Method isMap:()Z
      82: ifeq          121
      85: aload_0
      86: aload_0
      87: invokevirtual #48                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      90: aload_1
      91: invokevirtual #48                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      94: invokespecial #46                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      97: ifeq          119
     100: aload_0
     101: aload_0
     102: invokevirtual #49                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     105: aload_1
     106: invokevirtual #49                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     109: invokespecial #46                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
     112: ifeq          119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: ireturn
     121: iconst_1
     122: ireturn

  private boolean isNestedAssignable(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: aload_2
      12: invokevirtual #44                 // Method isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
      15: ireturn

  public boolean isCollection();
    Code:
       0: ldc           #50                 // class java/util/Collection
       2: aload_0
       3: invokevirtual #25                 // Method getType:()Ljava/lang/Class;
       6: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  public boolean isArray();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #51                 // Method java/lang/Class.isArray:()Z
       7: ireturn

  public org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: invokevirtual #52                 // Method org/springframework/core/ResolvableType.isArray:()Z
       7: ifeq          30
      10: new           #30                 // class org/springframework/core/convert/TypeDescriptor
      13: dup
      14: aload_0
      15: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      18: invokevirtual #53                 // Method org/springframework/core/ResolvableType.getComponentType:()Lorg/springframework/core/ResolvableType;
      21: aconst_null
      22: aload_0
      23: getfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      26: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      29: areturn
      30: getstatic     #54                 // Field streamAvailable:Z
      33: ifeq          51
      36: aload_0
      37: getfield      #9                  // Field type:Ljava/lang/Class;
      40: invokestatic  #55                 // Method org/springframework/core/convert/TypeDescriptor$StreamDelegate.isStream:(Ljava/lang/Class;)Z
      43: ifeq          51
      46: aload_0
      47: invokestatic  #56                 // Method org/springframework/core/convert/TypeDescriptor$StreamDelegate.getStreamElementType:(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
      50: areturn
      51: aload_0
      52: aload_0
      53: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      56: invokevirtual #57                 // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
      59: iconst_1
      60: newarray       int
      62: dup
      63: iconst_0
      64: iconst_0
      65: iastore
      66: invokevirtual #58                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      69: invokestatic  #1                  // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      72: areturn

  public org.springframework.core.convert.TypeDescriptor elementTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       6: invokespecial #59                 // Method narrow:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn

  public boolean isMap();
    Code:
       0: ldc           #60                 // class java/util/Map
       2: aload_0
       3: invokevirtual #25                 // Method getType:()Ljava/lang/Class;
       6: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  public org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isMap:()Z
       4: ldc           #61                 // String Not a java.util.Map
       6: invokestatic  #62                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_0
      10: aload_0
      11: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: invokevirtual #63                 // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      17: iconst_1
      18: newarray       int
      20: dup
      21: iconst_0
      22: iconst_0
      23: iastore
      24: invokevirtual #58                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      27: invokestatic  #1                  // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      30: areturn

  public org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #48                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       6: invokespecial #59                 // Method narrow:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn

  public org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isMap:()Z
       4: ldc           #61                 // String Not a java.util.Map
       6: invokestatic  #62                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_0
      10: aload_0
      11: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: invokevirtual #63                 // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      17: iconst_1
      18: newarray       int
      20: dup
      21: iconst_0
      22: iconst_1
      23: iastore
      24: invokevirtual #58                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      27: invokestatic  #1                  // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      30: areturn

  public org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #49                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       6: invokespecial #59                 // Method narrow:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn

  private org.springframework.core.convert.TypeDescriptor narrow(java.lang.Object, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: ifnull        10
       4: aload_2
       5: aload_1
       6: invokevirtual #64                 // Method narrow:(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn
      10: aload_1
      11: ifnull        36
      14: new           #30                 // class org/springframework/core/convert/TypeDescriptor
      17: dup
      18: aload_0
      19: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      22: aload_1
      23: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: aload_0
      27: getfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      30: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      33: goto          37
      36: aconst_null
      37: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #30                 // class org/springframework/core/convert/TypeDescriptor
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #30                 // class org/springframework/core/convert/TypeDescriptor
      20: astore_2
      21: aload_0
      22: getfield      #9                  // Field type:Ljava/lang/Class;
      25: aload_2
      26: getfield      #9                  // Field type:Ljava/lang/Class;
      29: invokestatic  #65                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #37                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      41: arraylength
      42: aload_2
      43: invokevirtual #37                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      46: arraylength
      47: if_icmpeq     52
      50: iconst_0
      51: ireturn
      52: aload_0
      53: invokevirtual #37                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      56: astore_3
      57: aload_3
      58: arraylength
      59: istore        4
      61: iconst_0
      62: istore        5
      64: iload         5
      66: iload         4
      68: if_icmpge     106
      71: aload_3
      72: iload         5
      74: aaload
      75: astore        6
      77: aload         6
      79: aload_2
      80: aload         6
      82: invokeinterface #38,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      87: invokevirtual #36                 // Method getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      90: invokeinterface #66,  2           // InterfaceMethod java/lang/annotation/Annotation.equals:(Ljava/lang/Object;)Z
      95: ifne          100
      98: iconst_0
      99: ireturn
     100: iinc          5, 1
     103: goto          64
     106: aload_0
     107: invokevirtual #45                 // Method isCollection:()Z
     110: ifne          120
     113: aload_0
     114: invokevirtual #42                 // Method isArray:()Z
     117: ifeq          132
     120: aload_0
     121: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     124: aload_2
     125: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     128: invokestatic  #65                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     131: ireturn
     132: aload_0
     133: invokevirtual #47                 // Method isMap:()Z
     136: ifeq          173
     139: aload_0
     140: invokevirtual #48                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     143: aload_2
     144: invokevirtual #48                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     147: invokestatic  #65                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     150: ifeq          171
     153: aload_0
     154: invokevirtual #49                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     157: aload_2
     158: invokevirtual #49                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     161: invokestatic  #65                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     164: ifeq          171
     167: iconst_1
     168: goto          172
     171: iconst_0
     172: ireturn
     173: iconst_1
     174: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #67                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #68                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #69                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #37                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     62
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload_1
      32: ldc           #70                 // String @
      34: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload         5
      39: invokeinterface #38,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      44: invokevirtual #72                 // Method java/lang/Class.getName:()Ljava/lang/String;
      47: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: bipush        32
      52: invokevirtual #73                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      55: pop
      56: iinc          4, 1
      59: goto          19
      62: aload_1
      63: aload_0
      64: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      67: invokevirtual #74                 // Method org/springframework/core/ResolvableType.toString:()Ljava/lang/String;
      70: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: pop
      74: aload_1
      75: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: areturn

  public static org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #23                 // class java/lang/Object
       6: astore_0
       7: getstatic     #76                 // Field commonTypesCache:Ljava/util/Map;
      10: aload_0
      11: invokeinterface #77,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #30                 // class org/springframework/core/convert/TypeDescriptor
      19: astore_1
      20: aload_1
      21: ifnull        28
      24: aload_1
      25: goto          41
      28: new           #30                 // class org/springframework/core/convert/TypeDescriptor
      31: dup
      32: aload_0
      33: invokestatic  #78                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      36: aconst_null
      37: aconst_null
      38: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      41: areturn

  public static org.springframework.core.convert.TypeDescriptor collection(java.lang.Class<?>, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: ldc           #79                 // String collectionType must not be null
       3: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: ldc           #50                 // class java/util/Collection
       8: aload_0
       9: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifne          25
      15: new           #80                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #81                 // String collectionType must be a java.util.Collection
      21: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_1
      26: ifnull        36
      29: aload_1
      30: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      33: goto          37
      36: aconst_null
      37: astore_2
      38: new           #30                 // class org/springframework/core/convert/TypeDescriptor
      41: dup
      42: aload_0
      43: iconst_1
      44: anewarray     #83                 // class org/springframework/core/ResolvableType
      47: dup
      48: iconst_0
      49: aload_2
      50: aastore
      51: invokestatic  #84                 // Method org/springframework/core/ResolvableType.forClassWithGenerics:(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      54: aconst_null
      55: aconst_null
      56: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      59: areturn

  public static org.springframework.core.convert.TypeDescriptor map(java.lang.Class<?>, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: ldc           #60                 // class java/util/Map
       2: aload_0
       3: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifne          19
       9: new           #80                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #85                 // String mapType must be a java.util.Map
      15: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: ifnull        30
      23: aload_1
      24: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      27: goto          31
      30: aconst_null
      31: astore_3
      32: aload_2
      33: ifnull        43
      36: aload_2
      37: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      40: goto          44
      43: aconst_null
      44: astore        4
      46: new           #30                 // class org/springframework/core/convert/TypeDescriptor
      49: dup
      50: aload_0
      51: iconst_2
      52: anewarray     #83                 // class org/springframework/core/ResolvableType
      55: dup
      56: iconst_0
      57: aload_3
      58: aastore
      59: dup
      60: iconst_1
      61: aload         4
      63: aastore
      64: invokestatic  #84                 // Method org/springframework/core/ResolvableType.forClassWithGenerics:(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      67: aconst_null
      68: aconst_null
      69: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      72: areturn

  public static org.springframework.core.convert.TypeDescriptor array(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #30                 // class org/springframework/core/convert/TypeDescriptor
       9: dup
      10: aload_0
      11: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: invokestatic  #86                 // Method org/springframework/core/ResolvableType.forArrayComponent:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      17: aconst_null
      18: aload_0
      19: invokevirtual #37                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      22: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      25: areturn

  public static org.springframework.core.convert.TypeDescriptor nested(org.springframework.core.MethodParameter, int);
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method org/springframework/core/MethodParameter.getNestingLevel:()I
       4: iconst_1
       5: if_icmpeq     18
       8: new           #80                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #88                 // String MethodParameter nesting level must be 1: use the nestingLevel parameter to specify the desired nestingLevel for nested type traversal
      14: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: new           #30                 // class org/springframework/core/convert/TypeDescriptor
      21: dup
      22: aload_0
      23: invokespecial #89                 // Method "<init>":(Lorg/springframework/core/MethodParameter;)V
      26: iload_1
      27: invokestatic  #90                 // Method nested:(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;
      30: areturn

  public static org.springframework.core.convert.TypeDescriptor nested(java.lang.reflect.Field, int);
    Code:
       0: new           #30                 // class org/springframework/core/convert/TypeDescriptor
       3: dup
       4: aload_0
       5: invokespecial #91                 // Method "<init>":(Ljava/lang/reflect/Field;)V
       8: iload_1
       9: invokestatic  #90                 // Method nested:(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;
      12: areturn

  public static org.springframework.core.convert.TypeDescriptor nested(org.springframework.core.convert.Property, int);
    Code:
       0: new           #30                 // class org/springframework/core/convert/TypeDescriptor
       3: dup
       4: aload_0
       5: invokespecial #92                 // Method "<init>":(Lorg/springframework/core/convert/Property;)V
       8: iload_1
       9: invokestatic  #90                 // Method nested:(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;
      12: areturn

  public static org.springframework.core.convert.TypeDescriptor forObject(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokestatic  #93                 // Method valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      11: goto          15
      14: aconst_null
      15: areturn

  private static org.springframework.core.convert.TypeDescriptor nested(org.springframework.core.convert.TypeDescriptor, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_1
       9: if_icmpge     36
      12: ldc           #23                 // class java/lang/Object
      14: aload_2
      15: invokevirtual #94                 // Method org/springframework/core/ResolvableType.getType:()Ljava/lang/reflect/Type;
      18: if_acmpne     24
      21: goto          30
      24: aload_2
      25: iconst_2
      26: invokevirtual #95                 // Method org/springframework/core/ResolvableType.getNested:(I)Lorg/springframework/core/ResolvableType;
      29: astore_2
      30: iinc          3, 1
      33: goto          7
      36: aload_2
      37: getstatic     #96                 // Field org/springframework/core/ResolvableType.NONE:Lorg/springframework/core/ResolvableType;
      40: if_acmpne     45
      43: aconst_null
      44: areturn
      45: aload_0
      46: aload_2
      47: invokestatic  #1                  // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      50: areturn

  private static org.springframework.core.convert.TypeDescriptor getRelatedIfResolvable(org.springframework.core.convert.TypeDescriptor, org.springframework.core.ResolvableType);
    Code:
       0: aload_1
       1: invokevirtual #97                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: new           #30                 // class org/springframework/core/convert/TypeDescriptor
      12: dup
      13: aload_1
      14: aconst_null
      15: aload_0
      16: getfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      19: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      22: areturn

  static org.springframework.core.ResolvableType access$000(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: areturn

  static org.springframework.core.convert.TypeDescriptor access$100(org.springframework.core.convert.TypeDescriptor, org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
       5: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #98                 // class java/lang/annotation/Annotation
       4: putstatic     #24                 // Field EMPTY_ANNOTATION_ARRAY:[Ljava/lang/annotation/Annotation;
       7: ldc           #99                 // String java.util.stream.Stream
       9: ldc           #30                 // class org/springframework/core/convert/TypeDescriptor
      11: invokevirtual #100                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      14: invokestatic  #101                // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      17: putstatic     #54                 // Field streamAvailable:Z
      20: new           #102                // class java/util/HashMap
      23: dup
      24: bipush        18
      26: invokespecial #103                // Method java/util/HashMap."<init>":(I)V
      29: putstatic     #76                 // Field commonTypesCache:Ljava/util/Map;
      32: bipush        18
      34: anewarray     #104                // class java/lang/Class
      37: dup
      38: iconst_0
      39: getstatic     #105                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      42: aastore
      43: dup
      44: iconst_1
      45: ldc           #106                // class java/lang/Boolean
      47: aastore
      48: dup
      49: iconst_2
      50: getstatic     #107                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      53: aastore
      54: dup
      55: iconst_3
      56: ldc           #108                // class java/lang/Byte
      58: aastore
      59: dup
      60: iconst_4
      61: getstatic     #109                // Field java/lang/Character.TYPE:Ljava/lang/Class;
      64: aastore
      65: dup
      66: iconst_5
      67: ldc           #110                // class java/lang/Character
      69: aastore
      70: dup
      71: bipush        6
      73: getstatic     #111                // Field java/lang/Double.TYPE:Ljava/lang/Class;
      76: aastore
      77: dup
      78: bipush        7
      80: ldc           #112                // class java/lang/Double
      82: aastore
      83: dup
      84: bipush        8
      86: getstatic     #113                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      89: aastore
      90: dup
      91: bipush        9
      93: ldc           #114                // class java/lang/Integer
      95: aastore
      96: dup
      97: bipush        10
      99: getstatic     #115                // Field java/lang/Long.TYPE:Ljava/lang/Class;
     102: aastore
     103: dup
     104: bipush        11
     106: ldc           #116                // class java/lang/Long
     108: aastore
     109: dup
     110: bipush        12
     112: getstatic     #117                // Field java/lang/Float.TYPE:Ljava/lang/Class;
     115: aastore
     116: dup
     117: bipush        13
     119: ldc           #118                // class java/lang/Float
     121: aastore
     122: dup
     123: bipush        14
     125: getstatic     #119                // Field java/lang/Short.TYPE:Ljava/lang/Class;
     128: aastore
     129: dup
     130: bipush        15
     132: ldc           #120                // class java/lang/Short
     134: aastore
     135: dup
     136: bipush        16
     138: ldc           #121                // class java/lang/String
     140: aastore
     141: dup
     142: bipush        17
     144: ldc           #23                 // class java/lang/Object
     146: aastore
     147: putstatic     #122                // Field CACHED_COMMON_TYPES:[Ljava/lang/Class;
     150: getstatic     #122                // Field CACHED_COMMON_TYPES:[Ljava/lang/Class;
     153: astore_0
     154: aload_0
     155: arraylength
     156: istore_1
     157: iconst_0
     158: istore_2
     159: iload_2
     160: iload_1
     161: if_icmpge     188
     164: aload_0
     165: iload_2
     166: aaload
     167: astore_3
     168: getstatic     #76                 // Field commonTypesCache:Ljava/util/Map;
     171: aload_3
     172: aload_3
     173: invokestatic  #93                 // Method valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
     176: invokeinterface #123,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     181: pop
     182: iinc          2, 1
     185: goto          159
     188: return
}
