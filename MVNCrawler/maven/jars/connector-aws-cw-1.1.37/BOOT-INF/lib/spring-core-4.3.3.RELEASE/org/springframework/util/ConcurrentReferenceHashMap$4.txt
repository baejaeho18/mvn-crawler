Compiled from "ConcurrentReferenceHashMap.java"
class org.springframework.util.ConcurrentReferenceHashMap$4 extends org.springframework.util.ConcurrentReferenceHashMap<K, V>.Task<java.lang.Boolean> {
  final java.lang.Object val$oldValue;

  final java.lang.Object val$newValue;

  final org.springframework.util.ConcurrentReferenceHashMap this$0;

  org.springframework.util.ConcurrentReferenceHashMap$4(org.springframework.util.ConcurrentReferenceHashMap, org.springframework.util.ConcurrentReferenceHashMap$TaskOption..., java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$oldValue:Ljava/lang/Object;
      10: aload_0
      11: aload         4
      13: putfield      #3                  // Field val$newValue:Ljava/lang/Object;
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokespecial #4                  // Method org/springframework/util/ConcurrentReferenceHashMap$Task."<init>":(Lorg/springframework/util/ConcurrentReferenceHashMap;[Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)V
      22: return

  protected java.lang.Boolean execute(org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>, org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V>);
    Code:
       0: aload_2
       1: ifnull        32
       4: aload_2
       5: invokevirtual #5                  // Method org/springframework/util/ConcurrentReferenceHashMap$Entry.getValue:()Ljava/lang/Object;
       8: aload_0
       9: getfield      #2                  // Field val$oldValue:Ljava/lang/Object;
      12: invokestatic  #6                  // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      15: ifeq          32
      18: aload_2
      19: aload_0
      20: getfield      #3                  // Field val$newValue:Ljava/lang/Object;
      23: invokevirtual #7                  // Method org/springframework/util/ConcurrentReferenceHashMap$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: iconst_1
      28: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      31: areturn
      32: iconst_0
      33: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      36: areturn

  protected java.lang.Object execute(org.springframework.util.ConcurrentReferenceHashMap$Reference, org.springframework.util.ConcurrentReferenceHashMap$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #9                  // Method execute:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;)Ljava/lang/Boolean;
       6: areturn
}
