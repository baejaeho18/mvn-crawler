Compiled from "MutablePropertySources.java"
public class org.springframework.core.env.MutablePropertySources implements org.springframework.core.env.PropertySources {
  private final org.apache.commons.logging.Log logger;

  private final java.util.List<org.springframework.core.env.PropertySource<?>> propertySourceList;

  public org.springframework.core.env.MutablePropertySources();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field propertySourceList:Ljava/util/List;
      15: aload_0
      16: aload_0
      17: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokestatic  #6                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      23: putfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      26: return

  public org.springframework.core.env.MutablePropertySources(org.springframework.core.env.PropertySources);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method "<init>":()V
       4: aload_1
       5: invokeinterface #9,  1            // InterfaceMethod org/springframework/core/env/PropertySources.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          38
      20: aload_2
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #12                 // class org/springframework/core/env/PropertySource
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokevirtual #13                 // Method addLast:(Lorg/springframework/core/env/PropertySource;)V
      35: goto          11
      38: return

  org.springframework.core.env.MutablePropertySources(org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field propertySourceList:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      20: return

  public boolean contains(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: aload_1
       5: invokestatic  #14                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       8: invokeinterface #15,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      13: ireturn

  public org.springframework.core.env.PropertySource<?> get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: aload_1
       5: invokestatic  #14                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       8: invokeinterface #16,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      13: istore_2
      14: iload_2
      15: iconst_m1
      16: if_icmpeq     35
      19: aload_0
      20: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      23: iload_2
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      29: checkcast     #12                 // class org/springframework/core/env/PropertySource
      32: goto          36
      35: aconst_null
      36: areturn

  public java.util.Iterator<org.springframework.core.env.PropertySource<?>> iterator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public void addFirst(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          37
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #20                 // String Adding [%s] PropertySource with highest search precedence
      18: iconst_1
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      28: aastore
      29: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      37: aload_0
      38: aload_1
      39: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      42: aload_0
      43: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      46: iconst_0
      47: aload_1
      48: invokeinterface #26,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      53: return

  public void addLast(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          37
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #27                 // String Adding [%s] PropertySource with lowest search precedence
      18: iconst_1
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      28: aastore
      29: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      37: aload_0
      38: aload_1
      39: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      42: aload_0
      43: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      46: aload_1
      47: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: return

  public void addBefore(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          41
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #29                 // String Adding [%s] PropertySource with search precedence immediately higher than [%s]
      18: iconst_2
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_2
      25: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_1
      32: aastore
      33: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokevirtual #30                 // Method assertLegalRelativeAddition:(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
      47: aload_0
      48: aload_2
      49: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      52: aload_0
      53: aload_1
      54: invokespecial #31                 // Method assertPresentAndGetIndex:(Ljava/lang/String;)I
      57: istore_3
      58: aload_0
      59: iload_3
      60: aload_2
      61: invokespecial #32                 // Method addAtIndex:(ILorg/springframework/core/env/PropertySource;)V
      64: return

  public void addAfter(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          41
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #33                 // String Adding [%s] PropertySource with search precedence immediately lower than [%s]
      18: iconst_2
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_2
      25: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_1
      32: aastore
      33: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokevirtual #30                 // Method assertLegalRelativeAddition:(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
      47: aload_0
      48: aload_2
      49: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      52: aload_0
      53: aload_1
      54: invokespecial #31                 // Method assertPresentAndGetIndex:(Ljava/lang/String;)I
      57: istore_3
      58: aload_0
      59: iload_3
      60: iconst_1
      61: iadd
      62: aload_2
      63: invokespecial #32                 // Method addAtIndex:(ILorg/springframework/core/env/PropertySource;)V
      66: return

  public int precedenceOf(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      10: ireturn

  public org.springframework.core.env.PropertySource<?> remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          34
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #34                 // String Removing [%s] PropertySource
      18: iconst_1
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      38: aload_1
      39: invokestatic  #14                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      42: invokeinterface #16,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      47: istore_2
      48: iload_2
      49: iconst_m1
      50: if_icmpeq     69
      53: aload_0
      54: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      57: iload_2
      58: invokeinterface #35,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      63: checkcast     #12                 // class org/springframework/core/env/PropertySource
      66: goto          70
      69: aconst_null
      70: areturn

  public void replace(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          41
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #36                 // String Replacing [%s] PropertySource with [%s]
      18: iconst_2
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: dup
      27: iconst_1
      28: aload_2
      29: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      32: aastore
      33: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: invokespecial #31                 // Method assertPresentAndGetIndex:(Ljava/lang/String;)I
      46: istore_3
      47: aload_0
      48: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      51: iload_3
      52: aload_2
      53: invokeinterface #37,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method size:()I
       4: anewarray     #40                 // class java/lang/String
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: invokevirtual #39                 // Method size:()I
      15: if_icmpge     43
      18: aload_1
      19: iload_2
      20: aload_0
      21: getfield      #4                  // Field propertySourceList:Ljava/util/List;
      24: iload_2
      25: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      30: checkcast     #12                 // class org/springframework/core/env/PropertySource
      33: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      36: aastore
      37: iinc          2, 1
      40: goto          10
      43: ldc           #41                 // String [%s]
      45: iconst_1
      46: anewarray     #21                 // class java/lang/Object
      49: dup
      50: iconst_0
      51: aload_1
      52: invokestatic  #42                 // Method org/springframework/util/StringUtils.arrayToCommaDelimitedString:([Ljava/lang/Object;)Ljava/lang/String;
      55: aastore
      56: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      59: areturn

  protected void assertLegalRelativeAddition(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_2
       1: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
       4: astore_3
       5: aload_1
       6: aload_3
       7: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          34
      13: new           #44                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #45                 // String PropertySource named [%s] cannot be added relative to itself
      19: iconst_1
      20: anewarray     #21                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_3
      26: aastore
      27: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: return

  protected void removeIfPresent(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private void addAtIndex(int, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
       5: aload_0
       6: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       9: iload_1
      10: aload_2
      11: invokeinterface #26,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      16: return

  private int assertPresentAndGetIndex(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/List;
       4: aload_1
       5: invokestatic  #14                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       8: invokeinterface #16,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      13: istore_2
      14: iload_2
      15: iconst_m1
      16: if_icmpne     40
      19: new           #44                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #48                 // String PropertySource named [%s] does not exist
      25: iconst_1
      26: anewarray     #21                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_1
      32: aastore
      33: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iload_2
      41: ireturn
}
