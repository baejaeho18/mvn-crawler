Compiled from "AbstractClassGenerator.java"
public abstract class org.springframework.cglib.core.AbstractClassGenerator<T> implements org.springframework.cglib.core.ClassGenerator {
  private static final java.lang.ThreadLocal CURRENT;

  private static volatile java.util.Map<java.lang.ClassLoader, org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData> CACHE;

  private org.springframework.cglib.core.GeneratorStrategy strategy;

  private org.springframework.cglib.core.NamingPolicy namingPolicy;

  private org.springframework.cglib.core.AbstractClassGenerator$Source source;

  private java.lang.ClassLoader classLoader;

  private java.lang.String namePrefix;

  private java.lang.Object key;

  private boolean useCache;

  private java.lang.String className;

  private boolean attemptLoad;

  protected T wrapCachedClass(java.lang.Class);
    Code:
       0: new           #39                 // class java/lang/ref/WeakReference
       3: dup
       4: aload_1
       5: invokespecial #43                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
       8: areturn

  protected java.lang.Object unwrapCachedValue(T);
    Code:
       0: aload_1
       1: checkcast     #39                 // class java/lang/ref/WeakReference
       4: invokevirtual #54                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: areturn

  protected org.springframework.cglib.core.AbstractClassGenerator(org.springframework.cglib.core.AbstractClassGenerator$Source);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #66                 // Field org/springframework/cglib/core/DefaultGeneratorStrategy.INSTANCE:Lorg/springframework/cglib/core/DefaultGeneratorStrategy;
       8: putfield      #68                 // Field strategy:Lorg/springframework/cglib/core/GeneratorStrategy;
      11: aload_0
      12: getstatic     #73                 // Field org/springframework/cglib/core/DefaultNamingPolicy.INSTANCE:Lorg/springframework/cglib/core/DefaultNamingPolicy;
      15: putfield      #75                 // Field namingPolicy:Lorg/springframework/cglib/core/NamingPolicy;
      18: aload_0
      19: iconst_1
      20: putfield      #77                 // Field useCache:Z
      23: aload_0
      24: aload_1
      25: putfield      #79                 // Field source:Lorg/springframework/cglib/core/AbstractClassGenerator$Source;
      28: return

  protected void setNamePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field namePrefix:Ljava/lang/String;
       5: return

  protected final java.lang.String getClassName();
    Code:
       0: aload_0
       1: getfield      #87                 // Field className:Ljava/lang/String;
       4: areturn

  private void setClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field className:Ljava/lang/String;
       5: return

  private java.lang.String generateClassName(org.springframework.cglib.core.Predicate);
    Code:
       0: aload_0
       1: getfield      #75                 // Field namingPolicy:Lorg/springframework/cglib/core/NamingPolicy;
       4: aload_0
       5: getfield      #83                 // Field namePrefix:Ljava/lang/String;
       8: aload_0
       9: getfield      #79                 // Field source:Lorg/springframework/cglib/core/AbstractClassGenerator$Source;
      12: getfield      #93                 // Field org/springframework/cglib/core/AbstractClassGenerator$Source.name:Ljava/lang/String;
      15: aload_0
      16: getfield      #95                 // Field key:Ljava/lang/Object;
      19: aload_1
      20: invokeinterface #100,  5          // InterfaceMethod org/springframework/cglib/core/NamingPolicy.getClassName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cglib/core/Predicate;)Ljava/lang/String;
      25: areturn

  public void setClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #106                // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public void setNamingPolicy(org.springframework.cglib.core.NamingPolicy);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #73                 // Field org/springframework/cglib/core/DefaultNamingPolicy.INSTANCE:Lorg/springframework/cglib/core/DefaultNamingPolicy;
       7: astore_1
       8: aload_0
       9: aload_1
      10: putfield      #75                 // Field namingPolicy:Lorg/springframework/cglib/core/NamingPolicy;
      13: return

  public org.springframework.cglib.core.NamingPolicy getNamingPolicy();
    Code:
       0: aload_0
       1: getfield      #75                 // Field namingPolicy:Lorg/springframework/cglib/core/NamingPolicy;
       4: areturn

  public void setUseCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #77                 // Field useCache:Z
       5: return

  public boolean getUseCache();
    Code:
       0: aload_0
       1: getfield      #77                 // Field useCache:Z
       4: ireturn

  public void setAttemptLoad(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #117                // Field attemptLoad:Z
       5: return

  public boolean getAttemptLoad();
    Code:
       0: aload_0
       1: getfield      #117                // Field attemptLoad:Z
       4: ireturn

  public void setStrategy(org.springframework.cglib.core.GeneratorStrategy);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #66                 // Field org/springframework/cglib/core/DefaultGeneratorStrategy.INSTANCE:Lorg/springframework/cglib/core/DefaultGeneratorStrategy;
       7: astore_1
       8: aload_0
       9: aload_1
      10: putfield      #68                 // Field strategy:Lorg/springframework/cglib/core/GeneratorStrategy;
      13: return

  public org.springframework.cglib.core.GeneratorStrategy getStrategy();
    Code:
       0: aload_0
       1: getfield      #68                 // Field strategy:Lorg/springframework/cglib/core/GeneratorStrategy;
       4: areturn

  public static org.springframework.cglib.core.AbstractClassGenerator getCurrent();
    Code:
       0: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
       3: invokevirtual #129                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #2                  // class org/springframework/cglib/core/AbstractClassGenerator
       9: areturn

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #106                // Field classLoader:Ljava/lang/ClassLoader;
       4: astore_1
       5: aload_1
       6: ifnonnull     14
       9: aload_0
      10: invokevirtual #134                // Method getDefaultClassLoader:()Ljava/lang/ClassLoader;
      13: astore_1
      14: aload_1
      15: ifnonnull     26
      18: aload_0
      19: invokevirtual #138                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #142                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      25: astore_1
      26: aload_1
      27: ifnonnull     37
      30: invokestatic  #148                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      33: invokevirtual #151                // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      36: astore_1
      37: aload_1
      38: ifnonnull     51
      41: new           #153                // class java/lang/IllegalStateException
      44: dup
      45: ldc           #155                // String Cannot determine classloader
      47: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_1
      52: areturn

  protected abstract java.lang.ClassLoader getDefaultClassLoader();

  protected java.security.ProtectionDomain getProtectionDomain();
    Code:
       0: aconst_null
       1: areturn

  protected java.lang.Object create(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #168                // Method getClassLoader:()Ljava/lang/ClassLoader;
       4: astore_2
       5: getstatic     #170                // Field CACHE:Ljava/util/Map;
       8: astore_3
       9: aload_3
      10: aload_2
      11: invokeinterface #174,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #13                 // class org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData
      19: astore        4
      21: aload         4
      23: ifnonnull     103
      26: ldc           #2                  // class org/springframework/cglib/core/AbstractClassGenerator
      28: dup
      29: astore        5
      31: monitorenter
      32: getstatic     #170                // Field CACHE:Ljava/util/Map;
      35: astore_3
      36: aload_3
      37: aload_2
      38: invokeinterface #174,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #13                 // class org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData
      46: astore        4
      48: aload         4
      50: ifnonnull     89
      53: new           #176                // class java/util/WeakHashMap
      56: dup
      57: aload_3
      58: invokespecial #179                // Method java/util/WeakHashMap."<init>":(Ljava/util/Map;)V
      61: astore        6
      63: new           #13                 // class org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData
      66: dup
      67: aload_2
      68: invokespecial #181                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData."<init>":(Ljava/lang/ClassLoader;)V
      71: astore        4
      73: aload         6
      75: aload_2
      76: aload         4
      78: invokeinterface #185,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload         6
      86: putstatic     #170                // Field CACHE:Ljava/util/Map;
      89: aload         5
      91: monitorexit
      92: goto          103
      95: astore        7
      97: aload         5
      99: monitorexit
     100: aload         7
     102: athrow
     103: aload_0
     104: aload_1
     105: putfield      #95                 // Field key:Ljava/lang/Object;
     108: aload         4
     110: aload_0
     111: aload_0
     112: invokevirtual #187                // Method getUseCache:()Z
     115: invokevirtual #190                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData.get:(Lorg/springframework/cglib/core/AbstractClassGenerator;Z)Ljava/lang/Object;
     118: astore        5
     120: aload         5
     122: instanceof    #140                // class java/lang/Class
     125: ifeq          138
     128: aload_0
     129: aload         5
     131: checkcast     #140                // class java/lang/Class
     134: invokevirtual #193                // Method firstInstance:(Ljava/lang/Class;)Ljava/lang/Object;
     137: areturn
     138: aload_0
     139: aload         5
     141: invokevirtual #196                // Method nextInstance:(Ljava/lang/Object;)Ljava/lang/Object;
     144: areturn
     145: astore_2
     146: aload_2
     147: athrow
     148: astore_2
     149: aload_2
     150: athrow
     151: astore_2
     152: new           #198                // class org/springframework/cglib/core/CodeGenerationException
     155: dup
     156: aload_2
     157: invokespecial #201                // Method org/springframework/cglib/core/CodeGenerationException."<init>":(Ljava/lang/Throwable;)V
     160: athrow
    Exception table:
       from    to  target type
          32    92    95   any
          95   100    95   any
           0   137   145   Class java/lang/RuntimeException
         138   144   145   Class java/lang/RuntimeException
           0   137   148   Class java/lang/Error
         138   144   148   Class java/lang/Error
           0   137   151   Class java/lang/Exception
         138   144   151   Class java/lang/Exception

  protected java.lang.Class generate(org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData);
    Code:
       0: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
       3: invokevirtual #129                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: astore_2
       7: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
      10: aload_0
      11: invokevirtual #218                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      14: aload_1
      15: invokevirtual #219                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData.getClassLoader:()Ljava/lang/ClassLoader;
      18: astore_3
      19: aload_3
      20: ifnonnull     63
      23: new           #153                // class java/lang/IllegalStateException
      26: dup
      27: new           #221                // class java/lang/StringBuilder
      30: dup
      31: invokespecial #222                // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #224                // String ClassLoader is null while trying to define class
      36: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #230                // Method getClassName:()Ljava/lang/String;
      43: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #232                // String . It seems that the loader has been expired from a weak reference somehow.
      48: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #234                // String Please file an issue at cglib\'s issue tracker.
      53: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_3
      64: dup
      65: astore        4
      67: monitorenter
      68: aload_0
      69: aload_1
      70: invokevirtual #241                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData.getUniqueNamePredicate:()Lorg/springframework/cglib/core/Predicate;
      73: invokespecial #243                // Method generateClassName:(Lorg/springframework/cglib/core/Predicate;)Ljava/lang/String;
      76: astore        5
      78: aload_1
      79: aload         5
      81: invokevirtual #246                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData.reserveName:(Ljava/lang/String;)V
      84: aload_0
      85: aload         5
      87: invokespecial #248                // Method setClassName:(Ljava/lang/String;)V
      90: aload         4
      92: monitorexit
      93: goto          104
      96: astore        6
      98: aload         4
     100: monitorexit
     101: aload         6
     103: athrow
     104: aload_0
     105: getfield      #117                // Field attemptLoad:Z
     108: ifeq          137
     111: aload_3
     112: aload_0
     113: invokevirtual #230                // Method getClassName:()Ljava/lang/String;
     116: invokevirtual #254                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
     119: astore        7
     121: aload         7
     123: astore        4
     125: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
     128: aload_2
     129: invokevirtual #218                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     132: aload         4
     134: areturn
     135: astore        4
     137: aload_0
     138: getfield      #68                 // Field strategy:Lorg/springframework/cglib/core/GeneratorStrategy;
     141: aload_0
     142: invokeinterface #259,  2          // InterfaceMethod org/springframework/cglib/core/GeneratorStrategy.generate:(Lorg/springframework/cglib/core/ClassGenerator;)[B
     147: astore        4
     149: new           #261                // class org/springframework/asm/ClassReader
     152: dup
     153: aload         4
     155: invokespecial #264                // Method org/springframework/asm/ClassReader."<init>":([B)V
     158: invokestatic  #269                // Method org/springframework/cglib/core/ClassNameReader.getClassName:(Lorg/springframework/asm/ClassReader;)Ljava/lang/String;
     161: astore        5
     163: aload_0
     164: invokevirtual #271                // Method getProtectionDomain:()Ljava/security/ProtectionDomain;
     167: astore        6
     169: aload_3
     170: dup
     171: astore        8
     173: monitorenter
     174: aload         6
     176: ifnonnull     192
     179: aload         5
     181: aload         4
     183: aload_3
     184: invokestatic  #277                // Method org/springframework/cglib/core/ReflectUtils.defineClass:(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;
     187: astore        7
     189: goto          204
     192: aload         5
     194: aload         4
     196: aload_3
     197: aload         6
     199: invokestatic  #280                // Method org/springframework/cglib/core/ReflectUtils.defineClass:(Ljava/lang/String;[BLjava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;
     202: astore        7
     204: aload         8
     206: monitorexit
     207: goto          218
     210: astore        9
     212: aload         8
     214: monitorexit
     215: aload         9
     217: athrow
     218: aload         7
     220: astore        8
     222: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
     225: aload_2
     226: invokevirtual #218                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     229: aload         8
     231: areturn
     232: astore_3
     233: aload_3
     234: athrow
     235: astore_3
     236: aload_3
     237: athrow
     238: astore_3
     239: new           #198                // class org/springframework/cglib/core/CodeGenerationException
     242: dup
     243: aload_3
     244: invokespecial #201                // Method org/springframework/cglib/core/CodeGenerationException."<init>":(Ljava/lang/Throwable;)V
     247: athrow
     248: astore        10
     250: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
     253: aload_2
     254: invokevirtual #218                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     257: aload         10
     259: athrow
    Exception table:
       from    to  target type
          68    93    96   any
          96   101    96   any
         111   125   135   Class java/lang/ClassNotFoundException
         174   207   210   any
         210   215   210   any
          14   125   232   Class java/lang/RuntimeException
         135   222   232   Class java/lang/RuntimeException
          14   125   235   Class java/lang/Error
         135   222   235   Class java/lang/Error
          14   125   238   Class java/lang/Exception
         135   222   238   Class java/lang/Exception
          14   125   248   any
         135   222   248   any
         232   250   248   any

  protected abstract java.lang.Object firstInstance(java.lang.Class) throws java.lang.Exception;

  protected abstract java.lang.Object nextInstance(java.lang.Object) throws java.lang.Exception;

  static java.lang.Object access$100(org.springframework.cglib.core.AbstractClassGenerator);
    Code:
       0: aload_0
       1: getfield      #95                 // Field key:Ljava/lang/Object;
       4: areturn

  static {};
    Code:
       0: new           #128                // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #291                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
      10: new           #176                // class java/util/WeakHashMap
      13: dup
      14: invokespecial #292                // Method java/util/WeakHashMap."<init>":()V
      17: putstatic     #170                // Field CACHE:Ljava/util/Map;
      20: return
}
