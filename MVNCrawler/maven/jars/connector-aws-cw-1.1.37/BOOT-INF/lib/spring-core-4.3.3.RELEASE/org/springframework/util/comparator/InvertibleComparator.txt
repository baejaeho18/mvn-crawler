Compiled from "InvertibleComparator.java"
public class org.springframework.util.comparator.InvertibleComparator<T> implements java.util.Comparator<T>, java.io.Serializable {
  private final java.util.Comparator<T> comparator;

  private boolean ascending;

  public org.springframework.util.comparator.InvertibleComparator(java.util.Comparator<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field ascending:Z
       9: aload_1
      10: ldc           #3                  // String Comparator must not be null
      12: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field comparator:Ljava/util/Comparator;
      20: return

  public org.springframework.util.comparator.InvertibleComparator(java.util.Comparator<T>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field ascending:Z
       9: aload_1
      10: ldc           #3                  // String Comparator must not be null
      12: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field comparator:Ljava/util/Comparator;
      20: aload_0
      21: iload_2
      22: invokevirtual #6                  // Method setAscending:(Z)V
      25: return

  public void setAscending(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ascending:Z
       5: return

  public boolean isAscending();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ascending:Z
       4: ireturn

  public void invertOrder();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field ascending:Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putfield      #2                  // Field ascending:Z
      16: return

  public int compare(T, T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field comparator:Ljava/util/Comparator;
       4: aload_1
       5: aload_2
       6: invokeinterface #7,  3            // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      11: istore_3
      12: iload_3
      13: ifeq          41
      16: aload_0
      17: getfield      #2                  // Field ascending:Z
      20: ifne          39
      23: ldc           #9                  // int -2147483648
      25: iload_3
      26: if_icmpne     35
      29: ldc           #10                 // int 2147483647
      31: istore_3
      32: goto          39
      35: iload_3
      36: iconst_m1
      37: imul
      38: istore_3
      39: iload_3
      40: ireturn
      41: iconst_0
      42: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #11                 // class org/springframework/util/comparator/InvertibleComparator
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #11                 // class org/springframework/util/comparator/InvertibleComparator
      20: astore_2
      21: aload_0
      22: getfield      #5                  // Field comparator:Ljava/util/Comparator;
      25: aload_2
      26: getfield      #5                  // Field comparator:Ljava/util/Comparator;
      29: invokeinterface #12,  2           // InterfaceMethod java/util/Comparator.equals:(Ljava/lang/Object;)Z
      34: ifeq          52
      37: aload_0
      38: getfield      #2                  // Field ascending:Z
      41: aload_2
      42: getfield      #2                  // Field ascending:Z
      45: if_icmpne     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field comparator:Ljava/util/Comparator;
       4: invokevirtual #13                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #16                 // String InvertibleComparator: [
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field comparator:Ljava/util/Comparator;
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #19                 // String ]; ascending=
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field ascending:Z
      28: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      31: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn
}
