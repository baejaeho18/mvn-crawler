Compiled from "ObjectToOptionalConverter.java"
final class org.springframework.core.convert.support.ObjectToOptionalConverter implements org.springframework.core.convert.converter.ConditionalGenericConverter {
  private final org.springframework.core.convert.ConversionService conversionService;

  public org.springframework.core.convert.support.ObjectToOptionalConverter(org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       9: return

  public java.util.Set<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair> getConvertibleTypes();
    Code:
       0: new           #3                  // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
       3: dup
       4: ldc           #4                  // class java/lang/Object
       6: ldc           #5                  // class java/util/Optional
       8: invokespecial #6                  // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      11: invokestatic  #7                  // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      14: areturn

  public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method org/springframework/core/convert/TypeDescriptor.getResolvableType:()Lorg/springframework/core/ResolvableType;
       4: ifnull        26
       7: aload_0
       8: getfield      #2                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      11: aload_1
      12: new           #9                  // class org/springframework/core/convert/support/ObjectToOptionalConverter$GenericTypeDescriptor
      15: dup
      16: aload_2
      17: invokespecial #10                 // Method org/springframework/core/convert/support/ObjectToOptionalConverter$GenericTypeDescriptor."<init>":(Lorg/springframework/core/convert/TypeDescriptor;)V
      20: invokeinterface #11,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.canConvert:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      25: ireturn
      26: iconst_1
      27: ireturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #12                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       7: areturn
       8: aload_1
       9: instanceof    #5                  // class java/util/Optional
      12: ifeq          17
      15: aload_1
      16: areturn
      17: aload_3
      18: invokevirtual #8                  // Method org/springframework/core/convert/TypeDescriptor.getResolvableType:()Lorg/springframework/core/ResolvableType;
      21: ifnonnull     29
      24: aload_1
      25: invokestatic  #13                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      28: areturn
      29: aload_0
      30: getfield      #2                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      33: aload_1
      34: aload_2
      35: new           #9                  // class org/springframework/core/convert/support/ObjectToOptionalConverter$GenericTypeDescriptor
      38: dup
      39: aload_3
      40: invokespecial #10                 // Method org/springframework/core/convert/support/ObjectToOptionalConverter$GenericTypeDescriptor."<init>":(Lorg/springframework/core/convert/TypeDescriptor;)V
      43: invokeinterface #14,  4           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      48: astore        4
      50: aload         4
      52: invokestatic  #15                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      55: areturn
}
