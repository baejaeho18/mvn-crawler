Compiled from "ServerWebSocketContainer.java"
class io.undertow.websockets.jsr.ServerWebSocketContainer$ClientNegotiation extends io.undertow.websockets.client.WebSocketClientNegotiation {
  private final javax.websocket.ClientEndpointConfig config;

  final io.undertow.websockets.jsr.ServerWebSocketContainer this$0;

  io.undertow.websockets.jsr.ServerWebSocketContainer$ClientNegotiation(java.util.List<java.lang.String>, java.util.List<io.undertow.websockets.WebSocketExtension>, javax.websocket.ClientEndpointConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
       5: aload_0
       6: aload_2
       7: aload_3
       8: invokespecial #2                  // Method io/undertow/websockets/client/WebSocketClientNegotiation."<init>":(Ljava/util/List;Ljava/util/List;)V
      11: aload_0
      12: aload         4
      14: putfield      #3                  // Field config:Ljavax/websocket/ClientEndpointConfig;
      17: return

  public void afterRequest(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field config:Ljavax/websocket/ClientEndpointConfig;
       4: invokeinterface #4,  1            // InterfaceMethod javax/websocket/ClientEndpointConfig.getConfigurator:()Ljavax/websocket/ClientEndpointConfig$Configurator;
       9: astore_2
      10: aload_2
      11: ifnull        117
      14: new           #5                  // class java/util/TreeMap
      17: dup
      18: getstatic     #6                  // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
      21: invokespecial #7                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      24: astore_3
      25: aload_1
      26: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore        4
      38: aload         4
      40: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          104
      48: aload         4
      50: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #12                 // class java/util/Map$Entry
      58: astore        5
      60: new           #13                 // class java/util/ArrayList
      63: dup
      64: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      67: astore        6
      69: aload         6
      71: aload         5
      73: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: checkcast     #16                 // class java/util/Collection
      81: invokevirtual #17                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      84: pop
      85: aload_3
      86: aload         5
      88: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      93: aload         6
      95: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: goto          38
     104: aload_2
     105: new           #20                 // class io/undertow/websockets/jsr/ServerWebSocketContainer$ClientNegotiation$1
     108: dup
     109: aload_0
     110: aload_3
     111: invokespecial #21                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer$ClientNegotiation$1."<init>":(Lio/undertow/websockets/jsr/ServerWebSocketContainer$ClientNegotiation;Ljava/util/Map;)V
     114: invokevirtual #22                 // Method javax/websocket/ClientEndpointConfig$Configurator.afterResponse:(Ljavax/websocket/HandshakeResponse;)V
     117: return

  public void beforeRequest(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field config:Ljavax/websocket/ClientEndpointConfig;
       4: invokeinterface #4,  1            // InterfaceMethod javax/websocket/ClientEndpointConfig.getConfigurator:()Ljavax/websocket/ClientEndpointConfig$Configurator;
       9: astore_2
      10: aload_2
      11: ifnull        189
      14: new           #23                 // class java/util/HashMap
      17: dup
      18: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      21: astore_3
      22: aload_1
      23: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      28: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: astore        4
      35: aload         4
      37: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          101
      45: aload         4
      47: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #12                 // class java/util/Map$Entry
      55: astore        5
      57: new           #13                 // class java/util/ArrayList
      60: dup
      61: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      64: astore        6
      66: aload         6
      68: aload         5
      70: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: checkcast     #16                 // class java/util/Collection
      78: invokevirtual #17                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      81: pop
      82: aload_3
      83: aload         5
      85: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      90: aload         6
      92: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: goto          35
     101: aload_2
     102: aload_3
     103: invokevirtual #25                 // Method javax/websocket/ClientEndpointConfig$Configurator.beforeRequest:(Ljava/util/Map;)V
     106: aload_1
     107: invokeinterface #26,  1           // InterfaceMethod java/util/Map.clear:()V
     112: aload_3
     113: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     118: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     123: astore        4
     125: aload         4
     127: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     132: ifeq          189
     135: aload         4
     137: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     142: checkcast     #12                 // class java/util/Map$Entry
     145: astore        5
     147: aload         5
     149: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     154: checkcast     #27                 // class java/util/List
     157: invokeinterface #28,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     162: ifne          186
     165: aload_1
     166: aload         5
     168: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     173: aload         5
     175: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     180: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     185: pop
     186: goto          125
     189: return
}
