Compiled from "Encoding.java"
public class io.undertow.websockets.jsr.Encoding implements java.io.Closeable {
  private final java.util.Map<java.lang.Class<?>, java.util.List<io.undertow.servlet.api.InstanceHandle<? extends javax.websocket.Encoder>>> binaryEncoders;

  private final java.util.Map<java.lang.Class<?>, java.util.List<io.undertow.servlet.api.InstanceHandle<? extends javax.websocket.Decoder>>> binaryDecoders;

  private final java.util.Map<java.lang.Class<?>, java.util.List<io.undertow.servlet.api.InstanceHandle<? extends javax.websocket.Encoder>>> textEncoders;

  private final java.util.Map<java.lang.Class<?>, java.util.List<io.undertow.servlet.api.InstanceHandle<? extends javax.websocket.Decoder>>> textDecoders;

  public io.undertow.websockets.jsr.Encoding(java.util.Map<java.lang.Class<?>, java.util.List<io.undertow.servlet.api.InstanceHandle<? extends javax.websocket.Encoder>>>, java.util.Map<java.lang.Class<?>, java.util.List<io.undertow.servlet.api.InstanceHandle<? extends javax.websocket.Decoder>>>, java.util.Map<java.lang.Class<?>, java.util.List<io.undertow.servlet.api.InstanceHandle<? extends javax.websocket.Encoder>>>, java.util.Map<java.lang.Class<?>, java.util.List<io.undertow.servlet.api.InstanceHandle<? extends javax.websocket.Decoder>>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field binaryEncoders:Ljava/util/Map;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field binaryDecoders:Ljava/util/Map;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field textEncoders:Ljava/util/Map;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field textDecoders:Ljava/util/Map;
      25: return

  public boolean canEncodeText(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field textEncoders:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: aload_0
      16: getfield      #4                  // Field textEncoders:Ljava/util/Map;
      19: invokeinterface #7,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      24: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          62
      39: aload_2
      40: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #11                 // class java/lang/Class
      48: astore_3
      49: aload_3
      50: aload_1
      51: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      54: ifeq          59
      57: iconst_1
      58: ireturn
      59: goto          30
      62: aload_1
      63: invokestatic  #13                 // Method io/undertow/websockets/jsr/EncodingFactory.isPrimitiveOrBoxed:(Ljava/lang/Class;)Z
      66: ifeq          107
      69: aload_1
      70: invokestatic  #14                 // Method boxedType:(Ljava/lang/Class;)Ljava/lang/Class;
      73: astore_2
      74: aload_0
      75: getfield      #2                  // Field binaryEncoders:Ljava/util/Map;
      78: aload_2
      79: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      84: ifne          105
      87: aload_0
      88: getfield      #2                  // Field binaryEncoders:Ljava/util/Map;
      91: ldc           #15                 // class java/lang/Object
      93: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      98: ifne          105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: ireturn
     107: iconst_0
     108: ireturn

  public boolean canDecodeText(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field textDecoders:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: aload_1
      16: invokestatic  #13                 // Method io/undertow/websockets/jsr/EncodingFactory.isPrimitiveOrBoxed:(Ljava/lang/Class;)Z
      19: ifeq          60
      22: aload_1
      23: invokestatic  #14                 // Method boxedType:(Ljava/lang/Class;)Ljava/lang/Class;
      26: astore_2
      27: aload_0
      28: getfield      #3                  // Field binaryDecoders:Ljava/util/Map;
      31: aload_2
      32: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      37: ifne          58
      40: aload_0
      41: getfield      #2                  // Field binaryEncoders:Ljava/util/Map;
      44: ldc           #15                 // class java/lang/Object
      46: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      51: ifne          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn
      60: iconst_0
      61: ireturn

  public boolean canEncodeBinary(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field binaryEncoders:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: aload_0
      16: getfield      #2                  // Field binaryEncoders:Ljava/util/Map;
      19: invokeinterface #7,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      24: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          62
      39: aload_2
      40: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #11                 // class java/lang/Class
      48: astore_3
      49: aload_3
      50: aload_1
      51: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      54: ifeq          59
      57: iconst_1
      58: ireturn
      59: goto          30
      62: iconst_0
      63: ireturn

  public boolean canDecodeBinary(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field binaryDecoders:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public java.lang.Object decodeText(java.lang.Class<?>, java.lang.String) throws javax.websocket.DecodeException;
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method io/undertow/websockets/jsr/EncodingFactory.isPrimitiveOrBoxed:(Ljava/lang/Class;)Z
       4: ifeq          14
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #16                 // Method decodePrimitive:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      13: areturn
      14: aload_0
      15: getfield      #5                  // Field textDecoders:Ljava/util/Map;
      18: aload_1
      19: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #18                 // class java/util/List
      27: astore_3
      28: aload_3
      29: ifnull        145
      32: aload_3
      33: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore        4
      40: aload         4
      42: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          145
      50: aload         4
      52: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #20                 // class io/undertow/servlet/api/InstanceHandle
      60: astore        5
      62: aload         5
      64: invokeinterface #21,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
      69: checkcast     #22                 // class javax/websocket/Decoder
      72: astore        6
      74: aload         6
      76: instanceof    #23                 // class javax/websocket/Decoder$Text
      79: ifeq          108
      82: aload         6
      84: checkcast     #23                 // class javax/websocket/Decoder$Text
      87: aload_2
      88: invokeinterface #24,  2           // InterfaceMethod javax/websocket/Decoder$Text.willDecode:(Ljava/lang/String;)Z
      93: ifeq          142
      96: aload         6
      98: checkcast     #23                 // class javax/websocket/Decoder$Text
     101: aload_2
     102: invokeinterface #25,  2           // InterfaceMethod javax/websocket/Decoder$Text.decode:(Ljava/lang/String;)Ljava/lang/Object;
     107: areturn
     108: aload         6
     110: checkcast     #26                 // class javax/websocket/Decoder$TextStream
     113: new           #27                 // class java/io/StringReader
     116: dup
     117: aload_2
     118: invokespecial #28                 // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
     121: invokeinterface #29,  2           // InterfaceMethod javax/websocket/Decoder$TextStream.decode:(Ljava/io/Reader;)Ljava/lang/Object;
     126: areturn
     127: astore        7
     129: new           #31                 // class javax/websocket/DecodeException
     132: dup
     133: aload_2
     134: ldc           #32                 // String Could not decode string
     136: aload         7
     138: invokespecial #33                 // Method javax/websocket/DecodeException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
     141: athrow
     142: goto          40
     145: new           #31                 // class javax/websocket/DecodeException
     148: dup
     149: aload_2
     150: ldc           #32                 // String Could not decode string
     152: invokespecial #34                 // Method javax/websocket/DecodeException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     155: athrow
    Exception table:
       from    to  target type
         108   126   127   Class java/io/IOException

  private java.lang.Object decodePrimitive(java.lang.Class<?>, java.lang.String) throws javax.websocket.DecodeException;
    Code:
       0: aload_1
       1: ldc           #35                 // class java/lang/Boolean
       3: if_acmpeq     13
       6: aload_1
       7: getstatic     #36                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      10: if_acmpne     18
      13: aload_2
      14: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
      17: areturn
      18: aload_1
      19: ldc           #38                 // class java/lang/Character
      21: if_acmpeq     31
      24: aload_1
      25: getstatic     #39                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      28: if_acmpne     40
      31: aload_2
      32: iconst_0
      33: invokevirtual #40                 // Method java/lang/String.charAt:(I)C
      36: invokestatic  #41                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      39: areturn
      40: aload_1
      41: ldc           #42                 // class java/lang/Byte
      43: if_acmpeq     53
      46: aload_1
      47: getstatic     #43                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      50: if_acmpne     58
      53: aload_2
      54: invokestatic  #44                 // Method java/lang/Byte.valueOf:(Ljava/lang/String;)Ljava/lang/Byte;
      57: areturn
      58: aload_1
      59: ldc           #45                 // class java/lang/Short
      61: if_acmpeq     71
      64: aload_1
      65: getstatic     #46                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      68: if_acmpne     76
      71: aload_2
      72: invokestatic  #47                 // Method java/lang/Short.valueOf:(Ljava/lang/String;)Ljava/lang/Short;
      75: areturn
      76: aload_1
      77: ldc           #48                 // class java/lang/Integer
      79: if_acmpeq     89
      82: aload_1
      83: getstatic     #49                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      86: if_acmpne     94
      89: aload_2
      90: invokestatic  #50                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      93: areturn
      94: aload_1
      95: ldc           #51                 // class java/lang/Long
      97: if_acmpeq     107
     100: aload_1
     101: getstatic     #52                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     104: if_acmpne     112
     107: aload_2
     108: invokestatic  #53                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     111: areturn
     112: aload_1
     113: ldc           #54                 // class java/lang/Float
     115: if_acmpeq     125
     118: aload_1
     119: getstatic     #55                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     122: if_acmpne     130
     125: aload_2
     126: invokestatic  #56                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
     129: areturn
     130: aload_1
     131: ldc           #57                 // class java/lang/Double
     133: if_acmpeq     143
     136: aload_1
     137: getstatic     #58                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     140: if_acmpne     148
     143: aload_2
     144: invokestatic  #59                 // Method java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;
     147: areturn
     148: aconst_null
     149: areturn

  public java.lang.Object decodeBinary(java.lang.Class<?>, byte[]) throws javax.websocket.DecodeException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field binaryDecoders:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #18                 // class java/util/List
      13: astore_3
      14: aload_3
      15: ifnull        140
      18: aload_3
      19: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore        4
      26: aload         4
      28: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          140
      36: aload         4
      38: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #20                 // class io/undertow/servlet/api/InstanceHandle
      46: astore        5
      48: aload         5
      50: invokeinterface #21,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
      55: checkcast     #22                 // class javax/websocket/Decoder
      58: astore        6
      60: aload         6
      62: instanceof    #60                 // class javax/websocket/Decoder$Binary
      65: ifeq          100
      68: aload         6
      70: checkcast     #60                 // class javax/websocket/Decoder$Binary
      73: aload_2
      74: invokestatic  #61                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      77: invokeinterface #62,  2           // InterfaceMethod javax/websocket/Decoder$Binary.willDecode:(Ljava/nio/ByteBuffer;)Z
      82: ifeq          137
      85: aload         6
      87: checkcast     #60                 // class javax/websocket/Decoder$Binary
      90: aload_2
      91: invokestatic  #61                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      94: invokeinterface #63,  2           // InterfaceMethod javax/websocket/Decoder$Binary.decode:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
      99: areturn
     100: aload         6
     102: checkcast     #64                 // class javax/websocket/Decoder$BinaryStream
     105: new           #65                 // class java/io/ByteArrayInputStream
     108: dup
     109: aload_2
     110: invokespecial #66                 // Method java/io/ByteArrayInputStream."<init>":([B)V
     113: invokeinterface #67,  2           // InterfaceMethod javax/websocket/Decoder$BinaryStream.decode:(Ljava/io/InputStream;)Ljava/lang/Object;
     118: areturn
     119: astore        7
     121: new           #31                 // class javax/websocket/DecodeException
     124: dup
     125: aload_2
     126: invokestatic  #61                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     129: ldc           #68                 // String Could not decode binary
     131: aload         7
     133: invokespecial #69                 // Method javax/websocket/DecodeException."<init>":(Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/Throwable;)V
     136: athrow
     137: goto          26
     140: new           #31                 // class javax/websocket/DecodeException
     143: dup
     144: aload_2
     145: invokestatic  #61                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     148: ldc           #68                 // String Could not decode binary
     150: invokespecial #70                 // Method javax/websocket/DecodeException."<init>":(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     153: athrow
    Exception table:
       from    to  target type
         100   118   119   Class java/io/IOException

  public java.lang.String encodeText(java.lang.Object) throws javax.websocket.EncodeException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field textEncoders:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #18                 // class java/util/List
      16: astore_2
      17: aload_2
      18: ifnonnull     93
      21: aload_0
      22: getfield      #4                  // Field textEncoders:Ljava/util/Map;
      25: invokeinterface #72,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      30: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore_3
      36: aload_3
      37: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          93
      45: aload_3
      46: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #73                 // class java/util/Map$Entry
      54: astore        4
      56: aload         4
      58: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: checkcast     #11                 // class java/lang/Class
      66: aload_1
      67: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      70: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      73: ifeq          90
      76: aload         4
      78: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      83: checkcast     #18                 // class java/util/List
      86: astore_2
      87: goto          93
      90: goto          36
      93: aload_2
      94: ifnull        199
      97: aload_2
      98: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     103: astore_3
     104: aload_3
     105: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          199
     113: aload_3
     114: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     119: checkcast     #20                 // class io/undertow/servlet/api/InstanceHandle
     122: astore        4
     124: aload         4
     126: invokeinterface #21,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     131: checkcast     #76                 // class javax/websocket/Encoder
     134: astore        5
     136: aload         5
     138: instanceof    #77                 // class javax/websocket/Encoder$Text
     141: ifeq          156
     144: aload         5
     146: checkcast     #77                 // class javax/websocket/Encoder$Text
     149: aload_1
     150: invokeinterface #78,  2           // InterfaceMethod javax/websocket/Encoder$Text.encode:(Ljava/lang/Object;)Ljava/lang/String;
     155: areturn
     156: new           #79                 // class java/io/StringWriter
     159: dup
     160: invokespecial #80                 // Method java/io/StringWriter."<init>":()V
     163: astore        6
     165: aload         5
     167: checkcast     #81                 // class javax/websocket/Encoder$TextStream
     170: aload_1
     171: aload         6
     173: invokeinterface #82,  3           // InterfaceMethod javax/websocket/Encoder$TextStream.encode:(Ljava/lang/Object;Ljava/io/Writer;)V
     178: aload         6
     180: invokevirtual #83                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
     183: areturn
     184: astore        6
     186: new           #84                 // class javax/websocket/EncodeException
     189: dup
     190: aload_1
     191: ldc           #85                 // String Could not encode text
     193: aload         6
     195: invokespecial #86                 // Method javax/websocket/EncodeException."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V
     198: athrow
     199: aload_1
     200: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     203: invokestatic  #13                 // Method io/undertow/websockets/jsr/EncodingFactory.isPrimitiveOrBoxed:(Ljava/lang/Class;)Z
     206: ifeq          214
     209: aload_1
     210: invokevirtual #87                 // Method java/lang/Object.toString:()Ljava/lang/String;
     213: areturn
     214: new           #84                 // class javax/websocket/EncodeException
     217: dup
     218: aload_1
     219: ldc           #85                 // String Could not encode text
     221: invokespecial #88                 // Method javax/websocket/EncodeException."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
     224: athrow
    Exception table:
       from    to  target type
         156   183   184   Class java/io/IOException

  public java.nio.ByteBuffer encodeBinary(java.lang.Object) throws javax.websocket.EncodeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field binaryEncoders:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #18                 // class java/util/List
      16: astore_2
      17: aload_2
      18: ifnonnull     93
      21: aload_0
      22: getfield      #2                  // Field binaryEncoders:Ljava/util/Map;
      25: invokeinterface #72,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      30: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore_3
      36: aload_3
      37: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          93
      45: aload_3
      46: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #73                 // class java/util/Map$Entry
      54: astore        4
      56: aload         4
      58: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: checkcast     #11                 // class java/lang/Class
      66: aload_1
      67: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      70: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      73: ifeq          90
      76: aload         4
      78: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      83: checkcast     #18                 // class java/util/List
      86: astore_2
      87: goto          93
      90: goto          36
      93: aload_2
      94: ifnull        202
      97: aload_2
      98: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     103: astore_3
     104: aload_3
     105: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          202
     113: aload_3
     114: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     119: checkcast     #20                 // class io/undertow/servlet/api/InstanceHandle
     122: astore        4
     124: aload         4
     126: invokeinterface #21,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     131: checkcast     #76                 // class javax/websocket/Encoder
     134: astore        5
     136: aload         5
     138: instanceof    #89                 // class javax/websocket/Encoder$Binary
     141: ifeq          156
     144: aload         5
     146: checkcast     #89                 // class javax/websocket/Encoder$Binary
     149: aload_1
     150: invokeinterface #90,  2           // InterfaceMethod javax/websocket/Encoder$Binary.encode:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
     155: areturn
     156: new           #91                 // class java/io/ByteArrayOutputStream
     159: dup
     160: invokespecial #92                 // Method java/io/ByteArrayOutputStream."<init>":()V
     163: astore        6
     165: aload         5
     167: checkcast     #93                 // class javax/websocket/Encoder$BinaryStream
     170: aload_1
     171: aload         6
     173: invokeinterface #94,  3           // InterfaceMethod javax/websocket/Encoder$BinaryStream.encode:(Ljava/lang/Object;Ljava/io/OutputStream;)V
     178: aload         6
     180: invokevirtual #95                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     183: invokestatic  #61                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     186: areturn
     187: astore        6
     189: new           #84                 // class javax/websocket/EncodeException
     192: dup
     193: aload_1
     194: ldc           #96                 // String Could not encode binary
     196: aload         6
     198: invokespecial #86                 // Method javax/websocket/EncodeException."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V
     201: athrow
     202: new           #84                 // class javax/websocket/EncodeException
     205: dup
     206: aload_1
     207: ldc           #96                 // String Could not encode binary
     209: invokespecial #88                 // Method javax/websocket/EncodeException."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
     212: athrow
    Exception table:
       from    to  target type
         156   186   187   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field binaryDecoders:Ljava/util/Map;
       4: invokeinterface #72,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          97
      24: aload_1
      25: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #73                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #18                 // class java/util/List
      43: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore_3
      49: aload_3
      50: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          94
      58: aload_3
      59: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #20                 // class io/undertow/servlet/api/InstanceHandle
      67: astore        4
      69: aload         4
      71: invokeinterface #21,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
      76: checkcast     #22                 // class javax/websocket/Decoder
      79: invokeinterface #97,  1           // InterfaceMethod javax/websocket/Decoder.destroy:()V
      84: aload         4
      86: invokeinterface #98,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.release:()V
      91: goto          49
      94: goto          15
      97: aload_0
      98: getfield      #5                  // Field textDecoders:Ljava/util/Map;
     101: invokeinterface #72,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     106: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     111: astore_1
     112: aload_1
     113: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     118: ifeq          194
     121: aload_1
     122: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     127: checkcast     #73                 // class java/util/Map$Entry
     130: astore_2
     131: aload_2
     132: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     137: checkcast     #18                 // class java/util/List
     140: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     145: astore_3
     146: aload_3
     147: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     152: ifeq          191
     155: aload_3
     156: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     161: checkcast     #20                 // class io/undertow/servlet/api/InstanceHandle
     164: astore        4
     166: aload         4
     168: invokeinterface #21,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     173: checkcast     #22                 // class javax/websocket/Decoder
     176: invokeinterface #97,  1           // InterfaceMethod javax/websocket/Decoder.destroy:()V
     181: aload         4
     183: invokeinterface #98,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.release:()V
     188: goto          146
     191: goto          112
     194: aload_0
     195: getfield      #2                  // Field binaryEncoders:Ljava/util/Map;
     198: invokeinterface #72,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     203: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     208: astore_1
     209: aload_1
     210: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     215: ifeq          291
     218: aload_1
     219: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     224: checkcast     #73                 // class java/util/Map$Entry
     227: astore_2
     228: aload_2
     229: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     234: checkcast     #18                 // class java/util/List
     237: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     242: astore_3
     243: aload_3
     244: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     249: ifeq          288
     252: aload_3
     253: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     258: checkcast     #20                 // class io/undertow/servlet/api/InstanceHandle
     261: astore        4
     263: aload         4
     265: invokeinterface #21,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     270: checkcast     #76                 // class javax/websocket/Encoder
     273: invokeinterface #99,  1           // InterfaceMethod javax/websocket/Encoder.destroy:()V
     278: aload         4
     280: invokeinterface #98,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.release:()V
     285: goto          243
     288: goto          209
     291: aload_0
     292: getfield      #4                  // Field textEncoders:Ljava/util/Map;
     295: invokeinterface #72,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     300: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     305: astore_1
     306: aload_1
     307: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     312: ifeq          388
     315: aload_1
     316: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     321: checkcast     #73                 // class java/util/Map$Entry
     324: astore_2
     325: aload_2
     326: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     331: checkcast     #18                 // class java/util/List
     334: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     339: astore_3
     340: aload_3
     341: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     346: ifeq          385
     349: aload_3
     350: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     355: checkcast     #20                 // class io/undertow/servlet/api/InstanceHandle
     358: astore        4
     360: aload         4
     362: invokeinterface #21,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     367: checkcast     #76                 // class javax/websocket/Encoder
     370: invokeinterface #99,  1           // InterfaceMethod javax/websocket/Encoder.destroy:()V
     375: aload         4
     377: invokeinterface #98,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.release:()V
     382: goto          340
     385: goto          306
     388: return

  private static java.lang.Class<?> boxedType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #35                 // class java/lang/Boolean
       3: if_acmpeq     13
       6: aload_0
       7: getstatic     #36                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      10: if_acmpne     16
      13: ldc           #35                 // class java/lang/Boolean
      15: areturn
      16: aload_0
      17: ldc           #38                 // class java/lang/Character
      19: if_acmpeq     29
      22: aload_0
      23: getstatic     #39                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      26: if_acmpne     32
      29: ldc           #38                 // class java/lang/Character
      31: areturn
      32: aload_0
      33: ldc           #42                 // class java/lang/Byte
      35: if_acmpeq     45
      38: aload_0
      39: getstatic     #43                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      42: if_acmpne     48
      45: ldc           #42                 // class java/lang/Byte
      47: areturn
      48: aload_0
      49: ldc           #45                 // class java/lang/Short
      51: if_acmpeq     61
      54: aload_0
      55: getstatic     #46                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      58: if_acmpne     64
      61: ldc           #45                 // class java/lang/Short
      63: areturn
      64: aload_0
      65: ldc           #48                 // class java/lang/Integer
      67: if_acmpeq     77
      70: aload_0
      71: getstatic     #49                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      74: if_acmpne     80
      77: ldc           #48                 // class java/lang/Integer
      79: areturn
      80: aload_0
      81: ldc           #51                 // class java/lang/Long
      83: if_acmpeq     93
      86: aload_0
      87: getstatic     #52                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      90: if_acmpne     96
      93: ldc           #51                 // class java/lang/Long
      95: areturn
      96: aload_0
      97: ldc           #54                 // class java/lang/Float
      99: if_acmpeq     109
     102: aload_0
     103: getstatic     #55                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     106: if_acmpne     112
     109: ldc           #54                 // class java/lang/Float
     111: areturn
     112: aload_0
     113: ldc           #57                 // class java/lang/Double
     115: if_acmpeq     125
     118: aload_0
     119: getstatic     #58                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     122: if_acmpne     128
     125: ldc           #57                 // class java/lang/Double
     127: areturn
     128: aload_0
     129: areturn
}
