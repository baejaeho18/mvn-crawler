Compiled from "FrameHandler.java"
class io.undertow.websockets.jsr.FrameHandler extends io.undertow.websockets.core.AbstractReceiveListener {
  private final javax.websocket.Endpoint endpoint;

  private final io.undertow.websockets.jsr.UndertowSession session;

  protected static final byte[] EMPTY;

  private final java.util.concurrent.ConcurrentMap<io.undertow.websockets.jsr.FrameHandler$FrameType, io.undertow.websockets.jsr.FrameHandler$HandlerWrapper> handlers;

  private final java.util.concurrent.Executor executor;

  protected io.undertow.websockets.jsr.FrameHandler(io.undertow.websockets.jsr.UndertowSession, javax.websocket.Endpoint);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method io/undertow/websockets/core/AbstractReceiveListener."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #8                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      20: aload_0
      21: aload_2
      22: putfield      #9                  // Field endpoint:Ljavax/websocket/Endpoint;
      25: aload_1
      26: invokevirtual #10                 // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      29: invokevirtual #11                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.isDispatchToWorker:()Z
      32: ifeq          53
      35: new           #12                 // class io/undertow/websockets/jsr/OrderedExecutor
      38: dup
      39: aload_1
      40: invokevirtual #13                 // Method io/undertow/websockets/jsr/UndertowSession.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      43: invokevirtual #14                 // Method io/undertow/websockets/core/WebSocketChannel.getWorker:()Lorg/xnio/XnioWorker;
      46: invokespecial #15                 // Method io/undertow/websockets/jsr/OrderedExecutor."<init>":(Ljava/util/concurrent/Executor;)V
      49: astore_3
      50: goto          61
      53: aload_1
      54: invokevirtual #13                 // Method io/undertow/websockets/jsr/UndertowSession.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      57: invokevirtual #16                 // Method io/undertow/websockets/core/WebSocketChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      60: astore_3
      61: aload_0
      62: aload_3
      63: putfield      #17                 // Field executor:Ljava/util/concurrent/Executor;
      66: return

  protected void onFullCloseMessage(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.BufferedBinaryMessage);
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #18                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          20
      10: aload_2
      11: invokevirtual #19                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      14: invokeinterface #20,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      19: return
      20: aload_2
      21: invokevirtual #19                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      24: astore_3
      25: aload_3
      26: invokeinterface #21,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      31: checkcast     #22                 // class "[Ljava/nio/ByteBuffer;"
      34: invokestatic  #23                 // Method toBuffer:([Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      37: astore        4
      39: aload         4
      41: invokevirtual #24                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      44: astore        5
      46: aload         5
      48: aload_1
      49: aconst_null
      50: invokestatic  #25                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      53: aload_0
      54: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      57: invokevirtual #10                 // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      60: aload_0
      61: getfield      #17                 // Field executor:Ljava/util/concurrent/Executor;
      64: new           #26                 // class io/undertow/websockets/jsr/FrameHandler$1
      67: dup
      68: aload_0
      69: aload         4
      71: aload_3
      72: invokespecial #27                 // Method io/undertow/websockets/jsr/FrameHandler$1."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Ljava/nio/ByteBuffer;Lorg/xnio/Pooled;)V
      75: invokevirtual #28                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      78: return

  private void invokeOnError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #10                 // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
       7: aload_0
       8: getfield      #17                 // Field executor:Ljava/util/concurrent/Executor;
      11: new           #29                 // class io/undertow/websockets/jsr/FrameHandler$2
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #30                 // Method io/undertow/websockets/jsr/FrameHandler$2."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Ljava/lang/Throwable;)V
      20: invokevirtual #28                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      23: return

  protected void onFullPongMessage(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.BufferedBinaryMessage);
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #18                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          20
      10: aload_2
      11: invokevirtual #19                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      14: invokeinterface #20,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      19: return
      20: aload_0
      21: getstatic     #31                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.PONG:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      24: invokevirtual #32                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      27: astore_3
      28: aload_3
      29: ifnull        83
      32: aload_2
      33: invokevirtual #19                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      36: astore        4
      38: aload         4
      40: invokeinterface #21,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      45: checkcast     #22                 // class "[Ljava/nio/ByteBuffer;"
      48: invokestatic  #23                 // Method toBuffer:([Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      51: invokestatic  #33                 // Method io/undertow/websockets/jsr/DefaultPongMessage.create:(Ljava/nio/ByteBuffer;)Ljavax/websocket/PongMessage;
      54: astore        5
      56: aload_0
      57: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      60: invokevirtual #10                 // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      63: aload_0
      64: getfield      #17                 // Field executor:Ljava/util/concurrent/Executor;
      67: new           #34                 // class io/undertow/websockets/jsr/FrameHandler$3
      70: dup
      71: aload_0
      72: aload_3
      73: aload         5
      75: aload         4
      77: invokespecial #35                 // Method io/undertow/websockets/jsr/FrameHandler$3."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Ljavax/websocket/PongMessage;Lorg/xnio/Pooled;)V
      80: invokevirtual #28                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      83: return

  protected void onText(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.StreamSourceFrameChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #18                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          15
      10: aload_2
      11: invokevirtual #36                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.close:()V
      14: return
      15: aload_0
      16: getstatic     #37                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      19: invokevirtual #32                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      22: astore_3
      23: aload_3
      24: ifnull        62
      27: aload_3
      28: invokevirtual #38                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.isPartialHandler:()Z
      31: ifeq          62
      34: new           #39                 // class io/undertow/websockets/core/BufferedTextMessage
      37: dup
      38: iconst_0
      39: invokespecial #40                 // Method io/undertow/websockets/core/BufferedTextMessage."<init>":(Z)V
      42: astore        4
      44: aload         4
      46: aload_2
      47: new           #41                 // class io/undertow/websockets/jsr/FrameHandler$4
      50: dup
      51: aload_0
      52: aload_3
      53: invokespecial #42                 // Method io/undertow/websockets/jsr/FrameHandler$4."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;)V
      56: invokevirtual #43                 // Method io/undertow/websockets/core/BufferedTextMessage.read:(Lio/undertow/websockets/core/StreamSourceFrameChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      59: goto          67
      62: aload_0
      63: aload_2
      64: invokevirtual #44                 // Method bufferFullMessage:(Lio/undertow/websockets/core/StreamSourceFrameChannel;)V
      67: return

  protected void onBinary(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.StreamSourceFrameChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #18                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          15
      10: aload_2
      11: invokevirtual #36                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.close:()V
      14: return
      15: aload_0
      16: getstatic     #45                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      19: invokevirtual #32                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      22: astore_3
      23: aload_3
      24: ifnull        70
      27: aload_3
      28: invokevirtual #38                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.isPartialHandler:()Z
      31: ifeq          70
      34: new           #46                 // class io/undertow/websockets/core/BufferedBinaryMessage
      37: dup
      38: aload_0
      39: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      42: invokevirtual #47                 // Method io/undertow/websockets/jsr/UndertowSession.getMaxBinaryMessageBufferSize:()I
      45: i2l
      46: iconst_0
      47: invokespecial #48                 // Method io/undertow/websockets/core/BufferedBinaryMessage."<init>":(JZ)V
      50: astore        4
      52: aload         4
      54: aload_2
      55: new           #49                 // class io/undertow/websockets/jsr/FrameHandler$5
      58: dup
      59: aload_0
      60: aload_3
      61: invokespecial #50                 // Method io/undertow/websockets/jsr/FrameHandler$5."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;)V
      64: invokevirtual #51                 // Method io/undertow/websockets/core/BufferedBinaryMessage.read:(Lio/undertow/websockets/core/StreamSourceFrameChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      67: goto          75
      70: aload_0
      71: aload_2
      72: invokevirtual #44                 // Method bufferFullMessage:(Lio/undertow/websockets/core/StreamSourceFrameChannel;)V
      75: return

  private void invokeBinaryHandler(io.undertow.websockets.core.BufferedBinaryMessage, io.undertow.websockets.jsr.FrameHandler$HandlerWrapper, boolean);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
       4: astore        4
       6: aload_0
       7: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      10: invokevirtual #10                 // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      13: aload_0
      14: getfield      #17                 // Field executor:Ljava/util/concurrent/Executor;
      17: new           #52                 // class io/undertow/websockets/jsr/FrameHandler$6
      20: dup
      21: aload_0
      22: aload_2
      23: aload         4
      25: iload_3
      26: invokespecial #53                 // Method io/undertow/websockets/jsr/FrameHandler$6."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Lorg/xnio/Pooled;Z)V
      29: invokevirtual #28                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      32: return

  private void invokeTextHandler(io.undertow.websockets.core.BufferedTextMessage, io.undertow.websockets.jsr.FrameHandler$HandlerWrapper, boolean);
    Code:
       0: aload_1
       1: invokevirtual #54                 // Method io/undertow/websockets/core/BufferedTextMessage.getData:()Ljava/lang/String;
       4: astore        4
       6: aload_0
       7: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      10: invokevirtual #10                 // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      13: aload_0
      14: getfield      #17                 // Field executor:Ljava/util/concurrent/Executor;
      17: new           #55                 // class io/undertow/websockets/jsr/FrameHandler$7
      20: dup
      21: aload_0
      22: aload_2
      23: aload         4
      25: iload_3
      26: invokespecial #56                 // Method io/undertow/websockets/jsr/FrameHandler$7."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Ljava/lang/String;Z)V
      29: invokevirtual #28                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      32: return

  protected void onError(io.undertow.websockets.core.WebSocketChannel, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getEndpoint:()Ljavax/websocket/Endpoint;
       4: aload_0
       5: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       8: aload_2
       9: invokevirtual #58                 // Method javax/websocket/Endpoint.onError:(Ljavax/websocket/Session;Ljava/lang/Throwable;)V
      12: aload_0
      13: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      16: invokevirtual #59                 // Method io/undertow/websockets/jsr/UndertowSession.forceClose:()V
      19: goto          32
      22: astore_3
      23: aload_0
      24: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      27: invokevirtual #59                 // Method io/undertow/websockets/jsr/UndertowSession.forceClose:()V
      30: aload_3
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0    12    22   any

  protected void onFullTextMessage(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.BufferedTextMessage);
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #18                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getstatic     #37                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      15: invokevirtual #32                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      18: astore_3
      19: aload_3
      20: ifnull        30
      23: aload_0
      24: aload_2
      25: aload_3
      26: iconst_1
      27: invokespecial #2                  // Method invokeTextHandler:(Lio/undertow/websockets/core/BufferedTextMessage;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Z)V
      30: return

  protected void onFullBinaryMessage(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.BufferedBinaryMessage);
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #18                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          20
      10: aload_2
      11: invokevirtual #19                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      14: invokeinterface #60,  1           // InterfaceMethod org/xnio/Pooled.close:()V
      19: return
      20: aload_0
      21: getstatic     #45                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      24: invokevirtual #32                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      27: astore_3
      28: aload_3
      29: ifnull        42
      32: aload_0
      33: aload_2
      34: aload_3
      35: iconst_1
      36: invokespecial #1                  // Method invokeBinaryHandler:(Lio/undertow/websockets/core/BufferedBinaryMessage;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Z)V
      39: goto          51
      42: aload_2
      43: invokevirtual #19                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      46: invokeinterface #60,  1           // InterfaceMethod org/xnio/Pooled.close:()V
      51: return

  protected static java.nio.ByteBuffer toBuffer(java.nio.ByteBuffer...);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: if_icmpne     10
       6: aload_0
       7: iconst_0
       8: aaload
       9: areturn
      10: aload_0
      11: invokestatic  #61                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
      14: l2i
      15: istore_1
      16: iload_1
      17: ifne          24
      20: getstatic     #62                 // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
      23: areturn
      24: iload_1
      25: invokestatic  #63                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      28: astore_2
      29: aload_0
      30: astore_3
      31: aload_3
      32: arraylength
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload         4
      42: if_icmpge     64
      45: aload_3
      46: iload         5
      48: aaload
      49: astore        6
      51: aload_2
      52: aload         6
      54: invokevirtual #64                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      57: pop
      58: iinc          5, 1
      61: goto          38
      64: aload_2
      65: invokevirtual #65                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      68: pop
      69: aload_2
      70: areturn

  protected static byte[] toArray(java.nio.ByteBuffer...);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: if_icmpne     48
       6: aload_0
       7: iconst_0
       8: aaload
       9: astore_1
      10: aload_1
      11: invokevirtual #66                 // Method java/nio/ByteBuffer.hasArray:()Z
      14: ifeq          48
      17: aload_1
      18: invokevirtual #67                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: ifne          48
      24: aload_1
      25: invokevirtual #68                 // Method java/nio/ByteBuffer.position:()I
      28: ifne          48
      31: aload_1
      32: invokevirtual #69                 // Method java/nio/ByteBuffer.array:()[B
      35: arraylength
      36: aload_1
      37: invokevirtual #70                 // Method java/nio/ByteBuffer.remaining:()I
      40: if_icmpne     48
      43: aload_1
      44: invokevirtual #69                 // Method java/nio/ByteBuffer.array:()[B
      47: areturn
      48: aload_0
      49: iconst_0
      50: aload_0
      51: arraylength
      52: invokestatic  #71                 // Method org/xnio/Buffers.take:([Ljava/nio/ByteBuffer;II)[B
      55: areturn

  public final void addHandler(java.lang.Class<?>, javax.websocket.MessageHandler);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_2
       4: instanceof    #72                 // class javax/websocket/MessageHandler$Partial
       7: invokespecial #73                 // Method addHandlerInternal:(Ljavax/websocket/MessageHandler;Ljava/lang/Class;Z)V
      10: return

  public final void addHandler(javax.websocket.MessageHandler);
    Code:
       0: aload_1
       1: invokevirtual #74                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #75                 // Method io/undertow/websockets/jsr/util/ClassUtils.getHandlerTypes:(Ljava/lang/Class;)Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: invokeinterface #76,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          79
      29: aload_3
      30: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #80                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #82                 // class java/lang/Class
      50: astore        5
      52: aload         4
      54: invokeinterface #83,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #84                 // class java/lang/Boolean
      62: invokevirtual #85                 // Method java/lang/Boolean.booleanValue:()Z
      65: istore        6
      67: aload_0
      68: aload_1
      69: aload         5
      71: iload         6
      73: invokespecial #73                 // Method addHandlerInternal:(Ljavax/websocket/MessageHandler;Ljava/lang/Class;Z)V
      76: goto          20
      79: return

  private void addHandlerInternal(javax.websocket.MessageHandler, java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #86                 // Method verify:(Ljava/lang/Class;Ljavax/websocket/MessageHandler;)V
       6: aload_0
       7: aload_2
       8: aload_1
       9: iload_3
      10: invokevirtual #87                 // Method createHandlerWrapper:(Ljava/lang/Class;Ljavax/websocket/MessageHandler;Z)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      13: astore        4
      15: aload_0
      16: getfield      #8                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
      19: aload         4
      21: invokevirtual #88                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      24: invokeinterface #89,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          46
      32: getstatic     #90                 // Field io/undertow/websockets/jsr/JsrWebSocketMessages.MESSAGES:Lio/undertow/websockets/jsr/JsrWebSocketMessages;
      35: aload         4
      37: invokevirtual #88                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      40: invokeinterface #91,  2           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketMessages.handlerAlreadyRegistered:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Ljava/lang/IllegalStateException;
      45: athrow
      46: aload_0
      47: getfield      #8                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
      50: aload         4
      52: invokevirtual #88                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      55: aload         4
      57: invokeinterface #92,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: ifnull        79
      65: getstatic     #90                 // Field io/undertow/websockets/jsr/JsrWebSocketMessages.MESSAGES:Lio/undertow/websockets/jsr/JsrWebSocketMessages;
      68: aload         4
      70: invokevirtual #88                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      73: invokeinterface #91,  2           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketMessages.handlerAlreadyRegistered:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Ljava/lang/IllegalStateException;
      78: athrow
      79: return

  protected io.undertow.websockets.jsr.FrameHandler$HandlerWrapper createHandlerWrapper(java.lang.Class<?>, javax.websocket.MessageHandler, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #93                 // Method io/undertow/websockets/jsr/UndertowSession.getEncoding:()Lio/undertow/websockets/jsr/Encoding;
       7: astore        4
       9: aload         4
      11: aload_1
      12: invokevirtual #94                 // Method io/undertow/websockets/jsr/Encoding.canDecodeText:(Ljava/lang/Class;)Z
      15: ifeq          34
      18: new           #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      21: dup
      22: getstatic     #37                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      25: aload_2
      26: aload_1
      27: iconst_1
      28: iconst_0
      29: aconst_null
      30: invokespecial #96                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljavax/websocket/MessageHandler;Ljava/lang/Class;ZZLio/undertow/websockets/jsr/FrameHandler$1;)V
      33: areturn
      34: aload         4
      36: aload_1
      37: invokevirtual #97                 // Method io/undertow/websockets/jsr/Encoding.canDecodeBinary:(Ljava/lang/Class;)Z
      40: ifeq          59
      43: new           #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      46: dup
      47: getstatic     #45                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      50: aload_2
      51: aload_1
      52: iconst_1
      53: iconst_0
      54: aconst_null
      55: invokespecial #96                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljavax/websocket/MessageHandler;Ljava/lang/Class;ZZLio/undertow/websockets/jsr/FrameHandler$1;)V
      58: areturn
      59: iload_3
      60: ifeq          123
      63: aload_1
      64: ldc           #98                 // class java/lang/String
      66: if_acmpne     85
      69: new           #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      72: dup
      73: getstatic     #37                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      76: aload_2
      77: aload_1
      78: iconst_0
      79: iconst_1
      80: aconst_null
      81: invokespecial #96                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljavax/websocket/MessageHandler;Ljava/lang/Class;ZZLio/undertow/websockets/jsr/FrameHandler$1;)V
      84: areturn
      85: aload_1
      86: ldc           #99                 // class "[B"
      88: if_acmpeq     97
      91: aload_1
      92: ldc           #100                // class java/nio/ByteBuffer
      94: if_acmpne     113
      97: new           #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     100: dup
     101: getstatic     #45                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     104: aload_2
     105: aload_1
     106: iconst_0
     107: iconst_1
     108: aconst_null
     109: invokespecial #96                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljavax/websocket/MessageHandler;Ljava/lang/Class;ZZLio/undertow/websockets/jsr/FrameHandler$1;)V
     112: areturn
     113: getstatic     #90                 // Field io/undertow/websockets/jsr/JsrWebSocketMessages.MESSAGES:Lio/undertow/websockets/jsr/JsrWebSocketMessages;
     116: aload_1
     117: invokeinterface #101,  2          // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketMessages.unsupportedFrameType:(Ljava/lang/Class;)Ljava/lang/IllegalStateException;
     122: athrow
     123: aload_1
     124: ldc           #99                 // class "[B"
     126: if_acmpeq     141
     129: aload_1
     130: ldc           #100                // class java/nio/ByteBuffer
     132: if_acmpeq     141
     135: aload_1
     136: ldc           #102                // class java/io/InputStream
     138: if_acmpne     157
     141: new           #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     144: dup
     145: getstatic     #45                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     148: aload_2
     149: aload_1
     150: iconst_0
     151: iconst_0
     152: aconst_null
     153: invokespecial #96                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljavax/websocket/MessageHandler;Ljava/lang/Class;ZZLio/undertow/websockets/jsr/FrameHandler$1;)V
     156: areturn
     157: aload_1
     158: ldc           #98                 // class java/lang/String
     160: if_acmpeq     169
     163: aload_1
     164: ldc           #103                // class java/io/Reader
     166: if_acmpne     185
     169: new           #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     172: dup
     173: getstatic     #37                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     176: aload_2
     177: aload_1
     178: iconst_0
     179: iconst_0
     180: aconst_null
     181: invokespecial #96                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljavax/websocket/MessageHandler;Ljava/lang/Class;ZZLio/undertow/websockets/jsr/FrameHandler$1;)V
     184: areturn
     185: aload_1
     186: ldc           #104                // class javax/websocket/PongMessage
     188: if_acmpne     207
     191: new           #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     194: dup
     195: getstatic     #31                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.PONG:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     198: aload_2
     199: aload_1
     200: iconst_0
     201: iconst_0
     202: aconst_null
     203: invokespecial #96                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljavax/websocket/MessageHandler;Ljava/lang/Class;ZZLio/undertow/websockets/jsr/FrameHandler$1;)V
     206: areturn
     207: getstatic     #90                 // Field io/undertow/websockets/jsr/JsrWebSocketMessages.MESSAGES:Lio/undertow/websockets/jsr/JsrWebSocketMessages;
     210: aload_1
     211: invokeinterface #101,  2          // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketMessages.unsupportedFrameType:(Ljava/lang/Class;)Ljava/lang/IllegalStateException;
     216: athrow

  protected void verify(java.lang.Class<?>, javax.websocket.MessageHandler);
    Code:
       0: return

  public final void removeHandler(javax.websocket.MessageHandler);
    Code:
       0: aload_1
       1: invokevirtual #74                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #75                 // Method io/undertow/websockets/jsr/util/ClassUtils.getHandlerTypes:(Ljava/lang/Class;)Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: invokeinterface #76,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          129
      29: aload_3
      30: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #80                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #82                 // class java/lang/Class
      50: astore        5
      52: aload_0
      53: aload         5
      55: aload_1
      56: aload         4
      58: invokeinterface #83,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: checkcast     #84                 // class java/lang/Boolean
      66: invokevirtual #85                 // Method java/lang/Boolean.booleanValue:()Z
      69: invokevirtual #87                 // Method createHandlerWrapper:(Ljava/lang/Class;Ljavax/websocket/MessageHandler;Z)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      72: astore        6
      74: aload         6
      76: invokevirtual #88                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      79: astore        7
      81: aload_0
      82: getfield      #8                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
      85: aload         7
      87: invokeinterface #105,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      92: checkcast     #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      95: astore        8
      97: aload         8
      99: ifnull        126
     102: aload         8
     104: invokevirtual #106                // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getMessageType:()Ljava/lang/Class;
     107: aload         5
     109: if_acmpne     126
     112: aload_0
     113: getfield      #8                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
     116: aload         7
     118: aload         8
     120: invokeinterface #107,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     125: pop
     126: goto          20
     129: return

  public final java.util.Set<javax.websocket.MessageHandler> getHandlers();
    Code:
       0: new           #108                // class java/util/HashSet
       3: dup
       4: invokespecial #109                // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #8                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #110,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      17: invokeinterface #111,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          56
      32: aload_2
      33: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokevirtual #112                // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getHandler:()Ljavax/websocket/MessageHandler;
      47: invokeinterface #113,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          23
      56: aload_1
      57: areturn

  protected final io.undertow.websockets.jsr.FrameHandler$HandlerWrapper getHandler(io.undertow.websockets.jsr.FrameHandler$FrameType);
    Code:
       0: aload_0
       1: getfield      #8                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #105,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #95                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      13: areturn

  protected long getMaxTextBufferSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #114                // Method io/undertow/websockets/jsr/UndertowSession.getMaxTextMessageBufferSize:()I
       7: i2l
       8: lreturn

  protected long getMaxBinaryBufferSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #47                 // Method io/undertow/websockets/jsr/UndertowSession.getMaxBinaryMessageBufferSize:()I
       7: i2l
       8: lreturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #17                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  io.undertow.websockets.jsr.UndertowSession getSession();
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: areturn

  javax.websocket.Endpoint getEndpoint();
    Code:
       0: aload_0
       1: getfield      #9                  // Field endpoint:Ljavax/websocket/Endpoint;
       4: areturn

  static io.undertow.websockets.jsr.UndertowSession access$000(io.undertow.websockets.jsr.FrameHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: areturn

  static void access$100(io.undertow.websockets.jsr.FrameHandler, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method invokeOnError:(Ljava/lang/Throwable;)V
       5: return

  static void access$200(io.undertow.websockets.jsr.FrameHandler, io.undertow.websockets.core.BufferedTextMessage, io.undertow.websockets.jsr.FrameHandler$HandlerWrapper, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #2                  // Method invokeTextHandler:(Lio/undertow/websockets/core/BufferedTextMessage;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Z)V
       7: return

  static void access$300(io.undertow.websockets.jsr.FrameHandler, io.undertow.websockets.core.BufferedBinaryMessage, io.undertow.websockets.jsr.FrameHandler$HandlerWrapper, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method invokeBinaryHandler:(Lio/undertow/websockets/core/BufferedBinaryMessage;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Z)V
       7: return

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #115                // Field EMPTY:[B
       6: return
}
