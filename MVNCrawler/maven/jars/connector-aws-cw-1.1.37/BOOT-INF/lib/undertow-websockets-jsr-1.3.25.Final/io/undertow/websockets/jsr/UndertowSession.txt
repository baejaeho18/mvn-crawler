Compiled from "UndertowSession.java"
public final class io.undertow.websockets.jsr.UndertowSession implements javax.websocket.Session {
  private final java.lang.String sessionId;

  private io.undertow.websockets.core.WebSocketChannel webSocketChannel;

  private io.undertow.websockets.jsr.FrameHandler frameHandler;

  private final io.undertow.websockets.jsr.ServerWebSocketContainer container;

  private final java.security.Principal user;

  private final io.undertow.websockets.jsr.WebSocketSessionRemoteEndpoint remote;

  private final java.util.Map<java.lang.String, java.lang.Object> attrs;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> requestParameterMap;

  private final java.net.URI requestUri;

  private final java.lang.String queryString;

  private final java.util.Map<java.lang.String, java.lang.String> pathParameters;

  private final io.undertow.servlet.api.InstanceHandle<javax.websocket.Endpoint> endpoint;

  private final io.undertow.websockets.jsr.Encoding encoding;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private final io.undertow.websockets.jsr.SessionContainer openSessions;

  private final java.lang.String subProtocol;

  private final java.util.List<javax.websocket.Extension> extensions;

  private final io.undertow.websockets.client.WebSocketClient$ConnectionBuilder clientConnectionBuilder;

  private final javax.websocket.EndpointConfig config;

  private volatile int maximumBinaryBufferSize;

  private volatile int maximumTextBufferSize;

  private volatile boolean localClose;

  private int disconnectCount;

  private int failedCount;

  static final boolean $assertionsDisabled;

  io.undertow.websockets.jsr.UndertowSession(io.undertow.websockets.core.WebSocketChannel, java.net.URI, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.util.List<java.lang.String>>, io.undertow.websockets.jsr.EndpointSessionHandler, java.security.Principal, io.undertow.servlet.api.InstanceHandle<javax.websocket.Endpoint>, javax.websocket.EndpointConfig, java.lang.String, io.undertow.websockets.jsr.Encoding, io.undertow.websockets.jsr.SessionContainer, java.lang.String, java.util.List<javax.websocket.Extension>, io.undertow.websockets.client.WebSocketClient$ConnectionBuilder);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #14                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #12                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: iconst_0
      17: putfield      #16                 // Field maximumBinaryBufferSize:I
      20: aload_0
      21: iconst_0
      22: putfield      #17                 // Field maximumTextBufferSize:I
      25: aload_0
      26: iconst_0
      27: putfield      #18                 // Field disconnectCount:I
      30: aload_0
      31: iconst_0
      32: putfield      #6                  // Field failedCount:I
      35: getstatic     #19                 // Field $assertionsDisabled:Z
      38: ifne          54
      41: aload         11
      43: ifnonnull     54
      46: new           #20                 // class java/lang/AssertionError
      49: dup
      50: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      53: athrow
      54: aload_0
      55: aload_1
      56: putfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      59: aload_0
      60: aload         9
      62: putfield      #22                 // Field queryString:Ljava/lang/String;
      65: aload_0
      66: aload         10
      68: putfield      #2                  // Field encoding:Lio/undertow/websockets/jsr/Encoding;
      71: aload_0
      72: aload         11
      74: putfield      #1                  // Field openSessions:Lio/undertow/websockets/jsr/SessionContainer;
      77: aload_0
      78: aload         14
      80: putfield      #3                  // Field clientConnectionBuilder:Lio/undertow/websockets/client/WebSocketClient$ConnectionBuilder;
      83: aload_0
      84: aload         5
      86: invokevirtual #23                 // Method io/undertow/websockets/jsr/EndpointSessionHandler.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      89: putfield      #5                  // Field container:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      92: aload_0
      93: aload         6
      95: putfield      #24                 // Field user:Ljava/security/Principal;
      98: aload_0
      99: aload_2
     100: putfield      #25                 // Field requestUri:Ljava/net/URI;
     103: aload_0
     104: aload         4
     106: invokestatic  #26                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     109: putfield      #27                 // Field requestParameterMap:Ljava/util/Map;
     112: aload_0
     113: aload_3
     114: invokestatic  #26                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     117: putfield      #28                 // Field pathParameters:Ljava/util/Map;
     120: aload_0
     121: aload         8
     123: putfield      #8                  // Field config:Ljavax/websocket/EndpointConfig;
     126: aload_0
     127: new           #29                 // class io/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint
     130: dup
     131: aload_0
     132: aload         10
     134: invokespecial #30                 // Method io/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint."<init>":(Lio/undertow/websockets/jsr/UndertowSession;Lio/undertow/websockets/jsr/Encoding;)V
     137: putfield      #31                 // Field remote:Lio/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint;
     140: aload_0
     141: aload         7
     143: putfield      #7                  // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     146: aload_0
     147: new           #32                 // class io/undertow/server/session/SecureRandomSessionIdGenerator
     150: dup
     151: invokespecial #33                 // Method io/undertow/server/session/SecureRandomSessionIdGenerator."<init>":()V
     154: invokevirtual #34                 // Method io/undertow/server/session/SecureRandomSessionIdGenerator.createSessionId:()Ljava/lang/String;
     157: putfield      #35                 // Field sessionId:Ljava/lang/String;
     160: aload_0
     161: new           #36                 // class java/util/HashMap
     164: dup
     165: aload         8
     167: invokeinterface #37,  1           // InterfaceMethod javax/websocket/EndpointConfig.getUserProperties:()Ljava/util/Map;
     172: invokespecial #38                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     175: invokestatic  #39                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
     178: putfield      #40                 // Field attrs:Ljava/util/Map;
     181: aload_0
     182: aload         13
     184: putfield      #41                 // Field extensions:Ljava/util/List;
     187: aload_0
     188: aload         12
     190: putfield      #42                 // Field subProtocol:Ljava/lang/String;
     193: aload_0
     194: aload_1
     195: invokespecial #10                 // Method setupWebSocketChannel:(Lio/undertow/websockets/core/WebSocketChannel;)V
     198: return

  public io.undertow.websockets.jsr.ServerWebSocketContainer getContainer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field container:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
       4: areturn

  public synchronized void addMessageHandler(javax.websocket.MessageHandler) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: aload_1
       5: invokevirtual #44                 // Method io/undertow/websockets/jsr/FrameHandler.addHandler:(Ljavax/websocket/MessageHandler;)V
       8: return

  public <T> void addMessageHandler(java.lang.Class<T>, javax.websocket.MessageHandler$Whole<T>);
    Code:
       0: aload_0
       1: getfield      #43                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: aload_1
       5: aload_2
       6: invokevirtual #45                 // Method io/undertow/websockets/jsr/FrameHandler.addHandler:(Ljava/lang/Class;Ljavax/websocket/MessageHandler;)V
       9: return

  public <T> void addMessageHandler(java.lang.Class<T>, javax.websocket.MessageHandler$Partial<T>);
    Code:
       0: aload_0
       1: getfield      #43                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: aload_1
       5: aload_2
       6: invokevirtual #45                 // Method io/undertow/websockets/jsr/FrameHandler.addHandler:(Ljava/lang/Class;Ljavax/websocket/MessageHandler;)V
       9: return

  public synchronized java.util.Set<javax.websocket.MessageHandler> getMessageHandlers();
    Code:
       0: aload_0
       1: getfield      #43                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: invokevirtual #46                 // Method io/undertow/websockets/jsr/FrameHandler.getHandlers:()Ljava/util/Set;
       7: areturn

  public synchronized void removeMessageHandler(javax.websocket.MessageHandler);
    Code:
       0: aload_0
       1: getfield      #43                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: aload_1
       5: invokevirtual #47                 // Method io/undertow/websockets/jsr/FrameHandler.removeHandler:(Ljavax/websocket/MessageHandler;)V
       8: return

  public void setReceiveListener(org.xnio.ChannelListener<io.undertow.websockets.core.WebSocketChannel>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #48                 // Method io/undertow/websockets/core/WebSocketChannel.getReceiveSetter:()Lorg/xnio/ChannelListener$Setter;
       7: aload_1
       8: invokeinterface #49,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      13: return

  public java.lang.String getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #50                 // Method io/undertow/websockets/core/WebSocketChannel.getVersion:()Lio/undertow/websockets/core/WebSocketVersion;
       7: invokevirtual #51                 // Method io/undertow/websockets/core/WebSocketVersion.toHttpHeaderValue:()Ljava/lang/String;
      10: areturn

  public java.lang.String getNegotiatedSubprotocol();
    Code:
       0: aload_0
       1: getfield      #42                 // Field subProtocol:Ljava/lang/String;
       4: ifnonnull     12
       7: ldc           #52                 // String
       9: goto          16
      12: aload_0
      13: getfield      #42                 // Field subProtocol:Ljava/lang/String;
      16: areturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #53                 // Method io/undertow/websockets/core/WebSocketChannel.isSecure:()Z
       7: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #54                 // Method io/undertow/websockets/core/WebSocketChannel.isOpen:()Z
       7: ireturn

  public long getMaxIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #55                 // Method io/undertow/websockets/core/WebSocketChannel.getIdleTimeout:()J
       7: lreturn

  public void setMaxIdleTimeout(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: lload_1
       5: invokevirtual #56                 // Method io/undertow/websockets/core/WebSocketChannel.setIdleTimeout:(J)V
       8: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #35                 // Field sessionId:Ljava/lang/String;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #57                 // class javax/websocket/CloseReason
       4: dup
       5: getstatic     #58                 // Field javax/websocket/CloseReason$CloseCodes.NORMAL_CLOSURE:Ljavax/websocket/CloseReason$CloseCodes;
       8: aconst_null
       9: invokespecial #59                 // Method javax/websocket/CloseReason."<init>":(Ljavax/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
      12: invokevirtual #60                 // Method close:(Ljavax/websocket/CloseReason;)V
      15: return

  public void close(javax.websocket.CloseReason) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field localClose:Z
       5: aload_0
       6: aload_1
       7: invokevirtual #61                 // Method closeInternal:(Ljavax/websocket/CloseReason;)V
      10: return

  public void closeInternal() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #57                 // class javax/websocket/CloseReason
       4: dup
       5: getstatic     #58                 // Field javax/websocket/CloseReason$CloseCodes.NORMAL_CLOSURE:Ljavax/websocket/CloseReason$CloseCodes;
       8: aconst_null
       9: invokespecial #59                 // Method javax/websocket/CloseReason."<init>":(Ljavax/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
      12: invokevirtual #61                 // Method closeInternal:(Ljavax/websocket/CloseReason;)V
      15: return

  public void closeInternal(javax.websocket.CloseReason) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          551
      12: aload_0
      13: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      16: invokevirtual #63                 // Method io/undertow/websockets/core/WebSocketChannel.isCloseFrameReceived:()Z
      19: ifne          95
      22: aload_0
      23: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      26: invokevirtual #64                 // Method io/undertow/websockets/core/WebSocketChannel.isCloseFrameSent:()Z
      29: ifne          95
      32: aload_1
      33: ifnull        54
      36: aload_1
      37: invokevirtual #65                 // Method javax/websocket/CloseReason.getCloseCode:()Ljavax/websocket/CloseReason$CloseCode;
      40: invokeinterface #66,  1           // InterfaceMethod javax/websocket/CloseReason$CloseCode.getCode:()I
      45: getstatic     #67                 // Field javax/websocket/CloseReason$CloseCodes.NO_STATUS_CODE:Ljavax/websocket/CloseReason$CloseCodes;
      48: invokevirtual #68                 // Method javax/websocket/CloseReason$CloseCodes.getCode:()I
      51: if_icmpne     64
      54: aload_0
      55: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      58: invokevirtual #69                 // Method io/undertow/websockets/core/WebSocketChannel.sendClose:()V
      61: goto          95
      64: new           #70                 // class io/undertow/websockets/core/CloseMessage
      67: dup
      68: aload_1
      69: invokevirtual #65                 // Method javax/websocket/CloseReason.getCloseCode:()Ljavax/websocket/CloseReason$CloseCode;
      72: invokeinterface #66,  1           // InterfaceMethod javax/websocket/CloseReason$CloseCode.getCode:()I
      77: aload_1
      78: invokevirtual #71                 // Method javax/websocket/CloseReason.getReasonPhrase:()Ljava/lang/String;
      81: invokespecial #72                 // Method io/undertow/websockets/core/CloseMessage."<init>":(ILjava/lang/String;)V
      84: invokevirtual #73                 // Method io/undertow/websockets/core/CloseMessage.toByteBuffer:()Ljava/nio/ByteBuffer;
      87: aload_0
      88: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      91: aconst_null
      92: invokestatic  #74                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      95: aconst_null
      96: astore_2
      97: getstatic     #67                 // Field javax/websocket/CloseReason$CloseCodes.NO_STATUS_CODE:Ljavax/websocket/CloseReason$CloseCodes;
     100: astore_3
     101: aload_0
     102: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     105: invokevirtual #75                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseCode:()I
     108: iconst_m1
     109: if_icmpeq     134
     112: aload_0
     113: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     116: invokevirtual #76                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseReason:()Ljava/lang/String;
     119: astore_2
     120: aload_0
     121: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     124: invokevirtual #75                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseCode:()I
     127: invokestatic  #77                 // Method javax/websocket/CloseReason$CloseCodes.getCloseCode:(I)Ljavax/websocket/CloseReason$CloseCode;
     130: astore_3
     131: goto          148
     134: aload_1
     135: ifnull        148
     138: aload_1
     139: invokevirtual #71                 // Method javax/websocket/CloseReason.getReasonPhrase:()Ljava/lang/String;
     142: astore_2
     143: aload_1
     144: invokevirtual #65                 // Method javax/websocket/CloseReason.getCloseCode:()Ljavax/websocket/CloseReason$CloseCode;
     147: astore_3
     148: aload_0
     149: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     152: invokevirtual #78                 // Method io/undertow/websockets/core/WebSocketChannel.isCloseInitiatedByRemotePeer:()Z
     155: ifne          184
     158: aload_0
     159: getfield      #9                  // Field localClose:Z
     162: ifne          184
     165: aload_3
     166: invokeinterface #66,  1           // InterfaceMethod javax/websocket/CloseReason$CloseCode.getCode:()I
     171: getstatic     #79                 // Field javax/websocket/CloseReason$CloseCodes.TOO_BIG:Ljavax/websocket/CloseReason$CloseCodes;
     174: invokevirtual #68                 // Method javax/websocket/CloseReason$CloseCodes.getCode:()I
     177: if_icmpeq     184
     180: getstatic     #80                 // Field javax/websocket/CloseReason$CloseCodes.CLOSED_ABNORMALLY:Ljavax/websocket/CloseReason$CloseCodes;
     183: astore_3
     184: aload_0
     185: getfield      #7                  // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     188: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     193: checkcast     #82                 // class javax/websocket/Endpoint
     196: aload_0
     197: new           #57                 // class javax/websocket/CloseReason
     200: dup
     201: aload_3
     202: aload_2
     203: invokespecial #59                 // Method javax/websocket/CloseReason."<init>":(Ljavax/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
     206: invokevirtual #83                 // Method javax/websocket/Endpoint.onClose:(Ljavax/websocket/Session;Ljavax/websocket/CloseReason;)V
     209: goto          385
     212: astore_2
     213: aload_0
     214: getfield      #7                  // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     217: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     222: checkcast     #82                 // class javax/websocket/Endpoint
     225: aload_0
     226: aload_2
     227: invokevirtual #85                 // Method javax/websocket/Endpoint.onError:(Ljavax/websocket/Session;Ljava/lang/Throwable;)V
     230: goto          385
     233: astore        4
     235: aconst_null
     236: astore        5
     238: getstatic     #67                 // Field javax/websocket/CloseReason$CloseCodes.NO_STATUS_CODE:Ljavax/websocket/CloseReason$CloseCodes;
     241: astore        6
     243: aload_0
     244: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     247: invokevirtual #75                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseCode:()I
     250: iconst_m1
     251: if_icmpeq     278
     254: aload_0
     255: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     258: invokevirtual #76                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseReason:()Ljava/lang/String;
     261: astore        5
     263: aload_0
     264: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     267: invokevirtual #75                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseCode:()I
     270: invokestatic  #77                 // Method javax/websocket/CloseReason$CloseCodes.getCloseCode:(I)Ljavax/websocket/CloseReason$CloseCode;
     273: astore        6
     275: goto          294
     278: aload_1
     279: ifnull        294
     282: aload_1
     283: invokevirtual #71                 // Method javax/websocket/CloseReason.getReasonPhrase:()Ljava/lang/String;
     286: astore        5
     288: aload_1
     289: invokevirtual #65                 // Method javax/websocket/CloseReason.getCloseCode:()Ljavax/websocket/CloseReason$CloseCode;
     292: astore        6
     294: aload_0
     295: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     298: invokevirtual #78                 // Method io/undertow/websockets/core/WebSocketChannel.isCloseInitiatedByRemotePeer:()Z
     301: ifne          332
     304: aload_0
     305: getfield      #9                  // Field localClose:Z
     308: ifne          332
     311: aload         6
     313: invokeinterface #66,  1           // InterfaceMethod javax/websocket/CloseReason$CloseCode.getCode:()I
     318: getstatic     #79                 // Field javax/websocket/CloseReason$CloseCodes.TOO_BIG:Ljavax/websocket/CloseReason$CloseCodes;
     321: invokevirtual #68                 // Method javax/websocket/CloseReason$CloseCodes.getCode:()I
     324: if_icmpeq     332
     327: getstatic     #80                 // Field javax/websocket/CloseReason$CloseCodes.CLOSED_ABNORMALLY:Ljavax/websocket/CloseReason$CloseCodes;
     330: astore        6
     332: aload_0
     333: getfield      #7                  // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     336: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     341: checkcast     #82                 // class javax/websocket/Endpoint
     344: aload_0
     345: new           #57                 // class javax/websocket/CloseReason
     348: dup
     349: aload         6
     351: aload         5
     353: invokespecial #59                 // Method javax/websocket/CloseReason."<init>":(Ljavax/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
     356: invokevirtual #83                 // Method javax/websocket/Endpoint.onClose:(Ljavax/websocket/Session;Ljavax/websocket/CloseReason;)V
     359: goto          382
     362: astore        5
     364: aload_0
     365: getfield      #7                  // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     368: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     373: checkcast     #82                 // class javax/websocket/Endpoint
     376: aload_0
     377: aload         5
     379: invokevirtual #85                 // Method javax/websocket/Endpoint.onError:(Ljavax/websocket/Session;Ljava/lang/Throwable;)V
     382: aload         4
     384: athrow
     385: aload_0
     386: invokevirtual #86                 // Method close0:()V
     389: aload_0
     390: getfield      #3                  // Field clientConnectionBuilder:Lio/undertow/websockets/client/WebSocketClient$ConnectionBuilder;
     393: ifnull        551
     396: aload_0
     397: getfield      #9                  // Field localClose:Z
     400: ifne          551
     403: aload_0
     404: getfield      #5                  // Field container:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
     407: invokevirtual #87                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.getWebSocketReconnectHandler:()Lio/undertow/websockets/jsr/WebSocketReconnectHandler;
     410: astore_2
     411: aload_2
     412: ifnull        461
     415: getstatic     #88                 // Field io/undertow/websockets/jsr/JsrWebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/jsr/JsrWebSocketLogger;
     418: ldc           #89                 // String Calling reconnect handler for %s
     420: aload_0
     421: invokeinterface #90,  3           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     426: aload_2
     427: aload_1
     428: aload_0
     429: getfield      #25                 // Field requestUri:Ljava/net/URI;
     432: aload_0
     433: aload_0
     434: dup
     435: getfield      #18                 // Field disconnectCount:I
     438: iconst_1
     439: iadd
     440: dup_x1
     441: putfield      #18                 // Field disconnectCount:I
     444: invokeinterface #91,  5           // InterfaceMethod io/undertow/websockets/jsr/WebSocketReconnectHandler.disconnected:(Ljavax/websocket/CloseReason;Ljava/net/URI;Ljavax/websocket/Session;I)J
     449: lstore_3
     450: lload_3
     451: lconst_0
     452: lcmp
     453: iflt          461
     456: aload_0
     457: lload_3
     458: invokespecial #4                  // Method handleReconnect:(J)V
     461: goto          551
     464: astore        7
     466: aload_0
     467: invokevirtual #86                 // Method close0:()V
     470: aload_0
     471: getfield      #3                  // Field clientConnectionBuilder:Lio/undertow/websockets/client/WebSocketClient$ConnectionBuilder;
     474: ifnull        548
     477: aload_0
     478: getfield      #9                  // Field localClose:Z
     481: ifne          548
     484: aload_0
     485: getfield      #5                  // Field container:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
     488: invokevirtual #87                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.getWebSocketReconnectHandler:()Lio/undertow/websockets/jsr/WebSocketReconnectHandler;
     491: astore        8
     493: aload         8
     495: ifnull        548
     498: getstatic     #88                 // Field io/undertow/websockets/jsr/JsrWebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/jsr/JsrWebSocketLogger;
     501: ldc           #89                 // String Calling reconnect handler for %s
     503: aload_0
     504: invokeinterface #90,  3           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     509: aload         8
     511: aload_1
     512: aload_0
     513: getfield      #25                 // Field requestUri:Ljava/net/URI;
     516: aload_0
     517: aload_0
     518: dup
     519: getfield      #18                 // Field disconnectCount:I
     522: iconst_1
     523: iadd
     524: dup_x1
     525: putfield      #18                 // Field disconnectCount:I
     528: invokeinterface #91,  5           // InterfaceMethod io/undertow/websockets/jsr/WebSocketReconnectHandler.disconnected:(Ljavax/websocket/CloseReason;Ljava/net/URI;Ljavax/websocket/Session;I)J
     533: lstore        9
     535: lload         9
     537: lconst_0
     538: lcmp
     539: iflt          548
     542: aload_0
     543: lload         9
     545: invokespecial #4                  // Method handleReconnect:(J)V
     548: aload         7
     550: athrow
     551: return
    Exception table:
       from    to  target type
          95   209   212   Class java/lang/Exception
          12    95   233   any
         235   359   362   Class java/lang/Exception
         233   235   233   any
          12   385   464   any
         464   466   464   any

  private void handleReconnect(long);
    Code:
       0: getstatic     #88                 // Field io/undertow/websockets/jsr/JsrWebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/jsr/JsrWebSocketLogger;
       3: ldc           #92                 // String Attempting reconnect in %s ms for session %s
       5: lload_1
       6: aload_0
       7: invokeinterface #93,  5           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketLogger.debugf:(Ljava/lang/String;JLjava/lang/Object;)V
      12: aload_0
      13: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      16: invokevirtual #94                 // Method io/undertow/websockets/core/WebSocketChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      19: new           #95                 // class io/undertow/websockets/jsr/UndertowSession$1
      22: dup
      23: aload_0
      24: invokespecial #96                 // Method io/undertow/websockets/jsr/UndertowSession$1."<init>":(Lio/undertow/websockets/jsr/UndertowSession;)V
      27: lload_1
      28: getstatic     #97                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      31: invokevirtual #98                 // Method org/xnio/XnioIoThread.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      34: pop
      35: return

  public void forceClose();
    Code:
       0: aload_0
       1: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokestatic  #99                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: return

  public java.net.URI getRequestURI();
    Code:
       0: aload_0
       1: getfield      #25                 // Field requestUri:Ljava/net/URI;
       4: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getRequestParameterMap();
    Code:
       0: aload_0
       1: getfield      #27                 // Field requestParameterMap:Ljava/util/Map;
       4: areturn

  public java.lang.String getQueryString();
    Code:
       0: aload_0
       1: getfield      #22                 // Field queryString:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getPathParameters();
    Code:
       0: aload_0
       1: getfield      #28                 // Field pathParameters:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getUserProperties();
    Code:
       0: aload_0
       1: getfield      #40                 // Field attrs:Ljava/util/Map;
       4: areturn

  public java.security.Principal getUserPrincipal();
    Code:
       0: aload_0
       1: getfield      #24                 // Field user:Ljava/security/Principal;
       4: areturn

  public void setMaxBinaryMessageBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field maximumBinaryBufferSize:I
       5: return

  public int getMaxBinaryMessageBufferSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field maximumBinaryBufferSize:I
       4: ireturn

  public void setMaxTextMessageBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field maximumTextBufferSize:I
       5: return

  public int getMaxTextMessageBufferSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field maximumTextBufferSize:I
       4: ireturn

  public javax.websocket.RemoteEndpoint$Async getAsyncRemote();
    Code:
       0: aload_0
       1: getfield      #31                 // Field remote:Lio/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint;
       4: invokevirtual #100                // Method io/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint.getAsync:()Ljavax/websocket/RemoteEndpoint$Async;
       7: areturn

  public javax.websocket.RemoteEndpoint$Basic getBasicRemote();
    Code:
       0: aload_0
       1: getfield      #31                 // Field remote:Lio/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint;
       4: invokevirtual #101                // Method io/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint.getBasic:()Ljavax/websocket/RemoteEndpoint$Basic;
       7: areturn

  public java.util.Set<javax.websocket.Session> getOpenSessions();
    Code:
       0: new           #102                // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #1                  // Field openSessions:Lio/undertow/websockets/jsr/SessionContainer;
       8: invokevirtual #103                // Method io/undertow/websockets/jsr/SessionContainer.getOpenSessions:()Ljava/util/Set;
      11: invokespecial #104                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      14: areturn

  public java.util.List<javax.websocket.Extension> getNegotiatedExtensions();
    Code:
       0: aload_0
       1: getfield      #41                 // Field extensions:Ljava/util/List;
       4: areturn

  void close0();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method getExecutor:()Ljava/util/concurrent/Executor;
       4: new           #106                // class io/undertow/websockets/jsr/UndertowSession$2
       7: dup
       8: aload_0
       9: invokespecial #107                // Method io/undertow/websockets/jsr/UndertowSession$2."<init>":(Lio/undertow/websockets/jsr/UndertowSession;)V
      12: invokeinterface #108,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      17: return

  public io.undertow.websockets.jsr.Encoding getEncoding();
    Code:
       0: aload_0
       1: getfield      #2                  // Field encoding:Lio/undertow/websockets/jsr/Encoding;
       4: areturn

  public io.undertow.websockets.core.WebSocketChannel getWebSocketChannel();
    Code:
       0: aload_0
       1: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: areturn

  private void setupWebSocketChannel(io.undertow.websockets.core.WebSocketChannel);
    Code:
       0: aload_0
       1: new           #109                // class io/undertow/websockets/jsr/FrameHandler
       4: dup
       5: aload_0
       6: aload_0
       7: getfield      #7                  // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
      10: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
      15: checkcast     #82                 // class javax/websocket/Endpoint
      18: invokespecial #110                // Method io/undertow/websockets/jsr/FrameHandler."<init>":(Lio/undertow/websockets/jsr/UndertowSession;Ljavax/websocket/Endpoint;)V
      21: putfield      #43                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
      24: aload_1
      25: invokevirtual #48                 // Method io/undertow/websockets/core/WebSocketChannel.getReceiveSetter:()Lorg/xnio/ChannelListener$Setter;
      28: aload_0
      29: getfield      #43                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
      32: invokeinterface #49,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      37: aload_1
      38: new           #111                // class io/undertow/websockets/jsr/UndertowSession$3
      41: dup
      42: aload_0
      43: invokespecial #112                // Method io/undertow/websockets/jsr/UndertowSession$3."<init>":(Lio/undertow/websockets/jsr/UndertowSession;)V
      46: invokevirtual #113                // Method io/undertow/websockets/core/WebSocketChannel.addCloseTask:(Lorg/xnio/ChannelListener;)V
      49: return

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #43                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: invokevirtual #114                // Method io/undertow/websockets/jsr/FrameHandler.getExecutor:()Ljava/util/concurrent/Executor;
       7: areturn

  boolean isSessionClosed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #115                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public javax.websocket.WebSocketContainer getContainer();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$000(io.undertow.websockets.jsr.UndertowSession);
    Code:
       0: aload_0
       1: getfield      #12                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static io.undertow.websockets.core.WebSocketChannel access$102(io.undertow.websockets.jsr.UndertowSession, io.undertow.websockets.core.WebSocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       6: areturn

  static void access$200(io.undertow.websockets.jsr.UndertowSession, io.undertow.websockets.core.WebSocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method setupWebSocketChannel:(Lio/undertow/websockets/core/WebSocketChannel;)V
       5: return

  static boolean access$302(io.undertow.websockets.jsr.UndertowSession, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #9                  // Field localClose:Z
       6: ireturn

  static javax.websocket.EndpointConfig access$400(io.undertow.websockets.jsr.UndertowSession);
    Code:
       0: aload_0
       1: getfield      #8                  // Field config:Ljavax/websocket/EndpointConfig;
       4: areturn

  static io.undertow.servlet.api.InstanceHandle access$500(io.undertow.websockets.jsr.UndertowSession);
    Code:
       0: aload_0
       1: getfield      #7                  // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
       4: areturn

  static io.undertow.websockets.core.WebSocketChannel access$100(io.undertow.websockets.jsr.UndertowSession);
    Code:
       0: aload_0
       1: getfield      #11                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: areturn

  static int access$604(io.undertow.websockets.jsr.UndertowSession);
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field failedCount:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #6                  // Field failedCount:I
      11: ireturn

  static io.undertow.websockets.jsr.ServerWebSocketContainer access$700(io.undertow.websockets.jsr.UndertowSession);
    Code:
       0: aload_0
       1: getfield      #5                  // Field container:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
       4: areturn

  static void access$800(io.undertow.websockets.jsr.UndertowSession, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #4                  // Method handleReconnect:(J)V
       5: return

  static io.undertow.websockets.client.WebSocketClient$ConnectionBuilder access$900(io.undertow.websockets.jsr.UndertowSession);
    Code:
       0: aload_0
       1: getfield      #3                  // Field clientConnectionBuilder:Lio/undertow/websockets/client/WebSocketClient$ConnectionBuilder;
       4: areturn

  static io.undertow.websockets.jsr.Encoding access$1000(io.undertow.websockets.jsr.UndertowSession);
    Code:
       0: aload_0
       1: getfield      #2                  // Field encoding:Lio/undertow/websockets/jsr/Encoding;
       4: areturn

  static io.undertow.websockets.jsr.SessionContainer access$1100(io.undertow.websockets.jsr.UndertowSession);
    Code:
       0: aload_0
       1: getfield      #1                  // Field openSessions:Lio/undertow/websockets/jsr/SessionContainer;
       4: areturn

  static {};
    Code:
       0: ldc           #117                // class io/undertow/websockets/jsr/UndertowSession
       2: invokevirtual #118                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #19                 // Field $assertionsDisabled:Z
      16: return
}
