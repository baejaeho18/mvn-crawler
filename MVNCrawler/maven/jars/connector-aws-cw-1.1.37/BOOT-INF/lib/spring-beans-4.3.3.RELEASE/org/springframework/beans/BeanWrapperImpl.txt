Compiled from "BeanWrapperImpl.java"
public class org.springframework.beans.BeanWrapperImpl extends org.springframework.beans.AbstractNestablePropertyAccessor implements org.springframework.beans.BeanWrapper {
  private org.springframework.beans.CachedIntrospectionResults cachedIntrospectionResults;

  private java.security.AccessControlContext acc;

  public org.springframework.beans.BeanWrapperImpl();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #3                  // Method "<init>":(Z)V
       5: return

  public org.springframework.beans.BeanWrapperImpl(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method org/springframework/beans/AbstractNestablePropertyAccessor."<init>":(Z)V
       5: return

  public org.springframework.beans.BeanWrapperImpl(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/springframework/beans/AbstractNestablePropertyAccessor."<init>":(Ljava/lang/Object;)V
       5: return

  public org.springframework.beans.BeanWrapperImpl(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/springframework/beans/AbstractNestablePropertyAccessor."<init>":(Ljava/lang/Class;)V
       5: return

  public org.springframework.beans.BeanWrapperImpl(java.lang.Object, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method org/springframework/beans/AbstractNestablePropertyAccessor."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  private org.springframework.beans.BeanWrapperImpl(java.lang.Object, java.lang.String, org.springframework.beans.BeanWrapperImpl);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #8                  // Method org/springframework/beans/AbstractNestablePropertyAccessor."<init>":(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/beans/AbstractNestablePropertyAccessor;)V
       7: aload_0
       8: aload_3
       9: getfield      #1                  // Field acc:Ljava/security/AccessControlContext;
      12: invokevirtual #9                  // Method setSecurityContext:(Ljava/security/AccessControlContext;)V
      15: return

  public void setBeanInstance(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field wrappedObject:Ljava/lang/Object;
       5: aload_0
       6: aload_1
       7: putfield      #11                 // Field rootObject:Ljava/lang/Object;
      10: aload_0
      11: new           #12                 // class org/springframework/beans/TypeConverterDelegate
      14: dup
      15: aload_0
      16: aload_0
      17: getfield      #10                 // Field wrappedObject:Ljava/lang/Object;
      20: invokespecial #13                 // Method org/springframework/beans/TypeConverterDelegate."<init>":(Lorg/springframework/beans/PropertyEditorRegistrySupport;Ljava/lang/Object;)V
      23: putfield      #14                 // Field typeConverterDelegate:Lorg/springframework/beans/TypeConverterDelegate;
      26: aload_0
      27: aload_1
      28: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: invokevirtual #16                 // Method setIntrospectionClass:(Ljava/lang/Class;)V
      34: return

  public void setWrappedInstance(java.lang.Object, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #17                 // Method org/springframework/beans/AbstractNestablePropertyAccessor.setWrappedInstance:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: aload_0
       9: invokevirtual #18                 // Method getWrappedClass:()Ljava/lang/Class;
      12: invokevirtual #16                 // Method setIntrospectionClass:(Ljava/lang/Class;)V
      15: return

  protected void setIntrospectionClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field cachedIntrospectionResults:Lorg/springframework/beans/CachedIntrospectionResults;
       4: ifnull        23
       7: aload_0
       8: getfield      #19                 // Field cachedIntrospectionResults:Lorg/springframework/beans/CachedIntrospectionResults;
      11: invokevirtual #20                 // Method org/springframework/beans/CachedIntrospectionResults.getBeanClass:()Ljava/lang/Class;
      14: aload_1
      15: if_acmpeq     23
      18: aload_0
      19: aconst_null
      20: putfield      #19                 // Field cachedIntrospectionResults:Lorg/springframework/beans/CachedIntrospectionResults;
      23: return

  private org.springframework.beans.CachedIntrospectionResults getCachedIntrospectionResults();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getWrappedInstance:()Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #22                 // String BeanWrapper does not hold a bean instance
      14: invokestatic  #23                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #19                 // Field cachedIntrospectionResults:Lorg/springframework/beans/CachedIntrospectionResults;
      21: ifnonnull     35
      24: aload_0
      25: aload_0
      26: invokevirtual #18                 // Method getWrappedClass:()Ljava/lang/Class;
      29: invokestatic  #24                 // Method org/springframework/beans/CachedIntrospectionResults.forClass:(Ljava/lang/Class;)Lorg/springframework/beans/CachedIntrospectionResults;
      32: putfield      #19                 // Field cachedIntrospectionResults:Lorg/springframework/beans/CachedIntrospectionResults;
      35: aload_0
      36: getfield      #19                 // Field cachedIntrospectionResults:Lorg/springframework/beans/CachedIntrospectionResults;
      39: areturn

  public void setSecurityContext(java.security.AccessControlContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field acc:Ljava/security/AccessControlContext;
       5: return

  public java.security.AccessControlContext getSecurityContext();
    Code:
       0: aload_0
       1: getfield      #1                  // Field acc:Ljava/security/AccessControlContext;
       4: areturn

  public java.lang.Object convertForProperty(java.lang.Object, java.lang.String) throws org.springframework.beans.TypeMismatchException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method getCachedIntrospectionResults:()Lorg/springframework/beans/CachedIntrospectionResults;
       4: astore_3
       5: aload_3
       6: aload_2
       7: invokevirtual #26                 // Method org/springframework/beans/CachedIntrospectionResults.getPropertyDescriptor:(Ljava/lang/String;)Ljava/beans/PropertyDescriptor;
      10: astore        4
      12: aload         4
      14: ifnonnull     74
      17: new           #27                 // class org/springframework/beans/InvalidPropertyException
      20: dup
      21: aload_0
      22: invokevirtual #28                 // Method getRootClass:()Ljava/lang/Class;
      25: new           #29                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      32: aload_0
      33: invokevirtual #31                 // Method getNestedPath:()Ljava/lang/String;
      36: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_2
      40: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: new           #29                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #34                 // String No property \'
      55: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_2
      59: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #35                 // String \' found
      64: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #36                 // Method org/springframework/beans/InvalidPropertyException."<init>":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
      73: athrow
      74: aload_3
      75: aload         4
      77: invokevirtual #37                 // Method org/springframework/beans/CachedIntrospectionResults.getTypeDescriptor:(Ljava/beans/PropertyDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
      80: astore        5
      82: aload         5
      84: ifnonnull     108
      87: aload_3
      88: aload         4
      90: new           #38                 // class org/springframework/core/convert/TypeDescriptor
      93: dup
      94: aload_0
      95: aload         4
      97: invokespecial #2                  // Method property:(Ljava/beans/PropertyDescriptor;)Lorg/springframework/core/convert/Property;
     100: invokespecial #39                 // Method org/springframework/core/convert/TypeDescriptor."<init>":(Lorg/springframework/core/convert/Property;)V
     103: invokevirtual #40                 // Method org/springframework/beans/CachedIntrospectionResults.addTypeDescriptor:(Ljava/beans/PropertyDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
     106: astore        5
     108: aload_0
     109: aload_2
     110: aconst_null
     111: aload_1
     112: aload         5
     114: invokevirtual #41                 // Method convertForProperty:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
     117: areturn

  private org.springframework.core.convert.Property property(java.beans.PropertyDescriptor);
    Code:
       0: aload_1
       1: checkcast     #42                 // class org/springframework/beans/GenericTypeAwarePropertyDescriptor
       4: astore_2
       5: new           #43                 // class org/springframework/core/convert/Property
       8: dup
       9: aload_2
      10: invokevirtual #44                 // Method org/springframework/beans/GenericTypeAwarePropertyDescriptor.getBeanClass:()Ljava/lang/Class;
      13: aload_2
      14: invokevirtual #45                 // Method org/springframework/beans/GenericTypeAwarePropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
      17: aload_2
      18: invokevirtual #46                 // Method org/springframework/beans/GenericTypeAwarePropertyDescriptor.getWriteMethod:()Ljava/lang/reflect/Method;
      21: aload_2
      22: invokevirtual #47                 // Method org/springframework/beans/GenericTypeAwarePropertyDescriptor.getName:()Ljava/lang/String;
      25: invokespecial #48                 // Method org/springframework/core/convert/Property."<init>":(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/String;)V
      28: areturn

  protected org.springframework.beans.BeanWrapperImpl$BeanPropertyHandler getLocalPropertyHandler(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method getCachedIntrospectionResults:()Lorg/springframework/beans/CachedIntrospectionResults;
       4: aload_1
       5: invokevirtual #26                 // Method org/springframework/beans/CachedIntrospectionResults.getPropertyDescriptor:(Ljava/lang/String;)Ljava/beans/PropertyDescriptor;
       8: astore_2
       9: aload_2
      10: ifnull        23
      13: new           #49                 // class org/springframework/beans/BeanWrapperImpl$BeanPropertyHandler
      16: dup
      17: aload_0
      18: aload_2
      19: invokespecial #50                 // Method org/springframework/beans/BeanWrapperImpl$BeanPropertyHandler."<init>":(Lorg/springframework/beans/BeanWrapperImpl;Ljava/beans/PropertyDescriptor;)V
      22: areturn
      23: aconst_null
      24: areturn

  protected org.springframework.beans.BeanWrapperImpl newNestedPropertyAccessor(java.lang.Object, java.lang.String);
    Code:
       0: new           #51                 // class org/springframework/beans/BeanWrapperImpl
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: invokespecial #52                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/beans/BeanWrapperImpl;)V
      10: areturn

  protected org.springframework.beans.NotWritablePropertyException createNotWritablePropertyException(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #28                 // Method getRootClass:()Ljava/lang/Class;
       5: invokestatic  #53                 // Method org/springframework/beans/PropertyMatches.forProperty:(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/beans/PropertyMatches;
       8: astore_2
       9: new           #54                 // class org/springframework/beans/NotWritablePropertyException
      12: dup
      13: aload_0
      14: invokevirtual #28                 // Method getRootClass:()Ljava/lang/Class;
      17: new           #29                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_0
      25: invokevirtual #31                 // Method getNestedPath:()Ljava/lang/String;
      28: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: aload_2
      39: invokevirtual #55                 // Method org/springframework/beans/PropertyMatches.buildErrorMessage:()Ljava/lang/String;
      42: aload_2
      43: invokevirtual #56                 // Method org/springframework/beans/PropertyMatches.getPossibleMatches:()[Ljava/lang/String;
      46: invokespecial #57                 // Method org/springframework/beans/NotWritablePropertyException."<init>":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
      49: athrow

  public java.beans.PropertyDescriptor[] getPropertyDescriptors();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method getCachedIntrospectionResults:()Lorg/springframework/beans/CachedIntrospectionResults;
       4: invokevirtual #58                 // Method org/springframework/beans/CachedIntrospectionResults.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
       7: areturn

  public java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String) throws org.springframework.beans.InvalidPropertyException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method getPropertyAccessorForPropertyPath:(Ljava/lang/String;)Lorg/springframework/beans/AbstractNestablePropertyAccessor;
       5: checkcast     #51                 // class org/springframework/beans/BeanWrapperImpl
       8: astore_2
       9: aload_0
      10: aload_2
      11: aload_1
      12: invokevirtual #60                 // Method getFinalPath:(Lorg/springframework/beans/AbstractNestablePropertyAccessor;Ljava/lang/String;)Ljava/lang/String;
      15: astore_3
      16: aload_2
      17: invokespecial #25                 // Method getCachedIntrospectionResults:()Lorg/springframework/beans/CachedIntrospectionResults;
      20: aload_3
      21: invokevirtual #26                 // Method org/springframework/beans/CachedIntrospectionResults.getPropertyDescriptor:(Ljava/lang/String;)Ljava/beans/PropertyDescriptor;
      24: astore        4
      26: aload         4
      28: ifnonnull     88
      31: new           #27                 // class org/springframework/beans/InvalidPropertyException
      34: dup
      35: aload_0
      36: invokevirtual #28                 // Method getRootClass:()Ljava/lang/Class;
      39: new           #29                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      46: aload_0
      47: invokevirtual #31                 // Method getNestedPath:()Ljava/lang/String;
      50: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: new           #29                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #34                 // String No property \'
      69: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #35                 // String \' found
      78: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #36                 // Method org/springframework/beans/InvalidPropertyException."<init>":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
      87: athrow
      88: aload         4
      90: areturn

  protected org.springframework.beans.AbstractNestablePropertyAccessor newNestedPropertyAccessor(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #61                 // Method newNestedPropertyAccessor:(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/BeanWrapperImpl;
       6: areturn

  protected org.springframework.beans.AbstractNestablePropertyAccessor$PropertyHandler getLocalPropertyHandler(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method getLocalPropertyHandler:(Ljava/lang/String;)Lorg/springframework/beans/BeanWrapperImpl$BeanPropertyHandler;
       5: areturn

  static org.springframework.core.convert.Property access$000(org.springframework.beans.BeanWrapperImpl, java.beans.PropertyDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method property:(Ljava/beans/PropertyDescriptor;)Lorg/springframework/core/convert/Property;
       5: areturn

  static java.security.AccessControlContext access$100(org.springframework.beans.BeanWrapperImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field acc:Ljava/security/AccessControlContext;
       4: areturn
}
