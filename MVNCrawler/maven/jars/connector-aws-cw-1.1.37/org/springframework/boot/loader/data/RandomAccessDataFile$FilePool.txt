Compiled from "RandomAccessDataFile.java"
class org.springframework.boot.loader.data.RandomAccessDataFile$FilePool {
  private final int size;

  private final java.util.concurrent.Semaphore available;

  private final java.util.Queue<java.io.RandomAccessFile> files;

  final org.springframework.boot.loader.data.RandomAccessDataFile this$0;

  org.springframework.boot.loader.data.RandomAccessDataFile$FilePool(org.springframework.boot.loader.data.RandomAccessDataFile, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/boot/loader/data/RandomAccessDataFile;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field size:I
      14: aload_0
      15: new           #4                  // class java/util/concurrent/Semaphore
      18: dup
      19: iload_2
      20: invokespecial #5                  // Method java/util/concurrent/Semaphore."<init>":(I)V
      23: putfield      #6                  // Field available:Ljava/util/concurrent/Semaphore;
      26: aload_0
      27: new           #7                  // class java/util/concurrent/ConcurrentLinkedQueue
      30: dup
      31: invokespecial #8                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      34: putfield      #9                  // Field files:Ljava/util/Queue;
      37: return

  public java.io.RandomAccessFile acquire() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field available:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #10                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: getfield      #9                  // Field files:Ljava/util/Queue;
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      16: checkcast     #12                 // class java/io/RandomAccessFile
      19: astore_1
      20: aload_1
      21: ifnull        26
      24: aload_1
      25: areturn
      26: new           #12                 // class java/io/RandomAccessFile
      29: dup
      30: aload_0
      31: getfield      #1                  // Field this$0:Lorg/springframework/boot/loader/data/RandomAccessDataFile;
      34: invokestatic  #13                 // Method org/springframework/boot/loader/data/RandomAccessDataFile.access$000:(Lorg/springframework/boot/loader/data/RandomAccessDataFile;)Ljava/io/File;
      37: ldc           #14                 // String r
      39: invokespecial #15                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      42: areturn

  public void release(java.io.RandomAccessFile);
    Code:
       0: aload_0
       1: getfield      #9                  // Field files:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #6                  // Field available:Ljava/util/concurrent/Semaphore;
      15: invokevirtual #17                 // Method java/util/concurrent/Semaphore.release:()V
      18: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field available:Ljava/util/concurrent/Semaphore;
       4: aload_0
       5: getfield      #3                  // Field size:I
       8: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:(I)V
      11: aload_0
      12: getfield      #9                  // Field files:Ljava/util/Queue;
      15: invokeinterface #11,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      20: checkcast     #12                 // class java/io/RandomAccessFile
      23: astore_1
      24: aload_1
      25: ifnull        48
      28: aload_1
      29: invokevirtual #19                 // Method java/io/RandomAccessFile.close:()V
      32: aload_0
      33: getfield      #9                  // Field files:Ljava/util/Queue;
      36: invokeinterface #11,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      41: checkcast     #12                 // class java/io/RandomAccessFile
      44: astore_1
      45: goto          24
      48: aload_0
      49: getfield      #6                  // Field available:Ljava/util/concurrent/Semaphore;
      52: aload_0
      53: getfield      #3                  // Field size:I
      56: invokevirtual #20                 // Method java/util/concurrent/Semaphore.release:(I)V
      59: goto          76
      62: astore_2
      63: aload_0
      64: getfield      #6                  // Field available:Ljava/util/concurrent/Semaphore;
      67: aload_0
      68: getfield      #3                  // Field size:I
      71: invokevirtual #20                 // Method java/util/concurrent/Semaphore.release:(I)V
      74: aload_2
      75: athrow
      76: return
    Exception table:
       from    to  target type
          11    48    62   any
}
