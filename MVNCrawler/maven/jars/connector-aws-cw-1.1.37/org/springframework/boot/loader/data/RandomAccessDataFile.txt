Compiled from "RandomAccessDataFile.java"
public class org.springframework.boot.loader.data.RandomAccessDataFile implements org.springframework.boot.loader.data.RandomAccessData {
  private static final int DEFAULT_CONCURRENT_READS;

  private final java.io.File file;

  private final org.springframework.boot.loader.data.RandomAccessDataFile$FilePool filePool;

  private final long offset;

  private final long length;

  public org.springframework.boot.loader.data.RandomAccessDataFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_4
       3: invokespecial #6                  // Method "<init>":(Ljava/io/File;I)V
       6: return

  public org.springframework.boot.loader.data.RandomAccessDataFile(java.io.File, int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #8                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #9                  // String File must not be null
      14: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: invokevirtual #11                 // Method java/io/File.exists:()Z
      22: ifne          35
      25: new           #8                  // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #12                 // String File must exist
      31: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: putfield      #4                  // Field file:Ljava/io/File;
      40: aload_0
      41: new           #13                 // class org/springframework/boot/loader/data/RandomAccessDataFile$FilePool
      44: dup
      45: aload_0
      46: iload_2
      47: invokespecial #14                 // Method org/springframework/boot/loader/data/RandomAccessDataFile$FilePool."<init>":(Lorg/springframework/boot/loader/data/RandomAccessDataFile;I)V
      50: putfield      #2                  // Field filePool:Lorg/springframework/boot/loader/data/RandomAccessDataFile$FilePool;
      53: aload_0
      54: lconst_0
      55: putfield      #3                  // Field offset:J
      58: aload_0
      59: aload_1
      60: invokevirtual #15                 // Method java/io/File.length:()J
      63: putfield      #1                  // Field length:J
      66: return

  private org.springframework.boot.loader.data.RandomAccessDataFile(java.io.File, org.springframework.boot.loader.data.RandomAccessDataFile$FilePool, long, long);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field file:Ljava/io/File;
       9: aload_0
      10: aload_2
      11: putfield      #2                  // Field filePool:Lorg/springframework/boot/loader/data/RandomAccessDataFile$FilePool;
      14: aload_0
      15: lload_3
      16: putfield      #3                  // Field offset:J
      19: aload_0
      20: lload         5
      22: putfield      #1                  // Field length:J
      25: return

  public java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: areturn

  public java.io.InputStream getInputStream(org.springframework.boot.loader.data.RandomAccessData$ResourceAccess) throws java.io.IOException;
    Code:
       0: new           #16                 // class org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #17                 // Method org/springframework/boot/loader/data/RandomAccessDataFile$DataInputStream."<init>":(Lorg/springframework/boot/loader/data/RandomAccessDataFile;Lorg/springframework/boot/loader/data/RandomAccessData$ResourceAccess;)V
       9: areturn

  public org.springframework.boot.loader.data.RandomAccessData getSubsection(long, long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          23
       6: lload_3
       7: lconst_0
       8: lcmp
       9: iflt          23
      12: lload_1
      13: lload_3
      14: ladd
      15: aload_0
      16: getfield      #1                  // Field length:J
      19: lcmp
      20: ifle          31
      23: new           #18                 // class java/lang/IndexOutOfBoundsException
      26: dup
      27: invokespecial #19                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      30: athrow
      31: new           #5                  // class org/springframework/boot/loader/data/RandomAccessDataFile
      34: dup
      35: aload_0
      36: getfield      #4                  // Field file:Ljava/io/File;
      39: aload_0
      40: getfield      #2                  // Field filePool:Lorg/springframework/boot/loader/data/RandomAccessDataFile$FilePool;
      43: aload_0
      44: getfield      #3                  // Field offset:J
      47: lload_1
      48: ladd
      49: lload_3
      50: invokespecial #20                 // Method "<init>":(Ljava/io/File;Lorg/springframework/boot/loader/data/RandomAccessDataFile$FilePool;JJ)V
      53: areturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field length:J
       4: lreturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field filePool:Lorg/springframework/boot/loader/data/RandomAccessDataFile$FilePool;
       4: invokevirtual #21                 // Method org/springframework/boot/loader/data/RandomAccessDataFile$FilePool.close:()V
       7: return

  static java.io.File access$000(org.springframework.boot.loader.data.RandomAccessDataFile);
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: areturn

  static long access$100(org.springframework.boot.loader.data.RandomAccessDataFile);
    Code:
       0: aload_0
       1: getfield      #3                  // Field offset:J
       4: lreturn

  static org.springframework.boot.loader.data.RandomAccessDataFile$FilePool access$200(org.springframework.boot.loader.data.RandomAccessDataFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field filePool:Lorg/springframework/boot/loader/data/RandomAccessDataFile$FilePool;
       4: areturn

  static long access$300(org.springframework.boot.loader.data.RandomAccessDataFile);
    Code:
       0: aload_0
       1: getfield      #1                  // Field length:J
       4: lreturn
}
