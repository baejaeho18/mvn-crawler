Compiled from "Handler.java"
public class org.springframework.boot.loader.jar.Handler extends java.net.URLStreamHandler {
  private static final java.lang.String FILE_PROTOCOL;

  private static final java.lang.String SEPARATOR;

  private static final java.lang.String[] FALLBACK_HANDLERS;

  private static final java.lang.reflect.Method OPEN_CONNECTION_METHOD;

  private static java.lang.ref.SoftReference<java.util.Map<java.io.File, org.springframework.boot.loader.jar.JarFile>> rootFileCache;

  private final java.util.logging.Logger logger;

  private final org.springframework.boot.loader.jar.JarFile jarFile;

  private java.net.URLStreamHandler fallbackHandler;

  public org.springframework.boot.loader.jar.Handler();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/boot/loader/jar/JarFile;)V
       5: return

  public org.springframework.boot.loader.jar.Handler(org.springframework.boot.loader.jar.JarFile);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/net/URLStreamHandler."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #4                  // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokestatic  #5                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      15: putfield      #6                  // Field logger:Ljava/util/logging/Logger;
      18: aload_0
      19: aload_1
      20: putfield      #7                  // Field jarFile:Lorg/springframework/boot/loader/jar/JarFile;
      23: return

  protected java.net.URLConnection openConnection(java.net.URL) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field jarFile:Lorg/springframework/boot/loader/jar/JarFile;
       4: ifnull        16
       7: aload_1
       8: aload_0
       9: getfield      #7                  // Field jarFile:Lorg/springframework/boot/loader/jar/JarFile;
      12: invokestatic  #8                  // Method org/springframework/boot/loader/jar/JarURLConnection.get:(Ljava/net/URL;Lorg/springframework/boot/loader/jar/JarFile;)Lorg/springframework/boot/loader/jar/JarURLConnection;
      15: areturn
      16: aload_1
      17: aload_0
      18: aload_1
      19: invokevirtual #9                  // Method getRootJarFileFromUrl:(Ljava/net/URL;)Lorg/springframework/boot/loader/jar/JarFile;
      22: invokestatic  #8                  // Method org/springframework/boot/loader/jar/JarURLConnection.get:(Ljava/net/URL;Lorg/springframework/boot/loader/jar/JarFile;)Lorg/springframework/boot/loader/jar/JarURLConnection;
      25: areturn
      26: astore_2
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokespecial #11                 // Method openFallbackConnection:(Ljava/net/URL;Ljava/lang/Exception;)Ljava/net/URLConnection;
      33: areturn
    Exception table:
       from    to  target type
          16    25    26   Class java/lang/Exception

  private java.net.URLConnection openFallbackConnection(java.net.URL, java.lang.Exception) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #12                 // Method getFallbackHandler:()Ljava/net/URLStreamHandler;
       5: aload_1
       6: invokespecial #13                 // Method openConnection:(Ljava/net/URLStreamHandler;Ljava/net/URL;)Ljava/net/URLConnection;
       9: areturn
      10: astore_3
      11: aload_2
      12: instanceof    #14                 // class java/io/IOException
      15: ifeq          36
      18: aload_0
      19: getfield      #6                  // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #15                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      25: ldc           #16                 // String Unable to open fallback handler
      27: aload_3
      28: invokevirtual #17                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      31: aload_2
      32: checkcast     #14                 // class java/io/IOException
      35: athrow
      36: aload_0
      37: getfield      #6                  // Field logger:Ljava/util/logging/Logger;
      40: getstatic     #18                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      43: ldc           #16                 // String Unable to open fallback handler
      45: aload_3
      46: invokevirtual #17                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      49: aload_2
      50: instanceof    #19                 // class java/lang/RuntimeException
      53: ifeq          61
      56: aload_2
      57: checkcast     #19                 // class java/lang/RuntimeException
      60: athrow
      61: new           #20                 // class java/lang/IllegalStateException
      64: dup
      65: aload_2
      66: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      69: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Exception

  private java.net.URLStreamHandler getFallbackHandler();
    Code:
       0: aload_0
       1: getfield      #22                 // Field fallbackHandler:Ljava/net/URLStreamHandler;
       4: ifnull        12
       7: aload_0
       8: getfield      #22                 // Field fallbackHandler:Ljava/net/URLStreamHandler;
      11: areturn
      12: getstatic     #23                 // Field FALLBACK_HANDLERS:[Ljava/lang/String;
      15: astore_1
      16: aload_1
      17: arraylength
      18: istore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: iload_2
      23: if_icmpge     63
      26: aload_1
      27: iload_3
      28: aaload
      29: astore        4
      31: aload         4
      33: invokestatic  #24                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      36: astore        5
      38: aload_0
      39: aload         5
      41: invokevirtual #25                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      44: checkcast     #26                 // class java/net/URLStreamHandler
      47: putfield      #22                 // Field fallbackHandler:Ljava/net/URLStreamHandler;
      50: aload_0
      51: getfield      #22                 // Field fallbackHandler:Ljava/net/URLStreamHandler;
      54: areturn
      55: astore        5
      57: iinc          3, 1
      60: goto          21
      63: new           #20                 // class java/lang/IllegalStateException
      66: dup
      67: ldc           #27                 // String Unable to find fallback handler
      69: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: athrow
    Exception table:
       from    to  target type
          31    54    55   Class java/lang/Exception

  private java.net.URLConnection openConnection(java.net.URLStreamHandler, java.net.URL) throws java.lang.Exception;
    Code:
       0: getstatic     #29                 // Field OPEN_CONNECTION_METHOD:Ljava/lang/reflect/Method;
       3: ifnonnull     16
       6: new           #20                 // class java/lang/IllegalStateException
       9: dup
      10: ldc           #30                 // String Unable to invoke fallback open connection method
      12: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: getstatic     #29                 // Field OPEN_CONNECTION_METHOD:Ljava/lang/reflect/Method;
      19: iconst_1
      20: invokevirtual #31                 // Method java/lang/reflect/Method.setAccessible:(Z)V
      23: getstatic     #29                 // Field OPEN_CONNECTION_METHOD:Ljava/lang/reflect/Method;
      26: aload_1
      27: iconst_1
      28: anewarray     #32                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_2
      34: aastore
      35: invokevirtual #33                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #34                 // class java/net/URLConnection
      41: areturn

  public org.springframework.boot.loader.jar.JarFile getRootJarFileFromUrl(java.net.URL) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method java/net/URL.getFile:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #37                 // String !/
       8: invokevirtual #38                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      11: istore_3
      12: iload_3
      13: iconst_m1
      14: if_icmpne     27
      17: new           #39                 // class java/net/MalformedURLException
      20: dup
      21: ldc           #40                 // String Jar URL does not contain !/ separator
      23: invokespecial #41                 // Method java/net/MalformedURLException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_2
      28: iconst_0
      29: iload_3
      30: invokevirtual #42                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      33: astore        4
      35: aload_0
      36: aload         4
      38: invokespecial #43                 // Method getRootJarFile:(Ljava/lang/String;)Lorg/springframework/boot/loader/jar/JarFile;
      41: areturn

  private org.springframework.boot.loader.jar.JarFile getRootJarFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #44                 // String file:
       3: invokevirtual #45                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifne          19
       9: new           #20                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #46                 // String Not a file URL
      15: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: ldc           #44                 // String file:
      22: invokevirtual #47                 // Method java/lang/String.length:()I
      25: invokevirtual #48                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      28: astore_2
      29: new           #49                 // class java/io/File
      32: dup
      33: aload_2
      34: ldc           #50                 // String UTF-8
      36: invokestatic  #51                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      39: invokespecial #52                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      42: astore_3
      43: getstatic     #53                 // Field rootFileCache:Ljava/lang/ref/SoftReference;
      46: invokevirtual #54                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      49: checkcast     #55                 // class java/util/Map
      52: astore        4
      54: aload         4
      56: ifnonnull     63
      59: aconst_null
      60: goto          74
      63: aload         4
      65: aload_3
      66: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      71: checkcast     #57                 // class org/springframework/boot/loader/jar/JarFile
      74: astore        5
      76: aload         5
      78: ifnonnull     97
      81: new           #57                 // class org/springframework/boot/loader/jar/JarFile
      84: dup
      85: aload_3
      86: invokespecial #58                 // Method org/springframework/boot/loader/jar/JarFile."<init>":(Ljava/io/File;)V
      89: astore        5
      91: aload_3
      92: aload         5
      94: invokestatic  #59                 // Method addToRootFileCache:(Ljava/io/File;Lorg/springframework/boot/loader/jar/JarFile;)V
      97: aload         5
      99: areturn
     100: astore_2
     101: new           #14                 // class java/io/IOException
     104: dup
     105: new           #60                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     112: ldc           #62                 // String Unable to open root Jar file \'
     114: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_1
     118: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: ldc           #64                 // String \'
     123: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: aload_2
     130: invokespecial #66                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     133: athrow
    Exception table:
       from    to  target type
           0    99   100   Class java/lang/Exception

  static void addToRootFileCache(java.io.File, org.springframework.boot.loader.jar.JarFile);
    Code:
       0: getstatic     #53                 // Field rootFileCache:Ljava/lang/ref/SoftReference;
       3: invokevirtual #54                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
       6: checkcast     #55                 // class java/util/Map
       9: astore_2
      10: aload_2
      11: ifnonnull     33
      14: new           #67                 // class java/util/concurrent/ConcurrentHashMap
      17: dup
      18: invokespecial #68                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      21: astore_2
      22: new           #69                 // class java/lang/ref/SoftReference
      25: dup
      26: aload_2
      27: invokespecial #70                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      30: putstatic     #53                 // Field rootFileCache:Ljava/lang/ref/SoftReference;
      33: aload_2
      34: aload_0
      35: aload_1
      36: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: return

  public static void setUseFastConnectionExceptions(boolean);
    Code:
       0: iload_0
       1: invokestatic  #72                 // Method org/springframework/boot/loader/jar/JarURLConnection.setUseFastExceptions:(Z)V
       4: return

  static {};
    Code:
       0: iconst_1
       1: anewarray     #73                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #74                 // String sun.net.www.protocol.jar.Handler
       8: aastore
       9: putstatic     #23                 // Field FALLBACK_HANDLERS:[Ljava/lang/String;
      12: aconst_null
      13: astore_0
      14: ldc           #26                 // class java/net/URLStreamHandler
      16: ldc           #75                 // String openConnection
      18: iconst_1
      19: anewarray     #76                 // class java/lang/Class
      22: dup
      23: iconst_0
      24: ldc           #77                 // class java/net/URL
      26: aastore
      27: invokevirtual #78                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      30: astore_0
      31: goto          35
      34: astore_1
      35: aload_0
      36: putstatic     #29                 // Field OPEN_CONNECTION_METHOD:Ljava/lang/reflect/Method;
      39: new           #69                 // class java/lang/ref/SoftReference
      42: dup
      43: aconst_null
      44: invokespecial #70                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      47: putstatic     #53                 // Field rootFileCache:Ljava/lang/ref/SoftReference;
      50: return
    Exception table:
       from    to  target type
          14    31    34   Class java/lang/Exception
}
