Compiled from "SelectConnector.java"
public class org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint implements org.eclipse.jetty.io.AsyncEndPoint {
  org.eclipse.jetty.io.AsyncEndPoint _endp;

  javax.net.ssl.SSLEngine _engine;

  public org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint(org.eclipse.jetty.io.AsyncEndPoint, javax.net.ssl.SSLEngine) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field _engine:Ljavax/net/ssl/SSLEngine;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
      14: return

  public void upgrade();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #4,  1            // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getConnection:()Lorg/eclipse/jetty/io/Connection;
       9: checkcast     #5                  // class org/eclipse/jetty/client/AsyncHttpConnection
      12: astore_1
      13: new           #6                  // class org/eclipse/jetty/io/nio/SslConnection
      16: dup
      17: aload_0
      18: getfield      #2                  // Field _engine:Ljavax/net/ssl/SSLEngine;
      21: aload_0
      22: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
      25: invokespecial #7                  // Method org/eclipse/jetty/io/nio/SslConnection."<init>":(Ljavax/net/ssl/SSLEngine;Lorg/eclipse/jetty/io/EndPoint;)V
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
      33: aload_2
      34: invokeinterface #8,  2            // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.setConnection:(Lorg/eclipse/jetty/io/Connection;)V
      39: aload_0
      40: aload_2
      41: invokevirtual #9                  // Method org/eclipse/jetty/io/nio/SslConnection.getSslEndPoint:()Lorg/eclipse/jetty/io/AsyncEndPoint;
      44: putfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
      47: aload_2
      48: invokevirtual #9                  // Method org/eclipse/jetty/io/nio/SslConnection.getSslEndPoint:()Lorg/eclipse/jetty/io/AsyncEndPoint;
      51: aload_1
      52: invokeinterface #8,  2            // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.setConnection:(Lorg/eclipse/jetty/io/Connection;)V
      57: invokestatic  #10                 // Method org/eclipse/jetty/client/SelectConnector.access$000:()Lorg/eclipse/jetty/util/log/Logger;
      60: ldc           #11                 // String upgrade {} to {} for {}
      62: iconst_3
      63: anewarray     #12                 // class java/lang/Object
      66: dup
      67: iconst_0
      68: aload_0
      69: aastore
      70: dup
      71: iconst_1
      72: aload_2
      73: aastore
      74: dup
      75: iconst_2
      76: aload_1
      77: aastore
      78: invokeinterface #13,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      83: return

  public org.eclipse.jetty.io.Connection getConnection();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #4,  1            // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getConnection:()Lorg/eclipse/jetty/io/Connection;
       9: areturn

  public void setConnection(org.eclipse.jetty.io.Connection);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.setConnection:(Lorg/eclipse/jetty/io/Connection;)V
      10: return

  public void shutdownOutput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #14,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.shutdownOutput:()V
       9: return

  public void dispatch();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #15,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.asyncDispatch:()V
       9: return

  public void asyncDispatch();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #15,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.asyncDispatch:()V
       9: return

  public boolean isOutputShutdown();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #16,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.isOutputShutdown:()Z
       9: ireturn

  public void shutdownInput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #17,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.shutdownInput:()V
       9: return

  public void scheduleWrite();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #18,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.scheduleWrite:()V
       9: return

  public boolean isInputShutdown();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #19,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.isInputShutdown:()Z
       9: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #20,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.close:()V
       9: return

  public int fill(org.eclipse.jetty.io.Buffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.fill:(Lorg/eclipse/jetty/io/Buffer;)I
      10: ireturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #22,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.isWritable:()Z
       9: ireturn

  public boolean hasProgressed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #23,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.hasProgressed:()Z
       9: ireturn

  public int flush(org.eclipse.jetty.io.Buffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.flush:(Lorg/eclipse/jetty/io/Buffer;)I
      10: ireturn

  public void scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: aload_1
       5: lload_2
       6: invokeinterface #25,  4           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.scheduleTimeout:(Lorg/eclipse/jetty/util/thread/Timeout$Task;J)V
      11: return

  public void cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.cancelTimeout:(Lorg/eclipse/jetty/util/thread/Timeout$Task;)V
      10: return

  public int flush(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #27,  4           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.flush:(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)I
      12: ireturn

  public java.lang.String getLocalAddr();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #28,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getLocalAddr:()Ljava/lang/String;
       9: areturn

  public java.lang.String getLocalHost();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #29,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getLocalHost:()Ljava/lang/String;
       9: areturn

  public int getLocalPort();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #30,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getLocalPort:()I
       9: ireturn

  public java.lang.String getRemoteAddr();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #31,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getRemoteAddr:()Ljava/lang/String;
       9: areturn

  public java.lang.String getRemoteHost();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #32,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getRemoteHost:()Ljava/lang/String;
       9: areturn

  public int getRemotePort();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #33,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getRemotePort:()I
       9: ireturn

  public boolean isBlocking();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #34,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.isBlocking:()Z
       9: ireturn

  public boolean blockReadable(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: lload_1
       5: invokeinterface #35,  3           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.blockReadable:(J)Z
      10: ireturn

  public boolean blockWritable(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: lload_1
       5: invokeinterface #36,  3           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.blockWritable:(J)Z
      10: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #37,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.isOpen:()Z
       9: ireturn

  public java.lang.Object getTransport();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #38,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getTransport:()Ljava/lang/Object;
       9: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #39,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.flush:()V
       9: return

  public int getMaxIdleTime();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #40,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.getMaxIdleTime:()I
       9: ireturn

  public void setMaxIdleTime(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: iload_1
       5: invokeinterface #41,  2           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.setMaxIdleTime:(I)V
      10: return

  public void onIdleExpired(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: lload_1
       5: invokeinterface #42,  3           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.onIdleExpired:(J)V
      10: return

  public void setCheckForIdle(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: iload_1
       5: invokeinterface #43,  2           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.setCheckForIdle:(Z)V
      10: return

  public boolean isCheckForIdle();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
       4: invokeinterface #44,  1           // InterfaceMethod org/eclipse/jetty/io/AsyncEndPoint.isCheckForIdle:()Z
       9: ireturn

  public java.lang.String toString();
    Code:
       0: new           #45                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #47                 // String Upgradable:
       9: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field _endp:Lorg/eclipse/jetty/io/AsyncEndPoint;
      16: invokevirtual #49                 // Method java/lang/Object.toString:()Ljava/lang/String;
      19: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn
}
