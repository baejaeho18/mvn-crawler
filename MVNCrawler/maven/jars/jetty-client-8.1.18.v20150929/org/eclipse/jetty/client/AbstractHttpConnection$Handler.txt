Compiled from "AbstractHttpConnection.java"
class org.eclipse.jetty.client.AbstractHttpConnection$Handler extends org.eclipse.jetty.http.HttpParser$EventHandler {
  final org.eclipse.jetty.client.AbstractHttpConnection this$0;

  private org.eclipse.jetty.client.AbstractHttpConnection$Handler(org.eclipse.jetty.client.AbstractHttpConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
       5: aload_0
       6: invokespecial #3                  // Method org/eclipse/jetty/http/HttpParser$EventHandler."<init>":()V
       9: return

  public void startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException;
    Code:
       0: return

  public void startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
       4: getfield      #4                  // Field org/eclipse/jetty/client/AbstractHttpConnection._exchange:Lorg/eclipse/jetty/client/HttpExchange;
       7: astore        4
       9: aload         4
      11: ifnonnull     41
      14: invokestatic  #5                  // Method org/eclipse/jetty/client/AbstractHttpConnection.access$200:()Lorg/eclipse/jetty/util/log/Logger;
      17: ldc           #6                  // String No exchange for response
      19: iconst_0
      20: anewarray     #7                  // class java/lang/Object
      23: invokeinterface #8,  3            // InterfaceMethod org/eclipse/jetty/util/log/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
      32: invokestatic  #9                  // Method org/eclipse/jetty/client/AbstractHttpConnection.access$300:(Lorg/eclipse/jetty/client/AbstractHttpConnection;)Lorg/eclipse/jetty/io/EndPoint;
      35: invokeinterface #10,  1           // InterfaceMethod org/eclipse/jetty/io/EndPoint.close:()V
      40: return
      41: iload_2
      42: lookupswitch  { // 3
                   100: 76
                   102: 76
                   200: 97
               default: 121
          }
      76: aload         4
      78: new           #11                 // class org/eclipse/jetty/client/AbstractHttpConnection$NonFinalResponseListener
      81: dup
      82: aload_0
      83: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
      86: aload         4
      88: invokespecial #12                 // Method org/eclipse/jetty/client/AbstractHttpConnection$NonFinalResponseListener."<init>":(Lorg/eclipse/jetty/client/AbstractHttpConnection;Lorg/eclipse/jetty/client/HttpExchange;)V
      91: invokevirtual #13                 // Method org/eclipse/jetty/client/HttpExchange.setEventListener:(Lorg/eclipse/jetty/client/HttpEventListener;)V
      94: goto          121
      97: ldc           #14                 // String CONNECT
      99: aload         4
     101: invokevirtual #15                 // Method org/eclipse/jetty/client/HttpExchange.getMethod:()Ljava/lang/String;
     104: invokevirtual #16                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     107: ifeq          121
     110: aload_0
     111: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
     114: getfield      #17                 // Field org/eclipse/jetty/client/AbstractHttpConnection._parser:Lorg/eclipse/jetty/http/HttpParser;
     117: iconst_1
     118: invokevirtual #18                 // Method org/eclipse/jetty/http/HttpParser.setHeadResponse:(Z)V
     121: aload_0
     122: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
     125: getstatic     #19                 // Field org/eclipse/jetty/http/HttpVersions.HTTP_1_1_BUFFER:Lorg/eclipse/jetty/io/Buffer;
     128: aload_1
     129: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     132: putfield      #21                 // Field org/eclipse/jetty/client/AbstractHttpConnection._http11:Z
     135: aload_0
     136: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
     139: iload_2
     140: putfield      #22                 // Field org/eclipse/jetty/client/AbstractHttpConnection._status:I
     143: aload         4
     145: invokevirtual #23                 // Method org/eclipse/jetty/client/HttpExchange.getEventListener:()Lorg/eclipse/jetty/client/HttpEventListener;
     148: aload_1
     149: iload_2
     150: aload_3
     151: invokeinterface #24,  4           // InterfaceMethod org/eclipse/jetty/client/HttpEventListener.onResponseStatus:(Lorg/eclipse/jetty/io/Buffer;ILorg/eclipse/jetty/io/Buffer;)V
     156: aload         4
     158: iconst_5
     159: invokevirtual #25                 // Method org/eclipse/jetty/client/HttpExchange.setStatus:(I)Z
     162: pop
     163: return

  public void parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
       4: getfield      #4                  // Field org/eclipse/jetty/client/AbstractHttpConnection._exchange:Lorg/eclipse/jetty/client/HttpExchange;
       7: astore_3
       8: aload_3
       9: ifnull        48
      12: getstatic     #26                 // Field org/eclipse/jetty/http/HttpHeaders.CACHE:Lorg/eclipse/jetty/http/HttpHeaders;
      15: aload_1
      16: invokevirtual #27                 // Method org/eclipse/jetty/http/HttpHeaders.getOrdinal:(Lorg/eclipse/jetty/io/Buffer;)I
      19: iconst_1
      20: if_icmpne     37
      23: aload_0
      24: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
      27: getstatic     #28                 // Field org/eclipse/jetty/http/HttpHeaderValues.CACHE:Lorg/eclipse/jetty/http/HttpHeaderValues;
      30: aload_2
      31: invokevirtual #29                 // Method org/eclipse/jetty/http/HttpHeaderValues.lookup:(Lorg/eclipse/jetty/io/Buffer;)Lorg/eclipse/jetty/io/Buffer;
      34: putfield      #30                 // Field org/eclipse/jetty/client/AbstractHttpConnection._connectionHeader:Lorg/eclipse/jetty/io/Buffer;
      37: aload_3
      38: invokevirtual #23                 // Method org/eclipse/jetty/client/HttpExchange.getEventListener:()Lorg/eclipse/jetty/client/HttpEventListener;
      41: aload_1
      42: aload_2
      43: invokeinterface #31,  3           // InterfaceMethod org/eclipse/jetty/client/HttpEventListener.onResponseHeader:(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V
      48: return

  public void headerComplete() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
       4: getfield      #4                  // Field org/eclipse/jetty/client/AbstractHttpConnection._exchange:Lorg/eclipse/jetty/client/HttpExchange;
       7: astore_1
       8: aload_1
       9: ifnull        42
      12: aload_1
      13: bipush        6
      15: invokevirtual #25                 // Method org/eclipse/jetty/client/HttpExchange.setStatus:(I)Z
      18: pop
      19: ldc           #14                 // String CONNECT
      21: aload_1
      22: invokevirtual #15                 // Method org/eclipse/jetty/client/HttpExchange.getMethod:()Ljava/lang/String;
      25: invokevirtual #16                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      28: ifeq          42
      31: aload_0
      32: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
      35: getfield      #17                 // Field org/eclipse/jetty/client/AbstractHttpConnection._parser:Lorg/eclipse/jetty/http/HttpParser;
      38: iconst_1
      39: invokevirtual #32                 // Method org/eclipse/jetty/http/HttpParser.setPersistent:(Z)V
      42: return

  public void content(org.eclipse.jetty.io.Buffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
       4: getfield      #4                  // Field org/eclipse/jetty/client/AbstractHttpConnection._exchange:Lorg/eclipse/jetty/client/HttpExchange;
       7: astore_2
       8: aload_2
       9: ifnull        22
      12: aload_2
      13: invokevirtual #23                 // Method org/eclipse/jetty/client/HttpExchange.getEventListener:()Lorg/eclipse/jetty/client/HttpEventListener;
      16: aload_1
      17: invokeinterface #33,  2           // InterfaceMethod org/eclipse/jetty/client/HttpEventListener.onResponseContent:(Lorg/eclipse/jetty/io/Buffer;)V
      22: return

  public void messageComplete(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
       4: getfield      #4                  // Field org/eclipse/jetty/client/AbstractHttpConnection._exchange:Lorg/eclipse/jetty/client/HttpExchange;
       7: astore_3
       8: aload_3
       9: ifnull        19
      12: aload_3
      13: bipush        7
      15: invokevirtual #25                 // Method org/eclipse/jetty/client/HttpExchange.setStatus:(I)Z
      18: pop
      19: return

  public void earlyEOF();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/client/AbstractHttpConnection;
       4: getfield      #4                  // Field org/eclipse/jetty/client/AbstractHttpConnection._exchange:Lorg/eclipse/jetty/client/HttpExchange;
       7: astore_1
       8: aload_1
       9: ifnull        46
      12: aload_1
      13: invokevirtual #34                 // Method org/eclipse/jetty/client/HttpExchange.isDone:()Z
      16: ifne          46
      19: aload_1
      20: bipush        9
      22: invokevirtual #25                 // Method org/eclipse/jetty/client/HttpExchange.setStatus:(I)Z
      25: ifeq          46
      28: aload_1
      29: invokevirtual #23                 // Method org/eclipse/jetty/client/HttpExchange.getEventListener:()Lorg/eclipse/jetty/client/HttpEventListener;
      32: new           #35                 // class org/eclipse/jetty/io/EofException
      35: dup
      36: ldc           #36                 // String early EOF
      38: invokespecial #37                 // Method org/eclipse/jetty/io/EofException."<init>":(Ljava/lang/String;)V
      41: invokeinterface #38,  2           // InterfaceMethod org/eclipse/jetty/client/HttpEventListener.onException:(Ljava/lang/Throwable;)V
      46: return

  org.eclipse.jetty.client.AbstractHttpConnection$Handler(org.eclipse.jetty.client.AbstractHttpConnection, org.eclipse.jetty.client.AbstractHttpConnection$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/eclipse/jetty/client/AbstractHttpConnection;)V
       5: return
}
