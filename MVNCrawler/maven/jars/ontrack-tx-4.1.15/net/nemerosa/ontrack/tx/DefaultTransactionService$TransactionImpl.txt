Compiled from "DefaultTransactionService.kt"
final class net.nemerosa.ontrack.tx.DefaultTransactionService$TransactionImpl implements net.nemerosa.ontrack.tx.DefaultTransactionService$ITransaction {
  private final net.nemerosa.ontrack.tx.DefaultTransactionService$TransactionCallback transactionCallback;

  private final java.util.concurrent.atomic.AtomicInteger count;

  private final java.util.concurrent.ConcurrentMap<kotlin.Pair<java.lang.Class<? extends net.nemerosa.ontrack.tx.TransactionResource>, java.lang.Object>, net.nemerosa.ontrack.tx.TransactionResource> resources;

  public net.nemerosa.ontrack.tx.DefaultTransactionService$TransactionImpl(net.nemerosa.ontrack.tx.DefaultTransactionService$TransactionCallback);
    Code:
       0: aload_1
       1: ldc           #11                 // String transactionCallback
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #20                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #23                 // Field transactionCallback:Lnet/nemerosa/ontrack/tx/DefaultTransactionService$TransactionCallback;
      15: aload_0
      16: new           #25                 // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: iconst_1
      21: invokespecial #28                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      24: putfield      #32                 // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      27: aload_0
      28: new           #34                 // class java/util/concurrent/ConcurrentHashMap
      31: dup
      32: invokespecial #35                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      35: checkcast     #37                 // class java/util/concurrent/ConcurrentMap
      38: putfield      #41                 // Field resources:Ljava/util/concurrent/ConcurrentMap;
      41: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #32                 // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: istore_1
       8: iload_1
       9: ifne          68
      12: aload_0
      13: getfield      #23                 // Field transactionCallback:Lnet/nemerosa/ontrack/tx/DefaultTransactionService$TransactionCallback;
      16: aload_0
      17: checkcast     #6                  // class net/nemerosa/ontrack/tx/DefaultTransactionService$ITransaction
      20: invokeinterface #54,  2           // InterfaceMethod net/nemerosa/ontrack/tx/DefaultTransactionService$TransactionCallback.remove:(Lnet/nemerosa/ontrack/tx/DefaultTransactionService$ITransaction;)V
      25: aload_0
      26: getfield      #41                 // Field resources:Ljava/util/concurrent/ConcurrentMap;
      29: invokeinterface #58,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      34: invokeinterface #64,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      39: astore_2
      40: aload_2
      41: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          68
      49: aload_2
      50: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #76                 // class net/nemerosa/ontrack/tx/TransactionResource
      58: astore_3
      59: aload_3
      60: invokeinterface #78,  1           // InterfaceMethod net/nemerosa/ontrack/tx/TransactionResource.close:()V
      65: goto          40
      68: return

  public synchronized <T extends net.nemerosa.ontrack.tx.TransactionResource> T getResource(java.lang.Class<T>, java.lang.Object, net.nemerosa.ontrack.tx.TransactionResourceProvider<T>);
    Code:
       0: aload_1
       1: ldc           #87                 // String resourceType
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #89                 // String resourceId
       9: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #91                 // String provider
      15: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: getfield      #41                 // Field resources:Ljava/util/concurrent/ConcurrentMap;
      22: aload_1
      23: aload_2
      24: invokestatic  #97                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
      27: invokeinterface #101,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #76                 // class net/nemerosa/ontrack/tx/TransactionResource
      35: astore        4
      37: aload         4
      39: ifnonnull     79
      42: aload_3
      43: invokeinterface #107,  1          // InterfaceMethod net/nemerosa/ontrack/tx/TransactionResourceProvider.createTxResource:()Lnet/nemerosa/ontrack/tx/TransactionResource;
      48: astore        4
      50: aload_0
      51: getfield      #41                 // Field resources:Ljava/util/concurrent/ConcurrentMap;
      54: checkcast     #109                // class java/util/Map
      57: astore        5
      59: aload_1
      60: aload         4
      62: invokestatic  #97                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
      65: astore        6
      67: aload         5
      69: aload         6
      71: aload         4
      73: invokeinterface #113,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload         4
      81: areturn

  public void reuse();
    Code:
       0: aload_0
       1: getfield      #32                 // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #120                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return
}
