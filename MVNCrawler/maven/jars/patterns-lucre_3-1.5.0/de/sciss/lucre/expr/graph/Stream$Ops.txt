Compiled from "Stream.scala"
public final class de.sciss.lucre.expr.graph.Stream$Ops {
  private final de.sciss.lucre.expr.graph.Ex st;

  public static boolean equals$extension(de.sciss.lucre.expr.graph.Ex, java.lang.Object);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: aload_1
       5: invokevirtual #26                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.equals$extension:(Lde/sciss/lucre/expr/graph/Ex;Ljava/lang/Object;)Z
       8: ireturn

  public static int hashCode$extension(de.sciss.lucre.expr.graph.Ex);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: invokevirtual #30                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.hashCode$extension:(Lde/sciss/lucre/expr/graph/Ex;)I
       7: ireturn

  public static de.sciss.lucre.expr.graph.Act next$extension(de.sciss.lucre.expr.graph.Ex, de.sciss.lucre.expr.graph.Ex, de.sciss.lucre.Adjunct$FromAny);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #34                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.next$extension:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)Lde/sciss/lucre/expr/graph/Act;
       9: areturn

  public static de.sciss.lucre.expr.graph.Act next$extension(de.sciss.lucre.expr.graph.Ex, de.sciss.lucre.Adjunct$FromAny);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: aload_1
       5: invokevirtual #37                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.next$extension:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)Lde/sciss/lucre/expr/graph/Act;
       8: areturn

  public static de.sciss.lucre.expr.graph.Act reset$extension(de.sciss.lucre.expr.graph.Ex);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: invokevirtual #41                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.reset$extension:(Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Act;
       7: areturn

  public static de.sciss.lucre.expr.graph.Act take$extension(de.sciss.lucre.expr.graph.Ex, de.sciss.lucre.expr.graph.Ex, de.sciss.lucre.Adjunct$FromAny);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #44                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.take$extension:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)Lde/sciss/lucre/expr/graph/Act;
       9: areturn

  public de.sciss.lucre.expr.graph.Stream$Ops(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field st:Lde/sciss/lucre/expr/graph/Ex;
       5: aload_0
       6: invokespecial #52                 // Method java/lang/Object."<init>":()V
       9: return

  public int hashCode();
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: invokevirtual #60                 // Method de$sciss$lucre$expr$graph$Stream$Ops$$st:()Lde/sciss/lucre/expr/graph/Ex;
       7: invokevirtual #30                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.hashCode$extension:(Lde/sciss/lucre/expr/graph/Ex;)I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: invokevirtual #60                 // Method de$sciss$lucre$expr$graph$Stream$Ops$$st:()Lde/sciss/lucre/expr/graph/Ex;
       7: aload_1
       8: invokevirtual #26                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.equals$extension:(Lde/sciss/lucre/expr/graph/Ex;Ljava/lang/Object;)Z
      11: ireturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Stream> de$sciss$lucre$expr$graph$Stream$Ops$$st();
    Code:
       0: aload_0
       1: getfield      #49                 // Field st:Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Act reset();
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: invokevirtual #60                 // Method de$sciss$lucre$expr$graph$Stream$Ops$$st:()Lde/sciss/lucre/expr/graph/Ex;
       7: invokevirtual #41                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.reset$extension:(Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Act;
      10: areturn

  public <A> de.sciss.lucre.expr.graph.Act next(de.sciss.lucre.Adjunct$FromAny<A>);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: invokevirtual #60                 // Method de$sciss$lucre$expr$graph$Stream$Ops$$st:()Lde/sciss/lucre/expr/graph/Ex;
       7: aload_1
       8: invokevirtual #37                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.next$extension:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)Lde/sciss/lucre/expr/graph/Act;
      11: areturn

  public <A> de.sciss.lucre.expr.graph.Act next(de.sciss.lucre.expr.graph.Ex<A>, de.sciss.lucre.Adjunct$FromAny<A>);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: invokevirtual #60                 // Method de$sciss$lucre$expr$graph$Stream$Ops$$st:()Lde/sciss/lucre/expr/graph/Ex;
       7: aload_1
       8: aload_2
       9: invokevirtual #34                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.next$extension:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)Lde/sciss/lucre/expr/graph/Act;
      12: areturn

  public <A> de.sciss.lucre.expr.graph.Act take(de.sciss.lucre.expr.graph.Ex<java.lang.Object>, de.sciss.lucre.Adjunct$FromAny<A>);
    Code:
       0: getstatic     #24                 // Field de/sciss/lucre/expr/graph/Stream$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/Stream$Ops$;
       3: aload_0
       4: invokevirtual #60                 // Method de$sciss$lucre$expr$graph$Stream$Ops$$st:()Lde/sciss/lucre/expr/graph/Ex;
       7: aload_1
       8: aload_2
       9: invokevirtual #44                 // Method de/sciss/lucre/expr/graph/Stream$Ops$.take$extension:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)Lde/sciss/lucre/expr/graph/Act;
      12: areturn
}
