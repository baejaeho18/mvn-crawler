Compiled from "Pattern.scala"
public final class de.sciss.lucre.expr.graph.Pattern$Bridge$ implements de.sciss.lucre.expr.graph.Obj$Bridge<de.sciss.lucre.expr.graph.Pattern>, de.sciss.lucre.Adjunct$Factory {
  public static final de.sciss.lucre.expr.graph.Pattern$Bridge$ MODULE$;

  public de.sciss.lucre.expr.graph.Pattern$Bridge$();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Pattern$Bridge$
       3: dup
       4: invokespecial #45                 // Method "<init>":()V
       7: putstatic     #47                 // Field MODULE$:Lde/sciss/lucre/expr/graph/Pattern$Bridge$;
      10: return

  public void write(de.sciss.serial.DataOutput);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // InterfaceMethod de/sciss/lucre/Adjunct.write$:(Lde/sciss/lucre/Adjunct;Lde/sciss/serial/DataOutput;)V
       5: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #59                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class de/sciss/lucre/expr/graph/Pattern$Bridge$
       6: invokespecial #62                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public final int id();
    Code:
       0: sipush        1155
       3: ireturn

  public de.sciss.lucre.Adjunct readIdentifiedAdjunct(de.sciss.serial.DataInput);
    Code:
       0: aload_0
       1: areturn

  public <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.expr.CellView$Var<T, scala.Option<de.sciss.lucre.expr.graph.Pattern>> cellView(de.sciss.lucre.Obj<T>, java.lang.String, T);
    Code:
       0: new           #35                 // class de/sciss/lucre/expr/graph/Pattern$CellViewImpl
       3: dup
       4: aload_3
       5: aload_1
       6: getstatic     #79                 // Field de/sciss/lucre/Obj$.MODULE$:Lde/sciss/lucre/Obj$;
       9: invokevirtual #83                 // Method de/sciss/lucre/Obj$.format:()Lde/sciss/serial/TFormat;
      12: invokeinterface #89,  3           // InterfaceMethod de/sciss/lucre/Txn.newHandle:(Ljava/lang/Object;Lde/sciss/serial/TFormat;)Lde/sciss/lucre/Source;
      17: aload_2
      18: invokespecial #92                 // Method de/sciss/lucre/expr/graph/Pattern$CellViewImpl."<init>":(Lde/sciss/lucre/Source;Ljava/lang/String;)V
      21: areturn

  public <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.expr.CellView<T, scala.Option<de.sciss.lucre.expr.graph.Pattern>> contextCellView(java.lang.String, T, de.sciss.lucre.expr.Context<T>);
    Code:
       0: new           #30                 // class de/sciss/lucre/expr/graph/Pattern$$anon$1
       3: dup
       4: aload_1
       5: aload_3
       6: invokespecial #102                // Method de/sciss/lucre/expr/graph/Pattern$$anon$1."<init>":(Ljava/lang/String;Lde/sciss/lucre/expr/Context;)V
       9: areturn

  public <T extends de.sciss.lucre.Txn<T>> scala.Option<de.sciss.lucre.expr.graph.Pattern> cellValue(de.sciss.lucre.Obj<T>, java.lang.String, T);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #112,  2          // InterfaceMethod de/sciss/lucre/Obj.attr:(Lde/sciss/lucre/Txn;)Lde/sciss/lucre/MapObj$Modifiable;
       7: aload_2
       8: aload_3
       9: getstatic     #117                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      12: ldc           #119                // class de/sciss/proc/Pattern
      14: invokevirtual #123                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      17: invokeinterface #127,  4          // InterfaceMethod de/sciss/lucre/MapObj$Modifiable.$:(Ljava/lang/Object;Lde/sciss/lucre/Txn;Lscala/reflect/ClassTag;)Lscala/Option;
      22: aload_0
      23: aload_3
      24: invokedynamic #148,  0            // InvokeDynamic #0:apply:(Lde/sciss/lucre/expr/graph/Pattern$Bridge$;Lde/sciss/lucre/Txn;)Lscala/Function1;
      29: invokevirtual #154                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      32: areturn

  public <T extends de.sciss.lucre.Txn<T>> scala.Option<de.sciss.lucre.expr.graph.Pattern> tryParseObj(de.sciss.lucre.Obj<T>, T);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #119                // class de/sciss/proc/Pattern
       6: ifeq          33
       9: aload_3
      10: checkcast     #119                // class de/sciss/proc/Pattern
      13: astore        4
      15: getstatic     #162                // Field scala/Some$.MODULE$:Lscala/Some$;
      18: getstatic     #167                // Field de/sciss/lucre/expr/graph/Pattern$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$;
      21: aload         4
      23: aload_2
      24: invokevirtual #171                // Method de/sciss/lucre/expr/graph/Pattern$.wrap:(Lde/sciss/proc/Pattern;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/expr/graph/Pattern;
      27: invokevirtual #174                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      30: goto          39
      33: getstatic     #179                // Field scala/None$.MODULE$:Lscala/None$;
      36: goto          39
      39: areturn

  private final de.sciss.lucre.expr.graph.Pattern cellValue$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.Pattern);
    Code:
       0: getstatic     #167                // Field de/sciss/lucre/expr/graph/Pattern$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$;
       3: aload_2
       4: aload_1
       5: invokevirtual #171                // Method de/sciss/lucre/expr/graph/Pattern$.wrap:(Lde/sciss/proc/Pattern;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/expr/graph/Pattern;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #195,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
