Compiled from "Pattern.scala"
public final class de.sciss.lucre.expr.graph.Pattern$ToStream implements scala.Product,de.sciss.lucre.expr.graph.Lazy,de.sciss.lucre.expr.graph.Control,java.io.Serializable {
  private transient java.lang.Object ref;

  private final de.sciss.lucre.expr.graph.Ex pat;

  public static de.sciss.lucre.expr.graph.Pattern$ToStream apply(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Pattern>);
    Code:
       0: getstatic     #70                 // Field de/sciss/lucre/expr/graph/Pattern$ToStream$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$ToStream$;
       3: aload_0
       4: invokevirtual #72                 // Method de/sciss/lucre/expr/graph/Pattern$ToStream$.apply:(Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Pattern$ToStream;
       7: areturn

  public static de.sciss.lucre.expr.graph.Pattern$ToStream fromProduct(scala.Product);
    Code:
       0: getstatic     #70                 // Field de/sciss/lucre/expr/graph/Pattern$ToStream$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$ToStream$;
       3: aload_0
       4: invokevirtual #76                 // Method de/sciss/lucre/expr/graph/Pattern$ToStream$.fromProduct:(Lscala/Product;)Lde/sciss/lucre/expr/graph/Pattern$ToStream;
       7: areturn

  public static de.sciss.lucre.expr.graph.Pattern$ToStream read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #70                 // Field de/sciss/lucre/expr/graph/Pattern$ToStream$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$ToStream$;
       3: aload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #80                 // Method de/sciss/lucre/expr/graph/Pattern$ToStream$.read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lde/sciss/lucre/expr/graph/Pattern$ToStream;
      10: areturn

  public static de.sciss.lucre.expr.graph.Pattern$ToStream unapply(de.sciss.lucre.expr.graph.Pattern$ToStream);
    Code:
       0: getstatic     #70                 // Field de/sciss/lucre/expr/graph/Pattern$ToStream$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$ToStream$;
       3: aload_0
       4: invokevirtual #84                 // Method de/sciss/lucre/expr/graph/Pattern$ToStream$.unapply:(Lde/sciss/lucre/expr/graph/Pattern$ToStream;)Lde/sciss/lucre/expr/graph/Pattern$ToStream;
       7: areturn

  public de.sciss.lucre.expr.graph.Pattern$ToStream(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Pattern>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field pat:Lde/sciss/lucre/expr/graph/Ex;
       5: aload_0
       6: invokespecial #92                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #96                 // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.$init$:(Lde/sciss/lucre/expr/graph/Lazy;)V
      13: aload_0
      14: invokestatic  #99                 // InterfaceMethod de/sciss/lucre/expr/graph/Control.$init$:(Lde/sciss/lucre/expr/graph/Control;)V
      17: invokestatic  #104                // Method scala/runtime/Statics.releaseFence:()V
      20: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #116                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public final java.lang.Object ref();
    Code:
       0: aload_0
       1: getfield      #119                // Field ref:Ljava/lang/Object;
       4: areturn

  public void de$sciss$lucre$expr$graph$Lazy$_setter_$ref_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #119                // Field ref:Ljava/lang/Object;
       5: return

  public de.sciss.lucre.Disposable expand(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #130                // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.expand$:(Lde/sciss/lucre/expr/graph/Lazy;Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public java.lang.Object token();
    Code:
       0: aload_0
       1: invokestatic  #137                // InterfaceMethod de/sciss/lucre/expr/graph/Control.token$:(Lde/sciss/lucre/expr/graph/Control;)Ljava/lang/Object;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #148                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     65
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class de/sciss/lucre/expr/graph/Pattern$ToStream
      11: ifeq          58
      14: aload_2
      15: checkcast     #2                  // class de/sciss/lucre/expr/graph/Pattern$ToStream
      18: astore_3
      19: aload_0
      20: invokevirtual #153                // Method pat:()Lde/sciss/lucre/expr/graph/Ex;
      23: aload_3
      24: invokevirtual #153                // Method pat:()Lde/sciss/lucre/expr/graph/Ex;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          54
      42: aload         4
      44: invokevirtual #155                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: goto          62
      58: iconst_0
      59: goto          62
      62: ifeq          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #163                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/lucre/expr/graph/Pattern$ToStream
       4: ireturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     14
       7: aload_0
       8: invokevirtual #172                // Method _1:()Lde/sciss/lucre/expr/graph/Ex;
      11: goto          29
      14: new           #174                // class java/lang/IndexOutOfBoundsException
      17: dup
      18: iload_1
      19: invokestatic  #180                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      22: invokevirtual #184                // Method java/lang/Integer.toString:()Ljava/lang/String;
      25: invokespecial #187                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: areturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: ldc           #191                // String pat
       9: goto          27
      12: new           #174                // class java/lang/IndexOutOfBoundsException
      15: dup
      16: iload_1
      17: invokestatic  #180                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      20: invokevirtual #184                // Method java/lang/Integer.toString:()Ljava/lang/String;
      23: invokespecial #187                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Pattern> pat();
    Code:
       0: aload_0
       1: getfield      #89                 // Field pat:Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #197                // String Pattern$ToStream
       2: areturn

  public de.sciss.lucre.expr.graph.Act reset();
    Code:
       0: getstatic     #202                // Field de/sciss/lucre/expr/graph/Pattern$Reset$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$Reset$;
       3: aload_0
       4: invokevirtual #205                // Method de/sciss/lucre/expr/graph/Pattern$Reset$.apply:(Lde/sciss/lucre/expr/graph/Pattern$ToStream;)Lde/sciss/lucre/expr/graph/Pattern$Reset;
       7: areturn

  public <A> de.sciss.lucre.expr.graph.Act next(de.sciss.lucre.Adjunct$FromAny<A>);
    Code:
       0: getstatic     #212                // Field de/sciss/lucre/expr/graph/Pattern$NextOption$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$NextOption$;
       3: aload_0
       4: aload_1
       5: invokevirtual #215                // Method de/sciss/lucre/expr/graph/Pattern$NextOption$.apply:(Lde/sciss/lucre/expr/graph/Pattern$ToStream;Lde/sciss/lucre/Adjunct$FromAny;)Lde/sciss/lucre/expr/graph/Pattern$NextOption;
       8: areturn

  public <A> de.sciss.lucre.expr.graph.Act next(de.sciss.lucre.expr.graph.Ex<A>, de.sciss.lucre.Adjunct$FromAny<A>);
    Code:
       0: getstatic     #223                // Field de/sciss/lucre/expr/graph/Pattern$Next$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$Next$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #226                // Method de/sciss/lucre/expr/graph/Pattern$Next$.apply:(Lde/sciss/lucre/expr/graph/Pattern$ToStream;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)Lde/sciss/lucre/expr/graph/Pattern$Next;
       9: areturn

  public <A> de.sciss.lucre.expr.graph.Act take(de.sciss.lucre.expr.graph.Ex<java.lang.Object>, de.sciss.lucre.Adjunct$FromAny<A>);
    Code:
       0: getstatic     #232                // Field de/sciss/lucre/expr/graph/Pattern$Take$.MODULE$:Lde/sciss/lucre/expr/graph/Pattern$Take$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #235                // Method de/sciss/lucre/expr/graph/Pattern$Take$.apply:(Lde/sciss/lucre/expr/graph/Pattern$ToStream;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)Lde/sciss/lucre/expr/graph/Pattern$Take;
       9: areturn

  public <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.expr.graph.Pattern$ToStream$Repr<T> mkRepr(de.sciss.lucre.expr.Context<T>, T);
    Code:
       0: new           #58                 // class de/sciss/lucre/expr/graph/Pattern$ToStreamExpanded
       3: dup
       4: aload_0
       5: invokevirtual #153                // Method pat:()Lde/sciss/lucre/expr/graph/Ex;
       8: aload_1
       9: aload_2
      10: invokeinterface #240,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Ex.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
      15: checkcast     #242                // class de/sciss/lucre/IExpr
      18: aload_2
      19: aload_1
      20: invokeinterface #248,  1          // InterfaceMethod de/sciss/lucre/expr/Context.targets:()Lde/sciss/lucre/ITargets;
      25: aload_2
      26: invokeinterface #254,  1          // InterfaceMethod de/sciss/lucre/Txn.inMemoryBridge:()Lscala/Function1;
      31: invokespecial #257                // Method de/sciss/lucre/expr/graph/Pattern$ToStreamExpanded."<init>":(Lde/sciss/lucre/IExpr;Lde/sciss/lucre/Txn;Lde/sciss/lucre/ITargets;Lscala/Function1;)V
      34: areturn

  public de.sciss.lucre.expr.graph.Pattern$ToStream copy(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Pattern>);
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Pattern$ToStream
       3: dup
       4: aload_1
       5: invokespecial #260                // Method "<init>":(Lde/sciss/lucre/expr/graph/Ex;)V
       8: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Pattern> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method pat:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Pattern> _1();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method pat:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.Disposable mkRepr(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #263                // Method mkRepr:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/expr/graph/Pattern$ToStream$Repr;
       6: areturn
}
