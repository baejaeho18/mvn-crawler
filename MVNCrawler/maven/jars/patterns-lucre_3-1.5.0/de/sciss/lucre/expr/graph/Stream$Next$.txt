Compiled from "Stream.scala"
public final class de.sciss.lucre.expr.graph.Stream$Next$ implements de.sciss.lucre.expr.ExElem$ProductReader<de.sciss.lucre.expr.graph.Stream$Next<?>> {
  public static final de.sciss.lucre.expr.graph.Stream$Next$ MODULE$;

  public de.sciss.lucre.expr.graph.Stream$Next$();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Stream$Next$
       3: dup
       4: invokespecial #36                 // Method "<init>":()V
       7: putstatic     #38                 // Field MODULE$:Lde/sciss/lucre/expr/graph/Stream$Next$;
      10: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #42                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class de/sciss/lucre/expr/graph/Stream$Next$
       6: invokespecial #45                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public <A> de.sciss.lucre.expr.graph.Stream$Next<A> apply(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Stream>, de.sciss.lucre.expr.graph.Ex<A>, de.sciss.lucre.Adjunct$FromAny<A>);
    Code:
       0: new           #23                 // class de/sciss/lucre/expr/graph/Stream$Next
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #54                 // Method de/sciss/lucre/expr/graph/Stream$Next."<init>":(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)V
      10: areturn

  public <A> de.sciss.lucre.expr.graph.Stream$Next<A> unapply(de.sciss.lucre.expr.graph.Stream$Next<A>);
    Code:
       0: aload_1
       1: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #64                 // String Next
       2: areturn

  public de.sciss.lucre.expr.graph.Stream$Next<?> read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #75                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_3
       4: iconst_2
       5: if_icmpne     18
       8: iload         4
      10: iconst_1
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokevirtual #79                 // Method scala/Predef$.require:(Z)V
      22: aload_1
      23: invokevirtual #83                 // Method de/sciss/lucre/expr/ExElem$RefMapIn.readEx:()Lde/sciss/lucre/expr/graph/Ex;
      26: astore        5
      28: aload_1
      29: invokevirtual #83                 // Method de/sciss/lucre/expr/ExElem$RefMapIn.readEx:()Lde/sciss/lucre/expr/graph/Ex;
      32: astore        6
      34: aload_1
      35: invokevirtual #87                 // Method de/sciss/lucre/expr/ExElem$RefMapIn.readAdjunct:()Lde/sciss/lucre/Adjunct;
      38: checkcast     #12                 // class de/sciss/lucre/Adjunct$FromAny
      41: astore        7
      43: new           #23                 // class de/sciss/lucre/expr/graph/Stream$Next
      46: dup
      47: aload         5
      49: aload         6
      51: aload         7
      53: invokespecial #54                 // Method de/sciss/lucre/expr/graph/Stream$Next."<init>":(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/Adjunct$FromAny;)V
      56: areturn

  public java.lang.Object read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #98                 // Method read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lde/sciss/lucre/expr/graph/Stream$Next;
       9: areturn
}
