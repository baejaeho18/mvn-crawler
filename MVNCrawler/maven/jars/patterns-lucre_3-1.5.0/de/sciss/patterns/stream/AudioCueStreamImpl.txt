Compiled from "AudioCueStreamImpl.scala"
public abstract class de.sciss.patterns.stream.AudioCueStreamImpl<T extends de.sciss.lucre.Exec<T>, A> extends de.sciss.patterns.Stream<T, A> {
  private final de.sciss.patterns.Stream<T, de.sciss.patterns.graph.AudioCue> inStream;

  public <T extends de.sciss.lucre.Exec<T>, A> de.sciss.patterns.stream.AudioCueStreamImpl(de.sciss.patterns.Stream<T, de.sciss.patterns.graph.AudioCue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field inStream:Lde/sciss/patterns/Stream;
       5: aload_0
       6: invokespecial #17                 // Method de/sciss/patterns/Stream."<init>":()V
       9: return

  public abstract A mapCue(de.sciss.proc.AudioCue);

  public final void writeData(de.sciss.serial.DataOutput);
    Code:
       0: aload_0
       1: getfield      #14                 // Field inStream:Lde/sciss/patterns/Stream;
       4: aload_1
       5: invokevirtual #29                 // Method de/sciss/patterns/Stream.write:(Lde/sciss/serial/DataOutput;)V
       8: return

  public final void dispose(T);
    Code:
       0: aload_0
       1: getfield      #14                 // Field inStream:Lde/sciss/patterns/Stream;
       4: aload_1
       5: invokevirtual #37                 // Method de/sciss/patterns/Stream.dispose:(Ljava/lang/Object;)V
       8: return

  public final void reset(T);
    Code:
       0: aload_0
       1: getfield      #14                 // Field inStream:Lde/sciss/patterns/Stream;
       4: aload_1
       5: invokevirtual #41                 // Method de/sciss/patterns/Stream.reset:(Lde/sciss/lucre/Exec;)V
       8: return

  public final boolean hasNext(de.sciss.patterns.Context<T>, T);
    Code:
       0: aload_0
       1: getfield      #14                 // Field inStream:Lde/sciss/patterns/Stream;
       4: aload_1
       5: aload_2
       6: invokevirtual #47                 // Method de/sciss/patterns/Stream.hasNext:(Lde/sciss/patterns/Context;Lde/sciss/lucre/Exec;)Z
       9: ireturn

  public final A next(de.sciss.patterns.Context<T>, T);
    Code:
       0: aload_0
       1: getfield      #14                 // Field inStream:Lde/sciss/patterns/Stream;
       4: aload_1
       5: aload_2
       6: invokevirtual #53                 // Method de/sciss/patterns/Stream.next:(Lde/sciss/patterns/Context;Lde/sciss/lucre/Exec;)Ljava/lang/Object;
       9: checkcast     #55                 // class de/sciss/patterns/graph/AudioCue
      12: astore_3
      13: aload_0
      14: aload_3
      15: invokevirtual #59                 // Method de/sciss/patterns/graph/AudioCue.peer:()Lde/sciss/proc/AudioCue;
      18: invokevirtual #61                 // Method mapCue:(Lde/sciss/proc/AudioCue;)Ljava/lang/Object;
      21: areturn

  public void dispose(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #64                 // class de/sciss/lucre/Exec
       5: invokevirtual #66                 // Method dispose:(Lde/sciss/lucre/Exec;)V
       8: return
}
