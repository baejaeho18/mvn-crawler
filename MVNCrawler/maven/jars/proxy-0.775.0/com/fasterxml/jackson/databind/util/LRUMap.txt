Compiled from "LRUMap.java"
public class com.fasterxml.jackson.databind.util.LRUMap<K, V> implements com.fasterxml.jackson.databind.util.LookupCache<K, V>, java.io.Serializable {
  private static final long serialVersionUID;

  protected final int _initialEntries;

  protected final int _maxEntries;

  protected final transient com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap<K, V> _map;

  public com.fasterxml.jackson.databind.util.LRUMap(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field _initialEntries:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field _maxEntries:I
      14: aload_0
      15: new           #4                  // class com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap$Builder
      18: dup
      19: invokespecial #5                  // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap$Builder."<init>":()V
      22: iload_1
      23: invokevirtual #6                  // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap$Builder.initialCapacity:(I)Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap$Builder;
      26: iload_2
      27: i2l
      28: invokevirtual #7                  // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap$Builder.maximumCapacity:(J)Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap$Builder;
      31: iconst_4
      32: invokevirtual #8                  // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap$Builder.concurrencyLevel:(I)Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap$Builder;
      35: invokevirtual #9                  // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap$Builder.build:()Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap;
      38: putfield      #10                 // Field _map:Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap;
      41: return

  public V put(K, V);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _map:Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #11                 // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _map:Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #12                 // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _map:Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap;
       4: aload_1
       5: invokevirtual #13                 // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _map:Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap;
       4: invokevirtual #14                 // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.clear:()V
       7: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _map:Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap;
       4: invokevirtual #15                 // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.size:()I
       7: ireturn

  public void contents(java.util.function.BiConsumer<K, V>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _map:Lcom/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap;
       4: invokevirtual #16                 // Method com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.entrySet:()Ljava/util/Set;
       7: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          53
      22: aload_2
      23: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #20                 // class java/util/Map$Entry
      31: astore_3
      32: aload_1
      33: aload_3
      34: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      39: aload_3
      40: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: invokeinterface #23,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      50: goto          13
      53: return

  protected java.lang.Object readResolve();
    Code:
       0: new           #24                 // class com/fasterxml/jackson/databind/util/LRUMap
       3: dup
       4: aload_0
       5: getfield      #2                  // Field _initialEntries:I
       8: aload_0
       9: getfield      #3                  // Field _maxEntries:I
      12: invokespecial #25                 // Method "<init>":(II)V
      15: areturn
}
