Compiled from "EnumNamingStrategies.java"
public class com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy implements com.fasterxml.jackson.databind.EnumNamingStrategy {
  public static final com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy INSTANCE;

  public com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String convertEnumToExternalName(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: ldc           #2                  // String _
       8: astore_2
       9: aconst_null
      10: astore_3
      11: iconst_0
      12: istore        4
      14: iconst_m1
      15: istore        5
      17: aload_1
      18: iload         5
      20: iconst_1
      21: iadd
      22: invokestatic  #3                  // Method indexIn:(Ljava/lang/CharSequence;I)I
      25: istore        5
      27: iload         5
      29: iconst_m1
      30: if_icmpeq     103
      33: iload         4
      35: ifne          77
      38: new           #4                  // class java/lang/StringBuilder
      41: dup
      42: aload_1
      43: invokevirtual #5                  // Method java/lang/String.length:()I
      46: iconst_4
      47: ldc           #2                  // String _
      49: invokevirtual #5                  // Method java/lang/String.length:()I
      52: imul
      53: iadd
      54: invokespecial #6                  // Method java/lang/StringBuilder."<init>":(I)V
      57: astore_3
      58: aload_3
      59: aload_1
      60: iload         4
      62: iload         5
      64: invokevirtual #7                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      67: invokestatic  #8                  // Method toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
      70: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: pop
      74: goto          93
      77: aload_3
      78: aload_1
      79: iload         4
      81: iload         5
      83: invokevirtual #7                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      86: invokestatic  #10                 // Method normalizeWord:(Ljava/lang/String;)Ljava/lang/String;
      89: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: iload         5
      95: ldc           #2                  // String _
      97: invokevirtual #5                  // Method java/lang/String.length:()I
     100: iadd
     101: istore        4
     103: iload         5
     105: iconst_m1
     106: if_icmpne     17
     109: iload         4
     111: ifne          119
     114: aload_1
     115: invokestatic  #8                  // Method toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
     118: areturn
     119: aload_3
     120: aload_1
     121: iload         4
     123: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     126: invokestatic  #10                 // Method normalizeWord:(Ljava/lang/String;)Ljava/lang/String;
     129: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: pop
     133: aload_3
     134: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: areturn

  private static int indexIn(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore_2
       7: iload_1
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     34
      14: bipush        95
      16: aload_0
      17: iload_3
      18: invokeinterface #14,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      23: if_icmpne     28
      26: iload_3
      27: ireturn
      28: iinc          3, 1
      31: goto          9
      34: iconst_m1
      35: ireturn

  private static java.lang.String normalizeWord(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/lang/String.length:()I
       4: istore_1
       5: iload_1
       6: ifne          11
       9: aload_0
      10: areturn
      11: new           #4                  // class java/lang/StringBuilder
      14: dup
      15: iload_1
      16: invokespecial #6                  // Method java/lang/StringBuilder."<init>":(I)V
      19: aload_0
      20: iconst_0
      21: invokevirtual #15                 // Method java/lang/String.charAt:(I)C
      24: invokestatic  #16                 // Method charToUpperCaseIfLower:(C)C
      27: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: aload_0
      31: iconst_1
      32: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      35: invokestatic  #8                  // Method toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
      38: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  private static java.lang.String toLowerCase(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/lang/String.length:()I
       4: istore_1
       5: new           #4                  // class java/lang/StringBuilder
       8: dup
       9: iload_1
      10: invokespecial #6                  // Method java/lang/StringBuilder."<init>":(I)V
      13: astore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: iload_1
      18: if_icmpge     40
      21: aload_2
      22: aload_0
      23: iload_3
      24: invokevirtual #15                 // Method java/lang/String.charAt:(I)C
      27: invokestatic  #18                 // Method charToLowerCaseIfUpper:(C)C
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      33: pop
      34: iinc          3, 1
      37: goto          16
      40: aload_2
      41: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  private static char charToUpperCaseIfLower(char);
    Code:
       0: iload_0
       1: invokestatic  #19                 // Method java/lang/Character.isLowerCase:(C)Z
       4: ifeq          14
       7: iload_0
       8: invokestatic  #20                 // Method java/lang/Character.toUpperCase:(C)C
      11: goto          15
      14: iload_0
      15: ireturn

  private static char charToLowerCaseIfUpper(char);
    Code:
       0: iload_0
       1: invokestatic  #21                 // Method java/lang/Character.isUpperCase:(C)Z
       4: ifeq          14
       7: iload_0
       8: invokestatic  #22                 // Method java/lang/Character.toLowerCase:(C)C
      11: goto          15
      14: iload_0
      15: ireturn

  static {};
    Code:
       0: new           #23                 // class com/fasterxml/jackson/databind/EnumNamingStrategies$CamelCaseStrategy
       3: dup
       4: invokespecial #24                 // Method "<init>":()V
       7: putstatic     #25                 // Field INSTANCE:Lcom/fasterxml/jackson/databind/EnumNamingStrategies$CamelCaseStrategy;
      10: return
}
