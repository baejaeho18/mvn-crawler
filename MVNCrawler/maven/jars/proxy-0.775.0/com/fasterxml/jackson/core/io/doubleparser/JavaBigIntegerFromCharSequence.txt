Compiled from "JavaBigIntegerFromCharSequence.java"
class com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharSequence extends com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser {
  public static final int MAX_INPUT_LENGTH;

  private static final int MAX_DECIMAL_DIGITS;

  private static final int MAX_HEX_DIGITS;

  com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharSequence();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method com/fasterxml/jackson/core/io/doubleparser/AbstractNumberParser."<init>":()V
       4: return

  public java.math.BigInteger parseBigIntegerLiteral(java.lang.CharSequence, int, int, int) throws java.lang.NumberFormatException;
    Code:
       0: iload_2
       1: iload_3
       2: iadd
       3: istore        5
       5: iload_2
       6: iflt          32
       9: iload         5
      11: iload_2
      12: if_icmplt     32
      15: iload         5
      17: aload_1
      18: invokeinterface #30,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      23: if_icmpgt     32
      26: iload_3
      27: ldc           #8                  // int 1292782622
      29: if_icmple     42
      32: new           #32                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #34                 // String offset < 0 or length > str.length
      38: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload_2
      43: istore        6
      45: aload_1
      46: iload         6
      48: invokeinterface #41,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      53: istore        7
      55: iload         7
      57: bipush        45
      59: if_icmpne     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: istore        8
      69: iload         8
      71: ifne          81
      74: iload         7
      76: bipush        43
      78: if_icmpne     109
      81: aload_1
      82: iinc          6, 1
      85: iload         6
      87: iload         5
      89: invokestatic  #44                 // Method charAt:(Ljava/lang/CharSequence;II)C
      92: istore        7
      94: iload         7
      96: ifne          109
      99: new           #22                 // class java/lang/NumberFormatException
     102: dup
     103: ldc           #46                 // String illegal syntax
     105: invokespecial #47                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: iload         4
     111: lookupswitch  { // 2
                    10: 136
                    16: 148
               default: 160
          }
     136: aload_0
     137: aload_1
     138: iload         6
     140: iload         5
     142: iload         8
     144: invokespecial #51                 // Method parseDecDigits:(Ljava/lang/CharSequence;IIZ)Ljava/math/BigInteger;
     147: areturn
     148: aload_0
     149: aload_1
     150: iload         6
     152: iload         5
     154: iload         8
     156: invokespecial #54                 // Method parseHexDigits:(Ljava/lang/CharSequence;IIZ)Ljava/math/BigInteger;
     159: areturn
     160: new           #56                 // class java/math/BigInteger
     163: dup
     164: aload_1
     165: iload_2
     166: iload_3
     167: invokeinterface #60,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
     172: invokeinterface #64,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
     177: iload         4
     179: invokespecial #67                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     182: areturn
     183: astore        5
     185: new           #22                 // class java/lang/NumberFormatException
     188: dup
     189: ldc           #69                 // String value exceeds limits
     191: invokespecial #47                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     194: astore        6
     196: aload         6
     198: aload         5
     200: invokevirtual #73                 // Method java/lang/NumberFormatException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     203: pop
     204: aload         6
     206: athrow
    Exception table:
       from    to  target type
           0   147   183   Class java/lang/ArithmeticException
         148   159   183   Class java/lang/ArithmeticException
         160   182   183   Class java/lang/ArithmeticException

  private java.math.BigInteger parseDecDigits(java.lang.CharSequence, int, int, boolean);
    Code:
       0: iload_3
       1: iload_2
       2: isub
       3: istore        5
       5: iload         5
       7: bipush        18
       9: if_icmple     22
      12: aload_0
      13: aload_1
      14: iload_2
      15: iload_3
      16: iload         4
      18: invokespecial #90                 // Method parseManyDecDigits:(Ljava/lang/CharSequence;IIZ)Ljava/math/BigInteger;
      21: areturn
      22: iload_2
      23: iload         5
      25: bipush        7
      27: iand
      28: iadd
      29: istore        6
      31: aload_1
      32: iload_2
      33: iload         6
      35: invokestatic  #96                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseUpTo7Digits:(Ljava/lang/CharSequence;II)I
      38: i2l
      39: lstore        7
      41: lload         7
      43: lconst_0
      44: lcmp
      45: iflt          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: istore        9
      55: iload         6
      57: istore_2
      58: iload_2
      59: iload_3
      60: if_icmpge     103
      63: aload_1
      64: iload_2
      65: invokestatic  #100                // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigits:(Ljava/lang/CharSequence;I)I
      68: istore        10
      70: iload         9
      72: iload         10
      74: iflt          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: iand
      83: istore        9
      85: lload         7
      87: ldc2_w        #101                // long 100000000l
      90: lmul
      91: iload         10
      93: i2l
      94: ladd
      95: lstore        7
      97: iinc          2, 8
     100: goto          58
     103: iload         9
     105: ifne          118
     108: new           #22                 // class java/lang/NumberFormatException
     111: dup
     112: ldc           #46                 // String illegal syntax
     114: invokespecial #47                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: iload         4
     120: ifeq          129
     123: lload         7
     125: lneg
     126: goto          131
     129: lload         7
     131: invokestatic  #106                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     134: areturn

  private java.math.BigInteger parseHexDigits(java.lang.CharSequence, int, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #117                // Method skipZeroes:(Ljava/lang/CharSequence;II)I
       7: istore_2
       8: iload_3
       9: iload_2
      10: isub
      11: istore        5
      13: iload         5
      15: ifgt          22
      18: getstatic     #121                // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
      21: areturn
      22: iload         5
      24: ldc           #12                 // int 536870912
      26: if_icmple     39
      29: new           #22                 // class java/lang/NumberFormatException
      32: dup
      33: ldc           #69                 // String value exceeds limits
      35: invokespecial #47                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: iload         5
      41: iconst_1
      42: iadd
      43: iconst_1
      44: ishr
      45: iconst_1
      46: iadd
      47: newarray       byte
      49: astore        6
      51: iconst_1
      52: istore        7
      54: iconst_0
      55: istore        8
      57: iload         5
      59: iconst_1
      60: iand
      61: ifeq          106
      64: aload_1
      65: iload_2
      66: iinc          2, 1
      69: invokeinterface #41,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      74: istore        9
      76: iload         9
      78: invokestatic  #125                // Method lookupHex:(C)I
      81: istore        10
      83: aload         6
      85: iload         7
      87: iinc          7, 1
      90: iload         10
      92: i2b
      93: bastore
      94: iload         10
      96: ifge          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: istore        8
     106: iload_2
     107: iload_3
     108: iload_2
     109: isub
     110: bipush        7
     112: iand
     113: iadd
     114: istore        9
     116: iload_2
     117: iload         9
     119: if_icmpge     198
     122: aload_1
     123: iload_2
     124: invokeinterface #41,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     129: istore        10
     131: aload_1
     132: iload_2
     133: iconst_1
     134: iadd
     135: invokeinterface #41,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     140: istore        11
     142: iload         10
     144: invokestatic  #125                // Method lookupHex:(C)I
     147: istore        12
     149: iload         11
     151: invokestatic  #125                // Method lookupHex:(C)I
     154: istore        13
     156: aload         6
     158: iload         7
     160: iinc          7, 1
     163: iload         12
     165: iconst_4
     166: ishl
     167: iload         13
     169: ior
     170: i2b
     171: bastore
     172: iload         8
     174: iload         13
     176: iflt          184
     179: iload         12
     181: ifge          188
     184: iconst_1
     185: goto          189
     188: iconst_0
     189: ior
     190: istore        8
     192: iinc          2, 2
     195: goto          116
     198: iload_2
     199: iload_3
     200: if_icmpge     246
     203: aload_1
     204: iload_2
     205: invokestatic  #131                // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightHexDigits:(Ljava/lang/CharSequence;I)J
     208: lstore        10
     210: aload         6
     212: iload         7
     214: lload         10
     216: l2i
     217: invokestatic  #135                // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.writeIntBE:([BII)V
     220: iload         8
     222: lload         10
     224: lconst_0
     225: lcmp
     226: ifge          233
     229: iconst_1
     230: goto          234
     233: iconst_0
     234: ior
     235: istore        8
     237: iinc          2, 8
     240: iinc          7, 4
     243: goto          198
     246: iload         8
     248: ifeq          261
     251: new           #22                 // class java/lang/NumberFormatException
     254: dup
     255: ldc           #46                 // String illegal syntax
     257: invokespecial #47                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     260: athrow
     261: new           #56                 // class java/math/BigInteger
     264: dup
     265: aload         6
     267: invokespecial #138                // Method java/math/BigInteger."<init>":([B)V
     270: astore        10
     272: iload         4
     274: ifeq          285
     277: aload         10
     279: invokevirtual #142                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
     282: goto          287
     285: aload         10
     287: areturn

  private java.math.BigInteger parseManyDecDigits(java.lang.CharSequence, int, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #117                // Method skipZeroes:(Ljava/lang/CharSequence;II)I
       7: istore_2
       8: iload_3
       9: iload_2
      10: isub
      11: istore        5
      13: iload         5
      15: ldc           #10                 // int 646456993
      17: if_icmple     30
      20: new           #22                 // class java/lang/NumberFormatException
      23: dup
      24: ldc           #69                 // String value exceeds limits
      26: invokespecial #47                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: iload_2
      31: iload_3
      32: invokestatic  #157                // Method com/fasterxml/jackson/core/io/doubleparser/FastIntegerMath.fillPowersOf10Floor16:(II)Ljava/util/NavigableMap;
      35: astore        6
      37: aload_1
      38: iload_2
      39: iload_3
      40: aload         6
      42: invokestatic  #163                // Method com/fasterxml/jackson/core/io/doubleparser/ParseDigitsTaskCharSequence.parseDigitsRecursive:(Ljava/lang/CharSequence;IILjava/util/Map;)Ljava/math/BigInteger;
      45: astore        7
      47: iload         4
      49: ifeq          60
      52: aload         7
      54: invokevirtual #142                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      57: goto          62
      60: aload         7
      62: areturn

  private int skipZeroes(java.lang.CharSequence, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpge     23
       5: aload_1
       6: iload_2
       7: invokeinterface #41,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      12: bipush        48
      14: if_icmpne     23
      17: iinc          2, 1
      20: goto          0
      23: iload_2
      24: ireturn
}
