Compiled from "JavaFloatBitsFromCharSequence.java"
final class com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharSequence extends com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromCharSequence {
  public com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharSequence();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method com/fasterxml/jackson/core/io/doubleparser/AbstractJavaFloatingPointBitsFromCharSequence."<init>":()V
       4: return

  long nan();
    Code:
       0: ldc           #14                 // float NaNf
       2: invokestatic  #20                 // Method java/lang/Float.floatToRawIntBits:(F)I
       5: i2l
       6: lreturn

  long negativeInfinity();
    Code:
       0: ldc           #22                 // float -Infinityf
       2: invokestatic  #20                 // Method java/lang/Float.floatToRawIntBits:(F)I
       5: i2l
       6: lreturn

  long positiveInfinity();
    Code:
       0: ldc           #24                 // float Infinityf
       2: invokestatic  #20                 // Method java/lang/Float.floatToRawIntBits:(F)I
       5: i2l
       6: lreturn

  long valueOfFloatLiteral(java.lang.CharSequence, int, int, boolean, long, int, boolean, int);
    Code:
       0: iload         4
       2: lload         5
       4: iload         7
       6: iload         8
       8: iload         9
      10: invokestatic  #32                 // Method com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.decFloatLiteralToFloat:(ZJIZI)F
      13: fstore        10
      15: fload         10
      17: invokestatic  #36                 // Method java/lang/Float.isNaN:(F)Z
      20: ifeq          42
      23: aload_1
      24: iload_2
      25: iload_3
      26: invokeinterface #42,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      31: invokeinterface #46,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      36: invokestatic  #50                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
      39: goto          44
      42: fload         10
      44: invokestatic  #20                 // Method java/lang/Float.floatToRawIntBits:(F)I
      47: i2l
      48: lreturn

  long valueOfHexLiteral(java.lang.CharSequence, int, int, boolean, long, int, boolean, int);
    Code:
       0: iload         4
       2: lload         5
       4: iload         7
       6: iload         8
       8: iload         9
      10: invokestatic  #68                 // Method com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.hexFloatLiteralToFloat:(ZJIZI)F
      13: fstore        10
      15: fload         10
      17: invokestatic  #36                 // Method java/lang/Float.isNaN:(F)Z
      20: ifeq          42
      23: aload_1
      24: iload_2
      25: iload_3
      26: invokeinterface #42,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      31: invokeinterface #46,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      36: invokestatic  #50                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
      39: goto          44
      42: fload         10
      44: invokestatic  #20                 // Method java/lang/Float.floatToRawIntBits:(F)I
      47: i2l
      48: lreturn
}
