Compiled from "JavaDoubleBitsFromCharSequence.java"
final class com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharSequence extends com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromCharSequence {
  public com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharSequence();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method com/fasterxml/jackson/core/io/doubleparser/AbstractJavaFloatingPointBitsFromCharSequence."<init>":()V
       4: return

  long nan();
    Code:
       0: ldc2_w        #14                 // double NaNd
       3: invokestatic  #21                 // Method java/lang/Double.doubleToRawLongBits:(D)J
       6: lreturn

  long negativeInfinity();
    Code:
       0: ldc2_w        #23                 // double -Infinityd
       3: invokestatic  #21                 // Method java/lang/Double.doubleToRawLongBits:(D)J
       6: lreturn

  long positiveInfinity();
    Code:
       0: ldc2_w        #26                 // double Infinityd
       3: invokestatic  #21                 // Method java/lang/Double.doubleToRawLongBits:(D)J
       6: lreturn

  long valueOfFloatLiteral(java.lang.CharSequence, int, int, boolean, long, int, boolean, int);
    Code:
       0: iload         4
       2: lload         5
       4: iload         7
       6: iload         8
       8: iload         9
      10: invokestatic  #35                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.tryDecFloatToDoubleTruncated:(ZJIZI)D
      13: dstore        10
      15: dload         10
      17: invokestatic  #39                 // Method java/lang/Double.isNaN:(D)Z
      20: ifeq          42
      23: aload_1
      24: iload_2
      25: iload_3
      26: invokeinterface #45,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      31: invokeinterface #49,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      36: invokestatic  #53                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      39: goto          44
      42: dload         10
      44: invokestatic  #21                 // Method java/lang/Double.doubleToRawLongBits:(D)J
      47: lreturn

  long valueOfHexLiteral(java.lang.CharSequence, int, int, boolean, long, int, boolean, int);
    Code:
       0: iload         4
       2: lload         5
       4: iload         7
       6: i2l
       7: iload         8
       9: iload         9
      11: i2l
      12: invokestatic  #72                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.tryHexFloatToDoubleTruncated:(ZJJZJ)D
      15: dstore        10
      17: dload         10
      19: invokestatic  #39                 // Method java/lang/Double.isNaN:(D)Z
      22: ifeq          44
      25: aload_1
      26: iload_2
      27: iload_3
      28: invokeinterface #45,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      33: invokeinterface #49,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      38: invokestatic  #53                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      41: goto          46
      44: dload         10
      46: invokestatic  #21                 // Method java/lang/Double.doubleToRawLongBits:(D)J
      49: lreturn
}
