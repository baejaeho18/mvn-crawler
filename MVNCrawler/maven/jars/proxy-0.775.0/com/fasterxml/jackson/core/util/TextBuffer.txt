Compiled from "TextBuffer.java"
public class com.fasterxml.jackson.core.util.TextBuffer {
  static final char[] NO_CHARS;

  static final int MIN_SEGMENT_LEN;

  static final int MAX_SEGMENT_LEN;

  private final com.fasterxml.jackson.core.util.BufferRecycler _allocator;

  private char[] _inputBuffer;

  private int _inputStart;

  private int _inputLen;

  private java.util.ArrayList<char[]> _segments;

  private boolean _hasSegments;

  private int _segmentSize;

  private char[] _currentSegment;

  private int _currentSize;

  private java.lang.String _resultString;

  private char[] _resultArray;

  public com.fasterxml.jackson.core.util.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;
       9: return

  protected com.fasterxml.jackson.core.util.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler, char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method "<init>":(Lcom/fasterxml/jackson/core/util/BufferRecycler;)V
       5: aload_0
       6: aload_2
       7: putfield      #4                  // Field _currentSegment:[C
      10: aload_0
      11: aload_2
      12: arraylength
      13: putfield      #5                  // Field _currentSize:I
      16: aload_0
      17: iconst_m1
      18: putfield      #6                  // Field _inputStart:I
      21: return

  public static com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[]);
    Code:
       0: new           #7                  // class com/fasterxml/jackson/core/util/TextBuffer
       3: dup
       4: aconst_null
       5: aload_0
       6: invokespecial #8                  // Method "<init>":(Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V
       9: areturn

  public void releaseBuffers();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #6                  // Field _inputStart:I
       5: aload_0
       6: iconst_0
       7: putfield      #5                  // Field _currentSize:I
      10: aload_0
      11: iconst_0
      12: putfield      #9                  // Field _inputLen:I
      15: aload_0
      16: aconst_null
      17: putfield      #10                 // Field _inputBuffer:[C
      20: aload_0
      21: aconst_null
      22: putfield      #11                 // Field _resultArray:[C
      25: aload_0
      26: getfield      #12                 // Field _hasSegments:Z
      29: ifeq          36
      32: aload_0
      33: invokespecial #13                 // Method clearSegments:()V
      36: aload_0
      37: getfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;
      40: ifnull        69
      43: aload_0
      44: getfield      #4                  // Field _currentSegment:[C
      47: ifnull        69
      50: aload_0
      51: getfield      #4                  // Field _currentSegment:[C
      54: astore_1
      55: aload_0
      56: aconst_null
      57: putfield      #4                  // Field _currentSegment:[C
      60: aload_0
      61: getfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;
      64: iconst_2
      65: aload_1
      66: invokevirtual #15                 // Method com/fasterxml/jackson/core/util/BufferRecycler.releaseCharBuffer:(I[C)V
      69: return

  public void resetWithEmpty();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #6                  // Field _inputStart:I
       5: aload_0
       6: iconst_0
       7: putfield      #5                  // Field _currentSize:I
      10: aload_0
      11: iconst_0
      12: putfield      #9                  // Field _inputLen:I
      15: aload_0
      16: aconst_null
      17: putfield      #10                 // Field _inputBuffer:[C
      20: aload_0
      21: aconst_null
      22: putfield      #16                 // Field _resultString:Ljava/lang/String;
      25: aload_0
      26: aconst_null
      27: putfield      #11                 // Field _resultArray:[C
      30: aload_0
      31: getfield      #12                 // Field _hasSegments:Z
      34: ifeq          41
      37: aload_0
      38: invokespecial #13                 // Method clearSegments:()V
      41: return

  public void resetWith(char);
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #6                  // Field _inputStart:I
       5: aload_0
       6: iconst_0
       7: putfield      #9                  // Field _inputLen:I
      10: aload_0
      11: aconst_null
      12: putfield      #16                 // Field _resultString:Ljava/lang/String;
      15: aload_0
      16: aconst_null
      17: putfield      #11                 // Field _resultArray:[C
      20: aload_0
      21: getfield      #12                 // Field _hasSegments:Z
      24: ifeq          34
      27: aload_0
      28: invokespecial #13                 // Method clearSegments:()V
      31: goto          50
      34: aload_0
      35: getfield      #4                  // Field _currentSegment:[C
      38: ifnonnull     50
      41: aload_0
      42: aload_0
      43: iconst_1
      44: invokespecial #17                 // Method buf:(I)[C
      47: putfield      #4                  // Field _currentSegment:[C
      50: aload_0
      51: getfield      #4                  // Field _currentSegment:[C
      54: iconst_0
      55: iload_1
      56: castore
      57: aload_0
      58: aload_0
      59: iconst_1
      60: dup_x1
      61: putfield      #18                 // Field _segmentSize:I
      64: putfield      #5                  // Field _currentSize:I
      67: return

  public void resetWithShared(char[], int, int);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #16                 // Field _resultString:Ljava/lang/String;
       5: aload_0
       6: aconst_null
       7: putfield      #11                 // Field _resultArray:[C
      10: aload_0
      11: aload_1
      12: putfield      #10                 // Field _inputBuffer:[C
      15: aload_0
      16: iload_2
      17: putfield      #6                  // Field _inputStart:I
      20: aload_0
      21: iload_3
      22: putfield      #9                  // Field _inputLen:I
      25: aload_0
      26: getfield      #12                 // Field _hasSegments:Z
      29: ifeq          36
      32: aload_0
      33: invokespecial #13                 // Method clearSegments:()V
      36: return

  public void resetWithCopy(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #10                 // Field _inputBuffer:[C
       5: aload_0
       6: iconst_m1
       7: putfield      #6                  // Field _inputStart:I
      10: aload_0
      11: iconst_0
      12: putfield      #9                  // Field _inputLen:I
      15: aload_0
      16: aconst_null
      17: putfield      #16                 // Field _resultString:Ljava/lang/String;
      20: aload_0
      21: aconst_null
      22: putfield      #11                 // Field _resultArray:[C
      25: aload_0
      26: getfield      #12                 // Field _hasSegments:Z
      29: ifeq          39
      32: aload_0
      33: invokespecial #13                 // Method clearSegments:()V
      36: goto          55
      39: aload_0
      40: getfield      #4                  // Field _currentSegment:[C
      43: ifnonnull     55
      46: aload_0
      47: aload_0
      48: iload_3
      49: invokespecial #17                 // Method buf:(I)[C
      52: putfield      #4                  // Field _currentSegment:[C
      55: aload_0
      56: aload_0
      57: iconst_0
      58: dup_x1
      59: putfield      #18                 // Field _segmentSize:I
      62: putfield      #5                  // Field _currentSize:I
      65: aload_0
      66: aload_1
      67: iload_2
      68: iload_3
      69: invokevirtual #19                 // Method append:([CII)V
      72: return

  public void resetWithCopy(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #10                 // Field _inputBuffer:[C
       5: aload_0
       6: iconst_m1
       7: putfield      #6                  // Field _inputStart:I
      10: aload_0
      11: iconst_0
      12: putfield      #9                  // Field _inputLen:I
      15: aload_0
      16: aconst_null
      17: putfield      #16                 // Field _resultString:Ljava/lang/String;
      20: aload_0
      21: aconst_null
      22: putfield      #11                 // Field _resultArray:[C
      25: aload_0
      26: getfield      #12                 // Field _hasSegments:Z
      29: ifeq          39
      32: aload_0
      33: invokespecial #13                 // Method clearSegments:()V
      36: goto          55
      39: aload_0
      40: getfield      #4                  // Field _currentSegment:[C
      43: ifnonnull     55
      46: aload_0
      47: aload_0
      48: iload_3
      49: invokespecial #17                 // Method buf:(I)[C
      52: putfield      #4                  // Field _currentSegment:[C
      55: aload_0
      56: aload_0
      57: iconst_0
      58: dup_x1
      59: putfield      #18                 // Field _segmentSize:I
      62: putfield      #5                  // Field _currentSize:I
      65: aload_0
      66: aload_1
      67: iload_2
      68: iload_3
      69: invokevirtual #20                 // Method append:(Ljava/lang/String;II)V
      72: return

  public void resetWithString(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #10                 // Field _inputBuffer:[C
       5: aload_0
       6: iconst_m1
       7: putfield      #6                  // Field _inputStart:I
      10: aload_0
      11: iconst_0
      12: putfield      #9                  // Field _inputLen:I
      15: aload_0
      16: aload_1
      17: invokevirtual #21                 // Method java/lang/String.length:()I
      20: invokevirtual #22                 // Method validateStringLength:(I)V
      23: aload_0
      24: aload_1
      25: putfield      #16                 // Field _resultString:Ljava/lang/String;
      28: aload_0
      29: aconst_null
      30: putfield      #11                 // Field _resultArray:[C
      33: aload_0
      34: getfield      #12                 // Field _hasSegments:Z
      37: ifeq          44
      40: aload_0
      41: invokespecial #13                 // Method clearSegments:()V
      44: aload_0
      45: iconst_0
      46: putfield      #5                  // Field _currentSize:I
      49: return

  public char[] getBufferWithoutReset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _currentSegment:[C
       4: areturn

  private char[] buf(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;
      11: iconst_2
      12: iload_1
      13: invokevirtual #23                 // Method com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer:(II)[C
      16: areturn
      17: iload_1
      18: sipush        500
      21: invokestatic  #24                 // Method java/lang/Math.max:(II)I
      24: newarray       char
      26: areturn

  private void clearSegments();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #12                 // Field _hasSegments:Z
       5: aload_0
       6: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
       9: invokevirtual #26                 // Method java/util/ArrayList.clear:()V
      12: aload_0
      13: aload_0
      14: iconst_0
      15: dup_x1
      16: putfield      #18                 // Field _segmentSize:I
      19: putfield      #5                  // Field _currentSize:I
      22: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          12
       7: aload_0
       8: getfield      #9                  // Field _inputLen:I
      11: ireturn
      12: aload_0
      13: getfield      #11                 // Field _resultArray:[C
      16: ifnull        25
      19: aload_0
      20: getfield      #11                 // Field _resultArray:[C
      23: arraylength
      24: ireturn
      25: aload_0
      26: getfield      #16                 // Field _resultString:Ljava/lang/String;
      29: ifnull        40
      32: aload_0
      33: getfield      #16                 // Field _resultString:Ljava/lang/String;
      36: invokevirtual #21                 // Method java/lang/String.length:()I
      39: ireturn
      40: aload_0
      41: getfield      #18                 // Field _segmentSize:I
      44: aload_0
      45: getfield      #5                  // Field _currentSize:I
      48: iadd
      49: ireturn

  public int getTextOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          14
       7: aload_0
       8: getfield      #6                  // Field _inputStart:I
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hasTextAsCharacters();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: ifge          14
       7: aload_0
       8: getfield      #11                 // Field _resultArray:[C
      11: ifnull        16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: getfield      #16                 // Field _resultString:Ljava/lang/String;
      20: ifnull        25
      23: iconst_0
      24: ireturn
      25: iconst_1
      26: ireturn

  public char[] getTextBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          12
       7: aload_0
       8: getfield      #10                 // Field _inputBuffer:[C
      11: areturn
      12: aload_0
      13: getfield      #11                 // Field _resultArray:[C
      16: ifnull        24
      19: aload_0
      20: getfield      #11                 // Field _resultArray:[C
      23: areturn
      24: aload_0
      25: getfield      #16                 // Field _resultString:Ljava/lang/String;
      28: ifnull        44
      31: aload_0
      32: aload_0
      33: getfield      #16                 // Field _resultString:Ljava/lang/String;
      36: invokevirtual #27                 // Method java/lang/String.toCharArray:()[C
      39: dup_x1
      40: putfield      #11                 // Field _resultArray:[C
      43: areturn
      44: aload_0
      45: getfield      #12                 // Field _hasSegments:Z
      48: ifne          69
      51: aload_0
      52: getfield      #4                  // Field _currentSegment:[C
      55: ifnonnull     64
      58: getstatic     #28                 // Field NO_CHARS:[C
      61: goto          68
      64: aload_0
      65: getfield      #4                  // Field _currentSegment:[C
      68: areturn
      69: aload_0
      70: invokevirtual #29                 // Method contentsAsArray:()[C
      73: areturn

  public java.lang.String contentsAsString() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field _resultString:Ljava/lang/String;
       4: ifnonnull     252
       7: aload_0
       8: getfield      #11                 // Field _resultArray:[C
      11: ifnull        32
      14: aload_0
      15: new           #30                 // class java/lang/String
      18: dup
      19: aload_0
      20: getfield      #11                 // Field _resultArray:[C
      23: invokespecial #31                 // Method java/lang/String."<init>":([C)V
      26: putfield      #16                 // Field _resultString:Ljava/lang/String;
      29: goto          252
      32: aload_0
      33: getfield      #6                  // Field _inputStart:I
      36: iflt          89
      39: aload_0
      40: getfield      #9                  // Field _inputLen:I
      43: iconst_1
      44: if_icmpge     55
      47: aload_0
      48: ldc           #32                 // String
      50: dup_x1
      51: putfield      #16                 // Field _resultString:Ljava/lang/String;
      54: areturn
      55: aload_0
      56: aload_0
      57: getfield      #9                  // Field _inputLen:I
      60: invokevirtual #22                 // Method validateStringLength:(I)V
      63: aload_0
      64: new           #30                 // class java/lang/String
      67: dup
      68: aload_0
      69: getfield      #10                 // Field _inputBuffer:[C
      72: aload_0
      73: getfield      #6                  // Field _inputStart:I
      76: aload_0
      77: getfield      #9                  // Field _inputLen:I
      80: invokespecial #33                 // Method java/lang/String."<init>":([CII)V
      83: putfield      #16                 // Field _resultString:Ljava/lang/String;
      86: goto          252
      89: aload_0
      90: getfield      #18                 // Field _segmentSize:I
      93: istore_1
      94: aload_0
      95: getfield      #5                  // Field _currentSize:I
      98: istore_2
      99: iload_1
     100: ifne          141
     103: iload_2
     104: ifne          116
     107: aload_0
     108: ldc           #32                 // String
     110: putfield      #16                 // Field _resultString:Ljava/lang/String;
     113: goto          252
     116: aload_0
     117: iload_2
     118: invokevirtual #22                 // Method validateStringLength:(I)V
     121: aload_0
     122: new           #30                 // class java/lang/String
     125: dup
     126: aload_0
     127: getfield      #4                  // Field _currentSegment:[C
     130: iconst_0
     131: iload_2
     132: invokespecial #33                 // Method java/lang/String."<init>":([CII)V
     135: putfield      #16                 // Field _resultString:Ljava/lang/String;
     138: goto          252
     141: iload_1
     142: iload_2
     143: iadd
     144: istore_3
     145: iload_3
     146: ifge          155
     149: aload_0
     150: iload_1
     151: iload_2
     152: invokevirtual #34                 // Method _reportBufferOverflow:(II)V
     155: aload_0
     156: iload_3
     157: invokevirtual #22                 // Method validateStringLength:(I)V
     160: new           #35                 // class java/lang/StringBuilder
     163: dup
     164: iload_3
     165: invokespecial #36                 // Method java/lang/StringBuilder."<init>":(I)V
     168: astore        4
     170: aload_0
     171: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
     174: ifnull        228
     177: iconst_0
     178: istore        5
     180: aload_0
     181: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
     184: invokevirtual #37                 // Method java/util/ArrayList.size:()I
     187: istore        6
     189: iload         5
     191: iload         6
     193: if_icmpge     228
     196: aload_0
     197: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
     200: iload         5
     202: invokevirtual #38                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     205: checkcast     #39                 // class "[C"
     208: astore        7
     210: aload         4
     212: aload         7
     214: iconst_0
     215: aload         7
     217: arraylength
     218: invokevirtual #40                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     221: pop
     222: iinc          5, 1
     225: goto          189
     228: aload         4
     230: aload_0
     231: getfield      #4                  // Field _currentSegment:[C
     234: iconst_0
     235: aload_0
     236: getfield      #5                  // Field _currentSize:I
     239: invokevirtual #40                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     242: pop
     243: aload_0
     244: aload         4
     246: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     249: putfield      #16                 // Field _resultString:Ljava/lang/String;
     252: aload_0
     253: getfield      #16                 // Field _resultString:Ljava/lang/String;
     256: areturn

  public char[] contentsAsArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field _resultArray:[C
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: aload_0
      10: aload_0
      11: invokespecial #42                 // Method resultArray:()[C
      14: dup
      15: astore_1
      16: putfield      #11                 // Field _resultArray:[C
      19: aload_1
      20: areturn

  public double contentsAsDouble(boolean) throws java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method contentsAsString:()Ljava/lang/String;
       4: iload_1
       5: invokestatic  #44                 // Method com/fasterxml/jackson/core/io/NumberInput.parseDouble:(Ljava/lang/String;Z)D
       8: dreturn
       9: astore_2
      10: new           #46                 // class java/lang/NumberFormatException
      13: dup
      14: aload_2
      15: invokevirtual #47                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      18: invokespecial #48                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      21: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException

  public double contentsAsDouble() throws java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #49                 // Method contentsAsDouble:(Z)D
       5: dreturn

  public float contentsAsFloat() throws java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #50                 // Method contentsAsFloat:(Z)F
       5: freturn

  public float contentsAsFloat(boolean) throws java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method contentsAsString:()Ljava/lang/String;
       4: iload_1
       5: invokestatic  #51                 // Method com/fasterxml/jackson/core/io/NumberInput.parseFloat:(Ljava/lang/String;Z)F
       8: freturn
       9: astore_2
      10: new           #46                 // class java/lang/NumberFormatException
      13: dup
      14: aload_2
      15: invokevirtual #47                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      18: invokespecial #48                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      21: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException

  public java.math.BigDecimal contentsAsDecimal() throws java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method contentsAsArray:()[C
       4: invokestatic  #52                 // Method com/fasterxml/jackson/core/io/NumberInput.parseBigDecimal:([C)Ljava/math/BigDecimal;
       7: areturn
       8: astore_1
       9: new           #46                 // class java/lang/NumberFormatException
      12: dup
      13: aload_1
      14: invokevirtual #47                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      17: invokespecial #48                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      20: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/io/IOException

  public int contentsAsInt(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          55
       7: aload_0
       8: getfield      #10                 // Field _inputBuffer:[C
      11: ifnull        55
      14: iload_1
      15: ifeq          39
      18: aload_0
      19: getfield      #10                 // Field _inputBuffer:[C
      22: aload_0
      23: getfield      #6                  // Field _inputStart:I
      26: iconst_1
      27: iadd
      28: aload_0
      29: getfield      #9                  // Field _inputLen:I
      32: iconst_1
      33: isub
      34: invokestatic  #53                 // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I
      37: ineg
      38: ireturn
      39: aload_0
      40: getfield      #10                 // Field _inputBuffer:[C
      43: aload_0
      44: getfield      #6                  // Field _inputStart:I
      47: aload_0
      48: getfield      #9                  // Field _inputLen:I
      51: invokestatic  #53                 // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I
      54: ireturn
      55: iload_1
      56: ifeq          75
      59: aload_0
      60: getfield      #4                  // Field _currentSegment:[C
      63: iconst_1
      64: aload_0
      65: getfield      #5                  // Field _currentSize:I
      68: iconst_1
      69: isub
      70: invokestatic  #53                 // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I
      73: ineg
      74: ireturn
      75: aload_0
      76: getfield      #4                  // Field _currentSegment:[C
      79: iconst_0
      80: aload_0
      81: getfield      #5                  // Field _currentSize:I
      84: invokestatic  #53                 // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I
      87: ireturn

  public long contentsAsLong(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          55
       7: aload_0
       8: getfield      #10                 // Field _inputBuffer:[C
      11: ifnull        55
      14: iload_1
      15: ifeq          39
      18: aload_0
      19: getfield      #10                 // Field _inputBuffer:[C
      22: aload_0
      23: getfield      #6                  // Field _inputStart:I
      26: iconst_1
      27: iadd
      28: aload_0
      29: getfield      #9                  // Field _inputLen:I
      32: iconst_1
      33: isub
      34: invokestatic  #54                 // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J
      37: lneg
      38: lreturn
      39: aload_0
      40: getfield      #10                 // Field _inputBuffer:[C
      43: aload_0
      44: getfield      #6                  // Field _inputStart:I
      47: aload_0
      48: getfield      #9                  // Field _inputLen:I
      51: invokestatic  #54                 // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J
      54: lreturn
      55: iload_1
      56: ifeq          75
      59: aload_0
      60: getfield      #4                  // Field _currentSegment:[C
      63: iconst_1
      64: aload_0
      65: getfield      #5                  // Field _currentSize:I
      68: iconst_1
      69: isub
      70: invokestatic  #54                 // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J
      73: lneg
      74: lreturn
      75: aload_0
      76: getfield      #4                  // Field _currentSegment:[C
      79: iconst_0
      80: aload_0
      81: getfield      #5                  // Field _currentSize:I
      84: invokestatic  #54                 // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J
      87: lreturn

  public int contentsToWriter(java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field _resultArray:[C
       4: ifnull        21
       7: aload_1
       8: aload_0
       9: getfield      #11                 // Field _resultArray:[C
      12: invokevirtual #55                 // Method java/io/Writer.write:([C)V
      15: aload_0
      16: getfield      #11                 // Field _resultArray:[C
      19: arraylength
      20: ireturn
      21: aload_0
      22: getfield      #16                 // Field _resultString:Ljava/lang/String;
      25: ifnull        44
      28: aload_1
      29: aload_0
      30: getfield      #16                 // Field _resultString:Ljava/lang/String;
      33: invokevirtual #56                 // Method java/io/Writer.write:(Ljava/lang/String;)V
      36: aload_0
      37: getfield      #16                 // Field _resultString:Ljava/lang/String;
      40: invokevirtual #21                 // Method java/lang/String.length:()I
      43: ireturn
      44: aload_0
      45: getfield      #6                  // Field _inputStart:I
      48: iflt          75
      51: aload_0
      52: getfield      #9                  // Field _inputLen:I
      55: istore_2
      56: iload_2
      57: ifle          73
      60: aload_1
      61: aload_0
      62: getfield      #10                 // Field _inputBuffer:[C
      65: aload_0
      66: getfield      #6                  // Field _inputStart:I
      69: iload_2
      70: invokevirtual #57                 // Method java/io/Writer.write:([CII)V
      73: iload_2
      74: ireturn
      75: iconst_0
      76: istore_2
      77: aload_0
      78: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
      81: ifnull        139
      84: iconst_0
      85: istore_3
      86: aload_0
      87: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
      90: invokevirtual #37                 // Method java/util/ArrayList.size:()I
      93: istore        4
      95: iload_3
      96: iload         4
      98: if_icmpge     139
     101: aload_0
     102: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
     105: iload_3
     106: invokevirtual #38                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     109: checkcast     #39                 // class "[C"
     112: astore        5
     114: aload         5
     116: arraylength
     117: istore        6
     119: iload_2
     120: iload         6
     122: iadd
     123: istore_2
     124: aload_1
     125: aload         5
     127: iconst_0
     128: iload         6
     130: invokevirtual #57                 // Method java/io/Writer.write:([CII)V
     133: iinc          3, 1
     136: goto          95
     139: aload_0
     140: getfield      #5                  // Field _currentSize:I
     143: istore_3
     144: iload_3
     145: ifle          162
     148: iload_2
     149: iload_3
     150: iadd
     151: istore_2
     152: aload_1
     153: aload_0
     154: getfield      #4                  // Field _currentSegment:[C
     157: iconst_0
     158: iload_3
     159: invokevirtual #57                 // Method java/io/Writer.write:([CII)V
     162: iload_2
     163: ireturn

  public void ensureNotShared();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          13
       7: aload_0
       8: bipush        16
      10: invokespecial #58                 // Method unshare:(I)V
      13: return

  public void append(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          13
       7: aload_0
       8: bipush        16
      10: invokespecial #58                 // Method unshare:(I)V
      13: aload_0
      14: aconst_null
      15: putfield      #16                 // Field _resultString:Ljava/lang/String;
      18: aload_0
      19: aconst_null
      20: putfield      #11                 // Field _resultArray:[C
      23: aload_0
      24: getfield      #4                  // Field _currentSegment:[C
      27: astore_2
      28: aload_0
      29: getfield      #5                  // Field _currentSize:I
      32: aload_2
      33: arraylength
      34: if_icmplt     51
      37: aload_0
      38: iconst_1
      39: invokespecial #59                 // Method validateAppend:(I)V
      42: aload_0
      43: invokespecial #60                 // Method expand:()V
      46: aload_0
      47: getfield      #4                  // Field _currentSegment:[C
      50: astore_2
      51: aload_2
      52: aload_0
      53: dup
      54: getfield      #5                  // Field _currentSize:I
      57: dup_x1
      58: iconst_1
      59: iadd
      60: putfield      #5                  // Field _currentSize:I
      63: iload_1
      64: castore
      65: return

  public void append(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          12
       7: aload_0
       8: iload_3
       9: invokespecial #58                 // Method unshare:(I)V
      12: aload_0
      13: aconst_null
      14: putfield      #16                 // Field _resultString:Ljava/lang/String;
      17: aload_0
      18: aconst_null
      19: putfield      #11                 // Field _resultArray:[C
      22: aload_0
      23: getfield      #4                  // Field _currentSegment:[C
      26: astore        4
      28: aload         4
      30: arraylength
      31: aload_0
      32: getfield      #5                  // Field _currentSize:I
      35: isub
      36: istore        5
      38: iload         5
      40: iload_3
      41: if_icmplt     67
      44: aload_1
      45: iload_2
      46: aload         4
      48: aload_0
      49: getfield      #5                  // Field _currentSize:I
      52: iload_3
      53: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: aload_0
      57: dup
      58: getfield      #5                  // Field _currentSize:I
      61: iload_3
      62: iadd
      63: putfield      #5                  // Field _currentSize:I
      66: return
      67: aload_0
      68: iload_3
      69: invokespecial #59                 // Method validateAppend:(I)V
      72: iload         5
      74: ifle          100
      77: aload_1
      78: iload_2
      79: aload         4
      81: aload_0
      82: getfield      #5                  // Field _currentSize:I
      85: iload         5
      87: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      90: iload_2
      91: iload         5
      93: iadd
      94: istore_2
      95: iload_3
      96: iload         5
      98: isub
      99: istore_3
     100: aload_0
     101: invokespecial #60                 // Method expand:()V
     104: aload_0
     105: getfield      #4                  // Field _currentSegment:[C
     108: arraylength
     109: iload_3
     110: invokestatic  #62                 // Method java/lang/Math.min:(II)I
     113: istore        6
     115: aload_1
     116: iload_2
     117: aload_0
     118: getfield      #4                  // Field _currentSegment:[C
     121: iconst_0
     122: iload         6
     124: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     127: aload_0
     128: dup
     129: getfield      #5                  // Field _currentSize:I
     132: iload         6
     134: iadd
     135: putfield      #5                  // Field _currentSize:I
     138: iload_2
     139: iload         6
     141: iadd
     142: istore_2
     143: iload_3
     144: iload         6
     146: isub
     147: istore_3
     148: iload_3
     149: ifgt          100
     152: return

  public void append(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          12
       7: aload_0
       8: iload_3
       9: invokespecial #58                 // Method unshare:(I)V
      12: aload_0
      13: aconst_null
      14: putfield      #16                 // Field _resultString:Ljava/lang/String;
      17: aload_0
      18: aconst_null
      19: putfield      #11                 // Field _resultArray:[C
      22: aload_0
      23: getfield      #4                  // Field _currentSegment:[C
      26: astore        4
      28: aload         4
      30: arraylength
      31: aload_0
      32: getfield      #5                  // Field _currentSize:I
      35: isub
      36: istore        5
      38: iload         5
      40: iload_3
      41: if_icmplt     69
      44: aload_1
      45: iload_2
      46: iload_2
      47: iload_3
      48: iadd
      49: aload         4
      51: aload_0
      52: getfield      #5                  // Field _currentSize:I
      55: invokevirtual #63                 // Method java/lang/String.getChars:(II[CI)V
      58: aload_0
      59: dup
      60: getfield      #5                  // Field _currentSize:I
      63: iload_3
      64: iadd
      65: putfield      #5                  // Field _currentSize:I
      68: return
      69: aload_0
      70: iload_3
      71: invokespecial #59                 // Method validateAppend:(I)V
      74: iload         5
      76: ifle          104
      79: aload_1
      80: iload_2
      81: iload_2
      82: iload         5
      84: iadd
      85: aload         4
      87: aload_0
      88: getfield      #5                  // Field _currentSize:I
      91: invokevirtual #63                 // Method java/lang/String.getChars:(II[CI)V
      94: iload_3
      95: iload         5
      97: isub
      98: istore_3
      99: iload_2
     100: iload         5
     102: iadd
     103: istore_2
     104: aload_0
     105: invokespecial #60                 // Method expand:()V
     108: aload_0
     109: getfield      #4                  // Field _currentSegment:[C
     112: arraylength
     113: iload_3
     114: invokestatic  #62                 // Method java/lang/Math.min:(II)I
     117: istore        6
     119: aload_1
     120: iload_2
     121: iload_2
     122: iload         6
     124: iadd
     125: aload_0
     126: getfield      #4                  // Field _currentSegment:[C
     129: iconst_0
     130: invokevirtual #63                 // Method java/lang/String.getChars:(II[CI)V
     133: aload_0
     134: dup
     135: getfield      #5                  // Field _currentSize:I
     138: iload         6
     140: iadd
     141: putfield      #5                  // Field _currentSize:I
     144: iload_2
     145: iload         6
     147: iadd
     148: istore_2
     149: iload_3
     150: iload         6
     152: isub
     153: istore_3
     154: iload_3
     155: ifgt          104
     158: return

  private void validateAppend(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field _segmentSize:I
       4: aload_0
       5: getfield      #5                  // Field _currentSize:I
       8: iadd
       9: iload_1
      10: iadd
      11: istore_2
      12: iload_2
      13: ifge          19
      16: ldc           #65                 // int 2147483647
      18: istore_2
      19: aload_0
      20: iload_2
      21: invokevirtual #22                 // Method validateStringLength:(I)V
      24: return

  public char[] getCurrentSegment();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputStart:I
       4: iflt          15
       7: aload_0
       8: iconst_1
       9: invokespecial #58                 // Method unshare:(I)V
      12: goto          49
      15: aload_0
      16: getfield      #4                  // Field _currentSegment:[C
      19: astore_1
      20: aload_1
      21: ifnonnull     36
      24: aload_0
      25: aload_0
      26: iconst_0
      27: invokespecial #17                 // Method buf:(I)[C
      30: putfield      #4                  // Field _currentSegment:[C
      33: goto          49
      36: aload_0
      37: getfield      #5                  // Field _currentSize:I
      40: aload_1
      41: arraylength
      42: if_icmplt     49
      45: aload_0
      46: invokespecial #60                 // Method expand:()V
      49: aload_0
      50: getfield      #4                  // Field _currentSegment:[C
      53: areturn

  public char[] emptyAndGetCurrentSegment();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #6                  // Field _inputStart:I
       5: aload_0
       6: iconst_0
       7: putfield      #5                  // Field _currentSize:I
      10: aload_0
      11: iconst_0
      12: putfield      #9                  // Field _inputLen:I
      15: aload_0
      16: aconst_null
      17: putfield      #10                 // Field _inputBuffer:[C
      20: aload_0
      21: aconst_null
      22: putfield      #16                 // Field _resultString:Ljava/lang/String;
      25: aload_0
      26: aconst_null
      27: putfield      #11                 // Field _resultArray:[C
      30: aload_0
      31: getfield      #12                 // Field _hasSegments:Z
      34: ifeq          41
      37: aload_0
      38: invokespecial #13                 // Method clearSegments:()V
      41: aload_0
      42: getfield      #4                  // Field _currentSegment:[C
      45: astore_1
      46: aload_1
      47: ifnonnull     61
      50: aload_0
      51: aload_0
      52: iconst_0
      53: invokespecial #17                 // Method buf:(I)[C
      56: dup
      57: astore_1
      58: putfield      #4                  // Field _currentSegment:[C
      61: aload_1
      62: areturn

  public int getCurrentSegmentSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _currentSize:I
       4: ireturn

  public void setCurrentLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field _currentSize:I
       5: return

  public java.lang.String setCurrentAndReturn(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field _currentSize:I
       5: aload_0
       6: getfield      #18                 // Field _segmentSize:I
       9: ifle          17
      12: aload_0
      13: invokevirtual #43                 // Method contentsAsString:()Ljava/lang/String;
      16: areturn
      17: aload_0
      18: getfield      #5                  // Field _currentSize:I
      21: istore_2
      22: aload_0
      23: iload_2
      24: invokevirtual #22                 // Method validateStringLength:(I)V
      27: iload_2
      28: ifne          36
      31: ldc           #32                 // String
      33: goto          49
      36: new           #30                 // class java/lang/String
      39: dup
      40: aload_0
      41: getfield      #4                  // Field _currentSegment:[C
      44: iconst_0
      45: iload_2
      46: invokespecial #33                 // Method java/lang/String."<init>":([CII)V
      49: astore_3
      50: aload_0
      51: aload_3
      52: putfield      #16                 // Field _resultString:Ljava/lang/String;
      55: aload_3
      56: areturn

  public char[] finishCurrentSegment() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
       4: ifnonnull     18
       7: aload_0
       8: new           #66                 // class java/util/ArrayList
      11: dup
      12: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #25                 // Field _segments:Ljava/util/ArrayList;
      18: aload_0
      19: iconst_1
      20: putfield      #12                 // Field _hasSegments:Z
      23: aload_0
      24: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
      27: aload_0
      28: getfield      #4                  // Field _currentSegment:[C
      31: invokevirtual #68                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: getfield      #4                  // Field _currentSegment:[C
      39: arraylength
      40: istore_1
      41: aload_0
      42: dup
      43: getfield      #18                 // Field _segmentSize:I
      46: iload_1
      47: iadd
      48: putfield      #18                 // Field _segmentSize:I
      51: aload_0
      52: getfield      #18                 // Field _segmentSize:I
      55: ifge          69
      58: aload_0
      59: aload_0
      60: getfield      #18                 // Field _segmentSize:I
      63: iload_1
      64: isub
      65: iload_1
      66: invokevirtual #34                 // Method _reportBufferOverflow:(II)V
      69: aload_0
      70: iconst_0
      71: putfield      #5                  // Field _currentSize:I
      74: aload_0
      75: aload_0
      76: getfield      #18                 // Field _segmentSize:I
      79: invokevirtual #22                 // Method validateStringLength:(I)V
      82: iload_1
      83: iload_1
      84: iconst_1
      85: ishr
      86: iadd
      87: istore_2
      88: iload_2
      89: sipush        500
      92: if_icmpge     102
      95: sipush        500
      98: istore_2
      99: goto          111
     102: iload_2
     103: ldc           #69                 // int 65536
     105: if_icmple     111
     108: ldc           #69                 // int 65536
     110: istore_2
     111: aload_0
     112: iload_2
     113: invokespecial #70                 // Method carr:(I)[C
     116: astore_3
     117: aload_0
     118: aload_3
     119: putfield      #4                  // Field _currentSegment:[C
     122: aload_3
     123: areturn

  public java.lang.String finishAndReturn(int, boolean) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifeq          29
       4: iload_1
       5: iconst_1
       6: isub
       7: istore_3
       8: iload_3
       9: iflt          23
      12: aload_0
      13: getfield      #4                  // Field _currentSegment:[C
      16: iload_3
      17: caload
      18: bipush        32
      20: if_icmpgt     29
      23: aload_0
      24: iload_3
      25: invokespecial #71                 // Method _doTrim:(I)Ljava/lang/String;
      28: areturn
      29: aload_0
      30: iload_1
      31: putfield      #5                  // Field _currentSize:I
      34: aload_0
      35: invokevirtual #43                 // Method contentsAsString:()Ljava/lang/String;
      38: areturn

  private java.lang.String _doTrim(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _currentSegment:[C
       4: astore_2
       5: iinc          1, -1
       8: iload_1
       9: iflt          32
      12: aload_2
      13: iload_1
      14: caload
      15: bipush        32
      17: if_icmple     5
      20: aload_0
      21: iload_1
      22: iconst_1
      23: iadd
      24: putfield      #5                  // Field _currentSize:I
      27: aload_0
      28: invokevirtual #43                 // Method contentsAsString:()Ljava/lang/String;
      31: areturn
      32: aload_0
      33: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
      36: ifnull        84
      39: aload_0
      40: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
      43: invokevirtual #72                 // Method java/util/ArrayList.isEmpty:()Z
      46: ifeq          52
      49: goto          84
      52: aload_0
      53: aload_0
      54: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
      57: aload_0
      58: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
      61: invokevirtual #37                 // Method java/util/ArrayList.size:()I
      64: iconst_1
      65: isub
      66: invokevirtual #73                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      69: checkcast     #39                 // class "[C"
      72: putfield      #4                  // Field _currentSegment:[C
      75: aload_0
      76: getfield      #4                  // Field _currentSegment:[C
      79: arraylength
      80: istore_1
      81: goto          0
      84: aload_0
      85: iconst_0
      86: putfield      #5                  // Field _currentSize:I
      89: aload_0
      90: iconst_0
      91: putfield      #12                 // Field _hasSegments:Z
      94: aload_0
      95: invokevirtual #43                 // Method contentsAsString:()Ljava/lang/String;
      98: areturn

  public char[] expandCurrentSegment();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _currentSegment:[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iload_2
       9: iload_2
      10: iconst_1
      11: ishr
      12: iadd
      13: istore_3
      14: iload_3
      15: ldc           #69                 // int 65536
      17: if_icmple     26
      20: iload_2
      21: iload_2
      22: iconst_2
      23: ishr
      24: iadd
      25: istore_3
      26: aload_0
      27: aload_1
      28: iload_3
      29: invokestatic  #74                 // Method java/util/Arrays.copyOf:([CI)[C
      32: dup_x1
      33: putfield      #4                  // Field _currentSegment:[C
      36: areturn

  public char[] expandCurrentSegment(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _currentSegment:[C
       4: astore_2
       5: aload_2
       6: arraylength
       7: iload_1
       8: if_icmplt     13
      11: aload_2
      12: areturn
      13: aload_0
      14: aload_2
      15: iload_1
      16: invokestatic  #74                 // Method java/util/Arrays.copyOf:([CI)[C
      19: dup
      20: astore_2
      21: putfield      #4                  // Field _currentSegment:[C
      24: aload_2
      25: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method contentsAsString:()Ljava/lang/String;
       4: areturn
       5: astore_1
       6: ldc           #75                 // String TextBuffer: Exception when reading contents
       8: areturn
    Exception table:
       from    to  target type
           0     4     5   Class java/io/IOException

  private void unshare(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field _inputLen:I
       4: istore_2
       5: aload_0
       6: iconst_0
       7: putfield      #9                  // Field _inputLen:I
      10: aload_0
      11: getfield      #10                 // Field _inputBuffer:[C
      14: astore_3
      15: aload_0
      16: aconst_null
      17: putfield      #10                 // Field _inputBuffer:[C
      20: aload_0
      21: getfield      #6                  // Field _inputStart:I
      24: istore        4
      26: aload_0
      27: iconst_m1
      28: putfield      #6                  // Field _inputStart:I
      31: iload_2
      32: iload_1
      33: iadd
      34: istore        5
      36: aload_0
      37: getfield      #4                  // Field _currentSegment:[C
      40: ifnull        53
      43: iload         5
      45: aload_0
      46: getfield      #4                  // Field _currentSegment:[C
      49: arraylength
      50: if_icmple     63
      53: aload_0
      54: aload_0
      55: iload         5
      57: invokespecial #17                 // Method buf:(I)[C
      60: putfield      #4                  // Field _currentSegment:[C
      63: iload_2
      64: ifle          79
      67: aload_3
      68: iload         4
      70: aload_0
      71: getfield      #4                  // Field _currentSegment:[C
      74: iconst_0
      75: iload_2
      76: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      79: aload_0
      80: iconst_0
      81: putfield      #18                 // Field _segmentSize:I
      84: aload_0
      85: iload_2
      86: putfield      #5                  // Field _currentSize:I
      89: return

  private void expand();
    Code:
       0: aload_0
       1: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
       4: ifnonnull     18
       7: aload_0
       8: new           #66                 // class java/util/ArrayList
      11: dup
      12: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #25                 // Field _segments:Ljava/util/ArrayList;
      18: aload_0
      19: getfield      #4                  // Field _currentSegment:[C
      22: astore_1
      23: aload_0
      24: iconst_1
      25: putfield      #12                 // Field _hasSegments:Z
      28: aload_0
      29: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
      32: aload_1
      33: invokevirtual #68                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      36: pop
      37: aload_0
      38: dup
      39: getfield      #18                 // Field _segmentSize:I
      42: aload_1
      43: arraylength
      44: iadd
      45: putfield      #18                 // Field _segmentSize:I
      48: aload_0
      49: getfield      #18                 // Field _segmentSize:I
      52: ifge          68
      55: aload_0
      56: aload_0
      57: getfield      #18                 // Field _segmentSize:I
      60: aload_1
      61: arraylength
      62: isub
      63: aload_1
      64: arraylength
      65: invokevirtual #34                 // Method _reportBufferOverflow:(II)V
      68: aload_0
      69: iconst_0
      70: putfield      #5                  // Field _currentSize:I
      73: aload_1
      74: arraylength
      75: istore_2
      76: iload_2
      77: iload_2
      78: iconst_1
      79: ishr
      80: iadd
      81: istore_3
      82: iload_3
      83: sipush        500
      86: if_icmpge     96
      89: sipush        500
      92: istore_3
      93: goto          105
      96: iload_3
      97: ldc           #69                 // int 65536
      99: if_icmple     105
     102: ldc           #69                 // int 65536
     104: istore_3
     105: aload_0
     106: aload_0
     107: iload_3
     108: invokespecial #70                 // Method carr:(I)[C
     111: putfield      #4                  // Field _currentSegment:[C
     114: return

  private char[] resultArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field _resultString:Ljava/lang/String;
       4: ifnull        15
       7: aload_0
       8: getfield      #16                 // Field _resultString:Ljava/lang/String;
      11: invokevirtual #27                 // Method java/lang/String.toCharArray:()[C
      14: areturn
      15: aload_0
      16: getfield      #6                  // Field _inputStart:I
      19: iflt          71
      22: aload_0
      23: getfield      #9                  // Field _inputLen:I
      26: istore_1
      27: iload_1
      28: iconst_1
      29: if_icmpge     36
      32: getstatic     #28                 // Field NO_CHARS:[C
      35: areturn
      36: aload_0
      37: iload_1
      38: invokevirtual #22                 // Method validateStringLength:(I)V
      41: aload_0
      42: getfield      #6                  // Field _inputStart:I
      45: istore_2
      46: iload_2
      47: ifne          59
      50: aload_0
      51: getfield      #10                 // Field _inputBuffer:[C
      54: iload_1
      55: invokestatic  #74                 // Method java/util/Arrays.copyOf:([CI)[C
      58: areturn
      59: aload_0
      60: getfield      #10                 // Field _inputBuffer:[C
      63: iload_2
      64: iload_2
      65: iload_1
      66: iadd
      67: invokestatic  #76                 // Method java/util/Arrays.copyOfRange:([CII)[C
      70: areturn
      71: aload_0
      72: invokevirtual #77                 // Method size:()I
      75: istore_1
      76: iload_1
      77: iconst_1
      78: if_icmpge     101
      81: iload_1
      82: ifge          97
      85: aload_0
      86: aload_0
      87: getfield      #18                 // Field _segmentSize:I
      90: aload_0
      91: getfield      #5                  // Field _currentSize:I
      94: invokevirtual #34                 // Method _reportBufferOverflow:(II)V
      97: getstatic     #28                 // Field NO_CHARS:[C
     100: areturn
     101: aload_0
     102: iload_1
     103: invokevirtual #22                 // Method validateStringLength:(I)V
     106: iconst_0
     107: istore_2
     108: aload_0
     109: iload_1
     110: invokespecial #70                 // Method carr:(I)[C
     113: astore_3
     114: aload_0
     115: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
     118: ifnull        180
     121: iconst_0
     122: istore        4
     124: aload_0
     125: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
     128: invokevirtual #37                 // Method java/util/ArrayList.size:()I
     131: istore        5
     133: iload         4
     135: iload         5
     137: if_icmpge     180
     140: aload_0
     141: getfield      #25                 // Field _segments:Ljava/util/ArrayList;
     144: iload         4
     146: invokevirtual #38                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     149: checkcast     #39                 // class "[C"
     152: astore        6
     154: aload         6
     156: arraylength
     157: istore        7
     159: aload         6
     161: iconst_0
     162: aload_3
     163: iload_2
     164: iload         7
     166: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     169: iload_2
     170: iload         7
     172: iadd
     173: istore_2
     174: iinc          4, 1
     177: goto          133
     180: aload_0
     181: getfield      #4                  // Field _currentSegment:[C
     184: iconst_0
     185: aload_3
     186: iload_2
     187: aload_0
     188: getfield      #5                  // Field _currentSize:I
     191: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     194: aload_3
     195: areturn

  private char[] carr(int);
    Code:
       0: iload_1
       1: newarray       char
       3: areturn

  protected void _reportBufferOverflow(int, int);
    Code:
       0: iload_1
       1: i2l
       2: iload_2
       3: i2l
       4: ladd
       5: lstore_3
       6: new           #78                 // class java/lang/IllegalStateException
       9: dup
      10: new           #35                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #80                 // String TextBuffer overrun: size reached (
      19: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_3
      23: invokevirtual #82                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #83                 // String ) exceeds maximum of
      28: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #65                 // int 2147483647
      33: invokevirtual #84                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow

  protected void validateStringLength(int) throws java.io.IOException;
    Code:
       0: return

  static {};
    Code:
       0: iconst_0
       1: newarray       char
       3: putstatic     #28                 // Field NO_CHARS:[C
       6: return
}
