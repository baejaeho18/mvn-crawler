Compiled from "TokenStreamFactory.java"
public abstract class com.fasterxml.jackson.core.TokenStreamFactory implements com.fasterxml.jackson.core.Versioned,java.io.Serializable {
  private static final long serialVersionUID;

  public com.fasterxml.jackson.core.TokenStreamFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract boolean requiresPropertyOrdering();

  public abstract boolean canHandleBinaryNatively();

  public abstract boolean canParseAsync();

  public abstract java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature> getFormatReadFeatureType();

  public abstract java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature> getFormatWriteFeatureType();

  public abstract boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema);

  public abstract java.lang.String getFormatName();

  public abstract boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature);

  public abstract boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature);

  public abstract int getParserFeatures();

  public abstract int getGeneratorFeatures();

  public abstract int getFormatParserFeatures();

  public abstract int getFormatGeneratorFeatures();

  public abstract com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints();

  public abstract com.fasterxml.jackson.core.JsonParser createParser(byte[]) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createParser(byte[], int, int) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createParser(char[]) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createParser(char[], int, int) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.io.File) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser createNonBlockingByteBufferParser() throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) throws java.io.IOException;

  protected java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput);
    Code:
       0: new           #2                  // class com/fasterxml/jackson/core/io/DataOutputAsStream
       3: dup
       4: aload_1
       5: invokespecial #3                  // Method com/fasterxml/jackson/core/io/DataOutputAsStream."<init>":(Ljava/io/DataOutput;)V
       8: areturn

  protected java.io.InputStream _optimizedStreamFromURL(java.net.URL) throws java.io.IOException;
    Code:
       0: ldc           #4                  // String file
       2: aload_1
       3: invokevirtual #5                  // Method java/net/URL.getProtocol:()Ljava/lang/String;
       6: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          54
      12: aload_1
      13: invokevirtual #7                  // Method java/net/URL.getHost:()Ljava/lang/String;
      16: astore_2
      17: aload_2
      18: ifnull        28
      21: aload_2
      22: invokevirtual #8                  // Method java/lang/String.length:()I
      25: ifne          54
      28: aload_1
      29: invokevirtual #9                  // Method java/net/URL.getPath:()Ljava/lang/String;
      32: astore_3
      33: aload_3
      34: bipush        37
      36: invokevirtual #10                 // Method java/lang/String.indexOf:(I)I
      39: ifge          54
      42: new           #11                 // class java/io/FileInputStream
      45: dup
      46: aload_1
      47: invokevirtual #9                  // Method java/net/URL.getPath:()Ljava/lang/String;
      50: invokespecial #12                 // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
      53: areturn
      54: aload_1
      55: invokevirtual #13                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      58: areturn

  protected java.io.InputStream _fileInputStream(java.io.File) throws java.io.IOException;
    Code:
       0: new           #11                 // class java/io/FileInputStream
       3: dup
       4: aload_1
       5: invokespecial #14                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       8: areturn

  protected java.io.OutputStream _fileOutputStream(java.io.File) throws java.io.IOException;
    Code:
       0: new           #15                 // class java/io/FileOutputStream
       3: dup
       4: aload_1
       5: invokespecial #16                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
       8: areturn

  protected void _checkRangeBoundsForByteArray(byte[], int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: ldc           #17                 // String Invalid `byte[]` argument: `null`
       7: invokevirtual #18                 // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_1
      12: arraylength
      13: istore        4
      15: iload_2
      16: iload_3
      17: iadd
      18: istore        5
      20: iload_2
      21: iload_3
      22: ior
      23: iload         5
      25: ior
      26: iload         4
      28: iload         5
      30: isub
      31: ior
      32: istore        6
      34: iload         6
      36: ifge          75
      39: aload_0
      40: ldc           #19                 // String Invalid \'offset\' (%d) and/or \'len\' (%d) arguments for `byte[]` of length %d
      42: iconst_3
      43: anewarray     #20                 // class java/lang/Object
      46: dup
      47: iconst_0
      48: iload_2
      49: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aastore
      53: dup
      54: iconst_1
      55: iload_3
      56: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aastore
      60: dup
      61: iconst_2
      62: iload         4
      64: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: aastore
      68: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      71: invokevirtual #18                 // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;
      74: pop
      75: return

  protected void _checkRangeBoundsForCharArray(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: ldc           #23                 // String Invalid `char[]` argument: `null`
       7: invokevirtual #18                 // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_1
      12: arraylength
      13: istore        4
      15: iload_2
      16: iload_3
      17: iadd
      18: istore        5
      20: iload_2
      21: iload_3
      22: ior
      23: iload         5
      25: ior
      26: iload         4
      28: iload         5
      30: isub
      31: ior
      32: istore        6
      34: iload         6
      36: ifge          75
      39: aload_0
      40: ldc           #24                 // String Invalid \'offset\' (%d) and/or \'len\' (%d) arguments for `char[]` of length %d
      42: iconst_3
      43: anewarray     #20                 // class java/lang/Object
      46: dup
      47: iconst_0
      48: iload_2
      49: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aastore
      53: dup
      54: iconst_1
      55: iload_3
      56: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aastore
      60: dup
      61: iconst_2
      62: iload         4
      64: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: aastore
      68: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      71: invokevirtual #18                 // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;
      74: pop
      75: return

  protected <T> T _reportRangeError(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: new           #25                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_1
       5: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       8: athrow
}
