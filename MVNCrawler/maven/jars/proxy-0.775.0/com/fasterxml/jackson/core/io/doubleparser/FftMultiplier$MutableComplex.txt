Compiled from "FftMultiplier.java"
final class com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex {
  double real;

  double imag;

  com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: return

  void add(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: getfield      #24                 // Field real:D
       9: dadd
      10: putfield      #24                 // Field real:D
      13: aload_0
      14: dup
      15: getfield      #26                 // Field imag:D
      18: aload_1
      19: getfield      #26                 // Field imag:D
      22: dadd
      23: putfield      #26                 // Field imag:D
      26: return

  void add(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: iload_2
       7: invokevirtual #31                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.real:(I)D
      10: dadd
      11: putfield      #24                 // Field real:D
      14: aload_0
      15: dup
      16: getfield      #26                 // Field imag:D
      19: aload_1
      20: iload_2
      21: invokevirtual #33                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.imag:(I)D
      24: dadd
      25: putfield      #26                 // Field imag:D
      28: return

  void addInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex, com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: getfield      #24                 // Field real:D
       9: dadd
      10: putfield      #24                 // Field real:D
      13: aload_2
      14: aload_0
      15: getfield      #26                 // Field imag:D
      18: aload_1
      19: getfield      #26                 // Field imag:D
      22: dadd
      23: putfield      #26                 // Field imag:D
      26: return

  void addTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: getfield      #26                 // Field imag:D
       9: dsub
      10: putfield      #24                 // Field real:D
      13: aload_0
      14: dup
      15: getfield      #26                 // Field imag:D
      18: aload_1
      19: getfield      #24                 // Field real:D
      22: dadd
      23: putfield      #26                 // Field imag:D
      26: return

  void addTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: iload_2
       7: invokevirtual #33                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.imag:(I)D
      10: dsub
      11: putfield      #24                 // Field real:D
      14: aload_0
      15: dup
      16: getfield      #26                 // Field imag:D
      19: aload_1
      20: iload_2
      21: invokevirtual #31                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.real:(I)D
      24: dadd
      25: putfield      #26                 // Field imag:D
      28: return

  void addTimesIInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex, com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: getfield      #26                 // Field imag:D
       9: dsub
      10: putfield      #24                 // Field real:D
      13: aload_2
      14: aload_0
      15: getfield      #26                 // Field imag:D
      18: aload_1
      19: getfield      #24                 // Field real:D
      22: dadd
      23: putfield      #26                 // Field imag:D
      26: return

  void copyInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector, int);
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: getfield      #24                 // Field real:D
       6: invokevirtual #45                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.real:(ID)V
       9: aload_1
      10: iload_2
      11: aload_0
      12: getfield      #26                 // Field imag:D
      15: invokevirtual #47                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.imag:(ID)V
      18: return

  void multiply(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_0
       1: getfield      #24                 // Field real:D
       4: dstore_2
       5: aload_0
       6: dload_2
       7: aload_1
       8: getfield      #24                 // Field real:D
      11: aload_0
      12: getfield      #26                 // Field imag:D
      15: dneg
      16: aload_1
      17: getfield      #26                 // Field imag:D
      20: dmul
      21: invokestatic  #54                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.fma:(DDD)D
      24: putfield      #24                 // Field real:D
      27: aload_0
      28: dload_2
      29: aload_1
      30: getfield      #26                 // Field imag:D
      33: aload_0
      34: getfield      #26                 // Field imag:D
      37: aload_1
      38: getfield      #24                 // Field real:D
      41: dmul
      42: invokestatic  #54                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.fma:(DDD)D
      45: putfield      #26                 // Field imag:D
      48: return

  void multiplyConjugate(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_0
       1: getfield      #24                 // Field real:D
       4: dstore_2
       5: aload_0
       6: dload_2
       7: aload_1
       8: getfield      #24                 // Field real:D
      11: aload_0
      12: getfield      #26                 // Field imag:D
      15: aload_1
      16: getfield      #26                 // Field imag:D
      19: dmul
      20: invokestatic  #54                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.fma:(DDD)D
      23: putfield      #24                 // Field real:D
      26: aload_0
      27: dload_2
      28: dneg
      29: aload_1
      30: getfield      #26                 // Field imag:D
      33: aload_0
      34: getfield      #26                 // Field imag:D
      37: aload_1
      38: getfield      #24                 // Field real:D
      41: dmul
      42: invokestatic  #54                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.fma:(DDD)D
      45: putfield      #26                 // Field imag:D
      48: return

  void set(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #31                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.real:(I)D
       6: putfield      #24                 // Field real:D
       9: aload_0
      10: aload_1
      11: iload_2
      12: invokevirtual #33                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.imag:(I)D
      15: putfield      #26                 // Field imag:D
      18: return

  void squareInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #24                 // Field real:D
       5: aload_0
       6: getfield      #24                 // Field real:D
       9: aload_0
      10: getfield      #26                 // Field imag:D
      13: dneg
      14: aload_0
      15: getfield      #26                 // Field imag:D
      18: dmul
      19: invokestatic  #54                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.fma:(DDD)D
      22: putfield      #24                 // Field real:D
      25: aload_1
      26: ldc2_w        #59                 // double 2.0d
      29: aload_0
      30: getfield      #24                 // Field real:D
      33: dmul
      34: aload_0
      35: getfield      #26                 // Field imag:D
      38: dmul
      39: putfield      #26                 // Field imag:D
      42: return

  void subtract(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: getfield      #24                 // Field real:D
       9: dsub
      10: putfield      #24                 // Field real:D
      13: aload_0
      14: dup
      15: getfield      #26                 // Field imag:D
      18: aload_1
      19: getfield      #26                 // Field imag:D
      22: dsub
      23: putfield      #26                 // Field imag:D
      26: return

  void subtract(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: iload_2
       7: invokevirtual #31                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.real:(I)D
      10: dsub
      11: putfield      #24                 // Field real:D
      14: aload_0
      15: dup
      16: getfield      #26                 // Field imag:D
      19: aload_1
      20: iload_2
      21: invokevirtual #33                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.imag:(I)D
      24: dsub
      25: putfield      #26                 // Field imag:D
      28: return

  void subtractInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex, com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: getfield      #24                 // Field real:D
       9: dsub
      10: putfield      #24                 // Field real:D
      13: aload_2
      14: aload_0
      15: getfield      #26                 // Field imag:D
      18: aload_1
      19: getfield      #26                 // Field imag:D
      22: dsub
      23: putfield      #26                 // Field imag:D
      26: return

  void subtractInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex, com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector, int);
    Code:
       0: aload_2
       1: iload_3
       2: aload_0
       3: getfield      #24                 // Field real:D
       6: aload_1
       7: getfield      #24                 // Field real:D
      10: dsub
      11: invokevirtual #45                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.real:(ID)V
      14: aload_2
      15: iload_3
      16: aload_0
      17: getfield      #26                 // Field imag:D
      20: aload_1
      21: getfield      #26                 // Field imag:D
      24: dsub
      25: invokevirtual #47                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.imag:(ID)V
      28: return

  void subtractTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: getfield      #26                 // Field imag:D
       9: dadd
      10: putfield      #24                 // Field real:D
      13: aload_0
      14: dup
      15: getfield      #26                 // Field imag:D
      18: aload_1
      19: getfield      #24                 // Field real:D
      22: dsub
      23: putfield      #26                 // Field imag:D
      26: return

  void subtractTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: iload_2
       7: invokevirtual #33                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.imag:(I)D
      10: dadd
      11: putfield      #24                 // Field real:D
      14: aload_0
      15: dup
      16: getfield      #26                 // Field imag:D
      19: aload_1
      20: iload_2
      21: invokevirtual #31                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier$ComplexVector.real:(I)D
      24: dsub
      25: putfield      #26                 // Field imag:D
      28: return

  void subtractTimesIInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex, com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #24                 // Field real:D
       5: aload_1
       6: getfield      #26                 // Field imag:D
       9: dadd
      10: putfield      #24                 // Field real:D
      13: aload_2
      14: aload_0
      15: getfield      #26                 // Field imag:D
      18: aload_1
      19: getfield      #24                 // Field real:D
      22: dsub
      23: putfield      #26                 // Field imag:D
      26: return
}
