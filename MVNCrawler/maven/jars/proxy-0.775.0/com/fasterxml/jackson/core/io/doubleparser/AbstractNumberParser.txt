Compiled from "AbstractNumberParser.java"
abstract class com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser {
  public static final java.lang.String ILLEGAL_OFFSET_OR_ILLEGAL_LENGTH;

  public static final java.lang.String SYNTAX_ERROR;

  public static final java.lang.String VALUE_EXCEEDS_LIMITS;

  static final byte DECIMAL_POINT_CLASS;

  static final byte OTHER_CLASS;

  static final byte[] CHAR_TO_HEX_MAP;

  com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: return

  protected static byte charAt(byte[], int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpge     11
       5: aload_0
       6: iload_1
       7: baload
       8: goto          12
      11: iconst_0
      12: ireturn

  protected static char charAt(char[], int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpge     11
       5: aload_0
       6: iload_1
       7: caload
       8: goto          12
      11: iconst_0
      12: ireturn

  protected static char charAt(java.lang.CharSequence, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpge     15
       5: aload_0
       6: iload_1
       7: invokeinterface #42,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      12: goto          16
      15: iconst_0
      16: ireturn

  protected static int lookupHex(byte);
    Code:
       0: getstatic     #47                 // Field CHAR_TO_HEX_MAP:[B
       3: iload_0
       4: sipush        255
       7: iand
       8: baload
       9: ireturn

  protected static int lookupHex(char);
    Code:
       0: iload_0
       1: sipush        128
       4: if_icmpge     15
       7: getstatic     #47                 // Field CHAR_TO_HEX_MAP:[B
      10: iload_0
      11: baload
      12: goto          16
      15: iconst_m1
      16: ireturn

  static {};
    Code:
       0: sipush        256
       3: newarray       byte
       5: putstatic     #47                 // Field CHAR_TO_HEX_MAP:[B
       8: getstatic     #47                 // Field CHAR_TO_HEX_MAP:[B
      11: iconst_m1
      12: invokestatic  #57                 // Method java/util/Arrays.fill:([BB)V
      15: bipush        48
      17: istore_0
      18: iload_0
      19: bipush        57
      21: if_icmpgt     42
      24: getstatic     #47                 // Field CHAR_TO_HEX_MAP:[B
      27: iload_0
      28: iload_0
      29: bipush        48
      31: isub
      32: i2b
      33: bastore
      34: iload_0
      35: iconst_1
      36: iadd
      37: i2c
      38: istore_0
      39: goto          18
      42: bipush        65
      44: istore_0
      45: iload_0
      46: bipush        70
      48: if_icmpgt     72
      51: getstatic     #47                 // Field CHAR_TO_HEX_MAP:[B
      54: iload_0
      55: iload_0
      56: bipush        65
      58: isub
      59: bipush        10
      61: iadd
      62: i2b
      63: bastore
      64: iload_0
      65: iconst_1
      66: iadd
      67: i2c
      68: istore_0
      69: goto          45
      72: bipush        97
      74: istore_0
      75: iload_0
      76: bipush        102
      78: if_icmpgt     102
      81: getstatic     #47                 // Field CHAR_TO_HEX_MAP:[B
      84: iload_0
      85: iload_0
      86: bipush        97
      88: isub
      89: bipush        10
      91: iadd
      92: i2b
      93: bastore
      94: iload_0
      95: iconst_1
      96: iadd
      97: i2c
      98: istore_0
      99: goto          75
     102: bipush        46
     104: istore_0
     105: iload_0
     106: bipush        46
     108: if_icmpgt     126
     111: getstatic     #47                 // Field CHAR_TO_HEX_MAP:[B
     114: iload_0
     115: bipush        -4
     117: bastore
     118: iload_0
     119: iconst_1
     120: iadd
     121: i2c
     122: istore_0
     123: goto          105
     126: return
}
