Compiled from "NumberOutput.java"
public final class com.fasterxml.jackson.core.io.NumberOutput {
  private static int MILLION;

  private static int BILLION;

  private static long BILLION_L;

  private static long MIN_INT_AS_LONG;

  private static long MAX_INT_AS_LONG;

  static final java.lang.String SMALLEST_INT;

  static final java.lang.String SMALLEST_LONG;

  private static final int[] TRIPLET_TO_CHARS;

  private static final java.lang.String[] sSmallIntStrs;

  private static final java.lang.String[] sSmallIntStrs2;

  public com.fasterxml.jackson.core.io.NumberOutput();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int outputInt(int, char[], int);
    Code:
       0: iload_0
       1: ifge          27
       4: iload_0
       5: ldc           #3                  // int -2147483648
       7: if_icmpne     16
      10: aload_1
      11: iload_2
      12: invokestatic  #4                  // Method _outputSmallestI:([CI)I
      15: ireturn
      16: aload_1
      17: iload_2
      18: iinc          2, 1
      21: bipush        45
      23: castore
      24: iload_0
      25: ineg
      26: istore_0
      27: iload_0
      28: getstatic     #5                  // Field MILLION:I
      31: if_icmpge     96
      34: iload_0
      35: sipush        1000
      38: if_icmpge     66
      41: iload_0
      42: bipush        10
      44: if_icmpge     59
      47: aload_1
      48: iload_2
      49: bipush        48
      51: iload_0
      52: iadd
      53: i2c
      54: castore
      55: iload_2
      56: iconst_1
      57: iadd
      58: ireturn
      59: iload_0
      60: aload_1
      61: iload_2
      62: invokestatic  #6                  // Method _leading3:(I[CI)I
      65: ireturn
      66: iload_0
      67: sipush        1000
      70: idiv
      71: istore_3
      72: iload_0
      73: iload_3
      74: sipush        1000
      77: imul
      78: isub
      79: istore_0
      80: iload_3
      81: aload_1
      82: iload_2
      83: invokestatic  #6                  // Method _leading3:(I[CI)I
      86: istore_2
      87: iload_0
      88: aload_1
      89: iload_2
      90: invokestatic  #7                  // Method _full3:(I[CI)I
      93: istore_2
      94: iload_2
      95: ireturn
      96: iload_0
      97: getstatic     #8                  // Field BILLION:I
     100: if_icmplt     148
     103: iload_0
     104: getstatic     #8                  // Field BILLION:I
     107: isub
     108: istore_0
     109: iload_0
     110: getstatic     #8                  // Field BILLION:I
     113: if_icmplt     133
     116: iload_0
     117: getstatic     #8                  // Field BILLION:I
     120: isub
     121: istore_0
     122: aload_1
     123: iload_2
     124: iinc          2, 1
     127: bipush        50
     129: castore
     130: goto          141
     133: aload_1
     134: iload_2
     135: iinc          2, 1
     138: bipush        49
     140: castore
     141: iload_0
     142: aload_1
     143: iload_2
     144: invokestatic  #9                  // Method _outputFullBillion:(I[CI)I
     147: ireturn
     148: iload_0
     149: sipush        1000
     152: idiv
     153: istore_3
     154: iload_0
     155: iload_3
     156: sipush        1000
     159: imul
     160: isub
     161: istore        4
     163: iload_3
     164: istore_0
     165: iload_3
     166: sipush        1000
     169: idiv
     170: istore_3
     171: iload_0
     172: iload_3
     173: sipush        1000
     176: imul
     177: isub
     178: istore        5
     180: iload_3
     181: aload_1
     182: iload_2
     183: invokestatic  #6                  // Method _leading3:(I[CI)I
     186: istore_2
     187: iload         5
     189: aload_1
     190: iload_2
     191: invokestatic  #7                  // Method _full3:(I[CI)I
     194: istore_2
     195: iload         4
     197: aload_1
     198: iload_2
     199: invokestatic  #7                  // Method _full3:(I[CI)I
     202: ireturn

  public static int outputInt(int, byte[], int);
    Code:
       0: iload_0
       1: ifge          27
       4: iload_0
       5: ldc           #3                  // int -2147483648
       7: if_icmpne     16
      10: aload_1
      11: iload_2
      12: invokestatic  #10                 // Method _outputSmallestI:([BI)I
      15: ireturn
      16: aload_1
      17: iload_2
      18: iinc          2, 1
      21: bipush        45
      23: bastore
      24: iload_0
      25: ineg
      26: istore_0
      27: iload_0
      28: getstatic     #5                  // Field MILLION:I
      31: if_icmpge     101
      34: iload_0
      35: sipush        1000
      38: if_icmpge     71
      41: iload_0
      42: bipush        10
      44: if_icmpge     61
      47: aload_1
      48: iload_2
      49: iinc          2, 1
      52: bipush        48
      54: iload_0
      55: iadd
      56: i2b
      57: bastore
      58: goto          99
      61: iload_0
      62: aload_1
      63: iload_2
      64: invokestatic  #11                 // Method _leading3:(I[BI)I
      67: istore_2
      68: goto          99
      71: iload_0
      72: sipush        1000
      75: idiv
      76: istore_3
      77: iload_0
      78: iload_3
      79: sipush        1000
      82: imul
      83: isub
      84: istore_0
      85: iload_3
      86: aload_1
      87: iload_2
      88: invokestatic  #11                 // Method _leading3:(I[BI)I
      91: istore_2
      92: iload_0
      93: aload_1
      94: iload_2
      95: invokestatic  #12                 // Method _full3:(I[BI)I
      98: istore_2
      99: iload_2
     100: ireturn
     101: iload_0
     102: getstatic     #8                  // Field BILLION:I
     105: if_icmplt     153
     108: iload_0
     109: getstatic     #8                  // Field BILLION:I
     112: isub
     113: istore_0
     114: iload_0
     115: getstatic     #8                  // Field BILLION:I
     118: if_icmplt     138
     121: iload_0
     122: getstatic     #8                  // Field BILLION:I
     125: isub
     126: istore_0
     127: aload_1
     128: iload_2
     129: iinc          2, 1
     132: bipush        50
     134: bastore
     135: goto          146
     138: aload_1
     139: iload_2
     140: iinc          2, 1
     143: bipush        49
     145: bastore
     146: iload_0
     147: aload_1
     148: iload_2
     149: invokestatic  #13                 // Method _outputFullBillion:(I[BI)I
     152: ireturn
     153: iload_0
     154: sipush        1000
     157: idiv
     158: istore_3
     159: iload_0
     160: iload_3
     161: sipush        1000
     164: imul
     165: isub
     166: istore        4
     168: iload_3
     169: istore_0
     170: iload_3
     171: sipush        1000
     174: idiv
     175: istore_3
     176: iload_0
     177: iload_3
     178: sipush        1000
     181: imul
     182: isub
     183: istore        5
     185: iload_3
     186: aload_1
     187: iload_2
     188: invokestatic  #11                 // Method _leading3:(I[BI)I
     191: istore_2
     192: iload         5
     194: aload_1
     195: iload_2
     196: invokestatic  #12                 // Method _full3:(I[BI)I
     199: istore_2
     200: iload         4
     202: aload_1
     203: iload_2
     204: invokestatic  #12                 // Method _full3:(I[BI)I
     207: ireturn

  public static int outputLong(long, char[], int);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifge          50
       6: lload_0
       7: getstatic     #14                 // Field MIN_INT_AS_LONG:J
      10: lcmp
      11: ifle          22
      14: lload_0
      15: l2i
      16: aload_2
      17: iload_3
      18: invokestatic  #15                 // Method outputInt:(I[CI)I
      21: ireturn
      22: lload_0
      23: ldc2_w        #17                 // long -9223372036854775808l
      26: lcmp
      27: ifne          36
      30: aload_2
      31: iload_3
      32: invokestatic  #19                 // Method _outputSmallestL:([CI)I
      35: ireturn
      36: aload_2
      37: iload_3
      38: iinc          3, 1
      41: bipush        45
      43: castore
      44: lload_0
      45: lneg
      46: lstore_0
      47: goto          66
      50: lload_0
      51: getstatic     #20                 // Field MAX_INT_AS_LONG:J
      54: lcmp
      55: ifgt          66
      58: lload_0
      59: l2i
      60: aload_2
      61: iload_3
      62: invokestatic  #15                 // Method outputInt:(I[CI)I
      65: ireturn
      66: lload_0
      67: getstatic     #21                 // Field BILLION_L:J
      70: ldiv
      71: lstore        4
      73: lload_0
      74: lload         4
      76: getstatic     #21                 // Field BILLION_L:J
      79: lmul
      80: lsub
      81: lstore_0
      82: lload         4
      84: getstatic     #21                 // Field BILLION_L:J
      87: lcmp
      88: ifge          103
      91: lload         4
      93: l2i
      94: aload_2
      95: iload_3
      96: invokestatic  #22                 // Method _outputUptoBillion:(I[CI)I
      99: istore_3
     100: goto          140
     103: lload         4
     105: getstatic     #21                 // Field BILLION_L:J
     108: ldiv
     109: lstore        6
     111: lload         4
     113: lload         6
     115: getstatic     #21                 // Field BILLION_L:J
     118: lmul
     119: lsub
     120: lstore        4
     122: lload         6
     124: l2i
     125: aload_2
     126: iload_3
     127: invokestatic  #6                  // Method _leading3:(I[CI)I
     130: istore_3
     131: lload         4
     133: l2i
     134: aload_2
     135: iload_3
     136: invokestatic  #9                  // Method _outputFullBillion:(I[CI)I
     139: istore_3
     140: lload_0
     141: l2i
     142: aload_2
     143: iload_3
     144: invokestatic  #9                  // Method _outputFullBillion:(I[CI)I
     147: ireturn

  public static int outputLong(long, byte[], int);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifge          50
       6: lload_0
       7: getstatic     #14                 // Field MIN_INT_AS_LONG:J
      10: lcmp
      11: ifle          22
      14: lload_0
      15: l2i
      16: aload_2
      17: iload_3
      18: invokestatic  #23                 // Method outputInt:(I[BI)I
      21: ireturn
      22: lload_0
      23: ldc2_w        #17                 // long -9223372036854775808l
      26: lcmp
      27: ifne          36
      30: aload_2
      31: iload_3
      32: invokestatic  #24                 // Method _outputSmallestL:([BI)I
      35: ireturn
      36: aload_2
      37: iload_3
      38: iinc          3, 1
      41: bipush        45
      43: bastore
      44: lload_0
      45: lneg
      46: lstore_0
      47: goto          66
      50: lload_0
      51: getstatic     #20                 // Field MAX_INT_AS_LONG:J
      54: lcmp
      55: ifgt          66
      58: lload_0
      59: l2i
      60: aload_2
      61: iload_3
      62: invokestatic  #23                 // Method outputInt:(I[BI)I
      65: ireturn
      66: lload_0
      67: getstatic     #21                 // Field BILLION_L:J
      70: ldiv
      71: lstore        4
      73: lload_0
      74: lload         4
      76: getstatic     #21                 // Field BILLION_L:J
      79: lmul
      80: lsub
      81: lstore_0
      82: lload         4
      84: getstatic     #21                 // Field BILLION_L:J
      87: lcmp
      88: ifge          103
      91: lload         4
      93: l2i
      94: aload_2
      95: iload_3
      96: invokestatic  #25                 // Method _outputUptoBillion:(I[BI)I
      99: istore_3
     100: goto          140
     103: lload         4
     105: getstatic     #21                 // Field BILLION_L:J
     108: ldiv
     109: lstore        6
     111: lload         4
     113: lload         6
     115: getstatic     #21                 // Field BILLION_L:J
     118: lmul
     119: lsub
     120: lstore        4
     122: lload         6
     124: l2i
     125: aload_2
     126: iload_3
     127: invokestatic  #11                 // Method _leading3:(I[BI)I
     130: istore_3
     131: lload         4
     133: l2i
     134: aload_2
     135: iload_3
     136: invokestatic  #13                 // Method _outputFullBillion:(I[BI)I
     139: istore_3
     140: lload_0
     141: l2i
     142: aload_2
     143: iload_3
     144: invokestatic  #13                 // Method _outputFullBillion:(I[BI)I
     147: ireturn

  public static java.lang.String toString(int);
    Code:
       0: iload_0
       1: getstatic     #26                 // Field sSmallIntStrs:[Ljava/lang/String;
       4: arraylength
       5: if_icmpge     37
       8: iload_0
       9: iflt          18
      12: getstatic     #26                 // Field sSmallIntStrs:[Ljava/lang/String;
      15: iload_0
      16: aaload
      17: areturn
      18: iload_0
      19: ineg
      20: iconst_1
      21: isub
      22: istore_1
      23: iload_1
      24: getstatic     #27                 // Field sSmallIntStrs2:[Ljava/lang/String;
      27: arraylength
      28: if_icmpge     37
      31: getstatic     #27                 // Field sSmallIntStrs2:[Ljava/lang/String;
      34: iload_1
      35: aaload
      36: areturn
      37: iload_0
      38: invokestatic  #28                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      41: areturn

  public static java.lang.String toString(long);
    Code:
       0: lload_0
       1: ldc2_w        #29                 // long 2147483647l
       4: lcmp
       5: ifgt          22
       8: lload_0
       9: ldc2_w        #31                 // long -2147483648l
      12: lcmp
      13: iflt          22
      16: lload_0
      17: l2i
      18: invokestatic  #33                 // Method toString:(I)Ljava/lang/String;
      21: areturn
      22: lload_0
      23: invokestatic  #34                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      26: areturn

  public static java.lang.String toString(double);
    Code:
       0: dload_0
       1: iconst_0
       2: invokestatic  #35                 // Method toString:(DZ)Ljava/lang/String;
       5: areturn

  public static java.lang.String toString(double, boolean);
    Code:
       0: iload_2
       1: ifeq          11
       4: dload_0
       5: invokestatic  #36                 // Method com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toString:(D)Ljava/lang/String;
       8: goto          15
      11: dload_0
      12: invokestatic  #37                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
      15: areturn

  public static java.lang.String toString(float);
    Code:
       0: fload_0
       1: iconst_0
       2: invokestatic  #38                 // Method toString:(FZ)Ljava/lang/String;
       5: areturn

  public static java.lang.String toString(float, boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: fload_0
       5: invokestatic  #39                 // Method com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toString:(F)Ljava/lang/String;
       8: goto          15
      11: fload_0
      12: invokestatic  #40                 // Method java/lang/Float.toString:(F)Ljava/lang/String;
      15: areturn

  public static boolean notFinite(double);
    Code:
       0: dload_0
       1: invokestatic  #41                 // Method java/lang/Double.isFinite:(D)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean notFinite(float);
    Code:
       0: fload_0
       1: invokestatic  #42                 // Method java/lang/Float.isFinite:(F)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static int _outputUptoBillion(int, char[], int);
    Code:
       0: iload_0
       1: getstatic     #5                  // Field MILLION:I
       4: if_icmpge     45
       7: iload_0
       8: sipush        1000
      11: if_icmpge     21
      14: iload_0
      15: aload_1
      16: iload_2
      17: invokestatic  #6                  // Method _leading3:(I[CI)I
      20: ireturn
      21: iload_0
      22: sipush        1000
      25: idiv
      26: istore_3
      27: iload_0
      28: iload_3
      29: sipush        1000
      32: imul
      33: isub
      34: istore        4
      36: aload_1
      37: iload_2
      38: iload_3
      39: iload         4
      41: invokestatic  #43                 // Method _outputUptoMillion:([CIII)I
      44: ireturn
      45: iload_0
      46: sipush        1000
      49: idiv
      50: istore_3
      51: iload_0
      52: iload_3
      53: sipush        1000
      56: imul
      57: isub
      58: istore        4
      60: iload_3
      61: sipush        1000
      64: idiv
      65: istore        5
      67: iload_3
      68: iload         5
      70: sipush        1000
      73: imul
      74: isub
      75: istore_3
      76: iload         5
      78: aload_1
      79: iload_2
      80: invokestatic  #6                  // Method _leading3:(I[CI)I
      83: istore_2
      84: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
      87: iload_3
      88: iaload
      89: istore        6
      91: aload_1
      92: iload_2
      93: iinc          2, 1
      96: iload         6
      98: bipush        16
     100: ishr
     101: i2c
     102: castore
     103: aload_1
     104: iload_2
     105: iinc          2, 1
     108: iload         6
     110: bipush        8
     112: ishr
     113: bipush        127
     115: iand
     116: i2c
     117: castore
     118: aload_1
     119: iload_2
     120: iinc          2, 1
     123: iload         6
     125: bipush        127
     127: iand
     128: i2c
     129: castore
     130: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
     133: iload         4
     135: iaload
     136: istore        6
     138: aload_1
     139: iload_2
     140: iinc          2, 1
     143: iload         6
     145: bipush        16
     147: ishr
     148: i2c
     149: castore
     150: aload_1
     151: iload_2
     152: iinc          2, 1
     155: iload         6
     157: bipush        8
     159: ishr
     160: bipush        127
     162: iand
     163: i2c
     164: castore
     165: aload_1
     166: iload_2
     167: iinc          2, 1
     170: iload         6
     172: bipush        127
     174: iand
     175: i2c
     176: castore
     177: iload_2
     178: ireturn

  private static int _outputFullBillion(int, char[], int);
    Code:
       0: iload_0
       1: sipush        1000
       4: idiv
       5: istore_3
       6: iload_0
       7: iload_3
       8: sipush        1000
      11: imul
      12: isub
      13: istore        4
      15: iload_3
      16: sipush        1000
      19: idiv
      20: istore        5
      22: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
      25: iload         5
      27: iaload
      28: istore        6
      30: aload_1
      31: iload_2
      32: iinc          2, 1
      35: iload         6
      37: bipush        16
      39: ishr
      40: i2c
      41: castore
      42: aload_1
      43: iload_2
      44: iinc          2, 1
      47: iload         6
      49: bipush        8
      51: ishr
      52: bipush        127
      54: iand
      55: i2c
      56: castore
      57: aload_1
      58: iload_2
      59: iinc          2, 1
      62: iload         6
      64: bipush        127
      66: iand
      67: i2c
      68: castore
      69: iload_3
      70: iload         5
      72: sipush        1000
      75: imul
      76: isub
      77: istore_3
      78: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
      81: iload_3
      82: iaload
      83: istore        6
      85: aload_1
      86: iload_2
      87: iinc          2, 1
      90: iload         6
      92: bipush        16
      94: ishr
      95: i2c
      96: castore
      97: aload_1
      98: iload_2
      99: iinc          2, 1
     102: iload         6
     104: bipush        8
     106: ishr
     107: bipush        127
     109: iand
     110: i2c
     111: castore
     112: aload_1
     113: iload_2
     114: iinc          2, 1
     117: iload         6
     119: bipush        127
     121: iand
     122: i2c
     123: castore
     124: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
     127: iload         4
     129: iaload
     130: istore        6
     132: aload_1
     133: iload_2
     134: iinc          2, 1
     137: iload         6
     139: bipush        16
     141: ishr
     142: i2c
     143: castore
     144: aload_1
     145: iload_2
     146: iinc          2, 1
     149: iload         6
     151: bipush        8
     153: ishr
     154: bipush        127
     156: iand
     157: i2c
     158: castore
     159: aload_1
     160: iload_2
     161: iinc          2, 1
     164: iload         6
     166: bipush        127
     168: iand
     169: i2c
     170: castore
     171: iload_2
     172: ireturn

  private static int _outputUptoBillion(int, byte[], int);
    Code:
       0: iload_0
       1: getstatic     #5                  // Field MILLION:I
       4: if_icmpge     45
       7: iload_0
       8: sipush        1000
      11: if_icmpge     21
      14: iload_0
      15: aload_1
      16: iload_2
      17: invokestatic  #11                 // Method _leading3:(I[BI)I
      20: ireturn
      21: iload_0
      22: sipush        1000
      25: idiv
      26: istore_3
      27: iload_0
      28: iload_3
      29: sipush        1000
      32: imul
      33: isub
      34: istore        4
      36: aload_1
      37: iload_2
      38: iload_3
      39: iload         4
      41: invokestatic  #45                 // Method _outputUptoMillion:([BIII)I
      44: ireturn
      45: iload_0
      46: sipush        1000
      49: idiv
      50: istore_3
      51: iload_0
      52: iload_3
      53: sipush        1000
      56: imul
      57: isub
      58: istore        4
      60: iload_3
      61: sipush        1000
      64: idiv
      65: istore        5
      67: iload_3
      68: iload         5
      70: sipush        1000
      73: imul
      74: isub
      75: istore_3
      76: iload         5
      78: aload_1
      79: iload_2
      80: invokestatic  #11                 // Method _leading3:(I[BI)I
      83: istore_2
      84: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
      87: iload_3
      88: iaload
      89: istore        6
      91: aload_1
      92: iload_2
      93: iinc          2, 1
      96: iload         6
      98: bipush        16
     100: ishr
     101: i2b
     102: bastore
     103: aload_1
     104: iload_2
     105: iinc          2, 1
     108: iload         6
     110: bipush        8
     112: ishr
     113: i2b
     114: bastore
     115: aload_1
     116: iload_2
     117: iinc          2, 1
     120: iload         6
     122: i2b
     123: bastore
     124: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
     127: iload         4
     129: iaload
     130: istore        6
     132: aload_1
     133: iload_2
     134: iinc          2, 1
     137: iload         6
     139: bipush        16
     141: ishr
     142: i2b
     143: bastore
     144: aload_1
     145: iload_2
     146: iinc          2, 1
     149: iload         6
     151: bipush        8
     153: ishr
     154: i2b
     155: bastore
     156: aload_1
     157: iload_2
     158: iinc          2, 1
     161: iload         6
     163: i2b
     164: bastore
     165: iload_2
     166: ireturn

  private static int _outputFullBillion(int, byte[], int);
    Code:
       0: iload_0
       1: sipush        1000
       4: idiv
       5: istore_3
       6: iload_0
       7: iload_3
       8: sipush        1000
      11: imul
      12: isub
      13: istore        4
      15: iload_3
      16: sipush        1000
      19: idiv
      20: istore        5
      22: iload_3
      23: iload         5
      25: sipush        1000
      28: imul
      29: isub
      30: istore_3
      31: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
      34: iload         5
      36: iaload
      37: istore        6
      39: aload_1
      40: iload_2
      41: iinc          2, 1
      44: iload         6
      46: bipush        16
      48: ishr
      49: i2b
      50: bastore
      51: aload_1
      52: iload_2
      53: iinc          2, 1
      56: iload         6
      58: bipush        8
      60: ishr
      61: i2b
      62: bastore
      63: aload_1
      64: iload_2
      65: iinc          2, 1
      68: iload         6
      70: i2b
      71: bastore
      72: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
      75: iload_3
      76: iaload
      77: istore        6
      79: aload_1
      80: iload_2
      81: iinc          2, 1
      84: iload         6
      86: bipush        16
      88: ishr
      89: i2b
      90: bastore
      91: aload_1
      92: iload_2
      93: iinc          2, 1
      96: iload         6
      98: bipush        8
     100: ishr
     101: i2b
     102: bastore
     103: aload_1
     104: iload_2
     105: iinc          2, 1
     108: iload         6
     110: i2b
     111: bastore
     112: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
     115: iload         4
     117: iaload
     118: istore        6
     120: aload_1
     121: iload_2
     122: iinc          2, 1
     125: iload         6
     127: bipush        16
     129: ishr
     130: i2b
     131: bastore
     132: aload_1
     133: iload_2
     134: iinc          2, 1
     137: iload         6
     139: bipush        8
     141: ishr
     142: i2b
     143: bastore
     144: aload_1
     145: iload_2
     146: iinc          2, 1
     149: iload         6
     151: i2b
     152: bastore
     153: iload_2
     154: ireturn

  private static int _outputUptoMillion(char[], int, int, int);
    Code:
       0: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
       3: iload_2
       4: iaload
       5: istore        4
       7: iload_2
       8: bipush        9
      10: if_icmple     46
      13: iload_2
      14: bipush        99
      16: if_icmple     31
      19: aload_0
      20: iload_1
      21: iinc          1, 1
      24: iload         4
      26: bipush        16
      28: ishr
      29: i2c
      30: castore
      31: aload_0
      32: iload_1
      33: iinc          1, 1
      36: iload         4
      38: bipush        8
      40: ishr
      41: bipush        127
      43: iand
      44: i2c
      45: castore
      46: aload_0
      47: iload_1
      48: iinc          1, 1
      51: iload         4
      53: bipush        127
      55: iand
      56: i2c
      57: castore
      58: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
      61: iload_3
      62: iaload
      63: istore        4
      65: aload_0
      66: iload_1
      67: iinc          1, 1
      70: iload         4
      72: bipush        16
      74: ishr
      75: i2c
      76: castore
      77: aload_0
      78: iload_1
      79: iinc          1, 1
      82: iload         4
      84: bipush        8
      86: ishr
      87: bipush        127
      89: iand
      90: i2c
      91: castore
      92: aload_0
      93: iload_1
      94: iinc          1, 1
      97: iload         4
      99: bipush        127
     101: iand
     102: i2c
     103: castore
     104: iload_1
     105: ireturn

  private static int _outputUptoMillion(byte[], int, int, int);
    Code:
       0: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
       3: iload_2
       4: iaload
       5: istore        4
       7: iload_2
       8: bipush        9
      10: if_icmple     43
      13: iload_2
      14: bipush        99
      16: if_icmple     31
      19: aload_0
      20: iload_1
      21: iinc          1, 1
      24: iload         4
      26: bipush        16
      28: ishr
      29: i2b
      30: bastore
      31: aload_0
      32: iload_1
      33: iinc          1, 1
      36: iload         4
      38: bipush        8
      40: ishr
      41: i2b
      42: bastore
      43: aload_0
      44: iload_1
      45: iinc          1, 1
      48: iload         4
      50: i2b
      51: bastore
      52: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
      55: iload_3
      56: iaload
      57: istore        4
      59: aload_0
      60: iload_1
      61: iinc          1, 1
      64: iload         4
      66: bipush        16
      68: ishr
      69: i2b
      70: bastore
      71: aload_0
      72: iload_1
      73: iinc          1, 1
      76: iload         4
      78: bipush        8
      80: ishr
      81: i2b
      82: bastore
      83: aload_0
      84: iload_1
      85: iinc          1, 1
      88: iload         4
      90: i2b
      91: bastore
      92: iload_1
      93: ireturn

  private static int _leading3(int, char[], int);
    Code:
       0: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
       3: iload_0
       4: iaload
       5: istore_3
       6: iload_0
       7: bipush        9
       9: if_icmple     43
      12: iload_0
      13: bipush        99
      15: if_icmple     29
      18: aload_1
      19: iload_2
      20: iinc          2, 1
      23: iload_3
      24: bipush        16
      26: ishr
      27: i2c
      28: castore
      29: aload_1
      30: iload_2
      31: iinc          2, 1
      34: iload_3
      35: bipush        8
      37: ishr
      38: bipush        127
      40: iand
      41: i2c
      42: castore
      43: aload_1
      44: iload_2
      45: iinc          2, 1
      48: iload_3
      49: bipush        127
      51: iand
      52: i2c
      53: castore
      54: iload_2
      55: ireturn

  private static int _leading3(int, byte[], int);
    Code:
       0: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
       3: iload_0
       4: iaload
       5: istore_3
       6: iload_0
       7: bipush        9
       9: if_icmple     40
      12: iload_0
      13: bipush        99
      15: if_icmple     29
      18: aload_1
      19: iload_2
      20: iinc          2, 1
      23: iload_3
      24: bipush        16
      26: ishr
      27: i2b
      28: bastore
      29: aload_1
      30: iload_2
      31: iinc          2, 1
      34: iload_3
      35: bipush        8
      37: ishr
      38: i2b
      39: bastore
      40: aload_1
      41: iload_2
      42: iinc          2, 1
      45: iload_3
      46: i2b
      47: bastore
      48: iload_2
      49: ireturn

  private static int _full3(int, char[], int);
    Code:
       0: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
       3: iload_0
       4: iaload
       5: istore_3
       6: aload_1
       7: iload_2
       8: iinc          2, 1
      11: iload_3
      12: bipush        16
      14: ishr
      15: i2c
      16: castore
      17: aload_1
      18: iload_2
      19: iinc          2, 1
      22: iload_3
      23: bipush        8
      25: ishr
      26: bipush        127
      28: iand
      29: i2c
      30: castore
      31: aload_1
      32: iload_2
      33: iinc          2, 1
      36: iload_3
      37: bipush        127
      39: iand
      40: i2c
      41: castore
      42: iload_2
      43: ireturn

  private static int _full3(int, byte[], int);
    Code:
       0: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
       3: iload_0
       4: iaload
       5: istore_3
       6: aload_1
       7: iload_2
       8: iinc          2, 1
      11: iload_3
      12: bipush        16
      14: ishr
      15: i2b
      16: bastore
      17: aload_1
      18: iload_2
      19: iinc          2, 1
      22: iload_3
      23: bipush        8
      25: ishr
      26: i2b
      27: bastore
      28: aload_1
      29: iload_2
      30: iinc          2, 1
      33: iload_3
      34: i2b
      35: bastore
      36: iload_2
      37: ireturn

  private static int _outputSmallestL(char[], int);
    Code:
       0: getstatic     #46                 // Field SMALLEST_LONG:Ljava/lang/String;
       3: invokevirtual #47                 // Method java/lang/String.length:()I
       6: istore_2
       7: getstatic     #46                 // Field SMALLEST_LONG:Ljava/lang/String;
      10: iconst_0
      11: iload_2
      12: aload_0
      13: iload_1
      14: invokevirtual #48                 // Method java/lang/String.getChars:(II[CI)V
      17: iload_1
      18: iload_2
      19: iadd
      20: ireturn

  private static int _outputSmallestL(byte[], int);
    Code:
       0: getstatic     #46                 // Field SMALLEST_LONG:Ljava/lang/String;
       3: invokevirtual #47                 // Method java/lang/String.length:()I
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     34
      14: aload_0
      15: iload_1
      16: iinc          1, 1
      19: getstatic     #46                 // Field SMALLEST_LONG:Ljava/lang/String;
      22: iload_3
      23: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      26: i2b
      27: bastore
      28: iinc          3, 1
      31: goto          9
      34: iload_1
      35: ireturn

  private static int _outputSmallestI(char[], int);
    Code:
       0: getstatic     #50                 // Field SMALLEST_INT:Ljava/lang/String;
       3: invokevirtual #47                 // Method java/lang/String.length:()I
       6: istore_2
       7: getstatic     #50                 // Field SMALLEST_INT:Ljava/lang/String;
      10: iconst_0
      11: iload_2
      12: aload_0
      13: iload_1
      14: invokevirtual #48                 // Method java/lang/String.getChars:(II[CI)V
      17: iload_1
      18: iload_2
      19: iadd
      20: ireturn

  private static int _outputSmallestI(byte[], int);
    Code:
       0: getstatic     #50                 // Field SMALLEST_INT:Ljava/lang/String;
       3: invokevirtual #47                 // Method java/lang/String.length:()I
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     34
      14: aload_0
      15: iload_1
      16: iinc          1, 1
      19: getstatic     #50                 // Field SMALLEST_INT:Ljava/lang/String;
      22: iload_3
      23: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      26: i2b
      27: bastore
      28: iinc          3, 1
      31: goto          9
      34: iload_1
      35: ireturn

  static {};
    Code:
       0: ldc           #51                 // int 1000000
       2: putstatic     #5                  // Field MILLION:I
       5: ldc           #52                 // int 1000000000
       7: putstatic     #8                  // Field BILLION:I
      10: ldc2_w        #53                 // long 1000000000l
      13: putstatic     #21                 // Field BILLION_L:J
      16: ldc2_w        #31                 // long -2147483648l
      19: putstatic     #14                 // Field MIN_INT_AS_LONG:J
      22: ldc2_w        #29                 // long 2147483647l
      25: putstatic     #20                 // Field MAX_INT_AS_LONG:J
      28: ldc           #3                  // int -2147483648
      30: invokestatic  #55                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      33: putstatic     #50                 // Field SMALLEST_INT:Ljava/lang/String;
      36: ldc2_w        #17                 // long -9223372036854775808l
      39: invokestatic  #56                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      42: putstatic     #46                 // Field SMALLEST_LONG:Ljava/lang/String;
      45: sipush        1000
      48: newarray       int
      50: putstatic     #44                 // Field TRIPLET_TO_CHARS:[I
      53: iconst_0
      54: istore_0
      55: iconst_0
      56: istore_1
      57: iload_1
      58: bipush        10
      60: if_icmpge     129
      63: iconst_0
      64: istore_2
      65: iload_2
      66: bipush        10
      68: if_icmpge     123
      71: iconst_0
      72: istore_3
      73: iload_3
      74: bipush        10
      76: if_icmpge     117
      79: iload_1
      80: bipush        48
      82: iadd
      83: bipush        16
      85: ishl
      86: iload_2
      87: bipush        48
      89: iadd
      90: bipush        8
      92: ishl
      93: ior
      94: iload_3
      95: bipush        48
      97: iadd
      98: ior
      99: istore        4
     101: getstatic     #44                 // Field TRIPLET_TO_CHARS:[I
     104: iload_0
     105: iinc          0, 1
     108: iload         4
     110: iastore
     111: iinc          3, 1
     114: goto          73
     117: iinc          2, 1
     120: goto          65
     123: iinc          1, 1
     126: goto          57
     129: bipush        11
     131: anewarray     #57                 // class java/lang/String
     134: dup
     135: iconst_0
     136: ldc           #58                 // String 0
     138: aastore
     139: dup
     140: iconst_1
     141: ldc           #59                 // String 1
     143: aastore
     144: dup
     145: iconst_2
     146: ldc           #60                 // String 2
     148: aastore
     149: dup
     150: iconst_3
     151: ldc           #61                 // String 3
     153: aastore
     154: dup
     155: iconst_4
     156: ldc           #62                 // String 4
     158: aastore
     159: dup
     160: iconst_5
     161: ldc           #63                 // String 5
     163: aastore
     164: dup
     165: bipush        6
     167: ldc           #64                 // String 6
     169: aastore
     170: dup
     171: bipush        7
     173: ldc           #65                 // String 7
     175: aastore
     176: dup
     177: bipush        8
     179: ldc           #66                 // String 8
     181: aastore
     182: dup
     183: bipush        9
     185: ldc           #67                 // String 9
     187: aastore
     188: dup
     189: bipush        10
     191: ldc           #68                 // String 10
     193: aastore
     194: putstatic     #26                 // Field sSmallIntStrs:[Ljava/lang/String;
     197: bipush        10
     199: anewarray     #57                 // class java/lang/String
     202: dup
     203: iconst_0
     204: ldc           #69                 // String -1
     206: aastore
     207: dup
     208: iconst_1
     209: ldc           #70                 // String -2
     211: aastore
     212: dup
     213: iconst_2
     214: ldc           #71                 // String -3
     216: aastore
     217: dup
     218: iconst_3
     219: ldc           #72                 // String -4
     221: aastore
     222: dup
     223: iconst_4
     224: ldc           #73                 // String -5
     226: aastore
     227: dup
     228: iconst_5
     229: ldc           #74                 // String -6
     231: aastore
     232: dup
     233: bipush        6
     235: ldc           #75                 // String -7
     237: aastore
     238: dup
     239: bipush        7
     241: ldc           #76                 // String -8
     243: aastore
     244: dup
     245: bipush        8
     247: ldc           #77                 // String -9
     249: aastore
     250: dup
     251: bipush        9
     253: ldc           #78                 // String -10
     255: aastore
     256: putstatic     #27                 // Field sSmallIntStrs2:[Ljava/lang/String;
     259: return
}
