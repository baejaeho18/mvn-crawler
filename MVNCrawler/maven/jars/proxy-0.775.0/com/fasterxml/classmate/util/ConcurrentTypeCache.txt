Compiled from "ConcurrentTypeCache.java"
public class com.fasterxml.classmate.util.ConcurrentTypeCache extends com.fasterxml.classmate.util.ResolvedTypeCache {
  private static final long serialVersionUID;

  protected final int _maxEntries;

  protected final transient java.util.concurrent.ConcurrentHashMap<com.fasterxml.classmate.util.ResolvedTypeKey, com.fasterxml.classmate.ResolvedType> _map;

  public com.fasterxml.classmate.util.ConcurrentTypeCache(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/classmate/util/ResolvedTypeCache."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: iload_1
      10: ldc           #3                  // float 0.8f
      12: iconst_4
      13: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      16: putfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
      19: aload_0
      20: iload_1
      21: putfield      #6                  // Field _maxEntries:I
      24: return

  java.lang.Object readResolve();
    Code:
       0: new           #7                  // class com/fasterxml/classmate/util/ConcurrentTypeCache
       3: dup
       4: aload_0
       5: getfield      #6                  // Field _maxEntries:I
       8: invokespecial #8                  // Method "<init>":(I)V
      11: areturn

  public com.fasterxml.classmate.ResolvedType find(com.fasterxml.classmate.util.ResolvedTypeKey);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String Null key not allowed
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
      18: aload_1
      19: invokevirtual #12                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #13                 // class com/fasterxml/classmate/ResolvedType
      25: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #14                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
       7: ireturn

  public void put(com.fasterxml.classmate.util.ResolvedTypeKey, com.fasterxml.classmate.ResolvedType);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String Null key not allowed
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
      18: invokevirtual #14                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
      21: aload_0
      22: getfield      #6                  // Field _maxEntries:I
      25: if_icmplt     65
      28: aload_0
      29: dup
      30: astore_3
      31: monitorenter
      32: aload_0
      33: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
      36: invokevirtual #14                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
      39: aload_0
      40: getfield      #6                  // Field _maxEntries:I
      43: if_icmplt     53
      46: aload_0
      47: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
      50: invokevirtual #15                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      53: aload_3
      54: monitorexit
      55: goto          65
      58: astore        4
      60: aload_3
      61: monitorexit
      62: aload         4
      64: athrow
      65: aload_0
      66: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
      69: aload_1
      70: aload_2
      71: invokevirtual #16                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: return
    Exception table:
       from    to  target type
          32    55    58   any
          58    62    58   any
}
