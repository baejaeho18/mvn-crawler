Compiled from "UnsafeUtils.java"
public final class net.jpountz.util.UnsafeUtils extends java.lang.Enum<net.jpountz.util.UnsafeUtils> {
  private static final sun.misc.Unsafe UNSAFE;

  private static final long BYTE_ARRAY_OFFSET;

  private static final int BYTE_ARRAY_SCALE;

  private static final long INT_ARRAY_OFFSET;

  private static final int INT_ARRAY_SCALE;

  private static final long SHORT_ARRAY_OFFSET;

  private static final int SHORT_ARRAY_SCALE;

  private static final net.jpountz.util.UnsafeUtils[] $VALUES;

  public static net.jpountz.util.UnsafeUtils[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/jpountz/util/UnsafeUtils;
       3: invokevirtual #2                  // Method "[Lnet/jpountz/util/UnsafeUtils;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/jpountz/util/UnsafeUtils;"
       9: areturn

  public static net.jpountz.util.UnsafeUtils valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class net/jpountz/util/UnsafeUtils
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class net/jpountz/util/UnsafeUtils
      10: areturn

  private net.jpountz.util.UnsafeUtils();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static void checkRange(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #7                  // Method net/jpountz/util/SafeUtils.checkRange:([BI)V
       5: return

  public static void checkRange(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #8                  // Method net/jpountz/util/SafeUtils.checkRange:([BII)V
       6: return

  public static void checkLength(int);
    Code:
       0: iload_0
       1: invokestatic  #9                  // Method net/jpountz/util/SafeUtils.checkLength:(I)V
       4: return

  public static byte readByte(byte[], int);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #11                 // Field BYTE_ARRAY_OFFSET:J
       7: getstatic     #12                 // Field BYTE_ARRAY_SCALE:I
      10: iload_1
      11: imul
      12: i2l
      13: ladd
      14: invokevirtual #13                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
      17: ireturn

  public static void writeByte(byte[], int, byte);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #11                 // Field BYTE_ARRAY_OFFSET:J
       7: getstatic     #12                 // Field BYTE_ARRAY_SCALE:I
      10: iload_1
      11: imul
      12: i2l
      13: ladd
      14: iload_2
      15: invokevirtual #14                 // Method sun/misc/Unsafe.putByte:(Ljava/lang/Object;JB)V
      18: return

  public static void writeByte(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: i2b
       4: invokestatic  #15                 // Method writeByte:([BIB)V
       7: return

  public static long readLong(byte[], int);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #11                 // Field BYTE_ARRAY_OFFSET:J
       7: iload_1
       8: i2l
       9: ladd
      10: invokevirtual #16                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      13: lreturn

  public static long readLongLE(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #17                 // Method readLong:([BI)J
       5: lstore_2
       6: getstatic     #18                 // Field net/jpountz/util/Utils.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
       9: getstatic     #19                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      12: if_acmpne     20
      15: lload_2
      16: invokestatic  #20                 // Method java/lang/Long.reverseBytes:(J)J
      19: lstore_2
      20: lload_2
      21: lreturn

  public static void writeLong(byte[], int, long);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #11                 // Field BYTE_ARRAY_OFFSET:J
       7: iload_1
       8: i2l
       9: ladd
      10: lload_2
      11: invokevirtual #21                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      14: return

  public static int readInt(byte[], int);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #11                 // Field BYTE_ARRAY_OFFSET:J
       7: iload_1
       8: i2l
       9: ladd
      10: invokevirtual #22                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      13: ireturn

  public static int readIntLE(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #23                 // Method readInt:([BI)I
       5: istore_2
       6: getstatic     #18                 // Field net/jpountz/util/Utils.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
       9: getstatic     #19                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      12: if_acmpne     20
      15: iload_2
      16: invokestatic  #24                 // Method java/lang/Integer.reverseBytes:(I)I
      19: istore_2
      20: iload_2
      21: ireturn

  public static void writeInt(byte[], int, int);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #11                 // Field BYTE_ARRAY_OFFSET:J
       7: iload_1
       8: i2l
       9: ladd
      10: iload_2
      11: invokevirtual #25                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      14: return

  public static short readShort(byte[], int);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #11                 // Field BYTE_ARRAY_OFFSET:J
       7: iload_1
       8: i2l
       9: ladd
      10: invokevirtual #26                 // Method sun/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
      13: ireturn

  public static int readShortLE(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #27                 // Method readShort:([BI)S
       5: istore_2
       6: getstatic     #18                 // Field net/jpountz/util/Utils.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
       9: getstatic     #19                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      12: if_acmpne     20
      15: iload_2
      16: invokestatic  #28                 // Method java/lang/Short.reverseBytes:(S)S
      19: istore_2
      20: iload_2
      21: ldc           #29                 // int 65535
      23: iand
      24: ireturn

  public static void writeShort(byte[], int, short);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #11                 // Field BYTE_ARRAY_OFFSET:J
       7: iload_1
       8: i2l
       9: ladd
      10: iload_2
      11: invokevirtual #30                 // Method sun/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
      14: return

  public static void writeShortLE(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: i2b
       4: invokestatic  #15                 // Method writeByte:([BIB)V
       7: aload_0
       8: iload_1
       9: iconst_1
      10: iadd
      11: iload_2
      12: bipush        8
      14: iushr
      15: i2b
      16: invokestatic  #15                 // Method writeByte:([BIB)V
      19: return

  public static int readInt(int[], int);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #31                 // Field INT_ARRAY_OFFSET:J
       7: getstatic     #32                 // Field INT_ARRAY_SCALE:I
      10: iload_1
      11: imul
      12: i2l
      13: ladd
      14: invokevirtual #22                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      17: ireturn

  public static void writeInt(int[], int, int);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #31                 // Field INT_ARRAY_OFFSET:J
       7: getstatic     #32                 // Field INT_ARRAY_SCALE:I
      10: iload_1
      11: imul
      12: i2l
      13: ladd
      14: iload_2
      15: invokevirtual #25                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      18: return

  public static int readShort(short[], int);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #33                 // Field SHORT_ARRAY_OFFSET:J
       7: getstatic     #34                 // Field SHORT_ARRAY_SCALE:I
      10: iload_1
      11: imul
      12: i2l
      13: ladd
      14: invokevirtual #26                 // Method sun/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
      17: ldc           #29                 // int 65535
      19: iand
      20: ireturn

  public static void writeShort(short[], int, int);
    Code:
       0: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #33                 // Field SHORT_ARRAY_OFFSET:J
       7: getstatic     #34                 // Field SHORT_ARRAY_SCALE:I
      10: iload_1
      11: imul
      12: i2l
      13: ladd
      14: iload_2
      15: i2s
      16: invokevirtual #30                 // Method sun/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
      19: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/jpountz/util/UnsafeUtils
       4: putstatic     #1                  // Field $VALUES:[Lnet/jpountz/util/UnsafeUtils;
       7: ldc_w         #35                 // class sun/misc/Unsafe
      10: ldc           #36                 // String theUnsafe
      12: invokevirtual #37                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      15: astore_0
      16: aload_0
      17: iconst_1
      18: invokevirtual #38                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      21: aload_0
      22: aconst_null
      23: invokevirtual #39                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #35                 // class sun/misc/Unsafe
      29: putstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
      32: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
      35: ldc_w         #40                 // class "[B"
      38: invokevirtual #41                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
      41: i2l
      42: putstatic     #11                 // Field BYTE_ARRAY_OFFSET:J
      45: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
      48: ldc_w         #40                 // class "[B"
      51: invokevirtual #42                 // Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
      54: putstatic     #12                 // Field BYTE_ARRAY_SCALE:I
      57: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
      60: ldc_w         #43                 // class "[I"
      63: invokevirtual #41                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
      66: i2l
      67: putstatic     #31                 // Field INT_ARRAY_OFFSET:J
      70: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
      73: ldc_w         #43                 // class "[I"
      76: invokevirtual #42                 // Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
      79: putstatic     #32                 // Field INT_ARRAY_SCALE:I
      82: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
      85: ldc_w         #44                 // class "[S"
      88: invokevirtual #41                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
      91: i2l
      92: putstatic     #33                 // Field SHORT_ARRAY_OFFSET:J
      95: getstatic     #10                 // Field UNSAFE:Lsun/misc/Unsafe;
      98: ldc_w         #44                 // class "[S"
     101: invokevirtual #42                 // Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
     104: putstatic     #34                 // Field SHORT_ARRAY_SCALE:I
     107: goto          143
     110: astore_0
     111: new           #46                 // class java/lang/ExceptionInInitializerError
     114: dup
     115: ldc           #47                 // String Cannot access Unsafe
     117: invokespecial #48                 // Method java/lang/ExceptionInInitializerError."<init>":(Ljava/lang/String;)V
     120: athrow
     121: astore_0
     122: new           #46                 // class java/lang/ExceptionInInitializerError
     125: dup
     126: ldc           #47                 // String Cannot access Unsafe
     128: invokespecial #48                 // Method java/lang/ExceptionInInitializerError."<init>":(Ljava/lang/String;)V
     131: athrow
     132: astore_0
     133: new           #46                 // class java/lang/ExceptionInInitializerError
     136: dup
     137: ldc           #47                 // String Cannot access Unsafe
     139: invokespecial #48                 // Method java/lang/ExceptionInInitializerError."<init>":(Ljava/lang/String;)V
     142: athrow
     143: return
    Exception table:
       from    to  target type
           7   107   110   Class java/lang/IllegalAccessException
           7   107   121   Class java/lang/NoSuchFieldException
           7   107   132   Class java/lang/SecurityException
}
