Compiled from "LZ4HCJNICompressor.java"
final class net.jpountz.lz4.LZ4HCJNICompressor extends net.jpountz.lz4.LZ4Compressor {
  public static final net.jpountz.lz4.LZ4HCJNICompressor INSTANCE;

  private static net.jpountz.lz4.LZ4Compressor SAFE_INSTANCE;

  private final int compressionLevel;

  static final boolean $assertionsDisabled;

  net.jpountz.lz4.LZ4HCJNICompressor();
    Code:
       0: aload_0
       1: bipush        9
       3: invokespecial #1                  // Method "<init>":(I)V
       6: return

  net.jpountz.lz4.LZ4HCJNICompressor(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method net/jpountz/lz4/LZ4Compressor."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field compressionLevel:I
       9: return

  public int compress(byte[], int, int, byte[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #4                  // Method net/jpountz/util/SafeUtils.checkRange:([BII)V
       6: aload         4
       8: iload         5
      10: iload         6
      12: invokestatic  #4                  // Method net/jpountz/util/SafeUtils.checkRange:([BII)V
      15: aload_1
      16: aconst_null
      17: iload_2
      18: iload_3
      19: aload         4
      21: aconst_null
      22: iload         5
      24: iload         6
      26: aload_0
      27: getfield      #3                  // Field compressionLevel:I
      30: invokestatic  #5                  // Method net/jpountz/lz4/LZ4JNI.LZ4_compressHC:([BLjava/nio/ByteBuffer;II[BLjava/nio/ByteBuffer;III)I
      33: istore        7
      35: iload         7
      37: ifgt          48
      40: new           #6                  // class net/jpountz/lz4/LZ4Exception
      43: dup
      44: invokespecial #7                  // Method net/jpountz/lz4/LZ4Exception."<init>":()V
      47: athrow
      48: iload         7
      50: ireturn

  public int compress(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int);
    Code:
       0: aload         4
       2: invokestatic  #8                  // Method net/jpountz/util/ByteBufferUtils.checkNotReadOnly:(Ljava/nio/ByteBuffer;)V
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokestatic  #9                  // Method net/jpountz/util/ByteBufferUtils.checkRange:(Ljava/nio/ByteBuffer;II)V
      11: aload         4
      13: iload         5
      15: iload         6
      17: invokestatic  #9                  // Method net/jpountz/util/ByteBufferUtils.checkRange:(Ljava/nio/ByteBuffer;II)V
      20: aload_1
      21: invokevirtual #10                 // Method java/nio/ByteBuffer.hasArray:()Z
      24: ifne          34
      27: aload_1
      28: invokevirtual #11                 // Method java/nio/ByteBuffer.isDirect:()Z
      31: ifeq          202
      34: aload         4
      36: invokevirtual #10                 // Method java/nio/ByteBuffer.hasArray:()Z
      39: ifne          50
      42: aload         4
      44: invokevirtual #11                 // Method java/nio/ByteBuffer.isDirect:()Z
      47: ifeq          202
      50: aconst_null
      51: astore        7
      53: aconst_null
      54: astore        8
      56: aconst_null
      57: astore        9
      59: aconst_null
      60: astore        10
      62: aload_1
      63: invokevirtual #10                 // Method java/nio/ByteBuffer.hasArray:()Z
      66: ifeq          85
      69: aload_1
      70: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      73: astore        7
      75: iload_2
      76: aload_1
      77: invokevirtual #13                 // Method java/nio/ByteBuffer.arrayOffset:()I
      80: iadd
      81: istore_2
      82: goto          109
      85: getstatic     #14                 // Field $assertionsDisabled:Z
      88: ifne          106
      91: aload_1
      92: invokevirtual #11                 // Method java/nio/ByteBuffer.isDirect:()Z
      95: ifne          106
      98: new           #15                 // class java/lang/AssertionError
     101: dup
     102: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
     105: athrow
     106: aload_1
     107: astore        9
     109: aload         4
     111: invokevirtual #10                 // Method java/nio/ByteBuffer.hasArray:()Z
     114: ifeq          137
     117: aload         4
     119: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
     122: astore        8
     124: iload         5
     126: aload         4
     128: invokevirtual #13                 // Method java/nio/ByteBuffer.arrayOffset:()I
     131: iadd
     132: istore        5
     134: goto          163
     137: getstatic     #14                 // Field $assertionsDisabled:Z
     140: ifne          159
     143: aload         4
     145: invokevirtual #11                 // Method java/nio/ByteBuffer.isDirect:()Z
     148: ifne          159
     151: new           #15                 // class java/lang/AssertionError
     154: dup
     155: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
     158: athrow
     159: aload         4
     161: astore        10
     163: aload         7
     165: aload         9
     167: iload_2
     168: iload_3
     169: aload         8
     171: aload         10
     173: iload         5
     175: iload         6
     177: aload_0
     178: getfield      #3                  // Field compressionLevel:I
     181: invokestatic  #5                  // Method net/jpountz/lz4/LZ4JNI.LZ4_compressHC:([BLjava/nio/ByteBuffer;II[BLjava/nio/ByteBuffer;III)I
     184: istore        11
     186: iload         11
     188: ifgt          199
     191: new           #6                  // class net/jpountz/lz4/LZ4Exception
     194: dup
     195: invokespecial #7                  // Method net/jpountz/lz4/LZ4Exception."<init>":()V
     198: athrow
     199: iload         11
     201: ireturn
     202: getstatic     #17                 // Field SAFE_INSTANCE:Lnet/jpountz/lz4/LZ4Compressor;
     205: astore        7
     207: aload         7
     209: ifnonnull     228
     212: invokestatic  #18                 // Method net/jpountz/lz4/LZ4Factory.safeInstance:()Lnet/jpountz/lz4/LZ4Factory;
     215: aload_0
     216: getfield      #3                  // Field compressionLevel:I
     219: invokevirtual #19                 // Method net/jpountz/lz4/LZ4Factory.highCompressor:(I)Lnet/jpountz/lz4/LZ4Compressor;
     222: dup
     223: putstatic     #17                 // Field SAFE_INSTANCE:Lnet/jpountz/lz4/LZ4Compressor;
     226: astore        7
     228: aload         7
     230: aload_1
     231: iload_2
     232: iload_3
     233: aload         4
     235: iload         5
     237: iload         6
     239: invokevirtual #20                 // Method net/jpountz/lz4/LZ4Compressor.compress:(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
     242: ireturn

  static {};
    Code:
       0: ldc_w         #21                 // class net/jpountz/lz4/LZ4HCJNICompressor
       3: invokevirtual #22                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #14                 // Field $assertionsDisabled:Z
      17: new           #21                 // class net/jpountz/lz4/LZ4HCJNICompressor
      20: dup
      21: invokespecial #23                 // Method "<init>":()V
      24: putstatic     #24                 // Field INSTANCE:Lnet/jpountz/lz4/LZ4HCJNICompressor;
      27: return
}
