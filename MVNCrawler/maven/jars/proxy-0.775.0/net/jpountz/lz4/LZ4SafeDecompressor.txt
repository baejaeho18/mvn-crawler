Compiled from "LZ4SafeDecompressor.java"
public abstract class net.jpountz.lz4.LZ4SafeDecompressor implements net.jpountz.lz4.LZ4UnknownSizeDecompressor {
  public net.jpountz.lz4.LZ4SafeDecompressor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract int decompress(byte[], int, int, byte[], int, int);

  public abstract int decompress(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int);

  public final int decompress(byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: iload         5
       8: aload         4
      10: arraylength
      11: iload         5
      13: isub
      14: invokevirtual #2                  // Method decompress:([BII[BII)I
      17: ireturn

  public final int decompress(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: iconst_0
       7: invokevirtual #3                  // Method decompress:([BII[BI)I
      10: ireturn

  public final byte[] decompress(byte[], int, int, int);
    Code:
       0: iload         4
       2: newarray       byte
       4: astore        5
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: aload         5
      12: iconst_0
      13: iload         4
      15: invokevirtual #2                  // Method decompress:([BII[BII)I
      18: istore        6
      20: iload         6
      22: aload         5
      24: arraylength
      25: if_icmpeq     37
      28: aload         5
      30: iload         6
      32: invokestatic  #4                  // Method java/util/Arrays.copyOf:([BI)[B
      35: astore        5
      37: aload         5
      39: areturn

  public final byte[] decompress(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: iload_2
       6: invokevirtual #5                  // Method decompress:([BIII)[B
       9: areturn

  public final void decompress(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
       6: aload_1
       7: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      10: aload_2
      11: aload_2
      12: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
      15: aload_2
      16: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      19: invokevirtual #8                  // Method decompress:(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
      22: istore_3
      23: aload_1
      24: aload_1
      25: invokevirtual #9                  // Method java/nio/ByteBuffer.limit:()I
      28: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      31: pop
      32: aload_2
      33: aload_2
      34: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
      37: iload_3
      38: iadd
      39: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      42: pop
      43: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #12                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn
}
