Compiled from "LZ4FrameInputStream.java"
public class net.jpountz.lz4.LZ4FrameInputStream extends java.io.FilterInputStream {
  static final java.lang.String PREMATURE_EOS;

  static final java.lang.String NOT_SUPPORTED;

  static final java.lang.String BLOCK_HASH_MISMATCH;

  static final java.lang.String DESCRIPTOR_HASH_MISMATCH;

  static final int MAGIC_SKIPPABLE_BASE;

  private final net.jpountz.lz4.LZ4SafeDecompressor decompressor;

  private final net.jpountz.xxhash.XXHash32 checksum;

  private final byte[] headerArray;

  private final java.nio.ByteBuffer headerBuffer;

  private final boolean readSingleFrame;

  private byte[] compressedBuffer;

  private java.nio.ByteBuffer buffer;

  private byte[] rawBuffer;

  private int maxBlockSize;

  private long expectedContentSize;

  private long totalContentSize;

  private boolean firstFrameHeaderRead;

  private net.jpountz.lz4.LZ4FrameOutputStream$FrameInfo frameInfo;

  private final java.nio.ByteBuffer readNumberBuff;

  public net.jpountz.lz4.LZ4FrameInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method net/jpountz/lz4/LZ4Factory.fastestInstance:()Lnet/jpountz/lz4/LZ4Factory;
       5: invokevirtual #2                  // Method net/jpountz/lz4/LZ4Factory.safeDecompressor:()Lnet/jpountz/lz4/LZ4SafeDecompressor;
       8: invokestatic  #3                  // Method net/jpountz/xxhash/XXHashFactory.fastestInstance:()Lnet/jpountz/xxhash/XXHashFactory;
      11: invokevirtual #4                  // Method net/jpountz/xxhash/XXHashFactory.hash32:()Lnet/jpountz/xxhash/XXHash32;
      14: invokespecial #5                  // Method "<init>":(Ljava/io/InputStream;Lnet/jpountz/lz4/LZ4SafeDecompressor;Lnet/jpountz/xxhash/XXHash32;)V
      17: return

  public net.jpountz.lz4.LZ4FrameInputStream(java.io.InputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method net/jpountz/lz4/LZ4Factory.fastestInstance:()Lnet/jpountz/lz4/LZ4Factory;
       5: invokevirtual #2                  // Method net/jpountz/lz4/LZ4Factory.safeDecompressor:()Lnet/jpountz/lz4/LZ4SafeDecompressor;
       8: invokestatic  #3                  // Method net/jpountz/xxhash/XXHashFactory.fastestInstance:()Lnet/jpountz/xxhash/XXHashFactory;
      11: invokevirtual #4                  // Method net/jpountz/xxhash/XXHashFactory.hash32:()Lnet/jpountz/xxhash/XXHash32;
      14: iload_2
      15: invokespecial #6                  // Method "<init>":(Ljava/io/InputStream;Lnet/jpountz/lz4/LZ4SafeDecompressor;Lnet/jpountz/xxhash/XXHash32;Z)V
      18: return

  public net.jpountz.lz4.LZ4FrameInputStream(java.io.InputStream, net.jpountz.lz4.LZ4SafeDecompressor, net.jpountz.xxhash.XXHash32) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokespecial #6                  // Method "<init>":(Ljava/io/InputStream;Lnet/jpountz/lz4/LZ4SafeDecompressor;Lnet/jpountz/xxhash/XXHash32;Z)V
       8: return

  public net.jpountz.lz4.LZ4FrameInputStream(java.io.InputStream, net.jpountz.lz4.LZ4SafeDecompressor, net.jpountz.xxhash.XXHash32, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: bipush        15
       8: newarray       byte
      10: putfield      #8                  // Field headerArray:[B
      13: aload_0
      14: aload_0
      15: getfield      #8                  // Field headerArray:[B
      18: invokestatic  #9                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      21: getstatic     #10                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      24: invokevirtual #11                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      27: putfield      #12                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      30: aload_0
      31: aconst_null
      32: putfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
      35: aload_0
      36: aconst_null
      37: putfield      #14                 // Field rawBuffer:[B
      40: aload_0
      41: iconst_m1
      42: putfield      #15                 // Field maxBlockSize:I
      45: aload_0
      46: ldc2_w        #16                 // long -1l
      49: putfield      #18                 // Field expectedContentSize:J
      52: aload_0
      53: lconst_0
      54: putfield      #19                 // Field totalContentSize:J
      57: aload_0
      58: iconst_0
      59: putfield      #20                 // Field firstFrameHeaderRead:Z
      62: aload_0
      63: aconst_null
      64: putfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
      67: aload_0
      68: bipush        8
      70: invokestatic  #22                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      73: getstatic     #10                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      76: invokevirtual #11                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      79: putfield      #23                 // Field readNumberBuff:Ljava/nio/ByteBuffer;
      82: aload_0
      83: aload_2
      84: putfield      #24                 // Field decompressor:Lnet/jpountz/lz4/LZ4SafeDecompressor;
      87: aload_0
      88: aload_3
      89: putfield      #25                 // Field checksum:Lnet/jpountz/xxhash/XXHash32;
      92: aload_0
      93: iload         4
      95: putfield      #26                 // Field readSingleFrame:Z
      98: return

  private boolean nextFrameInfo() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #27                 // Field in:Ljava/io/InputStream;
       6: aload_0
       7: getfield      #23                 // Field readNumberBuff:Ljava/nio/ByteBuffer;
      10: invokevirtual #28                 // Method java/nio/ByteBuffer.array:()[B
      13: iload_1
      14: iconst_4
      15: iload_1
      16: isub
      17: invokevirtual #29                 // Method java/io/InputStream.read:([BII)I
      20: istore_2
      21: iload_2
      22: ifge          58
      25: aload_0
      26: getfield      #20                 // Field firstFrameHeaderRead:Z
      29: ifeq          48
      32: iload_1
      33: ifle          46
      36: new           #30                 // class java/io/IOException
      39: dup
      40: ldc           #31                 // String Stream ended prematurely
      42: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: iconst_0
      47: ireturn
      48: new           #30                 // class java/io/IOException
      51: dup
      52: ldc           #31                 // String Stream ended prematurely
      54: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: iload_1
      59: iload_2
      60: iadd
      61: istore_1
      62: iload_1
      63: iconst_4
      64: if_icmplt     2
      67: aload_0
      68: getfield      #23                 // Field readNumberBuff:Ljava/nio/ByteBuffer;
      71: iconst_0
      72: invokevirtual #33                 // Method java/nio/ByteBuffer.getInt:(I)I
      75: istore_2
      76: iload_2
      77: ldc           #34                 // int 407708164
      79: if_icmpne     88
      82: aload_0
      83: invokespecial #35                 // Method readHeader:()V
      86: iconst_1
      87: ireturn
      88: iload_2
      89: iconst_4
      90: iushr
      91: ldc           #36                 // int 25481893
      93: if_icmpne     103
      96: aload_0
      97: invokespecial #37                 // Method skippableFrame:()V
     100: goto          113
     103: new           #30                 // class java/io/IOException
     106: dup
     107: ldc           #38                 // String Stream unsupported
     109: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: goto          0

  private void skippableFrame() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field in:Ljava/io/InputStream;
       5: invokespecial #39                 // Method readInt:(Ljava/io/InputStream;)I
       8: istore_1
       9: sipush        1024
      12: newarray       byte
      14: astore_2
      15: iload_1
      16: ifle          56
      19: aload_0
      20: getfield      #27                 // Field in:Ljava/io/InputStream;
      23: aload_2
      24: iconst_0
      25: iload_1
      26: aload_2
      27: arraylength
      28: invokestatic  #40                 // Method java/lang/Math.min:(II)I
      31: invokevirtual #29                 // Method java/io/InputStream.read:([BII)I
      34: istore_3
      35: iload_3
      36: ifge          49
      39: new           #30                 // class java/io/IOException
      42: dup
      43: ldc           #31                 // String Stream ended prematurely
      45: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: iload_1
      50: iload_3
      51: isub
      52: istore_1
      53: goto          15
      56: aload_0
      57: iconst_1
      58: putfield      #20                 // Field firstFrameHeaderRead:Z
      61: return

  private void readHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field headerBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #41                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #27                 // Field in:Ljava/io/InputStream;
      12: invokevirtual #42                 // Method java/io/InputStream.read:()I
      15: istore_1
      16: iload_1
      17: ifge          30
      20: new           #30                 // class java/io/IOException
      23: dup
      24: ldc           #31                 // String Stream ended prematurely
      26: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: getfield      #27                 // Field in:Ljava/io/InputStream;
      34: invokevirtual #42                 // Method java/io/InputStream.read:()I
      37: istore_2
      38: iload_2
      39: ifge          52
      42: new           #30                 // class java/io/IOException
      45: dup
      46: ldc           #31                 // String Stream ended prematurely
      48: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload_1
      53: sipush        255
      56: iand
      57: i2b
      58: istore_3
      59: iload_3
      60: invokestatic  #43                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FLG.fromByte:(B)Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG;
      63: astore        4
      65: aload_0
      66: getfield      #12                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      69: iload_3
      70: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      73: pop
      74: iload_2
      75: sipush        255
      78: iand
      79: i2b
      80: istore        5
      82: iload         5
      84: invokestatic  #45                 // Method net/jpountz/lz4/LZ4FrameOutputStream$BD.fromByte:(B)Lnet/jpountz/lz4/LZ4FrameOutputStream$BD;
      87: astore        6
      89: aload_0
      90: getfield      #12                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      93: iload         5
      95: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      98: pop
      99: aload_0
     100: new           #46                 // class net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo
     103: dup
     104: aload         4
     106: aload         6
     108: invokespecial #47                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo."<init>":(Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG;Lnet/jpountz/lz4/LZ4FrameOutputStream$BD;)V
     111: putfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
     114: aload         4
     116: getstatic     #48                 // Field net/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits.CONTENT_SIZE:Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;
     119: invokevirtual #49                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FLG.isEnabled:(Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;)Z
     122: ifeq          149
     125: aload_0
     126: aload_0
     127: aload_0
     128: getfield      #27                 // Field in:Ljava/io/InputStream;
     131: invokespecial #50                 // Method readLong:(Ljava/io/InputStream;)J
     134: putfield      #18                 // Field expectedContentSize:J
     137: aload_0
     138: getfield      #12                 // Field headerBuffer:Ljava/nio/ByteBuffer;
     141: aload_0
     142: getfield      #18                 // Field expectedContentSize:J
     145: invokevirtual #51                 // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
     148: pop
     149: aload_0
     150: lconst_0
     151: putfield      #19                 // Field totalContentSize:J
     154: aload_0
     155: getfield      #25                 // Field checksum:Lnet/jpountz/xxhash/XXHash32;
     158: aload_0
     159: getfield      #8                  // Field headerArray:[B
     162: iconst_0
     163: aload_0
     164: getfield      #12                 // Field headerBuffer:Ljava/nio/ByteBuffer;
     167: invokevirtual #52                 // Method java/nio/ByteBuffer.position:()I
     170: iconst_0
     171: invokevirtual #53                 // Method net/jpountz/xxhash/XXHash32.hash:([BIII)I
     174: bipush        8
     176: ishr
     177: sipush        255
     180: iand
     181: i2b
     182: istore        7
     184: aload_0
     185: getfield      #27                 // Field in:Ljava/io/InputStream;
     188: invokevirtual #42                 // Method java/io/InputStream.read:()I
     191: istore        8
     193: iload         8
     195: ifge          208
     198: new           #30                 // class java/io/IOException
     201: dup
     202: ldc           #31                 // String Stream ended prematurely
     204: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     207: athrow
     208: iload         7
     210: iload         8
     212: sipush        255
     215: iand
     216: i2b
     217: if_icmpeq     230
     220: new           #30                 // class java/io/IOException
     223: dup
     224: ldc           #54                 // String Stream frame descriptor corrupted
     226: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     229: athrow
     230: aload_0
     231: aload_0
     232: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
     235: invokevirtual #55                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.getBD:()Lnet/jpountz/lz4/LZ4FrameOutputStream$BD;
     238: invokevirtual #56                 // Method net/jpountz/lz4/LZ4FrameOutputStream$BD.getBlockMaximumSize:()I
     241: putfield      #15                 // Field maxBlockSize:I
     244: aload_0
     245: aload_0
     246: getfield      #15                 // Field maxBlockSize:I
     249: newarray       byte
     251: putfield      #57                 // Field compressedBuffer:[B
     254: aload_0
     255: aload_0
     256: getfield      #15                 // Field maxBlockSize:I
     259: newarray       byte
     261: putfield      #14                 // Field rawBuffer:[B
     264: aload_0
     265: aload_0
     266: getfield      #14                 // Field rawBuffer:[B
     269: invokestatic  #9                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     272: putfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
     275: aload_0
     276: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
     279: iconst_0
     280: invokevirtual #58                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     283: pop
     284: aload_0
     285: iconst_1
     286: putfield      #20                 // Field firstFrameHeaderRead:Z
     289: return

  private long readLong(java.io.InputStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: aload_0
       4: getfield      #23                 // Field readNumberBuff:Ljava/nio/ByteBuffer;
       7: invokevirtual #28                 // Method java/nio/ByteBuffer.array:()[B
      10: iload_2
      11: bipush        8
      13: iload_2
      14: isub
      15: invokevirtual #29                 // Method java/io/InputStream.read:([BII)I
      18: istore_3
      19: iload_3
      20: ifge          33
      23: new           #30                 // class java/io/IOException
      26: dup
      27: ldc           #31                 // String Stream ended prematurely
      29: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: iload_2
      34: iload_3
      35: iadd
      36: istore_2
      37: iload_2
      38: bipush        8
      40: if_icmplt     2
      43: aload_0
      44: getfield      #23                 // Field readNumberBuff:Ljava/nio/ByteBuffer;
      47: iconst_0
      48: invokevirtual #59                 // Method java/nio/ByteBuffer.getLong:(I)J
      51: lreturn

  private int readInt(java.io.InputStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: aload_0
       4: getfield      #23                 // Field readNumberBuff:Ljava/nio/ByteBuffer;
       7: invokevirtual #28                 // Method java/nio/ByteBuffer.array:()[B
      10: iload_2
      11: iconst_4
      12: iload_2
      13: isub
      14: invokevirtual #29                 // Method java/io/InputStream.read:([BII)I
      17: istore_3
      18: iload_3
      19: ifge          32
      22: new           #30                 // class java/io/IOException
      25: dup
      26: ldc           #31                 // String Stream ended prematurely
      28: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: iload_2
      33: iload_3
      34: iadd
      35: istore_2
      36: iload_2
      37: iconst_4
      38: if_icmplt     2
      41: aload_0
      42: getfield      #23                 // Field readNumberBuff:Ljava/nio/ByteBuffer;
      45: iconst_0
      46: invokevirtual #33                 // Method java/nio/ByteBuffer.getInt:(I)I
      49: ireturn

  private void readBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field in:Ljava/io/InputStream;
       5: invokespecial #39                 // Method readInt:(Ljava/io/InputStream;)I
       8: istore_1
       9: iload_1
      10: ldc           #60                 // int -2147483648
      12: iand
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore_2
      22: iload_1
      23: ldc           #61                 // int 2147483647
      25: iand
      26: istore_1
      27: iload_1
      28: ifne          117
      31: aload_0
      32: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
      35: getstatic     #62                 // Field net/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits.CONTENT_CHECKSUM:Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;
      38: invokevirtual #63                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.isEnabled:(Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;)Z
      41: ifeq          74
      44: aload_0
      45: aload_0
      46: getfield      #27                 // Field in:Ljava/io/InputStream;
      49: invokespecial #39                 // Method readInt:(Ljava/io/InputStream;)I
      52: istore_3
      53: iload_3
      54: aload_0
      55: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
      58: invokevirtual #64                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.currentStreamHash:()I
      61: if_icmpeq     74
      64: new           #30                 // class java/io/IOException
      67: dup
      68: ldc           #65                 // String Content checksum mismatch
      70: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
      78: getstatic     #48                 // Field net/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits.CONTENT_SIZE:Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;
      81: invokevirtual #63                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.isEnabled:(Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;)Z
      84: ifeq          109
      87: aload_0
      88: getfield      #18                 // Field expectedContentSize:J
      91: aload_0
      92: getfield      #19                 // Field totalContentSize:J
      95: lcmp
      96: ifeq          109
      99: new           #30                 // class java/io/IOException
     102: dup
     103: ldc           #66                 // String Size check mismatch
     105: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_0
     110: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
     113: invokevirtual #67                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.finish:()V
     116: return
     117: iload_2
     118: ifeq          129
     121: aload_0
     122: getfield      #57                 // Field compressedBuffer:[B
     125: astore_3
     126: goto          134
     129: aload_0
     130: getfield      #14                 // Field rawBuffer:[B
     133: astore_3
     134: iload_1
     135: aload_0
     136: getfield      #15                 // Field maxBlockSize:I
     139: if_icmple     179
     142: new           #30                 // class java/io/IOException
     145: dup
     146: getstatic     #68                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
     149: ldc           #69                 // String Block size %s exceeded max: %s
     151: iconst_2
     152: anewarray     #70                 // class java/lang/Object
     155: dup
     156: iconst_0
     157: iload_1
     158: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     161: aastore
     162: dup
     163: iconst_1
     164: aload_0
     165: getfield      #15                 // Field maxBlockSize:I
     168: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     171: aastore
     172: invokestatic  #72                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     175: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     178: athrow
     179: iconst_0
     180: istore        4
     182: iload         4
     184: iload_1
     185: if_icmpge     229
     188: aload_0
     189: getfield      #27                 // Field in:Ljava/io/InputStream;
     192: aload_3
     193: iload         4
     195: iload_1
     196: iload         4
     198: isub
     199: invokevirtual #29                 // Method java/io/InputStream.read:([BII)I
     202: istore        5
     204: iload         5
     206: ifge          219
     209: new           #30                 // class java/io/IOException
     212: dup
     213: ldc           #31                 // String Stream ended prematurely
     215: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     218: athrow
     219: iload         4
     221: iload         5
     223: iadd
     224: istore        4
     226: goto          182
     229: aload_0
     230: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
     233: getstatic     #73                 // Field net/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits.BLOCK_CHECKSUM:Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;
     236: invokevirtual #63                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.isEnabled:(Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;)Z
     239: ifeq          278
     242: aload_0
     243: aload_0
     244: getfield      #27                 // Field in:Ljava/io/InputStream;
     247: invokespecial #39                 // Method readInt:(Ljava/io/InputStream;)I
     250: istore        5
     252: iload         5
     254: aload_0
     255: getfield      #25                 // Field checksum:Lnet/jpountz/xxhash/XXHash32;
     258: aload_3
     259: iconst_0
     260: iload_1
     261: iconst_0
     262: invokevirtual #53                 // Method net/jpountz/xxhash/XXHash32.hash:([BIII)I
     265: if_icmpeq     278
     268: new           #30                 // class java/io/IOException
     271: dup
     272: ldc           #74                 // String Block checksum mismatch
     274: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     277: athrow
     278: iload_2
     279: ifeq          319
     282: aload_0
     283: getfield      #24                 // Field decompressor:Lnet/jpountz/lz4/LZ4SafeDecompressor;
     286: aload_3
     287: iconst_0
     288: iload_1
     289: aload_0
     290: getfield      #14                 // Field rawBuffer:[B
     293: iconst_0
     294: aload_0
     295: getfield      #14                 // Field rawBuffer:[B
     298: arraylength
     299: invokevirtual #75                 // Method net/jpountz/lz4/LZ4SafeDecompressor.decompress:([BII[BII)I
     302: istore        5
     304: goto          322
     307: astore        6
     309: new           #30                 // class java/io/IOException
     312: dup
     313: aload         6
     315: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     318: athrow
     319: iload_1
     320: istore        5
     322: aload_0
     323: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
     326: getstatic     #62                 // Field net/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits.CONTENT_CHECKSUM:Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;
     329: invokevirtual #63                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.isEnabled:(Lnet/jpountz/lz4/LZ4FrameOutputStream$FLG$Bits;)Z
     332: ifeq          349
     335: aload_0
     336: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
     339: aload_0
     340: getfield      #14                 // Field rawBuffer:[B
     343: iconst_0
     344: iload         5
     346: invokevirtual #78                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.updateStreamHash:([BII)V
     349: aload_0
     350: dup
     351: getfield      #19                 // Field totalContentSize:J
     354: iload         5
     356: i2l
     357: ladd
     358: putfield      #19                 // Field totalContentSize:J
     361: aload_0
     362: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
     365: iload         5
     367: invokevirtual #58                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     370: pop
     371: aload_0
     372: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
     375: invokevirtual #41                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     378: pop
     379: return
    Exception table:
       from    to  target type
         282   304   307   Class net/jpountz/lz4/LZ4Exception

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field firstFrameHeaderRead:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      14: ifne          66
      17: aload_0
      18: getfield      #20                 // Field firstFrameHeaderRead:Z
      21: ifeq          34
      24: aload_0
      25: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
      28: invokevirtual #80                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.isFinished:()Z
      31: ifeq          59
      34: aload_0
      35: getfield      #20                 // Field firstFrameHeaderRead:Z
      38: ifeq          50
      41: aload_0
      42: getfield      #26                 // Field readSingleFrame:Z
      45: ifeq          50
      48: iconst_m1
      49: ireturn
      50: aload_0
      51: invokespecial #81                 // Method nextFrameInfo:()Z
      54: ifne          59
      57: iconst_m1
      58: ireturn
      59: aload_0
      60: invokespecial #82                 // Method readBlock:()V
      63: goto          0
      66: aload_0
      67: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
      70: invokevirtual #83                 // Method java/nio/ByteBuffer.get:()B
      73: sipush        255
      76: iand
      77: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iflt          16
       4: iload_3
       5: iflt          16
       8: iload_2
       9: iload_3
      10: iadd
      11: aload_1
      12: arraylength
      13: if_icmple     24
      16: new           #84                 // class java/lang/IndexOutOfBoundsException
      19: dup
      20: invokespecial #85                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #20                 // Field firstFrameHeaderRead:Z
      28: ifeq          41
      31: aload_0
      32: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
      35: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      38: ifne          90
      41: aload_0
      42: getfield      #20                 // Field firstFrameHeaderRead:Z
      45: ifeq          58
      48: aload_0
      49: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
      52: invokevirtual #80                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.isFinished:()Z
      55: ifeq          83
      58: aload_0
      59: getfield      #20                 // Field firstFrameHeaderRead:Z
      62: ifeq          74
      65: aload_0
      66: getfield      #26                 // Field readSingleFrame:Z
      69: ifeq          74
      72: iconst_m1
      73: ireturn
      74: aload_0
      75: invokespecial #81                 // Method nextFrameInfo:()Z
      78: ifne          83
      81: iconst_m1
      82: ireturn
      83: aload_0
      84: invokespecial #82                 // Method readBlock:()V
      87: goto          24
      90: iload_3
      91: aload_0
      92: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
      95: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      98: invokestatic  #40                 // Method java/lang/Math.min:(II)I
     101: istore_3
     102: aload_0
     103: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
     106: aload_1
     107: iload_2
     108: iload_3
     109: invokevirtual #86                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     112: pop
     113: iload_3
     114: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          8
       6: lconst_0
       7: lreturn
       8: aload_0
       9: getfield      #20                 // Field firstFrameHeaderRead:Z
      12: ifeq          25
      15: aload_0
      16: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
      19: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      22: ifne          74
      25: aload_0
      26: getfield      #20                 // Field firstFrameHeaderRead:Z
      29: ifeq          42
      32: aload_0
      33: getfield      #21                 // Field frameInfo:Lnet/jpountz/lz4/LZ4FrameOutputStream$FrameInfo;
      36: invokevirtual #80                 // Method net/jpountz/lz4/LZ4FrameOutputStream$FrameInfo.isFinished:()Z
      39: ifeq          67
      42: aload_0
      43: getfield      #20                 // Field firstFrameHeaderRead:Z
      46: ifeq          58
      49: aload_0
      50: getfield      #26                 // Field readSingleFrame:Z
      53: ifeq          58
      56: lconst_0
      57: lreturn
      58: aload_0
      59: invokespecial #81                 // Method nextFrameInfo:()Z
      62: ifne          67
      65: lconst_0
      66: lreturn
      67: aload_0
      68: invokespecial #82                 // Method readBlock:()V
      71: goto          8
      74: lload_1
      75: aload_0
      76: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
      79: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
      82: i2l
      83: invokestatic  #87                 // Method java/lang/Math.min:(JJ)J
      86: lstore_1
      87: aload_0
      88: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
      91: aload_0
      92: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
      95: invokevirtual #52                 // Method java/nio/ByteBuffer.position:()I
      98: lload_1
      99: l2i
     100: iadd
     101: invokevirtual #88                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     104: pop
     105: lload_1
     106: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #79                 // Method java/nio/ByteBuffer.remaining:()I
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #89                 // Method java/io/FilterInputStream.close:()V
       4: return

  public synchronized void mark(int);
    Code:
       0: new           #90                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #91                 // String mark not supported
       6: invokespecial #92                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: new           #90                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #93                 // String reset not supported
       6: invokespecial #92                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public long getExpectedContentSize() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field readSingleFrame:Z
       4: ifne          17
       7: new           #90                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #94                 // String Operation not permitted when multiple frames can be read
      13: invokespecial #92                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #20                 // Field firstFrameHeaderRead:Z
      21: ifne          35
      24: aload_0
      25: invokespecial #81                 // Method nextFrameInfo:()Z
      28: ifne          35
      31: ldc2_w        #16                 // long -1l
      34: lreturn
      35: aload_0
      36: getfield      #18                 // Field expectedContentSize:J
      39: lreturn

  public boolean isExpectedContentSizeDefined() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field readSingleFrame:Z
       4: ifeq          38
       7: aload_0
       8: getfield      #20                 // Field firstFrameHeaderRead:Z
      11: ifne          23
      14: aload_0
      15: invokespecial #81                 // Method nextFrameInfo:()Z
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #18                 // Field expectedContentSize:J
      27: lconst_0
      28: lcmp
      29: iflt          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn
      38: iconst_0
      39: ireturn
}
