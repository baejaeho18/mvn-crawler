Compiled from "JDKSpecific.java"
final class org.wildfly.common.archive.JDKSpecific {
  private org.wildfly.common.archive.JDKSpecific();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static java.nio.ByteBuffer inflate(java.util.zip.Inflater, java.nio.ByteBuffer[], long, int, int) throws java.util.zip.DataFormatException, java.io.IOException;
    Code:
       0: iconst_0
       1: istore        6
       3: iload         5
       5: newarray       byte
       7: astore        7
       9: iconst_0
      10: istore        8
      12: iload         6
      14: iload         4
      16: if_icmpge     121
      19: iload         4
      21: iload         6
      23: isub
      24: istore        9
      26: aload_1
      27: lload_2
      28: iload         6
      30: i2l
      31: ladd
      32: invokestatic  #2                  // Method org/wildfly/common/archive/Archive.bufIdx:(J)I
      35: aaload
      36: invokevirtual #3                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      39: astore        10
      41: aload         10
      43: lload_2
      44: iload         6
      46: i2l
      47: ladd
      48: invokestatic  #4                  // Method org/wildfly/common/archive/Archive.bufOffs:(J)I
      51: invokevirtual #5                  // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      54: pop
      55: aload         10
      57: aload         10
      59: invokevirtual #6                  // Method java/nio/ByteBuffer.capacity:()I
      62: aload         10
      64: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
      67: iload         9
      69: iadd
      70: invokestatic  #8                  // Method java/lang/Math.min:(II)I
      73: invokevirtual #9                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
      76: pop
      77: iload         6
      79: aload         10
      81: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      84: iadd
      85: istore        6
      87: aload_0
      88: aload         10
      90: invokevirtual #11                 // Method java/util/zip/Inflater.setInput:(Ljava/nio/ByteBuffer;)V
      93: iload         8
      95: aload_0
      96: aload         7
      98: iload         8
     100: iload         5
     102: iload         8
     104: isub
     105: invokevirtual #12                 // Method java/util/zip/Inflater.inflate:([BII)I
     108: iadd
     109: istore        8
     111: aload_0
     112: invokevirtual #13                 // Method java/util/zip/Inflater.needsInput:()Z
     115: ifeq          93
     118: goto          12
     121: aload_0
     122: invokevirtual #14                 // Method java/util/zip/Inflater.finished:()Z
     125: ifne          138
     128: new           #15                 // class java/io/IOException
     131: dup
     132: ldc           #16                 // String Corrupted compression stream
     134: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     137: athrow
     138: aload         7
     140: invokestatic  #18                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     143: areturn
}
