Compiled from "FastIntegerMath.java"
class com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath {
  public static final java.math.BigInteger FIVE;

  static final java.math.BigInteger TEN_POW_16;

  static final java.math.BigInteger FIVE_POW_16;

  private static final java.math.BigInteger[] SMALL_POWERS_OF_TEN;

  private com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: return

  static java.math.BigInteger computePowerOfTen(java.util.NavigableMap<java.lang.Integer, java.math.BigInteger>, int);
    Code:
       0: iload_1
       1: getstatic     #30                 // Field SMALL_POWERS_OF_TEN:[Ljava/math/BigInteger;
       4: arraylength
       5: if_icmpge     14
       8: getstatic     #30                 // Field SMALL_POWERS_OF_TEN:[Ljava/math/BigInteger;
      11: iload_1
      12: aaload
      13: areturn
      14: aload_0
      15: ifnull        80
      18: aload_0
      19: iload_1
      20: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokeinterface #42,  2           // InterfaceMethod java/util/NavigableMap.floorEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
      28: astore_2
      29: aload_2
      30: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      35: checkcast     #32                 // class java/lang/Integer
      38: astore_3
      39: aload_3
      40: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      43: iload_1
      44: if_icmpne     57
      47: aload_2
      48: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      53: checkcast     #55                 // class java/math/BigInteger
      56: areturn
      57: aload_2
      58: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: checkcast     #55                 // class java/math/BigInteger
      66: aload_0
      67: iload_1
      68: aload_3
      69: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      72: isub
      73: invokestatic  #57                 // Method computePowerOfTen:(Ljava/util/NavigableMap;I)Ljava/math/BigInteger;
      76: invokestatic  #63                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier.multiply:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      79: areturn
      80: getstatic     #65                 // Field FIVE:Ljava/math/BigInteger;
      83: iload_1
      84: invokevirtual #69                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
      87: iload_1
      88: invokevirtual #72                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      91: areturn

  static java.math.BigInteger computeTenRaisedByNFloor16Recursive(java.util.NavigableMap<java.lang.Integer, java.math.BigInteger>, int);
    Code:
       0: iload_1
       1: bipush        -16
       3: iand
       4: istore_1
       5: aload_0
       6: iload_1
       7: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: invokeinterface #42,  2           // InterfaceMethod java/util/NavigableMap.floorEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
      15: astore_2
      16: aload_2
      17: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      22: checkcast     #32                 // class java/lang/Integer
      25: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      28: istore_3
      29: aload_2
      30: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      35: checkcast     #55                 // class java/math/BigInteger
      38: astore        4
      40: iload_3
      41: iload_1
      42: if_icmpne     48
      45: aload         4
      47: areturn
      48: iload_1
      49: iload_3
      50: isub
      51: istore        5
      53: aload_0
      54: iload         5
      56: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: invokeinterface #86,  2           // InterfaceMethod java/util/NavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #55                 // class java/math/BigInteger
      67: astore        6
      69: aload         6
      71: ifnonnull     96
      74: aload_0
      75: iload         5
      77: invokestatic  #88                 // Method computeTenRaisedByNFloor16Recursive:(Ljava/util/NavigableMap;I)Ljava/math/BigInteger;
      80: astore        6
      82: aload_0
      83: iload         5
      85: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      88: aload         6
      90: invokeinterface #92,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: aload         4
      98: aload         6
     100: invokestatic  #63                 // Method com/fasterxml/jackson/core/io/doubleparser/FftMultiplier.multiply:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     103: areturn

  static java.util.NavigableMap<java.lang.Integer, java.math.BigInteger> createPowersOfTenFloor16Map();
    Code:
       0: new           #101                // class java/util/TreeMap
       3: dup
       4: invokespecial #102                // Method java/util/TreeMap."<init>":()V
       7: astore_0
       8: aload_0
       9: iconst_0
      10: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: getstatic     #105                // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      16: invokeinterface #92,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: bipush        16
      25: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: getstatic     #107                // Field TEN_POW_16:Ljava/math/BigInteger;
      31: invokeinterface #92,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: areturn

  public static long estimateNumBits(long);
    Code:
       0: lload_0
       1: ldc2_w        #110                // long 3402l
       4: lmul
       5: bipush        10
       7: lushr
       8: lconst_1
       9: ladd
      10: lreturn

  static java.util.NavigableMap<java.lang.Integer, java.math.BigInteger> fillPowersOf10Floor16(int, int);
    Code:
       0: new           #101                // class java/util/TreeMap
       3: dup
       4: invokespecial #102                // Method java/util/TreeMap."<init>":()V
       7: astore_2
       8: aload_2
       9: iconst_0
      10: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: ldc2_w        #117                // long 5l
      16: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      19: invokeinterface #92,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_2
      26: bipush        16
      28: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: getstatic     #123                // Field FIVE_POW_16:Ljava/math/BigInteger;
      34: invokeinterface #92,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_2
      41: iload_0
      42: iload_1
      43: invokestatic  #127                // Method fillPowersOfNFloor16Recursive:(Ljava/util/NavigableMap;II)V
      46: aload_2
      47: invokeinterface #131,  1          // InterfaceMethod java/util/NavigableMap.entrySet:()Ljava/util/Set;
      52: invokeinterface #137,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #143,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          115
      67: aload_3
      68: invokeinterface #146,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #9                  // class java/util/Map$Entry
      76: astore        4
      78: aload         4
      80: aload         4
      82: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      87: checkcast     #55                 // class java/math/BigInteger
      90: aload         4
      92: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      97: checkcast     #32                 // class java/lang/Integer
     100: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
     103: invokevirtual #72                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
     106: invokeinterface #149,  2          // InterfaceMethod java/util/Map$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: goto          58
     115: aload_2
     116: areturn

  static void fillPowersOfNFloor16Recursive(java.util.NavigableMap<java.lang.Integer, java.math.BigInteger>, int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: istore_3
       4: iload_3
       5: bipush        18
       7: if_icmpgt     11
      10: return
      11: iload_1
      12: iload_2
      13: invokestatic  #160                // Method splitFloor16:(II)I
      16: istore        4
      18: iload_2
      19: iload         4
      21: isub
      22: istore        5
      24: aload_0
      25: iload         5
      27: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: invokeinterface #164,  2          // InterfaceMethod java/util/NavigableMap.containsKey:(Ljava/lang/Object;)Z
      35: ifne          70
      38: aload_0
      39: iload_1
      40: iload         4
      42: invokestatic  #127                // Method fillPowersOfNFloor16Recursive:(Ljava/util/NavigableMap;II)V
      45: aload_0
      46: iload         4
      48: iload_2
      49: invokestatic  #127                // Method fillPowersOfNFloor16Recursive:(Ljava/util/NavigableMap;II)V
      52: aload_0
      53: iload         5
      55: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: aload_0
      59: iload         5
      61: invokestatic  #88                 // Method computeTenRaisedByNFloor16Recursive:(Ljava/util/NavigableMap;I)Ljava/math/BigInteger;
      64: invokeinterface #92,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: return

  static com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$UInt128 fullMultiplication(long, long);
    Code:
       0: new           #7                  // class com/fasterxml/jackson/core/io/doubleparser/FastIntegerMath$UInt128
       3: dup
       4: lload_0
       5: lload_2
       6: invokestatic  #174                // Method java/lang/Math.unsignedMultiplyHigh:(JJ)J
       9: lload_0
      10: lload_2
      11: lmul
      12: invokespecial #177                // Method com/fasterxml/jackson/core/io/doubleparser/FastIntegerMath$UInt128."<init>":(JJ)V
      15: areturn

  static int splitFloor16(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iadd
       3: iconst_1
       4: iushr
       5: istore_2
       6: iload_1
       7: iload_1
       8: iload_2
       9: isub
      10: bipush        15
      12: iadd
      13: iconst_4
      14: ishr
      15: iconst_4
      16: ishl
      17: isub
      18: istore_2
      19: iload_2
      20: ireturn

  static {};
    Code:
       0: ldc2_w        #117                // long 5l
       3: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       6: putstatic     #65                 // Field FIVE:Ljava/math/BigInteger;
       9: ldc2_w        #181                // long 10000000000000000l
      12: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      15: putstatic     #107                // Field TEN_POW_16:Ljava/math/BigInteger;
      18: ldc2_w        #183                // long 152587890625l
      21: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      24: putstatic     #123                // Field FIVE_POW_16:Ljava/math/BigInteger;
      27: bipush        16
      29: anewarray     #55                 // class java/math/BigInteger
      32: dup
      33: iconst_0
      34: getstatic     #105                // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      37: aastore
      38: dup
      39: iconst_1
      40: getstatic     #187                // Field java/math/BigInteger.TEN:Ljava/math/BigInteger;
      43: aastore
      44: dup
      45: iconst_2
      46: ldc2_w        #188                // long 100l
      49: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      52: aastore
      53: dup
      54: iconst_3
      55: ldc2_w        #190                // long 1000l
      58: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      61: aastore
      62: dup
      63: iconst_4
      64: ldc2_w        #192                // long 10000l
      67: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      70: aastore
      71: dup
      72: iconst_5
      73: ldc2_w        #194                // long 100000l
      76: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      79: aastore
      80: dup
      81: bipush        6
      83: ldc2_w        #196                // long 1000000l
      86: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      89: aastore
      90: dup
      91: bipush        7
      93: ldc2_w        #198                // long 10000000l
      96: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      99: aastore
     100: dup
     101: bipush        8
     103: ldc2_w        #200                // long 100000000l
     106: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     109: aastore
     110: dup
     111: bipush        9
     113: ldc2_w        #202                // long 1000000000l
     116: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     119: aastore
     120: dup
     121: bipush        10
     123: ldc2_w        #204                // long 10000000000l
     126: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     129: aastore
     130: dup
     131: bipush        11
     133: ldc2_w        #206                // long 100000000000l
     136: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     139: aastore
     140: dup
     141: bipush        12
     143: ldc2_w        #208                // long 1000000000000l
     146: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     149: aastore
     150: dup
     151: bipush        13
     153: ldc2_w        #210                // long 10000000000000l
     156: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     159: aastore
     160: dup
     161: bipush        14
     163: ldc2_w        #212                // long 100000000000000l
     166: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     169: aastore
     170: dup
     171: bipush        15
     173: ldc2_w        #214                // long 1000000000000000l
     176: invokestatic  #121                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     179: aastore
     180: putstatic     #30                 // Field SMALL_POWERS_OF_TEN:[Ljava/math/BigInteger;
     183: return
}
