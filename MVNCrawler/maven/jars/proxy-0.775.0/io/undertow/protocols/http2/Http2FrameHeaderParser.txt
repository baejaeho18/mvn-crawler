Compiled from "Http2FrameHeaderParser.java"
class io.undertow.protocols.http2.Http2FrameHeaderParser implements io.undertow.server.protocol.framed.FrameHeaderData {
  final byte[] header;

  int read;

  int length;

  int type;

  int flags;

  int streamId;

  io.undertow.protocols.http2.Http2PushBackParser parser;

  io.undertow.protocols.http2.Http2HeadersParser continuationParser;

  private static final int SECOND_RESERVED_MASK;

  private io.undertow.protocols.http2.Http2Channel http2Channel;

  io.undertow.protocols.http2.Http2FrameHeaderParser(io.undertow.protocols.http2.Http2Channel, io.undertow.protocols.http2.Http2HeadersParser);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        9
       7: newarray       byte
       9: putfield      #3                  // Field header:[B
      12: aload_0
      13: iconst_0
      14: putfield      #4                  // Field read:I
      17: aload_0
      18: aconst_null
      19: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
      22: aload_0
      23: aconst_null
      24: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
      27: aload_0
      28: aload_1
      29: putfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
      32: aload_0
      33: aload_2
      34: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
      37: return

  public boolean handle(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
       4: ifnonnull     755
       7: aload_0
       8: aload_1
       9: invokevirtual #8                  // Method parseFrameHeader:(Ljava/nio/ByteBuffer;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
      21: ifnull        50
      24: aload_0
      25: getfield      #9                  // Field type:I
      28: bipush        9
      30: if_icmpeq     50
      33: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
      36: dup
      37: iconst_1
      38: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      41: invokeinterface #12,  1           // InterfaceMethod io/undertow/UndertowMessages.expectedContinuationFrame:()Ljava/lang/String;
      46: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #9                  // Field type:I
      54: tableswitch   { // 0 to 9
                     0: 108
                     1: 151
                     2: 671
                     3: 248
                     4: 556
                     5: 369
                     6: 485
                     7: 441
                     8: 627
                     9: 292
               default: 740
          }
     108: aload_0
     109: getfield      #14                 // Field streamId:I
     112: ifne          133
     115: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     118: dup
     119: iconst_1
     120: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     123: iconst_0
     124: invokeinterface #15,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustNotBeZeroForFrameType:(I)Ljava/lang/String;
     129: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     132: athrow
     133: aload_0
     134: new           #16                 // class io/undertow/protocols/http2/Http2DataFrameParser
     137: dup
     138: aload_0
     139: getfield      #17                 // Field length:I
     142: invokespecial #18                 // Method io/undertow/protocols/http2/Http2DataFrameParser."<init>":(I)V
     145: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     148: goto          755
     151: aload_0
     152: getfield      #14                 // Field streamId:I
     155: ifne          176
     158: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     161: dup
     162: iconst_1
     163: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     166: iconst_1
     167: invokeinterface #15,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustNotBeZeroForFrameType:(I)Ljava/lang/String;
     172: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     175: athrow
     176: aload_0
     177: new           #19                 // class io/undertow/protocols/http2/Http2HeadersParser
     180: dup
     181: aload_0
     182: getfield      #17                 // Field length:I
     185: aload_0
     186: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     189: invokevirtual #20                 // Method io/undertow/protocols/http2/Http2Channel.getDecoder:()Lio/undertow/protocols/http2/HpackDecoder;
     192: aload_0
     193: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     196: invokevirtual #21                 // Method io/undertow/protocols/http2/Http2Channel.isClient:()Z
     199: aload_0
     200: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     203: invokevirtual #22                 // Method io/undertow/protocols/http2/Http2Channel.getMaxHeaders:()I
     206: aload_0
     207: getfield      #14                 // Field streamId:I
     210: aload_0
     211: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     214: invokevirtual #23                 // Method io/undertow/protocols/http2/Http2Channel.getMaxHeaderListSize:()I
     217: invokespecial #24                 // Method io/undertow/protocols/http2/Http2HeadersParser."<init>":(ILio/undertow/protocols/http2/HpackDecoder;ZIII)V
     220: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     223: aload_0
     224: getfield      #25                 // Field flags:I
     227: iconst_4
     228: invokestatic  #26                 // Method org/xnio/Bits.allAreClear:(II)Z
     231: ifeq          755
     234: aload_0
     235: aload_0
     236: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     239: checkcast     #19                 // class io/undertow/protocols/http2/Http2HeadersParser
     242: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     245: goto          755
     248: aload_0
     249: getfield      #17                 // Field length:I
     252: iconst_4
     253: if_icmpeq     274
     256: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     259: dup
     260: bipush        6
     262: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     265: invokeinterface #27,  1           // InterfaceMethod io/undertow/UndertowMessages.incorrectFrameSize:()Ljava/lang/String;
     270: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     273: athrow
     274: aload_0
     275: new           #28                 // class io/undertow/protocols/http2/Http2RstStreamParser
     278: dup
     279: aload_0
     280: getfield      #17                 // Field length:I
     283: invokespecial #29                 // Method io/undertow/protocols/http2/Http2RstStreamParser."<init>":(I)V
     286: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     289: goto          755
     292: aload_0
     293: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     296: ifnonnull     316
     299: aload_0
     300: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     303: iconst_1
     304: invokevirtual #30                 // Method io/undertow/protocols/http2/Http2Channel.sendGoAway:(I)V
     307: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     310: invokeinterface #31,  1           // InterfaceMethod io/undertow/UndertowMessages.http2ContinuationFrameNotExpected:()Ljava/io/IOException;
     315: athrow
     316: aload_0
     317: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     320: invokevirtual #32                 // Method io/undertow/protocols/http2/Http2HeadersParser.getStreamId:()I
     323: aload_0
     324: getfield      #14                 // Field streamId:I
     327: if_icmpeq     347
     330: aload_0
     331: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     334: iconst_1
     335: invokevirtual #30                 // Method io/undertow/protocols/http2/Http2Channel.sendGoAway:(I)V
     338: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     341: invokeinterface #31,  1           // InterfaceMethod io/undertow/UndertowMessages.http2ContinuationFrameNotExpected:()Ljava/io/IOException;
     346: athrow
     347: aload_0
     348: aload_0
     349: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     352: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     355: aload_0
     356: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     359: aload_0
     360: getfield      #17                 // Field length:I
     363: invokevirtual #33                 // Method io/undertow/protocols/http2/Http2HeadersParser.moreData:(I)V
     366: goto          755
     369: aload_0
     370: new           #34                 // class io/undertow/protocols/http2/Http2PushPromiseParser
     373: dup
     374: aload_0
     375: getfield      #17                 // Field length:I
     378: aload_0
     379: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     382: invokevirtual #20                 // Method io/undertow/protocols/http2/Http2Channel.getDecoder:()Lio/undertow/protocols/http2/HpackDecoder;
     385: aload_0
     386: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     389: invokevirtual #21                 // Method io/undertow/protocols/http2/Http2Channel.isClient:()Z
     392: aload_0
     393: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     396: invokevirtual #22                 // Method io/undertow/protocols/http2/Http2Channel.getMaxHeaders:()I
     399: aload_0
     400: getfield      #14                 // Field streamId:I
     403: aload_0
     404: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     407: invokevirtual #23                 // Method io/undertow/protocols/http2/Http2Channel.getMaxHeaderListSize:()I
     410: invokespecial #35                 // Method io/undertow/protocols/http2/Http2PushPromiseParser."<init>":(ILio/undertow/protocols/http2/HpackDecoder;ZIII)V
     413: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     416: aload_0
     417: getfield      #25                 // Field flags:I
     420: iconst_4
     421: invokestatic  #26                 // Method org/xnio/Bits.allAreClear:(II)Z
     424: ifeq          755
     427: aload_0
     428: aload_0
     429: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     432: checkcast     #19                 // class io/undertow/protocols/http2/Http2HeadersParser
     435: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     438: goto          755
     441: aload_0
     442: getfield      #14                 // Field streamId:I
     445: ifeq          467
     448: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     451: dup
     452: iconst_1
     453: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     456: bipush        7
     458: invokeinterface #36,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustBeZeroForFrameType:(I)Ljava/lang/String;
     463: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     466: athrow
     467: aload_0
     468: new           #37                 // class io/undertow/protocols/http2/Http2GoAwayParser
     471: dup
     472: aload_0
     473: getfield      #17                 // Field length:I
     476: invokespecial #38                 // Method io/undertow/protocols/http2/Http2GoAwayParser."<init>":(I)V
     479: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     482: goto          755
     485: aload_0
     486: getfield      #17                 // Field length:I
     489: bipush        8
     491: if_icmpeq     512
     494: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     497: dup
     498: bipush        6
     500: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     503: invokeinterface #39,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidPingSize:()Ljava/lang/String;
     508: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     511: athrow
     512: aload_0
     513: getfield      #14                 // Field streamId:I
     516: ifeq          538
     519: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     522: dup
     523: iconst_1
     524: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     527: bipush        6
     529: invokeinterface #36,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustBeZeroForFrameType:(I)Ljava/lang/String;
     534: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     537: athrow
     538: aload_0
     539: new           #40                 // class io/undertow/protocols/http2/Http2PingParser
     542: dup
     543: aload_0
     544: getfield      #17                 // Field length:I
     547: invokespecial #41                 // Method io/undertow/protocols/http2/Http2PingParser."<init>":(I)V
     550: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     553: goto          755
     556: aload_0
     557: getfield      #17                 // Field length:I
     560: bipush        6
     562: irem
     563: ifeq          584
     566: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     569: dup
     570: bipush        6
     572: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     575: invokeinterface #27,  1           // InterfaceMethod io/undertow/UndertowMessages.incorrectFrameSize:()Ljava/lang/String;
     580: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     583: athrow
     584: aload_0
     585: getfield      #14                 // Field streamId:I
     588: ifeq          609
     591: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     594: dup
     595: iconst_1
     596: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     599: iconst_4
     600: invokeinterface #36,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustBeZeroForFrameType:(I)Ljava/lang/String;
     605: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     608: athrow
     609: aload_0
     610: new           #42                 // class io/undertow/protocols/http2/Http2SettingsParser
     613: dup
     614: aload_0
     615: getfield      #17                 // Field length:I
     618: invokespecial #43                 // Method io/undertow/protocols/http2/Http2SettingsParser."<init>":(I)V
     621: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     624: goto          755
     627: aload_0
     628: getfield      #17                 // Field length:I
     631: iconst_4
     632: if_icmpeq     653
     635: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     638: dup
     639: bipush        6
     641: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     644: invokeinterface #27,  1           // InterfaceMethod io/undertow/UndertowMessages.incorrectFrameSize:()Ljava/lang/String;
     649: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     652: athrow
     653: aload_0
     654: new           #44                 // class io/undertow/protocols/http2/Http2WindowUpdateParser
     657: dup
     658: aload_0
     659: getfield      #17                 // Field length:I
     662: invokespecial #45                 // Method io/undertow/protocols/http2/Http2WindowUpdateParser."<init>":(I)V
     665: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     668: goto          755
     671: aload_0
     672: getfield      #17                 // Field length:I
     675: iconst_5
     676: if_icmpeq     697
     679: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     682: dup
     683: bipush        6
     685: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     688: invokeinterface #27,  1           // InterfaceMethod io/undertow/UndertowMessages.incorrectFrameSize:()Ljava/lang/String;
     693: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     696: athrow
     697: aload_0
     698: getfield      #14                 // Field streamId:I
     701: ifne          722
     704: new           #10                 // class io/undertow/protocols/http2/ConnectionErrorException
     707: dup
     708: iconst_1
     709: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     712: iconst_2
     713: invokeinterface #15,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustNotBeZeroForFrameType:(I)Ljava/lang/String;
     718: invokespecial #13                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     721: athrow
     722: aload_0
     723: new           #46                 // class io/undertow/protocols/http2/Http2PriorityParser
     726: dup
     727: aload_0
     728: getfield      #17                 // Field length:I
     731: invokespecial #47                 // Method io/undertow/protocols/http2/Http2PriorityParser."<init>":(I)V
     734: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     737: goto          755
     740: aload_0
     741: new           #48                 // class io/undertow/protocols/http2/Http2DiscardParser
     744: dup
     745: aload_0
     746: getfield      #17                 // Field length:I
     749: invokespecial #49                 // Method io/undertow/protocols/http2/Http2DiscardParser."<init>":(I)V
     752: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     755: aload_0
     756: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     759: aload_1
     760: aload_0
     761: invokevirtual #50                 // Method io/undertow/protocols/http2/Http2PushBackParser.parse:(Ljava/nio/ByteBuffer;Lio/undertow/protocols/http2/Http2FrameHeaderParser;)V
     764: aload_0
     765: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     768: ifnull        787
     771: aload_0
     772: getfield      #25                 // Field flags:I
     775: iconst_4
     776: invokestatic  #51                 // Method org/xnio/Bits.anyAreSet:(II)Z
     779: ifeq          787
     782: aload_0
     783: aconst_null
     784: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     787: aload_0
     788: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     791: invokevirtual #52                 // Method io/undertow/protocols/http2/Http2PushBackParser.isFinished:()Z
     794: ireturn

  private boolean parseFrameHeader(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field read:I
       4: bipush        9
       6: if_icmpge     39
       9: aload_1
      10: invokevirtual #53                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      13: ifeq          39
      16: aload_0
      17: getfield      #3                  // Field header:[B
      20: aload_0
      21: dup
      22: getfield      #4                  // Field read:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #4                  // Field read:I
      31: aload_1
      32: invokevirtual #54                 // Method java/nio/ByteBuffer.get:()B
      35: bastore
      36: goto          0
      39: aload_0
      40: getfield      #4                  // Field read:I
      43: bipush        9
      45: if_icmpeq     50
      48: iconst_0
      49: ireturn
      50: aload_0
      51: aload_0
      52: getfield      #3                  // Field header:[B
      55: iconst_0
      56: baload
      57: sipush        255
      60: iand
      61: bipush        16
      63: ishl
      64: putfield      #17                 // Field length:I
      67: aload_0
      68: dup
      69: getfield      #17                 // Field length:I
      72: aload_0
      73: getfield      #3                  // Field header:[B
      76: iconst_1
      77: baload
      78: sipush        255
      81: iand
      82: bipush        8
      84: ishl
      85: iadd
      86: putfield      #17                 // Field length:I
      89: aload_0
      90: dup
      91: getfield      #17                 // Field length:I
      94: aload_0
      95: getfield      #3                  // Field header:[B
      98: iconst_2
      99: baload
     100: sipush        255
     103: iand
     104: iadd
     105: putfield      #17                 // Field length:I
     108: aload_0
     109: aload_0
     110: getfield      #3                  // Field header:[B
     113: iconst_3
     114: baload
     115: sipush        255
     118: iand
     119: putfield      #9                  // Field type:I
     122: aload_0
     123: aload_0
     124: getfield      #3                  // Field header:[B
     127: iconst_4
     128: baload
     129: sipush        255
     132: iand
     133: putfield      #25                 // Field flags:I
     136: aload_0
     137: aload_0
     138: getfield      #3                  // Field header:[B
     141: iconst_5
     142: baload
     143: sipush        -129
     146: iand
     147: sipush        255
     150: iand
     151: bipush        24
     153: ishl
     154: putfield      #14                 // Field streamId:I
     157: aload_0
     158: dup
     159: getfield      #14                 // Field streamId:I
     162: aload_0
     163: getfield      #3                  // Field header:[B
     166: bipush        6
     168: baload
     169: sipush        255
     172: iand
     173: bipush        16
     175: ishl
     176: iadd
     177: putfield      #14                 // Field streamId:I
     180: aload_0
     181: dup
     182: getfield      #14                 // Field streamId:I
     185: aload_0
     186: getfield      #3                  // Field header:[B
     189: bipush        7
     191: baload
     192: sipush        255
     195: iand
     196: bipush        8
     198: ishl
     199: iadd
     200: putfield      #14                 // Field streamId:I
     203: aload_0
     204: dup
     205: getfield      #14                 // Field streamId:I
     208: aload_0
     209: getfield      #3                  // Field header:[B
     212: bipush        8
     214: baload
     215: sipush        255
     218: iand
     219: iadd
     220: putfield      #14                 // Field streamId:I
     223: iconst_1
     224: ireturn

  public long getFrameLength();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:I
       4: ifeq          9
       7: lconst_0
       8: lreturn
       9: aload_0
      10: getfield      #17                 // Field length:I
      13: i2l
      14: lreturn

  int getActualLength();
    Code:
       0: aload_0
       1: getfield      #17                 // Field length:I
       4: ireturn

  public io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<?, ?, ?> getExistingChannel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:I
       4: ifeq          24
       7: aload_0
       8: getfield      #9                  // Field type:I
      11: bipush        9
      13: if_icmpeq     24
      16: aload_0
      17: getfield      #9                  // Field type:I
      20: iconst_2
      21: if_icmpne     163
      24: aload_0
      25: getfield      #25                 // Field flags:I
      28: iconst_1
      29: invokestatic  #51                 // Method org/xnio/Bits.anyAreSet:(II)Z
      32: ifeq          50
      35: aload_0
      36: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
      39: aload_0
      40: getfield      #14                 // Field streamId:I
      43: invokevirtual #56                 // Method io/undertow/protocols/http2/Http2Channel.removeStreamSource:(I)Lio/undertow/protocols/http2/Http2StreamSourceChannel;
      46: astore_1
      47: goto          120
      50: aload_0
      51: getfield      #9                  // Field type:I
      54: bipush        9
      56: if_icmpne     108
      59: aload_0
      60: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
      63: aload_0
      64: getfield      #14                 // Field streamId:I
      67: invokevirtual #57                 // Method io/undertow/protocols/http2/Http2Channel.getIncomingStream:(I)Lio/undertow/protocols/http2/Http2StreamSourceChannel;
      70: astore_1
      71: aload_1
      72: ifnull        120
      75: aload_1
      76: invokevirtual #58                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.isHeadersEndStream:()Z
      79: ifeq          120
      82: aload_0
      83: getfield      #25                 // Field flags:I
      86: iconst_4
      87: invokestatic  #51                 // Method org/xnio/Bits.anyAreSet:(II)Z
      90: ifeq          120
      93: aload_0
      94: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
      97: aload_0
      98: getfield      #14                 // Field streamId:I
     101: invokevirtual #56                 // Method io/undertow/protocols/http2/Http2Channel.removeStreamSource:(I)Lio/undertow/protocols/http2/Http2StreamSourceChannel;
     104: pop
     105: goto          120
     108: aload_0
     109: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     112: aload_0
     113: getfield      #14                 // Field streamId:I
     116: invokevirtual #57                 // Method io/undertow/protocols/http2/Http2Channel.getIncomingStream:(I)Lio/undertow/protocols/http2/Http2StreamSourceChannel;
     119: astore_1
     120: aload_0
     121: getfield      #9                  // Field type:I
     124: ifne          161
     127: aload_1
     128: ifnull        161
     131: aload_0
     132: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     135: checkcast     #16                 // class io/undertow/protocols/http2/Http2DataFrameParser
     138: astore_2
     139: aload_1
     140: aload_0
     141: invokevirtual #59                 // Method getFrameLength:()J
     144: aload_2
     145: invokevirtual #60                 // Method io/undertow/protocols/http2/Http2DataFrameParser.getPadding:()I
     148: i2l
     149: lsub
     150: aload_0
     151: getfield      #25                 // Field flags:I
     154: iconst_1
     155: invokestatic  #51                 // Method org/xnio/Bits.anyAreSet:(II)Z
     158: invokevirtual #61                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.updateContentSize:(JZ)V
     161: aload_1
     162: areturn
     163: aload_0
     164: getfield      #9                  // Field type:I
     167: iconst_1
     168: if_icmpne     219
     171: aload_0
     172: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     175: aload_0
     176: getfield      #14                 // Field streamId:I
     179: invokevirtual #57                 // Method io/undertow/protocols/http2/Http2Channel.getIncomingStream:(I)Lio/undertow/protocols/http2/Http2StreamSourceChannel;
     182: astore_2
     183: aload_2
     184: ifnull        217
     187: aload_2
     188: invokevirtual #58                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.isHeadersEndStream:()Z
     191: ifne          217
     194: aload_0
     195: getfield      #25                 // Field flags:I
     198: iconst_5
     199: invokestatic  #62                 // Method org/xnio/Bits.allAreSet:(II)Z
     202: ifeq          217
     205: aload_0
     206: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     209: aload_0
     210: getfield      #14                 // Field streamId:I
     213: invokevirtual #56                 // Method io/undertow/protocols/http2/Http2Channel.removeStreamSource:(I)Lio/undertow/protocols/http2/Http2StreamSourceChannel;
     216: pop
     217: aload_2
     218: areturn
     219: aconst_null
     220: areturn

  io.undertow.protocols.http2.Http2PushBackParser getParser();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
       4: areturn

  io.undertow.protocols.http2.Http2HeadersParser getContinuationParser();
    Code:
       0: aload_0
       1: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
       4: areturn
}
