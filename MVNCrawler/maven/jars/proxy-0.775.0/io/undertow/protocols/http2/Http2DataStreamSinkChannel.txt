Compiled from "Http2DataStreamSinkChannel.java"
public class io.undertow.protocols.http2.Http2DataStreamSinkChannel extends io.undertow.protocols.http2.Http2StreamSinkChannel implements io.undertow.protocols.http2.Http2Stream {
  private final io.undertow.util.HeaderMap headers;

  private boolean first;

  private final io.undertow.protocols.http2.HpackEncoder encoder;

  private volatile org.xnio.ChannelListener<io.undertow.protocols.http2.Http2DataStreamSinkChannel> completionListener;

  private final int frameType;

  private boolean completionListenerReady;

  private volatile boolean completionListenerFailure;

  private io.undertow.protocols.http2.Http2DataStreamSinkChannel$TrailersProducer trailersProducer;

  io.undertow.protocols.http2.Http2DataStreamSinkChannel(io.undertow.protocols.http2.Http2Channel, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: new           #1                  // class io/undertow/util/HeaderMap
       6: dup
       7: invokespecial #2                  // Method io/undertow/util/HeaderMap."<init>":()V
      10: iload_3
      11: invokespecial #3                  // Method "<init>":(Lio/undertow/protocols/http2/Http2Channel;ILio/undertow/util/HeaderMap;I)V
      14: return

  io.undertow.protocols.http2.Http2DataStreamSinkChannel(io.undertow.protocols.http2.Http2Channel, int, io.undertow.util.HeaderMap, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #4                  // Method io/undertow/protocols/http2/Http2StreamSinkChannel."<init>":(Lio/undertow/protocols/http2/Http2Channel;I)V
       6: aload_0
       7: iconst_1
       8: putfield      #5                  // Field first:Z
      11: aload_0
      12: aload_1
      13: invokevirtual #6                  // Method io/undertow/protocols/http2/Http2Channel.getEncoder:()Lio/undertow/protocols/http2/HpackEncoder;
      16: putfield      #7                  // Field encoder:Lio/undertow/protocols/http2/HpackEncoder;
      19: aload_0
      20: aload_3
      21: putfield      #8                  // Field headers:Lio/undertow/util/HeaderMap;
      24: aload_0
      25: iload         4
      27: putfield      #9                  // Field frameType:I
      30: return

  public io.undertow.protocols.http2.Http2DataStreamSinkChannel$TrailersProducer getTrailersProducer();
    Code:
       0: aload_0
       1: getfield      #10                 // Field trailersProducer:Lio/undertow/protocols/http2/Http2DataStreamSinkChannel$TrailersProducer;
       4: areturn

  public void setTrailersProducer(io.undertow.protocols.http2.Http2DataStreamSinkChannel$TrailersProducer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field trailersProducer:Lio/undertow/protocols/http2/Http2DataStreamSinkChannel$TrailersProducer;
       5: return

  protected io.undertow.server.protocol.framed.SendFrameHeader createFrameHeaderImpl();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: checkcast     #12                 // class io/undertow/protocols/http2/Http2Channel
       7: invokevirtual #13                 // Method io/undertow/protocols/http2/Http2Channel.getPaddingBytes:()I
      10: istore_1
      11: aload_0
      12: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      15: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      18: iload_1
      19: iadd
      20: iload_1
      21: ifle          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: iadd
      30: istore_2
      31: aload_0
      32: iload_2
      33: invokevirtual #16                 // Method grabFlowControlBytes:(I)I
      36: istore_3
      37: iload_3
      38: ifne          67
      41: aload_0
      42: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      45: invokevirtual #17                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      48: ifeq          67
      51: new           #18                 // class io/undertow/server/protocol/framed/SendFrameHeader
      54: dup
      55: aload_0
      56: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      59: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      62: aconst_null
      63: invokespecial #19                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;)V
      66: areturn
      67: iload_3
      68: iload_1
      69: iconst_1
      70: iadd
      71: if_icmpgt     118
      74: aload_0
      75: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      78: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      81: iload_3
      82: if_icmplt     90
      85: iconst_0
      86: istore_1
      87: goto          118
      90: aload_0
      91: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      94: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      97: iload_1
      98: if_icmpne     106
     101: iconst_1
     102: istore_1
     103: goto          118
     106: iload_3
     107: aload_0
     108: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     111: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
     114: isub
     115: iconst_1
     116: isub
     117: istore_1
     118: aload_0
     119: invokevirtual #20                 // Method isFinalFrameQueued:()Z
     122: ifeq          152
     125: iload_3
     126: aload_0
     127: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     130: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
     133: iload_1
     134: ifle          143
     137: iload_1
     138: iconst_1
     139: iadd
     140: goto          144
     143: iconst_0
     144: iadd
     145: if_icmplt     152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: istore        4
     155: aload_0
     156: invokevirtual #11                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     159: checkcast     #12                 // class io/undertow/protocols/http2/Http2Channel
     162: invokevirtual #21                 // Method io/undertow/protocols/http2/Http2Channel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
     165: invokeinterface #22,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     170: astore        5
     172: aconst_null
     173: astore        6
     175: aload         5
     177: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     182: astore        7
     184: iconst_0
     185: istore        8
     187: aconst_null
     188: astore        9
     190: iload         4
     192: ifeq          229
     195: aload_0
     196: getfield      #10                 // Field trailersProducer:Lio/undertow/protocols/http2/Http2DataStreamSinkChannel$TrailersProducer;
     199: ifnull        229
     202: aload_0
     203: getfield      #10                 // Field trailersProducer:Lio/undertow/protocols/http2/Http2DataStreamSinkChannel$TrailersProducer;
     206: invokeinterface #24,  1           // InterfaceMethod io/undertow/protocols/http2/Http2DataStreamSinkChannel$TrailersProducer.getTrailers:()Lio/undertow/util/HeaderMap;
     211: astore        9
     213: aload         9
     215: ifnull        229
     218: aload         9
     220: invokevirtual #25                 // Method io/undertow/util/HeaderMap.size:()I
     223: ifne          229
     226: aconst_null
     227: astore        9
     229: aload_0
     230: getfield      #5                  // Field first:Z
     233: ifeq          595
     236: iconst_1
     237: istore        8
     239: aload_0
     240: iconst_0
     241: putfield      #5                  // Field first:Z
     244: aload         7
     246: iconst_0
     247: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     250: pop
     251: aload         7
     253: iconst_0
     254: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     257: pop
     258: aload         7
     260: iconst_0
     261: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     264: pop
     265: aload         7
     267: aload_0
     268: getfield      #9                  // Field frameType:I
     271: i2b
     272: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     275: pop
     276: aload         7
     278: iconst_0
     279: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     282: pop
     283: aload         7
     285: aload_0
     286: invokevirtual #27                 // Method getStreamId:()I
     289: invokestatic  #28                 // Method io/undertow/protocols/http2/Http2ProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     292: aload_0
     293: invokevirtual #11                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     296: checkcast     #12                 // class io/undertow/protocols/http2/Http2Channel
     299: invokevirtual #13                 // Method io/undertow/protocols/http2/Http2Channel.getPaddingBytes:()I
     302: istore        10
     304: iload         10
     306: ifle          322
     309: aload         7
     311: iload         10
     313: sipush        255
     316: iand
     317: i2b
     318: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     321: pop
     322: aload_0
     323: aload         7
     325: invokevirtual #29                 // Method writeBeforeHeaderBlock:(Ljava/nio/ByteBuffer;)V
     328: aload_0
     329: getfield      #8                  // Field headers:Lio/undertow/util/HeaderMap;
     332: astore        11
     334: aload_0
     335: getfield      #7                  // Field encoder:Lio/undertow/protocols/http2/HpackEncoder;
     338: aload         11
     340: aload         7
     342: invokevirtual #30                 // Method io/undertow/protocols/http2/HpackEncoder.encode:(Lio/undertow/util/HeaderMap;Ljava/nio/ByteBuffer;)Lio/undertow/protocols/http2/HpackEncoder$State;
     345: astore        12
     347: aload         5
     349: astore        13
     351: aload         7
     353: invokevirtual #31                 // Method java/nio/ByteBuffer.position:()I
     356: bipush        9
     358: isub
     359: iload         10
     361: iadd
     362: istore        14
     364: aload         7
     366: iconst_0
     367: iload         14
     369: bipush        16
     371: ishr
     372: sipush        255
     375: iand
     376: i2b
     377: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     380: pop
     381: aload         7
     383: iconst_1
     384: iload         14
     386: bipush        8
     388: ishr
     389: sipush        255
     392: iand
     393: i2b
     394: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     397: pop
     398: aload         7
     400: iconst_2
     401: iload         14
     403: sipush        255
     406: iand
     407: i2b
     408: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     411: pop
     412: aload         7
     414: iconst_4
     415: aload_0
     416: invokevirtual #20                 // Method isFinalFrameQueued:()Z
     419: ifeq          456
     422: aload_0
     423: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     426: invokevirtual #17                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     429: ifne          456
     432: aload_0
     433: getfield      #9                  // Field frameType:I
     436: iconst_1
     437: if_icmpne     456
     440: aload_0
     441: invokevirtual #33                 // Method isContinueStatus:()Z
     444: ifne          456
     447: aload         9
     449: ifnonnull     456
     452: iconst_1
     453: goto          457
     456: iconst_0
     457: aload         12
     459: getstatic     #34                 // Field io/undertow/protocols/http2/HpackEncoder$State.COMPLETE:Lio/undertow/protocols/http2/HpackEncoder$State;
     462: if_acmpne     469
     465: iconst_4
     466: goto          470
     469: iconst_0
     470: ior
     471: iload         10
     473: ifle          481
     476: bipush        8
     478: goto          482
     481: iconst_0
     482: ior
     483: i2b
     484: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     487: pop
     488: aload         7
     490: astore        15
     492: aload         15
     494: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
     497: iload         10
     499: if_icmpge     531
     502: aload_0
     503: aload         6
     505: aload         13
     507: invokevirtual #35                 // Method allocateAll:([Lio/undertow/connector/PooledByteBuffer;Lio/undertow/connector/PooledByteBuffer;)[Lio/undertow/connector/PooledByteBuffer;
     510: astore        6
     512: aload         6
     514: aload         6
     516: arraylength
     517: iconst_1
     518: isub
     519: aaload
     520: astore        13
     522: aload         13
     524: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     529: astore        15
     531: iconst_0
     532: istore        16
     534: iload         16
     536: iload         10
     538: if_icmpge     554
     541: aload         15
     543: iconst_0
     544: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     547: pop
     548: iinc          16, 1
     551: goto          534
     554: aload         12
     556: getstatic     #34                 // Field io/undertow/protocols/http2/HpackEncoder$State.COMPLETE:Lio/undertow/protocols/http2/HpackEncoder$State;
     559: if_acmpeq     595
     562: aload_0
     563: aload         6
     565: aload         13
     567: invokevirtual #35                 // Method allocateAll:([Lio/undertow/connector/PooledByteBuffer;Lio/undertow/connector/PooledByteBuffer;)[Lio/undertow/connector/PooledByteBuffer;
     570: astore        6
     572: aload         6
     574: aload         6
     576: arraylength
     577: iconst_1
     578: isub
     579: aaload
     580: astore        13
     582: aload_0
     583: aload         11
     585: aload         13
     587: invokevirtual #36                 // Method encodeContinuationFrame:(Lio/undertow/util/HeaderMap;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/protocols/http2/HpackEncoder$State;
     590: astore        12
     592: goto          554
     595: aload         6
     597: ifnonnull     605
     600: aload         5
     602: goto          613
     605: aload         6
     607: aload         6
     609: arraylength
     610: iconst_1
     611: isub
     612: aaload
     613: astore        10
     615: aload         10
     617: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     622: astore        11
     624: aconst_null
     625: astore        12
     627: iconst_0
     628: istore        13
     630: iconst_0
     631: istore        14
     633: aload_0
     634: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     637: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
     640: ifle          897
     643: iload_3
     644: ifle          885
     647: aload         11
     649: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
     652: bipush        10
     654: if_icmpge     696
     657: aload_0
     658: aload         6
     660: aload         10
     662: invokevirtual #35                 // Method allocateAll:([Lio/undertow/connector/PooledByteBuffer;Lio/undertow/connector/PooledByteBuffer;)[Lio/undertow/connector/PooledByteBuffer;
     665: astore        6
     667: aload         6
     669: ifnonnull     677
     672: aload         5
     674: goto          685
     677: aload         6
     679: aload         6
     681: arraylength
     682: iconst_1
     683: isub
     684: aaload
     685: astore        10
     687: aload         10
     689: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     694: astore        11
     696: iload_3
     697: iload_1
     698: isub
     699: iload_1
     700: ifle          707
     703: iconst_1
     704: goto          708
     707: iconst_0
     708: isub
     709: istore        15
     711: aload_0
     712: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     715: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
     718: iload         15
     720: isub
     721: istore        13
     723: aload_0
     724: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     727: aload_0
     728: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     731: invokevirtual #31                 // Method java/nio/ByteBuffer.position:()I
     734: iload         15
     736: iadd
     737: invokevirtual #37                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     740: pop
     741: aload         11
     743: iload_3
     744: bipush        16
     746: ishr
     747: sipush        255
     750: iand
     751: i2b
     752: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     755: pop
     756: aload         11
     758: iload_3
     759: bipush        8
     761: ishr
     762: sipush        255
     765: iand
     766: i2b
     767: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     770: pop
     771: aload         11
     773: iload_3
     774: sipush        255
     777: iand
     778: i2b
     779: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     782: pop
     783: aload         11
     785: iconst_0
     786: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     789: pop
     790: aload         9
     792: ifnonnull     826
     795: aload         11
     797: iload         4
     799: ifeq          806
     802: iconst_1
     803: goto          807
     806: iconst_0
     807: iload_1
     808: ifle          816
     811: bipush        8
     813: goto          817
     816: iconst_0
     817: ior
     818: i2b
     819: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     822: pop
     823: goto          851
     826: iload         4
     828: ifeq          834
     831: iconst_1
     832: istore        14
     834: aload         11
     836: iload_1
     837: ifle          845
     840: bipush        8
     842: goto          846
     845: iconst_0
     846: i2b
     847: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     850: pop
     851: aload         11
     853: aload_0
     854: invokevirtual #27                 // Method getStreamId:()I
     857: invokestatic  #28                 // Method io/undertow/protocols/http2/Http2ProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     860: iload_1
     861: ifle          882
     864: aload         11
     866: iload_1
     867: sipush        255
     870: iand
     871: i2b
     872: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     875: pop
     876: iload_1
     877: invokestatic  #38                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     880: astore        12
     882: goto          1050
     885: aload_0
     886: invokevirtual #14                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     889: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
     892: istore        13
     894: goto          1050
     897: iload         4
     899: ifeq          1037
     902: iload         8
     904: ifne          1037
     907: aload         11
     909: iload_3
     910: bipush        16
     912: ishr
     913: sipush        255
     916: iand
     917: i2b
     918: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     921: pop
     922: aload         11
     924: iload_3
     925: bipush        8
     927: ishr
     928: sipush        255
     931: iand
     932: i2b
     933: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     936: pop
     937: aload         11
     939: iload_3
     940: sipush        255
     943: iand
     944: i2b
     945: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     948: pop
     949: aload         11
     951: iconst_0
     952: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     955: pop
     956: aload         9
     958: ifnonnull     983
     961: aload         11
     963: iconst_1
     964: iload_1
     965: ifle          973
     968: bipush        8
     970: goto          974
     973: iconst_0
     974: ior
     975: i2b
     976: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     979: pop
     980: goto          1003
     983: iconst_1
     984: istore        14
     986: aload         11
     988: iload_1
     989: ifle          997
     992: bipush        8
     994: goto          998
     997: iconst_0
     998: i2b
     999: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1002: pop
    1003: aload         11
    1005: aload_0
    1006: invokevirtual #27                 // Method getStreamId:()I
    1009: invokestatic  #28                 // Method io/undertow/protocols/http2/Http2ProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
    1012: iload_1
    1013: ifle          1050
    1016: aload         11
    1018: iload_1
    1019: sipush        255
    1022: iand
    1023: i2b
    1024: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1027: pop
    1028: iload_1
    1029: invokestatic  #38                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
    1032: astore        12
    1034: goto          1050
    1037: iload         4
    1039: ifeq          1050
    1042: aload         9
    1044: ifnull        1050
    1047: iconst_1
    1048: istore        14
    1050: iload         14
    1052: ifeq          1333
    1055: aload_0
    1056: invokevirtual #11                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
    1059: checkcast     #12                 // class io/undertow/protocols/http2/Http2Channel
    1062: invokevirtual #21                 // Method io/undertow/protocols/http2/Http2Channel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
    1065: invokeinterface #22,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
    1070: astore        15
    1072: aload         12
    1074: ifnull        1090
    1077: aload         15
    1079: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1084: aload         12
    1086: invokevirtual #39                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
    1089: pop
    1090: aload         15
    1092: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1097: iconst_0
    1098: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1101: pop
    1102: aload         15
    1104: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1109: iconst_0
    1110: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1113: pop
    1114: aload         15
    1116: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1121: iconst_0
    1122: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1125: pop
    1126: aload         15
    1128: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1133: iconst_1
    1134: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1137: pop
    1138: aload         15
    1140: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1145: iconst_5
    1146: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1149: pop
    1150: aload         15
    1152: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1157: aload_0
    1158: invokevirtual #27                 // Method getStreamId:()I
    1161: invokestatic  #28                 // Method io/undertow/protocols/http2/Http2ProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
    1164: aload_0
    1165: getfield      #7                  // Field encoder:Lio/undertow/protocols/http2/HpackEncoder;
    1168: aload         9
    1170: aload         15
    1172: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1177: invokevirtual #30                 // Method io/undertow/protocols/http2/HpackEncoder.encode:(Lio/undertow/util/HeaderMap;Ljava/nio/ByteBuffer;)Lio/undertow/protocols/http2/HpackEncoder$State;
    1180: astore        16
    1182: aload         16
    1184: getstatic     #34                 // Field io/undertow/protocols/http2/HpackEncoder$State.COMPLETE:Lio/undertow/protocols/http2/HpackEncoder$State;
    1187: if_acmpeq     1199
    1190: getstatic     #40                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
    1193: invokeinterface #41,  1           // InterfaceMethod io/undertow/UndertowMessages.http2TrailerToLargeForSingleBuffer:()Ljava/lang/RuntimeException;
    1198: athrow
    1199: aload         15
    1201: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1206: invokevirtual #31                 // Method java/nio/ByteBuffer.position:()I
    1209: bipush        9
    1211: isub
    1212: istore        17
    1214: aload         15
    1216: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1221: iconst_0
    1222: iload         17
    1224: bipush        16
    1226: ishr
    1227: sipush        255
    1230: iand
    1231: i2b
    1232: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
    1235: pop
    1236: aload         15
    1238: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1243: iconst_1
    1244: iload         17
    1246: bipush        8
    1248: ishr
    1249: sipush        255
    1252: iand
    1253: i2b
    1254: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
    1257: pop
    1258: aload         15
    1260: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1265: iconst_2
    1266: iload         17
    1268: sipush        255
    1271: iand
    1272: i2b
    1273: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
    1276: pop
    1277: aload         15
    1279: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1284: invokevirtual #42                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1287: pop
    1288: aload         15
    1290: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1295: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
    1298: istore        18
    1300: iload         18
    1302: invokestatic  #38                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
    1305: astore        12
    1307: aload         12
    1309: aload         15
    1311: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1316: invokevirtual #39                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
    1319: pop
    1320: aload         12
    1322: invokevirtual #42                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1325: pop
    1326: aload         15
    1328: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1333: aload         6
    1335: ifnonnull     1359
    1338: aload         11
    1340: invokevirtual #42                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1343: pop
    1344: new           #18                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1347: dup
    1348: iload         13
    1350: aload         10
    1352: iconst_0
    1353: aload         12
    1355: invokespecial #44                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;ZLjava/nio/ByteBuffer;)V
    1358: areturn
    1359: iconst_0
    1360: istore        15
    1362: iconst_0
    1363: istore        16
    1365: iload         16
    1367: aload         6
    1369: arraylength
    1370: if_icmpge     1411
    1373: iload         15
    1375: aload         6
    1377: iload         16
    1379: aaload
    1380: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1385: invokevirtual #31                 // Method java/nio/ByteBuffer.position:()I
    1388: iadd
    1389: istore        15
    1391: aload         6
    1393: iload         16
    1395: aaload
    1396: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1401: invokevirtual #42                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1404: pop
    1405: iinc          16, 1
    1408: goto          1365
    1411: iload         15
    1413: invokestatic  #38                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
    1416: astore        16
    1418: iconst_0
    1419: istore        17
    1421: iload         17
    1423: aload         6
    1425: arraylength
    1426: if_icmpge     1451
    1429: aload         16
    1431: aload         6
    1433: iload         17
    1435: aaload
    1436: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1441: invokevirtual #39                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
    1444: pop
    1445: iinc          17, 1
    1448: goto          1421
    1451: aload         16
    1453: invokevirtual #42                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1456: pop
    1457: new           #18                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1460: dup
    1461: iload         13
    1463: new           #45                 // class io/undertow/util/ImmediatePooledByteBuffer
    1466: dup
    1467: aload         16
    1469: invokespecial #46                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
    1472: iconst_0
    1473: aload         12
    1475: invokespecial #44                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;ZLjava/nio/ByteBuffer;)V
    1478: astore        17
    1480: iconst_0
    1481: istore        18
    1483: iload         18
    1485: aload         6
    1487: arraylength
    1488: if_icmpge     1507
    1491: aload         6
    1493: iload         18
    1495: aaload
    1496: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1501: iinc          18, 1
    1504: goto          1483
    1507: aload         17
    1509: areturn
    1510: astore        19
    1512: iconst_0
    1513: istore        20
    1515: iload         20
    1517: aload         6
    1519: arraylength
    1520: if_icmpge     1539
    1523: aload         6
    1525: iload         20
    1527: aaload
    1528: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1533: iinc          20, 1
    1536: goto          1515
    1539: aload         19
    1541: athrow
    Exception table:
       from    to  target type
        1411  1480  1510   any
        1510  1512  1510   any

  private boolean isContinueStatus();
    Code:
       0: ldc           #47                 // String 100
       2: aload_0
       3: invokevirtual #48                 // Method getHeaders:()Lio/undertow/util/HeaderMap;
       6: getstatic     #49                 // Field io/undertow/protocols/http2/Http2Channel.STATUS:Lio/undertow/util/HttpString;
       9: invokevirtual #50                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      12: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ireturn

  private io.undertow.protocols.http2.HpackEncoder$State encodeContinuationFrame(io.undertow.util.HeaderMap, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_2
       1: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       6: astore_3
       7: aload_3
       8: iconst_0
       9: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      12: pop
      13: aload_3
      14: iconst_0
      15: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      18: pop
      19: aload_3
      20: iconst_0
      21: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      24: pop
      25: aload_3
      26: bipush        9
      28: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      31: pop
      32: aload_3
      33: iconst_0
      34: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      37: pop
      38: aload_3
      39: aload_0
      40: invokevirtual #27                 // Method getStreamId:()I
      43: invokestatic  #28                 // Method io/undertow/protocols/http2/Http2ProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
      46: aload_0
      47: getfield      #7                  // Field encoder:Lio/undertow/protocols/http2/HpackEncoder;
      50: aload_1
      51: aload_3
      52: invokevirtual #30                 // Method io/undertow/protocols/http2/HpackEncoder.encode:(Lio/undertow/util/HeaderMap;Ljava/nio/ByteBuffer;)Lio/undertow/protocols/http2/HpackEncoder$State;
      55: astore        4
      57: aload_3
      58: invokevirtual #31                 // Method java/nio/ByteBuffer.position:()I
      61: bipush        9
      63: isub
      64: istore        5
      66: aload_3
      67: iconst_0
      68: iload         5
      70: bipush        16
      72: ishr
      73: sipush        255
      76: iand
      77: i2b
      78: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      81: pop
      82: aload_3
      83: iconst_1
      84: iload         5
      86: bipush        8
      88: ishr
      89: sipush        255
      92: iand
      93: i2b
      94: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      97: pop
      98: aload_3
      99: iconst_2
     100: iload         5
     102: sipush        255
     105: iand
     106: i2b
     107: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     110: pop
     111: aload_3
     112: iconst_4
     113: aload         4
     115: getstatic     #34                 // Field io/undertow/protocols/http2/HpackEncoder$State.COMPLETE:Lio/undertow/protocols/http2/HpackEncoder$State;
     118: if_acmpne     125
     121: iconst_4
     122: goto          126
     125: iconst_0
     126: i2b
     127: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     130: pop
     131: aload         4
     133: areturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method handleFailedChannel:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #53                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.write:([Ljava/nio/ByteBuffer;II)J
      11: lreturn

  private void handleFailedChannel();
    Code:
       0: aload_0
       1: getfield      #54                 // Field completionListenerFailure:Z
       4: ifeq          28
       7: aload_0
       8: getfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
      11: ifnull        28
      14: aload_0
      15: aload_0
      16: getfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
      19: invokestatic  #56                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      22: pop
      23: aload_0
      24: aconst_null
      25: putfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
      28: return

  public long write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method handleFailedChannel:()V
       4: aload_0
       5: aload_1
       6: invokespecial #57                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
       9: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method handleFailedChannel:()V
       4: aload_0
       5: aload_1
       6: invokespecial #58                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
       9: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method handleFailedChannel:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #59                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.writeFinal:([Ljava/nio/ByteBuffer;II)J
      11: lreturn

  public long writeFinal(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method handleFailedChannel:()V
       4: aload_0
       5: aload_1
       6: invokespecial #60                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.writeFinal:([Ljava/nio/ByteBuffer;)J
       9: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method handleFailedChannel:()V
       4: aload_0
       5: aload_1
       6: invokespecial #61                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.writeFinal:(Ljava/nio/ByteBuffer;)I
       9: ireturn

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method handleFailedChannel:()V
       4: aload_0
       5: getfield      #62                 // Field completionListenerReady:Z
       8: ifeq          32
      11: aload_0
      12: getfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
      15: ifnull        32
      18: aload_0
      19: aload_0
      20: getfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
      23: invokestatic  #56                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      26: pop
      27: aload_0
      28: aconst_null
      29: putfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
      32: aload_0
      33: invokespecial #63                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.flush:()Z
      36: ireturn

  protected void writeBeforeHeaderBlock(java.nio.ByteBuffer);
    Code:
       0: return

  protected boolean isFlushRequiredOnEmptyBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field first:Z
       4: ireturn

  public io.undertow.util.HeaderMap getHeaders();
    Code:
       0: aload_0
       1: getfield      #8                  // Field headers:Lio/undertow/util/HeaderMap;
       4: areturn

  protected void handleFlushComplete(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #64                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.handleFlushComplete:(Z)V
       5: iload_1
       6: ifeq          21
       9: aload_0
      10: getfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
      13: ifnull        21
      16: aload_0
      17: iconst_1
      18: putfield      #62                 // Field completionListenerReady:Z
      21: return

  protected void channelForciblyClosed() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #65                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.channelForciblyClosed:()V
       4: aload_0
       5: getfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
       8: ifnull        16
      11: aload_0
      12: iconst_1
      13: putfield      #54                 // Field completionListenerFailure:Z
      16: return

  public org.xnio.ChannelListener<io.undertow.protocols.http2.Http2DataStreamSinkChannel> getCompletionListener();
    Code:
       0: aload_0
       1: getfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setCompletionListener(org.xnio.ChannelListener<io.undertow.protocols.http2.Http2DataStreamSinkChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field completionListener:Lorg/xnio/ChannelListener;
       5: return
}
