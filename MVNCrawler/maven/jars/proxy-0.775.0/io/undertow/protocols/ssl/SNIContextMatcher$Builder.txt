Compiled from "SNIContextMatcher.java"
public class io.undertow.protocols.ssl.SNIContextMatcher$Builder {
  private javax.net.ssl.SSLContext defaultContext;

  private final java.util.Map<javax.net.ssl.SNIMatcher, javax.net.ssl.SSLContext> wildcards;

  private final java.util.Map<javax.net.ssl.SNIMatcher, javax.net.ssl.SSLContext> exacts;

  public io.undertow.protocols.ssl.SNIContextMatcher$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field wildcards:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/LinkedHashMap
      19: dup
      20: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      23: putfield      #5                  // Field exacts:Ljava/util/Map;
      26: return

  public io.undertow.protocols.ssl.SNIContextMatcher build();
    Code:
       0: aload_0
       1: getfield      #6                  // Field defaultContext:Ljavax/net/ssl/SSLContext;
       4: ifnonnull     16
       7: getstatic     #7                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #8,  1            // InterfaceMethod io/undertow/UndertowMessages.defaultContextCannotBeNull:()Ljava/lang/IllegalStateException;
      15: athrow
      16: new           #9                  // class io/undertow/protocols/ssl/SNIContextMatcher
      19: dup
      20: aload_0
      21: getfield      #6                  // Field defaultContext:Ljavax/net/ssl/SSLContext;
      24: aload_0
      25: getfield      #4                  // Field wildcards:Ljava/util/Map;
      28: aload_0
      29: getfield      #5                  // Field exacts:Ljava/util/Map;
      32: invokespecial #10                 // Method io/undertow/protocols/ssl/SNIContextMatcher."<init>":(Ljavax/net/ssl/SSLContext;Ljava/util/Map;Ljava/util/Map;)V
      35: areturn

  public javax.net.ssl.SSLContext getDefaultContext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field defaultContext:Ljavax/net/ssl/SSLContext;
       4: areturn

  public io.undertow.protocols.ssl.SNIContextMatcher$Builder setDefaultContext(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field defaultContext:Ljavax/net/ssl/SSLContext;
       5: aload_0
       6: areturn

  public io.undertow.protocols.ssl.SNIContextMatcher$Builder addMatch(java.lang.String, javax.net.ssl.SSLContext);
    Code:
       0: aload_1
       1: ldc           #11                 // String *
       3: invokevirtual #12                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifeq          27
       9: aload_0
      10: getfield      #4                  // Field wildcards:Ljava/util/Map;
      13: aload_1
      14: invokestatic  #13                 // Method javax/net/ssl/SNIHostName.createSNIMatcher:(Ljava/lang/String;)Ljavax/net/ssl/SNIMatcher;
      17: aload_2
      18: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: goto          42
      27: aload_0
      28: getfield      #5                  // Field exacts:Ljava/util/Map;
      31: aload_1
      32: invokestatic  #13                 // Method javax/net/ssl/SNIHostName.createSNIMatcher:(Ljava/lang/String;)Ljavax/net/ssl/SNIMatcher;
      35: aload_2
      36: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_0
      43: areturn
}
