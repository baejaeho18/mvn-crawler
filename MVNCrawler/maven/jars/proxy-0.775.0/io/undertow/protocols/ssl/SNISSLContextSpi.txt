Compiled from "SNISSLContextSpi.java"
class io.undertow.protocols.ssl.SNISSLContextSpi extends javax.net.ssl.SSLContextSpi {
  private final io.undertow.protocols.ssl.SNIContextMatcher matcher;

  io.undertow.protocols.ssl.SNISSLContextSpi(io.undertow.protocols.ssl.SNIContextMatcher);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/net/ssl/SSLContextSpi."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field matcher:Lio/undertow/protocols/ssl/SNIContextMatcher;
       9: return

  protected void engineInit(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom) throws java.security.KeyManagementException;
    Code:
       0: return

  protected javax.net.ssl.SSLSocketFactory engineGetSocketFactory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field matcher:Lio/undertow/protocols/ssl/SNIContextMatcher;
       4: invokevirtual #3                  // Method io/undertow/protocols/ssl/SNIContextMatcher.getDefaultContext:()Ljavax/net/ssl/SSLContext;
       7: invokevirtual #4                  // Method javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      10: areturn

  protected javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field matcher:Lio/undertow/protocols/ssl/SNIContextMatcher;
       4: invokevirtual #3                  // Method io/undertow/protocols/ssl/SNIContextMatcher.getDefaultContext:()Ljavax/net/ssl/SSLContext;
       7: invokevirtual #5                  // Method javax/net/ssl/SSLContext.getServerSocketFactory:()Ljavax/net/ssl/SSLServerSocketFactory;
      10: areturn

  protected javax.net.ssl.SSLEngine engineCreateSSLEngine();
    Code:
       0: new           #6                  // class io/undertow/protocols/ssl/SNISSLEngine
       3: dup
       4: aload_0
       5: getfield      #2                  // Field matcher:Lio/undertow/protocols/ssl/SNIContextMatcher;
       8: invokespecial #7                  // Method io/undertow/protocols/ssl/SNISSLEngine."<init>":(Lio/undertow/protocols/ssl/SNIContextMatcher;)V
      11: areturn

  protected javax.net.ssl.SSLEngine engineCreateSSLEngine(java.lang.String, int);
    Code:
       0: new           #6                  // class io/undertow/protocols/ssl/SNISSLEngine
       3: dup
       4: aload_0
       5: getfield      #2                  // Field matcher:Lio/undertow/protocols/ssl/SNIContextMatcher;
       8: aload_1
       9: iload_2
      10: invokespecial #8                  // Method io/undertow/protocols/ssl/SNISSLEngine."<init>":(Lio/undertow/protocols/ssl/SNIContextMatcher;Ljava/lang/String;I)V
      13: areturn

  protected javax.net.ssl.SSLSessionContext engineGetServerSessionContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field matcher:Lio/undertow/protocols/ssl/SNIContextMatcher;
       4: invokevirtual #3                  // Method io/undertow/protocols/ssl/SNIContextMatcher.getDefaultContext:()Ljavax/net/ssl/SSLContext;
       7: invokevirtual #9                  // Method javax/net/ssl/SSLContext.getServerSessionContext:()Ljavax/net/ssl/SSLSessionContext;
      10: areturn

  protected javax.net.ssl.SSLSessionContext engineGetClientSessionContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field matcher:Lio/undertow/protocols/ssl/SNIContextMatcher;
       4: invokevirtual #3                  // Method io/undertow/protocols/ssl/SNIContextMatcher.getDefaultContext:()Ljavax/net/ssl/SSLContext;
       7: invokevirtual #10                 // Method javax/net/ssl/SSLContext.getClientSessionContext:()Ljavax/net/ssl/SSLSessionContext;
      10: areturn
}
