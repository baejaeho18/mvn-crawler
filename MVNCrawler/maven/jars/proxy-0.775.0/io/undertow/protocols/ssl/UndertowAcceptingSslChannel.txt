Compiled from "UndertowAcceptingSslChannel.java"
class io.undertow.protocols.ssl.UndertowAcceptingSslChannel implements org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection> {
  private final io.undertow.protocols.ssl.UndertowXnioSsl ssl;

  private final org.xnio.channels.AcceptingChannel<? extends org.xnio.StreamConnection> tcpServer;

  private volatile org.xnio.SslClientAuthMode clientAuthMode;

  private volatile int useClientMode;

  private volatile int enableSessionCreation;

  private volatile java.lang.String[] cipherSuites;

  private volatile java.lang.String[] protocols;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.protocols.ssl.UndertowAcceptingSslChannel, org.xnio.SslClientAuthMode> clientAuthModeUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.protocols.ssl.UndertowAcceptingSslChannel> useClientModeUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.protocols.ssl.UndertowAcceptingSslChannel> enableSessionCreationUpdater;

  private final org.xnio.ChannelListener$Setter<org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>> closeSetter;

  private final org.xnio.ChannelListener$Setter<org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>> acceptSetter;

  protected final boolean startTls;

  protected final io.undertow.connector.ByteBufferPool applicationBufferPool;

  private final boolean useCipherSuitesOrder;

  private static final java.util.Set<org.xnio.Option<?>> SUPPORTED_OPTIONS;

  io.undertow.protocols.ssl.UndertowAcceptingSslChannel(io.undertow.protocols.ssl.UndertowXnioSsl, org.xnio.channels.AcceptingChannel<? extends org.xnio.StreamConnection>, org.xnio.OptionMap, io.undertow.connector.ByteBufferPool, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
      14: aload_0
      15: aload         4
      17: putfield      #5                  // Field applicationBufferPool:Lio/undertow/connector/ByteBufferPool;
      20: aload_0
      21: iload         5
      23: putfield      #6                  // Field startTls:Z
      26: aload_0
      27: aload_3
      28: getstatic     #7                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      31: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      34: checkcast     #9                  // class org/xnio/SslClientAuthMode
      37: putfield      #10                 // Field clientAuthMode:Lorg/xnio/SslClientAuthMode;
      40: aload_0
      41: aload_3
      42: getstatic     #11                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      45: iconst_0
      46: invokevirtual #12                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: putfield      #13                 // Field useClientMode:I
      60: aload_0
      61: aload_3
      62: getstatic     #14                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      65: iconst_1
      66: invokevirtual #12                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      69: ifeq          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: putfield      #15                 // Field enableSessionCreation:I
      80: aload_3
      81: getstatic     #16                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      84: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      87: checkcast     #17                 // class org/xnio/Sequence
      90: astore        6
      92: aload_0
      93: aload         6
      95: ifnull        117
      98: aload         6
     100: aload         6
     102: invokevirtual #18                 // Method org/xnio/Sequence.size:()I
     105: anewarray     #19                 // class java/lang/String
     108: invokevirtual #20                 // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     111: checkcast     #21                 // class "[Ljava/lang/String;"
     114: goto          118
     117: aconst_null
     118: putfield      #22                 // Field cipherSuites:[Ljava/lang/String;
     121: aload_3
     122: getstatic     #23                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     125: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     128: checkcast     #17                 // class org/xnio/Sequence
     131: astore        7
     133: aload_0
     134: aload         7
     136: ifnull        158
     139: aload         7
     141: aload         7
     143: invokevirtual #18                 // Method org/xnio/Sequence.size:()I
     146: anewarray     #19                 // class java/lang/String
     149: invokevirtual #20                 // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     152: checkcast     #21                 // class "[Ljava/lang/String;"
     155: goto          159
     158: aconst_null
     159: putfield      #24                 // Field protocols:[Ljava/lang/String;
     162: aload_0
     163: aload_2
     164: invokeinterface #25,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     169: aload_0
     170: invokestatic  #26                 // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
     173: putfield      #27                 // Field closeSetter:Lorg/xnio/ChannelListener$Setter;
     176: aload_0
     177: aload_2
     178: invokeinterface #28,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
     183: aload_0
     184: invokestatic  #26                 // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
     187: putfield      #29                 // Field acceptSetter:Lorg/xnio/ChannelListener$Setter;
     190: aload_0
     191: aload_3
     192: getstatic     #30                 // Field io/undertow/UndertowOptions.SSL_USER_CIPHER_SUITES_ORDER:Lorg/xnio/Option;
     195: iconst_0
     196: invokevirtual #12                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     199: putfield      #31                 // Field useCipherSuitesOrder:Z
     202: return

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #7                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     29
       7: aload_1
       8: getstatic     #32                 // Field clientAuthModeUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      11: aload_0
      12: getstatic     #7                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      15: aload_2
      16: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #9                  // class org/xnio/SslClientAuthMode
      22: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn
      29: aload_1
      30: getstatic     #11                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      33: if_acmpne     89
      36: getstatic     #11                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      39: aload_2
      40: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #35                 // class java/lang/Boolean
      46: astore_3
      47: aload_3
      48: ifnull        86
      51: aload_1
      52: getstatic     #36                 // Field useClientModeUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      55: aload_0
      56: aload_3
      57: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: invokestatic  #39                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      82: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      85: areturn
      86: goto          275
      89: aload_1
      90: getstatic     #14                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      93: if_acmpne     149
      96: getstatic     #14                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      99: aload_2
     100: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #35                 // class java/lang/Boolean
     106: astore_3
     107: aload_3
     108: ifnull        146
     111: aload_1
     112: getstatic     #40                 // Field enableSessionCreationUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     115: aload_0
     116: aload_3
     117: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
     120: ifeq          127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     131: ifeq          138
     134: iconst_1
     135: goto          139
     138: iconst_0
     139: invokestatic  #39                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     142: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     145: areturn
     146: goto          275
     149: aload_1
     150: getstatic     #16                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
     153: if_acmpne     206
     156: getstatic     #16                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
     159: aload_2
     160: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     163: checkcast     #17                 // class org/xnio/Sequence
     166: astore_3
     167: aload_0
     168: getfield      #22                 // Field cipherSuites:[Ljava/lang/String;
     171: astore        4
     173: aload_0
     174: aload_3
     175: ifnonnull     182
     178: aconst_null
     179: goto          196
     182: aload_3
     183: aload_3
     184: invokevirtual #18                 // Method org/xnio/Sequence.size:()I
     187: anewarray     #19                 // class java/lang/String
     190: invokevirtual #20                 // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     193: checkcast     #21                 // class "[Ljava/lang/String;"
     196: putfield      #22                 // Field cipherSuites:[Ljava/lang/String;
     199: aload_1
     200: aload         4
     202: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     205: areturn
     206: aload_1
     207: getstatic     #23                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     210: if_acmpne     263
     213: getstatic     #23                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     216: aload_2
     217: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     220: checkcast     #17                 // class org/xnio/Sequence
     223: astore_3
     224: aload_0
     225: getfield      #24                 // Field protocols:[Ljava/lang/String;
     228: astore        4
     230: aload_0
     231: aload_3
     232: ifnonnull     239
     235: aconst_null
     236: goto          253
     239: aload_3
     240: aload_3
     241: invokevirtual #18                 // Method org/xnio/Sequence.size:()I
     244: anewarray     #19                 // class java/lang/String
     247: invokevirtual #20                 // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     250: checkcast     #21                 // class "[Ljava/lang/String;"
     253: putfield      #24                 // Field protocols:[Ljava/lang/String;
     256: aload_1
     257: aload         4
     259: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     262: areturn
     263: aload_0
     264: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
     267: aload_1
     268: aload_2
     269: invokeinterface #41,  3           // InterfaceMethod org/xnio/channels/AcceptingChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     274: areturn
     275: getstatic     #42                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     278: ldc           #43                 // String value
     280: invokeinterface #44,  2           // InterfaceMethod io/undertow/UndertowLogger.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     285: athrow

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #45,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getWorker:()Lorg/xnio/XnioWorker;
       9: areturn

  public io.undertow.protocols.ssl.UndertowSslConnection accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #46,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.accept:()Lorg/xnio/channels/ConnectedChannel;
       9: checkcast     #47                 // class org/xnio/StreamConnection
      12: astore_1
      13: aload_1
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aload_1
      20: ldc           #48                 // class java/net/InetSocketAddress
      22: invokevirtual #49                 // Method org/xnio/StreamConnection.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
      25: checkcast     #48                 // class java/net/InetSocketAddress
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
      33: invokevirtual #50                 // Method io/undertow/protocols/ssl/UndertowXnioSsl.getSslContext:()Ljavax/net/ssl/SSLContext;
      36: aload_2
      37: invokestatic  #51                 // Method getHostNameNoResolve:(Ljava/net/InetSocketAddress;)Ljava/lang/String;
      40: aload_2
      41: invokevirtual #52                 // Method java/net/InetSocketAddress.getPort:()I
      44: invokevirtual #53                 // Method javax/net/ssl/SSLContext.createSSLEngine:(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;
      47: astore_3
      48: aload_0
      49: getfield      #31                 // Field useCipherSuitesOrder:Z
      52: ifeq          73
      55: aload_3
      56: invokevirtual #54                 // Method javax/net/ssl/SSLEngine.getSSLParameters:()Ljavax/net/ssl/SSLParameters;
      59: astore        4
      61: aload         4
      63: iconst_1
      64: invokevirtual #55                 // Method javax/net/ssl/SSLParameters.setUseCipherSuitesOrder:(Z)V
      67: aload_3
      68: aload         4
      70: invokevirtual #56                 // Method javax/net/ssl/SSLEngine.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V
      73: aload_0
      74: getfield      #13                 // Field useClientMode:I
      77: ifeq          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: istore        4
      87: aload_3
      88: iload         4
      90: invokevirtual #57                 // Method javax/net/ssl/SSLEngine.setUseClientMode:(Z)V
      93: iload         4
      95: ifne          181
      98: aload_0
      99: getfield      #10                 // Field clientAuthMode:Lorg/xnio/SslClientAuthMode;
     102: astore        5
     104: aload         5
     106: ifnull        181
     109: getstatic     #58                 // Field io/undertow/protocols/ssl/UndertowAcceptingSslChannel$1.$SwitchMap$org$xnio$SslClientAuthMode:[I
     112: aload         5
     114: invokevirtual #59                 // Method org/xnio/SslClientAuthMode.ordinal:()I
     117: iaload
     118: tableswitch   { // 1 to 3
                     1: 144
                     2: 157
                     3: 165
               default: 173
          }
     144: aload_3
     145: iconst_0
     146: invokevirtual #60                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     149: aload_3
     150: iconst_0
     151: invokevirtual #61                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     154: goto          181
     157: aload_3
     158: iconst_1
     159: invokevirtual #61                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     162: goto          181
     165: aload_3
     166: iconst_1
     167: invokevirtual #60                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     170: goto          181
     173: new           #62                 // class java/lang/IllegalStateException
     176: dup
     177: invokespecial #63                 // Method java/lang/IllegalStateException."<init>":()V
     180: athrow
     181: aload_3
     182: aload_0
     183: getfield      #15                 // Field enableSessionCreation:I
     186: ifeq          193
     189: iconst_1
     190: goto          194
     193: iconst_0
     194: invokevirtual #64                 // Method javax/net/ssl/SSLEngine.setEnableSessionCreation:(Z)V
     197: aload_0
     198: getfield      #22                 // Field cipherSuites:[Ljava/lang/String;
     201: astore        5
     203: aload         5
     205: ifnull        330
     208: new           #65                 // class java/util/HashSet
     211: dup
     212: aload_3
     213: invokevirtual #66                 // Method javax/net/ssl/SSLEngine.getSupportedCipherSuites:()[Ljava/lang/String;
     216: invokestatic  #67                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     219: invokespecial #68                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     222: astore        6
     224: aload         6
     226: invokeinterface #69,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     231: ifeq          243
     234: aload_3
     235: aload         5
     237: invokevirtual #70                 // Method javax/net/ssl/SSLEngine.setEnabledCipherSuites:([Ljava/lang/String;)V
     240: goto          330
     243: new           #71                 // class java/util/ArrayList
     246: dup
     247: invokespecial #72                 // Method java/util/ArrayList."<init>":()V
     250: astore        7
     252: aload         5
     254: astore        8
     256: aload         8
     258: arraylength
     259: istore        9
     261: iconst_0
     262: istore        10
     264: iload         10
     266: iload         9
     268: if_icmpge     306
     271: aload         8
     273: iload         10
     275: aaload
     276: astore        11
     278: aload         6
     280: aload         11
     282: invokeinterface #73,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     287: ifeq          300
     290: aload         7
     292: aload         11
     294: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     299: pop
     300: iinc          10, 1
     303: goto          264
     306: aload_3
     307: aload         7
     309: aload         7
     311: invokeinterface #75,  1           // InterfaceMethod java/util/List.size:()I
     316: anewarray     #19                 // class java/lang/String
     319: invokeinterface #76,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     324: checkcast     #21                 // class "[Ljava/lang/String;"
     327: invokevirtual #70                 // Method javax/net/ssl/SSLEngine.setEnabledCipherSuites:([Ljava/lang/String;)V
     330: aload_0
     331: getfield      #24                 // Field protocols:[Ljava/lang/String;
     334: astore        6
     336: aload         6
     338: ifnull        463
     341: new           #65                 // class java/util/HashSet
     344: dup
     345: aload_3
     346: invokevirtual #77                 // Method javax/net/ssl/SSLEngine.getSupportedProtocols:()[Ljava/lang/String;
     349: invokestatic  #67                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     352: invokespecial #68                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     355: astore        7
     357: aload         7
     359: invokeinterface #69,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     364: ifeq          376
     367: aload_3
     368: aload         6
     370: invokevirtual #78                 // Method javax/net/ssl/SSLEngine.setEnabledProtocols:([Ljava/lang/String;)V
     373: goto          463
     376: new           #71                 // class java/util/ArrayList
     379: dup
     380: invokespecial #72                 // Method java/util/ArrayList."<init>":()V
     383: astore        8
     385: aload         6
     387: astore        9
     389: aload         9
     391: arraylength
     392: istore        10
     394: iconst_0
     395: istore        11
     397: iload         11
     399: iload         10
     401: if_icmpge     439
     404: aload         9
     406: iload         11
     408: aaload
     409: astore        12
     411: aload         7
     413: aload         12
     415: invokeinterface #73,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     420: ifeq          433
     423: aload         8
     425: aload         12
     427: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     432: pop
     433: iinc          11, 1
     436: goto          397
     439: aload_3
     440: aload         8
     442: aload         8
     444: invokeinterface #75,  1           // InterfaceMethod java/util/List.size:()I
     449: anewarray     #19                 // class java/lang/String
     452: invokeinterface #76,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     457: checkcast     #21                 // class "[Ljava/lang/String;"
     460: invokevirtual #78                 // Method javax/net/ssl/SSLEngine.setEnabledProtocols:([Ljava/lang/String;)V
     463: aload_0
     464: aload_1
     465: aload_3
     466: invokevirtual #79                 // Method accept:(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;)Lio/undertow/protocols/ssl/UndertowSslConnection;
     469: areturn
     470: astore_2
     471: aload_1
     472: invokestatic  #82                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     475: getstatic     #83                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     478: aload_2
     479: invokeinterface #84,  2           // InterfaceMethod io/undertow/UndertowLogger.failedToAcceptSSLRequest:(Ljava/lang/Exception;)V
     484: aconst_null
     485: areturn
    Exception table:
       from    to  target type
          19   469   470   Class java/io/IOException
          19   469   470   Class java/lang/RuntimeException

  protected io.undertow.protocols.ssl.UndertowSslConnection accept(org.xnio.StreamConnection, javax.net.ssl.SSLEngine) throws java.io.IOException;
    Code:
       0: new           #85                 // class io/undertow/protocols/ssl/UndertowSslConnection
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #5                  // Field applicationBufferPool:Lio/undertow/connector/ByteBufferPool;
      10: aload_0
      11: getfield      #4                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
      14: invokevirtual #86                 // Method io/undertow/protocols/ssl/UndertowXnioSsl.getDelegatedTaskExecutor:()Ljava/util/concurrent/Executor;
      17: invokespecial #87                 // Method io/undertow/protocols/ssl/UndertowSslConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lio/undertow/connector/ByteBufferPool;Ljava/util/concurrent/Executor;)V
      20: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #27                 // Field closeSetter:Lorg/xnio/ChannelListener$Setter;
       4: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #88,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.isOpen:()Z
       9: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #89,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.close:()V
       9: return

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #90                 // Field SUPPORTED_OPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #73,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          25
      12: aload_0
      13: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
      16: aload_1
      17: invokeinterface #91,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.supportsOption:(Lorg/xnio/Option;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #7                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     16
       7: aload_1
       8: aload_0
       9: getfield      #10                 // Field clientAuthMode:Lorg/xnio/SslClientAuthMode;
      12: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn
      16: aload_1
      17: getstatic     #11                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      20: if_acmpne     43
      23: aload_1
      24: aload_0
      25: getfield      #13                 // Field useClientMode:I
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: invokestatic  #39                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      39: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      42: areturn
      43: aload_1
      44: getstatic     #14                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      47: if_acmpne     70
      50: aload_1
      51: aload_0
      52: getfield      #15                 // Field enableSessionCreation:I
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: invokestatic  #39                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      66: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      69: areturn
      70: aload_1
      71: getstatic     #16                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      74: if_acmpne     99
      77: aload_0
      78: getfield      #22                 // Field cipherSuites:[Ljava/lang/String;
      81: astore_2
      82: aload_2
      83: ifnonnull     90
      86: aconst_null
      87: goto          98
      90: aload_1
      91: aload_2
      92: invokestatic  #92                 // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
      95: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      98: areturn
      99: aload_1
     100: getstatic     #23                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     103: if_acmpne     128
     106: aload_0
     107: getfield      #24                 // Field protocols:[Ljava/lang/String;
     110: astore_2
     111: aload_2
     112: ifnonnull     119
     115: aconst_null
     116: goto          127
     119: aload_1
     120: aload_2
     121: invokestatic  #92                 // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
     124: invokevirtual #33                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     127: areturn
     128: aload_0
     129: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
     132: aload_1
     133: invokeinterface #93,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
     138: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>> getAcceptSetter();
    Code:
       0: aload_0
       1: getfield      #29                 // Field acceptSetter:Lorg/xnio/ChannelListener$Setter;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #94,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:()Ljava/net/SocketAddress;
       9: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: invokeinterface #95,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
      10: areturn

  public void suspendAccepts();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #96,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.suspendAccepts:()V
       9: return

  public void resumeAccepts();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #97,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
       9: return

  public boolean isAcceptResumed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #98,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.isAcceptResumed:()Z
       9: ireturn

  public void wakeupAccepts();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #99,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.wakeupAccepts:()V
       9: return

  public void awaitAcceptable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #100,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:()V
       9: return

  public void awaitAcceptable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: lload_1
       5: aload_3
       6: invokeinterface #101,  4          // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public org.xnio.XnioExecutor getAcceptThread();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #102,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptThread:()Lorg/xnio/XnioExecutor;
       9: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #103,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       9: areturn

  private static java.lang.String getHostNameNoResolve(java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: invokevirtual #104                // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
       4: areturn

  public org.xnio.channels.ConnectedChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #105                // Method accept:()Lio/undertow/protocols/ssl/UndertowSslConnection;
       4: areturn

  public org.xnio.channels.CloseableChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #105                // Method accept:()Lio/undertow/protocols/ssl/UndertowSslConnection;
       4: areturn

  static {};
    Code:
       0: ldc           #106                // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
       2: ldc           #9                  // class org/xnio/SslClientAuthMode
       4: ldc           #107                // String clientAuthMode
       6: invokestatic  #108                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #32                 // Field clientAuthModeUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #106                // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
      14: ldc           #109                // String useClientMode
      16: invokestatic  #110                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: putstatic     #36                 // Field useClientModeUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: ldc           #106                // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
      24: ldc           #111                // String enableSessionCreation
      26: invokestatic  #110                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      29: putstatic     #40                 // Field enableSessionCreationUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: invokestatic  #112                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
      35: getstatic     #7                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      38: invokevirtual #113                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      41: getstatic     #11                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      44: invokevirtual #113                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      47: getstatic     #14                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      50: invokevirtual #113                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      53: getstatic     #16                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      56: invokevirtual #113                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      59: getstatic     #23                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
      62: invokevirtual #113                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      65: invokevirtual #114                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      68: putstatic     #90                 // Field SUPPORTED_OPTIONS:Ljava/util/Set;
      71: return
}
