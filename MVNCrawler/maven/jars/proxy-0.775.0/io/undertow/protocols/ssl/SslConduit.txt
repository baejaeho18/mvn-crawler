Compiled from "SslConduit.java"
public class io.undertow.protocols.ssl.SslConduit implements org.xnio.conduits.StreamSourceConduit,org.xnio.conduits.StreamSinkConduit {
  public static final int MAX_READ_LISTENER_INVOCATIONS;

  private static final int FLAG_READ_REQUIRES_WRITE;

  private static final int FLAG_WRITE_REQUIRES_READ;

  private static final int FLAG_READS_RESUMED;

  private static final int FLAG_WRITES_RESUMED;

  private static final int FLAG_DATA_TO_UNWRAP;

  private static final int FLAG_READ_SHUTDOWN;

  private static final int FLAG_WRITE_SHUTDOWN;

  private static final int FLAG_ENGINE_INBOUND_SHUTDOWN;

  private static final int FLAG_ENGINE_OUTBOUND_SHUTDOWN;

  private static final int FLAG_DELEGATE_SINK_SHUTDOWN;

  private static final int FLAG_DELEGATE_SOURCE_SHUTDOWN;

  private static final int FLAG_IN_HANDSHAKE;

  private static final int FLAG_CLOSED;

  private static final int FLAG_WRITE_CLOSED;

  private static final int FLAG_READ_CLOSED;

  public static final java.nio.ByteBuffer EMPTY_BUFFER;

  private static volatile io.undertow.connector.ByteBufferPool expandedBufferPool;

  private final io.undertow.protocols.ssl.UndertowSslConnection connection;

  private final org.xnio.StreamConnection delegate;

  private final java.util.concurrent.Executor delegatedTaskExecutor;

  private javax.net.ssl.SSLEngine engine;

  private final org.xnio.conduits.StreamSinkConduit sink;

  private final org.xnio.conduits.StreamSourceConduit source;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final java.lang.Runnable handshakeCallback;

  private volatile int state;

  private volatile int outstandingTasks;

  private volatile io.undertow.connector.PooledByteBuffer wrappedData;

  private volatile io.undertow.connector.PooledByteBuffer dataToUnwrap;

  private volatile io.undertow.connector.PooledByteBuffer unwrappedData;

  private io.undertow.protocols.ssl.SslConduit$SslWriteReadyHandler writeReadyHandler;

  private io.undertow.protocols.ssl.SslConduit$SslReadReadyHandler readReadyHandler;

  private int readListenerInvocationCount;

  private boolean invokingReadListenerHandshake;

  private final java.lang.Runnable runReadListenerCommand;

  private final java.lang.Runnable runReadListenerAndResumeCommand;

  io.undertow.protocols.ssl.SslConduit(io.undertow.protocols.ssl.UndertowSslConnection, org.xnio.StreamConnection, javax.net.ssl.SSLEngine, java.util.concurrent.Executor, io.undertow.connector.ByteBufferPool, java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field state:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field outstandingTasks:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field invokingReadListenerHandshake:Z
      19: aload_0
      20: new           #5                  // class io/undertow/protocols/ssl/SslConduit$1
      23: dup
      24: aload_0
      25: invokespecial #6                  // Method io/undertow/protocols/ssl/SslConduit$1."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      28: putfield      #7                  // Field runReadListenerCommand:Ljava/lang/Runnable;
      31: aload_0
      32: new           #8                  // class io/undertow/protocols/ssl/SslConduit$2
      35: dup
      36: aload_0
      37: invokespecial #9                  // Method io/undertow/protocols/ssl/SslConduit$2."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      40: putfield      #10                 // Field runReadListenerAndResumeCommand:Ljava/lang/Runnable;
      43: aload_0
      44: aload_1
      45: putfield      #11                 // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      48: aload_0
      49: aload_2
      50: putfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      53: aload_0
      54: aload         6
      56: putfield      #13                 // Field handshakeCallback:Ljava/lang/Runnable;
      59: aload_0
      60: aload_2
      61: invokevirtual #14                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      64: invokevirtual #15                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      67: putfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      70: aload_0
      71: aload_2
      72: invokevirtual #17                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      75: invokevirtual #18                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      78: putfield      #19                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      81: aload_0
      82: aload_3
      83: putfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      86: aload_0
      87: aload         4
      89: putfield      #21                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      92: aload_0
      93: aload         5
      95: putfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      98: aload_2
      99: invokevirtual #17                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     102: invokevirtual #18                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     105: aload_0
     106: new           #23                 // class io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler
     109: dup
     110: aload_0
     111: aconst_null
     112: invokespecial #24                 // Method io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/ReadReadyHandler;)V
     115: dup_x1
     116: putfield      #25                 // Field readReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslReadReadyHandler;
     119: invokeinterface #26,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.setReadReadyHandler:(Lorg/xnio/conduits/ReadReadyHandler;)V
     124: aload_2
     125: invokevirtual #14                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     128: invokevirtual #15                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     131: aload_0
     132: new           #27                 // class io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler
     135: dup
     136: aload_0
     137: aconst_null
     138: invokespecial #28                 // Method io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/WriteReadyHandler;)V
     141: dup_x1
     142: putfield      #29                 // Field writeReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler;
     145: invokeinterface #30,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.setWriteReadyHandler:(Lorg/xnio/conduits/WriteReadyHandler;)V
     150: aload_3
     151: invokevirtual #31                 // Method javax/net/ssl/SSLEngine.getUseClientMode:()Z
     154: ifeq          167
     157: aload_0
     158: sipush        2049
     161: putfield      #2                  // Field state:I
     164: goto          174
     167: aload_0
     168: sipush        2050
     171: putfield      #2                  // Field state:I
     174: return

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field state:I
       5: bipush        32
       7: ior
       8: putfield      #2                  // Field state:I
      11: aload_0
      12: invokevirtual #33                 // Method notifyReadClosed:()V
      15: return

  public boolean isReadShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        32
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ireturn

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: iconst_4
       5: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: iconst_0
      14: invokevirtual #35                 // Method resumeReads:(Z)V
      17: return

  public void suspendReads();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field state:I
       5: bipush        -5
       7: iand
       8: putfield      #2                  // Field state:I
      11: aload_0
      12: getfield      #2                  // Field state:I
      15: bipush        10
      17: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
      20: ifne          33
      23: aload_0
      24: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      27: invokevirtual #17                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      30: invokevirtual #37                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      33: return

  public void wakeupReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #35                 // Method resumeReads:(Z)V
       5: return

  private void resumeReads(boolean);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field state:I
       5: iconst_4
       6: ior
       7: putfield      #2                  // Field state:I
      10: aload_0
      11: getfield      #2                  // Field state:I
      14: iconst_1
      15: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      18: ifeq          34
      21: aload_0
      22: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      25: invokevirtual #14                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      28: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      31: goto          75
      34: aload_0
      35: getfield      #2                  // Field state:I
      38: bipush        16
      40: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      43: ifne          57
      46: iload_1
      47: ifne          57
      50: aload_0
      51: getfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      54: ifnull        65
      57: aload_0
      58: iconst_1
      59: invokevirtual #40                 // Method runReadListener:(Z)V
      62: goto          75
      65: aload_0
      66: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      69: invokevirtual #17                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      72: invokevirtual #41                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      75: return

  private void runReadListener(boolean);
    Code:
       0: aload_0
       1: dup
       2: getfield      #42                 // Field readListenerInvocationCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #42                 // Field readListenerInvocationCount:I
      11: getstatic     #43                 // Field MAX_READ_LISTENER_INVOCATIONS:I
      14: if_icmpne     52
      17: getstatic     #44                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      20: aload_0
      21: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowLogger.sslReadLoopDetected:(Lio/undertow/protocols/ssl/SslConduit;)V
      26: iconst_2
      27: anewarray     #46                 // class java/io/Closeable
      30: dup
      31: iconst_0
      32: aload_0
      33: getfield      #11                 // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      36: aastore
      37: dup
      38: iconst_1
      39: aload_0
      40: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      43: aastore
      44: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
      47: aload_0
      48: invokevirtual #48                 // Method close:()V
      51: return
      52: iload_1
      53: ifeq          73
      56: aload_0
      57: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      60: invokevirtual #49                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      63: aload_0
      64: getfield      #10                 // Field runReadListenerAndResumeCommand:Ljava/lang/Runnable;
      67: invokevirtual #50                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      70: goto          87
      73: aload_0
      74: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      77: invokevirtual #49                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      80: aload_0
      81: getfield      #7                  // Field runReadListenerCommand:Ljava/lang/Runnable;
      84: invokevirtual #50                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      87: goto          127
      90: astore_2
      91: iconst_2
      92: anewarray     #46                 // class java/io/Closeable
      95: dup
      96: iconst_0
      97: aload_0
      98: getfield      #11                 // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
     101: aastore
     102: dup
     103: iconst_1
     104: aload_0
     105: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
     108: aastore
     109: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
     112: getstatic     #52                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     115: aload_2
     116: ldc           #53                 // String Failed to queue read listener invocation
     118: iconst_0
     119: anewarray     #54                 // class java/lang/Object
     122: invokeinterface #55,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
     127: return
    Exception table:
       from    to  target type
           0    51    90   Class java/lang/Throwable
          52    87    90   Class java/lang/Throwable

  private void runWriteListener();
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #49                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: new           #56                 // class io/undertow/protocols/ssl/SslConduit$3
      10: dup
      11: aload_0
      12: invokespecial #57                 // Method io/undertow/protocols/ssl/SslConduit$3."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      15: invokevirtual #50                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      18: goto          58
      21: astore_1
      22: iconst_2
      23: anewarray     #46                 // class java/io/Closeable
      26: dup
      27: iconst_0
      28: aload_0
      29: getfield      #11                 // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      39: aastore
      40: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
      43: getstatic     #52                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      46: aload_1
      47: ldc           #53                 // String Failed to queue read listener invocation
      49: iconst_0
      50: anewarray     #54                 // class java/lang/Object
      53: invokeinterface #55,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      58: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Throwable

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: iconst_4
       5: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #3                  // Field outstandingTasks:I
       8: ifle          33
      11: aload_0
      12: invokevirtual #58                 // Method java/lang/Object.wait:()V
      15: aload_1
      16: monitorexit
      17: return
      18: astore_2
      19: invokestatic  #60                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      22: invokevirtual #61                 // Method java/lang/Thread.interrupt:()V
      25: new           #62                 // class java/io/InterruptedIOException
      28: dup
      29: invokespecial #63                 // Method java/io/InterruptedIOException."<init>":()V
      32: athrow
      33: aload_1
      34: monitorexit
      35: goto          43
      38: astore_3
      39: aload_1
      40: monitorexit
      41: aload_3
      42: athrow
      43: aload_0
      44: getfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      47: ifnull        51
      50: return
      51: aload_0
      52: getfield      #2                  // Field state:I
      55: bipush        16
      57: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      60: ifeq          64
      63: return
      64: aload_0
      65: getfield      #2                  // Field state:I
      68: iconst_1
      69: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      72: ifeq          80
      75: aload_0
      76: invokevirtual #64                 // Method awaitWritable:()V
      79: return
      80: aload_0
      81: getfield      #19                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      84: invokeinterface #65,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:()V
      89: return
    Exception table:
       from    to  target type
          11    15    18   Class java/lang/InterruptedException
           4    17    38   any
          18    35    38   any
          38    41    38   any

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #3                  // Field outstandingTasks:I
       9: ifle          41
      12: aload_0
      13: aload_3
      14: lload_1
      15: invokevirtual #66                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      18: invokevirtual #67                 // Method java/lang/Object.wait:(J)V
      21: aload         4
      23: monitorexit
      24: return
      25: astore        5
      27: invokestatic  #60                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      30: invokevirtual #61                 // Method java/lang/Thread.interrupt:()V
      33: new           #62                 // class java/io/InterruptedIOException
      36: dup
      37: invokespecial #63                 // Method java/io/InterruptedIOException."<init>":()V
      40: athrow
      41: aload         4
      43: monitorexit
      44: goto          55
      47: astore        6
      49: aload         4
      51: monitorexit
      52: aload         6
      54: athrow
      55: aload_0
      56: getfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      59: ifnull        63
      62: return
      63: aload_0
      64: getfield      #2                  // Field state:I
      67: bipush        16
      69: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      72: ifeq          76
      75: return
      76: aload_0
      77: getfield      #2                  // Field state:I
      80: iconst_1
      81: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      84: ifeq          94
      87: aload_0
      88: lload_1
      89: aload_3
      90: invokevirtual #68                 // Method awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      93: return
      94: aload_0
      95: getfield      #19                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      98: lload_1
      99: aload_3
     100: invokeinterface #69,  4           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
     105: return
    Exception table:
       from    to  target type
          12    21    25   Class java/lang/InterruptedException
           5    24    47   any
          25    44    47   any
          47    52    47   any

  public org.xnio.XnioIoThread getReadThread();
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #49                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public void setReadReadyHandler(org.xnio.conduits.ReadReadyHandler);
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #17                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
       7: invokevirtual #18                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      10: aload_0
      11: new           #23                 // class io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #24                 // Method io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/ReadReadyHandler;)V
      20: dup_x1
      21: putfield      #25                 // Field readReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslReadReadyHandler;
      24: invokeinterface #26,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.setReadReadyHandler:(Lorg/xnio/conduits/ReadReadyHandler;)V
      29: return

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        64
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_1
      21: lload_2
      22: lload         4
      24: new           #72                 // class org/xnio/conduits/ConduitWritableByteChannel
      27: dup
      28: aload_0
      29: invokespecial #73                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      32: invokevirtual #74                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      35: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        64
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_1
      21: lload_2
      22: aload         4
      24: new           #72                 // class org/xnio/conduits/ConduitWritableByteChannel
      27: dup
      28: aload_0
      29: invokespecial #73                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      32: invokestatic  #75                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      35: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        64
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: iconst_1
      22: anewarray     #76                 // class java/nio/ByteBuffer
      25: dup
      26: iconst_0
      27: aload_1
      28: aastore
      29: iconst_0
      30: iconst_1
      31: invokevirtual #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      34: l2i
      35: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        64
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokevirtual #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      27: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        64
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: invokestatic  #78                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;Ljava/nio/ByteBuffer;)I
      25: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #79                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field state:I
       5: bipush        64
       7: ior
       8: putfield      #2                  // Field state:I
      11: return

  public boolean isWriteShutdown();
    Code:
       0: iconst_0
       1: ireturn

  public void resumeWrites();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field state:I
       5: bipush        8
       7: ior
       8: putfield      #2                  // Field state:I
      11: aload_0
      12: getfield      #2                  // Field state:I
      15: iconst_2
      16: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      19: ifeq          35
      22: aload_0
      23: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      26: invokevirtual #17                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      29: invokevirtual #41                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      32: goto          45
      35: aload_0
      36: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      39: invokevirtual #14                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      42: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      45: return

  public void suspendWrites();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field state:I
       5: bipush        -9
       7: iand
       8: putfield      #2                  // Field state:I
      11: aload_0
      12: getfield      #2                  // Field state:I
      15: iconst_5
      16: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
      19: ifne          32
      22: aload_0
      23: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      26: invokevirtual #14                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      29: invokevirtual #80                 // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      32: return

  public void wakeupWrites();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field state:I
       5: bipush        8
       7: ior
       8: putfield      #2                  // Field state:I
      11: aload_0
      12: invokevirtual #81                 // Method getWriteThread:()Lorg/xnio/XnioIoThread;
      15: new           #82                 // class io/undertow/protocols/ssl/SslConduit$4
      18: dup
      19: aload_0
      20: invokespecial #83                 // Method io/undertow/protocols/ssl/SslConduit$4."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      23: invokevirtual #50                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      26: return

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        8
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ireturn

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        64
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #3                  // Field outstandingTasks:I
      17: ifle          63
      20: aload_0
      21: dup
      22: astore_1
      23: monitorenter
      24: aload_0
      25: getfield      #3                  // Field outstandingTasks:I
      28: ifle          53
      31: aload_0
      32: invokevirtual #58                 // Method java/lang/Object.wait:()V
      35: aload_1
      36: monitorexit
      37: return
      38: astore_2
      39: invokestatic  #60                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      42: invokevirtual #61                 // Method java/lang/Thread.interrupt:()V
      45: new           #62                 // class java/io/InterruptedIOException
      48: dup
      49: invokespecial #63                 // Method java/io/InterruptedIOException."<init>":()V
      52: athrow
      53: aload_1
      54: monitorexit
      55: goto          63
      58: astore_3
      59: aload_1
      60: monitorexit
      61: aload_3
      62: athrow
      63: aload_0
      64: getfield      #2                  // Field state:I
      67: iconst_2
      68: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      71: ifeq          79
      74: aload_0
      75: invokevirtual #84                 // Method awaitReadable:()V
      78: return
      79: aload_0
      80: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      83: invokeinterface #85,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
      88: return
    Exception table:
       from    to  target type
          31    35    38   Class java/lang/InterruptedException
          24    37    58   any
          38    55    58   any
          58    61    58   any

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        64
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #3                  // Field outstandingTasks:I
      17: ifle          75
      20: aload_0
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_0
      26: getfield      #3                  // Field outstandingTasks:I
      29: ifle          61
      32: aload_0
      33: aload_3
      34: lload_1
      35: invokevirtual #66                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      38: invokevirtual #67                 // Method java/lang/Object.wait:(J)V
      41: aload         4
      43: monitorexit
      44: return
      45: astore        5
      47: invokestatic  #60                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      50: invokevirtual #61                 // Method java/lang/Thread.interrupt:()V
      53: new           #62                 // class java/io/InterruptedIOException
      56: dup
      57: invokespecial #63                 // Method java/io/InterruptedIOException."<init>":()V
      60: athrow
      61: aload         4
      63: monitorexit
      64: goto          75
      67: astore        6
      69: aload         4
      71: monitorexit
      72: aload         6
      74: athrow
      75: aload_0
      76: getfield      #2                  // Field state:I
      79: iconst_2
      80: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      83: ifeq          93
      86: aload_0
      87: lload_1
      88: aload_3
      89: invokevirtual #86                 // Method awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      92: return
      93: aload_0
      94: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      97: invokeinterface #85,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
     102: return
    Exception table:
       from    to  target type
          32    41    45   Class java/lang/InterruptedException
          25    44    67   any
          45    64    67   any
          67    72    67   any

  public org.xnio.XnioIoThread getWriteThread();
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #49                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public void setWriteReadyHandler(org.xnio.conduits.WriteReadyHandler);
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #14                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #15                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      10: aload_0
      11: new           #27                 // class io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #28                 // Method io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/WriteReadyHandler;)V
      20: dup_x1
      21: putfield      #29                 // Field writeReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler;
      24: invokeinterface #30,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.setWriteReadyHandler:(Lorg/xnio/conduits/WriteReadyHandler;)V
      29: return

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method notifyWriteClosed:()V
       4: aload_0
       5: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       8: invokevirtual #14                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      11: invokevirtual #88                 // Method org/xnio/conduits/ConduitStreamSinkChannel.close:()V
      14: goto          30
      17: astore_1
      18: aload_0
      19: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      22: invokevirtual #14                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      25: invokevirtual #88                 // Method org/xnio/conduits/ConduitStreamSinkChannel.close:()V
      28: aload_1
      29: athrow
      30: return
    Exception table:
       from    to  target type
           0     4    17   any

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: sipush        512
       7: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          23
      13: aload_0
      14: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      17: invokeinterface #89,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      22: ireturn
      23: aload_0
      24: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      27: ifnull        47
      30: aload_0
      31: aconst_null
      32: iconst_0
      33: iconst_0
      34: invokevirtual #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      37: pop2
      38: aload_0
      39: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      42: ifnull        47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #2                  // Field state:I
      51: bipush        64
      53: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
      56: ifeq          216
      59: aload_0
      60: getfield      #2                  // Field state:I
      63: sipush        256
      66: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
      69: ifeq          108
      72: aload_0
      73: dup
      74: getfield      #2                  // Field state:I
      77: sipush        256
      80: ior
      81: putfield      #2                  // Field state:I
      84: aload_0
      85: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      88: invokevirtual #92                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      91: aload_0
      92: aconst_null
      93: iconst_0
      94: iconst_0
      95: invokevirtual #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      98: pop2
      99: aload_0
     100: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     103: ifnull        145
     106: iconst_0
     107: ireturn
     108: aload_0
     109: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     112: ifnull        145
     115: aload_0
     116: getfield      #2                  // Field state:I
     119: sipush        512
     122: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
     125: ifeq          145
     128: aload_0
     129: aconst_null
     130: iconst_0
     131: iconst_0
     132: invokevirtual #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
     135: pop2
     136: aload_0
     137: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     140: ifnull        145
     143: iconst_0
     144: ireturn
     145: aload_0
     146: getfield      #2                  // Field state:I
     149: sipush        512
     152: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
     155: ifeq          183
     158: aload_0
     159: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     162: invokeinterface #93,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
     167: aload_0
     168: dup
     169: getfield      #2                  // Field state:I
     172: sipush        512
     175: ior
     176: putfield      #2                  // Field state:I
     179: aload_0
     180: invokevirtual #87                 // Method notifyWriteClosed:()V
     183: aload_0
     184: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     187: invokeinterface #89,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     192: istore_1
     193: iload_1
     194: ifeq          214
     197: aload_0
     198: getfield      #2                  // Field state:I
     201: sipush        16384
     204: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     207: ifeq          214
     210: aload_0
     211: invokevirtual #94                 // Method closed:()V
     214: iload_1
     215: ireturn
     216: aload_0
     217: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     220: invokeinterface #89,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     225: ireturn

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        32
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          16
      12: ldc2_w        #95                 // long -1l
      15: lreturn
      16: aload         5
      18: new           #97                 // class org/xnio/conduits/ConduitReadableByteChannel
      21: dup
      22: aload_0
      23: invokespecial #98                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      26: lload_1
      27: lload_3
      28: invokevirtual #99                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      31: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        32
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          16
      12: ldc2_w        #95                 // long -1l
      15: lreturn
      16: new           #97                 // class org/xnio/conduits/ConduitReadableByteChannel
      19: dup
      20: aload_0
      21: invokespecial #98                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      24: lload_1
      25: aload_3
      26: aload         4
      28: invokestatic  #75                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      31: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        32
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          14
      12: iconst_m1
      13: ireturn
      14: aload_0
      15: iconst_1
      16: anewarray     #76                 // class java/nio/ByteBuffer
      19: dup
      20: iconst_0
      21: aload_1
      22: aastore
      23: iconst_0
      24: iconst_1
      25: invokevirtual #100                // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
      28: l2i
      29: ireturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: bipush        32
       6: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          16
      12: ldc2_w        #95                 // long -1l
      15: lreturn
      16: aload_0
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokevirtual #100                // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
      23: lreturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #101                // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  private java.util.concurrent.Executor getDelegatedTaskExecutor();
    Code:
       0: aload_0
       1: getfield      #21                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
       4: ifnonnull     14
       7: aload_0
       8: invokevirtual #102                // Method getWorker:()Lorg/xnio/XnioWorker;
      11: goto          18
      14: aload_0
      15: getfield      #21                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      18: areturn

  void notifyWriteClosed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: sipush        8192
       7: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokevirtual #103                // Method isWriteResumed:()Z
      18: ifeq          38
      21: aload_0
      22: getfield      #2                  // Field state:I
      25: sipush        4096
      28: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore_1
      40: aload_0
      41: getfield      #11                 // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      44: invokevirtual #104                // Method io/undertow/protocols/ssl/UndertowSslConnection.writeClosed:()Z
      47: pop
      48: aload_0
      49: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      52: invokevirtual #92                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      55: aload_0
      56: dup
      57: getfield      #2                  // Field state:I
      60: sipush        8448
      63: ior
      64: putfield      #2                  // Field state:I
      67: aload_0
      68: getfield      #2                  // Field state:I
      71: sipush        16384
      74: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      77: ifeq          84
      80: aload_0
      81: invokevirtual #94                 // Method closed:()V
      84: aload_0
      85: getfield      #2                  // Field state:I
      88: iconst_1
      89: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      92: ifeq          99
      95: aload_0
      96: invokevirtual #33                 // Method notifyReadClosed:()V
      99: aload_0
     100: dup
     101: getfield      #2                  // Field state:I
     104: bipush        -3
     106: iand
     107: putfield      #2                  // Field state:I
     110: iload_1
     111: ifeq          118
     114: aload_0
     115: invokevirtual #105                // Method runWriteListener:()V
     118: return

  void notifyReadClosed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: sipush        16384
       7: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokevirtual #106                // Method isReadResumed:()Z
      18: ifeq          38
      21: aload_0
      22: getfield      #2                  // Field state:I
      25: sipush        4096
      28: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore_1
      40: aload_0
      41: getfield      #11                 // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      44: invokevirtual #107                // Method io/undertow/protocols/ssl/UndertowSslConnection.readClosed:()Z
      47: pop
      48: aload_0
      49: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      52: invokevirtual #108                // Method javax/net/ssl/SSLEngine.closeInbound:()V
      55: goto          94
      58: astore_2
      59: getstatic     #52                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      62: ldc           #110                // String Exception closing read side of SSL channel
      64: aload_2
      65: invokeinterface #111,  3          // InterfaceMethod io/undertow/UndertowLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      70: aload_0
      71: getfield      #2                  // Field state:I
      74: sipush        8192
      77: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
      80: ifeq          94
      83: aload_0
      84: invokevirtual #103                // Method isWriteResumed:()Z
      87: ifeq          94
      90: aload_0
      91: invokevirtual #105                // Method runWriteListener:()V
      94: aload_0
      95: dup
      96: getfield      #2                  // Field state:I
      99: sipush        16544
     102: ior
     103: putfield      #2                  // Field state:I
     106: aload_0
     107: getfield      #2                  // Field state:I
     110: sipush        8192
     113: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     116: ifeq          123
     119: aload_0
     120: invokevirtual #94                 // Method closed:()V
     123: aload_0
     124: getfield      #2                  // Field state:I
     127: iconst_2
     128: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     131: ifeq          138
     134: aload_0
     135: invokevirtual #87                 // Method notifyWriteClosed:()V
     138: iload_1
     139: ifeq          147
     142: aload_0
     143: iconst_0
     144: invokevirtual #40                 // Method runReadListener:(Z)V
     147: return
    Exception table:
       from    to  target type
          48    55    58   Class javax/net/ssl/SSLException

  public void startHandshake() throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field state:I
       5: iconst_1
       6: ior
       7: putfield      #2                  // Field state:I
      10: aload_0
      11: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      14: invokevirtual #112                // Method javax/net/ssl/SSLEngine.beginHandshake:()V
      17: return

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aload_0
       1: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #113                // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
       7: areturn

  private void doHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_0
       3: iconst_0
       4: invokevirtual #100                // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
       7: pop2
       8: aload_0
       9: aconst_null
      10: iconst_0
      11: iconst_0
      12: invokevirtual #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      15: pop2
      16: return

  private javax.net.ssl.SSLEngineResult engineUnwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int, io.undertow.protocols.ssl.SslConduit$AccumulativeOrBoolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: invokevirtual #114                // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
      12: astore        6
      14: aload         5
      16: aload         6
      18: invokevirtual #115                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
      21: ifle          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: invokevirtual #116                // Method io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean.add:(Z)V
      32: aload         6
      34: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      37: getstatic     #118                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_UNWRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      40: if_acmpne     61
      43: aload         6
      45: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
      48: getstatic     #120                // Field javax/net/ssl/SSLEngineResult$Status.OK:Ljavax/net/ssl/SSLEngineResult$Status;
      51: if_acmpne     61
      54: aload_1
      55: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
      58: ifne          0
      61: aload         6
      63: areturn

  private synchronized long doUnwrap(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: sipush        4096
       7: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          21
      13: new           #70                 // class java/nio/channels/ClosedChannelException
      16: dup
      17: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field outstandingTasks:I
      25: ifle          30
      28: lconst_0
      29: lreturn
      30: aload_0
      31: getfield      #2                  // Field state:I
      34: iconst_1
      35: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      38: ifeq          62
      41: aload_0
      42: aconst_null
      43: iconst_0
      44: iconst_0
      45: invokevirtual #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      48: pop2
      49: aload_0
      50: getfield      #2                  // Field state:I
      53: iconst_2
      54: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
      57: ifeq          62
      60: lconst_0
      61: lreturn
      62: new           #122                // class io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean
      65: dup
      66: invokespecial #123                // Method io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean."<init>":()V
      69: astore        4
      71: aload_0
      72: getfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      75: astore        5
      77: aload         5
      79: ifnull        142
      82: aload_1
      83: ifnull        142
      86: aload_1
      87: iload_2
      88: iload_3
      89: aload         5
      91: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      96: invokestatic  #125                // Method org/xnio/Buffers.copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      99: i2l
     100: lstore        6
     102: aload         5
     104: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     109: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     112: ifne          127
     115: aload         5
     117: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     122: aload_0
     123: aconst_null
     124: putfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
     127: lload         6
     129: lconst_0
     130: lcmp
     131: ifle          139
     134: aload_0
     135: iconst_0
     136: putfield      #42                 // Field readListenerInvocationCount:I
     139: lload         6
     141: lreturn
     142: aload_0
     143: getfield      #2                  // Field state:I
     146: bipush        16
     148: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
     151: ifeq          666
     154: aload_0
     155: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     158: ifnonnull     174
     161: aload_0
     162: aload_0
     163: getfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     166: invokeinterface #128,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     171: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     174: aload_0
     175: getfield      #19                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
     178: aload_0
     179: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     182: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     187: invokeinterface #129,  2          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     192: istore        7
     194: goto          216
     197: astore        8
     199: aload_0
     200: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     203: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     208: aload_0
     209: aconst_null
     210: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     213: aload         8
     215: athrow
     216: aload_0
     217: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     220: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     225: invokevirtual #133                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     228: pop
     229: iload         7
     231: iconst_m1
     232: if_icmpne     437
     235: aload_0
     236: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     239: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     244: aload_0
     245: aconst_null
     246: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     249: aload_0
     250: invokevirtual #33                 // Method notifyReadClosed:()V
     253: ldc2_w        #95                 // long -1l
     256: lstore        8
     258: iconst_0
     259: istore        10
     261: aload         4
     263: invokevirtual #134                // Method io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean.get:()Z
     266: ifne          297
     269: aload         5
     271: ifnull        300
     274: aload         5
     276: invokeinterface #135,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
     281: ifeq          300
     284: aload         5
     286: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     291: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     294: ifeq          300
     297: iconst_1
     298: istore        10
     300: aload_0
     301: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     304: ifnull        394
     307: aload_0
     308: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     311: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     316: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     319: ifeq          335
     322: aload_0
     323: getfield      #2                  // Field state:I
     326: sipush        4096
     329: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     332: ifeq          363
     335: aload_0
     336: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     339: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     344: aload_0
     345: aconst_null
     346: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     349: aload_0
     350: dup
     351: getfield      #2                  // Field state:I
     354: bipush        -17
     356: iand
     357: putfield      #2                  // Field state:I
     360: goto          394
     363: aload_0
     364: getfield      #2                  // Field state:I
     367: bipush        16
     369: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
     372: ifeq          391
     375: aload_0
     376: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     379: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     384: invokevirtual #136                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     387: pop
     388: goto          394
     391: iconst_1
     392: istore        10
     394: iload         10
     396: ifeq          434
     399: aload_0
     400: getfield      #2                  // Field state:I
     403: iconst_4
     404: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     407: ifne          422
     410: aload_0
     411: getfield      #2                  // Field state:I
     414: bipush        10
     416: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
     419: ifeq          434
     422: aload_0
     423: getfield      #4                  // Field invokingReadListenerHandshake:Z
     426: ifne          434
     429: aload_0
     430: iconst_0
     431: invokevirtual #40                 // Method runReadListener:(Z)V
     434: lload         8
     436: lreturn
     437: iload         7
     439: ifne          666
     442: aload_0
     443: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
     446: invokevirtual #137                // Method javax/net/ssl/SSLEngine.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     449: getstatic     #138                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     452: if_acmpne     666
     455: aload_0
     456: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     459: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     464: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     467: ifne          484
     470: aload_0
     471: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     474: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     479: aload_0
     480: aconst_null
     481: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     484: lconst_0
     485: lstore        8
     487: iconst_0
     488: istore        10
     490: aload         4
     492: invokevirtual #134                // Method io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean.get:()Z
     495: ifne          526
     498: aload         5
     500: ifnull        529
     503: aload         5
     505: invokeinterface #135,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
     510: ifeq          529
     513: aload         5
     515: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     520: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     523: ifeq          529
     526: iconst_1
     527: istore        10
     529: aload_0
     530: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     533: ifnull        623
     536: aload_0
     537: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     540: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     545: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     548: ifeq          564
     551: aload_0
     552: getfield      #2                  // Field state:I
     555: sipush        4096
     558: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     561: ifeq          592
     564: aload_0
     565: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     568: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     573: aload_0
     574: aconst_null
     575: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     578: aload_0
     579: dup
     580: getfield      #2                  // Field state:I
     583: bipush        -17
     585: iand
     586: putfield      #2                  // Field state:I
     589: goto          623
     592: aload_0
     593: getfield      #2                  // Field state:I
     596: bipush        16
     598: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
     601: ifeq          620
     604: aload_0
     605: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     608: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     613: invokevirtual #136                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     616: pop
     617: goto          623
     620: iconst_1
     621: istore        10
     623: iload         10
     625: ifeq          663
     628: aload_0
     629: getfield      #2                  // Field state:I
     632: iconst_4
     633: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     636: ifne          651
     639: aload_0
     640: getfield      #2                  // Field state:I
     643: bipush        10
     645: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
     648: ifeq          663
     651: aload_0
     652: getfield      #4                  // Field invokingReadListenerHandshake:Z
     655: ifne          663
     658: aload_0
     659: iconst_0
     660: invokevirtual #40                 // Method runReadListener:(Z)V
     663: lload         8
     665: lreturn
     666: aload_0
     667: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     670: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     675: invokevirtual #139                // Method java/nio/ByteBuffer.remaining:()I
     678: istore        6
     680: lconst_0
     681: lstore        7
     683: aload_1
     684: ifnull        693
     687: aload_1
     688: invokestatic  #140                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     691: lstore        7
     693: iconst_0
     694: istore        10
     696: aload_1
     697: ifnull        799
     700: aload_0
     701: aload_0
     702: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     705: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     710: aload_1
     711: iload_2
     712: iload_3
     713: aload         4
     715: invokevirtual #141                // Method engineUnwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;IILio/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean;)Ljavax/net/ssl/SSLEngineResult;
     718: astore        9
     720: aload         9
     722: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     725: getstatic     #142                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     728: if_acmpne     865
     731: aload_0
     732: getfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     735: invokeinterface #128,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     740: astore        5
     742: iload_3
     743: iconst_1
     744: iadd
     745: anewarray     #76                 // class java/nio/ByteBuffer
     748: astore        11
     750: aload_1
     751: iload_2
     752: aload         11
     754: iconst_0
     755: iload_3
     756: invokestatic  #143                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     759: aload         11
     761: iload_3
     762: aload         5
     764: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     769: aastore
     770: aload_0
     771: aload_0
     772: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     775: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     780: aload         11
     782: iconst_0
     783: aload         11
     785: arraylength
     786: aload         4
     788: invokevirtual #141                // Method engineUnwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;IILio/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean;)Ljavax/net/ssl/SSLEngineResult;
     791: astore        9
     793: iconst_1
     794: istore        10
     796: goto          865
     799: iconst_1
     800: istore        10
     802: aload         5
     804: ifnonnull     821
     807: aload_0
     808: getfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     811: invokeinterface #128,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     816: astore        5
     818: goto          832
     821: aload         5
     823: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     828: invokevirtual #136                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     831: pop
     832: aload_0
     833: aload_0
     834: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     837: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     842: iconst_1
     843: anewarray     #76                 // class java/nio/ByteBuffer
     846: dup
     847: iconst_0
     848: aload         5
     850: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     855: aastore
     856: iconst_0
     857: iconst_1
     858: aload         4
     860: invokevirtual #141                // Method engineUnwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;IILio/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean;)Ljavax/net/ssl/SSLEngineResult;
     863: astore        9
     865: iload         10
     867: ifeq          904
     870: aload         5
     872: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     877: invokevirtual #133                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     880: pop
     881: aload         5
     883: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     888: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     891: ifne          904
     894: aload         5
     896: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     901: aconst_null
     902: astore        5
     904: aload_0
     905: aload         5
     907: putfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
     910: goto          963
     913: astore        12
     915: iload         10
     917: ifeq          954
     920: aload         5
     922: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     927: invokevirtual #133                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     930: pop
     931: aload         5
     933: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     938: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     941: ifne          954
     944: aload         5
     946: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     951: aconst_null
     952: astore        5
     954: aload_0
     955: aload         5
     957: putfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
     960: aload         12
     962: athrow
     963: aload         9
     965: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     968: getstatic     #144                // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
     971: if_acmpne     1183
     974: aload_0
     975: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     978: ifnull        995
     981: aload_0
     982: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     985: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     990: aload_0
     991: aconst_null
     992: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     995: aload_0
     996: invokevirtual #33                 // Method notifyReadClosed:()V
     999: ldc2_w        #95                 // long -1l
    1002: lstore        11
    1004: iconst_0
    1005: istore        13
    1007: aload         4
    1009: invokevirtual #134                // Method io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean.get:()Z
    1012: ifne          1043
    1015: aload         5
    1017: ifnull        1046
    1020: aload         5
    1022: invokeinterface #135,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    1027: ifeq          1046
    1030: aload         5
    1032: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1037: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1040: ifeq          1046
    1043: iconst_1
    1044: istore        13
    1046: aload_0
    1047: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1050: ifnull        1140
    1053: aload_0
    1054: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1057: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1062: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1065: ifeq          1081
    1068: aload_0
    1069: getfield      #2                  // Field state:I
    1072: sipush        4096
    1075: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1078: ifeq          1109
    1081: aload_0
    1082: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1085: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1090: aload_0
    1091: aconst_null
    1092: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1095: aload_0
    1096: dup
    1097: getfield      #2                  // Field state:I
    1100: bipush        -17
    1102: iand
    1103: putfield      #2                  // Field state:I
    1106: goto          1140
    1109: aload_0
    1110: getfield      #2                  // Field state:I
    1113: bipush        16
    1115: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
    1118: ifeq          1137
    1121: aload_0
    1122: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1125: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1130: invokevirtual #136                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1133: pop
    1134: goto          1140
    1137: iconst_1
    1138: istore        13
    1140: iload         13
    1142: ifeq          1180
    1145: aload_0
    1146: getfield      #2                  // Field state:I
    1149: iconst_4
    1150: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1153: ifne          1168
    1156: aload_0
    1157: getfield      #2                  // Field state:I
    1160: bipush        10
    1162: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
    1165: ifeq          1180
    1168: aload_0
    1169: getfield      #4                  // Field invokingReadListenerHandshake:Z
    1172: ifne          1180
    1175: aload_0
    1176: iconst_0
    1177: invokevirtual #40                 // Method runReadListener:(Z)V
    1180: lload         11
    1182: lreturn
    1183: aload_0
    1184: aload         9
    1186: invokevirtual #145                // Method handleHandshakeResult:(Ljavax/net/ssl/SSLEngineResult;)Z
    1189: ifne          1442
    1192: aload_0
    1193: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1196: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1201: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1204: ifeq          1249
    1207: aload         9
    1209: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
    1212: getstatic     #146                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
    1215: if_acmpeq     1249
    1218: aload_0
    1219: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1222: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1227: invokevirtual #139                // Method java/nio/ByteBuffer.remaining:()I
    1230: iload         6
    1232: if_icmpeq     1249
    1235: aload_0
    1236: dup
    1237: getfield      #2                  // Field state:I
    1240: bipush        16
    1242: ior
    1243: putfield      #2                  // Field state:I
    1246: goto          1260
    1249: aload_0
    1250: dup
    1251: getfield      #2                  // Field state:I
    1254: bipush        -17
    1256: iand
    1257: putfield      #2                  // Field state:I
    1260: lconst_0
    1261: lstore        11
    1263: iconst_0
    1264: istore        13
    1266: aload         4
    1268: invokevirtual #134                // Method io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean.get:()Z
    1271: ifne          1302
    1274: aload         5
    1276: ifnull        1305
    1279: aload         5
    1281: invokeinterface #135,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    1286: ifeq          1305
    1289: aload         5
    1291: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1296: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1299: ifeq          1305
    1302: iconst_1
    1303: istore        13
    1305: aload_0
    1306: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1309: ifnull        1399
    1312: aload_0
    1313: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1316: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1321: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1324: ifeq          1340
    1327: aload_0
    1328: getfield      #2                  // Field state:I
    1331: sipush        4096
    1334: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1337: ifeq          1368
    1340: aload_0
    1341: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1344: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1349: aload_0
    1350: aconst_null
    1351: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1354: aload_0
    1355: dup
    1356: getfield      #2                  // Field state:I
    1359: bipush        -17
    1361: iand
    1362: putfield      #2                  // Field state:I
    1365: goto          1399
    1368: aload_0
    1369: getfield      #2                  // Field state:I
    1372: bipush        16
    1374: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
    1377: ifeq          1396
    1380: aload_0
    1381: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1384: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1389: invokevirtual #136                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1392: pop
    1393: goto          1399
    1396: iconst_1
    1397: istore        13
    1399: iload         13
    1401: ifeq          1439
    1404: aload_0
    1405: getfield      #2                  // Field state:I
    1408: iconst_4
    1409: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1412: ifne          1427
    1415: aload_0
    1416: getfield      #2                  // Field state:I
    1419: bipush        10
    1421: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
    1424: ifeq          1439
    1427: aload_0
    1428: getfield      #4                  // Field invokingReadListenerHandshake:Z
    1431: ifne          1439
    1434: aload_0
    1435: iconst_0
    1436: invokevirtual #40                 // Method runReadListener:(Z)V
    1439: lload         11
    1441: lreturn
    1442: aload         9
    1444: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
    1447: getstatic     #146                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
    1450: if_acmpne     1467
    1453: aload_0
    1454: dup
    1455: getfield      #2                  // Field state:I
    1458: bipush        -17
    1460: iand
    1461: putfield      #2                  // Field state:I
    1464: goto          1554
    1467: aload         9
    1469: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
    1472: getstatic     #142                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
    1475: if_acmpne     1497
    1478: getstatic     #44                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
    1481: aload_0
    1482: invokeinterface #147,  2          // InterfaceMethod io/undertow/UndertowLogger.sslBufferOverflow:(Lio/undertow/protocols/ssl/SslConduit;)V
    1487: aload_0
    1488: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
    1491: invokestatic  #148                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
    1494: goto          1554
    1497: aload_0
    1498: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1501: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1506: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1509: ifeq          1543
    1512: aload_0
    1513: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1516: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1521: invokevirtual #139                // Method java/nio/ByteBuffer.remaining:()I
    1524: iload         6
    1526: if_icmpeq     1543
    1529: aload_0
    1530: dup
    1531: getfield      #2                  // Field state:I
    1534: bipush        16
    1536: ior
    1537: putfield      #2                  // Field state:I
    1540: goto          1554
    1543: aload_0
    1544: dup
    1545: getfield      #2                  // Field state:I
    1548: bipush        -17
    1550: iand
    1551: putfield      #2                  // Field state:I
    1554: aload_1
    1555: ifnonnull     1740
    1558: lconst_0
    1559: lstore        11
    1561: iconst_0
    1562: istore        13
    1564: aload         4
    1566: invokevirtual #134                // Method io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean.get:()Z
    1569: ifne          1600
    1572: aload         5
    1574: ifnull        1603
    1577: aload         5
    1579: invokeinterface #135,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    1584: ifeq          1603
    1587: aload         5
    1589: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1594: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1597: ifeq          1603
    1600: iconst_1
    1601: istore        13
    1603: aload_0
    1604: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1607: ifnull        1697
    1610: aload_0
    1611: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1614: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1619: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1622: ifeq          1638
    1625: aload_0
    1626: getfield      #2                  // Field state:I
    1629: sipush        4096
    1632: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1635: ifeq          1666
    1638: aload_0
    1639: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1642: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1647: aload_0
    1648: aconst_null
    1649: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1652: aload_0
    1653: dup
    1654: getfield      #2                  // Field state:I
    1657: bipush        -17
    1659: iand
    1660: putfield      #2                  // Field state:I
    1663: goto          1697
    1666: aload_0
    1667: getfield      #2                  // Field state:I
    1670: bipush        16
    1672: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
    1675: ifeq          1694
    1678: aload_0
    1679: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1682: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1687: invokevirtual #136                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1690: pop
    1691: goto          1697
    1694: iconst_1
    1695: istore        13
    1697: iload         13
    1699: ifeq          1737
    1702: aload_0
    1703: getfield      #2                  // Field state:I
    1706: iconst_4
    1707: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1710: ifne          1725
    1713: aload_0
    1714: getfield      #2                  // Field state:I
    1717: bipush        10
    1719: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
    1722: ifeq          1737
    1725: aload_0
    1726: getfield      #4                  // Field invokingReadListenerHandshake:Z
    1729: ifne          1737
    1732: aload_0
    1733: iconst_0
    1734: invokevirtual #40                 // Method runReadListener:(Z)V
    1737: lload         11
    1739: lreturn
    1740: lload         7
    1742: aload_1
    1743: invokestatic  #140                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
    1746: lsub
    1747: lstore        11
    1749: lload         11
    1751: lconst_0
    1752: lcmp
    1753: ifle          1761
    1756: aload_0
    1757: iconst_0
    1758: putfield      #42                 // Field readListenerInvocationCount:I
    1761: lload         11
    1763: lstore        13
    1765: iconst_0
    1766: istore        15
    1768: aload         4
    1770: invokevirtual #134                // Method io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean.get:()Z
    1773: ifne          1804
    1776: aload         5
    1778: ifnull        1807
    1781: aload         5
    1783: invokeinterface #135,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    1788: ifeq          1807
    1791: aload         5
    1793: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1798: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1801: ifeq          1807
    1804: iconst_1
    1805: istore        15
    1807: aload_0
    1808: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1811: ifnull        1901
    1814: aload_0
    1815: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1818: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1823: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1826: ifeq          1842
    1829: aload_0
    1830: getfield      #2                  // Field state:I
    1833: sipush        4096
    1836: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1839: ifeq          1870
    1842: aload_0
    1843: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1846: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1851: aload_0
    1852: aconst_null
    1853: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1856: aload_0
    1857: dup
    1858: getfield      #2                  // Field state:I
    1861: bipush        -17
    1863: iand
    1864: putfield      #2                  // Field state:I
    1867: goto          1901
    1870: aload_0
    1871: getfield      #2                  // Field state:I
    1874: bipush        16
    1876: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
    1879: ifeq          1898
    1882: aload_0
    1883: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1886: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1891: invokevirtual #136                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1894: pop
    1895: goto          1901
    1898: iconst_1
    1899: istore        15
    1901: iload         15
    1903: ifeq          1941
    1906: aload_0
    1907: getfield      #2                  // Field state:I
    1910: iconst_4
    1911: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1914: ifne          1929
    1917: aload_0
    1918: getfield      #2                  // Field state:I
    1921: bipush        10
    1923: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
    1926: ifeq          1941
    1929: aload_0
    1930: getfield      #4                  // Field invokingReadListenerHandshake:Z
    1933: ifne          1941
    1936: aload_0
    1937: iconst_0
    1938: invokevirtual #40                 // Method runReadListener:(Z)V
    1941: lload         13
    1943: lreturn
    1944: astore        6
    1946: aload_0
    1947: invokevirtual #149                // Method clearWriteRequiresRead:()V
    1950: aload_0
    1951: aconst_null
    1952: iconst_0
    1953: iconst_0
    1954: invokevirtual #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
    1957: pop2
    1958: aload_0
    1959: invokevirtual #150                // Method flush:()Z
    1962: pop
    1963: goto          1980
    1966: astore        7
    1968: getstatic     #44                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
    1971: ldc           #152                // String Failed to write out final SSL record
    1973: aload         7
    1975: invokeinterface #153,  3          // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
    1980: aload_0
    1981: invokevirtual #48                 // Method close:()V
    1984: goto          2001
    1987: astore        7
    1989: getstatic     #44                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
    1992: ldc           #154                // String Exception closing SSLConduit after exception in doUnwrap
    1994: aload         7
    1996: invokeinterface #153,  3          // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
    2001: aload         6
    2003: athrow
    2004: astore        6
    2006: aload_0
    2007: invokevirtual #48                 // Method close:()V
    2010: goto          2027
    2013: astore        7
    2015: getstatic     #44                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
    2018: ldc           #154                // String Exception closing SSLConduit after exception in doUnwrap
    2020: aload         7
    2022: invokeinterface #153,  3          // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
    2027: aload         6
    2029: athrow
    2030: astore        16
    2032: iconst_0
    2033: istore        17
    2035: aload         4
    2037: invokevirtual #134                // Method io/undertow/protocols/ssl/SslConduit$AccumulativeOrBoolean.get:()Z
    2040: ifne          2071
    2043: aload         5
    2045: ifnull        2074
    2048: aload         5
    2050: invokeinterface #135,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    2055: ifeq          2074
    2058: aload         5
    2060: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    2065: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    2068: ifeq          2074
    2071: iconst_1
    2072: istore        17
    2074: aload_0
    2075: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    2078: ifnull        2168
    2081: aload_0
    2082: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    2085: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    2090: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
    2093: ifeq          2109
    2096: aload_0
    2097: getfield      #2                  // Field state:I
    2100: sipush        4096
    2103: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    2106: ifeq          2137
    2109: aload_0
    2110: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    2113: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    2118: aload_0
    2119: aconst_null
    2120: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    2123: aload_0
    2124: dup
    2125: getfield      #2                  // Field state:I
    2128: bipush        -17
    2130: iand
    2131: putfield      #2                  // Field state:I
    2134: goto          2168
    2137: aload_0
    2138: getfield      #2                  // Field state:I
    2141: bipush        16
    2143: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
    2146: ifeq          2165
    2149: aload_0
    2150: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    2153: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    2158: invokevirtual #136                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    2161: pop
    2162: goto          2168
    2165: iconst_1
    2166: istore        17
    2168: iload         17
    2170: ifeq          2208
    2173: aload_0
    2174: getfield      #2                  // Field state:I
    2177: iconst_4
    2178: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
    2181: ifne          2196
    2184: aload_0
    2185: getfield      #2                  // Field state:I
    2188: bipush        10
    2190: invokestatic  #36                 // Method org/xnio/Bits.allAreSet:(II)Z
    2193: ifeq          2208
    2196: aload_0
    2197: getfield      #4                  // Field invokingReadListenerHandshake:Z
    2200: ifne          2208
    2203: aload_0
    2204: iconst_0
    2205: invokevirtual #40                 // Method runReadListener:(Z)V
    2208: aload         16
    2210: athrow
    Exception table:
       from    to  target type
         174   194   197   Class java/io/IOException
         174   194   197   Class java/lang/RuntimeException
         174   194   197   Class java/lang/Error
         696   865   913   any
         913   915   913   any
         142   258  1944   Class javax/net/ssl/SSLException
         437   487  1944   Class javax/net/ssl/SSLException
         666  1004  1944   Class javax/net/ssl/SSLException
        1183  1263  1944   Class javax/net/ssl/SSLException
        1442  1561  1944   Class javax/net/ssl/SSLException
        1740  1765  1944   Class javax/net/ssl/SSLException
        1946  1963  1966   Class java/lang/Exception
        1946  1984  1987   Class java/lang/Throwable
         142   258  2004   Class java/lang/RuntimeException
         142   258  2004   Class java/io/IOException
         142   258  2004   Class java/lang/Error
         437   487  2004   Class java/lang/RuntimeException
         437   487  2004   Class java/io/IOException
         437   487  2004   Class java/lang/Error
         666  1004  2004   Class java/lang/RuntimeException
         666  1004  2004   Class java/io/IOException
         666  1004  2004   Class java/lang/Error
        1183  1263  2004   Class java/lang/RuntimeException
        1183  1263  2004   Class java/io/IOException
        1183  1263  2004   Class java/lang/Error
        1442  1561  2004   Class java/lang/RuntimeException
        1442  1561  2004   Class java/io/IOException
        1442  1561  2004   Class java/lang/Error
        1740  1765  2004   Class java/lang/RuntimeException
        1740  1765  2004   Class java/io/IOException
        1740  1765  2004   Class java/lang/Error
        2006  2010  2013   Class java/lang/Throwable
         142   258  2030   any
         437   487  2030   any
         666  1004  2030   any
        1183  1263  2030   any
        1442  1561  2030   any
        1740  1765  2030   any
        1944  2032  2030   any

  private synchronized long doWrap(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: sipush        4096
       7: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          21
      13: new           #70                 // class java/nio/channels/ClosedChannelException
      16: dup
      17: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field outstandingTasks:I
      25: ifle          30
      28: lconst_0
      29: lreturn
      30: aload_0
      31: getfield      #2                  // Field state:I
      34: iconst_2
      35: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      38: ifeq          62
      41: aload_0
      42: aconst_null
      43: iconst_0
      44: iconst_0
      45: invokevirtual #100                // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
      48: pop2
      49: aload_0
      50: getfield      #2                  // Field state:I
      53: iconst_1
      54: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
      57: ifeq          62
      60: lconst_0
      61: lreturn
      62: aload_0
      63: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      66: ifnull        127
      69: aload_0
      70: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      73: aload_0
      74: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      77: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      82: invokeinterface #155,  2          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      87: istore        4
      89: iload         4
      91: ifeq          109
      94: aload_0
      95: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      98: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     103: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     106: ifeq          111
     109: lconst_0
     110: lreturn
     111: aload_0
     112: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     115: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     120: invokevirtual #156                // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     123: pop
     124: goto          140
     127: aload_0
     128: aload_0
     129: getfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     132: invokeinterface #128,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     137: putfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     140: aload_0
     141: aload_1
     142: iload_2
     143: iload_3
     144: invokevirtual #157                // Method wrapAndFlip:([Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
     147: astore        4
     149: aload         4
     151: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     154: getstatic     #146                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     157: if_acmpne     170
     160: new           #130                // class java/io/IOException
     163: dup
     164: ldc           #158                // String underflow
     166: invokespecial #159                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: aload         4
     172: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     175: getstatic     #142                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     178: if_acmpne     405
     181: aload_0
     182: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     185: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     190: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     193: ifne          405
     196: aload_0
     197: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     200: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     205: invokevirtual #160                // Method java/nio/ByteBuffer.capacity:()I
     208: aload_0
     209: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
     212: invokevirtual #113                // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     215: invokeinterface #161,  1          // InterfaceMethod javax/net/ssl/SSLSession.getPacketBufferSize:()I
     220: if_icmpge     395
     223: aload_0
     224: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     227: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     232: aload_0
     233: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
     236: invokevirtual #113                // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     239: invokeinterface #161,  1          // InterfaceMethod javax/net/ssl/SSLSession.getPacketBufferSize:()I
     244: istore        5
     246: getstatic     #52                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     249: ldc           #162                // String Expanded buffer enabled due to overflow with empty buffer, buffer size is %s
     251: iload         5
     253: invokestatic  #163                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     256: invokeinterface #164,  3          // InterfaceMethod io/undertow/UndertowLogger.tracev:(Ljava/lang/String;Ljava/lang/Object;)V
     261: getstatic     #165                // Field expandedBufferPool:Lio/undertow/connector/ByteBufferPool;
     264: ifnull        280
     267: getstatic     #165                // Field expandedBufferPool:Lio/undertow/connector/ByteBufferPool;
     270: invokeinterface #166,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.getBufferSize:()I
     275: iload         5
     277: if_icmpge     335
     280: ldc           #32                 // class io/undertow/protocols/ssl/SslConduit
     282: dup
     283: astore        6
     285: monitorenter
     286: getstatic     #165                // Field expandedBufferPool:Lio/undertow/connector/ByteBufferPool;
     289: ifnull        305
     292: getstatic     #165                // Field expandedBufferPool:Lio/undertow/connector/ByteBufferPool;
     295: invokeinterface #166,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.getBufferSize:()I
     300: iload         5
     302: if_icmpge     321
     305: new           #167                // class io/undertow/server/DefaultByteBufferPool
     308: dup
     309: iconst_0
     310: iload         5
     312: iconst_m1
     313: bipush        12
     315: invokespecial #168                // Method io/undertow/server/DefaultByteBufferPool."<init>":(ZIII)V
     318: putstatic     #165                // Field expandedBufferPool:Lio/undertow/connector/ByteBufferPool;
     321: aload         6
     323: monitorexit
     324: goto          335
     327: astore        7
     329: aload         6
     331: monitorexit
     332: aload         7
     334: athrow
     335: aload_0
     336: getstatic     #165                // Field expandedBufferPool:Lio/undertow/connector/ByteBufferPool;
     339: invokeinterface #128,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     344: putfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     347: aload_0
     348: aload_1
     349: iload_2
     350: iload_3
     351: invokevirtual #157                // Method wrapAndFlip:([Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
     354: astore        4
     356: aload         4
     358: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     361: getstatic     #142                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     364: if_acmpne     392
     367: aload_0
     368: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     371: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     376: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     379: ifne          392
     382: new           #130                // class java/io/IOException
     385: dup
     386: ldc           #169                // String overflow
     388: invokespecial #159                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     391: athrow
     392: goto          405
     395: new           #130                // class java/io/IOException
     398: dup
     399: ldc           #169                // String overflow
     401: invokespecial #159                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     404: athrow
     405: aload_0
     406: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     409: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     414: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     417: ifeq          439
     420: aload_0
     421: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     424: aload_0
     425: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     428: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     433: invokeinterface #155,  2          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
     438: pop
     439: aload_0
     440: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     443: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     448: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     451: ifeq          514
     454: aload         4
     456: invokevirtual #170                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     459: i2l
     460: lstore        5
     462: aload_0
     463: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     466: ifnull        511
     469: aload_0
     470: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     473: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     478: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     481: ifeq          497
     484: aload_0
     485: getfield      #2                  // Field state:I
     488: sipush        4096
     491: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     494: ifeq          511
     497: aload_0
     498: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     501: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     506: aload_0
     507: aconst_null
     508: putfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     511: lload         5
     513: lreturn
     514: aload_0
     515: aload         4
     517: invokevirtual #145                // Method handleHandshakeResult:(Ljavax/net/ssl/SSLEngineResult;)Z
     520: ifne          578
     523: lconst_0
     524: lstore        5
     526: aload_0
     527: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     530: ifnull        575
     533: aload_0
     534: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     537: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     542: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     545: ifeq          561
     548: aload_0
     549: getfield      #2                  // Field state:I
     552: sipush        4096
     555: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     558: ifeq          575
     561: aload_0
     562: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     565: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     570: aload_0
     571: aconst_null
     572: putfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     575: lload         5
     577: lreturn
     578: aload         4
     580: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     583: getstatic     #144                // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
     586: if_acmpne     605
     589: aload_1
     590: ifnull        605
     593: aload_0
     594: invokevirtual #87                 // Method notifyWriteClosed:()V
     597: new           #70                 // class java/nio/channels/ClosedChannelException
     600: dup
     601: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     604: athrow
     605: aload         4
     607: invokevirtual #170                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     610: i2l
     611: lstore        5
     613: aload_0
     614: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     617: ifnull        662
     620: aload_0
     621: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     624: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     629: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     632: ifeq          648
     635: aload_0
     636: getfield      #2                  // Field state:I
     639: sipush        4096
     642: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     645: ifeq          662
     648: aload_0
     649: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     652: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     657: aload_0
     658: aconst_null
     659: putfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     662: lload         5
     664: lreturn
     665: astore        4
     667: aload_0
     668: invokevirtual #48                 // Method close:()V
     671: goto          688
     674: astore        5
     676: getstatic     #44                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     679: ldc           #171                // String Exception closing SSLConduit after exception in doWrap()
     681: aload         5
     683: invokeinterface #153,  3          // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     688: aload         4
     690: athrow
     691: astore        8
     693: aload_0
     694: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     697: ifnull        742
     700: aload_0
     701: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     704: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     709: invokevirtual #121                // Method java/nio/ByteBuffer.hasRemaining:()Z
     712: ifeq          728
     715: aload_0
     716: getfield      #2                  // Field state:I
     719: sipush        4096
     722: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     725: ifeq          742
     728: aload_0
     729: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     732: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     737: aload_0
     738: aconst_null
     739: putfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     742: aload         8
     744: athrow
    Exception table:
       from    to  target type
         286   324   327   any
         327   332   327   any
         140   462   665   Class java/lang/RuntimeException
         140   462   665   Class java/io/IOException
         140   462   665   Class java/lang/Error
         514   526   665   Class java/lang/RuntimeException
         514   526   665   Class java/io/IOException
         514   526   665   Class java/lang/Error
         578   613   665   Class java/lang/RuntimeException
         578   613   665   Class java/io/IOException
         578   613   665   Class java/lang/Error
         667   671   674   Class java/lang/Throwable
         140   462   691   any
         514   526   691   any
         578   613   691   any
         665   693   691   any

  private javax.net.ssl.SSLEngineResult wrapAndFlip(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload         4
       5: ifnull        40
       8: aload         4
      10: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      13: getstatic     #172                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      16: if_acmpne     92
      19: aload         4
      21: invokevirtual #119                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
      24: getstatic     #142                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
      27: if_acmpeq     92
      30: aload_0
      31: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      34: invokevirtual #173                // Method javax/net/ssl/SSLEngine.isInboundDone:()Z
      37: ifne          92
      40: aload_1
      41: ifnonnull     68
      44: aload_0
      45: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      48: getstatic     #174                // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
      51: aload_0
      52: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      55: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      60: invokevirtual #175                // Method javax/net/ssl/SSLEngine.wrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
      63: astore        4
      65: goto          3
      68: aload_0
      69: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      72: aload_1
      73: iload_2
      74: iload_3
      75: aload_0
      76: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      79: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      84: invokevirtual #176                // Method javax/net/ssl/SSLEngine.wrap:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
      87: astore        4
      89: goto          3
      92: aload_0
      93: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      96: invokeinterface #124,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     101: invokevirtual #133                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     104: pop
     105: aload         4
     107: areturn

  private boolean handleHandshakeResult(javax.net.ssl.SSLEngineResult) throws java.io.IOException;
    Code:
       0: getstatic     #177                // Field io/undertow/protocols/ssl/SslConduit$6.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
       3: aload_1
       4: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
       7: invokevirtual #178                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 4
                     1: 40
                     2: 66
                     3: 114
                     4: 161
               default: 195
          }
      40: aload_0
      41: dup
      42: getfield      #2                  // Field state:I
      45: sipush        2048
      48: ior
      49: putfield      #2                  // Field state:I
      52: aload_0
      53: invokevirtual #179                // Method clearReadRequiresWrite:()V
      56: aload_0
      57: invokevirtual #149                // Method clearWriteRequiresRead:()V
      60: aload_0
      61: invokevirtual #180                // Method runTasks:()V
      64: iconst_0
      65: ireturn
      66: aload_0
      67: invokevirtual #179                // Method clearReadRequiresWrite:()V
      70: aload_0
      71: dup
      72: getfield      #2                  // Field state:I
      75: sipush        2050
      78: ior
      79: putfield      #2                  // Field state:I
      82: aload_0
      83: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      86: invokeinterface #181,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.suspendWrites:()V
      91: aload_0
      92: getfield      #2                  // Field state:I
      95: bipush        8
      97: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     100: ifeq          112
     103: aload_0
     104: getfield      #19                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
     107: invokeinterface #182,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.resumeReads:()V
     112: iconst_0
     113: ireturn
     114: aload_0
     115: invokevirtual #149                // Method clearWriteRequiresRead:()V
     118: aload_0
     119: dup
     120: getfield      #2                  // Field state:I
     123: sipush        2049
     126: ior
     127: putfield      #2                  // Field state:I
     130: aload_0
     131: getfield      #19                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
     134: invokeinterface #183,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.suspendReads:()V
     139: aload_0
     140: getfield      #2                  // Field state:I
     143: iconst_4
     144: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     147: ifeq          159
     150: aload_0
     151: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     154: invokeinterface #184,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     159: iconst_0
     160: ireturn
     161: aload_0
     162: getfield      #2                  // Field state:I
     165: sipush        2048
     168: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
     171: ifeq          195
     174: aload_0
     175: dup
     176: getfield      #2                  // Field state:I
     179: sipush        -2049
     182: iand
     183: putfield      #2                  // Field state:I
     186: aload_0
     187: getfield      #13                 // Field handshakeCallback:Ljava/lang/Runnable;
     190: invokeinterface #185,  1          // InterfaceMethod java/lang/Runnable.run:()V
     195: aload_0
     196: invokevirtual #179                // Method clearReadRequiresWrite:()V
     199: aload_0
     200: invokevirtual #149                // Method clearWriteRequiresRead:()V
     203: iconst_1
     204: ireturn

  private void clearReadRequiresWrite();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: iconst_1
       5: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          59
      11: aload_0
      12: dup
      13: getfield      #2                  // Field state:I
      16: bipush        -2
      18: iand
      19: putfield      #2                  // Field state:I
      22: aload_0
      23: getfield      #2                  // Field state:I
      26: iconst_4
      27: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      30: ifeq          38
      33: aload_0
      34: iconst_0
      35: invokevirtual #35                 // Method resumeReads:(Z)V
      38: aload_0
      39: getfield      #2                  // Field state:I
      42: bipush        8
      44: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
      47: ifeq          59
      50: aload_0
      51: getfield      #16                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      54: invokeinterface #181,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.suspendWrites:()V
      59: return

  private void clearWriteRequiresRead();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: iconst_2
       5: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          58
      11: aload_0
      12: dup
      13: getfield      #2                  // Field state:I
      16: bipush        -3
      18: iand
      19: putfield      #2                  // Field state:I
      22: aload_0
      23: getfield      #2                  // Field state:I
      26: bipush        8
      28: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      31: ifeq          38
      34: aload_0
      35: invokevirtual #186                // Method wakeupWrites:()V
      38: aload_0
      39: getfield      #2                  // Field state:I
      42: iconst_4
      43: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
      46: ifeq          58
      49: aload_0
      50: getfield      #19                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      53: invokeinterface #183,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.suspendReads:()V
      58: return

  private void closed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: sipush        4096
       7: invokestatic  #34                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: dup
      20: getfield      #2                  // Field state:I
      23: sipush        5728
      26: ior
      27: putfield      #2                  // Field state:I
      30: aload_0
      31: invokevirtual #33                 // Method notifyReadClosed:()V
      34: aload_0
      35: invokevirtual #87                 // Method notifyWriteClosed:()V
      38: aload_0
      39: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      42: ifnull        59
      45: aload_0
      46: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      49: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      54: aload_0
      55: aconst_null
      56: putfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      59: aload_0
      60: getfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      63: ifnull        80
      66: aload_0
      67: getfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      70: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      75: aload_0
      76: aconst_null
      77: putfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      80: aload_0
      81: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      84: ifnull        101
      87: aload_0
      88: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      91: invokeinterface #126,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      96: aload_0
      97: aconst_null
      98: putfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     101: aload_0
     102: getfield      #2                  // Field state:I
     105: sipush        256
     108: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
     111: ifeq          121
     114: aload_0
     115: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
     118: invokevirtual #92                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
     121: aload_0
     122: getfield      #2                  // Field state:I
     125: sipush        128
     128: invokestatic  #91                 // Method org/xnio/Bits.allAreClear:(II)Z
     131: ifeq          167
     134: aload_0
     135: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
     138: invokevirtual #108                // Method javax/net/ssl/SSLEngine.closeInbound:()V
     141: goto          167
     144: astore_2
     145: getstatic     #44                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     148: aload_2
     149: invokeinterface #187,  2          // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     154: goto          167
     157: astore_2
     158: getstatic     #44                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     161: aload_2
     162: invokeinterface #188,  2          // InterfaceMethod io/undertow/UndertowLogger.handleUnexpectedFailure:(Ljava/lang/Throwable;)V
     167: aload_1
     168: monitorexit
     169: goto          177
     172: astore_3
     173: aload_1
     174: monitorexit
     175: aload_3
     176: athrow
     177: aload_0
     178: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
     181: invokestatic  #148                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     184: return
    Exception table:
       from    to  target type
         134   141   144   Class javax/net/ssl/SSLException
         134   141   157   Class java/lang/Throwable
          18   169   172   any
         172   175   172   any

  private void runTasks() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #14                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #80                 // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      10: aload_0
      11: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      14: invokevirtual #17                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      17: invokevirtual #37                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      20: new           #189                // class java/util/ArrayList
      23: dup
      24: invokespecial #190                // Method java/util/ArrayList."<init>":()V
      27: astore_1
      28: aload_0
      29: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      32: invokevirtual #191                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      35: astore_2
      36: aload_2
      37: ifnull        59
      40: aload_1
      41: aload_2
      42: invokeinterface #192,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
      52: invokevirtual #191                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      55: astore_2
      56: goto          36
      59: aload_0
      60: dup
      61: astore_3
      62: monitorenter
      63: aload_0
      64: dup
      65: getfield      #3                  // Field outstandingTasks:I
      68: aload_1
      69: invokeinterface #193,  1          // InterfaceMethod java/util/List.size:()I
      74: iadd
      75: putfield      #3                  // Field outstandingTasks:I
      78: aload_1
      79: invokeinterface #194,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      84: astore        4
      86: aload         4
      88: invokeinterface #195,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifeq          160
      96: aload         4
      98: invokeinterface #196,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #197                // class java/lang/Runnable
     106: astore        5
     108: new           #198                // class io/undertow/protocols/ssl/SslConduit$5
     111: dup
     112: aload_0
     113: aload         5
     115: invokespecial #199                // Method io/undertow/protocols/ssl/SslConduit$5."<init>":(Lio/undertow/protocols/ssl/SslConduit;Ljava/lang/Runnable;)V
     118: astore        6
     120: aload_0
     121: invokevirtual #200                // Method getDelegatedTaskExecutor:()Ljava/util/concurrent/Executor;
     124: aload         6
     126: invokeinterface #201,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     131: goto          157
     134: astore        7
     136: getstatic     #52                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     139: aload         7
     141: invokeinterface #203,  2          // InterfaceMethod io/undertow/UndertowLogger.sslEngineDelegatedTaskRejected:(Ljava/util/concurrent/RejectedExecutionException;)V
     146: aload_0
     147: getfield      #11                 // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
     150: invokestatic  #148                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     153: getstatic     #204                // Field io/undertow/protocols/ssl/SslConduit$DelegatedTaskRejectedClosedChannelException.INSTANCE:Lio/undertow/protocols/ssl/SslConduit$DelegatedTaskRejectedClosedChannelException;
     156: athrow
     157: goto          86
     160: aload_3
     161: monitorexit
     162: goto          172
     165: astore        8
     167: aload_3
     168: monitorexit
     169: aload         8
     171: athrow
     172: return
    Exception table:
       from    to  target type
         120   131   134   Class java/util/concurrent/RejectedExecutionException
          63   162   165   any
         165   169   165   any

  public javax.net.ssl.SSLEngine getSSLEngine();
    Code:
       0: aload_0
       1: getfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method closed:()V
       4: return

  public void setSslEngine(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field engine:Ljavax/net/ssl/SSLEngine;
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: aload_0
       5: getfield      #3                  // Field outstandingTasks:I
       8: aload_0
       9: getfield      #90                 // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      12: aload_0
      13: getfield      #127                // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      16: aload_0
      17: getfield      #39                 // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      20: invokedynamic #205,  0            // InvokeDynamic #0:makeConcatWithConstants:(IILio/undertow/connector/PooledByteBuffer;Lio/undertow/connector/PooledByteBuffer;Lio/undertow/connector/PooledByteBuffer;)Ljava/lang/String;
      25: areturn

  static {};
    Code:
       0: ldc           #206                // String io.undertow.ssl.max-read-listener-invocations
       2: bipush        100
       4: invokestatic  #207                // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       7: invokevirtual #208                // Method java/lang/Integer.intValue:()I
      10: putstatic     #43                 // Field MAX_READ_LISTENER_INVOCATIONS:I
      13: iconst_0
      14: invokestatic  #209                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      17: putstatic     #174                // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
      20: return
}
