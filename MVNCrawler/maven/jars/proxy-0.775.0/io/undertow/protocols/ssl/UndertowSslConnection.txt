Compiled from "UndertowSslConnection.java"
class io.undertow.protocols.ssl.UndertowSslConnection extends org.xnio.ssl.SslConnection {
  private static final java.util.Set<org.xnio.Option<?>> SUPPORTED_OPTIONS;

  private final org.xnio.StreamConnection delegate;

  private final io.undertow.protocols.ssl.SslConduit sslConduit;

  private final org.xnio.ChannelListener$SimpleSetter<org.xnio.ssl.SslConnection> handshakeSetter;

  private final javax.net.ssl.SSLEngine engine;

  io.undertow.protocols.ssl.UndertowSslConnection(org.xnio.StreamConnection, javax.net.ssl.SSLEngine, io.undertow.connector.ByteBufferPool, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       5: invokespecial #2                  // Method org/xnio/ssl/SslConnection."<init>":(Lorg/xnio/XnioIoThread;)V
       8: aload_0
       9: new           #3                  // class org/xnio/ChannelListener$SimpleSetter
      12: dup
      13: invokespecial #4                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      16: putfield      #5                  // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      19: aload_0
      20: aload_1
      21: putfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
      24: aload_0
      25: aload_2
      26: putfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      29: aload_0
      30: new           #8                  // class io/undertow/protocols/ssl/SslConduit
      33: dup
      34: aload_0
      35: aload_1
      36: aload_2
      37: aload         4
      39: aload_3
      40: new           #9                  // class io/undertow/protocols/ssl/UndertowSslConnection$HandshakeCallback
      43: dup
      44: aload_0
      45: invokespecial #10                 // Method io/undertow/protocols/ssl/UndertowSslConnection$HandshakeCallback."<init>":(Lio/undertow/protocols/ssl/UndertowSslConnection;)V
      48: invokespecial #11                 // Method io/undertow/protocols/ssl/SslConduit."<init>":(Lio/undertow/protocols/ssl/UndertowSslConnection;Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Ljava/util/concurrent/Executor;Lio/undertow/connector/ByteBufferPool;Ljava/lang/Runnable;)V
      51: putfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
      54: aload_0
      55: aload_0
      56: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
      59: invokevirtual #13                 // Method setSourceConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      62: aload_0
      63: aload_0
      64: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
      67: invokevirtual #14                 // Method setSinkConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      70: return

  public void startHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #15                 // Method io/undertow/protocols/ssl/SslConduit.startHandshake:()V
       7: return

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #16                 // Method io/undertow/protocols/ssl/SslConduit.getSslSession:()Ljavax/net/ssl/SSLSession;
       7: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.ssl.SslConnection> getHandshakeSetter();
    Code:
       0: aload_0
       1: getfield      #5                  // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  protected void notifyWriteClosed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #17                 // Method io/undertow/protocols/ssl/SslConduit.notifyWriteClosed:()V
       7: aload_0
       8: invokespecial #18                 // Method org/xnio/ssl/SslConnection.notifyWriteClosed:()V
      11: goto          21
      14: astore_1
      15: aload_0
      16: invokespecial #18                 // Method org/xnio/ssl/SslConnection.notifyWriteClosed:()V
      19: aload_1
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     7    14   any

  protected void notifyReadClosed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #19                 // Method io/undertow/protocols/ssl/SslConduit.notifyReadClosed:()V
       7: aload_0
       8: invokespecial #20                 // Method org/xnio/ssl/SslConnection.notifyReadClosed:()V
      11: goto          21
      14: astore_1
      15: aload_0
      16: invokespecial #20                 // Method org/xnio/ssl/SslConnection.notifyReadClosed:()V
      19: aload_1
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     7    14   any

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #21                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #22                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public javax.net.ssl.SSLEngine getSSLEngine();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #23                 // Method io/undertow/protocols/ssl/SslConduit.getSSLEngine:()Ljavax/net/ssl/SSLEngine;
       7: areturn

  io.undertow.protocols.ssl.SslConduit getSslConduit();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #24                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     152
       7: aload_1
       8: aload_0
       9: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      12: invokevirtual #25                 // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      15: ifeq          24
      18: getstatic     #26                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      21: goto          43
      24: aload_0
      25: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      28: invokevirtual #27                 // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      31: ifeq          40
      34: getstatic     #28                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      37: goto          43
      40: getstatic     #29                 // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      43: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      46: astore_3
      47: aload_0
      48: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      51: iconst_0
      52: invokevirtual #31                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
      55: aload_0
      56: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      59: iconst_0
      60: invokevirtual #32                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
      63: aload_2
      64: getstatic     #28                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      67: if_acmpne     81
      70: aload_0
      71: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      74: iconst_1
      75: invokevirtual #31                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
      78: goto          96
      81: aload_2
      82: getstatic     #26                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      85: if_acmpne     96
      88: aload_0
      89: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      92: iconst_1
      93: invokevirtual #32                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
      96: aload_3
      97: areturn
      98: astore        4
     100: aload_0
     101: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
     104: iconst_0
     105: invokevirtual #31                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     108: aload_0
     109: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
     112: iconst_0
     113: invokevirtual #32                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     116: aload_2
     117: getstatic     #28                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
     120: if_acmpne     134
     123: aload_0
     124: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
     127: iconst_1
     128: invokevirtual #31                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     131: goto          149
     134: aload_2
     135: getstatic     #26                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
     138: if_acmpne     149
     141: aload_0
     142: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
     145: iconst_1
     146: invokevirtual #32                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     149: aload         4
     151: athrow
     152: aload_1
     153: getstatic     #33                 // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
     156: if_acmpne     167
     159: new           #34                 // class java/lang/IllegalArgumentException
     162: dup
     163: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":()V
     166: athrow
     167: aload_0
     168: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
     171: aload_1
     172: aload_2
     173: invokevirtual #36                 // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     176: areturn
    Exception table:
       from    to  target type
           7    47    98   any
          98   100    98   any

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #24                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     47
       7: aload_1
       8: aload_0
       9: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      12: invokevirtual #25                 // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      15: ifeq          24
      18: getstatic     #26                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      21: goto          43
      24: aload_0
      25: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      28: invokevirtual #27                 // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      31: ifeq          40
      34: getstatic     #28                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      37: goto          43
      40: getstatic     #29                 // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      43: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      46: areturn
      47: aload_1
      48: getstatic     #33                 // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
      51: if_acmpne     60
      54: getstatic     #37                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      57: goto          68
      60: aload_0
      61: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
      64: aload_1
      65: invokevirtual #38                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      68: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #39                 // Field SUPPORTED_OPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #40,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          23
      12: aload_0
      13: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
      16: aload_1
      17: invokevirtual #41                 // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected boolean readClosed();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/xnio/ssl/SslConnection.readClosed:()Z
       4: ireturn

  protected boolean writeClosed();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method org/xnio/ssl/SslConnection.writeClosed:()Z
       4: ireturn

  protected void closeAction();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #44                 // Method io/undertow/protocols/ssl/SslConduit.close:()V
       7: return

  static {};
    Code:
       0: invokestatic  #45                 // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
       3: getstatic     #33                 // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
       6: getstatic     #24                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       9: invokevirtual #46                 // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      12: invokevirtual #47                 // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      15: putstatic     #39                 // Field SUPPORTED_OPTIONS:Ljava/util/Set;
      18: return
}
