Compiled from "SNISSLExplorer.java"
final class io.undertow.protocols.ssl.SNISSLExplorer {
  public static final int RECORD_HEADER_SIZE;

  private io.undertow.protocols.ssl.SNISSLExplorer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int getRequiredSize(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
       9: iconst_5
      10: if_icmpge     21
      13: new           #5                  // class java/nio/BufferUnderflowException
      16: dup
      17: invokespecial #6                  // Method java/nio/BufferUnderflowException."<init>":()V
      20: athrow
      21: aload_1
      22: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      25: istore_2
      26: aload_1
      27: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      30: pop
      31: aload_1
      32: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      35: istore_3
      36: iload_2
      37: sipush        128
      40: iand
      41: ifeq          51
      44: iload_3
      45: iconst_1
      46: if_icmpne     51
      49: iconst_5
      50: ireturn
      51: aload_1
      52: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      55: sipush        255
      58: iand
      59: bipush        8
      61: ishl
      62: aload_1
      63: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      66: sipush        255
      69: iand
      70: ior
      71: iconst_5
      72: iadd
      73: ireturn

  public static int getRequiredSize(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #8                  // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
       6: invokevirtual #9                  // Method java/nio/ByteBuffer.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;
       9: astore_3
      10: aload_3
      11: invokestatic  #10                 // Method getRequiredSize:(Ljava/nio/ByteBuffer;)I
      14: ireturn

  public static java.util.List<javax.net.ssl.SNIServerName> explore(java.nio.ByteBuffer) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
       9: iconst_5
      10: if_icmpge     21
      13: new           #5                  // class java/nio/BufferUnderflowException
      16: dup
      17: invokespecial #6                  // Method java/nio/BufferUnderflowException."<init>":()V
      20: athrow
      21: aload_1
      22: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      25: istore_2
      26: aload_1
      27: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      30: istore_3
      31: aload_1
      32: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      35: istore        4
      37: iload_2
      38: sipush        128
      41: iand
      42: ifeq          55
      45: iload         4
      47: iconst_1
      48: if_icmpne     55
      51: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      54: areturn
      55: iload_2
      56: bipush        22
      58: if_icmpne     70
      61: aload_1
      62: iload_2
      63: iload_3
      64: iload         4
      66: invokestatic  #12                 // Method exploreTLSRecord:(Ljava/nio/ByteBuffer;BBB)Ljava/util/List;
      69: areturn
      70: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      73: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.notHandshakeRecord:()Ljavax/net/ssl/SSLHandshakeException;
      78: athrow

  public static java.util.List<javax.net.ssl.SNIServerName> explore(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #8                  // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
       6: invokevirtual #9                  // Method java/nio/ByteBuffer.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;
       9: astore_3
      10: aload_3
      11: invokestatic  #15                 // Method explore:(Ljava/nio/ByteBuffer;)Ljava/util/List;
      14: areturn

  private static java.util.List<javax.net.ssl.SNIServerName> exploreTLSRecord(java.nio.ByteBuffer, byte, byte, byte) throws javax.net.ssl.SSLException;
    Code:
       0: iload_1
       1: bipush        22
       3: if_icmpeq     15
       6: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       9: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.notHandshakeRecord:()Ljavax/net/ssl/SSLHandshakeException;
      14: athrow
      15: aload_0
      16: invokestatic  #16                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      19: istore        4
      21: iload         4
      23: aload_0
      24: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      27: if_icmple     38
      30: new           #5                  // class java/nio/BufferUnderflowException
      33: dup
      34: invokespecial #6                  // Method java/nio/BufferUnderflowException."<init>":()V
      37: athrow
      38: aload_0
      39: iload_2
      40: iload_3
      41: iload         4
      43: invokestatic  #17                 // Method exploreHandshake:(Ljava/nio/ByteBuffer;BBI)Ljava/util/List;
      46: areturn
      47: astore        5
      49: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      52: invokeinterface #18,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidHandshakeRecord:()Ljavax/net/ssl/SSLHandshakeException;
      57: athrow
    Exception table:
       from    to  target type
          38    46    47   Class java/nio/BufferUnderflowException

  private static java.util.List<javax.net.ssl.SNIServerName> exploreHandshake(java.nio.ByteBuffer, byte, byte, int) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
       4: istore        4
       6: iload         4
       8: iconst_1
       9: if_icmpeq     21
      12: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      15: invokeinterface #19,  1           // InterfaceMethod io/undertow/UndertowMessages.expectedClientHello:()Ljavax/net/ssl/SSLHandshakeException;
      20: athrow
      21: aload_0
      22: invokestatic  #20                 // Method getInt24:(Ljava/nio/ByteBuffer;)I
      25: istore        5
      27: iload         5
      29: iload_3
      30: iconst_4
      31: isub
      32: if_icmple     44
      35: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      38: invokeinterface #21,  1           // InterfaceMethod io/undertow/UndertowMessages.multiRecordSSLHandshake:()Ljavax/net/ssl/SSLHandshakeException;
      43: athrow
      44: aload_0
      45: invokevirtual #2                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      48: astore_0
      49: aload_0
      50: iload         5
      52: aload_0
      53: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      56: iadd
      57: invokevirtual #23                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
      60: pop
      61: aload_0
      62: iload_1
      63: iload_2
      64: invokestatic  #24                 // Method exploreClientHello:(Ljava/nio/ByteBuffer;BB)Ljava/util/List;
      67: areturn

  private static java.util.List<javax.net.ssl.SNIServerName> exploreClientHello(java.nio.ByteBuffer, byte, byte) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
       6: pop
       7: aload_0
       8: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      11: pop
      12: aload_0
      13: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      16: istore        4
      18: aload_0
      19: iload         4
      21: bipush        32
      23: iadd
      24: invokevirtual #25                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      27: pop
      28: aload_0
      29: invokestatic  #26                 // Method ignoreByteVector8:(Ljava/nio/ByteBuffer;)V
      32: aload_0
      33: invokestatic  #16                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      36: istore        5
      38: iload         5
      40: ifle          59
      43: aload_0
      44: invokestatic  #27                 // Method getInt8:(Ljava/nio/ByteBuffer;)I
      47: pop
      48: aload_0
      49: invokestatic  #27                 // Method getInt8:(Ljava/nio/ByteBuffer;)I
      52: pop
      53: iinc          5, -2
      56: goto          38
      59: aload_0
      60: invokestatic  #26                 // Method ignoreByteVector8:(Ljava/nio/ByteBuffer;)V
      63: aload_0
      64: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      67: ifle          75
      70: aload_0
      71: invokestatic  #28                 // Method exploreExtensions:(Ljava/nio/ByteBuffer;)Lio/undertow/protocols/ssl/SNISSLExplorer$ExtensionInfo;
      74: astore_3
      75: aload_3
      76: ifnull        86
      79: aload_3
      80: getfield      #29                 // Field io/undertow/protocols/ssl/SNISSLExplorer$ExtensionInfo.sni:Ljava/util/List;
      83: goto          89
      86: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      89: astore        6
      91: aload         6
      93: areturn

  private static io.undertow.protocols.ssl.SNISSLExplorer$ExtensionInfo exploreExtensions(java.nio.ByteBuffer) throws javax.net.ssl.SSLException;
    Code:
       0: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: astore_1
       4: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: astore_2
       8: aload_0
       9: invokestatic  #16                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      12: istore_3
      13: iload_3
      14: ifle          77
      17: aload_0
      18: invokestatic  #16                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      21: istore        4
      23: aload_0
      24: invokestatic  #16                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      27: istore        5
      29: iload         4
      31: ifne          44
      34: aload_0
      35: iload         5
      37: invokestatic  #30                 // Method exploreSNIExt:(Ljava/nio/ByteBuffer;I)Ljava/util/List;
      40: astore_1
      41: goto          67
      44: iload         4
      46: bipush        16
      48: if_icmpne     61
      51: aload_0
      52: iload         5
      54: invokestatic  #31                 // Method exploreALPN:(Ljava/nio/ByteBuffer;I)Ljava/util/List;
      57: astore_2
      58: goto          67
      61: aload_0
      62: iload         5
      64: invokestatic  #32                 // Method ignoreByteVector:(Ljava/nio/ByteBuffer;I)V
      67: iload_3
      68: iload         5
      70: iconst_4
      71: iadd
      72: isub
      73: istore_3
      74: goto          13
      77: new           #33                 // class io/undertow/protocols/ssl/SNISSLExplorer$ExtensionInfo
      80: dup
      81: aload_1
      82: aload_2
      83: invokespecial #34                 // Method io/undertow/protocols/ssl/SNISSLExplorer$ExtensionInfo."<init>":(Ljava/util/List;Ljava/util/List;)V
      86: areturn

  private static java.util.List<java.lang.String> exploreALPN(java.nio.ByteBuffer, int) throws javax.net.ssl.SSLException;
    Code:
       0: new           #35                 // class java/util/ArrayList
       3: dup
       4: invokespecial #36                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: iload_1
       9: istore_3
      10: iload_1
      11: iconst_2
      12: if_icmplt     111
      15: aload_0
      16: invokestatic  #16                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      19: istore        4
      21: iload         4
      23: ifeq          34
      26: iload         4
      28: iconst_2
      29: iadd
      30: iload_1
      31: if_icmpeq     43
      34: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      37: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidTlsExt:()Ljavax/net/ssl/SSLException;
      42: athrow
      43: iinc          3, -2
      46: iload_3
      47: ifle          111
      50: aload_0
      51: invokestatic  #27                 // Method getInt8:(Ljava/nio/ByteBuffer;)I
      54: istore        5
      56: iload         5
      58: iload_3
      59: if_icmple     71
      62: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      65: invokeinterface #38,  1           // InterfaceMethod io/undertow/UndertowMessages.notEnoughData:()Ljavax/net/ssl/SSLException;
      70: athrow
      71: iload         5
      73: newarray       byte
      75: astore        6
      77: aload_0
      78: aload         6
      80: invokevirtual #39                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      83: pop
      84: aload_2
      85: new           #40                 // class java/lang/String
      88: dup
      89: aload         6
      91: getstatic     #41                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      94: invokespecial #42                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      97: invokevirtual #43                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     100: pop
     101: iload_3
     102: iload         5
     104: iconst_1
     105: iadd
     106: isub
     107: istore_3
     108: goto          46
     111: aload_2
     112: invokevirtual #44                 // Method java/util/ArrayList.isEmpty:()Z
     115: ifeq          124
     118: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     121: goto          125
     124: aload_2
     125: areturn

  private static java.util.List<javax.net.ssl.SNIServerName> exploreSNIExt(java.nio.ByteBuffer, int) throws javax.net.ssl.SSLException;
    Code:
       0: new           #45                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #46                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_2
       8: iload_1
       9: istore_3
      10: iload_1
      11: iconst_2
      12: if_icmplt     201
      15: aload_0
      16: invokestatic  #16                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      19: istore        4
      21: iload         4
      23: ifeq          34
      26: iload         4
      28: iconst_2
      29: iadd
      30: iload_1
      31: if_icmpeq     43
      34: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      37: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidTlsExt:()Ljavax/net/ssl/SSLException;
      42: athrow
      43: iinc          3, -2
      46: iload_3
      47: ifle          198
      50: aload_0
      51: invokestatic  #27                 // Method getInt8:(Ljava/nio/ByteBuffer;)I
      54: istore        5
      56: aload_0
      57: invokestatic  #16                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      60: istore        6
      62: iload         6
      64: iload_3
      65: if_icmple     77
      68: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      71: invokeinterface #38,  1           // InterfaceMethod io/undertow/UndertowMessages.notEnoughData:()Ljavax/net/ssl/SSLException;
      76: athrow
      77: iload         6
      79: newarray       byte
      81: astore        7
      83: aload_0
      84: aload         7
      86: invokevirtual #39                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      89: pop
      90: iload         5
      92: lookupswitch  { // 1
                     0: 112
               default: 141
          }
     112: aload         7
     114: arraylength
     115: ifne          127
     118: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     121: invokeinterface #47,  1           // InterfaceMethod io/undertow/UndertowMessages.emptyHostNameSni:()Ljavax/net/ssl/SSLException;
     126: athrow
     127: new           #48                 // class javax/net/ssl/SNIHostName
     130: dup
     131: aload         7
     133: invokespecial #49                 // Method javax/net/ssl/SNIHostName."<init>":([B)V
     136: astore        8
     138: goto          154
     141: new           #50                 // class io/undertow/protocols/ssl/SNISSLExplorer$UnknownServerName
     144: dup
     145: iload         5
     147: aload         7
     149: invokespecial #51                 // Method io/undertow/protocols/ssl/SNISSLExplorer$UnknownServerName."<init>":(I[B)V
     152: astore        8
     154: aload_2
     155: aload         8
     157: invokevirtual #52                 // Method javax/net/ssl/SNIServerName.getType:()I
     160: invokestatic  #53                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     163: aload         8
     165: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: ifnull        187
     173: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     176: aload         8
     178: invokevirtual #52                 // Method javax/net/ssl/SNIServerName.getType:()I
     181: invokeinterface #55,  2           // InterfaceMethod io/undertow/UndertowMessages.duplicatedSniServerName:(I)Ljavax/net/ssl/SSLException;
     186: athrow
     187: iload_3
     188: aload         7
     190: arraylength
     191: iconst_3
     192: iadd
     193: isub
     194: istore_3
     195: goto          46
     198: goto          214
     201: iload_1
     202: ifne          214
     205: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     208: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidTlsExt:()Ljavax/net/ssl/SSLException;
     213: athrow
     214: iload_3
     215: ifeq          227
     218: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     221: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidTlsExt:()Ljavax/net/ssl/SSLException;
     226: athrow
     227: new           #35                 // class java/util/ArrayList
     230: dup
     231: aload_2
     232: invokeinterface #56,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     237: invokespecial #57                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     240: invokestatic  #58                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     243: areturn

  private static int getInt8(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
       4: ireturn

  private static int getInt16(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
       4: sipush        255
       7: iand
       8: bipush        8
      10: ishl
      11: aload_0
      12: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      15: sipush        255
      18: iand
      19: ior
      20: ireturn

  private static int getInt24(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
       4: sipush        255
       7: iand
       8: bipush        16
      10: ishl
      11: aload_0
      12: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      15: sipush        255
      18: iand
      19: bipush        8
      21: ishl
      22: ior
      23: aload_0
      24: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      27: sipush        255
      30: iand
      31: ior
      32: ireturn

  private static void ignoreByteVector8(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #27                 // Method getInt8:(Ljava/nio/ByteBuffer;)I
       5: invokestatic  #32                 // Method ignoreByteVector:(Ljava/nio/ByteBuffer;I)V
       8: return

  private static void ignoreByteVector(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: ifeq          17
       4: aload_0
       5: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
       8: istore_2
       9: aload_0
      10: iload_2
      11: iload_1
      12: iadd
      13: invokevirtual #25                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      16: pop
      17: return
}
