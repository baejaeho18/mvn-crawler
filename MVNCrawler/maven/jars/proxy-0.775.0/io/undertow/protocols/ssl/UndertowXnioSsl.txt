Compiled from "UndertowXnioSsl.java"
public class io.undertow.protocols.ssl.UndertowXnioSsl extends org.xnio.ssl.XnioSsl {
  private static final io.undertow.connector.ByteBufferPool DEFAULT_BUFFER_POOL;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final java.util.concurrent.Executor delegatedTaskExecutor;

  private volatile javax.net.ssl.SSLContext sslContext;

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap) throws java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.KeyManagementException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #1                  // Field DEFAULT_BUFFER_POOL:Lio/undertow/connector/ByteBufferPool;
       6: aload_2
       7: invokestatic  #2                  // Method org/xnio/ssl/JsseSslUtils.createSSLContext:(Lorg/xnio/OptionMap;)Ljavax/net/ssl/SSLContext;
      10: invokespecial #3                  // Method "<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljavax/net/ssl/SSLContext;)V
      13: return

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap, javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #1                  // Field DEFAULT_BUFFER_POOL:Lio/undertow/connector/ByteBufferPool;
       6: aload_3
       7: invokespecial #3                  // Method "<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljavax/net/ssl/SSLContext;)V
      10: return

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap, javax.net.ssl.SSLContext, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #1                  // Field DEFAULT_BUFFER_POOL:Lio/undertow/connector/ByteBufferPool;
       6: aload_3
       7: aload         4
       9: invokespecial #4                  // Method "<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljavax/net/ssl/SSLContext;Ljava/util/concurrent/Executor;)V
      12: return

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap, io.undertow.connector.ByteBufferPool) throws java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.KeyManagementException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_2
       5: invokestatic  #2                  // Method org/xnio/ssl/JsseSslUtils.createSSLContext:(Lorg/xnio/OptionMap;)Ljavax/net/ssl/SSLContext;
       8: invokespecial #3                  // Method "<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljavax/net/ssl/SSLContext;)V
      11: return

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap, io.undertow.connector.ByteBufferPool, javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #4                  // Method "<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljavax/net/ssl/SSLContext;Ljava/util/concurrent/Executor;)V
      10: return

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap, io.undertow.connector.ByteBufferPool, javax.net.ssl.SSLContext, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload_2
       5: invokespecial #5                  // Method org/xnio/ssl/XnioSsl."<init>":(Lorg/xnio/Xnio;Ljavax/net/ssl/SSLContext;Lorg/xnio/OptionMap;)V
       8: aload_0
       9: aload_3
      10: putfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      13: aload_0
      14: aload         4
      16: putfield      #7                  // Field sslContext:Ljavax/net/ssl/SSLContext;
      19: aload_0
      20: aload         5
      22: putfield      #8                  // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      25: return

  public javax.net.ssl.SSLContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: areturn

  java.util.concurrent.Executor getDelegatedTaskExecutor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
       4: areturn

  public static javax.net.ssl.SSLEngine getSslEngine(org.xnio.ssl.SslConnection);
    Code:
       0: aload_0
       1: instanceof    #9                  // class io/undertow/protocols/ssl/UndertowSslConnection
       4: ifeq          15
       7: aload_0
       8: checkcast     #9                  // class io/undertow/protocols/ssl/UndertowSslConnection
      11: invokevirtual #10                 // Method io/undertow/protocols/ssl/UndertowSslConnection.getSSLEngine:()Ljavax/net/ssl/SSLEngine;
      14: areturn
      15: aload_0
      16: invokestatic  #11                 // Method org/xnio/ssl/JsseXnioSsl.getSslEngine:(Lorg/xnio/ssl/SslConnection;)Ljavax/net/ssl/SSLEngine;
      19: areturn

  public static io.undertow.protocols.ssl.SslConduit getSslConduit(org.xnio.ssl.SslConnection);
    Code:
       0: aload_0
       1: checkcast     #9                  // class io/undertow/protocols/ssl/UndertowSslConnection
       4: invokevirtual #12                 // Method io/undertow/protocols/ssl/UndertowSslConnection.getSslConduit:()Lio/undertow/protocols/ssl/SslConduit;
       7: areturn

  public org.xnio.IoFuture<org.xnio.channels.ConnectedSslStreamChannel> connectSsl(org.xnio.XnioWorker, java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedSslStreamChannel>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #13                 // class org/xnio/FutureResult
       3: dup
       4: invokestatic  #14                 // Method org/xnio/IoUtils.directExecutor:()Ljava/util/concurrent/Executor;
       7: invokespecial #15                 // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
      10: astore        7
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: new           #16                 // class io/undertow/protocols/ssl/UndertowXnioSsl$2
      19: dup
      20: aload_0
      21: aload         7
      23: aload         4
      25: invokespecial #17                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$2."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      28: aload         5
      30: aload         6
      32: invokevirtual #18                 // Method openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      35: new           #19                 // class io/undertow/protocols/ssl/UndertowXnioSsl$1
      38: dup
      39: aload_0
      40: invokespecial #20                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$1."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;)V
      43: aload         7
      45: invokeinterface #21,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      50: astore        8
      52: aload         7
      54: invokevirtual #22                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      57: new           #23                 // class io/undertow/protocols/ssl/UndertowXnioSsl$3
      60: dup
      61: aload_0
      62: invokespecial #24                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$3."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;)V
      65: aload         8
      67: invokeinterface #21,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      72: pop
      73: aload         7
      75: aload         8
      77: invokevirtual #25                 // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      80: aload         7
      82: invokevirtual #22                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      85: areturn

  public org.xnio.IoFuture<org.xnio.ssl.SslConnection> openSslConnection(org.xnio.XnioWorker, java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.ssl.SslConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #13                 // class org/xnio/FutureResult
       3: dup
       4: aload_1
       5: invokespecial #15                 // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
       8: astore        7
      10: aload_1
      11: aload_2
      12: aload_3
      13: new           #26                 // class io/undertow/protocols/ssl/UndertowXnioSsl$StreamConnectionChannelListener
      16: dup
      17: aload_0
      18: aload         6
      20: aload_3
      21: aload         7
      23: aload         4
      25: invokespecial #27                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$StreamConnectionChannelListener."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      28: aload         5
      30: aload         6
      32: invokevirtual #28                 // Method org/xnio/XnioWorker.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      35: astore        8
      37: aload_0
      38: aload         7
      40: aload         8
      42: invokevirtual #29                 // Method setupSslConnection:(Lorg/xnio/FutureResult;Lorg/xnio/IoFuture;)Lorg/xnio/IoFuture;
      45: areturn

  public org.xnio.IoFuture<org.xnio.ssl.SslConnection> openSslConnection(org.xnio.XnioIoThread, java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.ssl.SslConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #13                 // class org/xnio/FutureResult
       3: dup
       4: aload_1
       5: invokespecial #15                 // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
       8: astore        7
      10: aload_1
      11: aload_2
      12: aload_3
      13: new           #26                 // class io/undertow/protocols/ssl/UndertowXnioSsl$StreamConnectionChannelListener
      16: dup
      17: aload_0
      18: aload         6
      20: aload_3
      21: aload         7
      23: aload         4
      25: invokespecial #27                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$StreamConnectionChannelListener."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      28: aload         5
      30: aload         6
      32: invokevirtual #30                 // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      35: astore        8
      37: aload_0
      38: aload         7
      40: aload         8
      42: invokevirtual #29                 // Method setupSslConnection:(Lorg/xnio/FutureResult;Lorg/xnio/IoFuture;)Lorg/xnio/IoFuture;
      45: areturn

  public org.xnio.ssl.SslConnection wrapExistingConnection(org.xnio.StreamConnection, org.xnio.OptionMap);
    Code:
       0: new           #9                  // class io/undertow/protocols/ssl/UndertowSslConnection
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #7                  // Field sslContext:Ljavax/net/ssl/SSLContext;
       9: aload_2
      10: aload_1
      11: invokevirtual #31                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      14: checkcast     #32                 // class java/net/InetSocketAddress
      17: iconst_1
      18: invokestatic  #33                 // Method createSSLEngine:(Ljavax/net/ssl/SSLContext;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;Z)Ljavax/net/ssl/SSLEngine;
      21: aload_0
      22: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      25: aload_0
      26: getfield      #8                  // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      29: invokespecial #34                 // Method io/undertow/protocols/ssl/UndertowSslConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lio/undertow/connector/ByteBufferPool;Ljava/util/concurrent/Executor;)V
      32: areturn

  public org.xnio.ssl.SslConnection wrapExistingConnection(org.xnio.StreamConnection, org.xnio.OptionMap, boolean);
    Code:
       0: new           #9                  // class io/undertow/protocols/ssl/UndertowSslConnection
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #7                  // Field sslContext:Ljavax/net/ssl/SSLContext;
       9: aload_2
      10: aload_1
      11: invokevirtual #31                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      14: checkcast     #32                 // class java/net/InetSocketAddress
      17: iload_3
      18: invokestatic  #33                 // Method createSSLEngine:(Ljavax/net/ssl/SSLContext;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;Z)Ljavax/net/ssl/SSLEngine;
      21: aload_0
      22: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      25: aload_0
      26: getfield      #8                  // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      29: invokespecial #34                 // Method io/undertow/protocols/ssl/UndertowSslConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lio/undertow/connector/ByteBufferPool;Ljava/util/concurrent/Executor;)V
      32: areturn

  public org.xnio.ssl.SslConnection wrapExistingConnection(org.xnio.StreamConnection, org.xnio.OptionMap, java.net.URI);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: aload_2
       5: aload_0
       6: aload_3
       7: invokevirtual #35                 // Method getPeerAddress:(Ljava/net/URI;)Ljava/net/InetSocketAddress;
      10: iconst_1
      11: invokestatic  #33                 // Method createSSLEngine:(Ljavax/net/ssl/SSLContext;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;Z)Ljavax/net/ssl/SSLEngine;
      14: astore        4
      16: aload         4
      18: invokevirtual #36                 // Method javax/net/ssl/SSLEngine.getSSLParameters:()Ljavax/net/ssl/SSLParameters;
      21: astore        5
      23: aload         5
      25: invokevirtual #37                 // Method javax/net/ssl/SSLParameters.getServerNames:()Ljava/util/List;
      28: ifnull        44
      31: aload         5
      33: invokevirtual #37                 // Method javax/net/ssl/SSLParameters.getServerNames:()Ljava/util/List;
      36: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      41: ifeq          67
      44: aload_0
      45: aload_1
      46: ldc           #32                 // class java/net/InetSocketAddress
      48: invokevirtual #39                 // Method org/xnio/StreamConnection.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
      51: checkcast     #32                 // class java/net/InetSocketAddress
      54: aload_2
      55: aload         5
      57: invokevirtual #40                 // Method setSNIHostName:(Ljava/net/InetSocketAddress;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLParameters;)V
      60: aload         4
      62: aload         5
      64: invokevirtual #41                 // Method javax/net/ssl/SSLEngine.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V
      67: new           #9                  // class io/undertow/protocols/ssl/UndertowSslConnection
      70: dup
      71: aload_1
      72: aload         4
      74: aload_0
      75: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      78: aload_0
      79: getfield      #8                  // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      82: invokespecial #34                 // Method io/undertow/protocols/ssl/UndertowSslConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lio/undertow/connector/ByteBufferPool;Ljava/util/concurrent/Executor;)V
      85: areturn

  private java.net.InetSocketAddress getPeerAddress(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method java/net/URI.getHost:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #43                 // Method java/net/URI.getPort:()I
       9: istore_3
      10: iload_3
      11: iconst_m1
      12: if_icmpne     36
      15: aload_1
      16: invokevirtual #44                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      19: ldc           #45                 // String wss
      21: invokevirtual #46                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          33
      27: sipush        443
      30: goto          35
      33: bipush        80
      35: istore_3
      36: new           #32                 // class java/net/InetSocketAddress
      39: dup
      40: aload_2
      41: iload_3
      42: invokespecial #47                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      45: areturn

  private static javax.net.ssl.SSLEngine createSSLEngine(javax.net.ssl.SSLContext, org.xnio.OptionMap, java.net.InetSocketAddress, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #48                 // Field org/xnio/Options.SSL_PEER_HOST_NAME:Lorg/xnio/Option;
       5: aload_2
       6: invokevirtual #49                 // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
       9: invokevirtual #50                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #51                 // class java/lang/String
      15: aload_1
      16: getstatic     #52                 // Field org/xnio/Options.SSL_PEER_PORT:Lorg/xnio/Option;
      19: aload_2
      20: invokevirtual #53                 // Method java/net/InetSocketAddress.getPort:()I
      23: invokevirtual #54                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      26: invokevirtual #55                 // Method javax/net/ssl/SSLContext.createSSLEngine:(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;
      29: astore        4
      31: aload         4
      33: iload_3
      34: invokevirtual #56                 // Method javax/net/ssl/SSLEngine.setUseClientMode:(Z)V
      37: aload         4
      39: aload_1
      40: getstatic     #57                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      43: iconst_1
      44: invokevirtual #58                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      47: invokevirtual #59                 // Method javax/net/ssl/SSLEngine.setEnableSessionCreation:(Z)V
      50: aload_1
      51: getstatic     #60                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      54: invokevirtual #61                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      57: checkcast     #62                 // class org/xnio/Sequence
      60: astore        5
      62: aload         5
      64: ifnull        172
      67: new           #63                 // class java/util/HashSet
      70: dup
      71: aload         4
      73: invokevirtual #64                 // Method javax/net/ssl/SSLEngine.getSupportedCipherSuites:()[Ljava/lang/String;
      76: invokestatic  #65                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      79: invokespecial #66                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      82: astore        6
      84: new           #67                 // class java/util/ArrayList
      87: dup
      88: invokespecial #68                 // Method java/util/ArrayList."<init>":()V
      91: astore        7
      93: aload         5
      95: invokevirtual #69                 // Method org/xnio/Sequence.iterator:()Ljava/util/Iterator;
      98: astore        8
     100: aload         8
     102: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     107: ifeq          147
     110: aload         8
     112: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     117: checkcast     #51                 // class java/lang/String
     120: astore        9
     122: aload         6
     124: aload         9
     126: invokeinterface #72,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     131: ifeq          144
     134: aload         7
     136: aload         9
     138: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     143: pop
     144: goto          100
     147: aload         4
     149: aload         7
     151: aload         7
     153: invokeinterface #74,  1           // InterfaceMethod java/util/List.size:()I
     158: anewarray     #51                 // class java/lang/String
     161: invokeinterface #75,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     166: checkcast     #76                 // class "[Ljava/lang/String;"
     169: invokevirtual #77                 // Method javax/net/ssl/SSLEngine.setEnabledCipherSuites:([Ljava/lang/String;)V
     172: aload_1
     173: getstatic     #78                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     176: invokevirtual #61                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     179: checkcast     #62                 // class org/xnio/Sequence
     182: astore        6
     184: aload         6
     186: ifnull        294
     189: new           #63                 // class java/util/HashSet
     192: dup
     193: aload         4
     195: invokevirtual #79                 // Method javax/net/ssl/SSLEngine.getSupportedProtocols:()[Ljava/lang/String;
     198: invokestatic  #65                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     201: invokespecial #66                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     204: astore        7
     206: new           #67                 // class java/util/ArrayList
     209: dup
     210: invokespecial #68                 // Method java/util/ArrayList."<init>":()V
     213: astore        8
     215: aload         6
     217: invokevirtual #69                 // Method org/xnio/Sequence.iterator:()Ljava/util/Iterator;
     220: astore        9
     222: aload         9
     224: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     229: ifeq          269
     232: aload         9
     234: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     239: checkcast     #51                 // class java/lang/String
     242: astore        10
     244: aload         7
     246: aload         10
     248: invokeinterface #72,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     253: ifeq          266
     256: aload         8
     258: aload         10
     260: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     265: pop
     266: goto          222
     269: aload         4
     271: aload         8
     273: aload         8
     275: invokeinterface #74,  1           // InterfaceMethod java/util/List.size:()I
     280: anewarray     #51                 // class java/lang/String
     283: invokeinterface #75,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     288: checkcast     #76                 // class "[Ljava/lang/String;"
     291: invokevirtual #80                 // Method javax/net/ssl/SSLEngine.setEnabledProtocols:([Ljava/lang/String;)V
     294: iload_3
     295: ifne          393
     298: aload_1
     299: getstatic     #81                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
     302: invokevirtual #61                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     305: checkcast     #82                 // class org/xnio/SslClientAuthMode
     308: astore        7
     310: aload         7
     312: ifnull        393
     315: getstatic     #83                 // Field io/undertow/protocols/ssl/UndertowXnioSsl$6.$SwitchMap$org$xnio$SslClientAuthMode:[I
     318: aload         7
     320: invokevirtual #84                 // Method org/xnio/SslClientAuthMode.ordinal:()I
     323: iaload
     324: tableswitch   { // 1 to 3
                     1: 352
                     2: 367
                     3: 376
               default: 385
          }
     352: aload         4
     354: iconst_0
     355: invokevirtual #85                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     358: aload         4
     360: iconst_0
     361: invokevirtual #86                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     364: goto          393
     367: aload         4
     369: iconst_1
     370: invokevirtual #86                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     373: goto          393
     376: aload         4
     378: iconst_1
     379: invokevirtual #85                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     382: goto          393
     385: new           #87                 // class java/lang/IllegalStateException
     388: dup
     389: invokespecial #88                 // Method java/lang/IllegalStateException."<init>":()V
     392: athrow
     393: aload_1
     394: getstatic     #89                 // Field io/undertow/UndertowOptions.SSL_USER_CIPHER_SUITES_ORDER:Lorg/xnio/Option;
     397: iconst_0
     398: invokevirtual #58                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     401: istore        7
     403: iload         7
     405: ifeq          428
     408: aload         4
     410: invokevirtual #36                 // Method javax/net/ssl/SSLEngine.getSSLParameters:()Ljavax/net/ssl/SSLParameters;
     413: astore        8
     415: aload         8
     417: iconst_1
     418: invokevirtual #90                 // Method javax/net/ssl/SSLParameters.setUseCipherSuitesOrder:(Z)V
     421: aload         4
     423: aload         8
     425: invokevirtual #41                 // Method javax/net/ssl/SSLEngine.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V
     428: aload_1
     429: getstatic     #91                 // Field io/undertow/UndertowOptions.ENDPOINT_IDENTIFICATION_ALGORITHM:Lorg/xnio/Option;
     432: invokevirtual #61                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     435: checkcast     #51                 // class java/lang/String
     438: astore        8
     440: aload         8
     442: ifnull        466
     445: aload         4
     447: invokevirtual #36                 // Method javax/net/ssl/SSLEngine.getSSLParameters:()Ljavax/net/ssl/SSLParameters;
     450: astore        9
     452: aload         9
     454: aload         8
     456: invokevirtual #92                 // Method javax/net/ssl/SSLParameters.setEndpointIdentificationAlgorithm:(Ljava/lang/String;)V
     459: aload         4
     461: aload         9
     463: invokevirtual #41                 // Method javax/net/ssl/SSLEngine.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V
     466: aload         4
     468: areturn

  private org.xnio.IoFuture<org.xnio.ssl.SslConnection> setupSslConnection(org.xnio.FutureResult<org.xnio.ssl.SslConnection>, org.xnio.IoFuture<org.xnio.StreamConnection>);
    Code:
       0: aload_2
       1: new           #93                 // class io/undertow/protocols/ssl/UndertowXnioSsl$4
       4: dup
       5: aload_0
       6: invokespecial #94                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$4."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;)V
       9: aload_1
      10: invokeinterface #21,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      15: pop
      16: aload_1
      17: aload_2
      18: invokevirtual #25                 // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      21: aload_1
      22: invokevirtual #22                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      25: areturn

  public org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel> createSslTcpServer(org.xnio.XnioWorker, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload         4
       6: invokevirtual #95                 // Method createSslConnectionServer:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
       9: astore        5
      11: new           #96                 // class io/undertow/protocols/ssl/UndertowXnioSsl$5
      14: dup
      15: aload_0
      16: aload         5
      18: invokespecial #97                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$5."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/channels/AcceptingChannel;)V
      21: astore        6
      23: aload         6
      25: invokeinterface #98,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
      30: aload_3
      31: invokeinterface #99,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      36: aload         6
      38: areturn

  public void updateSSLContext(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field sslContext:Ljavax/net/ssl/SSLContext;
       5: return

  public org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection> createSslConnectionServer(org.xnio.XnioWorker, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: new           #100                // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aconst_null
       8: aload         4
      10: invokevirtual #101                // Method org/xnio/XnioWorker.createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
      13: aload         4
      15: aload_0
      16: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      19: iconst_0
      20: invokespecial #102                // Method io/undertow/protocols/ssl/UndertowAcceptingSslChannel."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/channels/AcceptingChannel;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Z)V
      23: astore        5
      25: aload_3
      26: ifnull        40
      29: aload         5
      31: invokevirtual #103                // Method io/undertow/protocols/ssl/UndertowAcceptingSslChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
      34: aload_3
      35: invokeinterface #99,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      40: aload         5
      42: areturn

  private void setSNIHostName(java.net.InetSocketAddress, org.xnio.OptionMap, javax.net.ssl.SSLParameters);
    Code:
       0: aload_2
       1: getstatic     #104                // Field io/undertow/UndertowOptions.SSL_SNI_HOSTNAME:Lorg/xnio/Option;
       4: invokevirtual #61                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
       7: checkcast     #51                 // class java/lang/String
      10: astore        4
      12: aload         4
      14: ifnonnull     44
      17: aload_1
      18: ifnull        44
      21: aload_1
      22: invokevirtual #49                 // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #105                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      29: invokevirtual #106                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      32: invokevirtual #46                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifne          44
      38: aload_1
      39: invokevirtual #49                 // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
      42: astore        4
      44: aload         4
      46: ifnull        90
      49: aconst_null
      50: astore        5
      52: new           #107                // class javax/net/ssl/SNIHostName
      55: dup
      56: aload         4
      58: invokespecial #108                // Method javax/net/ssl/SNIHostName."<init>":(Ljava/lang/String;)V
      61: astore        5
      63: goto          81
      66: astore        6
      68: getstatic     #110                // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      71: aload         4
      73: aload         6
      75: invokeinterface #111,  3          // InterfaceMethod io/undertow/UndertowMessages.invalidSniHostname:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;
      80: athrow
      81: aload_3
      82: aload         5
      84: invokestatic  #112                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      87: invokevirtual #113                // Method javax/net/ssl/SSLParameters.setServerNames:(Ljava/util/List;)V
      90: return
    Exception table:
       from    to  target type
          52    63    66   Class java/lang/IllegalArgumentException

  static {};
    Code:
       0: new           #114                // class io/undertow/server/DefaultByteBufferPool
       3: dup
       4: iconst_1
       5: sipush        17408
       8: iconst_m1
       9: bipush        12
      11: invokespecial #115                // Method io/undertow/server/DefaultByteBufferPool."<init>":(ZIII)V
      14: putstatic     #1                  // Field DEFAULT_BUFFER_POOL:Lio/undertow/connector/ByteBufferPool;
      17: return
}
