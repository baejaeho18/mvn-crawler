Compiled from "SslConduit.java"
class io.undertow.protocols.ssl.SslConduit$5 implements java.lang.Runnable {
  final java.lang.Runnable val$task;

  final io.undertow.protocols.ssl.SslConduit this$0;

  io.undertow.protocols.ssl.SslConduit$5(io.undertow.protocols.ssl.SslConduit, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/SslConduit;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$task:Ljava/lang/Runnable;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$task:Ljava/lang/Runnable;
       4: invokeinterface #4,  1            // InterfaceMethod java/lang/Runnable.run:()V
       9: aload_0
      10: getfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/SslConduit;
      13: dup
      14: astore_1
      15: monitorenter
      16: aload_0
      17: getfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/SslConduit;
      20: getfield      #5                  // Field io/undertow/protocols/ssl/SslConduit.outstandingTasks:I
      23: iconst_1
      24: if_icmpne     48
      27: aload_0
      28: getfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/SslConduit;
      31: invokevirtual #6                  // Method io/undertow/protocols/ssl/SslConduit.getWriteThread:()Lorg/xnio/XnioIoThread;
      34: new           #7                  // class io/undertow/protocols/ssl/SslConduit$5$1
      37: dup
      38: aload_0
      39: invokespecial #8                  // Method io/undertow/protocols/ssl/SslConduit$5$1."<init>":(Lio/undertow/protocols/ssl/SslConduit$5;)V
      42: invokevirtual #9                  // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      45: goto          61
      48: aload_0
      49: getfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/SslConduit;
      52: dup
      53: getfield      #5                  // Field io/undertow/protocols/ssl/SslConduit.outstandingTasks:I
      56: iconst_1
      57: isub
      58: putfield      #5                  // Field io/undertow/protocols/ssl/SslConduit.outstandingTasks:I
      61: aload_1
      62: monitorexit
      63: goto          71
      66: astore_2
      67: aload_1
      68: monitorexit
      69: aload_2
      70: athrow
      71: goto          144
      74: astore_3
      75: aload_0
      76: getfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/SslConduit;
      79: dup
      80: astore        4
      82: monitorenter
      83: aload_0
      84: getfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/SslConduit;
      87: getfield      #5                  // Field io/undertow/protocols/ssl/SslConduit.outstandingTasks:I
      90: iconst_1
      91: if_icmpne     115
      94: aload_0
      95: getfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/SslConduit;
      98: invokevirtual #6                  // Method io/undertow/protocols/ssl/SslConduit.getWriteThread:()Lorg/xnio/XnioIoThread;
     101: new           #7                  // class io/undertow/protocols/ssl/SslConduit$5$1
     104: dup
     105: aload_0
     106: invokespecial #8                  // Method io/undertow/protocols/ssl/SslConduit$5$1."<init>":(Lio/undertow/protocols/ssl/SslConduit$5;)V
     109: invokevirtual #9                  // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
     112: goto          128
     115: aload_0
     116: getfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/SslConduit;
     119: dup
     120: getfield      #5                  // Field io/undertow/protocols/ssl/SslConduit.outstandingTasks:I
     123: iconst_1
     124: isub
     125: putfield      #5                  // Field io/undertow/protocols/ssl/SslConduit.outstandingTasks:I
     128: aload         4
     130: monitorexit
     131: goto          142
     134: astore        5
     136: aload         4
     138: monitorexit
     139: aload         5
     141: athrow
     142: aload_3
     143: athrow
     144: return
    Exception table:
       from    to  target type
          16    63    66   any
          66    69    66   any
           0     9    74   any
          83   131   134   any
         134   139   134   any
}
