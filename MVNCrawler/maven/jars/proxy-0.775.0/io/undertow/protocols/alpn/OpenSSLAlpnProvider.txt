Compiled from "OpenSSLAlpnProvider.java"
public class io.undertow.protocols.alpn.OpenSSLAlpnProvider implements io.undertow.protocols.alpn.ALPNProvider {
  private static volatile io.undertow.protocols.alpn.OpenSSLAlpnProvider$OpenSSLALPNMethods openSSLALPNMethods;

  private static volatile boolean initialized;

  public static final java.lang.String OPENSSL_ENGINE;

  public io.undertow.protocols.alpn.OpenSSLAlpnProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isEnabled(javax.net.ssl.SSLEngine);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
       7: ldc           #5                  // String org.wildfly.openssl.OpenSSLEngine
       9: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          25
      15: invokestatic  #7                  // Method getOpenSSLAlpnMethods:()Lio/undertow/protocols/alpn/OpenSSLAlpnProvider$OpenSSLALPNMethods;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public javax.net.ssl.SSLEngine setProtocols(javax.net.ssl.SSLEngine, java.lang.String[]);
    Code:
       0: invokestatic  #7                  // Method getOpenSSLAlpnMethods:()Lio/undertow/protocols/alpn/OpenSSLAlpnProvider$OpenSSLALPNMethods;
       3: invokevirtual #8                  // Method io/undertow/protocols/alpn/OpenSSLAlpnProvider$OpenSSLALPNMethods.setApplicationProtocols:()Ljava/lang/reflect/Method;
       6: aload_1
       7: iconst_1
       8: anewarray     #9                  // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_2
      14: aastore
      15: invokevirtual #10                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: goto          32
      22: astore_3
      23: new           #13                 // class java/lang/RuntimeException
      26: dup
      27: aload_3
      28: invokespecial #14                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
      32: aload_1
      33: areturn
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/IllegalAccessException
           0    19    22   Class java/lang/reflect/InvocationTargetException

  public java.lang.String getSelectedProtocol(javax.net.ssl.SSLEngine);
    Code:
       0: invokestatic  #7                  // Method getOpenSSLAlpnMethods:()Lio/undertow/protocols/alpn/OpenSSLAlpnProvider$OpenSSLALPNMethods;
       3: invokevirtual #15                 // Method io/undertow/protocols/alpn/OpenSSLAlpnProvider$OpenSSLALPNMethods.getApplicationProtocol:()Ljava/lang/reflect/Method;
       6: aload_1
       7: iconst_0
       8: anewarray     #9                  // class java/lang/Object
      11: invokevirtual #10                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #16                 // class java/lang/String
      17: areturn
      18: astore_2
      19: new           #13                 // class java/lang/RuntimeException
      22: dup
      23: aload_2
      24: invokespecial #14                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/IllegalAccessException
           0    17    18   Class java/lang/reflect/InvocationTargetException

  private static io.undertow.protocols.alpn.OpenSSLAlpnProvider$OpenSSLALPNMethods getOpenSSLAlpnMethods();
    Code:
       0: getstatic     #17                 // Field initialized:Z
       3: ifne          47
       6: ldc           #4                  // class io/undertow/protocols/alpn/OpenSSLAlpnProvider
       8: dup
       9: astore_0
      10: monitorenter
      11: getstatic     #17                 // Field initialized:Z
      14: ifne          37
      17: new           #18                 // class io/undertow/protocols/alpn/OpenSSLAlpnProvider$1
      20: dup
      21: invokespecial #19                 // Method io/undertow/protocols/alpn/OpenSSLAlpnProvider$1."<init>":()V
      24: invokestatic  #20                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      27: checkcast     #21                 // class io/undertow/protocols/alpn/OpenSSLAlpnProvider$OpenSSLALPNMethods
      30: putstatic     #22                 // Field openSSLALPNMethods:Lio/undertow/protocols/alpn/OpenSSLAlpnProvider$OpenSSLALPNMethods;
      33: iconst_1
      34: putstatic     #17                 // Field initialized:Z
      37: aload_0
      38: monitorexit
      39: goto          47
      42: astore_1
      43: aload_0
      44: monitorexit
      45: aload_1
      46: athrow
      47: getstatic     #22                 // Field openSSLALPNMethods:Lio/undertow/protocols/alpn/OpenSSLAlpnProvider$OpenSSLALPNMethods;
      50: areturn
    Exception table:
       from    to  target type
          11    39    42   any
          42    45    42   any

  public int getPriority();
    Code:
       0: sipush        400
       3: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #23                 // String OpenSSLAlpnProvider
       2: areturn
}
