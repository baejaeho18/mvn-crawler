Compiled from "AjpClientRequestClientStreamSinkChannel.java"
public class io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel extends io.undertow.protocols.ajp.AbstractAjpClientStreamSinkChannel {
  private final org.xnio.ChannelListener<io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel> finishListener;

  public static final int DEFAULT_MAX_DATA_SIZE;

  private final io.undertow.util.HeaderMap headers;

  private final java.lang.String path;

  private final io.undertow.util.HttpString method;

  private final io.undertow.util.HttpString protocol;

  private final io.undertow.util.Attachable attachable;

  private boolean firstFrameWritten;

  private long dataSize;

  private int requestedChunkSize;

  private io.undertow.server.protocol.framed.SendFrameHeader header;

  private boolean discardMode;

  io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel(io.undertow.protocols.ajp.AjpClientChannel, org.xnio.ChannelListener<io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel>, io.undertow.util.HeaderMap, java.lang.String, io.undertow.util.HttpString, io.undertow.util.HttpString, io.undertow.util.Attachable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method io/undertow/protocols/ajp/AbstractAjpClientStreamSinkChannel."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;)V
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field firstFrameWritten:Z
      10: aload_0
      11: iconst_m1
      12: putfield      #4                  // Field requestedChunkSize:I
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field discardMode:Z
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field finishListener:Lorg/xnio/ChannelListener;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
      30: aload_0
      31: aload         4
      33: putfield      #8                  // Field path:Ljava/lang/String;
      36: aload_0
      37: aload         5
      39: putfield      #9                  // Field method:Lio/undertow/util/HttpString;
      42: aload_0
      43: aload         6
      45: putfield      #10                 // Field protocol:Lio/undertow/util/HttpString;
      48: aload_0
      49: aload         7
      51: putfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
      54: return

  private io.undertow.server.protocol.framed.SendFrameHeader createFrameHeaderImpl();
    Code:
       0: aload_0
       1: getfield      #5                  // Field discardMode:Z
       4: ifeq          44
       7: aload_0
       8: invokevirtual #12                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      11: invokevirtual #13                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      14: pop
      15: aload_0
      16: invokevirtual #12                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      19: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      22: pop
      23: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
      26: dup
      27: new           #16                 // class io/undertow/util/ImmediatePooledByteBuffer
      30: dup
      31: iconst_0
      32: newarray       byte
      34: invokestatic  #17                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      37: invokespecial #18                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
      40: invokespecial #19                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(Lio/undertow/connector/PooledByteBuffer;)V
      43: areturn
      44: aload_0
      45: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      48: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
      51: invokevirtual #22                 // Method io/undertow/protocols/ajp/AjpClientChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      54: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      59: astore_1
      60: aload_1
      61: invokeinterface #24,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      66: astore_2
      67: aload_0
      68: invokevirtual #12                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      71: astore_3
      72: aload_3
      73: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
      76: istore        4
      78: aload_0
      79: getfield      #3                  // Field firstFrameWritten:Z
      82: ifne          103
      85: aload_0
      86: getfield      #4                  // Field requestedChunkSize:I
      89: ifne          103
      92: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
      95: dup
      96: iload         4
      98: aconst_null
      99: invokespecial #26                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;)V
     102: areturn
     103: aload_0
     104: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     107: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
     110: invokevirtual #27                 // Method io/undertow/protocols/ajp/AjpClientChannel.getSettings:()Lorg/xnio/OptionMap;
     113: getstatic     #28                 // Field io/undertow/UndertowOptions.MAX_AJP_PACKET_SIZE:Lorg/xnio/Option;
     116: sipush        8192
     119: invokevirtual #30                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     122: bipush        6
     124: isub
     125: istore        5
     127: aload_0
     128: getfield      #3                  // Field firstFrameWritten:Z
     131: ifne          1089
     134: aload_0
     135: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     138: getstatic     #31                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     141: invokevirtual #32                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     144: astore        6
     146: aload         6
     148: ifnull        186
     151: aload_0
     152: aload         6
     154: invokestatic  #33                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     157: putfield      #34                 // Field dataSize:J
     160: aload_0
     161: iload         5
     163: putfield      #4                  // Field requestedChunkSize:I
     166: iload         4
     168: i2l
     169: aload_0
     170: getfield      #34                 // Field dataSize:J
     173: lcmp
     174: ifle          265
     177: getstatic     #35                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     180: invokeinterface #36,  1           // InterfaceMethod io/undertow/UndertowMessages.fixedLengthOverflow:()Ljava/lang/IllegalStateException;
     185: athrow
     186: aload_0
     187: invokevirtual #37                 // Method isWritesShutdown:()Z
     190: ifeq          236
     193: aload_0
     194: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     197: getstatic     #38                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     200: invokevirtual #39                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     203: ifne          236
     206: aload_0
     207: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     210: getstatic     #31                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     213: iload         4
     215: i2l
     216: invokevirtual #40                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;J)Lio/undertow/util/HeaderMap;
     219: pop
     220: aload_0
     221: iload         4
     223: i2l
     224: putfield      #34                 // Field dataSize:J
     227: aload_0
     228: iload         5
     230: putfield      #4                  // Field requestedChunkSize:I
     233: goto          265
     236: aload_0
     237: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     240: getstatic     #38                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     243: getstatic     #41                 // Field io/undertow/util/Headers.CHUNKED:Lio/undertow/util/HttpString;
     246: invokevirtual #42                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     249: invokevirtual #43                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     252: pop
     253: aload_0
     254: ldc2_w        #44                 // long -1l
     257: putfield      #34                 // Field dataSize:J
     260: aload_0
     261: iconst_0
     262: putfield      #4                  // Field requestedChunkSize:I
     265: aload_0
     266: iconst_1
     267: putfield      #3                  // Field firstFrameWritten:Z
     270: aload_0
     271: getfield      #8                  // Field path:Ljava/lang/String;
     274: bipush        63
     276: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I
     279: istore        9
     281: iload         9
     283: iconst_m1
     284: if_icmpne     299
     287: aload_0
     288: getfield      #8                  // Field path:Ljava/lang/String;
     291: astore        7
     293: aconst_null
     294: astore        8
     296: goto          324
     299: aload_0
     300: getfield      #8                  // Field path:Ljava/lang/String;
     303: iconst_0
     304: iload         9
     306: invokevirtual #47                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     309: astore        7
     311: aload_0
     312: getfield      #8                  // Field path:Ljava/lang/String;
     315: iload         9
     317: iconst_1
     318: iadd
     319: invokevirtual #48                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     322: astore        8
     324: aload_2
     325: bipush        18
     327: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     330: pop
     331: aload_2
     332: bipush        52
     334: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     337: pop
     338: aload_2
     339: iconst_0
     340: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     343: pop
     344: aload_2
     345: iconst_0
     346: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     349: pop
     350: aload_2
     351: iconst_2
     352: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     355: pop
     356: iconst_0
     357: istore        10
     359: getstatic     #50                 // Field io/undertow/protocols/ajp/AjpConstants.HTTP_METHODS_MAP:Ljava/util/Map;
     362: aload_0
     363: getfield      #9                  // Field method:Lio/undertow/util/HttpString;
     366: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     371: checkcast     #52                 // class java/lang/Integer
     374: astore        11
     376: aload         11
     378: ifnonnull     392
     381: sipush        255
     384: invokestatic  #53                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     387: astore        11
     389: iconst_1
     390: istore        10
     392: aload_2
     393: aload         11
     395: invokevirtual #54                 // Method java/lang/Integer.intValue:()I
     398: i2b
     399: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     402: pop
     403: aload_2
     404: aload_0
     405: getfield      #10                 // Field protocol:Lio/undertow/util/HttpString;
     408: invokestatic  #55                 // Method io/undertow/protocols/ajp/AjpUtils.putHttpString:(Ljava/nio/ByteBuffer;Lio/undertow/util/HttpString;)V
     411: aload_2
     412: aload         7
     414: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     417: aload_2
     418: aload_0
     419: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     422: getstatic     #57                 // Field io/undertow/client/ProxiedRequestAttachments.REMOTE_ADDRESS:Lio/undertow/util/AttachmentKey;
     425: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     430: checkcast     #59                 // class java/lang/String
     433: invokestatic  #60                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/String;)Ljava/lang/String;
     436: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     439: aload_2
     440: aload_0
     441: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     444: getstatic     #61                 // Field io/undertow/client/ProxiedRequestAttachments.REMOTE_HOST:Lio/undertow/util/AttachmentKey;
     447: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     452: checkcast     #59                 // class java/lang/String
     455: invokestatic  #60                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/String;)Ljava/lang/String;
     458: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     461: aload_2
     462: aload_0
     463: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     466: getstatic     #62                 // Field io/undertow/client/ProxiedRequestAttachments.SERVER_NAME:Lio/undertow/util/AttachmentKey;
     469: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     474: checkcast     #59                 // class java/lang/String
     477: invokestatic  #60                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/String;)Ljava/lang/String;
     480: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     483: aload_2
     484: aload_0
     485: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     488: getstatic     #63                 // Field io/undertow/client/ProxiedRequestAttachments.SERVER_PORT:Lio/undertow/util/AttachmentKey;
     491: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     496: checkcast     #52                 // class java/lang/Integer
     499: invokestatic  #64                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/Integer;)I
     502: invokestatic  #65                 // Method io/undertow/protocols/ajp/AjpUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     505: aload_2
     506: aload_0
     507: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     510: getstatic     #66                 // Field io/undertow/client/ProxiedRequestAttachments.IS_SSL:Lio/undertow/util/AttachmentKey;
     513: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     518: checkcast     #67                 // class java/lang/Boolean
     521: invokestatic  #68                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/Boolean;)Z
     524: ifeq          531
     527: iconst_1
     528: goto          532
     531: iconst_0
     532: i2b
     533: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     536: pop
     537: iconst_0
     538: istore        12
     540: aload_0
     541: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     544: astore        13
     546: aload         13
     548: invokevirtual #69                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
     551: invokeinterface #70,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     556: astore        14
     558: aload         14
     560: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     565: ifeq          598
     568: aload         14
     570: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     575: checkcast     #73                 // class io/undertow/util/HttpString
     578: astore        15
     580: iload         12
     582: aload         13
     584: aload         15
     586: invokevirtual #74                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
     589: invokevirtual #75                 // Method io/undertow/util/HeaderValues.size:()I
     592: iadd
     593: istore        12
     595: goto          558
     598: aload_2
     599: iload         12
     601: invokestatic  #65                 // Method io/undertow/protocols/ajp/AjpUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     604: aload         13
     606: invokevirtual #69                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
     609: invokeinterface #70,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     614: astore        14
     616: aload         14
     618: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     623: ifeq          722
     626: aload         14
     628: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     633: checkcast     #73                 // class io/undertow/util/HttpString
     636: astore        15
     638: aload         13
     640: aload         15
     642: invokevirtual #74                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
     645: invokevirtual #76                 // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
     648: astore        16
     650: aload         16
     652: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     657: ifeq          719
     660: aload         16
     662: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     667: checkcast     #59                 // class java/lang/String
     670: astore        17
     672: getstatic     #77                 // Field io/undertow/protocols/ajp/AjpConstants.HEADER_MAP:Ljava/util/Map;
     675: aload         15
     677: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     682: checkcast     #52                 // class java/lang/Integer
     685: astore        18
     687: aload         18
     689: ifnull        704
     692: aload_2
     693: aload         18
     695: invokevirtual #54                 // Method java/lang/Integer.intValue:()I
     698: invokestatic  #65                 // Method io/undertow/protocols/ajp/AjpUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     701: goto          710
     704: aload_2
     705: aload         15
     707: invokestatic  #55                 // Method io/undertow/protocols/ajp/AjpUtils.putHttpString:(Ljava/nio/ByteBuffer;Lio/undertow/util/HttpString;)V
     710: aload_2
     711: aload         17
     713: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     716: goto          650
     719: goto          616
     722: aload         8
     724: ifnull        739
     727: aload_2
     728: iconst_5
     729: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     732: pop
     733: aload_2
     734: aload         8
     736: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     739: aload_0
     740: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     743: getstatic     #78                 // Field io/undertow/client/ProxiedRequestAttachments.REMOTE_USER:Lio/undertow/util/AttachmentKey;
     746: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     751: checkcast     #59                 // class java/lang/String
     754: astore        14
     756: aload         14
     758: ifnull        773
     761: aload_2
     762: iconst_3
     763: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     766: pop
     767: aload_2
     768: aload         14
     770: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     773: aload_0
     774: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     777: getstatic     #79                 // Field io/undertow/client/ProxiedRequestAttachments.AUTH_TYPE:Lio/undertow/util/AttachmentKey;
     780: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     785: checkcast     #59                 // class java/lang/String
     788: astore        15
     790: aload         15
     792: ifnull        807
     795: aload_2
     796: iconst_4
     797: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     800: pop
     801: aload_2
     802: aload         15
     804: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     807: aload_0
     808: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     811: getstatic     #80                 // Field io/undertow/client/ProxiedRequestAttachments.ROUTE:Lio/undertow/util/AttachmentKey;
     814: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     819: checkcast     #59                 // class java/lang/String
     822: astore        16
     824: aload         16
     826: ifnull        842
     829: aload_2
     830: bipush        6
     832: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     835: pop
     836: aload_2
     837: aload         16
     839: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     842: aload_0
     843: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     846: getstatic     #81                 // Field io/undertow/client/ProxiedRequestAttachments.SSL_CERT:Lio/undertow/util/AttachmentKey;
     849: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     854: checkcast     #59                 // class java/lang/String
     857: astore        17
     859: aload         17
     861: ifnull        877
     864: aload_2
     865: bipush        7
     867: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     870: pop
     871: aload_2
     872: aload         17
     874: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     877: aload_0
     878: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     881: getstatic     #82                 // Field io/undertow/client/ProxiedRequestAttachments.SSL_CYPHER:Lio/undertow/util/AttachmentKey;
     884: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     889: checkcast     #59                 // class java/lang/String
     892: astore        18
     894: aload         18
     896: ifnull        912
     899: aload_2
     900: bipush        8
     902: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     905: pop
     906: aload_2
     907: aload         18
     909: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     912: aload_0
     913: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     916: getstatic     #83                 // Field io/undertow/client/ProxiedRequestAttachments.SSL_SESSION_ID:Lio/undertow/util/AttachmentKey;
     919: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     924: checkcast     #84                 // class "[B"
     927: astore        19
     929: aload         19
     931: ifnull        950
     934: aload_2
     935: bipush        9
     937: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     940: pop
     941: aload_2
     942: aload         19
     944: invokestatic  #85                 // Method io/undertow/util/HexConverter.convertToHexString:([B)Ljava/lang/String;
     947: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     950: aload_0
     951: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     954: getstatic     #86                 // Field io/undertow/client/ProxiedRequestAttachments.SSL_KEY_SIZE:Lio/undertow/util/AttachmentKey;
     957: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     962: checkcast     #52                 // class java/lang/Integer
     965: astore        20
     967: aload         20
     969: ifnull        988
     972: aload_2
     973: bipush        11
     975: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     978: pop
     979: aload_2
     980: aload         20
     982: invokevirtual #87                 // Method java/lang/Integer.toString:()Ljava/lang/String;
     985: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     988: aload_0
     989: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     992: getstatic     #88                 // Field io/undertow/client/ProxiedRequestAttachments.SECRET:Lio/undertow/util/AttachmentKey;
     995: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
    1000: checkcast     #59                 // class java/lang/String
    1003: astore        21
    1005: aload         21
    1007: ifnull        1023
    1010: aload_2
    1011: bipush        12
    1013: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1016: pop
    1017: aload_2
    1018: aload         21
    1020: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
    1023: iload         10
    1025: ifeq          1046
    1028: aload_2
    1029: bipush        13
    1031: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1034: pop
    1035: aload_2
    1036: aload_0
    1037: getfield      #9                  // Field method:Lio/undertow/util/HttpString;
    1040: invokevirtual #42                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
    1043: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
    1046: aload_2
    1047: iconst_m1
    1048: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1051: pop
    1052: aload_2
    1053: invokevirtual #89                 // Method java/nio/ByteBuffer.position:()I
    1056: iconst_4
    1057: isub
    1058: istore        22
    1060: aload_2
    1061: iconst_2
    1062: iload         22
    1064: bipush        8
    1066: ishr
    1067: sipush        255
    1070: iand
    1071: i2b
    1072: invokevirtual #90                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
    1075: pop
    1076: aload_2
    1077: iconst_3
    1078: iload         22
    1080: sipush        255
    1083: iand
    1084: i2b
    1085: invokevirtual #90                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
    1088: pop
    1089: aload_0
    1090: getfield      #34                 // Field dataSize:J
    1093: lconst_0
    1094: lcmp
    1095: ifne          1112
    1098: aload_2
    1099: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1102: pop
    1103: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1106: dup
    1107: aload_1
    1108: invokespecial #19                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(Lio/undertow/connector/PooledByteBuffer;)V
    1111: areturn
    1112: aload_0
    1113: getfield      #4                  // Field requestedChunkSize:I
    1116: ifle          1370
    1119: aload_0
    1120: invokevirtual #37                 // Method isWritesShutdown:()Z
    1123: ifeq          1183
    1126: iload         4
    1128: ifne          1183
    1131: aload_2
    1132: bipush        18
    1134: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1137: pop
    1138: aload_2
    1139: bipush        52
    1141: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1144: pop
    1145: aload_2
    1146: iconst_0
    1147: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1150: pop
    1151: aload_2
    1152: iconst_2
    1153: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1156: pop
    1157: aload_2
    1158: iconst_0
    1159: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1162: pop
    1163: aload_2
    1164: iconst_0
    1165: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1168: pop
    1169: aload_2
    1170: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1173: pop
    1174: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1177: dup
    1178: aload_1
    1179: invokespecial #19                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(Lio/undertow/connector/PooledByteBuffer;)V
    1182: areturn
    1183: iload         4
    1185: istore        6
    1187: iload         6
    1189: iload         5
    1191: invokestatic  #91                 // Method java/lang/Math.min:(II)I
    1194: istore        6
    1196: iload         6
    1198: aload_0
    1199: getfield      #4                  // Field requestedChunkSize:I
    1202: invokestatic  #91                 // Method java/lang/Math.min:(II)I
    1205: istore        6
    1207: iload         6
    1209: iconst_2
    1210: iadd
    1211: istore        7
    1213: aload_2
    1214: bipush        18
    1216: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1219: pop
    1220: aload_2
    1221: bipush        52
    1223: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1226: pop
    1227: aload_2
    1228: iload         7
    1230: bipush        8
    1232: ishr
    1233: sipush        255
    1236: iand
    1237: i2b
    1238: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1241: pop
    1242: aload_2
    1243: iload         7
    1245: sipush        255
    1248: iand
    1249: i2b
    1250: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1253: pop
    1254: aload_2
    1255: iload         6
    1257: bipush        8
    1259: ishr
    1260: sipush        255
    1263: iand
    1264: i2b
    1265: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1268: pop
    1269: aload_2
    1270: iload         6
    1272: sipush        255
    1275: iand
    1276: i2b
    1277: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1280: pop
    1281: aload_0
    1282: iconst_0
    1283: putfield      #4                  // Field requestedChunkSize:I
    1286: iload         6
    1288: iload         4
    1290: if_icmpge     1341
    1293: aload_3
    1294: aload_0
    1295: invokevirtual #12                 // Method getBuffer:()Ljava/nio/ByteBuffer;
    1298: invokevirtual #89                 // Method java/nio/ByteBuffer.position:()I
    1301: iload         6
    1303: iadd
    1304: invokevirtual #92                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
    1307: pop
    1308: aload_2
    1309: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1312: pop
    1313: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1316: dup
    1317: iload         4
    1319: iload         6
    1321: isub
    1322: aload_1
    1323: aload_0
    1324: getfield      #34                 // Field dataSize:J
    1327: lconst_0
    1328: lcmp
    1329: ifge          1336
    1332: iconst_1
    1333: goto          1337
    1336: iconst_0
    1337: invokespecial #93                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;Z)V
    1340: areturn
    1341: aload_2
    1342: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1345: pop
    1346: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1349: dup
    1350: iconst_0
    1351: aload_1
    1352: aload_0
    1353: getfield      #34                 // Field dataSize:J
    1356: lconst_0
    1357: lcmp
    1358: ifge          1365
    1361: iconst_1
    1362: goto          1366
    1365: iconst_0
    1366: invokespecial #93                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;Z)V
    1369: areturn
    1370: aload_2
    1371: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
    1374: pop
    1375: aload_2
    1376: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
    1379: ifne          1400
    1382: aload_1
    1383: invokeinterface #94,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1388: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1391: dup
    1392: iload         4
    1394: aconst_null
    1395: iconst_1
    1396: invokespecial #93                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;Z)V
    1399: areturn
    1400: aload_3
    1401: aload_3
    1402: invokevirtual #89                 // Method java/nio/ByteBuffer.position:()I
    1405: invokevirtual #92                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
    1408: pop
    1409: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1412: dup
    1413: iload         4
    1415: aload_1
    1416: iconst_1
    1417: invokespecial #93                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;Z)V
    1420: areturn
    1421: astore_2
    1422: aload_1
    1423: invokeinterface #94,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1428: aload_0
    1429: invokevirtual #96                 // Method markBroken:()V
    1432: aload_2
    1433: athrow
    Exception table:
       from    to  target type
          60   102  1421   Class java/nio/BufferOverflowException
         103  1111  1421   Class java/nio/BufferOverflowException
        1112  1182  1421   Class java/nio/BufferOverflowException
        1183  1340  1421   Class java/nio/BufferOverflowException
        1341  1369  1421   Class java/nio/BufferOverflowException
        1370  1399  1421   Class java/nio/BufferOverflowException
        1400  1420  1421   Class java/nio/BufferOverflowException

  io.undertow.server.protocol.framed.SendFrameHeader generateSendFrameHeader();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #97                 // Method createFrameHeaderImpl:()Lio/undertow/server/protocol/framed/SendFrameHeader;
       5: putfield      #98                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       8: aload_0
       9: getfield      #98                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      12: areturn

  void chunkRequested(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field requestedChunkSize:I
       5: aload_0
       6: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       9: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
      12: invokevirtual #99                 // Method io/undertow/protocols/ajp/AjpClientChannel.recalculateHeldFrames:()V
      15: return

  public void startDiscard();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field discardMode:Z
       5: aload_0
       6: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       9: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
      12: invokevirtual #99                 // Method io/undertow/protocols/ajp/AjpClientChannel.recalculateHeldFrames:()V
      15: goto          23
      18: astore_1
      19: aload_0
      20: invokevirtual #96                 // Method markBroken:()V
      23: return
    Exception table:
       from    to  target type
           5    15    18   Class java/io/IOException

  protected final io.undertow.server.protocol.framed.SendFrameHeader createFrameHeader();
    Code:
       0: aload_0
       1: getfield      #98                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #98                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      10: aload_1
      11: areturn

  protected void handleFlushComplete(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #101                // Method io/undertow/protocols/ajp/AbstractAjpClientStreamSinkChannel.handleFlushComplete:(Z)V
       5: iload_1
       6: ifeq          19
       9: aload_0
      10: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      13: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
      16: invokevirtual #102                // Method io/undertow/protocols/ajp/AjpClientChannel.sinkDone:()V
      19: iload_1
      20: ifeq          40
      23: aload_0
      24: getfield      #6                  // Field finishListener:Lorg/xnio/ChannelListener;
      27: ifnull        40
      30: aload_0
      31: getfield      #6                  // Field finishListener:Lorg/xnio/ChannelListener;
      34: aload_0
      35: invokeinterface #103,  2          // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      40: return

  protected void channelForciblyClosed() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method io/undertow/protocols/ajp/AbstractAjpClientStreamSinkChannel.channelForciblyClosed:()V
       4: aload_0
       5: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       8: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
      11: invokevirtual #102                // Method io/undertow/protocols/ajp/AjpClientChannel.sinkDone:()V
      14: aload_0
      15: getfield      #6                  // Field finishListener:Lorg/xnio/ChannelListener;
      18: aload_0
      19: invokeinterface #103,  2          // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      24: return

  public void clearHeader();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #98                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       5: return
}
