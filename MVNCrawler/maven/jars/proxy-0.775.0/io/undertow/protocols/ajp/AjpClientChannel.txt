Compiled from "AjpClientChannel.java"
public class io.undertow.protocols.ajp.AjpClientChannel extends io.undertow.server.protocol.framed.AbstractFramedChannel<io.undertow.protocols.ajp.AjpClientChannel, io.undertow.protocols.ajp.AbstractAjpClientStreamSourceChannel, io.undertow.protocols.ajp.AbstractAjpClientStreamSinkChannel> {
  private final io.undertow.protocols.ajp.AjpResponseParser ajpParser;

  private io.undertow.protocols.ajp.AjpClientResponseStreamSourceChannel source;

  private io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel sink;

  private final java.util.List<io.undertow.client.ClientConnection$PingListener> pingListeners;

  boolean sinkDone;

  boolean sourceDone;

  private boolean lastFrameSent;

  private boolean lastFrameReceived;

  public io.undertow.protocols.ajp.AjpClientChannel(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #2                  // Field io/undertow/protocols/ajp/AjpClientFramePriority.INSTANCE:Lio/undertow/protocols/ajp/AjpClientFramePriority;
       6: aconst_null
       7: aload_3
       8: invokespecial #3                  // Method io/undertow/server/protocol/framed/AbstractFramedChannel."<init>":(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lio/undertow/server/protocol/framed/FramePriority;Lio/undertow/connector/PooledByteBuffer;Lorg/xnio/OptionMap;)V
      11: aload_0
      12: new           #4                  // class java/util/ArrayList
      15: dup
      16: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      19: putfield      #6                  // Field pingListeners:Ljava/util/List;
      22: aload_0
      23: iconst_1
      24: putfield      #7                  // Field sinkDone:Z
      27: aload_0
      28: iconst_1
      29: putfield      #8                  // Field sourceDone:Z
      32: aload_0
      33: new           #9                  // class io/undertow/protocols/ajp/AjpResponseParser
      36: dup
      37: invokespecial #10                 // Method io/undertow/protocols/ajp/AjpResponseParser."<init>":()V
      40: putfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
      43: return

  protected io.undertow.protocols.ajp.AbstractAjpClientStreamSourceChannel createChannel(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #12                 // class io/undertow/protocols/ajp/AjpClientChannel$SendHeadersResponse
       4: ifeq          51
       7: aload_1
       8: checkcast     #12                 // class io/undertow/protocols/ajp/AjpClientChannel$SendHeadersResponse
      11: astore_3
      12: new           #13                 // class io/undertow/protocols/ajp/AjpClientResponseStreamSourceChannel
      15: dup
      16: aload_0
      17: aload_3
      18: getfield      #14                 // Field io/undertow/protocols/ajp/AjpClientChannel$SendHeadersResponse.headers:Lio/undertow/util/HeaderMap;
      21: aload_3
      22: getfield      #15                 // Field io/undertow/protocols/ajp/AjpClientChannel$SendHeadersResponse.statusCode:I
      25: aload_3
      26: getfield      #16                 // Field io/undertow/protocols/ajp/AjpClientChannel$SendHeadersResponse.reasonPhrase:Ljava/lang/String;
      29: aload_2
      30: aload_1
      31: invokeinterface #17,  1           // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
      36: l2i
      37: invokespecial #18                 // Method io/undertow/protocols/ajp/AjpClientResponseStreamSourceChannel."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;Lio/undertow/util/HeaderMap;ILjava/lang/String;Lio/undertow/connector/PooledByteBuffer;I)V
      40: astore        4
      42: aload_0
      43: aload         4
      45: putfield      #19                 // Field source:Lio/undertow/protocols/ajp/AjpClientResponseStreamSourceChannel;
      48: aload         4
      50: areturn
      51: aload_1
      52: instanceof    #20                 // class io/undertow/protocols/ajp/AjpClientChannel$RequestBodyChunk
      55: ifeq          82
      58: aload_1
      59: checkcast     #20                 // class io/undertow/protocols/ajp/AjpClientChannel$RequestBodyChunk
      62: astore_3
      63: aload_0
      64: getfield      #21                 // Field sink:Lio/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel;
      67: aload_3
      68: invokevirtual #22                 // Method io/undertow/protocols/ajp/AjpClientChannel$RequestBodyChunk.getLength:()I
      71: invokevirtual #23                 // Method io/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel.chunkRequested:(I)V
      74: aload_2
      75: invokeinterface #24,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      80: aconst_null
      81: areturn
      82: aload_1
      83: instanceof    #25                 // class io/undertow/protocols/ajp/AjpClientChannel$CpongResponse
      86: ifeq          179
      89: aload_0
      90: getfield      #6                  // Field pingListeners:Ljava/util/List;
      93: dup
      94: astore_3
      95: monitorenter
      96: aload_0
      97: getfield      #6                  // Field pingListeners:Ljava/util/List;
     100: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     105: astore        4
     107: aload         4
     109: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     114: ifeq          156
     117: aload         4
     119: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     124: checkcast     #29                 // class io/undertow/client/ClientConnection$PingListener
     127: astore        5
     129: aload         5
     131: invokeinterface #30,  1           // InterfaceMethod io/undertow/client/ClientConnection$PingListener.acknowledged:()V
     136: goto          153
     139: astore        6
     141: getstatic     #32                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     144: ldc           #33                 // String Exception notifying ping listener
     146: aload         6
     148: invokeinterface #34,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     153: goto          107
     156: aload_0
     157: getfield      #6                  // Field pingListeners:Ljava/util/List;
     160: invokeinterface #35,  1           // InterfaceMethod java/util/List.clear:()V
     165: aload_3
     166: monitorexit
     167: goto          177
     170: astore        7
     172: aload_3
     173: monitorexit
     174: aload         7
     176: athrow
     177: aconst_null
     178: areturn
     179: aload_2
     180: invokeinterface #24,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     185: new           #36                 // class java/lang/RuntimeException
     188: dup
     189: ldc           #37                 // String TODO: unknown frame
     191: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     194: athrow
    Exception table:
       from    to  target type
         129   136   139   Class java/lang/Throwable
          96   167   170   any
         170   174   170   any

  protected io.undertow.server.protocol.framed.FrameHeaderData parseFrame(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
       4: aload_1
       5: invokevirtual #39                 // Method io/undertow/protocols/ajp/AjpResponseParser.parse:(Ljava/nio/ByteBuffer;)V
       8: aload_0
       9: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
      12: invokevirtual #40                 // Method io/undertow/protocols/ajp/AjpResponseParser.isComplete:()Z
      15: ifeq          238
      18: aload_0
      19: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
      22: astore_2
      23: aload_2
      24: getfield      #41                 // Field io/undertow/protocols/ajp/AjpResponseParser.prefix:B
      27: iconst_4
      28: if_icmpne     61
      31: new           #12                 // class io/undertow/protocols/ajp/AjpClientChannel$SendHeadersResponse
      34: dup
      35: aload_0
      36: aload_2
      37: getfield      #42                 // Field io/undertow/protocols/ajp/AjpResponseParser.statusCode:I
      40: aload_2
      41: getfield      #43                 // Field io/undertow/protocols/ajp/AjpResponseParser.reasonPhrase:Ljava/lang/String;
      44: aload_2
      45: getfield      #44                 // Field io/undertow/protocols/ajp/AjpResponseParser.headers:Lio/undertow/util/HeaderMap;
      48: invokespecial #45                 // Method io/undertow/protocols/ajp/AjpClientChannel$SendHeadersResponse."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;ILjava/lang/String;Lio/undertow/util/HeaderMap;)V
      51: astore_3
      52: aload_0
      53: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
      56: invokevirtual #46                 // Method io/undertow/protocols/ajp/AjpResponseParser.reset:()V
      59: aload_3
      60: areturn
      61: aload_2
      62: getfield      #41                 // Field io/undertow/protocols/ajp/AjpResponseParser.prefix:B
      65: bipush        6
      67: if_icmpne     92
      70: new           #20                 // class io/undertow/protocols/ajp/AjpClientChannel$RequestBodyChunk
      73: dup
      74: aload_0
      75: aload_2
      76: getfield      #47                 // Field io/undertow/protocols/ajp/AjpResponseParser.readBodyChunkSize:I
      79: invokespecial #48                 // Method io/undertow/protocols/ajp/AjpClientChannel$RequestBodyChunk."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;I)V
      82: astore_3
      83: aload_0
      84: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
      87: invokevirtual #46                 // Method io/undertow/protocols/ajp/AjpResponseParser.reset:()V
      90: aload_3
      91: areturn
      92: aload_2
      93: getfield      #41                 // Field io/undertow/protocols/ajp/AjpResponseParser.prefix:B
      96: iconst_3
      97: if_icmpne     124
     100: new           #49                 // class io/undertow/protocols/ajp/AjpClientChannel$SendBodyChunk
     103: dup
     104: aload_0
     105: aload_2
     106: getfield      #50                 // Field io/undertow/protocols/ajp/AjpResponseParser.currentIntegerPart:I
     109: iconst_1
     110: iadd
     111: invokespecial #51                 // Method io/undertow/protocols/ajp/AjpClientChannel$SendBodyChunk."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;I)V
     114: astore_3
     115: aload_0
     116: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
     119: invokevirtual #46                 // Method io/undertow/protocols/ajp/AjpResponseParser.reset:()V
     122: aload_3
     123: areturn
     124: aload_2
     125: getfield      #41                 // Field io/undertow/protocols/ajp/AjpResponseParser.prefix:B
     128: iconst_5
     129: if_icmpne     179
     132: aload_2
     133: getfield      #50                 // Field io/undertow/protocols/ajp/AjpResponseParser.currentIntegerPart:I
     136: ifeq          143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: istore_3
     145: iload_3
     146: ifne          159
     149: aload_0
     150: iconst_1
     151: putfield      #52                 // Field lastFrameReceived:Z
     154: aload_0
     155: iconst_1
     156: putfield      #53                 // Field lastFrameSent:Z
     159: new           #54                 // class io/undertow/protocols/ajp/AjpClientChannel$EndResponse
     162: dup
     163: aload_0
     164: invokespecial #55                 // Method io/undertow/protocols/ajp/AjpClientChannel$EndResponse."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;)V
     167: astore        4
     169: aload_0
     170: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
     173: invokevirtual #46                 // Method io/undertow/protocols/ajp/AjpResponseParser.reset:()V
     176: aload         4
     178: areturn
     179: aload_2
     180: getfield      #41                 // Field io/undertow/protocols/ajp/AjpResponseParser.prefix:B
     183: bipush        9
     185: if_icmpne     206
     188: new           #25                 // class io/undertow/protocols/ajp/AjpClientChannel$CpongResponse
     191: dup
     192: aload_0
     193: invokespecial #56                 // Method io/undertow/protocols/ajp/AjpClientChannel$CpongResponse."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;)V
     196: astore_3
     197: aload_0
     198: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
     201: invokevirtual #46                 // Method io/undertow/protocols/ajp/AjpResponseParser.reset:()V
     204: aload_3
     205: areturn
     206: getstatic     #32                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     209: ldc           #57                 // String UNKOWN FRAME
     211: invokeinterface #58,  2           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;)V
     216: aload_0
     217: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
     220: invokevirtual #46                 // Method io/undertow/protocols/ajp/AjpResponseParser.reset:()V
     223: goto          238
     226: astore        5
     228: aload_0
     229: getfield      #11                 // Field ajpParser:Lio/undertow/protocols/ajp/AjpResponseParser;
     232: invokevirtual #46                 // Method io/undertow/protocols/ajp/AjpResponseParser.reset:()V
     235: aload         5
     237: athrow
     238: aconst_null
     239: areturn
    Exception table:
       from    to  target type
          18    52   226   any
          61    83   226   any
          92   115   226   any
         124   169   226   any
         179   197   226   any
         206   216   226   any
         226   228   226   any

  public io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel sendRequest(io.undertow.util.HttpString, java.lang.String, io.undertow.util.HttpString, io.undertow.util.HeaderMap, io.undertow.util.Attachable, org.xnio.ChannelListener<io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sinkDone:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #8                  // Field sourceDone:Z
      11: ifne          23
      14: getstatic     #59                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      17: invokeinterface #60,  1           // InterfaceMethod io/undertow/UndertowMessages.ajpRequestAlreadyInProgress:()Ljava/lang/IllegalStateException;
      22: athrow
      23: aload_0
      24: iconst_0
      25: putfield      #7                  // Field sinkDone:Z
      28: aload_0
      29: iconst_0
      30: putfield      #8                  // Field sourceDone:Z
      33: new           #61                 // class io/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel
      36: dup
      37: aload_0
      38: aload         6
      40: aload         4
      42: aload_2
      43: aload_1
      44: aload_3
      45: aload         5
      47: invokespecial #62                 // Method io/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;Lorg/xnio/ChannelListener;Lio/undertow/util/HeaderMap;Ljava/lang/String;Lio/undertow/util/HttpString;Lio/undertow/util/HttpString;Lio/undertow/util/Attachable;)V
      50: astore        7
      52: aload_0
      53: aload         7
      55: putfield      #21                 // Field sink:Lio/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel;
      58: aload_0
      59: aconst_null
      60: putfield      #19                 // Field source:Lio/undertow/protocols/ajp/AjpClientResponseStreamSourceChannel;
      63: aload         7
      65: areturn

  protected boolean isLastFrameReceived();
    Code:
       0: aload_0
       1: getfield      #52                 // Field lastFrameReceived:Z
       4: ireturn

  protected boolean isLastFrameSent();
    Code:
       0: aload_0
       1: getfield      #53                 // Field lastFrameSent:Z
       4: ireturn

  protected void lastDataRead();
    Code:
       0: aload_0
       1: getfield      #53                 // Field lastFrameSent:Z
       4: ifne          29
       7: aload_0
       8: new           #63                 // class java/nio/channels/ClosedChannelException
      11: dup
      12: invokespecial #64                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      15: invokevirtual #65                 // Method markReadsBroken:(Ljava/lang/Throwable;)V
      18: aload_0
      19: new           #63                 // class java/nio/channels/ClosedChannelException
      22: dup
      23: invokespecial #64                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      26: invokevirtual #66                 // Method markWritesBroken:(Ljava/lang/Throwable;)V
      29: aload_0
      30: iconst_1
      31: putfield      #52                 // Field lastFrameReceived:Z
      34: aload_0
      35: iconst_1
      36: putfield      #53                 // Field lastFrameSent:Z
      39: aload_0
      40: invokestatic  #67                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      43: return

  protected void handleBrokenSourceChannel(java.lang.Throwable);
    Code:
       0: return

  protected void handleBrokenSinkChannel(java.lang.Throwable);
    Code:
       0: return

  protected void closeSubChannels();
    Code:
       0: iconst_2
       1: anewarray     #68                 // class java/io/Closeable
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #19                 // Field source:Lio/undertow/protocols/ajp/AjpClientResponseStreamSourceChannel;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #21                 // Field sink:Lio/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel;
      17: aastore
      18: invokestatic  #69                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
      21: return

  protected java.util.Collection<io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<io.undertow.protocols.ajp.AjpClientChannel, io.undertow.protocols.ajp.AbstractAjpClientStreamSourceChannel, io.undertow.protocols.ajp.AbstractAjpClientStreamSinkChannel>> getReceivers();
    Code:
       0: aload_0
       1: getfield      #19                 // Field source:Lio/undertow/protocols/ajp/AjpClientResponseStreamSourceChannel;
       4: ifnonnull     11
       7: invokestatic  #70                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: getfield      #19                 // Field source:Lio/undertow/protocols/ajp/AjpClientResponseStreamSourceChannel;
      15: invokestatic  #71                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      18: areturn

  protected org.xnio.OptionMap getSettings();
    Code:
       0: aload_0
       1: invokespecial #72                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getSettings:()Lorg/xnio/OptionMap;
       4: areturn

  void sinkDone();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field sinkDone:Z
       5: aload_0
       6: getfield      #8                  // Field sourceDone:Z
       9: ifeq          22
      12: aload_0
      13: aconst_null
      14: putfield      #21                 // Field sink:Lio/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel;
      17: aload_0
      18: aconst_null
      19: putfield      #19                 // Field source:Lio/undertow/protocols/ajp/AjpClientResponseStreamSourceChannel;
      22: return

  void sourceDone();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field sourceDone:Z
       5: aload_0
       6: getfield      #7                  // Field sinkDone:Z
       9: ifeq          25
      12: aload_0
      13: aconst_null
      14: putfield      #21                 // Field sink:Lio/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel;
      17: aload_0
      18: aconst_null
      19: putfield      #19                 // Field source:Lio/undertow/protocols/ajp/AjpClientResponseStreamSourceChannel;
      22: goto          32
      25: aload_0
      26: getfield      #21                 // Field sink:Lio/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel;
      29: invokevirtual #73                 // Method io/undertow/protocols/ajp/AjpClientRequestClientStreamSinkChannel.startDiscard:()V
      32: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: invokespecial #74                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.isOpen:()Z
       4: ifeq          25
       7: aload_0
       8: getfield      #53                 // Field lastFrameSent:Z
      11: ifne          25
      14: aload_0
      15: getfield      #52                 // Field lastFrameReceived:Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected synchronized void recalculateHeldFrames() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #75                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.recalculateHeldFrames:()V
       4: return

  public void sendPing(io.undertow.client.ClientConnection$PingListener, long, java.util.concurrent.TimeUnit);
    Code:
       0: new           #76                 // class io/undertow/protocols/ajp/AjpClientCPingStreamSinkChannel
       3: dup
       4: aload_0
       5: invokespecial #77                 // Method io/undertow/protocols/ajp/AjpClientCPingStreamSinkChannel."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;)V
       8: astore        5
      10: aload         5
      12: invokevirtual #78                 // Method io/undertow/protocols/ajp/AjpClientCPingStreamSinkChannel.shutdownWrites:()V
      15: aload         5
      17: invokevirtual #79                 // Method io/undertow/protocols/ajp/AjpClientCPingStreamSinkChannel.flush:()Z
      20: ifne          51
      23: aload         5
      25: invokevirtual #80                 // Method io/undertow/protocols/ajp/AjpClientCPingStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      28: aconst_null
      29: new           #81                 // class io/undertow/protocols/ajp/AjpClientChannel$1
      32: dup
      33: aload_0
      34: aload_1
      35: invokespecial #82                 // Method io/undertow/protocols/ajp/AjpClientChannel$1."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;Lio/undertow/client/ClientConnection$PingListener;)V
      38: invokestatic  #83                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      41: invokeinterface #84,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      46: aload         5
      48: invokevirtual #85                 // Method io/undertow/protocols/ajp/AjpClientCPingStreamSinkChannel.resumeWrites:()V
      51: goto          65
      54: astore        6
      56: aload_1
      57: aload         6
      59: invokeinterface #87,  2           // InterfaceMethod io/undertow/client/ClientConnection$PingListener.failed:(Ljava/io/IOException;)V
      64: return
      65: aload_0
      66: getfield      #6                  // Field pingListeners:Ljava/util/List;
      69: dup
      70: astore        6
      72: monitorenter
      73: aload_0
      74: getfield      #6                  // Field pingListeners:Ljava/util/List;
      77: aload_1
      78: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: aload         6
      86: monitorexit
      87: goto          98
      90: astore        7
      92: aload         6
      94: monitorexit
      95: aload         7
      97: athrow
      98: aload_0
      99: invokevirtual #89                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
     102: aload_0
     103: aload_1
     104: invokedynamic #90,  0             // InvokeDynamic #0:run:(Lio/undertow/protocols/ajp/AjpClientChannel;Lio/undertow/client/ClientConnection$PingListener;)Ljava/lang/Runnable;
     109: lload_2
     110: aload         4
     112: invokevirtual #91                 // Method org/xnio/XnioIoThread.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     115: pop
     116: return
    Exception table:
       from    to  target type
          10    51    54   Class java/io/IOException
          73    87    90   any
          90    95    90   any

  protected io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel createChannel(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #92                 // Method createChannel:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/protocols/ajp/AbstractAjpClientStreamSourceChannel;
       6: areturn

  private void lambda$sendPing$0(io.undertow.client.ClientConnection$PingListener);
    Code:
       0: aload_0
       1: getfield      #6                  // Field pingListeners:Ljava/util/List;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field pingListeners:Ljava/util/List;
      11: aload_1
      12: invokeinterface #93,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      17: ifeq          45
      20: aload_0
      21: getfield      #6                  // Field pingListeners:Ljava/util/List;
      24: aload_1
      25: invokeinterface #94,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      30: pop
      31: aload_1
      32: getstatic     #59                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      35: invokeinterface #95,  1           // InterfaceMethod io/undertow/UndertowMessages.pingTimeout:()Ljava/io/IOException;
      40: invokeinterface #87,  2           // InterfaceMethod io/undertow/client/ClientConnection$PingListener.failed:(Ljava/io/IOException;)V
      45: aload_2
      46: monitorexit
      47: goto          55
      50: astore_3
      51: aload_2
      52: monitorexit
      53: aload_3
      54: athrow
      55: return
    Exception table:
       from    to  target type
           7    47    50   any
          50    53    50   any
}
