Compiled from "AjpClientResponseStreamSourceChannel.java"
public class io.undertow.protocols.ajp.AjpClientResponseStreamSourceChannel extends io.undertow.protocols.ajp.AbstractAjpClientStreamSourceChannel {
  private org.xnio.ChannelListener<io.undertow.protocols.ajp.AjpClientResponseStreamSourceChannel> finishListener;

  private final io.undertow.util.HeaderMap headers;

  private final int statusCode;

  private final java.lang.String reasonPhrase;

  public io.undertow.protocols.ajp.AjpClientResponseStreamSourceChannel(io.undertow.protocols.ajp.AjpClientChannel, io.undertow.util.HeaderMap, int, java.lang.String, io.undertow.connector.PooledByteBuffer, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload         5
       4: iload         6
       6: i2l
       7: invokespecial #1                  // Method io/undertow/protocols/ajp/AbstractAjpClientStreamSourceChannel."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;Lio/undertow/connector/PooledByteBuffer;J)V
      10: aload_0
      11: aload_2
      12: putfield      #2                  // Field headers:Lio/undertow/util/HeaderMap;
      15: aload_0
      16: iload_3
      17: putfield      #3                  // Field statusCode:I
      20: aload_0
      21: aload         4
      23: putfield      #4                  // Field reasonPhrase:Ljava/lang/String;
      26: return

  public io.undertow.util.HeaderMap getHeaders();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headers:Lio/undertow/util/HeaderMap;
       4: areturn

  public int getStatusCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field statusCode:I
       4: ireturn

  public java.lang.String getReasonPhrase();
    Code:
       0: aload_0
       1: getfield      #4                  // Field reasonPhrase:Ljava/lang/String;
       4: areturn

  public void setFinishListener(org.xnio.ChannelListener<io.undertow.protocols.ajp.AjpClientResponseStreamSourceChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field finishListener:Lorg/xnio/ChannelListener;
       5: return

  protected void handleHeaderData(io.undertow.server.protocol.framed.FrameHeaderData);
    Code:
       0: aload_1
       1: instanceof    #6                  // class io/undertow/protocols/ajp/AjpClientChannel$EndResponse
       4: ifeq          11
       7: aload_0
       8: invokevirtual #7                  // Method lastFrame:()V
      11: return

  protected long updateFrameDataRemaining(io.undertow.connector.PooledByteBuffer, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifle          46
       6: aload_1
       7: invokeinterface #8,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      12: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
      15: i2l
      16: lload_2
      17: lcmp
      18: ifne          46
      21: aload_1
      22: invokeinterface #8,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      27: aload_1
      28: invokeinterface #8,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      33: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:()I
      36: iconst_1
      37: isub
      38: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
      41: pop
      42: lload_2
      43: lconst_1
      44: lsub
      45: lreturn
      46: lload_2
      47: lreturn

  protected void complete() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field finishListener:Lorg/xnio/ChannelListener;
       4: ifnull        27
       7: aload_0
       8: invokevirtual #12                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      11: checkcast     #13                 // class io/undertow/protocols/ajp/AjpClientChannel
      14: invokevirtual #14                 // Method io/undertow/protocols/ajp/AjpClientChannel.sourceDone:()V
      17: aload_0
      18: getfield      #5                  // Field finishListener:Lorg/xnio/ChannelListener;
      21: aload_0
      22: invokeinterface #15,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      27: return

  public void wakeupReads();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method io/undertow/protocols/ajp/AbstractAjpClientStreamSourceChannel.wakeupReads:()V
       4: aload_0
       5: invokevirtual #12                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       8: checkcast     #13                 // class io/undertow/protocols/ajp/AjpClientChannel
      11: invokevirtual #17                 // Method io/undertow/protocols/ajp/AjpClientChannel.resumeReceives:()V
      14: return

  public void resumeReads();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method io/undertow/protocols/ajp/AbstractAjpClientStreamSourceChannel.resumeReads:()V
       4: aload_0
       5: invokevirtual #12                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       8: checkcast     #13                 // class io/undertow/protocols/ajp/AjpClientChannel
      11: invokevirtual #17                 // Method io/undertow/protocols/ajp/AjpClientChannel.resumeReceives:()V
      14: return

  public void suspendReads();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: checkcast     #13                 // class io/undertow/protocols/ajp/AjpClientChannel
       7: invokevirtual #19                 // Method io/undertow/protocols/ajp/AjpClientChannel.suspendReceives:()V
      10: aload_0
      11: invokespecial #20                 // Method io/undertow/protocols/ajp/AbstractAjpClientStreamSourceChannel.suspendReads:()V
      14: return
}
