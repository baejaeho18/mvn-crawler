Compiled from "ServerWebSocketContainer.java"
class io.undertow.websockets.jsr.ServerWebSocketContainer$ClientNegotiation extends io.undertow.websockets.client.WebSocketClientNegotiation {
  private final jakarta.websocket.ClientEndpointConfig config;

  io.undertow.websockets.jsr.ServerWebSocketContainer$ClientNegotiation(java.util.List<java.lang.String>, java.util.List<io.undertow.websockets.WebSocketExtension>, jakarta.websocket.ClientEndpointConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method io/undertow/websockets/client/WebSocketClientNegotiation."<init>":(Ljava/util/List;Ljava/util/List;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field config:Ljakarta/websocket/ClientEndpointConfig;
      11: return

  public void afterRequest(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field config:Ljakarta/websocket/ClientEndpointConfig;
       4: invokeinterface #3,  1            // InterfaceMethod jakarta/websocket/ClientEndpointConfig.getConfigurator:()Ljakarta/websocket/ClientEndpointConfig$Configurator;
       9: astore_2
      10: aload_2
      11: ifnull        120
      14: new           #4                  // class java/util/TreeMap
      17: dup
      18: getstatic     #5                  // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
      21: invokespecial #6                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      24: astore_3
      25: aload_1
      26: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore        4
      38: aload         4
      40: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          107
      48: aload         4
      50: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #11                 // class java/util/Map$Entry
      58: astore        5
      60: new           #12                 // class java/util/ArrayList
      63: dup
      64: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      67: astore        6
      69: aload         6
      71: aload         5
      73: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: checkcast     #15                 // class java/util/Collection
      81: invokevirtual #16                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      84: pop
      85: aload_3
      86: aload         5
      88: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      93: checkcast     #18                 // class java/lang/String
      96: aload         6
      98: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: goto          38
     107: aload_2
     108: new           #20                 // class io/undertow/websockets/jsr/ServerWebSocketContainer$ClientNegotiation$1
     111: dup
     112: aload_0
     113: aload_3
     114: invokespecial #21                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer$ClientNegotiation$1."<init>":(Lio/undertow/websockets/jsr/ServerWebSocketContainer$ClientNegotiation;Ljava/util/Map;)V
     117: invokevirtual #22                 // Method jakarta/websocket/ClientEndpointConfig$Configurator.afterResponse:(Ljakarta/websocket/HandshakeResponse;)V
     120: return

  public void beforeRequest(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field config:Ljakarta/websocket/ClientEndpointConfig;
       4: invokeinterface #3,  1            // InterfaceMethod jakarta/websocket/ClientEndpointConfig.getConfigurator:()Ljakarta/websocket/ClientEndpointConfig$Configurator;
       9: astore_2
      10: aload_2
      11: ifnull        198
      14: new           #23                 // class java/util/HashMap
      17: dup
      18: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      21: astore_3
      22: aload_1
      23: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      28: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: astore        4
      35: aload         4
      37: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          104
      45: aload         4
      47: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #11                 // class java/util/Map$Entry
      55: astore        5
      57: new           #12                 // class java/util/ArrayList
      60: dup
      61: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      64: astore        6
      66: aload         6
      68: aload         5
      70: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: checkcast     #15                 // class java/util/Collection
      78: invokevirtual #16                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      81: pop
      82: aload_3
      83: aload         5
      85: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      90: checkcast     #18                 // class java/lang/String
      93: aload         6
      95: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: goto          35
     104: aload_2
     105: aload_3
     106: invokevirtual #25                 // Method jakarta/websocket/ClientEndpointConfig$Configurator.beforeRequest:(Ljava/util/Map;)V
     109: aload_1
     110: invokeinterface #26,  1           // InterfaceMethod java/util/Map.clear:()V
     115: aload_3
     116: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     121: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     126: astore        4
     128: aload         4
     130: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     135: ifeq          198
     138: aload         4
     140: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: checkcast     #11                 // class java/util/Map$Entry
     148: astore        5
     150: aload         5
     152: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     157: checkcast     #27                 // class java/util/List
     160: invokeinterface #28,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     165: ifne          195
     168: aload_1
     169: aload         5
     171: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     176: checkcast     #18                 // class java/lang/String
     179: aload         5
     181: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     186: checkcast     #27                 // class java/util/List
     189: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     194: pop
     195: goto          128
     198: return
}
