Compiled from "UndertowSession.java"
public final class io.undertow.websockets.jsr.UndertowSession implements jakarta.websocket.Session {
  private final java.lang.String sessionId;

  private io.undertow.websockets.core.WebSocketChannel webSocketChannel;

  private io.undertow.websockets.jsr.FrameHandler frameHandler;

  private final io.undertow.websockets.jsr.ServerWebSocketContainer container;

  private final java.security.Principal user;

  private final io.undertow.websockets.jsr.WebSocketSessionRemoteEndpoint remote;

  private final java.util.Map<java.lang.String, java.lang.Object> attrs;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> requestParameterMap;

  private final java.net.URI requestUri;

  private final java.lang.String queryString;

  private final java.util.Map<java.lang.String, java.lang.String> pathParameters;

  private final io.undertow.servlet.api.InstanceHandle<jakarta.websocket.Endpoint> endpoint;

  private final io.undertow.websockets.jsr.Encoding encoding;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private final io.undertow.websockets.jsr.SessionContainer openSessions;

  private final java.lang.String subProtocol;

  private final java.util.List<jakarta.websocket.Extension> extensions;

  private final io.undertow.websockets.client.WebSocketClient$ConnectionBuilder clientConnectionBuilder;

  private final jakarta.websocket.EndpointConfig config;

  private volatile int maximumBinaryBufferSize;

  private volatile int maximumTextBufferSize;

  private volatile boolean localClose;

  private int disconnectCount;

  private int failedCount;

  static final boolean $assertionsDisabled;

  io.undertow.websockets.jsr.UndertowSession(io.undertow.websockets.core.WebSocketChannel, java.net.URI, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.util.List<java.lang.String>>, io.undertow.websockets.jsr.EndpointSessionHandler, java.security.Principal, io.undertow.servlet.api.InstanceHandle<jakarta.websocket.Endpoint>, jakarta.websocket.EndpointConfig, java.lang.String, io.undertow.websockets.jsr.Encoding, io.undertow.websockets.jsr.SessionContainer, java.lang.String, java.util.List<jakarta.websocket.Extension>, io.undertow.websockets.client.WebSocketClient$ConnectionBuilder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #4                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field maximumBinaryBufferSize:I
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field maximumTextBufferSize:I
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field disconnectCount:I
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field failedCount:I
      35: getstatic     #9                  // Field $assertionsDisabled:Z
      38: ifne          54
      41: aload         11
      43: ifnonnull     54
      46: new           #10                 // class java/lang/AssertionError
      49: dup
      50: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      53: athrow
      54: aload_0
      55: aload_1
      56: putfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      59: aload_0
      60: aload         9
      62: putfield      #13                 // Field queryString:Ljava/lang/String;
      65: aload_0
      66: aload         10
      68: putfield      #14                 // Field encoding:Lio/undertow/websockets/jsr/Encoding;
      71: aload_0
      72: aload         11
      74: putfield      #15                 // Field openSessions:Lio/undertow/websockets/jsr/SessionContainer;
      77: aload_0
      78: aload         14
      80: putfield      #16                 // Field clientConnectionBuilder:Lio/undertow/websockets/client/WebSocketClient$ConnectionBuilder;
      83: aload_0
      84: aload         5
      86: invokevirtual #17                 // Method io/undertow/websockets/jsr/EndpointSessionHandler.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      89: putfield      #18                 // Field container:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      92: aload_0
      93: aload         6
      95: putfield      #19                 // Field user:Ljava/security/Principal;
      98: aload_0
      99: aload_2
     100: putfield      #20                 // Field requestUri:Ljava/net/URI;
     103: aload_0
     104: aload         4
     106: invokestatic  #21                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     109: putfield      #22                 // Field requestParameterMap:Ljava/util/Map;
     112: aload_0
     113: aload_3
     114: invokestatic  #21                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     117: putfield      #23                 // Field pathParameters:Ljava/util/Map;
     120: aload_0
     121: aload         8
     123: putfield      #24                 // Field config:Ljakarta/websocket/EndpointConfig;
     126: aload_0
     127: new           #25                 // class io/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint
     130: dup
     131: aload_0
     132: aload         10
     134: invokespecial #26                 // Method io/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint."<init>":(Lio/undertow/websockets/jsr/UndertowSession;Lio/undertow/websockets/jsr/Encoding;)V
     137: putfield      #27                 // Field remote:Lio/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint;
     140: aload_0
     141: aload         7
     143: putfield      #28                 // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     146: aload_0
     147: new           #29                 // class io/undertow/server/session/SecureRandomSessionIdGenerator
     150: dup
     151: invokespecial #30                 // Method io/undertow/server/session/SecureRandomSessionIdGenerator."<init>":()V
     154: invokevirtual #31                 // Method io/undertow/server/session/SecureRandomSessionIdGenerator.createSessionId:()Ljava/lang/String;
     157: putfield      #32                 // Field sessionId:Ljava/lang/String;
     160: aload_0
     161: new           #33                 // class java/util/HashMap
     164: dup
     165: aload         8
     167: invokeinterface #34,  1           // InterfaceMethod jakarta/websocket/EndpointConfig.getUserProperties:()Ljava/util/Map;
     172: invokespecial #35                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     175: invokestatic  #36                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
     178: putfield      #37                 // Field attrs:Ljava/util/Map;
     181: aload_0
     182: aload         13
     184: putfield      #38                 // Field extensions:Ljava/util/List;
     187: aload_0
     188: aload         12
     190: putfield      #39                 // Field subProtocol:Ljava/lang/String;
     193: aload_0
     194: aload_1
     195: invokevirtual #40                 // Method setupWebSocketChannel:(Lio/undertow/websockets/core/WebSocketChannel;)V
     198: return

  public io.undertow.websockets.jsr.ServerWebSocketContainer getContainer();
    Code:
       0: aload_0
       1: getfield      #18                 // Field container:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
       4: areturn

  public synchronized void addMessageHandler(jakarta.websocket.MessageHandler) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #41                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: aload_1
       5: invokevirtual #42                 // Method io/undertow/websockets/jsr/FrameHandler.addHandler:(Ljakarta/websocket/MessageHandler;)V
       8: return

  public <T> void addMessageHandler(java.lang.Class<T>, jakarta.websocket.MessageHandler$Whole<T>);
    Code:
       0: aload_0
       1: getfield      #41                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: aload_1
       5: aload_2
       6: invokevirtual #43                 // Method io/undertow/websockets/jsr/FrameHandler.addHandler:(Ljava/lang/Class;Ljakarta/websocket/MessageHandler;)V
       9: return

  public <T> void addMessageHandler(java.lang.Class<T>, jakarta.websocket.MessageHandler$Partial<T>);
    Code:
       0: aload_0
       1: getfield      #41                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: aload_1
       5: aload_2
       6: invokevirtual #43                 // Method io/undertow/websockets/jsr/FrameHandler.addHandler:(Ljava/lang/Class;Ljakarta/websocket/MessageHandler;)V
       9: return

  public synchronized java.util.Set<jakarta.websocket.MessageHandler> getMessageHandlers();
    Code:
       0: aload_0
       1: getfield      #41                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: invokevirtual #44                 // Method io/undertow/websockets/jsr/FrameHandler.getHandlers:()Ljava/util/Set;
       7: areturn

  public synchronized void removeMessageHandler(jakarta.websocket.MessageHandler);
    Code:
       0: aload_0
       1: getfield      #41                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: aload_1
       5: invokevirtual #45                 // Method io/undertow/websockets/jsr/FrameHandler.removeHandler:(Ljakarta/websocket/MessageHandler;)V
       8: return

  public void setReceiveListener(org.xnio.ChannelListener<io.undertow.websockets.core.WebSocketChannel>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #46                 // Method io/undertow/websockets/core/WebSocketChannel.getReceiveSetter:()Lorg/xnio/ChannelListener$Setter;
       7: aload_1
       8: invokeinterface #47,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      13: return

  public java.lang.String getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #48                 // Method io/undertow/websockets/core/WebSocketChannel.getVersion:()Lio/undertow/websockets/core/WebSocketVersion;
       7: invokevirtual #49                 // Method io/undertow/websockets/core/WebSocketVersion.toHttpHeaderValue:()Ljava/lang/String;
      10: areturn

  public java.lang.String getNegotiatedSubprotocol();
    Code:
       0: aload_0
       1: getfield      #39                 // Field subProtocol:Ljava/lang/String;
       4: ifnonnull     12
       7: ldc           #50                 // String
       9: goto          16
      12: aload_0
      13: getfield      #39                 // Field subProtocol:Ljava/lang/String;
      16: areturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #51                 // Method io/undertow/websockets/core/WebSocketChannel.isSecure:()Z
       7: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #52                 // Method io/undertow/websockets/core/WebSocketChannel.isOpen:()Z
       7: ireturn

  public long getMaxIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #53                 // Method io/undertow/websockets/core/WebSocketChannel.getIdleTimeout:()J
       7: lreturn

  public void setMaxIdleTimeout(long);
    Code:
       0: aload_0
       1: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: lload_1
       5: invokevirtual #54                 // Method io/undertow/websockets/core/WebSocketChannel.setIdleTimeout:(J)V
       8: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #32                 // Field sessionId:Ljava/lang/String;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #55                 // class jakarta/websocket/CloseReason
       4: dup
       5: getstatic     #56                 // Field jakarta/websocket/CloseReason$CloseCodes.NORMAL_CLOSURE:Ljakarta/websocket/CloseReason$CloseCodes;
       8: aconst_null
       9: invokespecial #57                 // Method jakarta/websocket/CloseReason."<init>":(Ljakarta/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
      12: invokevirtual #58                 // Method close:(Ljakarta/websocket/CloseReason;)V
      15: return

  public void close(jakarta.websocket.CloseReason) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #59                 // Field localClose:Z
       5: aload_0
       6: aload_1
       7: invokevirtual #60                 // Method closeInternal:(Ljakarta/websocket/CloseReason;)V
      10: return

  public void closeInternal() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #55                 // class jakarta/websocket/CloseReason
       4: dup
       5: getstatic     #56                 // Field jakarta/websocket/CloseReason$CloseCodes.NORMAL_CLOSURE:Ljakarta/websocket/CloseReason$CloseCodes;
       8: aconst_null
       9: invokespecial #57                 // Method jakarta/websocket/CloseReason."<init>":(Ljakarta/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
      12: invokevirtual #60                 // Method closeInternal:(Ljakarta/websocket/CloseReason;)V
      15: return

  public void closeInternal(jakarta.websocket.CloseReason) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          582
      12: aload_0
      13: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      16: invokevirtual #62                 // Method io/undertow/websockets/core/WebSocketChannel.isCloseFrameReceived:()Z
      19: ifne          95
      22: aload_0
      23: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      26: invokevirtual #63                 // Method io/undertow/websockets/core/WebSocketChannel.isCloseFrameSent:()Z
      29: ifne          95
      32: aload_1
      33: ifnull        54
      36: aload_1
      37: invokevirtual #64                 // Method jakarta/websocket/CloseReason.getCloseCode:()Ljakarta/websocket/CloseReason$CloseCode;
      40: invokeinterface #65,  1           // InterfaceMethod jakarta/websocket/CloseReason$CloseCode.getCode:()I
      45: getstatic     #66                 // Field jakarta/websocket/CloseReason$CloseCodes.NO_STATUS_CODE:Ljakarta/websocket/CloseReason$CloseCodes;
      48: invokevirtual #67                 // Method jakarta/websocket/CloseReason$CloseCodes.getCode:()I
      51: if_icmpne     64
      54: aload_0
      55: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      58: invokevirtual #68                 // Method io/undertow/websockets/core/WebSocketChannel.sendClose:()V
      61: goto          95
      64: new           #69                 // class io/undertow/websockets/core/CloseMessage
      67: dup
      68: aload_1
      69: invokevirtual #64                 // Method jakarta/websocket/CloseReason.getCloseCode:()Ljakarta/websocket/CloseReason$CloseCode;
      72: invokeinterface #65,  1           // InterfaceMethod jakarta/websocket/CloseReason$CloseCode.getCode:()I
      77: aload_1
      78: invokevirtual #70                 // Method jakarta/websocket/CloseReason.getReasonPhrase:()Ljava/lang/String;
      81: invokespecial #71                 // Method io/undertow/websockets/core/CloseMessage."<init>":(ILjava/lang/String;)V
      84: invokevirtual #72                 // Method io/undertow/websockets/core/CloseMessage.toByteBuffer:()Ljava/nio/ByteBuffer;
      87: aload_0
      88: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      91: aconst_null
      92: invokestatic  #73                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      95: aconst_null
      96: astore_2
      97: getstatic     #66                 // Field jakarta/websocket/CloseReason$CloseCodes.NO_STATUS_CODE:Ljakarta/websocket/CloseReason$CloseCodes;
     100: astore_3
     101: aload_0
     102: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     105: invokevirtual #74                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseCode:()I
     108: iconst_m1
     109: if_icmpeq     134
     112: aload_0
     113: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     116: invokevirtual #75                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseReason:()Ljava/lang/String;
     119: astore_2
     120: aload_0
     121: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     124: invokevirtual #74                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseCode:()I
     127: invokestatic  #76                 // Method jakarta/websocket/CloseReason$CloseCodes.getCloseCode:(I)Ljakarta/websocket/CloseReason$CloseCode;
     130: astore_3
     131: goto          148
     134: aload_1
     135: ifnull        148
     138: aload_1
     139: invokevirtual #70                 // Method jakarta/websocket/CloseReason.getReasonPhrase:()Ljava/lang/String;
     142: astore_2
     143: aload_1
     144: invokevirtual #64                 // Method jakarta/websocket/CloseReason.getCloseCode:()Ljakarta/websocket/CloseReason$CloseCode;
     147: astore_3
     148: aload_0
     149: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     152: invokevirtual #77                 // Method io/undertow/websockets/core/WebSocketChannel.isCloseInitiatedByRemotePeer:()Z
     155: ifne          199
     158: aload_0
     159: getfield      #59                 // Field localClose:Z
     162: ifne          199
     165: aload_3
     166: invokeinterface #65,  1           // InterfaceMethod jakarta/websocket/CloseReason$CloseCode.getCode:()I
     171: getstatic     #78                 // Field jakarta/websocket/CloseReason$CloseCodes.TOO_BIG:Ljakarta/websocket/CloseReason$CloseCodes;
     174: invokevirtual #67                 // Method jakarta/websocket/CloseReason$CloseCodes.getCode:()I
     177: if_icmpeq     199
     180: aload_3
     181: invokeinterface #65,  1           // InterfaceMethod jakarta/websocket/CloseReason$CloseCode.getCode:()I
     186: getstatic     #79                 // Field jakarta/websocket/CloseReason$CloseCodes.VIOLATED_POLICY:Ljakarta/websocket/CloseReason$CloseCodes;
     189: invokevirtual #67                 // Method jakarta/websocket/CloseReason$CloseCodes.getCode:()I
     192: if_icmpeq     199
     195: getstatic     #80                 // Field jakarta/websocket/CloseReason$CloseCodes.CLOSED_ABNORMALLY:Ljakarta/websocket/CloseReason$CloseCodes;
     198: astore_3
     199: aload_0
     200: getfield      #28                 // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     203: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     208: checkcast     #82                 // class jakarta/websocket/Endpoint
     211: aload_0
     212: new           #55                 // class jakarta/websocket/CloseReason
     215: dup
     216: aload_3
     217: aload_2
     218: invokespecial #57                 // Method jakarta/websocket/CloseReason."<init>":(Ljakarta/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
     221: invokevirtual #83                 // Method jakarta/websocket/Endpoint.onClose:(Ljakarta/websocket/Session;Ljakarta/websocket/CloseReason;)V
     224: goto          416
     227: astore_2
     228: aload_0
     229: getfield      #28                 // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     232: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     237: checkcast     #82                 // class jakarta/websocket/Endpoint
     240: aload_0
     241: aload_2
     242: invokevirtual #85                 // Method jakarta/websocket/Endpoint.onError:(Ljakarta/websocket/Session;Ljava/lang/Throwable;)V
     245: goto          416
     248: astore        4
     250: aconst_null
     251: astore        5
     253: getstatic     #66                 // Field jakarta/websocket/CloseReason$CloseCodes.NO_STATUS_CODE:Ljakarta/websocket/CloseReason$CloseCodes;
     256: astore        6
     258: aload_0
     259: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     262: invokevirtual #74                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseCode:()I
     265: iconst_m1
     266: if_icmpeq     293
     269: aload_0
     270: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     273: invokevirtual #75                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseReason:()Ljava/lang/String;
     276: astore        5
     278: aload_0
     279: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     282: invokevirtual #74                 // Method io/undertow/websockets/core/WebSocketChannel.getCloseCode:()I
     285: invokestatic  #76                 // Method jakarta/websocket/CloseReason$CloseCodes.getCloseCode:(I)Ljakarta/websocket/CloseReason$CloseCode;
     288: astore        6
     290: goto          309
     293: aload_1
     294: ifnull        309
     297: aload_1
     298: invokevirtual #70                 // Method jakarta/websocket/CloseReason.getReasonPhrase:()Ljava/lang/String;
     301: astore        5
     303: aload_1
     304: invokevirtual #64                 // Method jakarta/websocket/CloseReason.getCloseCode:()Ljakarta/websocket/CloseReason$CloseCode;
     307: astore        6
     309: aload_0
     310: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
     313: invokevirtual #77                 // Method io/undertow/websockets/core/WebSocketChannel.isCloseInitiatedByRemotePeer:()Z
     316: ifne          363
     319: aload_0
     320: getfield      #59                 // Field localClose:Z
     323: ifne          363
     326: aload         6
     328: invokeinterface #65,  1           // InterfaceMethod jakarta/websocket/CloseReason$CloseCode.getCode:()I
     333: getstatic     #78                 // Field jakarta/websocket/CloseReason$CloseCodes.TOO_BIG:Ljakarta/websocket/CloseReason$CloseCodes;
     336: invokevirtual #67                 // Method jakarta/websocket/CloseReason$CloseCodes.getCode:()I
     339: if_icmpeq     363
     342: aload         6
     344: invokeinterface #65,  1           // InterfaceMethod jakarta/websocket/CloseReason$CloseCode.getCode:()I
     349: getstatic     #79                 // Field jakarta/websocket/CloseReason$CloseCodes.VIOLATED_POLICY:Ljakarta/websocket/CloseReason$CloseCodes;
     352: invokevirtual #67                 // Method jakarta/websocket/CloseReason$CloseCodes.getCode:()I
     355: if_icmpeq     363
     358: getstatic     #80                 // Field jakarta/websocket/CloseReason$CloseCodes.CLOSED_ABNORMALLY:Ljakarta/websocket/CloseReason$CloseCodes;
     361: astore        6
     363: aload_0
     364: getfield      #28                 // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     367: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     372: checkcast     #82                 // class jakarta/websocket/Endpoint
     375: aload_0
     376: new           #55                 // class jakarta/websocket/CloseReason
     379: dup
     380: aload         6
     382: aload         5
     384: invokespecial #57                 // Method jakarta/websocket/CloseReason."<init>":(Ljakarta/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
     387: invokevirtual #83                 // Method jakarta/websocket/Endpoint.onClose:(Ljakarta/websocket/Session;Ljakarta/websocket/CloseReason;)V
     390: goto          413
     393: astore        5
     395: aload_0
     396: getfield      #28                 // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
     399: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     404: checkcast     #82                 // class jakarta/websocket/Endpoint
     407: aload_0
     408: aload         5
     410: invokevirtual #85                 // Method jakarta/websocket/Endpoint.onError:(Ljakarta/websocket/Session;Ljava/lang/Throwable;)V
     413: aload         4
     415: athrow
     416: aload_0
     417: invokevirtual #86                 // Method close0:()V
     420: aload_0
     421: getfield      #16                 // Field clientConnectionBuilder:Lio/undertow/websockets/client/WebSocketClient$ConnectionBuilder;
     424: ifnull        582
     427: aload_0
     428: getfield      #59                 // Field localClose:Z
     431: ifne          582
     434: aload_0
     435: getfield      #18                 // Field container:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
     438: invokevirtual #87                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.getWebSocketReconnectHandler:()Lio/undertow/websockets/jsr/WebSocketReconnectHandler;
     441: astore_2
     442: aload_2
     443: ifnull        492
     446: getstatic     #88                 // Field io/undertow/websockets/jsr/JsrWebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/jsr/JsrWebSocketLogger;
     449: ldc           #89                 // String Calling reconnect handler for %s
     451: aload_0
     452: invokeinterface #90,  3           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     457: aload_2
     458: aload_1
     459: aload_0
     460: getfield      #20                 // Field requestUri:Ljava/net/URI;
     463: aload_0
     464: aload_0
     465: dup
     466: getfield      #7                  // Field disconnectCount:I
     469: iconst_1
     470: iadd
     471: dup_x1
     472: putfield      #7                  // Field disconnectCount:I
     475: invokeinterface #91,  5           // InterfaceMethod io/undertow/websockets/jsr/WebSocketReconnectHandler.disconnected:(Ljakarta/websocket/CloseReason;Ljava/net/URI;Ljakarta/websocket/Session;I)J
     480: lstore_3
     481: lload_3
     482: lconst_0
     483: lcmp
     484: iflt          492
     487: aload_0
     488: lload_3
     489: invokevirtual #92                 // Method handleReconnect:(J)V
     492: goto          582
     495: astore        7
     497: aload_0
     498: invokevirtual #86                 // Method close0:()V
     501: aload_0
     502: getfield      #16                 // Field clientConnectionBuilder:Lio/undertow/websockets/client/WebSocketClient$ConnectionBuilder;
     505: ifnull        579
     508: aload_0
     509: getfield      #59                 // Field localClose:Z
     512: ifne          579
     515: aload_0
     516: getfield      #18                 // Field container:Lio/undertow/websockets/jsr/ServerWebSocketContainer;
     519: invokevirtual #87                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.getWebSocketReconnectHandler:()Lio/undertow/websockets/jsr/WebSocketReconnectHandler;
     522: astore        8
     524: aload         8
     526: ifnull        579
     529: getstatic     #88                 // Field io/undertow/websockets/jsr/JsrWebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/jsr/JsrWebSocketLogger;
     532: ldc           #89                 // String Calling reconnect handler for %s
     534: aload_0
     535: invokeinterface #90,  3           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     540: aload         8
     542: aload_1
     543: aload_0
     544: getfield      #20                 // Field requestUri:Ljava/net/URI;
     547: aload_0
     548: aload_0
     549: dup
     550: getfield      #7                  // Field disconnectCount:I
     553: iconst_1
     554: iadd
     555: dup_x1
     556: putfield      #7                  // Field disconnectCount:I
     559: invokeinterface #91,  5           // InterfaceMethod io/undertow/websockets/jsr/WebSocketReconnectHandler.disconnected:(Ljakarta/websocket/CloseReason;Ljava/net/URI;Ljakarta/websocket/Session;I)J
     564: lstore        9
     566: lload         9
     568: lconst_0
     569: lcmp
     570: iflt          579
     573: aload_0
     574: lload         9
     576: invokevirtual #92                 // Method handleReconnect:(J)V
     579: aload         7
     581: athrow
     582: return
    Exception table:
       from    to  target type
          95   224   227   Class java/lang/Exception
          12    95   248   any
         250   390   393   Class java/lang/Exception
         248   250   248   any
          12   416   495   any
         495   497   495   any

  private void handleReconnect(long);
    Code:
       0: getstatic     #88                 // Field io/undertow/websockets/jsr/JsrWebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/jsr/JsrWebSocketLogger;
       3: ldc           #93                 // String Attempting reconnect in %s ms for session %s
       5: lload_1
       6: aload_0
       7: invokeinterface #94,  5           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketLogger.debugf:(Ljava/lang/String;JLjava/lang/Object;)V
      12: aload_0
      13: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
      16: invokevirtual #95                 // Method io/undertow/websockets/core/WebSocketChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      19: new           #96                 // class io/undertow/websockets/jsr/UndertowSession$1
      22: dup
      23: aload_0
      24: invokespecial #97                 // Method io/undertow/websockets/jsr/UndertowSession$1."<init>":(Lio/undertow/websockets/jsr/UndertowSession;)V
      27: lload_1
      28: getstatic     #98                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      31: invokestatic  #99                 // Method io/undertow/util/WorkerUtils.executeAfter:(Lorg/xnio/XnioIoThread;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      34: pop
      35: return

  public void forceClose();
    Code:
       0: aload_0
       1: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: invokestatic  #100                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: return

  public java.net.URI getRequestURI();
    Code:
       0: aload_0
       1: getfield      #20                 // Field requestUri:Ljava/net/URI;
       4: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getRequestParameterMap();
    Code:
       0: aload_0
       1: getfield      #22                 // Field requestParameterMap:Ljava/util/Map;
       4: areturn

  public java.lang.String getQueryString();
    Code:
       0: aload_0
       1: getfield      #13                 // Field queryString:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getPathParameters();
    Code:
       0: aload_0
       1: getfield      #23                 // Field pathParameters:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getUserProperties();
    Code:
       0: aload_0
       1: getfield      #37                 // Field attrs:Ljava/util/Map;
       4: areturn

  public java.security.Principal getUserPrincipal();
    Code:
       0: aload_0
       1: getfield      #19                 // Field user:Ljava/security/Principal;
       4: areturn

  public void setMaxBinaryMessageBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field maximumBinaryBufferSize:I
       5: return

  public int getMaxBinaryMessageBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maximumBinaryBufferSize:I
       4: ireturn

  public void setMaxTextMessageBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field maximumTextBufferSize:I
       5: return

  public int getMaxTextMessageBufferSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maximumTextBufferSize:I
       4: ireturn

  public jakarta.websocket.RemoteEndpoint$Async getAsyncRemote();
    Code:
       0: aload_0
       1: getfield      #27                 // Field remote:Lio/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint;
       4: invokevirtual #101                // Method io/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint.getAsync:()Ljakarta/websocket/RemoteEndpoint$Async;
       7: areturn

  public jakarta.websocket.RemoteEndpoint$Basic getBasicRemote();
    Code:
       0: aload_0
       1: getfield      #27                 // Field remote:Lio/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint;
       4: invokevirtual #102                // Method io/undertow/websockets/jsr/WebSocketSessionRemoteEndpoint.getBasic:()Ljakarta/websocket/RemoteEndpoint$Basic;
       7: areturn

  public java.util.Set<jakarta.websocket.Session> getOpenSessions();
    Code:
       0: new           #103                // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #15                 // Field openSessions:Lio/undertow/websockets/jsr/SessionContainer;
       8: invokevirtual #104                // Method io/undertow/websockets/jsr/SessionContainer.getOpenSessions:()Ljava/util/Set;
      11: invokespecial #105                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      14: areturn

  public java.util.List<jakarta.websocket.Extension> getNegotiatedExtensions();
    Code:
       0: aload_0
       1: getfield      #38                 // Field extensions:Ljava/util/List;
       4: areturn

  void close0();
    Code:
       0: aload_0
       1: invokevirtual #106                // Method getExecutor:()Ljava/util/concurrent/Executor;
       4: new           #107                // class io/undertow/websockets/jsr/UndertowSession$2
       7: dup
       8: aload_0
       9: invokespecial #108                // Method io/undertow/websockets/jsr/UndertowSession$2."<init>":(Lio/undertow/websockets/jsr/UndertowSession;)V
      12: invokeinterface #109,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      17: return

  public io.undertow.websockets.jsr.Encoding getEncoding();
    Code:
       0: aload_0
       1: getfield      #14                 // Field encoding:Lio/undertow/websockets/jsr/Encoding;
       4: areturn

  public io.undertow.websockets.core.WebSocketChannel getWebSocketChannel();
    Code:
       0: aload_0
       1: getfield      #12                 // Field webSocketChannel:Lio/undertow/websockets/core/WebSocketChannel;
       4: areturn

  private void setupWebSocketChannel(io.undertow.websockets.core.WebSocketChannel);
    Code:
       0: aload_0
       1: new           #110                // class io/undertow/websockets/jsr/FrameHandler
       4: dup
       5: aload_0
       6: aload_0
       7: getfield      #28                 // Field endpoint:Lio/undertow/servlet/api/InstanceHandle;
      10: invokeinterface #81,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
      15: checkcast     #82                 // class jakarta/websocket/Endpoint
      18: invokespecial #111                // Method io/undertow/websockets/jsr/FrameHandler."<init>":(Lio/undertow/websockets/jsr/UndertowSession;Ljakarta/websocket/Endpoint;)V
      21: putfield      #41                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
      24: aload_1
      25: invokevirtual #46                 // Method io/undertow/websockets/core/WebSocketChannel.getReceiveSetter:()Lorg/xnio/ChannelListener$Setter;
      28: aload_0
      29: getfield      #41                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
      32: invokeinterface #47,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      37: aload_1
      38: new           #112                // class io/undertow/websockets/jsr/UndertowSession$3
      41: dup
      42: aload_0
      43: invokespecial #113                // Method io/undertow/websockets/jsr/UndertowSession$3."<init>":(Lio/undertow/websockets/jsr/UndertowSession;)V
      46: invokevirtual #114                // Method io/undertow/websockets/core/WebSocketChannel.addCloseTask:(Lorg/xnio/ChannelListener;)V
      49: return

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #41                 // Field frameHandler:Lio/undertow/websockets/jsr/FrameHandler;
       4: invokevirtual #115                // Method io/undertow/websockets/jsr/FrameHandler.getExecutor:()Ljava/util/concurrent/Executor;
       7: areturn

  boolean isSessionClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #116                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public jakarta.websocket.WebSocketContainer getContainer();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
       4: areturn

  static {};
    Code:
       0: ldc           #118                // class io/undertow/websockets/jsr/UndertowSession
       2: invokevirtual #119                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #9                  // Field $assertionsDisabled:Z
      16: return
}
