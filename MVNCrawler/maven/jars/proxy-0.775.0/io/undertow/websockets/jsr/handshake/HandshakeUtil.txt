Compiled from "HandshakeUtil.java"
public final class io.undertow.websockets.jsr.handshake.HandshakeUtil {
  private static final java.lang.String CONFIG_KEY;

  private static final io.undertow.util.AttachmentKey<jakarta.websocket.server.ServerEndpointConfig> PER_SESSION_CONFIG;

  public static final io.undertow.util.AttachmentKey<java.util.Map<java.lang.String, java.lang.String>> PATH_PARAMS;

  public static final io.undertow.util.AttachmentKey<java.security.Principal> PRINCIPAL;

  private io.undertow.websockets.jsr.handshake.HandshakeUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean checkOrigin(jakarta.websocket.server.ServerEndpointConfig, io.undertow.websockets.spi.WebSocketHttpExchange);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod jakarta/websocket/server/ServerEndpointConfig.getConfigurator:()Ljakarta/websocket/server/ServerEndpointConfig$Configurator;
       6: astore_2
       7: aload_2
       8: aload_1
       9: ldc           #4                  // String Origin
      11: invokeinterface #5,  2            // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getRequestHeader:(Ljava/lang/String;)Ljava/lang/String;
      16: invokevirtual #6                  // Method jakarta/websocket/server/ServerEndpointConfig$Configurator.checkOrigin:(Ljava/lang/String;)Z
      19: ireturn

  public static void prepareUpgrade(jakarta.websocket.server.ServerEndpointConfig, io.undertow.websockets.spi.WebSocketHttpExchange);
    Code:
       0: new           #7                  // class io/undertow/websockets/jsr/handshake/PerConnectionServerEndpointConfig
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method io/undertow/websockets/jsr/handshake/PerConnectionServerEndpointConfig."<init>":(Ljakarta/websocket/server/ServerEndpointConfig;)V
       8: astore_2
       9: aload_1
      10: getstatic     #9                  // Field PER_SESSION_CONFIG:Lio/undertow/util/AttachmentKey;
      13: aload_2
      14: invokeinterface #10,  3           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)V
      19: new           #11                 // class io/undertow/websockets/jsr/handshake/ExchangeHandshakeRequest
      22: dup
      23: aload_1
      24: invokespecial #12                 // Method io/undertow/websockets/jsr/handshake/ExchangeHandshakeRequest."<init>":(Lio/undertow/websockets/spi/WebSocketHttpExchange;)V
      27: astore_3
      28: new           #13                 // class io/undertow/websockets/jsr/handshake/ExchangeHandshakeResponse
      31: dup
      32: aload_1
      33: invokespecial #14                 // Method io/undertow/websockets/jsr/handshake/ExchangeHandshakeResponse."<init>":(Lio/undertow/websockets/spi/WebSocketHttpExchange;)V
      36: astore        4
      38: aload_2
      39: invokeinterface #2,  1            // InterfaceMethod jakarta/websocket/server/ServerEndpointConfig.getConfigurator:()Ljakarta/websocket/server/ServerEndpointConfig$Configurator;
      44: astore        5
      46: aload         5
      48: aload_2
      49: aload_3
      50: aload         4
      52: invokevirtual #15                 // Method jakarta/websocket/server/ServerEndpointConfig$Configurator.modifyHandshake:(Ljakarta/websocket/server/ServerEndpointConfig;Ljakarta/websocket/server/HandshakeRequest;Ljakarta/websocket/HandshakeResponse;)V
      55: aload         4
      57: invokevirtual #16                 // Method io/undertow/websockets/jsr/handshake/ExchangeHandshakeResponse.update:()V
      60: return

  public static void setConfig(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.jsr.ConfiguredServerEndpoint, io.undertow.websockets.spi.WebSocketHttpExchange);
    Code:
       0: aload_2
       1: getstatic     #9                  // Field PER_SESSION_CONFIG:Lio/undertow/util/AttachmentKey;
       4: invokeinterface #17,  2           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       9: checkcast     #18                 // class jakarta/websocket/server/ServerEndpointConfig
      12: astore_3
      13: aload_0
      14: ldc           #20                 // String ServerEndpointConfiguration
      16: new           #21                 // class io/undertow/websockets/jsr/handshake/PerConnectionConfiguredServerEndpoint
      19: dup
      20: aload_1
      21: aload_3
      22: invokespecial #22                 // Method io/undertow/websockets/jsr/handshake/PerConnectionConfiguredServerEndpoint."<init>":(Lio/undertow/websockets/jsr/ConfiguredServerEndpoint;Ljakarta/websocket/server/ServerEndpointConfig;)V
      25: invokevirtual #23                 // Method io/undertow/websockets/core/WebSocketChannel.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)Z
      28: pop
      29: return

  public static void setConfig(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.jsr.ConfiguredServerEndpoint);
    Code:
       0: aload_0
       1: ldc           #20                 // String ServerEndpointConfiguration
       3: aload_1
       4: invokevirtual #23                 // Method io/undertow/websockets/core/WebSocketChannel.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)Z
       7: pop
       8: return

  public static io.undertow.websockets.jsr.ConfiguredServerEndpoint getConfig(io.undertow.websockets.core.WebSocketChannel);
    Code:
       0: aload_0
       1: ldc           #20                 // String ServerEndpointConfiguration
       3: invokevirtual #24                 // Method io/undertow/websockets/core/WebSocketChannel.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #25                 // class io/undertow/websockets/jsr/ConfiguredServerEndpoint
       9: areturn

  public static void propagate(io.undertow.server.HttpServerExchange, io.undertow.servlet.websockets.ServletWebSocketHttpExchange);
    Code:
       0: aload_0
       1: getstatic     #9                  // Field PER_SESSION_CONFIG:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #26                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #18                 // class jakarta/websocket/server/ServerEndpointConfig
      10: astore_2
      11: aload_1
      12: getstatic     #9                  // Field PER_SESSION_CONFIG:Lio/undertow/util/AttachmentKey;
      15: aload_2
      16: invokevirtual #27                 // Method io/undertow/servlet/websockets/ServletWebSocketHttpExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)V
      19: return

  static java.lang.String selectSubProtocol(io.undertow.websockets.jsr.ConfiguredServerEndpoint, java.lang.String[]);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method io/undertow/websockets/jsr/ConfiguredServerEndpoint.getEndpointConfiguration:()Ljakarta/websocket/server/ServerEndpointConfig;
       4: invokeinterface #2,  1            // InterfaceMethod jakarta/websocket/server/ServerEndpointConfig.getConfigurator:()Ljakarta/websocket/server/ServerEndpointConfig$Configurator;
       9: ifnull        38
      12: aload_0
      13: invokevirtual #28                 // Method io/undertow/websockets/jsr/ConfiguredServerEndpoint.getEndpointConfiguration:()Ljakarta/websocket/server/ServerEndpointConfig;
      16: invokeinterface #2,  1            // InterfaceMethod jakarta/websocket/server/ServerEndpointConfig.getConfigurator:()Ljakarta/websocket/server/ServerEndpointConfig$Configurator;
      21: aload_0
      22: invokevirtual #28                 // Method io/undertow/websockets/jsr/ConfiguredServerEndpoint.getEndpointConfiguration:()Ljakarta/websocket/server/ServerEndpointConfig;
      25: invokeinterface #29,  1           // InterfaceMethod jakarta/websocket/server/ServerEndpointConfig.getSubprotocols:()Ljava/util/List;
      30: aload_1
      31: invokestatic  #30                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      34: invokevirtual #31                 // Method jakarta/websocket/server/ServerEndpointConfig$Configurator.getNegotiatedSubprotocol:(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;
      37: areturn
      38: aload_0
      39: invokevirtual #28                 // Method io/undertow/websockets/jsr/ConfiguredServerEndpoint.getEndpointConfiguration:()Ljakarta/websocket/server/ServerEndpointConfig;
      42: invokeinterface #29,  1           // InterfaceMethod jakarta/websocket/server/ServerEndpointConfig.getSubprotocols:()Ljava/util/List;
      47: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore_2
      53: aload_2
      54: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          117
      62: aload_2
      63: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #35                 // class java/lang/String
      71: astore_3
      72: aload_1
      73: astore        4
      75: aload         4
      77: arraylength
      78: istore        5
      80: iconst_0
      81: istore        6
      83: iload         6
      85: iload         5
      87: if_icmpge     114
      90: aload         4
      92: iload         6
      94: aaload
      95: astore        7
      97: aload_3
      98: aload         7
     100: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     103: ifeq          108
     106: aload_3
     107: areturn
     108: iinc          6, 1
     111: goto          83
     114: goto          53
     117: aconst_null
     118: areturn

  static java.util.List<jakarta.websocket.Extension> selectExtensions(io.undertow.websockets.jsr.ConfiguredServerEndpoint, java.util.List<jakarta.websocket.Extension>);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method io/undertow/websockets/jsr/ConfiguredServerEndpoint.getEndpointConfiguration:()Ljakarta/websocket/server/ServerEndpointConfig;
       4: invokeinterface #2,  1            // InterfaceMethod jakarta/websocket/server/ServerEndpointConfig.getConfigurator:()Ljakarta/websocket/server/ServerEndpointConfig$Configurator;
       9: ifnull        30
      12: aload_0
      13: invokevirtual #28                 // Method io/undertow/websockets/jsr/ConfiguredServerEndpoint.getEndpointConfiguration:()Ljakarta/websocket/server/ServerEndpointConfig;
      16: invokeinterface #2,  1            // InterfaceMethod jakarta/websocket/server/ServerEndpointConfig.getConfigurator:()Ljakarta/websocket/server/ServerEndpointConfig$Configurator;
      21: aload_0
      22: invokevirtual #37                 // Method io/undertow/websockets/jsr/ConfiguredServerEndpoint.getExtensions:()Ljava/util/List;
      25: aload_1
      26: invokevirtual #38                 // Method jakarta/websocket/server/ServerEndpointConfig$Configurator.getNegotiatedExtensions:(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
      29: areturn
      30: invokestatic  #39                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      33: areturn

  static {};
    Code:
       0: ldc           #18                 // class jakarta/websocket/server/ServerEndpointConfig
       2: invokestatic  #40                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
       5: putstatic     #9                  // Field PER_SESSION_CONFIG:Lio/undertow/util/AttachmentKey;
       8: ldc           #41                 // class java/util/Map
      10: invokestatic  #40                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      13: putstatic     #42                 // Field PATH_PARAMS:Lio/undertow/util/AttachmentKey;
      16: ldc           #43                 // class java/security/Principal
      18: invokestatic  #40                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      21: putstatic     #44                 // Field PRINCIPAL:Lio/undertow/util/AttachmentKey;
      24: return
}
