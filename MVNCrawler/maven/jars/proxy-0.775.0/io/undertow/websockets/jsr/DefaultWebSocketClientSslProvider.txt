Compiled from "DefaultWebSocketClientSslProvider.java"
public class io.undertow.websockets.jsr.DefaultWebSocketClientSslProvider implements io.undertow.websockets.jsr.WebsocketClientSslProvider {
  public static final java.lang.String SSL_CONTEXT;

  private static final java.lang.ThreadLocal<javax.net.ssl.SSLContext> LOCAL_SSL_CONTEXT;

  public io.undertow.websockets.jsr.DefaultWebSocketClientSslProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.xnio.ssl.XnioSsl getSsl(org.xnio.XnioWorker, java.lang.Class<?>, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method getThreadLocalSsl:(Lorg/xnio/XnioWorker;)Lorg/xnio/ssl/XnioSsl;
       5: areturn

  public org.xnio.ssl.XnioSsl getSsl(org.xnio.XnioWorker, java.lang.Object, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method getThreadLocalSsl:(Lorg/xnio/XnioWorker;)Lorg/xnio/ssl/XnioSsl;
       5: areturn

  public org.xnio.ssl.XnioSsl getSsl(org.xnio.XnioWorker, jakarta.websocket.Endpoint, jakarta.websocket.ClientEndpointConfig, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method getThreadLocalSsl:(Lorg/xnio/XnioWorker;)Lorg/xnio/ssl/XnioSsl;
       5: astore        5
       7: aload         5
       9: ifnull        15
      12: aload         5
      14: areturn
      15: aload_3
      16: invokeinterface #3,  1            // InterfaceMethod jakarta/websocket/ClientEndpointConfig.getUserProperties:()Ljava/util/Map;
      21: ldc           #5                  // String io.undertow.websocket.SSL_CONTEXT
      23: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #7                  // class javax/net/ssl/SSLContext
      31: astore        6
      33: aload         6
      35: ifnull        55
      38: new           #8                  // class io/undertow/protocols/ssl/UndertowXnioSsl
      41: dup
      42: aload_1
      43: invokevirtual #9                  // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      46: getstatic     #10                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      49: aload         6
      51: invokespecial #11                 // Method io/undertow/protocols/ssl/UndertowXnioSsl."<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLContext;)V
      54: areturn
      55: aconst_null
      56: areturn

  public static void setSslContext(javax.net.ssl.SSLContext);
    Code:
       0: getstatic     #12                 // Field LOCAL_SSL_CONTEXT:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #13                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  private org.xnio.ssl.XnioSsl getThreadLocalSsl(org.xnio.XnioWorker);
    Code:
       0: getstatic     #12                 // Field LOCAL_SSL_CONTEXT:Ljava/lang/ThreadLocal;
       3: invokevirtual #14                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #7                  // class javax/net/ssl/SSLContext
       9: astore_2
      10: aload_2
      11: ifnull        36
      14: getstatic     #12                 // Field LOCAL_SSL_CONTEXT:Ljava/lang/ThreadLocal;
      17: invokevirtual #15                 // Method java/lang/ThreadLocal.remove:()V
      20: new           #8                  // class io/undertow/protocols/ssl/UndertowXnioSsl
      23: dup
      24: aload_1
      25: invokevirtual #9                  // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
      28: getstatic     #10                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      31: aload_2
      32: invokespecial #11                 // Method io/undertow/protocols/ssl/UndertowXnioSsl."<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLContext;)V
      35: areturn
      36: aconst_null
      37: areturn

  static {};
    Code:
       0: new           #16                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #17                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #12                 // Field LOCAL_SSL_CONTEXT:Ljava/lang/ThreadLocal;
      10: return
}
