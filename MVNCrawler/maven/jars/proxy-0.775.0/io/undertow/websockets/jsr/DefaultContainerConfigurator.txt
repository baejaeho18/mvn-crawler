Compiled from "DefaultContainerConfigurator.java"
public class io.undertow.websockets.jsr.DefaultContainerConfigurator extends jakarta.websocket.server.ServerEndpointConfig$Configurator {
  public static final io.undertow.websockets.jsr.DefaultContainerConfigurator INSTANCE;

  private static final java.lang.ThreadLocal<io.undertow.servlet.api.InstanceFactory<?>> currentInstanceFactory;

  private static final java.lang.ThreadLocal<io.undertow.servlet.api.InstanceHandle<?>> currentInstanceHandle;

  public io.undertow.websockets.jsr.DefaultContainerConfigurator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/websocket/server/ServerEndpointConfig$Configurator."<init>":()V
       4: return

  public java.lang.String getNegotiatedSubprotocol(java.util.List<java.lang.String>, java.util.List<java.lang.String>);
    Code:
       0: aload_2
       1: invokeinterface #2,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          44
      16: aload_3
      17: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #5                  // class java/lang/String
      25: astore        4
      27: aload_1
      28: aload         4
      30: invokeinterface #6,  2            // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      35: ifeq          41
      38: aload         4
      40: areturn
      41: goto          7
      44: ldc           #7                  // String
      46: areturn

  public java.util.List<jakarta.websocket.Extension> getNegotiatedExtensions(java.util.List<jakarta.websocket.Extension>, java.util.List<jakarta.websocket.Extension>);
    Code:
       0: new           #8                  // class java/util/ArrayList
       3: dup
       4: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_2
       9: invokeinterface #2,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          106
      26: aload         4
      28: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #10                 // class jakarta/websocket/Extension
      36: astore        5
      38: aload_1
      39: invokeinterface #2,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      44: astore        6
      46: aload         6
      48: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          103
      56: aload         6
      58: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #10                 // class jakarta/websocket/Extension
      66: astore        7
      68: aload         7
      70: invokeinterface #11,  1           // InterfaceMethod jakarta/websocket/Extension.getName:()Ljava/lang/String;
      75: aload         5
      77: invokeinterface #11,  1           // InterfaceMethod jakarta/websocket/Extension.getName:()Ljava/lang/String;
      82: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifeq          100
      88: aload_3
      89: aload         5
      91: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: goto          103
     100: goto          46
     103: goto          16
     106: aload_3
     107: areturn

  public boolean checkOrigin(java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  public void modifyHandshake(jakarta.websocket.server.ServerEndpointConfig, jakarta.websocket.server.HandshakeRequest, jakarta.websocket.HandshakeResponse);
    Code:
       0: return

  public <T> T getEndpointInstance(java.lang.Class<T>) throws java.lang.InstantiationException;
    Code:
       0: getstatic     #14                 // Field currentInstanceFactory:Ljava/lang/ThreadLocal;
       3: invokevirtual #15                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #16                 // class io/undertow/servlet/api/InstanceFactory
       9: astore_2
      10: aload_2
      11: ifnull        35
      14: aload_2
      15: invokeinterface #17,  1           // InterfaceMethod io/undertow/servlet/api/InstanceFactory.createInstance:()Lio/undertow/servlet/api/InstanceHandle;
      20: astore_3
      21: getstatic     #18                 // Field currentInstanceHandle:Ljava/lang/ThreadLocal;
      24: aload_3
      25: invokevirtual #19                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      28: aload_3
      29: invokeinterface #20,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
      34: areturn
      35: aload_1
      36: invokevirtual #21                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      39: areturn
      40: astore_3
      41: new           #23                 // class java/lang/RuntimeException
      44: dup
      45: aload_3
      46: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      49: athrow
    Exception table:
       from    to  target type
          35    39    40   Class java/lang/IllegalAccessException

  static void setCurrentInstanceFactory(io.undertow.servlet.api.InstanceFactory<?>);
    Code:
       0: getstatic     #14                 // Field currentInstanceFactory:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #19                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  static io.undertow.servlet.api.InstanceHandle<?> clearCurrentInstanceFactory();
    Code:
       0: getstatic     #14                 // Field currentInstanceFactory:Ljava/lang/ThreadLocal;
       3: invokevirtual #25                 // Method java/lang/ThreadLocal.remove:()V
       6: getstatic     #18                 // Field currentInstanceHandle:Ljava/lang/ThreadLocal;
       9: invokevirtual #15                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      12: checkcast     #26                 // class io/undertow/servlet/api/InstanceHandle
      15: astore_0
      16: getstatic     #18                 // Field currentInstanceHandle:Ljava/lang/ThreadLocal;
      19: invokevirtual #25                 // Method java/lang/ThreadLocal.remove:()V
      22: aload_0
      23: areturn

  static {};
    Code:
       0: new           #27                 // class io/undertow/websockets/jsr/DefaultContainerConfigurator
       3: dup
       4: invokespecial #28                 // Method "<init>":()V
       7: putstatic     #29                 // Field INSTANCE:Lio/undertow/websockets/jsr/DefaultContainerConfigurator;
      10: new           #30                 // class java/lang/ThreadLocal
      13: dup
      14: invokespecial #31                 // Method java/lang/ThreadLocal."<init>":()V
      17: putstatic     #14                 // Field currentInstanceFactory:Ljava/lang/ThreadLocal;
      20: new           #30                 // class java/lang/ThreadLocal
      23: dup
      24: invokespecial #31                 // Method java/lang/ThreadLocal."<init>":()V
      27: putstatic     #18                 // Field currentInstanceHandle:Ljava/lang/ThreadLocal;
      30: return
}
