Compiled from "FrameHandler.java"
class io.undertow.websockets.jsr.FrameHandler extends io.undertow.websockets.core.AbstractReceiveListener {
  private final jakarta.websocket.Endpoint endpoint;

  private final io.undertow.websockets.jsr.UndertowSession session;

  protected static final byte[] EMPTY;

  private final java.util.concurrent.ConcurrentMap<io.undertow.websockets.jsr.FrameHandler$FrameType, io.undertow.websockets.jsr.FrameHandler$HandlerWrapper> handlers;

  private final java.util.concurrent.Executor executor;

  protected io.undertow.websockets.jsr.FrameHandler(io.undertow.websockets.jsr.UndertowSession, jakarta.websocket.Endpoint);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/undertow/websockets/core/AbstractReceiveListener."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field endpoint:Ljakarta/websocket/Endpoint;
      25: aload_1
      26: invokevirtual #7                  // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      29: invokevirtual #8                  // Method io/undertow/websockets/jsr/ServerWebSocketContainer.isDispatchToWorker:()Z
      32: ifeq          53
      35: new           #9                  // class io/undertow/websockets/jsr/OrderedExecutor
      38: dup
      39: aload_1
      40: invokevirtual #10                 // Method io/undertow/websockets/jsr/UndertowSession.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      43: invokevirtual #11                 // Method io/undertow/websockets/core/WebSocketChannel.getWorker:()Lorg/xnio/XnioWorker;
      46: invokespecial #12                 // Method io/undertow/websockets/jsr/OrderedExecutor."<init>":(Ljava/util/concurrent/Executor;)V
      49: astore_3
      50: goto          61
      53: aload_1
      54: invokevirtual #10                 // Method io/undertow/websockets/jsr/UndertowSession.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      57: invokevirtual #13                 // Method io/undertow/websockets/core/WebSocketChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      60: astore_3
      61: aload_0
      62: aload_3
      63: putfield      #14                 // Field executor:Ljava/util/concurrent/Executor;
      66: return

  protected void onFullCloseMessage(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.BufferedBinaryMessage);
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #15                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          20
      10: aload_2
      11: invokevirtual #16                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      14: invokeinterface #17,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      19: return
      20: aload_2
      21: invokevirtual #16                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      24: astore_3
      25: aload_3
      26: invokeinterface #18,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      31: checkcast     #19                 // class "[Ljava/nio/ByteBuffer;"
      34: invokestatic  #20                 // Method toBuffer:([Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      37: astore        4
      39: aload         4
      41: invokevirtual #21                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      44: astore        5
      46: aload         5
      48: aload_1
      49: aconst_null
      50: invokestatic  #22                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      53: aload_0
      54: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      57: invokevirtual #7                  // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      60: aload_0
      61: getfield      #14                 // Field executor:Ljava/util/concurrent/Executor;
      64: new           #23                 // class io/undertow/websockets/jsr/FrameHandler$1
      67: dup
      68: aload_0
      69: aload         4
      71: aload_3
      72: invokespecial #24                 // Method io/undertow/websockets/jsr/FrameHandler$1."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Ljava/nio/ByteBuffer;Lorg/xnio/Pooled;)V
      75: invokevirtual #25                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      78: return

  private void invokeOnError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #7                  // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
       7: aload_0
       8: getfield      #14                 // Field executor:Ljava/util/concurrent/Executor;
      11: new           #26                 // class io/undertow/websockets/jsr/FrameHandler$2
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #27                 // Method io/undertow/websockets/jsr/FrameHandler$2."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Ljava/lang/Throwable;)V
      20: invokevirtual #25                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      23: return

  protected void onFullPongMessage(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.BufferedBinaryMessage);
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #15                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          20
      10: aload_2
      11: invokevirtual #16                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      14: invokeinterface #17,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      19: return
      20: aload_0
      21: getstatic     #28                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.PONG:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      24: invokevirtual #29                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      27: astore_3
      28: aload_3
      29: ifnull        86
      32: aload_2
      33: invokevirtual #16                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      36: astore        4
      38: aload         4
      40: invokeinterface #18,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      45: checkcast     #19                 // class "[Ljava/nio/ByteBuffer;"
      48: invokestatic  #20                 // Method toBuffer:([Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      51: invokestatic  #30                 // Method io/undertow/websockets/jsr/DefaultPongMessage.create:(Ljava/nio/ByteBuffer;)Ljakarta/websocket/PongMessage;
      54: astore        5
      56: aload_0
      57: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      60: invokevirtual #7                  // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      63: aload_0
      64: getfield      #14                 // Field executor:Ljava/util/concurrent/Executor;
      67: new           #31                 // class io/undertow/websockets/jsr/FrameHandler$3
      70: dup
      71: aload_0
      72: aload_3
      73: aload         5
      75: aload         4
      77: invokespecial #32                 // Method io/undertow/websockets/jsr/FrameHandler$3."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Ljakarta/websocket/PongMessage;Lorg/xnio/Pooled;)V
      80: invokevirtual #25                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      83: goto          95
      86: aload_2
      87: invokevirtual #16                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      90: invokeinterface #17,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      95: return

  protected void onText(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.StreamSourceFrameChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #15                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          15
      10: aload_2
      11: invokevirtual #33                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.close:()V
      14: return
      15: aload_0
      16: getstatic     #34                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      19: invokevirtual #29                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      22: astore_3
      23: aload_3
      24: ifnull        62
      27: aload_3
      28: invokevirtual #35                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.isPartialHandler:()Z
      31: ifeq          62
      34: new           #36                 // class io/undertow/websockets/core/BufferedTextMessage
      37: dup
      38: iconst_0
      39: invokespecial #37                 // Method io/undertow/websockets/core/BufferedTextMessage."<init>":(Z)V
      42: astore        4
      44: aload         4
      46: aload_2
      47: new           #38                 // class io/undertow/websockets/jsr/FrameHandler$4
      50: dup
      51: aload_0
      52: aload_3
      53: invokespecial #39                 // Method io/undertow/websockets/jsr/FrameHandler$4."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;)V
      56: invokevirtual #40                 // Method io/undertow/websockets/core/BufferedTextMessage.read:(Lio/undertow/websockets/core/StreamSourceFrameChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      59: goto          67
      62: aload_0
      63: aload_2
      64: invokevirtual #41                 // Method bufferFullMessage:(Lio/undertow/websockets/core/StreamSourceFrameChannel;)V
      67: return

  protected void onBinary(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.StreamSourceFrameChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #15                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          15
      10: aload_2
      11: invokevirtual #33                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.close:()V
      14: return
      15: aload_0
      16: getstatic     #42                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      19: invokevirtual #29                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      22: astore_3
      23: aload_3
      24: ifnull        70
      27: aload_3
      28: invokevirtual #35                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.isPartialHandler:()Z
      31: ifeq          70
      34: new           #43                 // class io/undertow/websockets/core/BufferedBinaryMessage
      37: dup
      38: aload_0
      39: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      42: invokevirtual #44                 // Method io/undertow/websockets/jsr/UndertowSession.getMaxBinaryMessageBufferSize:()I
      45: i2l
      46: iconst_0
      47: invokespecial #45                 // Method io/undertow/websockets/core/BufferedBinaryMessage."<init>":(JZ)V
      50: astore        4
      52: aload         4
      54: aload_2
      55: new           #46                 // class io/undertow/websockets/jsr/FrameHandler$5
      58: dup
      59: aload_0
      60: aload_3
      61: invokespecial #47                 // Method io/undertow/websockets/jsr/FrameHandler$5."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;)V
      64: invokevirtual #48                 // Method io/undertow/websockets/core/BufferedBinaryMessage.read:(Lio/undertow/websockets/core/StreamSourceFrameChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      67: goto          75
      70: aload_0
      71: aload_2
      72: invokevirtual #41                 // Method bufferFullMessage:(Lio/undertow/websockets/core/StreamSourceFrameChannel;)V
      75: return

  private void invokeBinaryHandler(io.undertow.websockets.core.BufferedBinaryMessage, io.undertow.websockets.jsr.FrameHandler$HandlerWrapper, boolean);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
       4: astore        4
       6: aload_0
       7: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      10: invokevirtual #7                  // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      13: aload_0
      14: getfield      #14                 // Field executor:Ljava/util/concurrent/Executor;
      17: new           #49                 // class io/undertow/websockets/jsr/FrameHandler$6
      20: dup
      21: aload_0
      22: aload_2
      23: aload         4
      25: iload_3
      26: invokespecial #50                 // Method io/undertow/websockets/jsr/FrameHandler$6."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Lorg/xnio/Pooled;Z)V
      29: invokevirtual #25                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      32: return

  private void invokeTextHandler(io.undertow.websockets.core.BufferedTextMessage, io.undertow.websockets.jsr.FrameHandler$HandlerWrapper, boolean);
    Code:
       0: aload_1
       1: invokevirtual #51                 // Method io/undertow/websockets/core/BufferedTextMessage.getData:()Ljava/lang/String;
       4: astore        4
       6: aload_0
       7: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      10: invokevirtual #7                  // Method io/undertow/websockets/jsr/UndertowSession.getContainer:()Lio/undertow/websockets/jsr/ServerWebSocketContainer;
      13: aload_0
      14: getfield      #14                 // Field executor:Ljava/util/concurrent/Executor;
      17: new           #52                 // class io/undertow/websockets/jsr/FrameHandler$7
      20: dup
      21: aload_0
      22: aload_2
      23: aload         4
      25: iload_3
      26: invokespecial #53                 // Method io/undertow/websockets/jsr/FrameHandler$7."<init>":(Lio/undertow/websockets/jsr/FrameHandler;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Ljava/lang/String;Z)V
      29: invokevirtual #25                 // Method io/undertow/websockets/jsr/ServerWebSocketContainer.invokeEndpointMethod:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
      32: return

  protected void onError(io.undertow.websockets.core.WebSocketChannel, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getEndpoint:()Ljakarta/websocket/Endpoint;
       4: aload_0
       5: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       8: aload_2
       9: invokevirtual #55                 // Method jakarta/websocket/Endpoint.onError:(Ljakarta/websocket/Session;Ljava/lang/Throwable;)V
      12: aload_0
      13: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      16: invokevirtual #56                 // Method io/undertow/websockets/jsr/UndertowSession.forceClose:()V
      19: goto          32
      22: astore_3
      23: aload_0
      24: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
      27: invokevirtual #56                 // Method io/undertow/websockets/jsr/UndertowSession.forceClose:()V
      30: aload_3
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0    12    22   any

  protected void onFullTextMessage(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.BufferedTextMessage);
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #15                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getstatic     #34                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      15: invokevirtual #29                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      18: astore_3
      19: aload_3
      20: ifnull        30
      23: aload_0
      24: aload_2
      25: aload_3
      26: iconst_1
      27: invokevirtual #57                 // Method invokeTextHandler:(Lio/undertow/websockets/core/BufferedTextMessage;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Z)V
      30: return

  protected void onFullBinaryMessage(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.BufferedBinaryMessage);
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #15                 // Method io/undertow/websockets/jsr/UndertowSession.isSessionClosed:()Z
       7: ifeq          20
      10: aload_2
      11: invokevirtual #16                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      14: invokeinterface #58,  1           // InterfaceMethod org/xnio/Pooled.close:()V
      19: return
      20: aload_0
      21: getstatic     #42                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      24: invokevirtual #29                 // Method getHandler:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;
      27: astore_3
      28: aload_3
      29: ifnull        42
      32: aload_0
      33: aload_2
      34: aload_3
      35: iconst_1
      36: invokevirtual #59                 // Method invokeBinaryHandler:(Lio/undertow/websockets/core/BufferedBinaryMessage;Lio/undertow/websockets/jsr/FrameHandler$HandlerWrapper;Z)V
      39: goto          51
      42: aload_2
      43: invokevirtual #16                 // Method io/undertow/websockets/core/BufferedBinaryMessage.getData:()Lorg/xnio/Pooled;
      46: invokeinterface #58,  1           // InterfaceMethod org/xnio/Pooled.close:()V
      51: return

  protected static java.nio.ByteBuffer toBuffer(java.nio.ByteBuffer...);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: if_icmpne     10
       6: aload_0
       7: iconst_0
       8: aaload
       9: areturn
      10: aload_0
      11: invokestatic  #60                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
      14: l2i
      15: istore_1
      16: iload_1
      17: ifne          24
      20: getstatic     #61                 // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
      23: areturn
      24: iload_1
      25: invokestatic  #62                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      28: astore_2
      29: aload_0
      30: astore_3
      31: aload_3
      32: arraylength
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload         4
      42: if_icmpge     64
      45: aload_3
      46: iload         5
      48: aaload
      49: astore        6
      51: aload_2
      52: aload         6
      54: invokevirtual #63                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      57: pop
      58: iinc          5, 1
      61: goto          38
      64: aload_2
      65: invokevirtual #64                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      68: pop
      69: aload_2
      70: areturn

  protected static byte[] toArray(java.nio.ByteBuffer...);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: if_icmpne     48
       6: aload_0
       7: iconst_0
       8: aaload
       9: astore_1
      10: aload_1
      11: invokevirtual #65                 // Method java/nio/ByteBuffer.hasArray:()Z
      14: ifeq          48
      17: aload_1
      18: invokevirtual #66                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: ifne          48
      24: aload_1
      25: invokevirtual #67                 // Method java/nio/ByteBuffer.position:()I
      28: ifne          48
      31: aload_1
      32: invokevirtual #68                 // Method java/nio/ByteBuffer.array:()[B
      35: arraylength
      36: aload_1
      37: invokevirtual #69                 // Method java/nio/ByteBuffer.remaining:()I
      40: if_icmpne     48
      43: aload_1
      44: invokevirtual #68                 // Method java/nio/ByteBuffer.array:()[B
      47: areturn
      48: aload_0
      49: iconst_0
      50: aload_0
      51: arraylength
      52: invokestatic  #70                 // Method org/xnio/Buffers.take:([Ljava/nio/ByteBuffer;II)[B
      55: areturn

  public final void addHandler(java.lang.Class<?>, jakarta.websocket.MessageHandler);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_2
       4: instanceof    #71                 // class jakarta/websocket/MessageHandler$Partial
       7: invokevirtual #72                 // Method addHandlerInternal:(Ljakarta/websocket/MessageHandler;Ljava/lang/Class;Z)V
      10: return

  public final void addHandler(jakarta.websocket.MessageHandler);
    Code:
       0: aload_1
       1: invokevirtual #73                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #74                 // Method io/undertow/websockets/jsr/util/ClassUtils.getHandlerTypes:(Ljava/lang/Class;)Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: invokeinterface #75,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #76,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          79
      29: aload_3
      30: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #79                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #80,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #81                 // class java/lang/Class
      50: astore        5
      52: aload         4
      54: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #83                 // class java/lang/Boolean
      62: invokevirtual #84                 // Method java/lang/Boolean.booleanValue:()Z
      65: istore        6
      67: aload_0
      68: aload_1
      69: aload         5
      71: iload         6
      73: invokevirtual #72                 // Method addHandlerInternal:(Ljakarta/websocket/MessageHandler;Ljava/lang/Class;Z)V
      76: goto          20
      79: return

  private void addHandlerInternal(jakarta.websocket.MessageHandler, java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #85                 // Method verify:(Ljava/lang/Class;Ljakarta/websocket/MessageHandler;)V
       6: aload_0
       7: aload_2
       8: aload_1
       9: iload_3
      10: invokevirtual #86                 // Method createHandlerWrappers:(Ljava/lang/Class;Ljakarta/websocket/MessageHandler;Z)Ljava/util/List;
      13: astore        4
      15: aload         4
      17: invokeinterface #87,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          113
      34: aload         5
      36: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      44: astore        6
      46: aload_0
      47: getfield      #4                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
      50: aload         6
      52: invokevirtual #89                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      55: invokeinterface #90,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      60: ifeq          77
      63: getstatic     #91                 // Field io/undertow/websockets/jsr/JsrWebSocketMessages.MESSAGES:Lio/undertow/websockets/jsr/JsrWebSocketMessages;
      66: aload         6
      68: invokevirtual #89                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      71: invokeinterface #92,  2           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketMessages.handlerAlreadyRegistered:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Ljava/lang/IllegalStateException;
      76: athrow
      77: aload_0
      78: getfield      #4                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
      81: aload         6
      83: invokevirtual #89                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      86: aload         6
      88: invokeinterface #93,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: ifnull        110
      96: getstatic     #91                 // Field io/undertow/websockets/jsr/JsrWebSocketMessages.MESSAGES:Lio/undertow/websockets/jsr/JsrWebSocketMessages;
      99: aload         6
     101: invokevirtual #89                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     104: invokeinterface #92,  2           // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketMessages.handlerAlreadyRegistered:(Lio/undertow/websockets/jsr/FrameHandler$FrameType;)Ljava/lang/IllegalStateException;
     109: athrow
     110: goto          24
     113: return

  protected java.util.List<io.undertow.websockets.jsr.FrameHandler$HandlerWrapper> createHandlerWrappers(java.lang.Class<?>, jakarta.websocket.MessageHandler, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #94                 // Method io/undertow/websockets/jsr/UndertowSession.getEncoding:()Lio/undertow/websockets/jsr/Encoding;
       7: astore        4
       9: new           #95                 // class java/util/ArrayList
      12: dup
      13: iconst_2
      14: invokespecial #96                 // Method java/util/ArrayList."<init>":(I)V
      17: astore        5
      19: aload         4
      21: aload_1
      22: invokevirtual #97                 // Method io/undertow/websockets/jsr/Encoding.canDecodeText:(Ljava/lang/Class;)Z
      25: ifeq          50
      28: aload         5
      30: new           #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      33: dup
      34: getstatic     #34                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      37: aload_2
      38: aload_1
      39: iconst_1
      40: iconst_0
      41: invokespecial #98                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljakarta/websocket/MessageHandler;Ljava/lang/Class;ZZ)V
      44: invokeinterface #99,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: aload         4
      52: aload_1
      53: invokevirtual #100                // Method io/undertow/websockets/jsr/Encoding.canDecodeBinary:(Ljava/lang/Class;)Z
      56: ifeq          81
      59: aload         5
      61: new           #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      64: dup
      65: getstatic     #42                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
      68: aload_2
      69: aload_1
      70: iconst_1
      71: iconst_0
      72: invokespecial #98                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljakarta/websocket/MessageHandler;Ljava/lang/Class;ZZ)V
      75: invokeinterface #99,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      80: pop
      81: aload         5
      83: invokeinterface #101,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      88: ifne          94
      91: aload         5
      93: areturn
      94: iload_3
      95: ifeq          162
      98: aload_1
      99: ldc           #102                // class java/lang/String
     101: if_acmpne     122
     104: new           #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     107: dup
     108: getstatic     #34                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     111: aload_2
     112: aload_1
     113: iconst_0
     114: iconst_1
     115: invokespecial #98                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljakarta/websocket/MessageHandler;Ljava/lang/Class;ZZ)V
     118: invokestatic  #103                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     121: areturn
     122: aload_1
     123: ldc           #104                // class "[B"
     125: if_acmpeq     134
     128: aload_1
     129: ldc           #105                // class java/nio/ByteBuffer
     131: if_acmpne     152
     134: new           #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     137: dup
     138: getstatic     #42                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     141: aload_2
     142: aload_1
     143: iconst_0
     144: iconst_1
     145: invokespecial #98                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljakarta/websocket/MessageHandler;Ljava/lang/Class;ZZ)V
     148: invokestatic  #103                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     151: areturn
     152: getstatic     #91                 // Field io/undertow/websockets/jsr/JsrWebSocketMessages.MESSAGES:Lio/undertow/websockets/jsr/JsrWebSocketMessages;
     155: aload_1
     156: invokeinterface #106,  2          // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketMessages.unsupportedFrameType:(Ljava/lang/Class;)Ljava/lang/IllegalStateException;
     161: athrow
     162: aload_1
     163: ldc           #104                // class "[B"
     165: if_acmpeq     180
     168: aload_1
     169: ldc           #105                // class java/nio/ByteBuffer
     171: if_acmpeq     180
     174: aload_1
     175: ldc           #107                // class java/io/InputStream
     177: if_acmpne     198
     180: new           #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     183: dup
     184: getstatic     #42                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.BYTE:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     187: aload_2
     188: aload_1
     189: iconst_0
     190: iconst_0
     191: invokespecial #98                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljakarta/websocket/MessageHandler;Ljava/lang/Class;ZZ)V
     194: invokestatic  #103                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     197: areturn
     198: aload_1
     199: ldc           #102                // class java/lang/String
     201: if_acmpeq     210
     204: aload_1
     205: ldc           #108                // class java/io/Reader
     207: if_acmpne     228
     210: new           #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     213: dup
     214: getstatic     #34                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.TEXT:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     217: aload_2
     218: aload_1
     219: iconst_0
     220: iconst_0
     221: invokespecial #98                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljakarta/websocket/MessageHandler;Ljava/lang/Class;ZZ)V
     224: invokestatic  #103                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     227: areturn
     228: aload_1
     229: ldc           #109                // class jakarta/websocket/PongMessage
     231: if_acmpne     252
     234: new           #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     237: dup
     238: getstatic     #28                 // Field io/undertow/websockets/jsr/FrameHandler$FrameType.PONG:Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     241: aload_2
     242: aload_1
     243: iconst_0
     244: iconst_0
     245: invokespecial #98                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper."<init>":(Lio/undertow/websockets/jsr/FrameHandler$FrameType;Ljakarta/websocket/MessageHandler;Ljava/lang/Class;ZZ)V
     248: invokestatic  #103                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     251: areturn
     252: getstatic     #91                 // Field io/undertow/websockets/jsr/JsrWebSocketMessages.MESSAGES:Lio/undertow/websockets/jsr/JsrWebSocketMessages;
     255: aload_1
     256: invokeinterface #106,  2          // InterfaceMethod io/undertow/websockets/jsr/JsrWebSocketMessages.unsupportedFrameType:(Ljava/lang/Class;)Ljava/lang/IllegalStateException;
     261: athrow

  protected void verify(java.lang.Class<?>, jakarta.websocket.MessageHandler);
    Code:
       0: return

  public final void removeHandler(jakarta.websocket.MessageHandler);
    Code:
       0: aload_1
       1: invokevirtual #73                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #74                 // Method io/undertow/websockets/jsr/util/ClassUtils.getHandlerTypes:(Ljava/lang/Class;)Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: invokeinterface #75,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #76,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          163
      29: aload_3
      30: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #79                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #80,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #81                 // class java/lang/Class
      50: astore        5
      52: aload_0
      53: aload         5
      55: aload_1
      56: aload         4
      58: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: checkcast     #83                 // class java/lang/Boolean
      66: invokevirtual #84                 // Method java/lang/Boolean.booleanValue:()Z
      69: invokevirtual #86                 // Method createHandlerWrappers:(Ljava/lang/Class;Ljakarta/websocket/MessageHandler;Z)Ljava/util/List;
      72: astore        6
      74: aload         6
      76: invokeinterface #87,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      81: astore        7
      83: aload         7
      85: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          160
      93: aload         7
      95: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: checkcast     #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     103: astore        8
     105: aload         8
     107: invokevirtual #89                 // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getFrameType:()Lio/undertow/websockets/jsr/FrameHandler$FrameType;
     110: astore        9
     112: aload_0
     113: getfield      #4                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
     116: aload         9
     118: invokeinterface #110,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     123: checkcast     #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
     126: astore        10
     128: aload         10
     130: ifnull        157
     133: aload         10
     135: invokevirtual #111                // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getMessageType:()Ljava/lang/Class;
     138: aload         5
     140: if_acmpne     157
     143: aload_0
     144: getfield      #4                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
     147: aload         9
     149: aload         10
     151: invokeinterface #112,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     156: pop
     157: goto          83
     160: goto          20
     163: return

  public final java.util.Set<jakarta.websocket.MessageHandler> getHandlers();
    Code:
       0: new           #113                // class java/util/HashSet
       3: dup
       4: invokespecial #114                // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #115,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      17: invokeinterface #116,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          56
      32: aload_2
      33: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokevirtual #117                // Method io/undertow/websockets/jsr/FrameHandler$HandlerWrapper.getHandler:()Ljakarta/websocket/MessageHandler;
      47: invokeinterface #118,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          23
      56: aload_1
      57: areturn

  protected final io.undertow.websockets.jsr.FrameHandler$HandlerWrapper getHandler(io.undertow.websockets.jsr.FrameHandler$FrameType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field handlers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #110,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #88                 // class io/undertow/websockets/jsr/FrameHandler$HandlerWrapper
      13: areturn

  protected long getMaxTextBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #119                // Method io/undertow/websockets/jsr/UndertowSession.getMaxTextMessageBufferSize:()I
       7: i2l
       8: lreturn

  protected long getMaxBinaryBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: invokevirtual #44                 // Method io/undertow/websockets/jsr/UndertowSession.getMaxBinaryMessageBufferSize:()I
       7: i2l
       8: lreturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #14                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  io.undertow.websockets.jsr.UndertowSession getSession();
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/undertow/websockets/jsr/UndertowSession;
       4: areturn

  jakarta.websocket.Endpoint getEndpoint();
    Code:
       0: aload_0
       1: getfield      #6                  // Field endpoint:Ljakarta/websocket/Endpoint;
       4: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #120                // Field EMPTY:[B
       6: return
}
