Compiled from "WebSocket13ClientHandshake.java"
public class io.undertow.websockets.client.WebSocket13ClientHandshake extends io.undertow.websockets.client.WebSocketClientHandshake {
  public static final java.lang.String MAGIC_NUMBER;

  private final io.undertow.websockets.client.WebSocketClientNegotiation negotiation;

  private final java.util.Set<io.undertow.websockets.extensions.ExtensionHandshake> extensions;

  private static final java.security.SecureRandom random;

  public io.undertow.websockets.client.WebSocket13ClientHandshake(java.net.URI, io.undertow.websockets.client.WebSocketClientNegotiation, java.util.Set<io.undertow.websockets.extensions.ExtensionHandshake>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/undertow/websockets/client/WebSocketClientHandshake."<init>":(Ljava/net/URI;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
      10: aload_0
      11: aload_3
      12: ifnonnull     21
      15: invokestatic  #3                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      18: goto          22
      21: aload_3
      22: putfield      #4                  // Field extensions:Ljava/util/Set;
      25: return

  public io.undertow.websockets.client.WebSocket13ClientHandshake(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #5                  // Method "<init>":(Ljava/net/URI;Lio/undertow/websockets/client/WebSocketClientNegotiation;Ljava/util/Set;)V
       7: return

  public io.undertow.websockets.core.WebSocketChannel createChannel(org.xnio.StreamConnection, java.lang.String, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
       4: ifnull        216
       7: aload_0
       8: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
      11: invokevirtual #6                  // Method io/undertow/websockets/client/WebSocketClientNegotiation.getSelectedExtensions:()Ljava/util/List;
      14: ifnull        216
      17: aload_0
      18: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
      21: invokevirtual #6                  // Method io/undertow/websockets/client/WebSocketClientNegotiation.getSelectedExtensions:()Ljava/util/List;
      24: invokeinterface #7,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      29: ifne          216
      32: aload_0
      33: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
      36: invokevirtual #6                  // Method io/undertow/websockets/client/WebSocketClientNegotiation.getSelectedExtensions:()Ljava/util/List;
      39: astore        5
      41: new           #8                  // class java/util/ArrayList
      44: dup
      45: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      48: astore        6
      50: aload         5
      52: ifnull        168
      55: aload         5
      57: invokeinterface #7,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      62: ifne          168
      65: aload         5
      67: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      72: astore        7
      74: aload         7
      76: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          168
      84: aload         7
      86: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #13                 // class io/undertow/websockets/WebSocketExtension
      94: astore        8
      96: aload_0
      97: getfield      #4                  // Field extensions:Ljava/util/Set;
     100: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     105: astore        9
     107: aload         9
     109: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     114: ifeq          165
     117: aload         9
     119: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     124: checkcast     #15                 // class io/undertow/websockets/extensions/ExtensionHandshake
     127: astore        10
     129: aload         8
     131: invokevirtual #16                 // Method io/undertow/websockets/WebSocketExtension.getName:()Ljava/lang/String;
     134: aload         10
     136: invokeinterface #17,  1           // InterfaceMethod io/undertow/websockets/extensions/ExtensionHandshake.getName:()Ljava/lang/String;
     141: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     144: ifeq          162
     147: aload         6
     149: aload         10
     151: invokeinterface #19,  1           // InterfaceMethod io/undertow/websockets/extensions/ExtensionHandshake.create:()Lio/undertow/websockets/extensions/ExtensionFunction;
     156: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     161: pop
     162: goto          107
     165: goto          74
     168: new           #21                 // class io/undertow/websockets/core/protocol/version13/WebSocket13Channel
     171: dup
     172: aload_1
     173: aload_3
     174: aload_2
     175: aload_0
     176: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
     179: invokevirtual #22                 // Method io/undertow/websockets/client/WebSocketClientNegotiation.getSelectedSubProtocol:()Ljava/lang/String;
     182: iconst_1
     183: aload         6
     185: invokeinterface #7,  1            // InterfaceMethod java/util/List.isEmpty:()Z
     190: ifne          197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload         6
     200: invokestatic  #23                 // Method io/undertow/websockets/extensions/CompositeExtensionFunction.compose:(Ljava/util/List;)Lio/undertow/websockets/extensions/ExtensionFunction;
     203: new           #24                 // class java/util/HashSet
     206: dup
     207: invokespecial #25                 // Method java/util/HashSet."<init>":()V
     210: aload         4
     212: invokespecial #26                 // Method io/undertow/websockets/core/protocol/version13/WebSocket13Channel."<init>":(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Ljava/lang/String;Ljava/lang/String;ZZLio/undertow/websockets/extensions/ExtensionFunction;Ljava/util/Set;Lorg/xnio/OptionMap;)V
     215: areturn
     216: new           #21                 // class io/undertow/websockets/core/protocol/version13/WebSocket13Channel
     219: dup
     220: aload_1
     221: aload_3
     222: aload_2
     223: aload_0
     224: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
     227: ifnull        240
     230: aload_0
     231: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
     234: invokevirtual #22                 // Method io/undertow/websockets/client/WebSocketClientNegotiation.getSelectedSubProtocol:()Ljava/lang/String;
     237: goto          242
     240: ldc           #27                 // String
     242: iconst_1
     243: iconst_0
     244: getstatic     #28                 // Field io/undertow/websockets/extensions/NoopExtensionFunction.INSTANCE:Lio/undertow/websockets/extensions/ExtensionFunction;
     247: new           #24                 // class java/util/HashSet
     250: dup
     251: invokespecial #25                 // Method java/util/HashSet."<init>":()V
     254: aload         4
     256: invokespecial #26                 // Method io/undertow/websockets/core/protocol/version13/WebSocket13Channel."<init>":(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Ljava/lang/String;Ljava/lang/String;ZZLio/undertow/websockets/extensions/ExtensionFunction;Ljava/util/Set;Lorg/xnio/OptionMap;)V
     259: areturn

  public java.util.Map<java.lang.String, java.lang.String> createHeaders();
    Code:
       0: new           #29                 // class java/util/HashMap
       3: dup
       4: invokespecial #30                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #32                 // String Upgrade
      11: ldc           #33                 // String websocket
      13: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: ldc           #35                 // String Connection
      22: ldc           #36                 // String upgrade
      24: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: invokevirtual #37                 // Method createSecKey:()Ljava/lang/String;
      34: astore_2
      35: aload_1
      36: ldc           #38                 // String Sec-WebSocket-Key
      38: aload_2
      39: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: aload_1
      46: ldc           #39                 // String Sec-WebSocket-Version
      48: aload_0
      49: invokevirtual #40                 // Method getVersion:()Lio/undertow/websockets/core/WebSocketVersion;
      52: invokevirtual #41                 // Method io/undertow/websockets/core/WebSocketVersion.toHttpHeaderValue:()Ljava/lang/String;
      55: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: aload_0
      62: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
      65: ifnull        371
      68: aload_0
      69: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
      72: invokevirtual #42                 // Method io/undertow/websockets/client/WebSocketClientNegotiation.getSupportedSubProtocols:()Ljava/util/List;
      75: astore_3
      76: aload_3
      77: ifnull        167
      80: aload_3
      81: invokeinterface #7,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      86: ifne          167
      89: new           #43                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      96: astore        4
      98: aload_3
      99: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     104: astore        5
     106: aload         5
     108: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          153
     116: aload         4
     118: aload         5
     120: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     125: checkcast     #45                 // class java/lang/String
     128: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload         5
     134: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     139: ifeq          106
     142: aload         4
     144: ldc           #47                 // String ,
     146: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: pop
     150: goto          106
     153: aload_1
     154: ldc           #48                 // String Sec-WebSocket-Protocol
     156: aload         4
     158: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     161: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     166: pop
     167: aload_0
     168: getfield      #2                  // Field negotiation:Lio/undertow/websockets/client/WebSocketClientNegotiation;
     171: invokevirtual #50                 // Method io/undertow/websockets/client/WebSocketClientNegotiation.getSupportedExtensions:()Ljava/util/List;
     174: astore        4
     176: aload         4
     178: ifnull        371
     181: aload         4
     183: invokeinterface #7,  1            // InterfaceMethod java/util/List.isEmpty:()Z
     188: ifne          371
     191: new           #43                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     198: astore        5
     200: aload         4
     202: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     207: astore        6
     209: aload         6
     211: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     216: ifeq          357
     219: aload         6
     221: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     226: checkcast     #13                 // class io/undertow/websockets/WebSocketExtension
     229: astore        7
     231: aload         5
     233: aload         7
     235: invokevirtual #16                 // Method io/undertow/websockets/WebSocketExtension.getName:()Ljava/lang/String;
     238: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     241: pop
     242: aload         7
     244: invokevirtual #51                 // Method io/undertow/websockets/WebSocketExtension.getParameters:()Ljava/util/List;
     247: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     252: astore        8
     254: aload         8
     256: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     261: ifeq          336
     264: aload         8
     266: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     271: checkcast     #52                 // class io/undertow/websockets/WebSocketExtension$Parameter
     274: astore        9
     276: aload         5
     278: ldc           #53                 // String ;
     280: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     283: pop
     284: aload         5
     286: aload         9
     288: invokevirtual #54                 // Method io/undertow/websockets/WebSocketExtension$Parameter.getName:()Ljava/lang/String;
     291: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: pop
     295: aload         9
     297: invokevirtual #55                 // Method io/undertow/websockets/WebSocketExtension$Parameter.getValue:()Ljava/lang/String;
     300: ifnull        333
     303: aload         9
     305: invokevirtual #55                 // Method io/undertow/websockets/WebSocketExtension$Parameter.getValue:()Ljava/lang/String;
     308: invokevirtual #56                 // Method java/lang/String.length:()I
     311: ifle          333
     314: aload         5
     316: ldc           #57                 // String =
     318: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     321: pop
     322: aload         5
     324: aload         9
     326: invokevirtual #55                 // Method io/undertow/websockets/WebSocketExtension$Parameter.getValue:()Ljava/lang/String;
     329: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     332: pop
     333: goto          254
     336: aload         6
     338: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     343: ifeq          354
     346: aload         5
     348: ldc           #47                 // String ,
     350: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     353: pop
     354: goto          209
     357: aload_1
     358: ldc           #58                 // String Sec-WebSocket-Extensions
     360: aload         5
     362: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     365: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     370: pop
     371: aload_1
     372: areturn

  protected java.lang.String createSecKey();
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: iconst_4
       9: if_icmpge     80
      12: getstatic     #59                 // Field random:Ljava/security/SecureRandom;
      15: invokevirtual #60                 // Method java/security/SecureRandom.nextInt:()I
      18: istore_3
      19: aload_1
      20: iload_2
      21: iconst_4
      22: imul
      23: iload_3
      24: i2b
      25: bastore
      26: aload_1
      27: iload_2
      28: iconst_4
      29: imul
      30: iconst_1
      31: iadd
      32: iload_3
      33: bipush        8
      35: ishr
      36: sipush        255
      39: iand
      40: i2b
      41: bastore
      42: aload_1
      43: iload_2
      44: iconst_4
      45: imul
      46: iconst_2
      47: iadd
      48: iload_3
      49: bipush        16
      51: ishr
      52: sipush        255
      55: iand
      56: i2b
      57: bastore
      58: aload_1
      59: iload_2
      60: iconst_4
      61: imul
      62: iconst_3
      63: iadd
      64: iload_3
      65: bipush        24
      67: ishr
      68: sipush        255
      71: iand
      72: i2b
      73: bastore
      74: iinc          2, 1
      77: goto          7
      80: aload_1
      81: iconst_0
      82: invokestatic  #61                 // Method io/undertow/util/FlexBase64.encodeString:([BZ)Ljava/lang/String;
      85: areturn

  public org.xnio.http.ExtendedHandshakeChecker handshakeChecker(java.net.URI, java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_2
       1: ldc           #38                 // String Sec-WebSocket-Key
       3: invokeinterface #62,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       8: ifeq          34
      11: aload_2
      12: ldc           #38                 // String Sec-WebSocket-Key
      14: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #64                 // class java/util/List
      22: iconst_0
      23: invokeinterface #65,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: checkcast     #45                 // class java/lang/String
      31: goto          35
      34: aconst_null
      35: astore_3
      36: new           #66                 // class io/undertow/websockets/client/WebSocket13ClientHandshake$1
      39: dup
      40: aload_0
      41: aload_3
      42: invokespecial #67                 // Method io/undertow/websockets/client/WebSocket13ClientHandshake$1."<init>":(Lio/undertow/websockets/client/WebSocket13ClientHandshake;Ljava/lang/String;)V
      45: areturn

  private java.lang.String getFirst(java.lang.String, java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_2
       1: aload_1
       2: getstatic     #68                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       5: invokevirtual #69                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
       8: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #64                 // class java/util/List
      16: astore_3
      17: aload_3
      18: ifnull        30
      21: aload_3
      22: invokeinterface #7,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      27: ifeq          32
      30: aconst_null
      31: areturn
      32: aload_3
      33: iconst_0
      34: invokeinterface #65,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      39: checkcast     #45                 // class java/lang/String
      42: areturn

  protected final java.lang.String solve(java.lang.String);
    Code:
       0: aload_1
       1: invokedynamic #70,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: ldc           #71                 // String SHA1
       9: invokestatic  #72                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      12: astore_3
      13: aload_3
      14: aload_2
      15: getstatic     #73                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      18: invokevirtual #74                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      21: invokevirtual #75                 // Method java/security/MessageDigest.update:([B)V
      24: aload_3
      25: invokevirtual #76                 // Method java/security/MessageDigest.digest:()[B
      28: astore        4
      30: aload         4
      32: iconst_0
      33: invokestatic  #61                 // Method io/undertow/util/FlexBase64.encodeString:([BZ)Ljava/lang/String;
      36: areturn
      37: astore_2
      38: new           #78                 // class java/lang/RuntimeException
      41: dup
      42: aload_2
      43: invokespecial #79                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      46: athrow
    Exception table:
       from    to  target type
           0    36    37   Class java/security/NoSuchAlgorithmException

  public io.undertow.websockets.core.WebSocketVersion getVersion();
    Code:
       0: getstatic     #80                 // Field io/undertow/websockets/core/WebSocketVersion.V13:Lio/undertow/websockets/core/WebSocketVersion;
       3: areturn

  static {};
    Code:
       0: new           #81                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #82                 // Method java/security/SecureRandom."<init>":()V
       7: putstatic     #59                 // Field random:Ljava/security/SecureRandom;
      10: return
}
