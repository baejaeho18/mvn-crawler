Compiled from "BufferedBinaryMessage.java"
public class io.undertow.websockets.core.BufferedBinaryMessage {
  private final boolean bufferFullMessage;

  private java.util.List<io.undertow.connector.PooledByteBuffer> data;

  private io.undertow.connector.PooledByteBuffer current;

  private final long maxMessageSize;

  private long currentSize;

  private boolean complete;

  public io.undertow.websockets.core.BufferedBinaryMessage(long, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #4                  // Field data:Ljava/util/List;
      16: aload_0
      17: iload_3
      18: putfield      #5                  // Field bufferFullMessage:Z
      21: aload_0
      22: lload_1
      23: putfield      #6                  // Field maxMessageSize:J
      26: return

  public io.undertow.websockets.core.BufferedBinaryMessage(boolean);
    Code:
       0: aload_0
       1: ldc2_w        #7                  // long -1l
       4: iload_1
       5: invokespecial #9                  // Method "<init>":(JZ)V
       8: return

  public void readBlocking(io.undertow.websockets.core.StreamSourceFrameChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     23
       7: aload_0
       8: aload_1
       9: invokevirtual #11                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      12: invokevirtual #12                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      15: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      20: putfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      23: aload_1
      24: aload_0
      25: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      28: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      33: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.read:(Ljava/nio/ByteBuffer;)I
      36: istore_2
      37: iload_2
      38: iconst_m1
      39: if_icmpne     48
      42: aload_0
      43: iconst_1
      44: putfield      #16                 // Field complete:Z
      47: return
      48: iload_2
      49: ifne          56
      52: aload_1
      53: invokevirtual #17                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.awaitReadable:()V
      56: aload_0
      57: aload_1
      58: iload_2
      59: invokevirtual #18                 // Method checkMaxSize:(Lio/undertow/websockets/core/StreamSourceFrameChannel;I)V
      62: aload_0
      63: getfield      #5                  // Field bufferFullMessage:Z
      66: ifeq          77
      69: aload_0
      70: aload_1
      71: invokevirtual #19                 // Method dealWithFullBuffer:(Lio/undertow/websockets/core/StreamSourceFrameChannel;)V
      74: goto          93
      77: aload_0
      78: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      81: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      86: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      89: ifne          93
      92: return
      93: goto          23

  private void dealWithFullBuffer(io.undertow.websockets.core.StreamSourceFrameChannel);
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
       4: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       9: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      12: ifne          58
      15: aload_0
      16: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      19: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      24: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      27: pop
      28: aload_0
      29: getfield      #4                  // Field data:Ljava/util/List;
      32: aload_0
      33: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      36: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_0
      43: aload_1
      44: invokevirtual #11                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      47: invokevirtual #12                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      50: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      55: putfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      58: return

  public void read(io.undertow.websockets.core.StreamSourceFrameChannel, io.undertow.websockets.core.WebSocketCallback<io.undertow.websockets.core.BufferedBinaryMessage>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     23
       7: aload_0
       8: aload_1
       9: invokevirtual #11                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      12: invokevirtual #12                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      15: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      20: putfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      23: aload_1
      24: aload_0
      25: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      28: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      33: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.read:(Ljava/nio/ByteBuffer;)I
      36: istore_3
      37: iload_3
      38: iconst_m1
      39: if_icmpne     59
      42: aload_0
      43: iconst_1
      44: putfield      #16                 // Field complete:Z
      47: aload_2
      48: aload_1
      49: invokevirtual #11                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      52: aload_0
      53: invokeinterface #23,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.complete:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;)V
      58: return
      59: iload_3
      60: ifne          104
      63: aload_0
      64: getfield      #5                  // Field bufferFullMessage:Z
      67: ifne          81
      70: aload_2
      71: aload_1
      72: invokevirtual #11                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      75: aload_0
      76: invokeinterface #23,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.complete:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;)V
      81: aload_1
      82: invokevirtual #24                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      85: new           #25                 // class io/undertow/websockets/core/BufferedBinaryMessage$1
      88: dup
      89: aload_0
      90: aload_2
      91: invokespecial #26                 // Method io/undertow/websockets/core/BufferedBinaryMessage$1."<init>":(Lio/undertow/websockets/core/BufferedBinaryMessage;Lio/undertow/websockets/core/WebSocketCallback;)V
      94: invokeinterface #27,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      99: aload_1
     100: invokevirtual #28                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.resumeReads:()V
     103: return
     104: aload_0
     105: aload_1
     106: iload_3
     107: invokevirtual #18                 // Method checkMaxSize:(Lio/undertow/websockets/core/StreamSourceFrameChannel;I)V
     110: aload_0
     111: getfield      #5                  // Field bufferFullMessage:Z
     114: ifeq          125
     117: aload_0
     118: aload_1
     119: invokevirtual #19                 // Method dealWithFullBuffer:(Lio/undertow/websockets/core/StreamSourceFrameChannel;)V
     122: goto          151
     125: aload_0
     126: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
     129: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     134: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     137: ifne          151
     140: aload_2
     141: aload_1
     142: invokevirtual #11                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     145: aload_0
     146: invokeinterface #23,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.complete:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;)V
     151: goto          0
     154: astore_3
     155: aload_2
     156: aload_1
     157: invokevirtual #11                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     160: aload_0
     161: aload_3
     162: invokeinterface #30,  4           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.onError:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;Ljava/lang/Throwable;)V
     167: return
    Exception table:
       from    to  target type
           0    58   154   Class java/io/IOException
          59   103   154   Class java/io/IOException
         104   154   154   Class java/io/IOException

  private void checkMaxSize(io.undertow.websockets.core.StreamSourceFrameChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #31                 // Field currentSize:J
       5: iload_2
       6: i2l
       7: ladd
       8: putfield      #31                 // Field currentSize:J
      11: aload_0
      12: getfield      #6                  // Field maxMessageSize:J
      15: lconst_0
      16: lcmp
      17: ifle          91
      20: aload_0
      21: getfield      #31                 // Field currentSize:J
      24: aload_0
      25: getfield      #6                  // Field maxMessageSize:J
      28: lcmp
      29: ifle          91
      32: aload_0
      33: invokevirtual #32                 // Method getData:()Lorg/xnio/Pooled;
      36: invokeinterface #33,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      41: new           #34                 // class io/undertow/websockets/core/CloseMessage
      44: dup
      45: sipush        1009
      48: getstatic     #35                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
      51: aload_0
      52: getfield      #6                  // Field maxMessageSize:J
      55: invokeinterface #36,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.messageToBig:(J)Ljava/lang/String;
      60: invokespecial #37                 // Method io/undertow/websockets/core/CloseMessage."<init>":(ILjava/lang/String;)V
      63: aload_1
      64: invokevirtual #11                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      67: aconst_null
      68: invokestatic  #38                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Lio/undertow/websockets/core/CloseMessage;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      71: new           #29                 // class java/io/IOException
      74: dup
      75: getstatic     #35                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
      78: aload_0
      79: getfield      #6                  // Field maxMessageSize:J
      82: invokeinterface #36,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.messageToBig:(J)Ljava/lang/String;
      87: invokespecial #39                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: return

  public org.xnio.Pooled<java.nio.ByteBuffer[]> getData();
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     19
       7: new           #40                 // class io/undertow/util/ImmediatePooled
      10: dup
      11: iconst_0
      12: anewarray     #41                 // class java/nio/ByteBuffer
      15: invokespecial #42                 // Method io/undertow/util/ImmediatePooled."<init>":(Ljava/lang/Object;)V
      18: areturn
      19: aload_0
      20: getfield      #4                  // Field data:Ljava/util/List;
      23: invokeinterface #43,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      28: ifeq          78
      31: aload_0
      32: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      35: astore_1
      36: aload_1
      37: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      42: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      45: pop
      46: aload_0
      47: aconst_null
      48: putfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      51: iconst_1
      52: anewarray     #41                 // class java/nio/ByteBuffer
      55: dup
      56: iconst_0
      57: aload_1
      58: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      63: aastore
      64: astore_2
      65: new           #44                 // class io/undertow/websockets/core/BufferedBinaryMessage$PooledByteBufferArray
      68: dup
      69: aload_1
      70: invokestatic  #45                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      73: aload_2
      74: invokespecial #46                 // Method io/undertow/websockets/core/BufferedBinaryMessage$PooledByteBufferArray."<init>":(Ljava/util/List;[Ljava/nio/ByteBuffer;)V
      77: areturn
      78: aload_0
      79: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      82: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      87: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      90: pop
      91: aload_0
      92: getfield      #4                  // Field data:Ljava/util/List;
      95: aload_0
      96: getfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
      99: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     104: pop
     105: aload_0
     106: aconst_null
     107: putfield      #10                 // Field current:Lio/undertow/connector/PooledByteBuffer;
     110: aload_0
     111: getfield      #4                  // Field data:Ljava/util/List;
     114: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
     119: anewarray     #41                 // class java/nio/ByteBuffer
     122: astore_1
     123: iconst_0
     124: istore_2
     125: iload_2
     126: aload_0
     127: getfield      #4                  // Field data:Ljava/util/List;
     130: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
     135: if_icmpge     165
     138: aload_1
     139: iload_2
     140: aload_0
     141: getfield      #4                  // Field data:Ljava/util/List;
     144: iload_2
     145: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     150: checkcast     #49                 // class io/undertow/connector/PooledByteBuffer
     153: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     158: aastore
     159: iinc          2, 1
     162: goto          125
     165: aload_0
     166: getfield      #4                  // Field data:Ljava/util/List;
     169: astore_2
     170: aload_0
     171: new           #2                  // class java/util/ArrayList
     174: dup
     175: invokespecial #50                 // Method java/util/ArrayList."<init>":()V
     178: putfield      #4                  // Field data:Ljava/util/List;
     181: new           #44                 // class io/undertow/websockets/core/BufferedBinaryMessage$PooledByteBufferArray
     184: dup
     185: aload_2
     186: aload_1
     187: invokespecial #46                 // Method io/undertow/websockets/core/BufferedBinaryMessage$PooledByteBufferArray."<init>":(Ljava/util/List;[Ljava/nio/ByteBuffer;)V
     190: areturn

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #16                 // Field complete:Z
       4: ireturn
}
