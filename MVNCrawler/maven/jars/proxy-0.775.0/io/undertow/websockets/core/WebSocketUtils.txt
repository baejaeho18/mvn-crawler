Compiled from "WebSocketUtils.java"
public final class io.undertow.websockets.core.WebSocketUtils {
  private static final java.lang.String EMPTY;

  public static java.nio.ByteBuffer fromUtf8String(java.lang.CharSequence);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #1,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      10: ifne          17
      13: getstatic     #2                  // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
      16: areturn
      17: aload_0
      18: invokeinterface #3,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      23: getstatic     #4                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      26: invokevirtual #5                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      29: invokestatic  #6                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      32: areturn

  public static java.lang.String toUtf8String(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          10
       7: ldc           #9                  // String
       9: areturn
      10: aload_0
      11: invokevirtual #10                 // Method java/nio/ByteBuffer.hasArray:()Z
      14: ifeq          45
      17: new           #11                 // class java/lang/String
      20: dup
      21: aload_0
      22: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      25: aload_0
      26: invokevirtual #13                 // Method java/nio/ByteBuffer.arrayOffset:()I
      29: aload_0
      30: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
      33: iadd
      34: aload_0
      35: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      38: getstatic     #4                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      41: invokespecial #16                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      44: areturn
      45: aload_0
      46: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      49: newarray       byte
      51: astore_1
      52: aload_0
      53: aload_1
      54: invokevirtual #17                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      57: pop
      58: new           #11                 // class java/lang/String
      61: dup
      62: aload_1
      63: getstatic     #4                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      66: invokespecial #18                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      69: areturn

  public static java.lang.String toUtf8String(java.nio.ByteBuffer...);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: astore_2
       4: aload_2
       5: arraylength
       6: istore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iload_3
      13: if_icmpge     36
      16: aload_2
      17: iload         4
      19: aaload
      20: astore        5
      22: iload_1
      23: aload         5
      25: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      28: iadd
      29: istore_1
      30: iinc          4, 1
      33: goto          10
      36: iload_1
      37: ifne          43
      40: ldc           #9                  // String
      42: areturn
      43: iconst_0
      44: istore_2
      45: iload_1
      46: newarray       byte
      48: astore_3
      49: aload_0
      50: astore        4
      52: aload         4
      54: arraylength
      55: istore        5
      57: iconst_0
      58: istore        6
      60: iload         6
      62: iload         5
      64: if_icmpge     148
      67: aload         4
      69: iload         6
      71: aaload
      72: astore        7
      74: aload         7
      76: invokevirtual #10                 // Method java/nio/ByteBuffer.hasArray:()Z
      79: ifeq          120
      82: aload         7
      84: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      87: istore        8
      89: aload         7
      91: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      94: aload         7
      96: invokevirtual #13                 // Method java/nio/ByteBuffer.arrayOffset:()I
      99: aload         7
     101: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
     104: iadd
     105: aload_3
     106: iload_2
     107: iload         8
     109: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     112: iload_2
     113: iload         8
     115: iadd
     116: istore_2
     117: goto          142
     120: aload         7
     122: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
     125: istore        8
     127: aload         7
     129: aload_3
     130: iload_2
     131: iload         8
     133: invokevirtual #20                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     136: pop
     137: iload_2
     138: iload         8
     140: iadd
     141: istore_2
     142: iinc          6, 1
     145: goto          60
     148: new           #11                 // class java/lang/String
     151: dup
     152: aload_3
     153: getstatic     #4                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     156: invokespecial #18                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     159: areturn

  public static long transfer(java.nio.channels.ReadableByteChannel, long, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore        5
       3: lload         5
       5: lload_1
       6: lcmp
       7: ifge          135
      10: aload_3
      11: invokevirtual #21                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      14: pop
      15: lload_1
      16: lload         5
      18: lsub
      19: aload_3
      20: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      23: i2l
      24: lcmp
      25: ifge          38
      28: aload_3
      29: lload_1
      30: lload         5
      32: lsub
      33: l2i
      34: invokevirtual #22                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
      37: pop
      38: aload_0
      39: aload_3
      40: invokeinterface #23,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      45: i2l
      46: lstore        7
      48: lload         7
      50: lconst_0
      51: lcmp
      52: ifgt          79
      55: lload         5
      57: lconst_0
      58: lcmp
      59: ifne          67
      62: lload         7
      64: goto          69
      67: lload         5
      69: lstore        9
      71: aload_3
      72: invokevirtual #24                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      75: pop
      76: lload         9
      78: lreturn
      79: aload_3
      80: invokevirtual #24                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      83: pop
      84: goto          97
      87: astore        11
      89: aload_3
      90: invokevirtual #24                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      93: pop
      94: aload         11
      96: athrow
      97: aload_3
      98: invokevirtual #7                  // Method java/nio/ByteBuffer.hasRemaining:()Z
     101: ifeq          3
     104: aload         4
     106: aload_3
     107: invokeinterface #25,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
     112: i2l
     113: lstore        7
     115: lload         7
     117: lconst_0
     118: lcmp
     119: ifgt          125
     122: lload         5
     124: lreturn
     125: lload         5
     127: lload         7
     129: ladd
     130: lstore        5
     132: goto          97
     135: lload         5
     137: lreturn
    Exception table:
       from    to  target type
          38    71    87   any
          87    89    87   any

  public static void echoFrame(io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.StreamSourceFrameChannel) throws java.io.IOException;
    Code:
       0: getstatic     #26                 // Field io/undertow/websockets/core/WebSocketUtils$5.$SwitchMap$io$undertow$websockets$core$WebSocketFrameType:[I
       3: aload_1
       4: invokevirtual #27                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getType:()Lio/undertow/websockets/core/WebSocketFrameType;
       7: invokevirtual #28                 // Method io/undertow/websockets/core/WebSocketFrameType.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 41
               default: 48
          }
      36: aload_1
      37: invokevirtual #29                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.close:()V
      40: return
      41: getstatic     #30                 // Field io/undertow/websockets/core/WebSocketFrameType.PONG:Lio/undertow/websockets/core/WebSocketFrameType;
      44: astore_2
      45: goto          53
      48: aload_1
      49: invokevirtual #27                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getType:()Lio/undertow/websockets/core/WebSocketFrameType;
      52: astore_2
      53: aload_0
      54: aload_2
      55: invokevirtual #31                 // Method io/undertow/websockets/core/WebSocketChannel.send:(Lio/undertow/websockets/core/WebSocketFrameType;)Lio/undertow/websockets/core/StreamSinkFrameChannel;
      58: astore_3
      59: aload_3
      60: aload_1
      61: invokevirtual #32                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getRsv:()I
      64: invokevirtual #33                 // Method io/undertow/websockets/core/StreamSinkFrameChannel.setRsv:(I)V
      67: aload_1
      68: aload_3
      69: new           #34                 // class io/undertow/websockets/core/WebSocketUtils$1
      72: dup
      73: invokespecial #35                 // Method io/undertow/websockets/core/WebSocketUtils$1."<init>":()V
      76: new           #36                 // class io/undertow/websockets/core/WebSocketUtils$2
      79: dup
      80: aload_0
      81: aload_2
      82: invokespecial #37                 // Method io/undertow/websockets/core/WebSocketUtils$2."<init>":(Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketFrameType;)V
      85: new           #38                 // class io/undertow/websockets/core/WebSocketUtils$3
      88: dup
      89: aload_0
      90: invokespecial #39                 // Method io/undertow/websockets/core/WebSocketUtils$3."<init>":(Lio/undertow/websockets/core/WebSocketChannel;)V
      93: new           #40                 // class io/undertow/websockets/core/WebSocketUtils$4
      96: dup
      97: aload_0
      98: invokespecial #41                 // Method io/undertow/websockets/core/WebSocketUtils$4."<init>":(Lio/undertow/websockets/core/WebSocketChannel;)V
     101: aload_0
     102: invokevirtual #42                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
     105: invokestatic  #43                 // Method initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
     108: return

  public static <I extends org.xnio.channels.StreamSourceChannel, O extends org.xnio.channels.StreamSinkChannel> void initiateTransfer(I, O, org.xnio.ChannelListener<? super I>, org.xnio.ChannelListener<? super O>, org.xnio.ChannelExceptionHandler<? super I>, org.xnio.ChannelExceptionHandler<? super O>, io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #44                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
      13: return

  private io.undertow.websockets.core.WebSocketUtils();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method java/lang/Object."<init>":()V
       4: return
}
