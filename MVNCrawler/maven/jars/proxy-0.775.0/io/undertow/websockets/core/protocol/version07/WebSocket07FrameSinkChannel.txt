Compiled from "WebSocket07FrameSinkChannel.java"
public abstract class io.undertow.websockets.core.protocol.version07.WebSocket07FrameSinkChannel extends io.undertow.websockets.core.StreamSinkFrameChannel {
  private final io.undertow.websockets.core.protocol.version07.Masker masker;

  private volatile boolean dataWritten;

  protected final io.undertow.websockets.extensions.ExtensionFunction extensionFunction;

  protected io.undertow.websockets.core.protocol.version07.WebSocket07FrameSinkChannel(io.undertow.websockets.core.protocol.version07.WebSocket07Channel, io.undertow.websockets.core.WebSocketFrameType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method io/undertow/websockets/core/StreamSinkFrameChannel."<init>":(Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketFrameType;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field dataWritten:Z
      11: aload_1
      12: invokevirtual #3                  // Method io/undertow/websockets/core/protocol/version07/WebSocket07Channel.isClient:()Z
      15: ifeq          33
      18: aload_0
      19: new           #4                  // class io/undertow/websockets/core/protocol/version07/Masker
      22: dup
      23: iconst_0
      24: invokespecial #5                  // Method io/undertow/websockets/core/protocol/version07/Masker."<init>":(I)V
      27: putfield      #6                  // Field masker:Lio/undertow/websockets/core/protocol/version07/Masker;
      30: goto          38
      33: aload_0
      34: aconst_null
      35: putfield      #6                  // Field masker:Lio/undertow/websockets/core/protocol/version07/Masker;
      38: aload_1
      39: invokevirtual #7                  // Method io/undertow/websockets/core/protocol/version07/WebSocket07Channel.areExtensionsSupported:()Z
      42: ifeq          84
      45: aload_2
      46: getstatic     #8                  // Field io/undertow/websockets/core/WebSocketFrameType.TEXT:Lio/undertow/websockets/core/WebSocketFrameType;
      49: if_acmpeq     59
      52: aload_2
      53: getstatic     #9                  // Field io/undertow/websockets/core/WebSocketFrameType.BINARY:Lio/undertow/websockets/core/WebSocketFrameType;
      56: if_acmpne     84
      59: aload_0
      60: aload_1
      61: invokevirtual #10                 // Method io/undertow/websockets/core/protocol/version07/WebSocket07Channel.getExtensionFunction:()Lio/undertow/websockets/extensions/ExtensionFunction;
      64: putfield      #11                 // Field extensionFunction:Lio/undertow/websockets/extensions/ExtensionFunction;
      67: aload_0
      68: aload_0
      69: getfield      #11                 // Field extensionFunction:Lio/undertow/websockets/extensions/ExtensionFunction;
      72: iconst_0
      73: invokeinterface #12,  2           // InterfaceMethod io/undertow/websockets/extensions/ExtensionFunction.writeRsv:(I)I
      78: invokevirtual #13                 // Method setRsv:(I)V
      81: goto          96
      84: aload_0
      85: getstatic     #14                 // Field io/undertow/websockets/extensions/NoopExtensionFunction.INSTANCE:Lio/undertow/websockets/extensions/ExtensionFunction;
      88: putfield      #11                 // Field extensionFunction:Lio/undertow/websockets/extensions/ExtensionFunction;
      91: aload_0
      92: iconst_0
      93: invokevirtual #13                 // Method setRsv:(I)V
      96: return

  protected void handleFlushComplete(boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field dataWritten:Z
       5: return

  private byte opCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field dataWritten:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: getstatic     #16                 // Field io/undertow/websockets/core/protocol/version07/WebSocket07FrameSinkChannel$1.$SwitchMap$io$undertow$websockets$core$WebSocketFrameType:[I
      12: aload_0
      13: invokevirtual #17                 // Method getType:()Lio/undertow/websockets/core/WebSocketFrameType;
      16: invokevirtual #18                 // Method io/undertow/websockets/core/WebSocketFrameType.ordinal:()I
      19: iaload
      20: tableswitch   { // 1 to 6
                     1: 60
                     2: 62
                     3: 64
                     4: 66
                     5: 69
                     6: 72
               default: 75
          }
      60: iconst_0
      61: ireturn
      62: iconst_1
      63: ireturn
      64: iconst_2
      65: ireturn
      66: bipush        8
      68: ireturn
      69: bipush        9
      71: ireturn
      72: bipush        10
      74: ireturn
      75: getstatic     #19                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
      78: aload_0
      79: invokevirtual #17                 // Method getType:()Lio/undertow/websockets/core/WebSocketFrameType;
      82: invokeinterface #20,  2           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.unsupportedFrameType:(Lio/undertow/websockets/core/WebSocketFrameType;)Ljava/lang/IllegalArgumentException;
      87: athrow

  protected io.undertow.server.protocol.framed.SendFrameHeader createFrameHeader();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #21                 // Method isFinalFrameQueued:()Z
       6: ifeq          16
       9: iload_1
      10: sipush        128
      13: ior
      14: i2b
      15: istore_1
      16: aload_0
      17: invokevirtual #22                 // Method opCode:()B
      20: istore_2
      21: iload_2
      22: ifne          29
      25: iconst_0
      26: goto          33
      29: aload_0
      30: invokevirtual #23                 // Method getRsv:()I
      33: istore_3
      34: iload_1
      35: iload_3
      36: bipush        7
      38: iand
      39: iconst_4
      40: ishl
      41: ior
      42: i2b
      43: istore_1
      44: iload_1
      45: iload_2
      46: bipush        15
      48: iand
      49: ior
      50: i2b
      51: istore_1
      52: bipush        14
      54: invokestatic  #24                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      57: astore        4
      59: iconst_0
      60: istore        5
      62: aload_0
      63: getfield      #6                  // Field masker:Lio/undertow/websockets/core/protocol/version07/Masker;
      66: ifnull        78
      69: iload         5
      71: sipush        128
      74: ior
      75: i2b
      76: istore        5
      78: aload_0
      79: invokevirtual #25                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      82: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      85: i2l
      86: lstore        6
      88: lload         6
      90: ldc2_w        #27                 // long 125l
      93: lcmp
      94: ifle          114
      97: iload_2
      98: bipush        9
     100: if_icmpne     114
     103: getstatic     #19                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
     106: lload         6
     108: invokeinterface #29,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.invalidPayloadLengthForPing:(J)Ljava/lang/IllegalArgumentException;
     113: athrow
     114: lload         6
     116: ldc2_w        #27                 // long 125l
     119: lcmp
     120: ifgt          151
     123: aload         4
     125: iload_1
     126: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     129: pop
     130: aload         4
     132: lload         6
     134: iload         5
     136: i2l
     137: lor
     138: ldc2_w        #31                 // long 255l
     141: land
     142: l2i
     143: i2b
     144: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     147: pop
     148: goto          248
     151: lload         6
     153: ldc2_w        #33                 // long 65535l
     156: lcmp
     157: ifgt          217
     160: aload         4
     162: iload_1
     163: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     166: pop
     167: aload         4
     169: bipush        126
     171: iload         5
     173: ior
     174: sipush        255
     177: iand
     178: i2b
     179: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     182: pop
     183: aload         4
     185: lload         6
     187: bipush        8
     189: lushr
     190: ldc2_w        #31                 // long 255l
     193: land
     194: l2i
     195: i2b
     196: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     199: pop
     200: aload         4
     202: lload         6
     204: ldc2_w        #31                 // long 255l
     207: land
     208: l2i
     209: i2b
     210: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     213: pop
     214: goto          248
     217: aload         4
     219: iload_1
     220: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     223: pop
     224: aload         4
     226: bipush        127
     228: iload         5
     230: ior
     231: sipush        255
     234: iand
     235: i2b
     236: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     239: pop
     240: aload         4
     242: lload         6
     244: invokevirtual #35                 // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
     247: pop
     248: aload_0
     249: getfield      #6                  // Field masker:Lio/undertow/websockets/core/protocol/version07/Masker;
     252: ifnull        358
     255: invokestatic  #36                 // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
     258: invokevirtual #37                 // Method java/util/concurrent/ThreadLocalRandom.nextInt:()I
     261: istore        8
     263: aload         4
     265: iload         8
     267: bipush        24
     269: ishr
     270: sipush        255
     273: iand
     274: i2b
     275: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     278: pop
     279: aload         4
     281: iload         8
     283: bipush        16
     285: ishr
     286: sipush        255
     289: iand
     290: i2b
     291: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     294: pop
     295: aload         4
     297: iload         8
     299: bipush        8
     301: ishr
     302: sipush        255
     305: iand
     306: i2b
     307: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     310: pop
     311: aload         4
     313: iload         8
     315: sipush        255
     318: iand
     319: i2b
     320: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     323: pop
     324: aload_0
     325: getfield      #6                  // Field masker:Lio/undertow/websockets/core/protocol/version07/Masker;
     328: iload         8
     330: invokevirtual #38                 // Method io/undertow/websockets/core/protocol/version07/Masker.setMaskingKey:(I)V
     333: aload_0
     334: invokevirtual #25                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     337: astore        9
     339: aload_0
     340: getfield      #6                  // Field masker:Lio/undertow/websockets/core/protocol/version07/Masker;
     343: aload         9
     345: aload         9
     347: invokevirtual #39                 // Method java/nio/ByteBuffer.position:()I
     350: aload         9
     352: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
     355: invokevirtual #40                 // Method io/undertow/websockets/core/protocol/version07/Masker.beforeWrite:(Ljava/nio/ByteBuffer;II)V
     358: aload         4
     360: invokevirtual #41                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     363: pop
     364: new           #42                 // class io/undertow/server/protocol/framed/SendFrameHeader
     367: dup
     368: iconst_0
     369: new           #43                 // class io/undertow/util/ImmediatePooledByteBuffer
     372: dup
     373: aload         4
     375: invokespecial #44                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
     378: invokespecial #45                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;)V
     381: areturn

  protected io.undertow.connector.PooledByteBuffer preWriteTransform(io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field extensionFunction:Lio/undertow/websockets/extensions/ExtensionFunction;
       5: aload_1
       6: aload_0
       7: aload_0
       8: invokevirtual #21                 // Method isFinalFrameQueued:()Z
      11: invokeinterface #46,  4           // InterfaceMethod io/undertow/websockets/extensions/ExtensionFunction.transformForWrite:(Lio/undertow/connector/PooledByteBuffer;Lio/undertow/websockets/core/StreamSinkFrameChannel;Z)Lio/undertow/connector/PooledByteBuffer;
      16: invokespecial #47                 // Method io/undertow/websockets/core/StreamSinkFrameChannel.preWriteTransform:(Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
      19: areturn
      20: astore_2
      21: getstatic     #49                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      24: aload_2
      25: invokeinterface #50,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
      30: aload_0
      31: invokevirtual #51                 // Method markBroken:()V
      34: new           #52                 // class java/lang/RuntimeException
      37: dup
      38: aload_2
      39: invokespecial #53                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      42: athrow
    Exception table:
       from    to  target type
           0    19    20   Class java/io/IOException
}
