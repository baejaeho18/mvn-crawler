Compiled from "BufferedTextMessage.java"
public class io.undertow.websockets.core.BufferedTextMessage {
  private final io.undertow.websockets.core.UTF8Output data;

  private final boolean bufferFullMessage;

  private final long maxMessageSize;

  private boolean complete;

  long currentSize;

  public io.undertow.websockets.core.BufferedTextMessage(long, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/websockets/core/UTF8Output
       8: dup
       9: invokespecial #3                  // Method io/undertow/websockets/core/UTF8Output."<init>":()V
      12: putfield      #4                  // Field data:Lio/undertow/websockets/core/UTF8Output;
      15: aload_0
      16: lload_1
      17: putfield      #5                  // Field maxMessageSize:J
      20: aload_0
      21: iload_3
      22: putfield      #6                  // Field bufferFullMessage:Z
      25: return

  public io.undertow.websockets.core.BufferedTextMessage(boolean);
    Code:
       0: aload_0
       1: ldc2_w        #7                  // long -1l
       4: iload_1
       5: invokespecial #9                  // Method "<init>":(JZ)V
       8: return

  private void checkMaxSize(io.undertow.websockets.core.StreamSourceFrameChannel, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifle          15
       4: aload_0
       5: dup
       6: getfield      #10                 // Field currentSize:J
       9: iload_2
      10: i2l
      11: ladd
      12: putfield      #10                 // Field currentSize:J
      15: aload_0
      16: getfield      #5                  // Field maxMessageSize:J
      19: lconst_0
      20: lcmp
      21: ifle          86
      24: aload_0
      25: getfield      #10                 // Field currentSize:J
      28: aload_0
      29: getfield      #5                  // Field maxMessageSize:J
      32: lcmp
      33: ifle          86
      36: new           #11                 // class io/undertow/websockets/core/CloseMessage
      39: dup
      40: sipush        1009
      43: getstatic     #12                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
      46: aload_0
      47: getfield      #5                  // Field maxMessageSize:J
      50: invokeinterface #13,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.messageToBig:(J)Ljava/lang/String;
      55: invokespecial #14                 // Method io/undertow/websockets/core/CloseMessage."<init>":(ILjava/lang/String;)V
      58: aload_1
      59: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      62: aconst_null
      63: invokestatic  #16                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Lio/undertow/websockets/core/CloseMessage;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      66: new           #17                 // class java/io/IOException
      69: dup
      70: getstatic     #12                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
      73: aload_0
      74: getfield      #5                  // Field maxMessageSize:J
      77: invokeinterface #13,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.messageToBig:(J)Ljava/lang/String;
      82: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: return

  public void readBlocking(io.undertow.websockets.core.StreamSourceFrameChannel) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #19                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
       7: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      12: astore_2
      13: aload_2
      14: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      19: astore_3
      20: aload_1
      21: aload_3
      22: invokevirtual #22                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.read:(Ljava/nio/ByteBuffer;)I
      25: istore        4
      27: iload         4
      29: iconst_m1
      30: if_icmpne     65
      33: aload_3
      34: invokevirtual #23                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      37: pop
      38: aload_0
      39: getfield      #4                  // Field data:Lio/undertow/websockets/core/UTF8Output;
      42: iconst_1
      43: anewarray     #24                 // class java/nio/ByteBuffer
      46: dup
      47: iconst_0
      48: aload_3
      49: aastore
      50: invokevirtual #25                 // Method io/undertow/websockets/core/UTF8Output.write:([Ljava/nio/ByteBuffer;)V
      53: aload_0
      54: iconst_1
      55: putfield      #26                 // Field complete:Z
      58: aload_2
      59: invokeinterface #27,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      64: return
      65: iload         4
      67: ifne          74
      70: aload_1
      71: invokevirtual #28                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.awaitReadable:()V
      74: aload_0
      75: aload_1
      76: iload         4
      78: invokevirtual #29                 // Method checkMaxSize:(Lio/undertow/websockets/core/StreamSourceFrameChannel;I)V
      81: aload_3
      82: invokevirtual #30                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      85: ifne          127
      88: aload_3
      89: invokevirtual #23                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      92: pop
      93: aload_0
      94: getfield      #4                  // Field data:Lio/undertow/websockets/core/UTF8Output;
      97: iconst_1
      98: anewarray     #24                 // class java/nio/ByteBuffer
     101: dup
     102: iconst_0
     103: aload_3
     104: aastore
     105: invokevirtual #25                 // Method io/undertow/websockets/core/UTF8Output.write:([Ljava/nio/ByteBuffer;)V
     108: aload_3
     109: invokevirtual #31                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     112: pop
     113: aload_0
     114: getfield      #6                  // Field bufferFullMessage:Z
     117: ifne          127
     120: aload_2
     121: invokeinterface #27,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     126: return
     127: goto          20
     130: astore        5
     132: aload_2
     133: invokeinterface #27,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     138: aload         5
     140: athrow
    Exception table:
       from    to  target type
          20    58   130   any
          65   120   130   any
         127   132   130   any

  public void read(io.undertow.websockets.core.StreamSourceFrameChannel, io.undertow.websockets.core.WebSocketCallback<io.undertow.websockets.core.BufferedTextMessage>);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
       4: invokevirtual #19                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
       7: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      12: astore_3
      13: aload_3
      14: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      19: astore        4
      21: aload_1
      22: aload         4
      24: invokevirtual #22                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.read:(Ljava/nio/ByteBuffer;)I
      27: istore        5
      29: iload         5
      31: iconst_m1
      32: if_icmpne     80
      35: aload_0
      36: iconst_1
      37: putfield      #26                 // Field complete:Z
      40: aload         4
      42: invokevirtual #23                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      45: pop
      46: aload_0
      47: getfield      #4                  // Field data:Lio/undertow/websockets/core/UTF8Output;
      50: iconst_1
      51: anewarray     #24                 // class java/nio/ByteBuffer
      54: dup
      55: iconst_0
      56: aload         4
      58: aastore
      59: invokevirtual #25                 // Method io/undertow/websockets/core/UTF8Output.write:([Ljava/nio/ByteBuffer;)V
      62: aload_2
      63: aload_1
      64: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      67: aload_0
      68: invokeinterface #32,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.complete:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;)V
      73: aload_3
      74: invokeinterface #27,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      79: return
      80: iload         5
      82: ifne          162
      85: aload         4
      87: invokevirtual #23                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      90: pop
      91: aload         4
      93: invokevirtual #30                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      96: ifeq          133
      99: aload_0
     100: getfield      #4                  // Field data:Lio/undertow/websockets/core/UTF8Output;
     103: iconst_1
     104: anewarray     #24                 // class java/nio/ByteBuffer
     107: dup
     108: iconst_0
     109: aload         4
     111: aastore
     112: invokevirtual #25                 // Method io/undertow/websockets/core/UTF8Output.write:([Ljava/nio/ByteBuffer;)V
     115: aload_0
     116: getfield      #6                  // Field bufferFullMessage:Z
     119: ifne          133
     122: aload_2
     123: aload_1
     124: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     127: aload_0
     128: invokeinterface #32,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.complete:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;)V
     133: aload_1
     134: invokevirtual #33                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     137: new           #34                 // class io/undertow/websockets/core/BufferedTextMessage$1
     140: dup
     141: aload_0
     142: aload_2
     143: invokespecial #35                 // Method io/undertow/websockets/core/BufferedTextMessage$1."<init>":(Lio/undertow/websockets/core/BufferedTextMessage;Lio/undertow/websockets/core/WebSocketCallback;)V
     146: invokeinterface #36,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     151: aload_1
     152: invokevirtual #37                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.resumeReads:()V
     155: aload_3
     156: invokeinterface #27,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     161: return
     162: aload_0
     163: aload_1
     164: iload         5
     166: invokevirtual #29                 // Method checkMaxSize:(Lio/undertow/websockets/core/StreamSourceFrameChannel;I)V
     169: aload         4
     171: invokevirtual #30                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     174: ifne          223
     177: aload         4
     179: invokevirtual #23                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     182: pop
     183: aload_0
     184: getfield      #4                  // Field data:Lio/undertow/websockets/core/UTF8Output;
     187: iconst_1
     188: anewarray     #24                 // class java/nio/ByteBuffer
     191: dup
     192: iconst_0
     193: aload         4
     195: aastore
     196: invokevirtual #25                 // Method io/undertow/websockets/core/UTF8Output.write:([Ljava/nio/ByteBuffer;)V
     199: aload         4
     201: invokevirtual #38                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     204: pop
     205: aload_0
     206: getfield      #6                  // Field bufferFullMessage:Z
     209: ifne          223
     212: aload_2
     213: aload_1
     214: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     217: aload_0
     218: invokeinterface #32,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.complete:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;)V
     223: goto          21
     226: astore        5
     228: aload_2
     229: aload_1
     230: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     233: aload_0
     234: aload         5
     236: invokeinterface #39,  4           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.onError:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;Ljava/lang/Throwable;)V
     241: aload_3
     242: invokeinterface #27,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     247: goto          261
     250: astore        6
     252: aload_3
     253: invokeinterface #27,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     258: aload         6
     260: athrow
     261: return
    Exception table:
       from    to  target type
          21    73   226   Class java/io/IOException
          80   155   226   Class java/io/IOException
         162   226   226   Class java/io/IOException
          21    73   250   any
          80   155   250   any
         162   241   250   any
         250   252   250   any

  public java.lang.String getData();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:Lio/undertow/websockets/core/UTF8Output;
       4: invokevirtual #40                 // Method io/undertow/websockets/core/UTF8Output.extract:()Ljava/lang/String;
       7: areturn

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #26                 // Field complete:Z
       4: ireturn
}
