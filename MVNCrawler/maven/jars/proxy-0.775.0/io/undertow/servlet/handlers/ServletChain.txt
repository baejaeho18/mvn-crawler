Compiled from "ServletChain.java"
public class io.undertow.servlet.handlers.ServletChain {
  private final io.undertow.server.HttpHandler handler;

  private final io.undertow.servlet.core.ManagedServlet managedServlet;

  private final java.lang.String servletPath;

  private final java.util.concurrent.Executor executor;

  private final boolean defaultServletMapping;

  private final jakarta.servlet.http.MappingMatch mappingMatch;

  private final java.lang.String pattern;

  private final java.util.Map<jakarta.servlet.DispatcherType, java.util.List<io.undertow.servlet.core.ManagedFilter>> filters;

  public io.undertow.servlet.handlers.ServletChain(io.undertow.server.HttpHandler, io.undertow.servlet.core.ManagedServlet, java.lang.String, boolean, jakarta.servlet.http.MappingMatch, java.lang.String, java.util.Map<jakarta.servlet.DispatcherType, java.util.List<io.undertow.servlet.core.ManagedFilter>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: iconst_1
      13: invokespecial #1                  // Method "<init>":(Lio/undertow/server/HttpHandler;Lio/undertow/servlet/core/ManagedServlet;Ljava/lang/String;ZLjakarta/servlet/http/MappingMatch;Ljava/lang/String;Ljava/util/Map;Z)V
      16: return

  private io.undertow.servlet.handlers.ServletChain(io.undertow.server.HttpHandler, io.undertow.servlet.core.ManagedServlet, java.lang.String, boolean, jakarta.servlet.http.MappingMatch, java.lang.String, java.util.Map<jakarta.servlet.DispatcherType, java.util.List<io.undertow.servlet.core.ManagedFilter>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: iload         8
       6: ifeq          25
       9: aload_0
      10: new           #3                  // class io/undertow/servlet/handlers/ServletChain$1
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #4                  // Method io/undertow/servlet/handlers/ServletChain$1."<init>":(Lio/undertow/servlet/handlers/ServletChain;Lio/undertow/server/HttpHandler;)V
      19: putfield      #5                  // Field handler:Lio/undertow/server/HttpHandler;
      22: goto          30
      25: aload_0
      26: aload_1
      27: putfield      #5                  // Field handler:Lio/undertow/server/HttpHandler;
      30: aload_0
      31: aload_2
      32: putfield      #6                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
      35: aload_0
      36: aload_3
      37: putfield      #7                  // Field servletPath:Ljava/lang/String;
      40: aload_0
      41: iload         4
      43: putfield      #8                  // Field defaultServletMapping:Z
      46: aload_0
      47: aload         5
      49: putfield      #9                  // Field mappingMatch:Ljakarta/servlet/http/MappingMatch;
      52: aload_0
      53: aload         6
      55: putfield      #10                 // Field pattern:Ljava/lang/String;
      58: aload_0
      59: aload_2
      60: invokevirtual #11                 // Method io/undertow/servlet/core/ManagedServlet.getServletInfo:()Lio/undertow/servlet/api/ServletInfo;
      63: invokevirtual #12                 // Method io/undertow/servlet/api/ServletInfo.getExecutor:()Ljava/util/concurrent/Executor;
      66: putfield      #13                 // Field executor:Ljava/util/concurrent/Executor;
      69: aload_0
      70: aload         7
      72: putfield      #14                 // Field filters:Ljava/util/Map;
      75: return

  public io.undertow.servlet.handlers.ServletChain(io.undertow.servlet.handlers.ServletChain, java.lang.String, jakarta.servlet.http.MappingMatch);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method getHandler:()Lio/undertow/server/HttpHandler;
       5: aload_1
       6: invokevirtual #16                 // Method getManagedServlet:()Lio/undertow/servlet/core/ManagedServlet;
       9: aload_1
      10: invokevirtual #17                 // Method getServletPath:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #18                 // Method isDefaultServletMapping:()Z
      17: aload_3
      18: aload_2
      19: aload_1
      20: getfield      #14                 // Field filters:Ljava/util/Map;
      23: iconst_0
      24: invokespecial #1                  // Method "<init>":(Lio/undertow/server/HttpHandler;Lio/undertow/servlet/core/ManagedServlet;Ljava/lang/String;ZLjakarta/servlet/http/MappingMatch;Ljava/lang/String;Ljava/util/Map;Z)V
      27: return

  public io.undertow.server.HttpHandler getHandler();
    Code:
       0: aload_0
       1: getfield      #5                  // Field handler:Lio/undertow/server/HttpHandler;
       4: areturn

  public io.undertow.servlet.core.ManagedServlet getManagedServlet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
       4: areturn

  public java.lang.String getServletPath();
    Code:
       0: aload_0
       1: getfield      #7                  // Field servletPath:Ljava/lang/String;
       4: areturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  public boolean isDefaultServletMapping();
    Code:
       0: aload_0
       1: getfield      #8                  // Field defaultServletMapping:Z
       4: ireturn

  public jakarta.servlet.http.MappingMatch getMappingMatch();
    Code:
       0: aload_0
       1: getfield      #9                  // Field mappingMatch:Ljakarta/servlet/http/MappingMatch;
       4: areturn

  public java.lang.String getPattern();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pattern:Ljava/lang/String;
       4: areturn

  void forceInit(jakarta.servlet.DispatcherType) throws jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field filters:Ljava/util/Map;
       4: ifnull        69
       7: aload_0
       8: getfield      #14                 // Field filters:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #20                 // class java/util/List
      20: astore_2
      21: aload_2
      22: ifnull        69
      25: aload_2
      26: invokeinterface #21,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      31: ifne          69
      34: iconst_0
      35: istore_3
      36: iload_3
      37: aload_2
      38: invokeinterface #22,  1           // InterfaceMethod java/util/List.size:()I
      43: if_icmpge     69
      46: aload_2
      47: iload_3
      48: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      53: checkcast     #24                 // class io/undertow/servlet/core/ManagedFilter
      56: astore        4
      58: aload         4
      60: invokevirtual #25                 // Method io/undertow/servlet/core/ManagedFilter.forceInit:()V
      63: iinc          3, 1
      66: goto          36
      69: aload_0
      70: getfield      #6                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
      73: invokevirtual #26                 // Method io/undertow/servlet/core/ManagedServlet.forceInit:()V
      76: return
}
