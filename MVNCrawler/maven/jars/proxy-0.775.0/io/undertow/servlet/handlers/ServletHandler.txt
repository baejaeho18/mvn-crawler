Compiled from "ServletHandler.java"
public class io.undertow.servlet.handlers.ServletHandler implements io.undertow.server.HttpHandler {
  private final io.undertow.servlet.core.ManagedServlet managedServlet;

  public io.undertow.servlet.handlers.ServletHandler(io.undertow.servlet.core.ManagedServlet);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
       9: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.io.IOException, jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
       4: invokevirtual #3                  // Method io/undertow/servlet/core/ManagedServlet.isPermanentlyUnavailable:()Z
       7: ifeq          39
      10: getstatic     #4                  // Field io/undertow/servlet/UndertowServletLogger.REQUEST_LOGGER:Lio/undertow/servlet/UndertowServletLogger;
      13: ldc           #5                  // String Returning 404 for servlet %s due to permanent unavailability
      15: aload_0
      16: getfield      #2                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
      19: invokevirtual #6                  // Method io/undertow/servlet/core/ManagedServlet.getServletInfo:()Lio/undertow/servlet/api/ServletInfo;
      22: invokevirtual #7                  // Method io/undertow/servlet/api/ServletInfo.getName:()Ljava/lang/String;
      25: invokeinterface #8,  3            // InterfaceMethod io/undertow/servlet/UndertowServletLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      30: aload_1
      31: sipush        404
      34: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      37: pop
      38: return
      39: aload_0
      40: getfield      #2                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
      43: invokevirtual #11                 // Method io/undertow/servlet/core/ManagedServlet.isTemporarilyUnavailable:()Z
      46: ifeq          78
      49: getstatic     #4                  // Field io/undertow/servlet/UndertowServletLogger.REQUEST_LOGGER:Lio/undertow/servlet/UndertowServletLogger;
      52: ldc           #12                 // String Returning 503 for servlet %s due to temporary unavailability
      54: aload_0
      55: getfield      #2                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
      58: invokevirtual #6                  // Method io/undertow/servlet/core/ManagedServlet.getServletInfo:()Lio/undertow/servlet/api/ServletInfo;
      61: invokevirtual #7                  // Method io/undertow/servlet/api/ServletInfo.getName:()Ljava/lang/String;
      64: invokeinterface #8,  3            // InterfaceMethod io/undertow/servlet/UndertowServletLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      69: aload_1
      70: sipush        503
      73: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      76: pop
      77: return
      78: aload_1
      79: getstatic     #13                 // Field io/undertow/servlet/handlers/ServletRequestContext.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
      82: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      85: checkcast     #15                 // class io/undertow/servlet/handlers/ServletRequestContext
      88: astore_2
      89: aload_0
      90: getfield      #2                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
      93: invokevirtual #6                  // Method io/undertow/servlet/core/ManagedServlet.getServletInfo:()Lio/undertow/servlet/api/ServletInfo;
      96: invokevirtual #16                 // Method io/undertow/servlet/api/ServletInfo.isAsyncSupported:()Z
      99: ifne          107
     102: aload_2
     103: iconst_0
     104: invokevirtual #17                 // Method io/undertow/servlet/handlers/ServletRequestContext.setAsyncSupported:(Z)V
     107: aload_2
     108: invokevirtual #18                 // Method io/undertow/servlet/handlers/ServletRequestContext.getServletRequest:()Ljakarta/servlet/ServletRequest;
     111: astore_3
     112: aload_2
     113: invokevirtual #19                 // Method io/undertow/servlet/handlers/ServletRequestContext.getServletResponse:()Ljakarta/servlet/ServletResponse;
     116: astore        4
     118: aconst_null
     119: astore        5
     121: aload_0
     122: getfield      #2                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
     125: invokevirtual #20                 // Method io/undertow/servlet/core/ManagedServlet.getServlet:()Lio/undertow/servlet/api/InstanceHandle;
     128: astore        5
     130: aload         5
     132: invokeinterface #21,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.getInstance:()Ljava/lang/Object;
     137: checkcast     #22                 // class jakarta/servlet/Servlet
     140: aload_3
     141: aload         4
     143: invokeinterface #23,  3           // InterfaceMethod jakarta/servlet/Servlet.service:(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
     148: aload         5
     150: ifnull        233
     153: aload         5
     155: invokeinterface #24,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.release:()V
     160: goto          233
     163: astore        6
     165: aload_0
     166: getfield      #2                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
     169: aload         6
     171: invokevirtual #26                 // Method io/undertow/servlet/core/ManagedServlet.handleUnavailableException:(Ljakarta/servlet/UnavailableException;)V
     174: aload         6
     176: invokevirtual #27                 // Method jakarta/servlet/UnavailableException.isPermanent:()Z
     179: ifeq          193
     182: aload_1
     183: sipush        404
     186: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
     189: pop
     190: goto          201
     193: aload_1
     194: sipush        503
     197: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
     200: pop
     201: aload         5
     203: ifnull        233
     206: aload         5
     208: invokeinterface #24,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.release:()V
     213: goto          233
     216: astore        7
     218: aload         5
     220: ifnull        230
     223: aload         5
     225: invokeinterface #24,  1           // InterfaceMethod io/undertow/servlet/api/InstanceHandle.release:()V
     230: aload         7
     232: athrow
     233: return
    Exception table:
       from    to  target type
         121   148   163   Class jakarta/servlet/UnavailableException
         121   148   216   any
         163   201   216   any
         216   218   216   any

  public io.undertow.servlet.core.ManagedServlet getManagedServlet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedServlet:Lio/undertow/servlet/core/ManagedServlet;
       4: areturn
}
