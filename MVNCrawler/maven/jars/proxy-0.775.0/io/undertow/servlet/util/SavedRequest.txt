Compiled from "SavedRequest.java"
public class io.undertow.servlet.util.SavedRequest implements java.io.Serializable {
  private static final java.lang.String SESSION_KEY;

  private final byte[] data;

  private final int dataLength;

  private final io.undertow.util.HttpString method;

  private final java.lang.String requestPath;

  private final java.util.HashMap<io.undertow.util.HttpString, java.util.List<java.lang.String>> headerMap;

  public io.undertow.servlet.util.SavedRequest(byte[], int, io.undertow.util.HttpString, java.lang.String, io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field headerMap:Ljava/util/HashMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field data:[B
      20: aload_0
      21: iload_2
      22: putfield      #6                  // Field dataLength:I
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field method:Lio/undertow/util/HttpString;
      30: aload_0
      31: aload         4
      33: putfield      #8                  // Field requestPath:Ljava/lang/String;
      36: aload         5
      38: invokevirtual #9                  // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
      41: astore        6
      43: aload         6
      45: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          90
      53: aload         6
      55: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #12                 // class io/undertow/util/HeaderValues
      63: astore        7
      65: aload_0
      66: getfield      #4                  // Field headerMap:Ljava/util/HashMap;
      69: aload         7
      71: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      74: new           #14                 // class java/util/ArrayList
      77: dup
      78: aload         7
      80: invokespecial #15                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      83: invokevirtual #16                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: goto          43
      90: return

  public static int getMaxBufferSizeToSave(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       4: invokevirtual #18                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
       7: getstatic     #19                 // Field io/undertow/UndertowOptions.MAX_BUFFERED_REQUEST_SIZE:Lorg/xnio/Option;
      10: sipush        16384
      13: invokevirtual #21                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      16: istore_1
      17: iload_1
      18: ireturn

  public static void trySaveRequest(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method getMaxBufferSizeToSave:(Lio/undertow/server/HttpServerExchange;)I
       4: istore_1
       5: iload_1
       6: ifle          132
       9: aload_0
      10: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      13: ifne          132
      16: aload_0
      17: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.getRequestContentLength:()J
      20: lstore_2
      21: lload_2
      22: iload_1
      23: i2l
      24: lcmp
      25: ifle          43
      28: getstatic     #25                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      31: ldc           #26                 // String Request to %s was to large to save
      33: aload_0
      34: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      37: invokeinterface #28,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      42: return
      43: iload_1
      44: newarray       byte
      46: astore        4
      48: iconst_0
      49: istore        5
      51: iconst_0
      52: istore        6
      54: aload_0
      55: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.getInputStream:()Ljava/io/InputStream;
      58: astore        7
      60: aload         7
      62: aload         4
      64: iload         5
      66: aload         4
      68: arraylength
      69: iload         5
      71: isub
      72: invokevirtual #30                 // Method java/io/InputStream.read:([BII)I
      75: dup
      76: istore        6
      78: ifle          109
      81: iload         5
      83: iload         6
      85: iadd
      86: istore        5
      88: iload         5
      90: iload_1
      91: if_icmpne     60
      94: getstatic     #25                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      97: ldc           #26                 // String Request to %s was to large to save
      99: aload_0
     100: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
     103: invokeinterface #28,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     108: return
     109: aload_0
     110: aload         4
     112: iload         5
     114: invokestatic  #31                 // Method trySaveRequest:(Lio/undertow/server/HttpServerExchange;[BI)V
     117: goto          132
     120: astore        8
     122: getstatic     #33                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     125: aload         8
     127: invokeinterface #34,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     132: return
    Exception table:
       from    to  target type
          60   108   120   Class java/io/IOException
         109   117   120   Class java/io/IOException

  public static void trySaveRequest(io.undertow.server.HttpServerExchange, byte[], int);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       4: invokevirtual #18                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
       7: getstatic     #19                 // Field io/undertow/UndertowOptions.MAX_BUFFERED_REQUEST_SIZE:Lorg/xnio/Option;
      10: sipush        16384
      13: invokevirtual #21                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      16: istore_3
      17: iload_3
      18: ifle          235
      21: iload_2
      22: iload_3
      23: if_icmple     41
      26: getstatic     #25                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      29: ldc           #26                 // String Request to %s was to large to save
      31: aload_0
      32: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      35: invokeinterface #28,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      40: return
      41: new           #35                 // class io/undertow/util/HeaderMap
      44: dup
      45: invokespecial #36                 // Method io/undertow/util/HeaderMap."<init>":()V
      48: astore        4
      50: aload_0
      51: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      54: invokevirtual #9                  // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
      57: astore        5
      59: aload         5
      61: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          142
      69: aload         5
      71: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #12                 // class io/undertow/util/HeaderValues
      79: astore        6
      81: aload         6
      83: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      86: getstatic     #38                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      89: invokevirtual #39                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      92: ifne          59
      95: aload         6
      97: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     100: getstatic     #40                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     103: invokevirtual #39                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     106: ifne          59
     109: aload         6
     111: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     114: getstatic     #41                 // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     117: invokevirtual #39                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     120: ifeq          126
     123: goto          59
     126: aload         4
     128: aload         6
     130: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     133: aload         6
     135: invokevirtual #42                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
     138: pop
     139: goto          59
     142: new           #43                 // class io/undertow/servlet/util/SavedRequest
     145: dup
     146: aload_1
     147: iload_2
     148: aload_0
     149: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
     152: aload_0
     153: invokevirtual #45                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
     156: aload_0
     157: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     160: invokespecial #46                 // Method "<init>":([BILio/undertow/util/HttpString;Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
     163: astore        5
     165: aload_0
     166: getstatic     #47                 // Field io/undertow/servlet/handlers/ServletRequestContext.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
     169: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     172: checkcast     #49                 // class io/undertow/servlet/handlers/ServletRequestContext
     175: astore        6
     177: aload         6
     179: invokevirtual #50                 // Method io/undertow/servlet/handlers/ServletRequestContext.getCurrentServletContext:()Lio/undertow/servlet/spec/ServletContextImpl;
     182: aload_0
     183: iconst_1
     184: invokevirtual #51                 // Method io/undertow/servlet/spec/ServletContextImpl.getSession:(Lio/undertow/server/HttpServerExchange;Z)Lio/undertow/servlet/spec/HttpSessionImpl;
     187: astore        7
     189: invokestatic  #52                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
     192: ifnonnull     205
     195: aload         7
     197: invokevirtual #53                 // Method io/undertow/servlet/spec/HttpSessionImpl.getSession:()Lio/undertow/server/session/Session;
     200: astore        8
     202: goto          222
     205: new           #54                 // class io/undertow/servlet/spec/HttpSessionImpl$UnwrapSessionAction
     208: dup
     209: aload         7
     211: invokespecial #55                 // Method io/undertow/servlet/spec/HttpSessionImpl$UnwrapSessionAction."<init>":(Ljakarta/servlet/http/HttpSession;)V
     214: invokestatic  #56                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     217: checkcast     #57                 // class io/undertow/server/session/Session
     220: astore        8
     222: aload         8
     224: getstatic     #58                 // Field SESSION_KEY:Ljava/lang/String;
     227: aload         5
     229: invokeinterface #59,  3           // InterfaceMethod io/undertow/server/session/Session.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     234: pop
     235: return

  public static void tryRestoreRequest(io.undertow.server.HttpServerExchange, jakarta.servlet.http.HttpSession);
    Code:
       0: aload_1
       1: instanceof    #60                 // class io/undertow/servlet/spec/HttpSessionImpl
       4: ifeq          262
       7: invokestatic  #52                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      10: ifnonnull     24
      13: aload_1
      14: checkcast     #60                 // class io/undertow/servlet/spec/HttpSessionImpl
      17: invokevirtual #53                 // Method io/undertow/servlet/spec/HttpSessionImpl.getSession:()Lio/undertow/server/session/Session;
      20: astore_2
      21: goto          39
      24: new           #54                 // class io/undertow/servlet/spec/HttpSessionImpl$UnwrapSessionAction
      27: dup
      28: aload_1
      29: invokespecial #55                 // Method io/undertow/servlet/spec/HttpSessionImpl$UnwrapSessionAction."<init>":(Ljakarta/servlet/http/HttpSession;)V
      32: invokestatic  #56                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      35: checkcast     #57                 // class io/undertow/server/session/Session
      38: astore_2
      39: aload_2
      40: getstatic     #58                 // Field SESSION_KEY:Ljava/lang/String;
      43: invokeinterface #61,  2           // InterfaceMethod io/undertow/server/session/Session.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      48: checkcast     #43                 // class io/undertow/servlet/util/SavedRequest
      51: astore_3
      52: aload_3
      53: ifnull        262
      56: aload_3
      57: getfield      #8                  // Field requestPath:Ljava/lang/String;
      60: aload_0
      61: invokevirtual #45                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      64: invokevirtual #62                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          262
      70: aload_0
      71: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      74: ifeq          262
      77: getstatic     #25                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      80: ldc           #63                 // String restoring request body for request to %s
      82: aload_3
      83: getfield      #8                  // Field requestPath:Ljava/lang/String;
      86: invokeinterface #28,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      91: aload_0
      92: aload_3
      93: getfield      #7                  // Field method:Lio/undertow/util/HttpString;
      96: invokevirtual #64                 // Method io/undertow/server/HttpServerExchange.setRequestMethod:(Lio/undertow/util/HttpString;)Lio/undertow/server/HttpServerExchange;
      99: pop
     100: aload_0
     101: iconst_1
     102: anewarray     #65                 // class io/undertow/connector/PooledByteBuffer
     105: dup
     106: iconst_0
     107: new           #66                 // class io/undertow/util/ImmediatePooledByteBuffer
     110: dup
     111: aload_3
     112: getfield      #5                  // Field data:[B
     115: iconst_0
     116: aload_3
     117: getfield      #6                  // Field dataLength:I
     120: invokestatic  #67                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     123: invokespecial #68                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
     126: aastore
     127: invokestatic  #69                 // Method io/undertow/server/Connectors.ungetRequestBytes:(Lio/undertow/server/HttpServerExchange;[Lio/undertow/connector/PooledByteBuffer;)V
     130: aload_2
     131: getstatic     #58                 // Field SESSION_KEY:Ljava/lang/String;
     134: invokeinterface #70,  2           // InterfaceMethod io/undertow/server/session/Session.removeAttribute:(Ljava/lang/String;)Ljava/lang/Object;
     139: pop
     140: aload_0
     141: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     144: invokevirtual #9                  // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
     147: astore        4
     149: aload         4
     151: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     156: ifeq          195
     159: aload         4
     161: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     166: checkcast     #12                 // class io/undertow/util/HeaderValues
     169: astore        5
     171: aload         5
     173: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     176: getstatic     #41                 // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     179: invokevirtual #39                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     182: ifne          192
     185: aload         4
     187: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.remove:()V
     192: goto          149
     195: aload_3
     196: getfield      #4                  // Field headerMap:Ljava/util/HashMap;
     199: invokevirtual #72                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
     202: invokeinterface #73,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     207: astore        5
     209: aload         5
     211: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     216: ifeq          262
     219: aload         5
     221: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     226: checkcast     #74                 // class java/util/Map$Entry
     229: astore        6
     231: aload_0
     232: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     235: aload         6
     237: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     242: checkcast     #76                 // class io/undertow/util/HttpString
     245: aload         6
     247: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     252: checkcast     #78                 // class java/util/Collection
     255: invokevirtual #42                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
     258: pop
     259: goto          209
     262: return

  static {};
    Code:
       0: ldc           #43                 // class io/undertow/servlet/util/SavedRequest
       2: invokevirtual #79                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #58                 // Field SESSION_KEY:Ljava/lang/String;
       8: return
}
