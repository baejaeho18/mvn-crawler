Compiled from "BlockingWriterSenderImpl.java"
public class io.undertow.servlet.core.BlockingWriterSenderImpl implements io.undertow.io.Sender {
  public static final int BUFFER_SIZE;

  private final java.nio.charset.CharsetDecoder charsetDecoder;

  private final io.undertow.server.HttpServerExchange exchange;

  private final java.io.PrintWriter writer;

  private java.nio.channels.FileChannel pendingFile;

  private volatile java.lang.Thread inCall;

  private volatile java.lang.Thread sendThread;

  private java.lang.String next;

  private io.undertow.io.IoCallback queuedCallback;

  public io.undertow.servlet.core.BlockingWriterSenderImpl(io.undertow.server.HttpServerExchange, java.io.PrintWriter, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field writer:Ljava/io/PrintWriter;
      14: aload_0
      15: aload_3
      16: invokestatic  #4                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      19: invokevirtual #5                  // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
      22: putfield      #6                  // Field charsetDecoder:Ljava/nio/charset/CharsetDecoder;
      25: return

  public void send(java.nio.ByteBuffer, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #8                  // Field sendThread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #9                  // Field inCall:Ljava/lang/Thread;
      11: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: if_acmpne     31
      17: aload_0
      18: iconst_1
      19: anewarray     #10                 // class java/nio/ByteBuffer
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: aload_2
      27: invokevirtual #11                 // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      30: return
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokevirtual #12                 // Method writeBuffer:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
      37: ifeq          45
      40: aload_0
      41: aload_2
      42: invokevirtual #13                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      45: return

  public void send(java.nio.ByteBuffer[], io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #8                  // Field sendThread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #9                  // Field inCall:Ljava/lang/Thread;
      11: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: if_acmpne     24
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #11                 // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      23: return
      24: aload_1
      25: astore_3
      26: aload_3
      27: arraylength
      28: istore        4
      30: iconst_0
      31: istore        5
      33: iload         5
      35: iload         4
      37: if_icmpge     63
      40: aload_3
      41: iload         5
      43: aaload
      44: astore        6
      46: aload_0
      47: aload         6
      49: aload_2
      50: invokevirtual #12                 // Method writeBuffer:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
      53: ifne          57
      56: return
      57: iinc          5, 1
      60: goto          33
      63: aload_0
      64: aload_2
      65: invokevirtual #13                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      68: return

  public void send(java.lang.String, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #8                  // Field sendThread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #9                  // Field inCall:Ljava/lang/Thread;
      11: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: if_acmpne     24
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #14                 // Method queue:(Ljava/lang/String;Lio/undertow/io/IoCallback;)V
      23: return
      24: aload_0
      25: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      28: aload_1
      29: invokevirtual #15                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      32: aload_0
      33: aload_2
      34: invokevirtual #13                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      37: return

  public void send(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #17                 // Method send:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.nio.ByteBuffer[]);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #18                 // Method send:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.lang.String, java.nio.charset.Charset, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #8                  // Field sendThread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #9                  // Field inCall:Ljava/lang/Thread;
      11: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: if_acmpne     38
      17: aload_0
      18: iconst_1
      19: anewarray     #10                 // class java/nio/ByteBuffer
      22: dup
      23: iconst_0
      24: aload_1
      25: aload_2
      26: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      29: invokestatic  #20                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      32: aastore
      33: aload_3
      34: invokevirtual #11                 // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      37: return
      38: aload_0
      39: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      42: aload_1
      43: invokevirtual #15                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      46: aload_0
      47: aload_3
      48: invokevirtual #13                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      51: return

  public void send(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #21                 // Method send:(Ljava/lang/String;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       6: invokevirtual #22                 // Method send:(Ljava/lang/String;Ljava/nio/charset/Charset;Lio/undertow/io/IoCallback;)V
       9: return

  public void transferFrom(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #8                  // Field sendThread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #9                  // Field inCall:Ljava/lang/Thread;
      11: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: if_acmpne     24
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #23                 // Method queue:(Ljava/nio/channels/FileChannel;Lio/undertow/io/IoCallback;)V
      23: return
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #24                 // Method performTransfer:(Ljava/nio/channels/FileChannel;Lio/undertow/io/IoCallback;)V
      30: return

  private void performTransfer(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: sipush        128
       3: invokestatic  #26                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       6: astore_3
       7: aload_1
       8: invokevirtual #27                 // Method java/nio/channels/FileChannel.position:()J
      11: lstore        4
      13: aload_1
      14: invokevirtual #28                 // Method java/nio/channels/FileChannel.size:()J
      17: lstore        6
      19: lload         6
      21: lload         4
      23: lsub
      24: lconst_0
      25: lcmp
      26: ifle          75
      29: aload_1
      30: aload_3
      31: invokevirtual #29                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      34: istore        8
      36: iload         8
      38: ifgt          44
      41: goto          75
      44: lload         4
      46: iload         8
      48: i2l
      49: ladd
      50: lstore        4
      52: aload_3
      53: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      56: pop
      57: aload_0
      58: aload_3
      59: aload_2
      60: invokevirtual #12                 // Method writeBuffer:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
      63: ifne          67
      66: return
      67: aload_3
      68: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      71: pop
      72: goto          19
      75: lload         4
      77: lload         6
      79: lcmp
      80: ifeq          93
      83: new           #32                 // class java/io/EOFException
      86: dup
      87: ldc           #33                 // String Unexpected EOF reading file
      89: invokespecial #34                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: goto          111
      96: astore        4
      98: aload_2
      99: aload_0
     100: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     103: aload_0
     104: aload         4
     106: invokeinterface #36,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     111: aload_0
     112: aload_2
     113: invokevirtual #13                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
     116: return
    Exception table:
       from    to  target type
           7    66    96   Class java/io/IOException
          67    93    96   Class java/io/IOException

  public void close(io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
       4: invokevirtual #37                 // Method java/io/PrintWriter.close:()V
       7: aload_0
       8: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      11: invokevirtual #38                 // Method java/io/PrintWriter.checkError:()Z
      14: ifeq          38
      17: aload_1
      18: aload_0
      19: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      22: aload_0
      23: new           #35                 // class java/io/IOException
      26: dup
      27: invokespecial #39                 // Method java/io/IOException."<init>":()V
      30: invokeinterface #36,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      35: goto          43
      38: aload_0
      39: aload_1
      40: invokevirtual #13                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      43: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #40                 // Field io/undertow/servlet/handlers/ServletRequestContext.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #41                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #42                 // class io/undertow/servlet/handlers/ServletRequestContext
      13: invokevirtual #43                 // Method io/undertow/servlet/handlers/ServletRequestContext.getDispatcherType:()Ljakarta/servlet/DispatcherType;
      16: getstatic     #44                 // Field jakarta/servlet/DispatcherType.INCLUDE:Ljakarta/servlet/DispatcherType;
      19: if_acmpeq     29
      22: aload_0
      23: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      26: invokestatic  #45                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      29: aload_0
      30: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      33: invokevirtual #38                 // Method java/io/PrintWriter.checkError:()Z
      36: pop
      37: return

  private boolean writeBuffer(java.nio.ByteBuffer, io.undertow.io.IoCallback);
    Code:
       0: new           #46                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: getfield      #6                  // Field charsetDecoder:Ljava/nio/charset/CharsetDecoder;
      13: aload_1
      14: invokevirtual #48                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      17: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      20: pop
      21: goto          41
      24: astore        4
      26: aload_2
      27: aload_0
      28: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      31: aload_0
      32: aload         4
      34: invokeinterface #36,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      39: iconst_0
      40: ireturn
      41: aload_3
      42: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: astore        4
      47: aload_0
      48: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      51: aload         4
      53: invokevirtual #15                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      56: iconst_1
      57: ireturn
    Exception table:
       from    to  target type
           8    21    24   Class java/nio/charset/CharacterCodingException

  private void invokeOnComplete(io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #8                  // Field sendThread:Ljava/lang/Thread;
       5: aload_0
       6: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: putfield      #9                  // Field inCall:Ljava/lang/Thread;
      12: aload_1
      13: aload_0
      14: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      17: aload_0
      18: invokeinterface #52,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
      23: aload_0
      24: aconst_null
      25: putfield      #9                  // Field inCall:Ljava/lang/Thread;
      28: goto          39
      31: astore_2
      32: aload_0
      33: aconst_null
      34: putfield      #9                  // Field inCall:Ljava/lang/Thread;
      37: aload_2
      38: athrow
      39: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      42: aload_0
      43: getfield      #8                  // Field sendThread:Ljava/lang/Thread;
      46: if_acmpeq     50
      49: return
      50: aload_0
      51: getfield      #53                 // Field next:Ljava/lang/String;
      54: ifnull        171
      57: aload_0
      58: getfield      #53                 // Field next:Ljava/lang/String;
      61: astore_2
      62: aload_0
      63: getfield      #54                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      66: astore_3
      67: aload_0
      68: aconst_null
      69: putfield      #53                 // Field next:Ljava/lang/String;
      72: aload_0
      73: aconst_null
      74: putfield      #54                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      77: aload_0
      78: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      81: aload_2
      82: invokevirtual #15                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      85: aload_0
      86: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      89: invokevirtual #38                 // Method java/io/PrintWriter.checkError:()Z
      92: ifeq          116
      95: aload_3
      96: aload_0
      97: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     100: aload_0
     101: new           #35                 // class java/io/IOException
     104: dup
     105: invokespecial #39                 // Method java/io/IOException."<init>":()V
     108: invokeinterface #36,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     113: goto          168
     116: aload_0
     117: aconst_null
     118: putfield      #8                  // Field sendThread:Ljava/lang/Thread;
     121: aload_0
     122: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     125: putfield      #9                  // Field inCall:Ljava/lang/Thread;
     128: aload_3
     129: aload_0
     130: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     133: aload_0
     134: invokeinterface #52,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
     139: aload_0
     140: aconst_null
     141: putfield      #9                  // Field inCall:Ljava/lang/Thread;
     144: goto          157
     147: astore        4
     149: aload_0
     150: aconst_null
     151: putfield      #9                  // Field inCall:Ljava/lang/Thread;
     154: aload         4
     156: athrow
     157: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     160: aload_0
     161: getfield      #8                  // Field sendThread:Ljava/lang/Thread;
     164: if_acmpeq     168
     167: return
     168: goto          50
     171: return
    Exception table:
       from    to  target type
          12    23    31   any
         128   139   147   any
         147   149   147   any

  private void queue(java.nio.ByteBuffer[], io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #53                 // Field next:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #55                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      11: ifnull        23
      14: getstatic     #56                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      17: invokeinterface #57,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      22: athrow
      23: new           #46                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      30: astore_3
      31: aload_1
      32: astore        4
      34: aload         4
      36: arraylength
      37: istore        5
      39: iconst_0
      40: istore        6
      42: iload         6
      44: iload         5
      46: if_icmpge     95
      49: aload         4
      51: iload         6
      53: aaload
      54: astore        7
      56: aload_3
      57: aload_0
      58: getfield      #6                  // Field charsetDecoder:Ljava/nio/charset/CharsetDecoder;
      61: aload         7
      63: invokevirtual #48                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      66: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      69: pop
      70: goto          89
      73: astore        8
      75: aload_2
      76: aload_0
      77: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      80: aload_0
      81: aload         8
      83: invokeinterface #36,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      88: return
      89: iinc          6, 1
      92: goto          42
      95: aload_0
      96: aload_3
      97: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: putfield      #53                 // Field next:Ljava/lang/String;
     103: aload_0
     104: aload_2
     105: putfield      #54                 // Field queuedCallback:Lio/undertow/io/IoCallback;
     108: return
    Exception table:
       from    to  target type
          56    70    73   Class java/nio/charset/CharacterCodingException

  private void queue(java.lang.String, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #53                 // Field next:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #55                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      11: ifnull        23
      14: getstatic     #56                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      17: invokeinterface #57,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #53                 // Field next:Ljava/lang/String;
      28: aload_0
      29: aload_2
      30: putfield      #54                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      33: return

  private void queue(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #53                 // Field next:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #55                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      11: ifnull        23
      14: getstatic     #56                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      17: invokeinterface #57,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #55                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      28: aload_0
      29: aload_2
      30: putfield      #54                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      33: return
}
