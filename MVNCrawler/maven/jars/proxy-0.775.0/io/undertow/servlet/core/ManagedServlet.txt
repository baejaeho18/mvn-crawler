Compiled from "ManagedServlet.java"
public class io.undertow.servlet.core.ManagedServlet implements io.undertow.servlet.core.Lifecycle {
  private final io.undertow.servlet.api.ServletInfo servletInfo;

  private final io.undertow.servlet.spec.ServletContextImpl servletContext;

  private volatile boolean started;

  private final io.undertow.servlet.core.ManagedServlet$InstanceStrategy instanceStrategy;

  private volatile boolean permanentlyUnavailable;

  private long maxMultipartRequestSize;

  private io.undertow.server.handlers.form.FormParserFactory formParserFactory;

  private jakarta.servlet.MultipartConfigElement multipartConfig;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<io.undertow.servlet.core.ManagedServlet> unavailableUntilUpdater;

  private volatile long unavailableUntil;

  public io.undertow.servlet.core.ManagedServlet(io.undertow.servlet.api.ServletInfo, io.undertow.servlet.spec.ServletContextImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field started:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field permanentlyUnavailable:Z
      14: aload_0
      15: lconst_0
      16: putfield      #4                  // Field unavailableUntil:J
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field servletInfo:Lio/undertow/servlet/api/ServletInfo;
      24: aload_0
      25: aload_2
      26: putfield      #6                  // Field servletContext:Lio/undertow/servlet/spec/ServletContextImpl;
      29: aload_0
      30: new           #7                  // class io/undertow/servlet/core/ManagedServlet$DefaultInstanceStrategy
      33: dup
      34: aload_1
      35: invokevirtual #8                  // Method io/undertow/servlet/api/ServletInfo.getInstanceFactory:()Lio/undertow/servlet/api/InstanceFactory;
      38: aload_1
      39: aload_2
      40: invokespecial #9                  // Method io/undertow/servlet/core/ManagedServlet$DefaultInstanceStrategy."<init>":(Lio/undertow/servlet/api/InstanceFactory;Lio/undertow/servlet/api/ServletInfo;Lio/undertow/servlet/spec/ServletContextImpl;)V
      43: putfield      #10                 // Field instanceStrategy:Lio/undertow/servlet/core/ManagedServlet$InstanceStrategy;
      46: aload_0
      47: aload_2
      48: invokevirtual #11                 // Method setupMultipart:(Lio/undertow/servlet/spec/ServletContextImpl;)V
      51: return

  public void setupMultipart(io.undertow.servlet.spec.ServletContextImpl);
    Code:
       0: new           #12                 // class io/undertow/server/handlers/form/FormEncodedDataDefinition
       3: dup
       4: invokespecial #13                 // Method io/undertow/server/handlers/form/FormEncodedDataDefinition."<init>":()V
       7: aload_1
       8: invokevirtual #14                 // Method io/undertow/servlet/spec/ServletContextImpl.getDeployment:()Lio/undertow/servlet/api/Deployment;
      11: invokeinterface #15,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDefaultRequestCharset:()Ljava/nio/charset/Charset;
      16: invokevirtual #16                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      19: invokevirtual #17                 // Method io/undertow/server/handlers/form/FormEncodedDataDefinition.setDefaultEncoding:(Ljava/lang/String;)Lio/undertow/server/handlers/form/FormEncodedDataDefinition;
      22: astore_2
      23: aload_0
      24: getfield      #5                  // Field servletInfo:Lio/undertow/servlet/api/ServletInfo;
      27: invokevirtual #18                 // Method io/undertow/servlet/api/ServletInfo.getMultipartConfig:()Ljakarta/servlet/MultipartConfigElement;
      30: astore_3
      31: aload_3
      32: ifnonnull     48
      35: aload_1
      36: invokevirtual #14                 // Method io/undertow/servlet/spec/ServletContextImpl.getDeployment:()Lio/undertow/servlet/api/Deployment;
      39: invokeinterface #19,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentInfo:()Lio/undertow/servlet/api/DeploymentInfo;
      44: invokevirtual #20                 // Method io/undertow/servlet/api/DeploymentInfo.getDefaultMultipartConfig:()Ljakarta/servlet/MultipartConfigElement;
      47: astore_3
      48: aload_0
      49: aload_3
      50: putfield      #21                 // Field multipartConfig:Ljakarta/servlet/MultipartConfigElement;
      53: aload_3
      54: ifnull        278
      57: aload_3
      58: astore        4
      60: aload         4
      62: invokevirtual #22                 // Method jakarta/servlet/MultipartConfigElement.getMaxRequestSize:()J
      65: ldc2_w        #23                 // long -1l
      68: lcmp
      69: ifeq          84
      72: aload_0
      73: aload         4
      75: invokevirtual #22                 // Method jakarta/servlet/MultipartConfigElement.getMaxRequestSize:()J
      78: putfield      #25                 // Field maxMultipartRequestSize:J
      81: goto          91
      84: aload_0
      85: ldc2_w        #23                 // long -1l
      88: putfield      #25                 // Field maxMultipartRequestSize:J
      91: aload         4
      93: invokevirtual #26                 // Method jakarta/servlet/MultipartConfigElement.getLocation:()Ljava/lang/String;
      96: ifnull        110
      99: aload         4
     101: invokevirtual #26                 // Method jakarta/servlet/MultipartConfigElement.getLocation:()Ljava/lang/String;
     104: invokevirtual #27                 // Method java/lang/String.isEmpty:()Z
     107: ifeq          127
     110: aload_1
     111: invokevirtual #14                 // Method io/undertow/servlet/spec/ServletContextImpl.getDeployment:()Lio/undertow/servlet/api/Deployment;
     114: invokeinterface #19,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentInfo:()Lio/undertow/servlet/api/DeploymentInfo;
     119: invokevirtual #28                 // Method io/undertow/servlet/api/DeploymentInfo.getTempPath:()Ljava/nio/file/Path;
     122: astore        5
     124: goto          187
     127: aload         4
     129: invokevirtual #26                 // Method jakarta/servlet/MultipartConfigElement.getLocation:()Ljava/lang/String;
     132: astore        6
     134: aload         6
     136: iconst_0
     137: anewarray     #29                 // class java/lang/String
     140: invokestatic  #30                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
     143: astore        7
     145: aload         7
     147: invokeinterface #31,  1           // InterfaceMethod java/nio/file/Path.isAbsolute:()Z
     152: ifeq          162
     155: aload         7
     157: astore        5
     159: goto          187
     162: aload_1
     163: invokevirtual #14                 // Method io/undertow/servlet/spec/ServletContextImpl.getDeployment:()Lio/undertow/servlet/api/Deployment;
     166: invokeinterface #19,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentInfo:()Lio/undertow/servlet/api/DeploymentInfo;
     171: astore        8
     173: aload         8
     175: invokevirtual #32                 // Method io/undertow/servlet/api/DeploymentInfo.requireTempPath:()Ljava/nio/file/Path;
     178: aload         6
     180: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     185: astore        5
     187: new           #34                 // class io/undertow/server/handlers/form/MultiPartParserDefinition
     190: dup
     191: aload         5
     193: invokespecial #35                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition."<init>":(Ljava/nio/file/Path;)V
     196: astore        6
     198: aload         4
     200: invokevirtual #36                 // Method jakarta/servlet/MultipartConfigElement.getMaxFileSize:()J
     203: lconst_0
     204: lcmp
     205: ifle          218
     208: aload         6
     210: aload         4
     212: invokevirtual #36                 // Method jakarta/servlet/MultipartConfigElement.getMaxFileSize:()J
     215: invokevirtual #37                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition.setMaxIndividualFileSize:(J)V
     218: aload         4
     220: invokevirtual #38                 // Method jakarta/servlet/MultipartConfigElement.getFileSizeThreshold:()I
     223: ifle          237
     226: aload         6
     228: aload         4
     230: invokevirtual #38                 // Method jakarta/servlet/MultipartConfigElement.getFileSizeThreshold:()I
     233: i2l
     234: invokevirtual #39                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition.setFileSizeThreshold:(J)V
     237: aload         6
     239: aload_1
     240: invokevirtual #14                 // Method io/undertow/servlet/spec/ServletContextImpl.getDeployment:()Lio/undertow/servlet/api/Deployment;
     243: invokeinterface #15,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDefaultRequestCharset:()Ljava/nio/charset/Charset;
     248: invokevirtual #16                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
     251: invokevirtual #40                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition.setDefaultEncoding:(Ljava/lang/String;)Lio/undertow/server/handlers/form/MultiPartParserDefinition;
     254: pop
     255: aload_0
     256: iconst_0
     257: invokestatic  #41                 // Method io/undertow/server/handlers/form/FormParserFactory.builder:(Z)Lio/undertow/server/handlers/form/FormParserFactory$Builder;
     260: aload_2
     261: invokevirtual #42                 // Method io/undertow/server/handlers/form/FormParserFactory$Builder.addParser:(Lio/undertow/server/handlers/form/FormParserFactory$ParserDefinition;)Lio/undertow/server/handlers/form/FormParserFactory$Builder;
     264: aload         6
     266: invokevirtual #42                 // Method io/undertow/server/handlers/form/FormParserFactory$Builder.addParser:(Lio/undertow/server/handlers/form/FormParserFactory$ParserDefinition;)Lio/undertow/server/handlers/form/FormParserFactory$Builder;
     269: invokevirtual #43                 // Method io/undertow/server/handlers/form/FormParserFactory$Builder.build:()Lio/undertow/server/handlers/form/FormParserFactory;
     272: putfield      #44                 // Field formParserFactory:Lio/undertow/server/handlers/form/FormParserFactory;
     275: goto          300
     278: aload_0
     279: iconst_0
     280: invokestatic  #41                 // Method io/undertow/server/handlers/form/FormParserFactory.builder:(Z)Lio/undertow/server/handlers/form/FormParserFactory$Builder;
     283: aload_2
     284: invokevirtual #42                 // Method io/undertow/server/handlers/form/FormParserFactory$Builder.addParser:(Lio/undertow/server/handlers/form/FormParserFactory$ParserDefinition;)Lio/undertow/server/handlers/form/FormParserFactory$Builder;
     287: invokevirtual #43                 // Method io/undertow/server/handlers/form/FormParserFactory$Builder.build:()Lio/undertow/server/handlers/form/FormParserFactory;
     290: putfield      #44                 // Field formParserFactory:Lio/undertow/server/handlers/form/FormParserFactory;
     293: aload_0
     294: ldc2_w        #23                 // long -1l
     297: putfield      #25                 // Field maxMultipartRequestSize:J
     300: return

  public synchronized void start() throws jakarta.servlet.ServletException;
    Code:
       0: return

  public void createServlet() throws jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field permanentlyUnavailable:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #2                  // Field started:Z
      12: ifne          52
      15: aload_0
      16: getfield      #5                  // Field servletInfo:Lio/undertow/servlet/api/ServletInfo;
      19: invokevirtual #45                 // Method io/undertow/servlet/api/ServletInfo.getLoadOnStartup:()Ljava/lang/Integer;
      22: ifnull        52
      25: aload_0
      26: getfield      #5                  // Field servletInfo:Lio/undertow/servlet/api/ServletInfo;
      29: invokevirtual #45                 // Method io/undertow/servlet/api/ServletInfo.getLoadOnStartup:()Ljava/lang/Integer;
      32: invokevirtual #46                 // Method java/lang/Integer.intValue:()I
      35: iflt          52
      38: aload_0
      39: getfield      #10                 // Field instanceStrategy:Lio/undertow/servlet/core/ManagedServlet$InstanceStrategy;
      42: invokeinterface #47,  1           // InterfaceMethod io/undertow/servlet/core/ManagedServlet$InstanceStrategy.start:()V
      47: aload_0
      48: iconst_1
      49: putfield      #2                  // Field started:Z
      52: goto          72
      55: astore_1
      56: aload_1
      57: invokevirtual #49                 // Method jakarta/servlet/UnavailableException.isPermanent:()Z
      60: ifeq          72
      63: aload_0
      64: iconst_1
      65: putfield      #3                  // Field permanentlyUnavailable:Z
      68: aload_0
      69: invokevirtual #50                 // Method stop:()V
      72: return
    Exception table:
       from    to  target type
           8    52    55   Class jakarta/servlet/UnavailableException

  public synchronized void stop();
    Code:
       0: aload_0
       1: getfield      #2                  // Field started:Z
       4: ifeq          16
       7: aload_0
       8: getfield      #10                 // Field instanceStrategy:Lio/undertow/servlet/core/ManagedServlet$InstanceStrategy;
      11: invokeinterface #51,  1           // InterfaceMethod io/undertow/servlet/core/ManagedServlet$InstanceStrategy.stop:()V
      16: aload_0
      17: iconst_0
      18: putfield      #2                  // Field started:Z
      21: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #2                  // Field started:Z
       4: ireturn

  public boolean isPermanentlyUnavailable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field permanentlyUnavailable:Z
       4: ireturn

  public boolean isTemporarilyUnavailable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field unavailableUntil:J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifeq          31
      11: invokestatic  #52                 // Method java/lang/System.currentTimeMillis:()J
      14: lload_1
      15: lcmp
      16: ifge          21
      19: iconst_1
      20: ireturn
      21: getstatic     #53                 // Field unavailableUntilUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      24: aload_0
      25: lload_1
      26: lconst_0
      27: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
      30: pop
      31: iconst_0
      32: ireturn

  public void setPermanentlyUnavailable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field permanentlyUnavailable:Z
       5: return

  public io.undertow.servlet.api.InstanceHandle<? extends jakarta.servlet.Servlet> getServlet() throws jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field servletContext:Lio/undertow/servlet/spec/ServletContextImpl;
       4: invokevirtual #14                 // Method io/undertow/servlet/spec/ServletContextImpl.getDeployment:()Lio/undertow/servlet/api/Deployment;
       7: invokeinterface #55,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentState:()Lio/undertow/servlet/api/DeploymentManager$State;
      12: getstatic     #56                 // Field io/undertow/servlet/api/DeploymentManager$State.STARTED:Lio/undertow/servlet/api/DeploymentManager$State;
      15: if_acmpeq     42
      18: getstatic     #57                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      21: aload_0
      22: getfield      #6                  // Field servletContext:Lio/undertow/servlet/spec/ServletContextImpl;
      25: invokevirtual #14                 // Method io/undertow/servlet/spec/ServletContextImpl.getDeployment:()Lio/undertow/servlet/api/Deployment;
      28: invokeinterface #19,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentInfo:()Lio/undertow/servlet/api/DeploymentInfo;
      33: invokevirtual #58                 // Method io/undertow/servlet/api/DeploymentInfo.getDeploymentName:()Ljava/lang/String;
      36: invokeinterface #59,  2           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.deploymentStopped:(Ljava/lang/String;)Ljakarta/servlet/ServletException;
      41: athrow
      42: aload_0
      43: getfield      #2                  // Field started:Z
      46: ifne          84
      49: aload_0
      50: dup
      51: astore_1
      52: monitorenter
      53: aload_0
      54: getfield      #2                  // Field started:Z
      57: ifne          74
      60: aload_0
      61: getfield      #10                 // Field instanceStrategy:Lio/undertow/servlet/core/ManagedServlet$InstanceStrategy;
      64: invokeinterface #47,  1           // InterfaceMethod io/undertow/servlet/core/ManagedServlet$InstanceStrategy.start:()V
      69: aload_0
      70: iconst_1
      71: putfield      #2                  // Field started:Z
      74: aload_1
      75: monitorexit
      76: goto          84
      79: astore_2
      80: aload_1
      81: monitorexit
      82: aload_2
      83: athrow
      84: aload_0
      85: getfield      #10                 // Field instanceStrategy:Lio/undertow/servlet/core/ManagedServlet$InstanceStrategy;
      88: invokeinterface #60,  1           // InterfaceMethod io/undertow/servlet/core/ManagedServlet$InstanceStrategy.getServlet:()Lio/undertow/servlet/api/InstanceHandle;
      93: areturn
    Exception table:
       from    to  target type
          53    76    79   any
          79    82    79   any

  public void forceInit() throws jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field started:Z
       4: ifne          93
       7: aload_0
       8: getfield      #6                  // Field servletContext:Lio/undertow/servlet/spec/ServletContextImpl;
      11: invokevirtual #14                 // Method io/undertow/servlet/spec/ServletContextImpl.getDeployment:()Lio/undertow/servlet/api/Deployment;
      14: invokeinterface #55,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentState:()Lio/undertow/servlet/api/DeploymentManager$State;
      19: getstatic     #56                 // Field io/undertow/servlet/api/DeploymentManager$State.STARTED:Lio/undertow/servlet/api/DeploymentManager$State;
      22: if_acmpeq     49
      25: getstatic     #57                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      28: aload_0
      29: getfield      #6                  // Field servletContext:Lio/undertow/servlet/spec/ServletContextImpl;
      32: invokevirtual #14                 // Method io/undertow/servlet/spec/ServletContextImpl.getDeployment:()Lio/undertow/servlet/api/Deployment;
      35: invokeinterface #19,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentInfo:()Lio/undertow/servlet/api/DeploymentInfo;
      40: invokevirtual #58                 // Method io/undertow/servlet/api/DeploymentInfo.getDeploymentName:()Ljava/lang/String;
      43: invokeinterface #59,  2           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.deploymentStopped:(Ljava/lang/String;)Ljakarta/servlet/ServletException;
      48: athrow
      49: aload_0
      50: dup
      51: astore_1
      52: monitorenter
      53: aload_0
      54: getfield      #2                  // Field started:Z
      57: ifne          83
      60: aload_0
      61: getfield      #10                 // Field instanceStrategy:Lio/undertow/servlet/core/ManagedServlet$InstanceStrategy;
      64: invokeinterface #47,  1           // InterfaceMethod io/undertow/servlet/core/ManagedServlet$InstanceStrategy.start:()V
      69: goto          78
      72: astore_2
      73: aload_0
      74: aload_2
      75: invokevirtual #61                 // Method handleUnavailableException:(Ljakarta/servlet/UnavailableException;)V
      78: aload_0
      79: iconst_1
      80: putfield      #2                  // Field started:Z
      83: aload_1
      84: monitorexit
      85: goto          93
      88: astore_3
      89: aload_1
      90: monitorexit
      91: aload_3
      92: athrow
      93: return
    Exception table:
       from    to  target type
          60    69    72   Class jakarta/servlet/UnavailableException
          53    85    88   any
          88    91    88   any

  public void handleUnavailableException(jakarta.servlet.UnavailableException);
    Code:
       0: aload_1
       1: invokevirtual #49                 // Method jakarta/servlet/UnavailableException.isPermanent:()Z
       4: ifeq          35
       7: getstatic     #62                 // Field io/undertow/servlet/UndertowServletLogger.REQUEST_LOGGER:Lio/undertow/servlet/UndertowServletLogger;
      10: aload_0
      11: invokevirtual #63                 // Method getServletInfo:()Lio/undertow/servlet/api/ServletInfo;
      14: invokevirtual #64                 // Method io/undertow/servlet/api/ServletInfo.getName:()Ljava/lang/String;
      17: aload_1
      18: invokeinterface #65,  3           // InterfaceMethod io/undertow/servlet/UndertowServletLogger.stoppingServletDueToPermanentUnavailability:(Ljava/lang/String;Ljakarta/servlet/UnavailableException;)V
      23: aload_0
      24: invokevirtual #50                 // Method stop:()V
      27: aload_0
      28: iconst_1
      29: invokevirtual #66                 // Method setPermanentlyUnavailable:(Z)V
      32: goto          81
      35: invokestatic  #52                 // Method java/lang/System.currentTimeMillis:()J
      38: aload_1
      39: invokevirtual #67                 // Method jakarta/servlet/UnavailableException.getUnavailableSeconds:()I
      42: sipush        1000
      45: imul
      46: i2l
      47: ladd
      48: lstore_2
      49: getstatic     #53                 // Field unavailableUntilUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      52: aload_0
      53: lload_2
      54: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.set:(Ljava/lang/Object;J)V
      57: getstatic     #62                 // Field io/undertow/servlet/UndertowServletLogger.REQUEST_LOGGER:Lio/undertow/servlet/UndertowServletLogger;
      60: aload_0
      61: invokevirtual #63                 // Method getServletInfo:()Lio/undertow/servlet/api/ServletInfo;
      64: invokevirtual #64                 // Method io/undertow/servlet/api/ServletInfo.getName:()Ljava/lang/String;
      67: new           #69                 // class java/util/Date
      70: dup
      71: lload_2
      72: invokespecial #70                 // Method java/util/Date."<init>":(J)V
      75: aload_1
      76: invokeinterface #71,  4           // InterfaceMethod io/undertow/servlet/UndertowServletLogger.stoppingServletUntilDueToTemporaryUnavailability:(Ljava/lang/String;Ljava/util/Date;Ljakarta/servlet/UnavailableException;)V
      81: return

  public io.undertow.servlet.api.ServletInfo getServletInfo();
    Code:
       0: aload_0
       1: getfield      #5                  // Field servletInfo:Lio/undertow/servlet/api/ServletInfo;
       4: areturn

  public long getMaxRequestSize();
    Code:
       0: aload_0
       1: getfield      #25                 // Field maxMultipartRequestSize:J
       4: lreturn

  public io.undertow.server.handlers.form.FormParserFactory getFormParserFactory();
    Code:
       0: aload_0
       1: getfield      #44                 // Field formParserFactory:Lio/undertow/server/handlers/form/FormParserFactory;
       4: areturn

  public jakarta.servlet.MultipartConfigElement getMultipartConfig();
    Code:
       0: aload_0
       1: getfield      #21                 // Field multipartConfig:Ljakarta/servlet/MultipartConfigElement;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field servletInfo:Lio/undertow/servlet/api/ServletInfo;
       4: invokedynamic #72,  0             // InvokeDynamic #0:makeConcatWithConstants:(Lio/undertow/servlet/api/ServletInfo;)Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: ldc           #73                 // class io/undertow/servlet/core/ManagedServlet
       2: ldc           #74                 // String unavailableUntil
       4: invokestatic  #75                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #53                 // Field unavailableUntilUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
