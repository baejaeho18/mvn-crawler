Compiled from "ServletInputStreamImpl.java"
public class io.undertow.servlet.spec.ServletInputStreamImpl extends jakarta.servlet.ServletInputStream {
  private final io.undertow.servlet.spec.HttpServletRequestImpl request;

  private final org.xnio.channels.StreamSourceChannel channel;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private volatile jakarta.servlet.ReadListener listener;

  private volatile io.undertow.servlet.spec.ServletInputStreamImpl$ServletInputStreamChannelListener internalListener;

  private static final int FLAG_READY;

  private static final int FLAG_CLOSED;

  private static final int FLAG_FINISHED;

  private static final int FLAG_ON_DATA_READ_CALLED;

  private static final int FLAG_CALL_ON_ALL_DATA_READ;

  private static final int FLAG_BEING_INVOKED_IN_IO_THREAD;

  private static final int FLAG_IS_READY_CALLED;

  private volatile int state;

  private volatile io.undertow.servlet.spec.AsyncContextImpl asyncContext;

  private volatile io.undertow.connector.PooledByteBuffer pooled;

  private volatile boolean asyncIoStarted;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.servlet.spec.ServletInputStreamImpl> stateUpdater;

  public io.undertow.servlet.spec.ServletInputStreamImpl(io.undertow.servlet.spec.HttpServletRequestImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/servlet/ServletInputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field request:Lio/undertow/servlet/spec/HttpServletRequestImpl;
       9: aload_1
      10: invokevirtual #3                  // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      13: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.isRequestChannelAvailable:()Z
      16: ifeq          33
      19: aload_0
      20: aload_1
      21: invokevirtual #3                  // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      24: invokevirtual #5                  // Method io/undertow/server/HttpServerExchange.getRequestChannel:()Lorg/xnio/channels/StreamSourceChannel;
      27: putfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      30: goto          51
      33: aload_0
      34: new           #7                  // class org/xnio/channels/EmptyStreamSourceChannel
      37: dup
      38: aload_1
      39: invokevirtual #3                  // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      42: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      45: invokespecial #9                  // Method org/xnio/channels/EmptyStreamSourceChannel."<init>":(Lorg/xnio/XnioIoThread;)V
      48: putfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      51: aload_0
      52: aload_1
      53: invokevirtual #3                  // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      56: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      59: invokevirtual #11                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      62: putfield      #12                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      65: return

  public boolean isFinished();
    Code:
       0: aload_0
       1: getfield      #13                 // Field state:I
       4: iconst_4
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public boolean isReady();
    Code:
       0: aload_0
       1: getfield      #16                 // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
       4: invokevirtual #17                 // Method io/undertow/servlet/spec/AsyncContextImpl.isInitialRequestDone:()Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #13                 // Field state:I
      16: iconst_4
      17: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      20: istore_1
      21: iload_1
      22: ifeq          85
      25: aload_0
      26: getfield      #13                 // Field state:I
      29: bipush        8
      31: invokestatic  #18                 // Method org/xnio/Bits.anyAreClear:(II)Z
      34: ifeq          85
      37: aload_0
      38: getfield      #13                 // Field state:I
      41: bipush        32
      43: invokestatic  #19                 // Method org/xnio/Bits.allAreClear:(II)Z
      46: ifeq          79
      49: aload_0
      50: bipush        8
      52: invokevirtual #20                 // Method setFlags:(I)V
      55: aload_0
      56: getfield      #2                  // Field request:Lio/undertow/servlet/spec/HttpServletRequestImpl;
      59: invokevirtual #21                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getServletContext:()Lio/undertow/servlet/spec/ServletContextImpl;
      62: aload_0
      63: getfield      #2                  // Field request:Lio/undertow/servlet/spec/HttpServletRequestImpl;
      66: invokevirtual #3                  // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      69: aload_0
      70: getfield      #22                 // Field listener:Ljakarta/servlet/ReadListener;
      73: invokevirtual #23                 // Method io/undertow/servlet/spec/ServletContextImpl.invokeOnAllDataRead:(Lio/undertow/server/HttpServerExchange;Ljakarta/servlet/ReadListener;)V
      76: goto          85
      79: aload_0
      80: bipush        16
      82: invokevirtual #20                 // Method setFlags:(I)V
      85: aload_0
      86: getfield      #24                 // Field asyncIoStarted:Z
      89: ifne          94
      92: iconst_0
      93: ireturn
      94: aload_0
      95: getfield      #13                 // Field state:I
      98: iconst_1
      99: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
     102: ifeq          113
     105: iload_1
     106: ifne          113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: istore_2
     115: iload_2
     116: ifne          139
     119: aload_0
     120: getfield      #22                 // Field listener:Ljakarta/servlet/ReadListener;
     123: ifnull        139
     126: iload_1
     127: ifne          139
     130: aload_0
     131: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     134: invokeinterface #25,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
     139: iload_2
     140: ifeq          149
     143: aload_0
     144: bipush        64
     146: invokevirtual #20                 // Method setFlags:(I)V
     149: iload_2
     150: ireturn

  public void setReadListener(jakarta.servlet.ReadListener);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #26                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
       7: invokeinterface #27,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.listenerCannotBeNull:()Ljava/lang/NullPointerException;
      12: athrow
      13: aload_0
      14: getfield      #22                 // Field listener:Ljakarta/servlet/ReadListener;
      17: ifnull        29
      20: getstatic     #26                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      23: invokeinterface #28,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.listenerAlreadySet:()Ljava/lang/IllegalStateException;
      28: athrow
      29: aload_0
      30: getfield      #2                  // Field request:Lio/undertow/servlet/spec/HttpServletRequestImpl;
      33: invokevirtual #29                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.isAsyncStarted:()Z
      36: ifne          48
      39: getstatic     #26                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      42: invokeinterface #30,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.asyncNotStarted:()Ljava/lang/IllegalStateException;
      47: athrow
      48: aload_0
      49: aload_0
      50: getfield      #2                  // Field request:Lio/undertow/servlet/spec/HttpServletRequestImpl;
      53: invokevirtual #31                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getAsyncContext:()Lio/undertow/servlet/spec/AsyncContextImpl;
      56: putfield      #16                 // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
      59: aload_0
      60: aload_1
      61: putfield      #22                 // Field listener:Ljakarta/servlet/ReadListener;
      64: aload_0
      65: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      68: invokeinterface #32,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      73: aload_0
      74: new           #33                 // class io/undertow/servlet/spec/ServletInputStreamImpl$ServletInputStreamChannelListener
      77: dup
      78: aload_0
      79: invokespecial #34                 // Method io/undertow/servlet/spec/ServletInputStreamImpl$ServletInputStreamChannelListener."<init>":(Lio/undertow/servlet/spec/ServletInputStreamImpl;)V
      82: dup_x1
      83: putfield      #35                 // Field internalListener:Lio/undertow/servlet/spec/ServletInputStreamImpl$ServletInputStreamChannelListener;
      86: invokeinterface #36,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      91: aload_0
      92: getfield      #16                 // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
      95: new           #37                 // class io/undertow/servlet/spec/ServletInputStreamImpl$1
      98: dup
      99: aload_0
     100: invokespecial #38                 // Method io/undertow/servlet/spec/ServletInputStreamImpl$1."<init>":(Lio/undertow/servlet/spec/ServletInputStreamImpl;)V
     103: invokevirtual #39                 // Method io/undertow/servlet/spec/AsyncContextImpl.addAsyncTask:(Ljava/lang/Runnable;)V
     106: return

  public int read() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokevirtual #40                 // Method read:([B)I
       9: istore_2
      10: iload_2
      11: iconst_m1
      12: if_icmpne     17
      15: iconst_m1
      16: ireturn
      17: aload_1
      18: iconst_0
      19: baload
      20: sipush        255
      23: iand
      24: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #41                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field state:I
       4: iconst_2
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #26                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      14: invokeinterface #42,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: getfield      #22                 // Field listener:Ljakarta/servlet/ReadListener;
      24: ifnull        57
      27: aload_0
      28: getfield      #13                 // Field state:I
      31: bipush        65
      33: invokestatic  #18                 // Method org/xnio/Bits.anyAreClear:(II)Z
      36: ifeq          48
      39: getstatic     #26                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      42: invokeinterface #43,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotReady:()Ljava/lang/IllegalStateException;
      47: athrow
      48: aload_0
      49: bipush        64
      51: invokevirtual #44                 // Method clearFlags:(I)V
      54: goto          61
      57: aload_0
      58: invokevirtual #45                 // Method readIntoBuffer:()V
      61: aload_0
      62: getfield      #13                 // Field state:I
      65: iconst_4
      66: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      69: ifeq          74
      72: iconst_m1
      73: ireturn
      74: iload_3
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_0
      81: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      84: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      89: astore        4
      91: aload         4
      93: invokevirtual #48                 // Method java/nio/ByteBuffer.remaining:()I
      96: iload_3
      97: invokestatic  #49                 // Method java/lang/Math.min:(II)I
     100: istore        5
     102: aload         4
     104: aload_1
     105: iload_2
     106: iload         5
     108: invokevirtual #50                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     111: pop
     112: aload         4
     114: invokevirtual #51                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     117: ifne          145
     120: aload_0
     121: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     124: invokeinterface #52,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     129: aload_0
     130: aconst_null
     131: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     134: aload_0
     135: getfield      #22                 // Field listener:Ljakarta/servlet/ReadListener;
     138: ifnull        145
     141: aload_0
     142: invokevirtual #53                 // Method readIntoBufferNonBlocking:()V
     145: iload         5
     147: ireturn

  private void readIntoBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     85
       7: aload_0
       8: getfield      #13                 // Field state:I
      11: iconst_4
      12: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifne          85
      18: aload_0
      19: aload_0
      20: getfield      #12                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      23: invokeinterface #54,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      28: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      31: aload_0
      32: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      35: aload_0
      36: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      39: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      44: invokestatic  #55                 // Method org/xnio/channels/Channels.readBlocking:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I
      47: istore_1
      48: aload_0
      49: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      52: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      57: invokevirtual #56                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      60: pop
      61: iload_1
      62: iconst_m1
      63: if_icmpne     85
      66: aload_0
      67: iconst_4
      68: invokevirtual #20                 // Method setFlags:(I)V
      71: aload_0
      72: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      75: invokeinterface #52,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      80: aload_0
      81: aconst_null
      82: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      85: return

  private void readIntoBufferNonBlocking() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     198
       7: aload_0
       8: getfield      #13                 // Field state:I
      11: iconst_4
      12: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifne          198
      18: aload_0
      19: aload_0
      20: getfield      #12                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      23: invokeinterface #54,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      28: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      31: aload_0
      32: getfield      #22                 // Field listener:Ljakarta/servlet/ReadListener;
      35: ifnonnull     116
      38: aload_0
      39: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      42: aload_0
      43: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      46: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      51: invokeinterface #57,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      56: istore_1
      57: iload_1
      58: ifne          76
      61: aload_0
      62: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      65: invokeinterface #52,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      70: aload_0
      71: aconst_null
      72: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      75: return
      76: aload_0
      77: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      80: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      85: invokevirtual #56                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      88: pop
      89: iload_1
      90: iconst_m1
      91: if_icmpne     113
      94: aload_0
      95: iconst_4
      96: invokevirtual #20                 // Method setFlags:(I)V
      99: aload_0
     100: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     103: invokeinterface #52,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     108: aload_0
     109: aconst_null
     110: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     113: goto          198
     116: aload_0
     117: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     120: aload_0
     121: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     124: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     129: invokeinterface #57,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     134: istore_1
     135: aload_0
     136: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     139: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     144: invokevirtual #56                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     147: pop
     148: iload_1
     149: iconst_m1
     150: if_icmpne     175
     153: aload_0
     154: iconst_4
     155: invokevirtual #20                 // Method setFlags:(I)V
     158: aload_0
     159: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     162: invokeinterface #52,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     167: aload_0
     168: aconst_null
     169: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     172: goto          198
     175: iload_1
     176: ifne          198
     179: aload_0
     180: iconst_1
     181: invokevirtual #44                 // Method clearFlags:(I)V
     184: aload_0
     185: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     188: invokeinterface #52,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     193: aload_0
     194: aconst_null
     195: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     198: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field state:I
       4: iconst_2
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #26                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      14: invokeinterface #42,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: invokevirtual #53                 // Method readIntoBufferNonBlocking:()V
      24: aload_0
      25: getfield      #13                 // Field state:I
      28: iconst_4
      29: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      32: ifeq          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      41: ifnonnull     46
      44: iconst_0
      45: ireturn
      46: aload_0
      47: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      50: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      55: invokevirtual #48                 // Method java/nio/ByteBuffer.remaining:()I
      58: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field state:I
       4: iconst_2
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: iconst_2
      14: invokevirtual #20                 // Method setFlags:(I)V
      17: aload_0
      18: getfield      #13                 // Field state:I
      21: iconst_4
      22: invokestatic  #19                 // Method org/xnio/Bits.allAreClear:(II)Z
      25: ifeq          56
      28: aload_0
      29: invokevirtual #45                 // Method readIntoBuffer:()V
      32: aload_0
      33: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      36: ifnull        17
      39: aload_0
      40: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      43: invokeinterface #52,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      48: aload_0
      49: aconst_null
      50: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      53: goto          17
      56: aload_0
      57: iconst_4
      58: invokevirtual #20                 // Method setFlags:(I)V
      61: aload_0
      62: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      65: ifnull        82
      68: aload_0
      69: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      72: invokeinterface #52,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      77: aload_0
      78: aconst_null
      79: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      82: aload_0
      83: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      86: invokeinterface #58,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
      91: goto          132
      94: astore_1
      95: aload_0
      96: iconst_4
      97: invokevirtual #20                 // Method setFlags:(I)V
     100: aload_0
     101: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     104: ifnull        121
     107: aload_0
     108: getfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     111: invokeinterface #52,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     116: aload_0
     117: aconst_null
     118: putfield      #46                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     121: aload_0
     122: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     125: invokeinterface #58,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
     130: aload_1
     131: athrow
     132: return
    Exception table:
       from    to  target type
          17    56    94   any

  private void setFlags(int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field state:I
       4: istore_2
       5: getstatic     #59                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iload_2
      10: iload_2
      11: iload_1
      12: ior
      13: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      16: ifeq          0
      19: return

  private void clearFlags(int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field state:I
       4: istore_2
       5: getstatic     #59                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iload_2
      10: iload_2
      11: iload_1
      12: iconst_m1
      13: ixor
      14: iand
      15: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      18: ifeq          0
      21: return

  static {};
    Code:
       0: ldc           #14                 // class io/undertow/servlet/spec/ServletInputStreamImpl
       2: ldc           #61                 // String state
       4: invokestatic  #62                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #59                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
