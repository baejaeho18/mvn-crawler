Compiled from "ServletOutputStreamImpl.java"
public class io.undertow.servlet.spec.ServletOutputStreamImpl extends jakarta.servlet.ServletOutputStream implements io.undertow.io.BufferWritableOutputStream {
  private final io.undertow.servlet.handlers.ServletRequestContext servletRequestContext;

  private io.undertow.connector.PooledByteBuffer pooledBuffer;

  private java.nio.ByteBuffer buffer;

  private java.lang.Integer bufferSize;

  private org.xnio.channels.StreamSinkChannel channel;

  private long written;

  private volatile int state;

  private volatile boolean asyncIoStarted;

  private io.undertow.servlet.spec.AsyncContextImpl asyncContext;

  private jakarta.servlet.WriteListener listener;

  private io.undertow.servlet.spec.ServletOutputStreamImpl$WriteChannelListener internalListener;

  private java.nio.ByteBuffer[] buffersToWrite;

  private java.nio.channels.FileChannel pendingFile;

  private static final int FLAG_CLOSED;

  private static final int FLAG_WRITE_STARTED;

  private static final int FLAG_READY;

  private static final int FLAG_DELEGATE_SHUTDOWN;

  private static final int FLAG_IN_CALLBACK;

  private static final int MAX_BUFFERS_TO_ALLOCATE;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.servlet.spec.ServletOutputStreamImpl> stateUpdater;

  public io.undertow.servlet.spec.ServletOutputStreamImpl(io.undertow.servlet.handlers.ServletRequestContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/servlet/ServletOutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
       9: return

  public io.undertow.servlet.spec.ServletOutputStreamImpl(io.undertow.servlet.handlers.ServletRequestContext, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/servlet/ServletOutputStream."<init>":()V
       4: aload_0
       5: iload_2
       6: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: putfield      #4                  // Field bufferSize:Ljava/lang/Integer;
      12: aload_0
      13: aload_1
      14: putfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      17: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: newarray       byte
       4: dup
       5: iconst_0
       6: iload_1
       7: i2b
       8: bastore
       9: iconst_0
      10: iconst_1
      11: invokevirtual #5                  // Method write:([BII)V
      14: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #5                  // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: invokestatic  #8                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifne          24
      11: aload_0
      12: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      15: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      18: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      21: ifeq          33
      24: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      27: invokeinterface #12,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      32: athrow
      33: iload_3
      34: iconst_1
      35: if_icmpge     39
      38: return
      39: iload_3
      40: i2l
      41: aload_0
      42: invokevirtual #13                 // Method remainingContentLength:()J
      45: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J
      48: l2i
      49: istore        4
      51: aload_0
      52: getfield      #15                 // Field listener:Ljakarta/servlet/WriteListener;
      55: ifnonnull     120
      58: aload_0
      59: invokevirtual #16                 // Method buffer:()Ljava/nio/ByteBuffer;
      62: astore        5
      64: aload         5
      66: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      69: iload         4
      71: if_icmpge     87
      74: aload_0
      75: aload_1
      76: iload_2
      77: iload         4
      79: aload         5
      81: invokevirtual #18                 // Method writeTooLargeForBuffer:([BIILjava/nio/ByteBuffer;)V
      84: goto          110
      87: aload         5
      89: aload_1
      90: iload_2
      91: iload         4
      93: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      96: pop
      97: aload         5
      99: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     102: ifne          110
     105: aload_0
     106: iconst_0
     107: invokevirtual #20                 // Method writeBufferBlocking:(Z)V
     110: aload_0
     111: iload         4
     113: i2l
     114: invokevirtual #21                 // Method updateWritten:(J)V
     117: goto          128
     120: aload_0
     121: aload_1
     122: iload_2
     123: iload         4
     125: invokevirtual #22                 // Method writeAsync:([BII)V
     128: return

  private void writeTooLargeForBuffer(byte[], int, int, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: astore        5
       6: aload         5
       8: ifnonnull     28
      11: aload_0
      12: aload_0
      13: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      16: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      19: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      22: dup
      23: astore        5
      25: putfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      28: aload_0
      29: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      32: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      35: invokevirtual #26                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      38: invokevirtual #27                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      41: astore        6
      43: bipush        7
      45: anewarray     #28                 // class java/nio/ByteBuffer
      48: astore        7
      50: bipush        6
      52: anewarray     #29                 // class io/undertow/connector/PooledByteBuffer
      55: astore        8
      57: aload         7
      59: iconst_0
      60: aload         4
      62: aastore
      63: iconst_0
      64: istore        9
      66: aload         4
      68: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      71: istore        10
      73: aload         4
      75: aload_1
      76: iload         9
      78: iload_2
      79: iadd
      80: iload         10
      82: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      85: pop
      86: aload         4
      88: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      91: pop
      92: iload         9
      94: iload         10
      96: iadd
      97: istore        9
      99: iconst_1
     100: istore        11
     102: iconst_0
     103: istore        12
     105: iload         12
     107: bipush        6
     109: if_icmpge     237
     112: aload         6
     114: invokeinterface #31,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     119: astore        13
     121: aload         8
     123: iload         11
     125: iconst_1
     126: isub
     127: aload         13
     129: aastore
     130: aload         7
     132: iload         11
     134: iinc          11, 1
     137: aload         13
     139: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     144: aastore
     145: aload         13
     147: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     152: astore        14
     154: iload_3
     155: iload         9
     157: isub
     158: istore        15
     160: iload         15
     162: aload         14
     164: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     167: if_icmple     206
     170: aload         14
     172: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     175: istore        10
     177: aload         14
     179: aload_1
     180: iload         9
     182: iload_2
     183: iadd
     184: iload         10
     186: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     189: pop
     190: aload         14
     192: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     195: pop
     196: iload         9
     198: iload         10
     200: iadd
     201: istore        9
     203: goto          231
     206: aload         14
     208: aload_1
     209: iload         9
     211: iload_2
     212: iadd
     213: iload         15
     215: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     218: pop
     219: iload_3
     220: istore        9
     222: aload         14
     224: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     227: pop
     228: goto          237
     231: iinc          12, 1
     234: goto          105
     237: aload         5
     239: aload         7
     241: iconst_0
     242: iload         11
     244: invokestatic  #33                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     247: pop2
     248: iload         9
     250: iload_3
     251: if_icmpge     380
     254: iconst_0
     255: istore        11
     257: iconst_0
     258: istore        12
     260: iload         12
     262: bipush        7
     264: if_icmpge     366
     267: aload         7
     269: iload         12
     271: aaload
     272: astore        13
     274: aload         13
     276: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     279: pop
     280: iinc          11, 1
     283: iload_3
     284: iload         9
     286: isub
     287: istore        14
     289: iload         14
     291: aload         13
     293: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     296: if_icmple     335
     299: aload         13
     301: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     304: istore        10
     306: aload         13
     308: aload_1
     309: iload         9
     311: iload_2
     312: iadd
     313: iload         10
     315: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     318: pop
     319: aload         13
     321: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     324: pop
     325: iload         9
     327: iload         10
     329: iadd
     330: istore        9
     332: goto          360
     335: aload         13
     337: aload_1
     338: iload         9
     340: iload_2
     341: iadd
     342: iload         14
     344: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     347: pop
     348: iload_3
     349: istore        9
     351: aload         13
     353: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     356: pop
     357: goto          366
     360: iinc          12, 1
     363: goto          260
     366: aload         5
     368: aload         7
     370: iconst_0
     371: iload         11
     373: invokestatic  #33                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     376: pop2
     377: goto          248
     380: aload         4
     382: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     385: pop
     386: iconst_0
     387: istore        9
     389: iload         9
     391: aload         8
     393: arraylength
     394: if_icmpge     425
     397: aload         8
     399: iload         9
     401: aaload
     402: astore        10
     404: aload         10
     406: ifnonnull     412
     409: goto          425
     412: aload         10
     414: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     419: iinc          9, 1
     422: goto          389
     425: goto          472
     428: astore        16
     430: iconst_0
     431: istore        17
     433: iload         17
     435: aload         8
     437: arraylength
     438: if_icmpge     469
     441: aload         8
     443: iload         17
     445: aaload
     446: astore        18
     448: aload         18
     450: ifnonnull     456
     453: goto          469
     456: aload         18
     458: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     463: iinc          17, 1
     466: goto          433
     469: aload         16
     471: athrow
     472: return
    Exception table:
       from    to  target type
          57   386   428   any
         428   430   428   any

  private void writeAsync(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_4
       5: invokestatic  #36                 // Method org/xnio/Bits.anyAreClear:(II)Z
       8: ifeq          20
      11: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      14: invokeinterface #37,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotReady:()Ljava/lang/IllegalStateException;
      19: athrow
      20: iload_3
      21: i2l
      22: aload_0
      23: invokevirtual #13                 // Method remainingContentLength:()J
      26: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J
      29: l2i
      30: istore_3
      31: aload_0
      32: invokevirtual #16                 // Method buffer:()Ljava/nio/ByteBuffer;
      35: astore        4
      37: aload         4
      39: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      42: iload_3
      43: if_icmple     58
      46: aload         4
      48: aload_1
      49: iload_2
      50: iload_3
      51: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      54: pop
      55: goto          202
      58: aload         4
      60: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      63: pop
      64: aload_1
      65: iload_2
      66: iload_3
      67: invokestatic  #38                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      70: astore        5
      72: iconst_2
      73: anewarray     #28                 // class java/nio/ByteBuffer
      76: dup
      77: iconst_0
      78: aload         4
      80: aastore
      81: dup
      82: iconst_1
      83: aload         5
      85: aastore
      86: astore        6
      88: aload         6
      90: invokestatic  #39                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
      93: lstore        7
      95: lconst_0
      96: lstore        11
      98: aload_0
      99: invokevirtual #40                 // Method createChannel:()V
     102: aload_0
     103: iconst_2
     104: invokevirtual #41                 // Method setFlags:(I)V
     107: aload_0
     108: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     111: aload         6
     113: invokeinterface #42,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     118: lstore        9
     120: lload         11
     122: lload         9
     124: ladd
     125: lstore        11
     127: lload         9
     129: lconst_0
     130: lcmp
     131: ifne          188
     134: aload         5
     136: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     139: invokestatic  #43                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     142: astore        13
     144: aload         13
     146: aload         5
     148: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     151: pop
     152: aload         13
     154: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     157: pop
     158: aload_0
     159: iconst_2
     160: anewarray     #28                 // class java/nio/ByteBuffer
     163: dup
     164: iconst_0
     165: aload         4
     167: aastore
     168: dup
     169: iconst_1
     170: aload         13
     172: aastore
     173: putfield      #45                 // Field buffersToWrite:[Ljava/nio/ByteBuffer;
     176: aload_0
     177: iconst_4
     178: invokevirtual #46                 // Method clearFlags:(I)V
     181: aload_0
     182: iload_3
     183: i2l
     184: invokevirtual #47                 // Method updateWrittenAsync:(J)V
     187: return
     188: lload         11
     190: lload         7
     192: lcmp
     193: iflt          107
     196: aload         4
     198: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     201: pop
     202: aload_0
     203: iload_3
     204: i2l
     205: invokevirtual #47                 // Method updateWrittenAsync:(J)V
     208: goto          222
     211: astore        14
     213: aload_0
     214: iload_3
     215: i2l
     216: invokevirtual #47                 // Method updateWrittenAsync:(J)V
     219: aload         14
     221: athrow
     222: return
    Exception table:
       from    to  target type
          31   181   211   any
         188   202   211   any
         211   213   211   any

  public void write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: invokestatic  #8                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifne          24
      11: aload_0
      12: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      15: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      18: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      21: ifeq          33
      24: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      27: invokeinterface #12,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      32: athrow
      33: iconst_0
      34: istore_2
      35: aload_1
      36: astore_3
      37: aload_3
      38: arraylength
      39: istore        4
      41: iconst_0
      42: istore        5
      44: iload         5
      46: iload         4
      48: if_icmpge     71
      51: aload_3
      52: iload         5
      54: aaload
      55: astore        6
      57: iload_2
      58: aload         6
      60: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      63: iadd
      64: istore_2
      65: iinc          5, 1
      68: goto          44
      71: iload_2
      72: iconst_1
      73: if_icmpge     77
      76: return
      77: iload_2
      78: i2l
      79: aload_0
      80: invokevirtual #13                 // Method remainingContentLength:()J
      83: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J
      86: l2i
      87: istore_2
      88: aload_0
      89: getfield      #15                 // Field listener:Ljakarta/servlet/WriteListener;
      92: ifnonnull     291
      95: aload_0
      96: getfield      #48                 // Field written:J
      99: lconst_0
     100: lcmp
     101: ifne          161
     104: iload_2
     105: i2l
     106: aload_0
     107: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     110: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
     113: invokevirtual #49                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getContentLength:()J
     116: lcmp
     117: ifne          161
     120: aload_0
     121: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     124: ifnonnull     141
     127: aload_0
     128: aload_0
     129: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     132: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     135: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     138: putfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     141: aload_0
     142: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     145: aload_1
     146: iconst_0
     147: aload_1
     148: arraylength
     149: invokestatic  #33                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     152: pop2
     153: aload_0
     154: iconst_2
     155: invokevirtual #41                 // Method setFlags:(I)V
     158: goto          282
     161: aload_0
     162: invokevirtual #16                 // Method buffer:()Ljava/nio/ByteBuffer;
     165: astore_3
     166: iload_2
     167: aload_3
     168: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     171: if_icmpge     186
     174: aload_3
     175: aload_1
     176: iconst_0
     177: aload_1
     178: arraylength
     179: invokestatic  #50                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     182: pop
     183: goto          282
     186: aload_0
     187: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     190: ifnonnull     207
     193: aload_0
     194: aload_0
     195: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     198: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     201: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     204: putfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     207: aload_3
     208: invokevirtual #51                 // Method java/nio/ByteBuffer.position:()I
     211: ifne          229
     214: aload_0
     215: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     218: aload_1
     219: iconst_0
     220: aload_1
     221: arraylength
     222: invokestatic  #33                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     225: pop2
     226: goto          277
     229: aload_1
     230: arraylength
     231: iconst_1
     232: iadd
     233: anewarray     #28                 // class java/nio/ByteBuffer
     236: astore        4
     238: aload_3
     239: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     242: pop
     243: aload         4
     245: iconst_0
     246: aload_3
     247: aastore
     248: aload_1
     249: iconst_0
     250: aload         4
     252: iconst_1
     253: aload_1
     254: arraylength
     255: invokestatic  #52                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     258: aload_0
     259: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     262: aload         4
     264: iconst_0
     265: aload         4
     267: arraylength
     268: invokestatic  #33                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     271: pop2
     272: aload_3
     273: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     276: pop
     277: aload_0
     278: iconst_2
     279: invokevirtual #41                 // Method setFlags:(I)V
     282: aload_0
     283: iload_2
     284: i2l
     285: invokevirtual #21                 // Method updateWritten:(J)V
     288: goto          508
     291: aload_0
     292: getfield      #6                  // Field state:I
     295: iconst_4
     296: invokestatic  #36                 // Method org/xnio/Bits.anyAreClear:(II)Z
     299: ifeq          311
     302: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
     305: invokeinterface #37,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotReady:()Ljava/lang/IllegalStateException;
     310: athrow
     311: aload_0
     312: invokevirtual #16                 // Method buffer:()Ljava/nio/ByteBuffer;
     315: astore_3
     316: aload_3
     317: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     320: iload_2
     321: if_icmple     336
     324: aload_3
     325: aload_1
     326: iconst_0
     327: aload_1
     328: arraylength
     329: invokestatic  #50                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     332: pop
     333: goto          488
     336: aload_1
     337: arraylength
     338: iconst_1
     339: iadd
     340: anewarray     #28                 // class java/nio/ByteBuffer
     343: astore        4
     345: aload_3
     346: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     349: pop
     350: aload         4
     352: iconst_0
     353: aload_3
     354: aastore
     355: aload_1
     356: iconst_0
     357: aload         4
     359: iconst_1
     360: aload_1
     361: arraylength
     362: invokestatic  #52                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     365: aload         4
     367: invokestatic  #39                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     370: lstore        5
     372: lconst_0
     373: lstore        9
     375: aload_0
     376: invokevirtual #40                 // Method createChannel:()V
     379: aload_0
     380: iconst_2
     381: invokevirtual #41                 // Method setFlags:(I)V
     384: aload_0
     385: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     388: aload         4
     390: invokeinterface #42,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     395: lstore        7
     397: lload         9
     399: lload         7
     401: ladd
     402: lstore        9
     404: lload         7
     406: lconst_0
     407: lcmp
     408: ifne          475
     411: aload_1
     412: invokestatic  #39                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     415: l2i
     416: invokestatic  #43                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     419: astore        11
     421: aload         11
     423: aload_1
     424: iconst_0
     425: aload_1
     426: arraylength
     427: invokestatic  #50                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     430: pop
     431: aload         11
     433: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     436: pop
     437: aload_0
     438: iconst_2
     439: anewarray     #28                 // class java/nio/ByteBuffer
     442: dup
     443: iconst_0
     444: aload_3
     445: aastore
     446: dup
     447: iconst_1
     448: aload         11
     450: aastore
     451: putfield      #45                 // Field buffersToWrite:[Ljava/nio/ByteBuffer;
     454: aload_0
     455: iconst_4
     456: invokevirtual #46                 // Method clearFlags:(I)V
     459: aload_0
     460: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     463: invokeinterface #53,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     468: aload_0
     469: iload_2
     470: i2l
     471: invokevirtual #47                 // Method updateWrittenAsync:(J)V
     474: return
     475: lload         9
     477: lload         5
     479: lcmp
     480: iflt          384
     483: aload_3
     484: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     487: pop
     488: aload_0
     489: iload_2
     490: i2l
     491: invokevirtual #47                 // Method updateWrittenAsync:(J)V
     494: goto          508
     497: astore        12
     499: aload_0
     500: iload_2
     501: i2l
     502: invokevirtual #47                 // Method updateWrittenAsync:(J)V
     505: aload         12
     507: athrow
     508: return
    Exception table:
       from    to  target type
         311   468   497   any
         475   488   497   any
         497   499   497   any

  public void write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #28                 // class java/nio/ByteBuffer
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokevirtual #54                 // Method write:([Ljava/nio/ByteBuffer;)V
      12: return

  void updateWritten(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #48                 // Field written:J
       5: lload_1
       6: ladd
       7: putfield      #48                 // Field written:J
      10: aload_0
      11: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      14: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      17: invokevirtual #49                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getContentLength:()J
      20: lstore_3
      21: lload_3
      22: ldc2_w        #55                 // long -1l
      25: lcmp
      26: ifeq          42
      29: aload_0
      30: getfield      #48                 // Field written:J
      33: lload_3
      34: lcmp
      35: iflt          42
      38: aload_0
      39: invokevirtual #57                 // Method flushInternal:()V
      42: return

  long remainingContentLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
       4: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
       7: invokevirtual #49                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getContentLength:()J
      10: lstore_1
      11: lload_1
      12: ldc2_w        #55                 // long -1l
      15: lcmp
      16: ifeq          26
      19: lload_1
      20: aload_0
      21: getfield      #48                 // Field written:J
      24: lsub
      25: lreturn
      26: ldc2_w        #59                 // long 9223372036854775807l
      29: lreturn

  void updateWrittenAsync(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #48                 // Field written:J
       5: lload_1
       6: ladd
       7: putfield      #48                 // Field written:J
      10: aload_0
      11: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      14: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      17: invokevirtual #49                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getContentLength:()J
      20: lstore_3
      21: lload_3
      22: ldc2_w        #55                 // long -1l
      25: lcmp
      26: ifeq          116
      29: aload_0
      30: getfield      #48                 // Field written:J
      33: lload_3
      34: lcmp
      35: iflt          116
      38: aload_0
      39: iconst_1
      40: invokevirtual #41                 // Method setFlags:(I)V
      43: aload_0
      44: getfield      #45                 // Field buffersToWrite:[Ljava/nio/ByteBuffer;
      47: ifnonnull     116
      50: aload_0
      51: getfield      #61                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      54: ifnonnull     116
      57: aload_0
      58: iconst_1
      59: invokevirtual #62                 // Method flushBufferAsync:(Z)Z
      62: ifeq          116
      65: aload_0
      66: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      69: invokeinterface #63,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      74: aload_0
      75: bipush        8
      77: invokevirtual #41                 // Method setFlags:(I)V
      80: aload_0
      81: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      84: invokeinterface #64,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
      89: pop
      90: aload_0
      91: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      94: ifnull        116
      97: aload_0
      98: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     101: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     106: aload_0
     107: aconst_null
     108: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     111: aload_0
     112: aconst_null
     113: putfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     116: return

  private boolean flushBufferAsync(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field buffersToWrite:[Ljava/nio/ByteBuffer;
       4: astore_2
       5: aload_2
       6: ifnonnull     41
       9: aload_0
      10: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      13: astore_3
      14: aload_3
      15: ifnull        25
      18: aload_3
      19: invokevirtual #51                 // Method java/nio/ByteBuffer.position:()I
      22: ifne          27
      25: iconst_1
      26: ireturn
      27: aload_3
      28: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      31: pop
      32: iconst_1
      33: anewarray     #28                 // class java/nio/ByteBuffer
      36: dup
      37: iconst_0
      38: aload_3
      39: aastore
      40: astore_2
      41: aload_2
      42: invokestatic  #39                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
      45: lstore_3
      46: lload_3
      47: lconst_0
      48: lcmp
      49: ifne          62
      52: aload_0
      53: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      56: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      59: pop
      60: iconst_1
      61: ireturn
      62: aload_0
      63: iconst_2
      64: invokevirtual #41                 // Method setFlags:(I)V
      67: aload_0
      68: invokevirtual #40                 // Method createChannel:()V
      71: lconst_0
      72: lstore        7
      74: iload_1
      75: ifeq          93
      78: aload_0
      79: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      82: aload_2
      83: invokeinterface #67,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:([Ljava/nio/ByteBuffer;)J
      88: lstore        5
      90: goto          105
      93: aload_0
      94: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      97: aload_2
      98: invokeinterface #42,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     103: lstore        5
     105: lload         7
     107: lload         5
     109: ladd
     110: lstore        7
     112: lload         5
     114: lconst_0
     115: lcmp
     116: ifne          140
     119: aload_0
     120: iconst_4
     121: invokevirtual #46                 // Method clearFlags:(I)V
     124: aload_0
     125: aload_2
     126: putfield      #45                 // Field buffersToWrite:[Ljava/nio/ByteBuffer;
     129: aload_0
     130: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     133: invokeinterface #53,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     138: iconst_0
     139: ireturn
     140: lload         7
     142: lload_3
     143: lcmp
     144: iflt          74
     147: aload_0
     148: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     151: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     154: pop
     155: iconst_1
     156: ireturn

  java.nio.ByteBuffer underlyingBuffer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: invokestatic  #8                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          13
      11: aconst_null
      12: areturn
      13: aload_0
      14: invokevirtual #16                 // Method buffer:()Ljava/nio/ByteBuffer;
      17: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
       4: invokevirtual #68                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
       7: invokevirtual #69                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getDispatcherType:()Ljakarta/servlet/DispatcherType;
      10: getstatic     #70                 // Field jakarta/servlet/DispatcherType.INCLUDE:Ljakarta/servlet/DispatcherType;
      13: if_acmpeq     29
      16: aload_0
      17: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      20: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      23: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      26: ifeq          30
      29: return
      30: aload_0
      31: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      34: invokevirtual #71                 // Method io/undertow/servlet/handlers/ServletRequestContext.getDeployment:()Lio/undertow/servlet/api/Deployment;
      37: invokeinterface #72,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentInfo:()Lio/undertow/servlet/api/DeploymentInfo;
      42: invokevirtual #73                 // Method io/undertow/servlet/api/DeploymentInfo.isIgnoreFlush:()Z
      45: ifeq          88
      48: aload_0
      49: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      52: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      55: invokevirtual #74                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      58: ifeq          88
      61: aload_0
      62: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      65: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      68: ldc           #76                 // String Transfer-Encoding
      70: invokevirtual #77                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      73: ifnonnull     88
      76: aload_0
      77: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      80: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      83: iconst_1
      84: invokevirtual #78                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.setIgnoredFlushPerformed:(Z)V
      87: return
      88: aload_0
      89: invokevirtual #57                 // Method flushInternal:()V
      92: goto          148
      95: astore_1
      96: aload_0
      97: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     100: invokevirtual #68                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
     103: astore_2
     104: aload_2
     105: invokevirtual #80                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.isAsyncStarted:()Z
     108: ifne          121
     111: aload_2
     112: invokevirtual #69                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getDispatcherType:()Ljakarta/servlet/DispatcherType;
     115: getstatic     #81                 // Field jakarta/servlet/DispatcherType.ASYNC:Ljakarta/servlet/DispatcherType;
     118: if_acmpne     148
     121: aload_0
     122: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     125: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     128: invokevirtual #82                 // Method io/undertow/server/HttpServerExchange.unDispatch:()Lio/undertow/server/HttpServerExchange;
     131: pop
     132: aload_0
     133: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     136: invokevirtual #68                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
     139: invokevirtual #83                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getAsyncContextInternal:()Lio/undertow/servlet/spec/AsyncContextImpl;
     142: aload_1
     143: invokevirtual #84                 // Method io/undertow/servlet/spec/AsyncContextImpl.handleError:(Ljava/lang/Throwable;)V
     146: aload_1
     147: athrow
     148: return
    Exception table:
       from    to  target type
          88    92    95   Class java/io/IOException

  public void flushInternal() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field listener:Ljakarta/servlet/WriteListener;
       4: ifnonnull     72
       7: aload_0
       8: getfield      #6                  // Field state:I
      11: iconst_1
      12: invokestatic  #8                  // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifeq          19
      18: return
      19: aload_0
      20: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      23: ifnull        41
      26: aload_0
      27: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #51                 // Method java/nio/ByteBuffer.position:()I
      33: ifeq          41
      36: aload_0
      37: iconst_0
      38: invokevirtual #20                 // Method writeBufferBlocking:(Z)V
      41: aload_0
      42: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      45: ifnonnull     62
      48: aload_0
      49: aload_0
      50: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      53: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      56: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      59: putfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      62: aload_0
      63: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      66: invokestatic  #85                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
      69: goto          188
      72: aload_0
      73: getfield      #6                  // Field state:I
      76: iconst_4
      77: invokestatic  #36                 // Method org/xnio/Bits.anyAreClear:(II)Z
      80: ifeq          84
      83: return
      84: aload_0
      85: invokevirtual #40                 // Method createChannel:()V
      88: aload_0
      89: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      92: ifnull        105
      95: aload_0
      96: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      99: invokevirtual #51                 // Method java/nio/ByteBuffer.position:()I
     102: ifne          116
     105: aload_0
     106: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     109: invokeinterface #64,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
     114: pop
     115: return
     116: aload_0
     117: iconst_2
     118: invokevirtual #41                 // Method setFlags:(I)V
     121: aload_0
     122: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     125: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     128: pop
     129: aload_0
     130: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     133: aload_0
     134: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     137: invokeinterface #86,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     142: i2l
     143: lstore_1
     144: aload_0
     145: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     148: invokevirtual #87                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     151: ifeq          160
     154: lload_1
     155: lconst_0
     156: lcmp
     157: ifne          129
     160: aload_0
     161: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     164: invokevirtual #87                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     167: ifne          180
     170: aload_0
     171: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     174: invokeinterface #64,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
     179: pop
     180: aload_0
     181: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     184: invokevirtual #88                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     187: pop
     188: return

  public void transferFrom(java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: invokestatic  #8                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifne          24
      11: aload_0
      12: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      15: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      18: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      21: ifeq          33
      24: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      27: invokeinterface #12,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      32: athrow
      33: aload_0
      34: invokevirtual #13                 // Method remainingContentLength:()J
      37: lstore_2
      38: aload_0
      39: getfield      #15                 // Field listener:Ljakarta/servlet/WriteListener;
      42: ifnonnull     134
      45: aload_0
      46: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      49: ifnull        67
      52: aload_0
      53: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      56: invokevirtual #51                 // Method java/nio/ByteBuffer.position:()I
      59: ifeq          67
      62: aload_0
      63: iconst_0
      64: invokevirtual #20                 // Method writeBufferBlocking:(Z)V
      67: aload_0
      68: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      71: ifnonnull     88
      74: aload_0
      75: aload_0
      76: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      79: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      82: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      85: putfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      88: aload_1
      89: invokevirtual #89                 // Method java/nio/channels/FileChannel.position:()J
      92: lstore        4
      94: aload_1
      95: invokevirtual #90                 // Method java/nio/channels/FileChannel.size:()J
      98: lload         4
     100: lsub
     101: lstore        6
     103: lload         6
     105: lload_2
     106: lcmp
     107: ifle          113
     110: lload_2
     111: lstore        6
     113: aload_0
     114: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     117: aload_1
     118: lload         4
     120: lload         6
     122: invokestatic  #91                 // Method org/xnio/channels/Channels.transferBlocking:(Lorg/xnio/channels/StreamSinkChannel;Ljava/nio/channels/FileChannel;JJ)V
     125: aload_0
     126: lload         6
     128: invokevirtual #21                 // Method updateWritten:(J)V
     131: goto          279
     134: aload_0
     135: iconst_2
     136: invokevirtual #41                 // Method setFlags:(I)V
     139: aload_0
     140: invokevirtual #40                 // Method createChannel:()V
     143: lconst_0
     144: lstore        4
     146: aload_1
     147: invokevirtual #90                 // Method java/nio/channels/FileChannel.size:()J
     150: lload_2
     151: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J
     154: lstore        6
     156: aload_1
     157: invokevirtual #89                 // Method java/nio/channels/FileChannel.position:()J
     160: lstore        4
     162: lload         6
     164: lload         4
     166: lsub
     167: lconst_0
     168: lcmp
     169: ifle          249
     172: aload_0
     173: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     176: aload_0
     177: getfield      #61                 // Field pendingFile:Ljava/nio/channels/FileChannel;
     180: lload         4
     182: lload         6
     184: lload         4
     186: lsub
     187: invokeinterface #92,  6           // InterfaceMethod org/xnio/channels/StreamSinkChannel.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
     192: lstore        8
     194: lload         8
     196: lconst_0
     197: lcmp
     198: ifgt          239
     201: aload_0
     202: iconst_4
     203: invokevirtual #46                 // Method clearFlags:(I)V
     206: aload_0
     207: aload_1
     208: putfield      #61                 // Field pendingFile:Ljava/nio/channels/FileChannel;
     211: aload_1
     212: lload         4
     214: invokevirtual #93                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
     217: pop
     218: aload_0
     219: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     222: invokeinterface #53,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     227: aload_0
     228: lload         4
     230: aload_1
     231: invokevirtual #89                 // Method java/nio/channels/FileChannel.position:()J
     234: lsub
     235: invokevirtual #47                 // Method updateWrittenAsync:(J)V
     238: return
     239: lload         4
     241: lload         8
     243: ladd
     244: lstore        4
     246: goto          162
     249: aload_0
     250: lload         4
     252: aload_1
     253: invokevirtual #89                 // Method java/nio/channels/FileChannel.position:()J
     256: lsub
     257: invokevirtual #47                 // Method updateWrittenAsync:(J)V
     260: goto          279
     263: astore        10
     265: aload_0
     266: lload         4
     268: aload_1
     269: invokevirtual #89                 // Method java/nio/channels/FileChannel.position:()J
     272: lsub
     273: invokevirtual #47                 // Method updateWrittenAsync:(J)V
     276: aload         10
     278: athrow
     279: return
    Exception table:
       from    to  target type
         146   227   263   any
         239   249   263   any
         263   265   263   any

  private void writeBufferBlocking(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: ifnonnull     21
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      12: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      15: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      18: putfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      21: aload_0
      22: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      25: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      28: pop
      29: aload_0
      30: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      33: invokevirtual #87                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      36: ifeq          89
      39: iload_1
      40: ifeq          59
      43: aload_0
      44: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      47: aload_0
      48: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      51: invokeinterface #94,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:(Ljava/nio/ByteBuffer;)I
      56: goto          72
      59: aload_0
      60: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      63: aload_0
      64: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      67: invokeinterface #86,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      72: istore_2
      73: iload_2
      74: ifne          86
      77: aload_0
      78: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      81: invokeinterface #95,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.awaitWritable:()V
      86: goto          29
      89: aload_0
      90: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      93: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      96: pop
      97: aload_0
      98: iconst_2
      99: invokevirtual #41                 // Method setFlags:(I)V
     102: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
       4: invokevirtual #68                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
       7: invokevirtual #69                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getDispatcherType:()Ljakarta/servlet/DispatcherType;
      10: getstatic     #70                 // Field jakarta/servlet/DispatcherType.INCLUDE:Ljakarta/servlet/DispatcherType;
      13: if_acmpeq     29
      16: aload_0
      17: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      20: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      23: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      26: ifeq          30
      29: return
      30: aload_0
      31: getfield      #15                 // Field listener:Ljakarta/servlet/WriteListener;
      34: ifnonnull     361
      37: aload_0
      38: getfield      #6                  // Field state:I
      41: iconst_1
      42: invokestatic  #8                  // Method org/xnio/Bits.anyAreSet:(II)Z
      45: ifeq          49
      48: return
      49: aload_0
      50: iconst_1
      51: invokevirtual #41                 // Method setFlags:(I)V
      54: aload_0
      55: iconst_4
      56: invokevirtual #46                 // Method clearFlags:(I)V
      59: aload_0
      60: getfield      #6                  // Field state:I
      63: iconst_2
      64: invokestatic  #96                 // Method org/xnio/Bits.allAreClear:(II)Z
      67: ifeq          226
      70: aload_0
      71: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      74: ifnonnull     226
      77: aload_0
      78: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      81: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      84: ldc           #76                 // String Transfer-Encoding
      86: invokevirtual #77                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      89: ifnonnull     226
      92: aload_0
      93: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      96: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      99: getstatic     #97                 // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILER_SUPPLIER:Lio/undertow/util/AttachmentKey;
     102: invokevirtual #98                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     105: ifnonnull     226
     108: aload_0
     109: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     112: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     115: getstatic     #99                 // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILERS:Lio/undertow/util/AttachmentKey;
     118: invokevirtual #98                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     121: ifnonnull     226
     124: aload_0
     125: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     128: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
     131: ldc           #100                // String Content-Length
     133: invokevirtual #77                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getHeader:(Ljava/lang/String;)Ljava/lang/String;
     136: astore_1
     137: aload_0
     138: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     141: ifnonnull     188
     144: aload_1
     145: ifnull        166
     148: ldc           #102                // String HEAD
     150: aload_0
     151: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     154: invokevirtual #68                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
     157: invokevirtual #103                // Method io/undertow/servlet/spec/HttpServletRequestImpl.getMethod:()Ljava/lang/String;
     160: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     163: ifne          188
     166: aload_0
     167: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     170: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     173: invokevirtual #105                // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     176: getstatic     #106                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     179: ldc           #107                // String 0
     181: invokevirtual #108                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     184: pop
     185: goto          226
     188: aload_0
     189: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     192: ifnull        226
     195: aload_1
     196: ifnonnull     226
     199: aload_0
     200: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     203: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     206: invokevirtual #105                // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     209: getstatic     #106                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     212: aload_0
     213: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     216: invokevirtual #51                 // Method java/nio/ByteBuffer.position:()I
     219: invokestatic  #109                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     222: invokevirtual #108                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     225: pop
     226: aload_0
     227: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     230: ifnull        238
     233: aload_0
     234: iconst_1
     235: invokevirtual #20                 // Method writeBufferBlocking:(Z)V
     238: aload_0
     239: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     242: ifnonnull     259
     245: aload_0
     246: aload_0
     247: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     250: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     253: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     256: putfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     259: aload_0
     260: bipush        8
     262: invokevirtual #41                 // Method setFlags:(I)V
     265: aload_0
     266: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     269: astore_1
     270: aload_1
     271: ifnull        284
     274: aload_1
     275: invokeinterface #63,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     280: aload_1
     281: invokestatic  #85                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
     284: aload_0
     285: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     288: ifnull        308
     291: aload_0
     292: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     295: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     300: aload_0
     301: aconst_null
     302: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     305: goto          358
     308: aload_0
     309: aconst_null
     310: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     313: goto          358
     316: astore_1
     317: aload_0
     318: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     321: invokestatic  #112                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     324: aload_1
     325: athrow
     326: astore_2
     327: aload_0
     328: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     331: ifnull        351
     334: aload_0
     335: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     338: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     343: aload_0
     344: aconst_null
     345: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     348: goto          356
     351: aload_0
     352: aconst_null
     353: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     356: aload_2
     357: athrow
     358: goto          365
     361: aload_0
     362: invokevirtual #113                // Method closeAsync:()V
     365: return
    Exception table:
       from    to  target type
         226   284   316   Class java/io/IOException
         226   284   316   Class java/lang/RuntimeException
         226   284   316   Class java/lang/Error
         226   284   326   any
         316   327   326   any

  public void closeAsync() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: invokestatic  #8                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifne          24
      11: aload_0
      12: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      15: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      18: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      21: ifeq          25
      24: return
      25: aload_0
      26: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      29: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      32: invokevirtual #114                // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
      35: ifne          60
      38: aload_0
      39: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      42: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      45: invokevirtual #115                // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      48: new           #116                // class io/undertow/servlet/spec/ServletOutputStreamImpl$1
      51: dup
      52: aload_0
      53: invokespecial #117                // Method io/undertow/servlet/spec/ServletOutputStreamImpl$1."<init>":(Lio/undertow/servlet/spec/ServletOutputStreamImpl;)V
      56: invokevirtual #118                // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      59: return
      60: aload_0
      61: iconst_1
      62: invokevirtual #41                 // Method setFlags:(I)V
      65: aload_0
      66: iconst_4
      67: invokevirtual #46                 // Method clearFlags:(I)V
      70: aload_0
      71: getfield      #6                  // Field state:I
      74: iconst_2
      75: invokestatic  #96                 // Method org/xnio/Bits.allAreClear:(II)Z
      78: ifeq          237
      81: aload_0
      82: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      85: ifnonnull     237
      88: aload_0
      89: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      92: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      95: ldc           #76                 // String Transfer-Encoding
      97: invokevirtual #77                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getHeader:(Ljava/lang/String;)Ljava/lang/String;
     100: ifnonnull     237
     103: aload_0
     104: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     107: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     110: getstatic     #97                 // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILER_SUPPLIER:Lio/undertow/util/AttachmentKey;
     113: invokevirtual #98                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     116: ifnonnull     237
     119: aload_0
     120: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     123: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     126: getstatic     #99                 // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILERS:Lio/undertow/util/AttachmentKey;
     129: invokevirtual #98                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     132: ifnonnull     237
     135: aload_0
     136: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     139: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
     142: ldc           #100                // String Content-Length
     144: invokevirtual #77                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getHeader:(Ljava/lang/String;)Ljava/lang/String;
     147: astore_1
     148: aload_0
     149: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     152: ifnonnull     199
     155: aload_1
     156: ifnull        177
     159: ldc           #102                // String HEAD
     161: aload_0
     162: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     165: invokevirtual #68                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
     168: invokevirtual #103                // Method io/undertow/servlet/spec/HttpServletRequestImpl.getMethod:()Ljava/lang/String;
     171: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     174: ifne          199
     177: aload_0
     178: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     181: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     184: invokevirtual #105                // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     187: getstatic     #106                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     190: ldc           #107                // String 0
     192: invokevirtual #108                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     195: pop
     196: goto          237
     199: aload_0
     200: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     203: ifnull        237
     206: aload_1
     207: ifnonnull     237
     210: aload_0
     211: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     214: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     217: invokevirtual #105                // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     220: getstatic     #106                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     223: aload_0
     224: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     227: invokevirtual #51                 // Method java/nio/ByteBuffer.position:()I
     230: invokestatic  #109                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     233: invokevirtual #108                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     236: pop
     237: aload_0
     238: invokevirtual #40                 // Method createChannel:()V
     241: aload_0
     242: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     245: ifnull        286
     248: aload_0
     249: iconst_1
     250: invokevirtual #62                 // Method flushBufferAsync:(Z)Z
     253: ifne          257
     256: return
     257: aload_0
     258: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     261: ifnull        281
     264: aload_0
     265: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     268: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     273: aload_0
     274: aconst_null
     275: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     278: goto          286
     281: aload_0
     282: aconst_null
     283: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     286: aload_0
     287: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     290: invokeinterface #63,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     295: aload_0
     296: bipush        8
     298: invokevirtual #41                 // Method setFlags:(I)V
     301: aload_0
     302: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     305: invokeinterface #64,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
     310: ifne          322
     313: aload_0
     314: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     317: invokeinterface #53,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     322: goto          354
     325: astore_1
     326: aload_0
     327: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     330: ifnull        352
     333: aload_0
     334: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     337: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     342: aload_0
     343: aconst_null
     344: putfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     347: aload_0
     348: aconst_null
     349: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
     352: aload_1
     353: athrow
     354: return
    Exception table:
       from    to  target type
          60   256   325   Class java/io/IOException
          60   256   325   Class java/lang/RuntimeException
          60   256   325   Class java/lang/Error
         257   322   325   Class java/io/IOException
         257   322   325   Class java/lang/RuntimeException
         257   322   325   Class java/lang/Error

  private void createChannel();
    Code:
       0: aload_0
       1: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: ifnonnull     46
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      12: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      15: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      18: putfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      21: aload_0
      22: getfield      #119                // Field internalListener:Lio/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener;
      25: ifnull        46
      28: aload_0
      29: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      32: invokeinterface #120,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      37: aload_0
      38: getfield      #119                // Field internalListener:Lio/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener;
      41: invokeinterface #121,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      46: return

  private java.nio.ByteBuffer buffer();
    Code:
       0: aload_0
       1: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: aload_0
      12: getfield      #4                  // Field bufferSize:Ljava/lang/Integer;
      15: ifnull        37
      18: aload_0
      19: aload_0
      20: getfield      #4                  // Field bufferSize:Ljava/lang/Integer;
      23: invokevirtual #122                // Method java/lang/Integer.intValue:()I
      26: invokestatic  #123                // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      29: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      32: aload_0
      33: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      36: areturn
      37: aload_0
      38: aload_0
      39: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      42: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      45: invokevirtual #26                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      48: invokevirtual #27                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      51: invokeinterface #31,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      56: putfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      59: aload_0
      60: aload_0
      61: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      64: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      69: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      72: aload_0
      73: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      76: areturn

  public void resetBuffer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_2
       5: invokestatic  #96                 // Method org/xnio/Bits.allAreClear:(II)Z
       8: ifeq          45
      11: aload_0
      12: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      15: ifnull        32
      18: aload_0
      19: getfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      22: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      27: aload_0
      28: aconst_null
      29: putfield      #65                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      32: aload_0
      33: aconst_null
      34: putfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
      37: aload_0
      38: lconst_0
      39: putfield      #48                 // Field written:J
      42: goto          54
      45: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      48: invokeinterface #124,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.responseAlreadyCommited:()Ljava/lang/IllegalStateException;
      53: athrow
      54: return

  public void setBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #66                 // Field buffer:Ljava/nio/ByteBuffer;
       4: ifnonnull     20
       7: aload_0
       8: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      11: invokevirtual #9                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      14: invokevirtual #10                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      17: ifeq          29
      20: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      23: invokeinterface #125,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.contentHasBeenWritten:()Ljava/lang/IllegalStateException;
      28: athrow
      29: aload_0
      30: iload_1
      31: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: putfield      #4                  // Field bufferSize:Ljava/lang/Integer;
      37: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: invokestatic  #8                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public boolean isReady();
    Code:
       0: aload_0
       1: getfield      #15                 // Field listener:Ljakarta/servlet/WriteListener;
       4: ifnonnull     16
       7: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      10: invokeinterface #126,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotInAsyncMode:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: getfield      #127                // Field asyncIoStarted:Z
      20: ifne          25
      23: iconst_0
      24: ireturn
      25: aload_0
      26: getfield      #6                  // Field state:I
      29: iconst_4
      30: invokestatic  #8                  // Method org/xnio/Bits.anyAreSet:(II)Z
      33: ifne          54
      36: aload_0
      37: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      40: ifnull        52
      43: aload_0
      44: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      47: invokeinterface #53,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
      52: iconst_0
      53: ireturn
      54: iconst_1
      55: ireturn

  public void setWriteListener(jakarta.servlet.WriteListener);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
       7: invokeinterface #128,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.listenerCannotBeNull:()Ljava/lang/NullPointerException;
      12: athrow
      13: aload_0
      14: getfield      #15                 // Field listener:Ljakarta/servlet/WriteListener;
      17: ifnull        29
      20: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      23: invokeinterface #129,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.listenerAlreadySet:()Ljava/lang/IllegalStateException;
      28: athrow
      29: aload_0
      30: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      33: invokevirtual #68                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
      36: astore_2
      37: aload_2
      38: invokeinterface #130,  1          // InterfaceMethod jakarta/servlet/ServletRequest.isAsyncStarted:()Z
      43: ifne          55
      46: getstatic     #11                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      49: invokeinterface #131,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.asyncNotStarted:()Ljava/lang/IllegalStateException;
      54: athrow
      55: aload_0
      56: aload_2
      57: invokeinterface #132,  1          // InterfaceMethod jakarta/servlet/ServletRequest.getAsyncContext:()Ljakarta/servlet/AsyncContext;
      62: checkcast     #133                // class io/undertow/servlet/spec/AsyncContextImpl
      65: putfield      #134                // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
      68: aload_0
      69: aload_1
      70: putfield      #15                 // Field listener:Ljakarta/servlet/WriteListener;
      73: aload_0
      74: new           #135                // class io/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener
      77: dup
      78: aload_0
      79: invokespecial #136                // Method io/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener."<init>":(Lio/undertow/servlet/spec/ServletOutputStreamImpl;)V
      82: putfield      #119                // Field internalListener:Lio/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener;
      85: aload_0
      86: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      89: ifnull        110
      92: aload_0
      93: getfield      #23                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      96: invokeinterface #120,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     101: aload_0
     102: getfield      #119                // Field internalListener:Lio/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener;
     105: invokeinterface #121,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     110: aload_0
     111: getfield      #134                // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
     114: new           #137                // class io/undertow/servlet/spec/ServletOutputStreamImpl$2
     117: dup
     118: aload_0
     119: invokespecial #138                // Method io/undertow/servlet/spec/ServletOutputStreamImpl$2."<init>":(Lio/undertow/servlet/spec/ServletOutputStreamImpl;)V
     122: invokevirtual #139                // Method io/undertow/servlet/spec/AsyncContextImpl.addAsyncTask:(Ljava/lang/Runnable;)V
     125: return

  io.undertow.servlet.handlers.ServletRequestContext getServletRequestContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
       4: areturn

  private void setFlags(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: istore_2
       5: getstatic     #140                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iload_2
      10: iload_2
      11: iload_1
      12: ior
      13: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      16: ifeq          0
      19: return

  private void clearFlags(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: istore_2
       5: getstatic     #140                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iload_2
      10: iload_2
      11: iload_1
      12: iconst_m1
      13: ixor
      14: iand
      15: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      18: ifeq          0
      21: return

  static {};
    Code:
       0: ldc           #7                  // class io/undertow/servlet/spec/ServletOutputStreamImpl
       2: ldc           #142                // String state
       4: invokestatic  #143                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #140                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
