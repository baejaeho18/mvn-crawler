Compiled from "UpgradeServletOutputStream.java"
public class io.undertow.servlet.spec.UpgradeServletOutputStream extends jakarta.servlet.ServletOutputStream {
  private final org.xnio.channels.StreamSinkChannel channel;

  private jakarta.servlet.WriteListener listener;

  private final java.util.concurrent.Executor ioExecutor;

  private static final int FLAG_READY;

  private static final int FLAG_CLOSED;

  private static final int FLAG_DELEGATE_SHUTDOWN;

  private int state;

  private java.nio.ByteBuffer buffer;

  protected io.undertow.servlet.spec.UpgradeServletOutputStream(org.xnio.channels.StreamSinkChannel, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/servlet/ServletOutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field ioExecutor:Ljava/util/concurrent/Executor;
      14: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #4                  // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_2
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #8                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      14: invokeinterface #9,  1            // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: getfield      #10                 // Field listener:Ljakarta/servlet/WriteListener;
      24: ifnonnull     44
      27: aload_0
      28: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      31: aload_1
      32: iload_2
      33: iload_3
      34: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      37: invokestatic  #12                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)I
      40: pop
      41: goto          182
      44: aload_0
      45: getfield      #5                  // Field state:I
      48: iconst_1
      49: invokestatic  #13                 // Method org/xnio/Bits.anyAreClear:(II)Z
      52: ifeq          64
      55: getstatic     #8                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      58: invokeinterface #14,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotReady:()Ljava/lang/IllegalStateException;
      63: athrow
      64: aload_1
      65: invokestatic  #15                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      68: astore        5
      70: aload_0
      71: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      74: aload         5
      76: invokeinterface #16,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      81: istore        4
      83: iload         4
      85: ifne          174
      88: aload         5
      90: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      93: invokestatic  #18                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      96: astore        6
      98: aload         6
     100: aload         5
     102: invokevirtual #19                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     105: pop
     106: aload         6
     108: invokevirtual #20                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     111: pop
     112: aload_0
     113: aload         6
     115: putfield      #21                 // Field buffer:Ljava/nio/ByteBuffer;
     118: aload_0
     119: aload_0
     120: getfield      #5                  // Field state:I
     123: bipush        -2
     125: iand
     126: putfield      #5                  // Field state:I
     129: invokestatic  #22                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     132: aload_0
     133: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     136: invokeinterface #23,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
     141: if_acmpne     156
     144: aload_0
     145: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     148: invokeinterface #24,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     153: goto          173
     156: aload_0
     157: getfield      #3                  // Field ioExecutor:Ljava/util/concurrent/Executor;
     160: new           #25                 // class io/undertow/servlet/spec/UpgradeServletOutputStream$1
     163: dup
     164: aload_0
     165: invokespecial #26                 // Method io/undertow/servlet/spec/UpgradeServletOutputStream$1."<init>":(Lio/undertow/servlet/spec/UpgradeServletOutputStream;)V
     168: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     173: return
     174: aload         5
     176: invokevirtual #28                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     179: ifne          70
     182: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: newarray       byte
       4: dup
       5: iconst_0
       6: iload_1
       7: i2b
       8: bastore
       9: iconst_0
      10: iconst_1
      11: invokevirtual #4                  // Method write:([BII)V
      14: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_2
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #8                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      14: invokeinterface #9,  1            // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: getfield      #10                 // Field listener:Ljakarta/servlet/WriteListener;
      24: ifnonnull     34
      27: aload_0
      28: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      31: invokestatic  #29                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
      34: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field state:I
       5: iconst_2
       6: ior
       7: putfield      #5                  // Field state:I
      10: aload_0
      11: dup
      12: getfield      #5                  // Field state:I
      15: bipush        -2
      17: iand
      18: putfield      #5                  // Field state:I
      21: aload_0
      22: getfield      #10                 // Field listener:Ljakarta/servlet/WriteListener;
      25: ifnonnull     57
      28: aload_0
      29: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      32: invokeinterface #30,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      37: aload_0
      38: dup
      39: getfield      #5                  // Field state:I
      42: iconst_4
      43: ior
      44: putfield      #5                  // Field state:I
      47: aload_0
      48: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      51: invokestatic  #29                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
      54: goto          139
      57: aload_0
      58: getfield      #21                 // Field buffer:Ljava/nio/ByteBuffer;
      61: ifnonnull     139
      64: aload_0
      65: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      68: invokeinterface #30,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      73: aload_0
      74: dup
      75: getfield      #5                  // Field state:I
      78: iconst_4
      79: ior
      80: putfield      #5                  // Field state:I
      83: aload_0
      84: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      87: invokeinterface #31,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
      92: ifne          139
      95: invokestatic  #22                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      98: aload_0
      99: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     102: invokeinterface #23,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
     107: if_acmpne     122
     110: aload_0
     111: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     114: invokeinterface #24,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     119: goto          139
     122: aload_0
     123: getfield      #3                  // Field ioExecutor:Ljava/util/concurrent/Executor;
     126: new           #32                 // class io/undertow/servlet/spec/UpgradeServletOutputStream$2
     129: dup
     130: aload_0
     131: invokespecial #33                 // Method io/undertow/servlet/spec/UpgradeServletOutputStream$2."<init>":(Lio/undertow/servlet/spec/UpgradeServletOutputStream;)V
     134: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     139: return

  void closeBlocking() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field state:I
       5: iconst_2
       6: ior
       7: putfield      #5                  // Field state:I
      10: aload_0
      11: getfield      #21                 // Field buffer:Ljava/nio/ByteBuffer;
      14: ifnull        29
      17: aload_0
      18: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      21: aload_0
      22: getfield      #21                 // Field buffer:Ljava/nio/ByteBuffer;
      25: invokestatic  #12                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)I
      28: pop
      29: aload_0
      30: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      33: invokeinterface #30,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      38: aload_0
      39: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      42: invokestatic  #29                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
      45: goto          60
      48: astore_1
      49: aload_0
      50: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      53: invokeinterface #35,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.close:()V
      58: aload_1
      59: athrow
      60: return
    Exception table:
       from    to  target type
          10    45    48   Class java/io/IOException

  public boolean isReady();
    Code:
       0: aload_0
       1: getfield      #10                 // Field listener:Ljakarta/servlet/WriteListener;
       4: ifnonnull     16
       7: getstatic     #8                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      10: invokeinterface #36,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotInAsyncMode:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: getfield      #5                  // Field state:I
      20: iconst_1
      21: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
      24: ireturn

  public void setWriteListener(jakarta.servlet.WriteListener);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #8                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
       7: ldc           #37                 // String writeListener
       9: invokeinterface #38,  2           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: getfield      #10                 // Field listener:Ljakarta/servlet/WriteListener;
      19: ifnull        31
      22: getstatic     #8                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      25: invokeinterface #39,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.listenerAlreadySet:()Ljava/lang/IllegalStateException;
      30: athrow
      31: aload_0
      32: aload_1
      33: putfield      #10                 // Field listener:Ljakarta/servlet/WriteListener;
      36: aload_0
      37: getfield      #2                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      40: invokeinterface #40,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      45: new           #41                 // class io/undertow/servlet/spec/UpgradeServletOutputStream$WriteChannelListener
      48: dup
      49: aload_0
      50: invokespecial #42                 // Method io/undertow/servlet/spec/UpgradeServletOutputStream$WriteChannelListener."<init>":(Lio/undertow/servlet/spec/UpgradeServletOutputStream;)V
      53: invokeinterface #43,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      58: aload_0
      59: dup
      60: getfield      #5                  // Field state:I
      63: iconst_1
      64: ior
      65: putfield      #5                  // Field state:I
      68: aload_0
      69: getfield      #3                  // Field ioExecutor:Ljava/util/concurrent/Executor;
      72: new           #44                 // class io/undertow/servlet/spec/UpgradeServletOutputStream$3
      75: dup
      76: aload_0
      77: invokespecial #45                 // Method io/undertow/servlet/spec/UpgradeServletOutputStream$3."<init>":(Lio/undertow/servlet/spec/UpgradeServletOutputStream;)V
      80: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      85: return
}
