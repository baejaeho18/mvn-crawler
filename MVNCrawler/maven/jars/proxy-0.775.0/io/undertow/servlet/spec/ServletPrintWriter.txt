Compiled from "ServletPrintWriter.java"
public class io.undertow.servlet.spec.ServletPrintWriter {
  private static final char[] EMPTY_CHAR;

  private final io.undertow.servlet.spec.ServletOutputStreamImpl outputStream;

  private final java.lang.String charset;

  private java.nio.charset.CharsetEncoder charsetEncoder;

  private boolean error;

  private boolean closed;

  private char[] underflow;

  static final boolean $assertionsDisabled;

  public io.undertow.servlet.spec.ServletPrintWriter(io.undertow.servlet.spec.ServletOutputStreamImpl, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field error:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field closed:Z
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field charset:Ljava/lang/String;
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      24: aload_2
      25: ldc           #6                  // String utf-8
      27: invokevirtual #7                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      30: ifne          46
      33: aload_2
      34: ldc           #8                  // String iso-8859-1
      36: invokevirtual #7                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      39: ifne          46
      42: aload_0
      43: invokevirtual #9                  // Method createEncoder:()V
      46: return

  private void createEncoder() throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field charset:Ljava/lang/String;
       5: invokestatic  #10                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       8: invokevirtual #11                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      11: putfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      14: aload_0
      15: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      18: getstatic     #13                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      21: invokevirtual #14                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      24: pop
      25: aload_0
      26: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      29: getstatic     #13                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      32: invokevirtual #15                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      35: pop
      36: goto          60
      39: astore_1
      40: new           #17                 // class java/io/UnsupportedEncodingException
      43: dup
      44: aload_1
      45: invokevirtual #18                 // Method java/nio/charset/UnsupportedCharsetException.getMessage:()Ljava/lang/String;
      48: invokespecial #19                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
      51: astore_2
      52: aload_2
      53: aload_1
      54: invokevirtual #20                 // Method java/io/UnsupportedEncodingException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      57: pop
      58: aload_2
      59: athrow
      60: return
    Exception table:
       from    to  target type
           0    36    39   Class java/nio/charset/UnsupportedCharsetException

  public void flush();
    Code:
       0: aload_0
       1: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
       4: invokevirtual #21                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flush:()V
       7: goto          16
      10: astore_1
      11: aload_0
      12: iconst_1
      13: putfield      #2                  // Field error:Z
      16: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
       4: invokevirtual #23                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.getServletRequestContext:()Lio/undertow/servlet/handlers/ServletRequestContext;
       7: invokevirtual #24                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
      10: invokevirtual #25                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getDispatcherType:()Ljakarta/servlet/DispatcherType;
      13: getstatic     #26                 // Field jakarta/servlet/DispatcherType.INCLUDE:Ljakarta/servlet/DispatcherType;
      16: if_acmpne     20
      19: return
      20: aload_0
      21: getfield      #3                  // Field closed:Z
      24: ifeq          28
      27: return
      28: aload_0
      29: iconst_1
      30: putfield      #3                  // Field closed:Z
      33: iconst_0
      34: istore_1
      35: aload_0
      36: getfield      #27                 // Field underflow:[C
      39: ifnonnull     52
      42: getstatic     #28                 // Field EMPTY_CHAR:[C
      45: invokestatic  #29                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;
      48: astore_2
      49: goto          65
      52: aload_0
      53: getfield      #27                 // Field underflow:[C
      56: invokestatic  #29                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;
      59: astore_2
      60: aload_0
      61: aconst_null
      62: putfield      #27                 // Field underflow:[C
      65: aload_0
      66: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      69: ifnull        143
      72: aload_0
      73: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      76: invokevirtual #30                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.underlyingBuffer:()Ljava/nio/ByteBuffer;
      79: astore_3
      80: aload_3
      81: ifnonnull     90
      84: aload_0
      85: iconst_1
      86: putfield      #2                  // Field error:Z
      89: return
      90: aload_0
      91: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      94: aload_2
      95: aload_3
      96: iconst_1
      97: invokevirtual #31                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     100: astore        4
     102: aload         4
     104: invokevirtual #32                 // Method java/nio/charset/CoderResult.isOverflow:()Z
     107: ifeq          137
     110: aload_0
     111: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     114: invokevirtual #33                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
     117: aload_3
     118: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
     121: ifne          139
     124: aload_0
     125: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     128: invokevirtual #35                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.close:()V
     131: aload_0
     132: iconst_1
     133: putfield      #2                  // Field error:Z
     136: return
     137: iconst_1
     138: istore_1
     139: iload_1
     140: ifeq          72
     143: aload_0
     144: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     147: invokevirtual #35                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.close:()V
     150: goto          159
     153: astore_1
     154: aload_0
     155: iconst_1
     156: putfield      #2                  // Field error:Z
     159: return
    Exception table:
       from    to  target type
          33    89   153   Class java/io/IOException
          90   136   153   Class java/io/IOException
         137   150   153   Class java/io/IOException

  public boolean checkError();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method flush:()V
       4: aload_0
       5: getfield      #2                  // Field error:Z
       8: ireturn

  public void write(java.nio.CharBuffer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
       4: invokevirtual #30                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.underlyingBuffer:()Ljava/nio/ByteBuffer;
       7: astore_2
       8: aload_2
       9: ifnonnull     18
      12: aload_0
      13: iconst_1
      14: putfield      #2                  // Field error:Z
      17: return
      18: aload_2
      19: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      22: ifne          45
      25: aload_0
      26: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      29: invokevirtual #33                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
      32: aload_2
      33: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      36: ifne          45
      39: aload_0
      40: iconst_1
      41: putfield      #2                  // Field error:Z
      44: return
      45: aload_0
      46: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      49: ifnonnull     56
      52: aload_0
      53: invokevirtual #9                  // Method createEncoder:()V
      56: aload_0
      57: getfield      #27                 // Field underflow:[C
      60: ifnonnull     68
      63: aload_1
      64: astore_3
      65: goto          125
      68: aload_0
      69: getfield      #27                 // Field underflow:[C
      72: arraylength
      73: aload_1
      74: invokevirtual #38                 // Method java/nio/CharBuffer.remaining:()I
      77: iadd
      78: newarray       char
      80: astore        4
      82: aload_0
      83: getfield      #27                 // Field underflow:[C
      86: iconst_0
      87: aload         4
      89: iconst_0
      90: aload_0
      91: getfield      #27                 // Field underflow:[C
      94: arraylength
      95: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: aload_1
      99: aload         4
     101: aload_0
     102: getfield      #27                 // Field underflow:[C
     105: arraylength
     106: aload_1
     107: invokevirtual #38                 // Method java/nio/CharBuffer.remaining:()I
     110: invokevirtual #40                 // Method java/nio/CharBuffer.get:([CII)Ljava/nio/CharBuffer;
     113: pop
     114: aload         4
     116: invokestatic  #29                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;
     119: astore_3
     120: aload_0
     121: aconst_null
     122: putfield      #27                 // Field underflow:[C
     125: iconst_m1
     126: istore        4
     128: aload_0
     129: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     132: invokevirtual #41                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.remainingContentLength:()J
     135: lstore        5
     137: lload         5
     139: lconst_0
     140: lcmp
     141: ifle          352
     144: aload_3
     145: invokevirtual #42                 // Method java/nio/CharBuffer.hasRemaining:()Z
     148: ifeq          352
     151: aload_2
     152: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
     155: istore        7
     157: aload_0
     158: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
     161: aload_3
     162: aload_2
     163: iconst_0
     164: invokevirtual #31                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     167: astore        8
     169: iload         7
     171: aload_2
     172: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
     175: isub
     176: i2l
     177: lstore        9
     179: lload         5
     181: lload         9
     183: lcmp
     184: ifge          207
     187: aload_2
     188: aload_2
     189: invokevirtual #43                 // Method java/nio/ByteBuffer.position:()I
     192: lload         9
     194: lload         5
     196: lsub
     197: l2i
     198: isub
     199: invokevirtual #44                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     202: pop
     203: lload         5
     205: lstore        9
     207: lload         5
     209: lload         9
     211: lsub
     212: lstore        5
     214: aload_0
     215: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     218: lload         9
     220: invokevirtual #45                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.updateWritten:(J)V
     223: aload         8
     225: invokevirtual #32                 // Method java/nio/charset/CoderResult.isOverflow:()Z
     228: ifne          238
     231: aload_2
     232: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     235: ifne          258
     238: aload_0
     239: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
     242: invokevirtual #33                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
     245: aload_2
     246: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     249: ifne          258
     252: aload_0
     253: iconst_1
     254: putfield      #2                  // Field error:Z
     257: return
     258: aload         8
     260: invokevirtual #46                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
     263: ifeq          286
     266: aload_0
     267: aload_3
     268: invokevirtual #38                 // Method java/nio/CharBuffer.remaining:()I
     271: newarray       char
     273: putfield      #27                 // Field underflow:[C
     276: aload_3
     277: aload_0
     278: getfield      #27                 // Field underflow:[C
     281: invokevirtual #47                 // Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
     284: pop
     285: return
     286: aload         8
     288: invokevirtual #48                 // Method java/nio/charset/CoderResult.isError:()Z
     291: ifeq          300
     294: aload_0
     295: iconst_1
     296: putfield      #2                  // Field error:Z
     299: return
     300: aload         8
     302: invokevirtual #49                 // Method java/nio/charset/CoderResult.isUnmappable:()Z
     305: ifeq          314
     308: aload_0
     309: iconst_1
     310: putfield      #2                  // Field error:Z
     313: return
     314: iload         4
     316: aload_3
     317: invokevirtual #38                 // Method java/nio/CharBuffer.remaining:()I
     320: if_icmpne     343
     323: aload_0
     324: aload_3
     325: invokevirtual #38                 // Method java/nio/CharBuffer.remaining:()I
     328: newarray       char
     330: putfield      #27                 // Field underflow:[C
     333: aload_3
     334: aload_0
     335: getfield      #27                 // Field underflow:[C
     338: invokevirtual #47                 // Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
     341: pop
     342: return
     343: aload_3
     344: invokevirtual #38                 // Method java/nio/CharBuffer.remaining:()I
     347: istore        4
     349: goto          137
     352: goto          361
     355: astore_3
     356: aload_0
     357: iconst_1
     358: putfield      #2                  // Field error:Z
     361: return
    Exception table:
       from    to  target type
          18    44   355   Class java/io/IOException
          45   257   355   Class java/io/IOException
         258   285   355   Class java/io/IOException
         286   299   355   Class java/io/IOException
         300   313   355   Class java/io/IOException
         314   342   355   Class java/io/IOException
         343   352   355   Class java/io/IOException

  public void write(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2c
       3: invokestatic  #50                 // Method java/lang/Character.toString:(C)Ljava/lang/String;
       6: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
       9: return

  public void write(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
       4: ifnonnull     108
       7: aload_0
       8: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      11: invokevirtual #30                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.underlyingBuffer:()Ljava/nio/ByteBuffer;
      14: astore        4
      16: aload         4
      18: ifnonnull     27
      21: aload_0
      22: iconst_1
      23: putfield      #2                  // Field error:Z
      26: return
      27: aload         4
      29: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      32: istore        5
      34: iload_2
      35: iload_3
      36: iadd
      37: istore        6
      39: aload_0
      40: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      43: aload         4
      45: aload_1
      46: iload_2
      47: iload_2
      48: iload_3
      49: iadd
      50: invokestatic  #52                 // Method writeAndFlushAscii:(Lio/undertow/servlet/spec/ServletOutputStreamImpl;Ljava/nio/ByteBuffer;[CII)I
      53: istore        7
      55: aload_0
      56: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      59: iload         5
      61: aload         4
      63: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      66: isub
      67: i2l
      68: invokevirtual #45                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.updateWritten:(J)V
      71: iload         7
      73: iload         6
      75: if_icmpne     79
      78: return
      79: aload_1
      80: iload         7
      82: iload_3
      83: iload         7
      85: iload_2
      86: isub
      87: isub
      88: invokestatic  #53                 // Method java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
      91: astore        8
      93: aload_0
      94: aload         8
      96: invokevirtual #54                 // Method write:(Ljava/nio/CharBuffer;)V
      99: return
     100: astore        4
     102: aload_0
     103: iconst_0
     104: putfield      #2                  // Field error:Z
     107: return
     108: aload_1
     109: iload_2
     110: iload_3
     111: invokestatic  #53                 // Method java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
     114: astore        4
     116: aload_0
     117: aload         4
     119: invokevirtual #54                 // Method write:(Ljava/nio/CharBuffer;)V
     122: return
    Exception table:
       from    to  target type
           7    26   100   Class java/io/IOException
          27    78   100   Class java/io/IOException
          79    99   100   Class java/io/IOException

  private static int writeAndFlushAscii(io.undertow.servlet.spec.ServletOutputStreamImpl, java.nio.ByteBuffer, char[], int, int) throws java.io.IOException;
    Code:
       0: getstatic     #55                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_1
       7: invokevirtual #56                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
      10: getstatic     #57                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      13: if_acmpeq     24
      16: new           #58                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: iload_3
      25: istore        5
      27: aload_0
      28: invokevirtual #41                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.remainingContentLength:()J
      31: lstore        6
      33: iload         5
      35: iload         4
      37: if_icmpge     153
      40: aload_1
      41: invokevirtual #43                 // Method java/nio/ByteBuffer.position:()I
      44: istore        8
      46: aload_1
      47: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      50: istore        9
      52: iload         4
      54: iload         5
      56: isub
      57: istore        10
      59: iload         10
      61: iload         9
      63: invokestatic  #60                 // Method java/lang/Math.min:(II)I
      66: istore        11
      68: aload_1
      69: iload         8
      71: aload_2
      72: iload         5
      74: iload         11
      76: invokestatic  #61                 // Method setAsciiBE:(Ljava/nio/ByteBuffer;I[CII)I
      79: istore        12
      81: iload         5
      83: iload         12
      85: iadd
      86: istore        5
      88: lload         6
      90: iload         12
      92: i2l
      93: lsub
      94: dup2
      95: lstore        6
      97: lconst_0
      98: lcmp
      99: ifge          119
     102: aload_1
     103: iload         8
     105: iload         12
     107: iadd
     108: lload         6
     110: l2i
     111: iadd
     112: invokevirtual #44                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     115: pop
     116: goto          129
     119: aload_1
     120: iload         8
     122: iload         12
     124: iadd
     125: invokevirtual #44                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     128: pop
     129: aload_1
     130: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     133: ifne          140
     136: aload_0
     137: invokevirtual #33                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
     140: iload         12
     142: iload         11
     144: if_icmpge     150
     147: iload         5
     149: ireturn
     150: goto          33
     153: iload         5
     155: ireturn

  private static int setAsciiBE(java.nio.ByteBuffer, int, char[], int, int);
    Code:
       0: iload         4
       2: iconst_3
       3: iushr
       4: istore        5
       6: iconst_0
       7: istore        6
       9: iload         6
      11: iload         5
      13: if_icmpge     141
      16: aload_2
      17: iload_3
      18: caload
      19: i2l
      20: bipush        48
      22: lshl
      23: aload_2
      24: iload_3
      25: iconst_2
      26: iadd
      27: caload
      28: i2l
      29: bipush        32
      31: lshl
      32: lor
      33: aload_2
      34: iload_3
      35: iconst_4
      36: iadd
      37: caload
      38: bipush        16
      40: ishl
      41: i2l
      42: lor
      43: aload_2
      44: iload_3
      45: bipush        6
      47: iadd
      48: caload
      49: i2l
      50: lor
      51: lstore        7
      53: aload_2
      54: iload_3
      55: iconst_1
      56: iadd
      57: caload
      58: i2l
      59: bipush        48
      61: lshl
      62: aload_2
      63: iload_3
      64: iconst_3
      65: iadd
      66: caload
      67: i2l
      68: bipush        32
      70: lshl
      71: lor
      72: aload_2
      73: iload_3
      74: iconst_5
      75: iadd
      76: caload
      77: bipush        16
      79: ishl
      80: i2l
      81: lor
      82: aload_2
      83: iload_3
      84: bipush        7
      86: iadd
      87: caload
      88: i2l
      89: lor
      90: lstore        9
      92: lload         7
      94: lload         9
      96: lor
      97: ldc2_w        #62                 // long -35747867511423104l
     100: land
     101: lconst_0
     102: lcmp
     103: ifeq          111
     106: iload         6
     108: iconst_3
     109: ishl
     110: ireturn
     111: lload         7
     113: bipush        8
     115: lshl
     116: lload         9
     118: lor
     119: lstore        11
     121: aload_0
     122: iload_1
     123: lload         11
     125: invokevirtual #64                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
     128: pop
     129: iinc          1, 8
     132: iinc          3, 8
     135: iinc          6, 1
     138: goto          9
     141: iload         4
     143: bipush        7
     145: iand
     146: istore        6
     148: iload         6
     150: ifle          204
     153: iconst_0
     154: istore        7
     156: iload         7
     158: iload         6
     160: if_icmpge     204
     163: aload_2
     164: iload_3
     165: iload         7
     167: iadd
     168: caload
     169: istore        8
     171: iload         8
     173: bipush        127
     175: if_icmple     186
     178: iload         5
     180: iconst_3
     181: ishl
     182: iload         7
     184: iadd
     185: ireturn
     186: aload_0
     187: iload_1
     188: iload         7
     190: iadd
     191: iload         8
     193: i2b
     194: invokevirtual #65                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     197: pop
     198: iinc          7, 1
     201: goto          156
     204: iload         4
     206: ireturn

  public void write(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #66                 // Method write:([CII)V
       8: return

  public void write(java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
       4: ifnonnull     111
       7: aload_0
       8: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      11: invokevirtual #30                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.underlyingBuffer:()Ljava/nio/ByteBuffer;
      14: astore        4
      16: aload         4
      18: ifnonnull     27
      21: aload_0
      22: iconst_1
      23: putfield      #2                  // Field error:Z
      26: return
      27: aload         4
      29: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      32: istore        5
      34: iload_2
      35: iload_3
      36: iadd
      37: istore        6
      39: aload_0
      40: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      43: aload         4
      45: aload_1
      46: iload_2
      47: iload_2
      48: iload_3
      49: iadd
      50: invokestatic  #67                 // Method writeAndFlushAscii:(Lio/undertow/servlet/spec/ServletOutputStreamImpl;Ljava/nio/ByteBuffer;Ljava/lang/String;II)I
      53: istore        7
      55: aload_0
      56: getfield      #5                  // Field outputStream:Lio/undertow/servlet/spec/ServletOutputStreamImpl;
      59: iload         5
      61: aload         4
      63: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      66: isub
      67: i2l
      68: invokevirtual #45                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.updateWritten:(J)V
      71: iload         7
      73: iload         6
      75: if_icmpne     79
      78: return
      79: aload_1
      80: invokevirtual #68                 // Method java/lang/String.toCharArray:()[C
      83: iload         7
      85: iload_3
      86: iload         7
      88: iload_2
      89: isub
      90: isub
      91: invokestatic  #53                 // Method java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
      94: astore        8
      96: aload_0
      97: aload         8
      99: invokevirtual #54                 // Method write:(Ljava/nio/CharBuffer;)V
     102: return
     103: astore        4
     105: aload_0
     106: iconst_0
     107: putfield      #2                  // Field error:Z
     110: return
     111: aload_1
     112: iload_2
     113: iload_2
     114: iload_3
     115: iadd
     116: invokestatic  #69                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
     119: astore        4
     121: aload_0
     122: aload         4
     124: invokevirtual #54                 // Method write:(Ljava/nio/CharBuffer;)V
     127: return
    Exception table:
       from    to  target type
           7    26   103   Class java/io/IOException
          27    78   103   Class java/io/IOException
          79   102   103   Class java/io/IOException

  private static int writeAndFlushAscii(io.undertow.servlet.spec.ServletOutputStreamImpl, java.nio.ByteBuffer, java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: getstatic     #55                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_1
       7: invokevirtual #56                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
      10: getstatic     #57                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      13: if_acmpeq     24
      16: new           #58                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: iload_3
      25: istore        5
      27: aload_0
      28: invokevirtual #41                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.remainingContentLength:()J
      31: lstore        6
      33: iload         5
      35: iload         4
      37: if_icmpge     153
      40: aload_1
      41: invokevirtual #43                 // Method java/nio/ByteBuffer.position:()I
      44: istore        8
      46: aload_1
      47: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      50: istore        9
      52: iload         4
      54: iload         5
      56: isub
      57: istore        10
      59: iload         10
      61: iload         9
      63: invokestatic  #60                 // Method java/lang/Math.min:(II)I
      66: istore        11
      68: aload_1
      69: iload         8
      71: aload_2
      72: iload         5
      74: iload         11
      76: invokestatic  #70                 // Method setAsciiBE:(Ljava/nio/ByteBuffer;ILjava/lang/String;II)I
      79: istore        12
      81: iload         5
      83: iload         12
      85: iadd
      86: istore        5
      88: lload         6
      90: iload         12
      92: i2l
      93: lsub
      94: dup2
      95: lstore        6
      97: lconst_0
      98: lcmp
      99: ifge          119
     102: aload_1
     103: iload         8
     105: iload         12
     107: iadd
     108: lload         6
     110: l2i
     111: iadd
     112: invokevirtual #44                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     115: pop
     116: goto          129
     119: aload_1
     120: iload         8
     122: iload         12
     124: iadd
     125: invokevirtual #44                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     128: pop
     129: aload_1
     130: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     133: ifne          140
     136: aload_0
     137: invokevirtual #33                 // Method io/undertow/servlet/spec/ServletOutputStreamImpl.flushInternal:()V
     140: iload         12
     142: iload         11
     144: if_icmpge     150
     147: iload         5
     149: ireturn
     150: goto          33
     153: iload         5
     155: ireturn

  private static int setAsciiBE(java.nio.ByteBuffer, int, java.lang.String, int, int);
    Code:
       0: iload         4
       2: iconst_3
       3: iushr
       4: istore        5
       6: iconst_0
       7: istore        6
       9: iload         6
      11: iload         5
      13: if_icmpge     157
      16: aload_2
      17: iload_3
      18: invokevirtual #71                 // Method java/lang/String.charAt:(I)C
      21: i2l
      22: bipush        48
      24: lshl
      25: aload_2
      26: iload_3
      27: iconst_2
      28: iadd
      29: invokevirtual #71                 // Method java/lang/String.charAt:(I)C
      32: i2l
      33: bipush        32
      35: lshl
      36: lor
      37: aload_2
      38: iload_3
      39: iconst_4
      40: iadd
      41: invokevirtual #71                 // Method java/lang/String.charAt:(I)C
      44: bipush        16
      46: ishl
      47: i2l
      48: lor
      49: aload_2
      50: iload_3
      51: bipush        6
      53: iadd
      54: invokevirtual #71                 // Method java/lang/String.charAt:(I)C
      57: i2l
      58: lor
      59: lstore        7
      61: aload_2
      62: iload_3
      63: iconst_1
      64: iadd
      65: invokevirtual #71                 // Method java/lang/String.charAt:(I)C
      68: i2l
      69: bipush        48
      71: lshl
      72: aload_2
      73: iload_3
      74: iconst_3
      75: iadd
      76: invokevirtual #71                 // Method java/lang/String.charAt:(I)C
      79: i2l
      80: bipush        32
      82: lshl
      83: lor
      84: aload_2
      85: iload_3
      86: iconst_5
      87: iadd
      88: invokevirtual #71                 // Method java/lang/String.charAt:(I)C
      91: bipush        16
      93: ishl
      94: i2l
      95: lor
      96: aload_2
      97: iload_3
      98: bipush        7
     100: iadd
     101: invokevirtual #71                 // Method java/lang/String.charAt:(I)C
     104: i2l
     105: lor
     106: lstore        9
     108: lload         7
     110: lload         9
     112: lor
     113: ldc2_w        #62                 // long -35747867511423104l
     116: land
     117: lconst_0
     118: lcmp
     119: ifeq          127
     122: iload         6
     124: iconst_3
     125: ishl
     126: ireturn
     127: lload         7
     129: bipush        8
     131: lshl
     132: lload         9
     134: lor
     135: lstore        11
     137: aload_0
     138: iload_1
     139: lload         11
     141: invokevirtual #64                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
     144: pop
     145: iinc          1, 8
     148: iinc          3, 8
     151: iinc          6, 1
     154: goto          9
     157: iload         4
     159: bipush        7
     161: iand
     162: istore        6
     164: iload         6
     166: ifle          222
     169: iconst_0
     170: istore        7
     172: iload         7
     174: iload         6
     176: if_icmpge     222
     179: aload_2
     180: iload_3
     181: iload         7
     183: iadd
     184: invokevirtual #71                 // Method java/lang/String.charAt:(I)C
     187: istore        8
     189: iload         8
     191: bipush        127
     193: if_icmple     204
     196: iload         5
     198: iconst_3
     199: ishl
     200: iload         7
     202: iadd
     203: ireturn
     204: aload_0
     205: iload_1
     206: iload         7
     208: iadd
     209: iload         8
     211: i2b
     212: invokevirtual #65                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     215: pop
     216: iinc          7, 1
     219: goto          172
     222: iload         4
     224: ireturn

  public void write(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #72                 // Method java/lang/String.length:()I
       7: invokevirtual #73                 // Method write:(Ljava/lang/String;II)V
      10: return

  public void print(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #74                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       5: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #50                 // Method java/lang/Character.toString:(C)Ljava/lang/String;
       5: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #75                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       5: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #76                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       5: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #77                 // Method java/lang/Float.toString:(F)Ljava/lang/String;
       5: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #78                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
       5: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;
       5: invokevirtual #54                 // Method write:(Ljava/nio/CharBuffer;)V
       8: return

  public void print(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     10
       5: ldc           #79                 // String null
       7: goto          11
      10: aload_1
      11: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
      14: return

  public void print(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     10
       5: ldc           #79                 // String null
       7: goto          14
      10: aload_1
      11: invokevirtual #80                 // Method java/lang/Object.toString:()Ljava/lang/String;
      14: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
      17: return

  public void println();
    Code:
       0: aload_0
       1: ldc           #81                 // String \r\n
       3: invokevirtual #82                 // Method print:(Ljava/lang/String;)V
       6: return

  public void println(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #83                 // Method print:(Z)V
       5: aload_0
       6: invokevirtual #84                 // Method println:()V
       9: return

  public void println(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #85                 // Method print:(C)V
       5: aload_0
       6: invokevirtual #84                 // Method println:()V
       9: return

  public void println(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #86                 // Method print:(I)V
       5: aload_0
       6: invokevirtual #84                 // Method println:()V
       9: return

  public void println(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #87                 // Method print:(J)V
       5: aload_0
       6: invokevirtual #84                 // Method println:()V
       9: return

  public void println(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokevirtual #88                 // Method print:(F)V
       5: aload_0
       6: invokevirtual #84                 // Method println:()V
       9: return

  public void println(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #89                 // Method print:(D)V
       5: aload_0
       6: invokevirtual #84                 // Method println:()V
       9: return

  public void println(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method print:([C)V
       5: aload_0
       6: invokevirtual #84                 // Method println:()V
       9: return

  public void println(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method print:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #84                 // Method println:()V
       9: return

  public void println(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #91                 // Method print:(Ljava/lang/Object;)V
       5: aload_0
       6: invokevirtual #84                 // Method println:()V
       9: return

  public void printf(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       6: invokevirtual #82                 // Method print:(Ljava/lang/String;)V
       9: return

  public void printf(java.util.Locale, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #93                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       7: invokevirtual #82                 // Method print:(Ljava/lang/String;)V
      10: return

  public void format(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #94                 // Method printf:(Ljava/lang/String;[Ljava/lang/Object;)V
       6: return

  public void format(java.util.Locale, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #95                 // Method printf:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)V
       7: return

  public void append(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: ldc           #79                 // String null
       7: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
      10: goto          23
      13: aload_0
      14: aload_1
      15: invokeinterface #96,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      20: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
      23: return

  public void append(java.lang.CharSequence, int, int);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: ldc           #79                 // String null
       6: goto          10
       9: aload_1
      10: astore        4
      12: aload_0
      13: aload         4
      15: iload_2
      16: iload_3
      17: invokeinterface #97,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      22: invokeinterface #96,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      27: invokevirtual #51                 // Method write:(Ljava/lang/String;)V
      30: return

  public void append(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #98                 // Method write:(I)V
       5: return

  static {};
    Code:
       0: ldc           #99                 // class io/undertow/servlet/spec/ServletPrintWriter
       2: invokevirtual #100                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #55                 // Field $assertionsDisabled:Z
      16: iconst_0
      17: newarray       char
      19: putstatic     #28                 // Field EMPTY_CHAR:[C
      22: return
}
