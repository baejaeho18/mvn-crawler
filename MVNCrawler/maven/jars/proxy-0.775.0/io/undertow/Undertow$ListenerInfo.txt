Compiled from "Undertow.java"
public class io.undertow.Undertow$ListenerInfo {
  private final java.lang.String protcol;

  private final java.net.SocketAddress address;

  private final io.undertow.server.OpenListener openListener;

  private final io.undertow.protocols.ssl.UndertowXnioSsl ssl;

  private final org.xnio.channels.AcceptingChannel<? extends org.xnio.StreamConnection> channel;

  private volatile boolean suspended;

  public io.undertow.Undertow$ListenerInfo(java.lang.String, java.net.SocketAddress, io.undertow.server.OpenListener, io.undertow.protocols.ssl.UndertowXnioSsl, org.xnio.channels.AcceptingChannel<? extends org.xnio.StreamConnection>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field suspended:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field protcol:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field address:Ljava/net/SocketAddress;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field openListener:Lio/undertow/server/OpenListener;
      24: aload_0
      25: aload         4
      27: putfield      #6                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
      30: aload_0
      31: aload         5
      33: putfield      #7                  // Field channel:Lorg/xnio/channels/AcceptingChannel;
      36: return

  public java.lang.String getProtcol();
    Code:
       0: aload_0
       1: getfield      #3                  // Field protcol:Ljava/lang/String;
       4: areturn

  public java.net.SocketAddress getAddress();
    Code:
       0: aload_0
       1: getfield      #4                  // Field address:Ljava/net/SocketAddress;
       4: areturn

  public javax.net.ssl.SSLContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #6                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
      13: invokevirtual #8                  // Method io/undertow/protocols/ssl/UndertowXnioSsl.getSslContext:()Ljavax/net/ssl/SSLContext;
      16: areturn

  public void setSslContext(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: getfield      #6                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
       4: ifnull        15
       7: aload_0
       8: getfield      #6                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
      11: aload_1
      12: invokevirtual #9                  // Method io/undertow/protocols/ssl/UndertowXnioSsl.updateSSLContext:(Ljavax/net/ssl/SSLContext;)V
      15: return

  public synchronized void suspend();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field suspended:Z
       5: aload_0
       6: getfield      #7                  // Field channel:Lorg/xnio/channels/AcceptingChannel;
       9: invokeinterface #10,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.suspendAccepts:()V
      14: new           #11                 // class java/util/concurrent/CountDownLatch
      17: dup
      18: iconst_1
      19: invokespecial #12                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      22: astore_1
      23: aload_0
      24: getfield      #7                  // Field channel:Lorg/xnio/channels/AcceptingChannel;
      27: invokeinterface #13,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      32: new           #14                 // class io/undertow/Undertow$ListenerInfo$1
      35: dup
      36: aload_0
      37: aload_1
      38: invokespecial #15                 // Method io/undertow/Undertow$ListenerInfo$1."<init>":(Lio/undertow/Undertow$ListenerInfo;Ljava/util/concurrent/CountDownLatch;)V
      41: invokevirtual #16                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      44: aload_1
      45: invokevirtual #17                 // Method java/util/concurrent/CountDownLatch.await:()V
      48: goto          61
      51: astore_2
      52: new           #19                 // class java/lang/RuntimeException
      55: dup
      56: aload_2
      57: invokespecial #20                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      60: athrow
      61: return
    Exception table:
       from    to  target type
          44    48    51   Class java/lang/InterruptedException

  public synchronized void resume();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field suspended:Z
       5: aload_0
       6: getfield      #7                  // Field channel:Lorg/xnio/channels/AcceptingChannel;
       9: invokeinterface #21,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
      14: return

  public boolean isSuspended();
    Code:
       0: aload_0
       1: getfield      #2                  // Field suspended:Z
       4: ireturn

  public io.undertow.server.ConnectorStatistics getConnectorStatistics();
    Code:
       0: aload_0
       1: getfield      #5                  // Field openListener:Lio/undertow/server/OpenListener;
       4: invokeinterface #22,  1           // InterfaceMethod io/undertow/server/OpenListener.getConnectorStatistics:()Lio/undertow/server/ConnectorStatistics;
       9: areturn

  public <T> void setSocketOption(org.xnio.Option<T>, T) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field channel:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod org/xnio/channels/AcceptingChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void setServerOptions(org.xnio.OptionMap);
    Code:
       0: aload_0
       1: getfield      #5                  // Field openListener:Lio/undertow/server/OpenListener;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod io/undertow/server/OpenListener.setUndertowOptions:(Lorg/xnio/OptionMap;)V
      10: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field protcol:Ljava/lang/String;
       4: aload_0
       5: getfield      #4                  // Field address:Ljava/net/SocketAddress;
       8: aload_0
       9: invokevirtual #25                 // Method getSslContext:()Ljavax/net/ssl/SSLContext;
      12: invokedynamic #26,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/net/SocketAddress;Ljavax/net/ssl/SSLContext;)Ljava/lang/String;
      17: areturn
}
