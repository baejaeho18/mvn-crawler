Compiled from "RequestProtocolAttribute.java"
public class io.undertow.attribute.RequestProtocolAttribute implements io.undertow.attribute.ExchangeAttribute {
  public static final java.lang.String REQUEST_PROTOCOL_SHORT;

  public static final java.lang.String REQUEST_PROTOCOL;

  public static final io.undertow.attribute.ExchangeAttribute INSTANCE;

  private io.undertow.attribute.RequestProtocolAttribute();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String readAttribute(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
       4: invokevirtual #3                  // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
       7: areturn

  public void writeAttribute(io.undertow.server.HttpServerExchange, java.lang.String) throws io.undertow.attribute.ReadOnlyAttributeException;
    Code:
       0: new           #4                  // class io/undertow/attribute/ReadOnlyAttributeException
       3: dup
       4: ldc           #5                  // String Request protocol
       6: aload_2
       7: invokespecial #6                  // Method io/undertow/attribute/ReadOnlyAttributeException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: athrow

  public java.lang.String toString();
    Code:
       0: ldc           #8                  // String %{PROTOCOL}
       2: areturn

  static {};
    Code:
       0: new           #7                  // class io/undertow/attribute/RequestProtocolAttribute
       3: dup
       4: invokespecial #9                  // Method "<init>":()V
       7: putstatic     #10                 // Field INSTANCE:Lio/undertow/attribute/ExchangeAttribute;
      10: return
}
