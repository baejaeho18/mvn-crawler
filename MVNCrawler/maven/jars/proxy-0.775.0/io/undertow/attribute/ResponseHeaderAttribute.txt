Compiled from "ResponseHeaderAttribute.java"
public class io.undertow.attribute.ResponseHeaderAttribute implements io.undertow.attribute.ExchangeAttribute {
  private final io.undertow.util.HttpString responseHeader;

  public io.undertow.attribute.ResponseHeaderAttribute(io.undertow.util.HttpString);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field responseHeader:Lio/undertow/util/HttpString;
       9: return

  public java.lang.String readAttribute(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       4: aload_0
       5: getfield      #2                  // Field responseHeader:Lio/undertow/util/HttpString;
       8: invokevirtual #4                  // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: aload_2
      19: invokevirtual #5                  // Method io/undertow/util/HeaderValues.size:()I
      22: iconst_1
      23: if_icmpne     31
      26: aload_2
      27: invokevirtual #6                  // Method io/undertow/util/HeaderValues.getFirst:()Ljava/lang/String;
      30: areturn
      31: new           #7                  // class java/lang/StringBuilder
      34: dup
      35: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      38: astore_3
      39: aload_3
      40: ldc           #9                  // String [
      42: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: iconst_0
      47: istore        4
      49: iload         4
      51: aload_2
      52: invokevirtual #5                  // Method io/undertow/util/HeaderValues.size:()I
      55: if_icmpge     87
      58: iload         4
      60: ifeq          70
      63: aload_3
      64: ldc           #11                 // String ,
      66: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: pop
      70: aload_3
      71: aload_2
      72: iload         4
      74: invokevirtual #12                 // Method io/undertow/util/HeaderValues.get:(I)Ljava/lang/String;
      77: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: pop
      81: iinc          4, 1
      84: goto          49
      87: aload_3
      88: ldc           #13                 // String ]
      90: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: pop
      94: aload_3
      95: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: areturn

  public void writeAttribute(io.undertow.server.HttpServerExchange, java.lang.String) throws io.undertow.attribute.ReadOnlyAttributeException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       4: aload_0
       5: getfield      #2                  // Field responseHeader:Lio/undertow/util/HttpString;
       8: aload_2
       9: invokevirtual #15                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      12: pop
      13: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field responseHeader:Lio/undertow/util/HttpString;
       4: invokedynamic #16,  0             // InvokeDynamic #0:makeConcatWithConstants:(Lio/undertow/util/HttpString;)Ljava/lang/String;
       9: areturn
}
