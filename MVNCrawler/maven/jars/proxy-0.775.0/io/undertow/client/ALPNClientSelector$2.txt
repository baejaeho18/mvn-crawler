Compiled from "ALPNClientSelector.java"
class io.undertow.client.ALPNClientSelector$2 implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  final io.undertow.protocols.alpn.ALPNProvider val$provider;

  final javax.net.ssl.SSLEngine val$sslEngine;

  final org.xnio.ssl.SslConnection val$sslConnection;

  final io.undertow.client.ClientCallback val$failedListener;

  final java.util.concurrent.atomic.AtomicReference val$handshakeDone;

  final org.xnio.ChannelListener val$fallback;

  final java.util.Map val$protocolMap;

  io.undertow.client.ALPNClientSelector$2(io.undertow.protocols.alpn.ALPNProvider, javax.net.ssl.SSLEngine, org.xnio.ssl.SslConnection, io.undertow.client.ClientCallback, java.util.concurrent.atomic.AtomicReference, org.xnio.ChannelListener, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$provider:Lio/undertow/protocols/alpn/ALPNProvider;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$sslEngine:Ljavax/net/ssl/SSLEngine;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$failedListener:Lio/undertow/client/ClientCallback;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$handshakeDone:Ljava/util/concurrent/atomic/AtomicReference;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$fallback:Lorg/xnio/ChannelListener;
      33: aload_0
      34: aload         7
      36: putfield      #7                  // Field val$protocolMap:Ljava/util/Map;
      39: aload_0
      40: invokespecial #8                  // Method java/lang/Object."<init>":()V
      43: return

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$provider:Lio/undertow/protocols/alpn/ALPNProvider;
       4: aload_0
       5: getfield      #2                  // Field val$sslEngine:Ljavax/net/ssl/SSLEngine;
       8: invokeinterface #9,  2            // InterfaceMethod io/undertow/protocols/alpn/ALPNProvider.getSelectedProtocol:(Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;
      13: astore_2
      14: aload_2
      15: ifnull        26
      18: aload_0
      19: aload_2
      20: invokevirtual #10                 // Method handleSelected:(Ljava/lang/String;)V
      23: goto          234
      26: bipush        100
      28: invokestatic  #11                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      31: astore_3
      32: aload_1
      33: aload_3
      34: invokeinterface #12,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      39: istore        4
      41: iload         4
      43: ifle          98
      46: aload_3
      47: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      50: pop
      51: new           #14                 // class org/xnio/conduits/PushBackStreamSourceConduit
      54: dup
      55: aload_0
      56: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      59: invokevirtual #15                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      62: invokevirtual #16                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      65: invokespecial #17                 // Method org/xnio/conduits/PushBackStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      68: astore        5
      70: aload         5
      72: new           #18                 // class io/undertow/util/ImmediatePooled
      75: dup
      76: aload_3
      77: invokespecial #19                 // Method io/undertow/util/ImmediatePooled."<init>":(Ljava/lang/Object;)V
      80: invokevirtual #20                 // Method org/xnio/conduits/PushBackStreamSourceConduit.pushBack:(Lorg/xnio/Pooled;)V
      83: aload_0
      84: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      87: invokevirtual #15                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      90: aload         5
      92: invokevirtual #21                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      95: goto          120
      98: iload         4
     100: iconst_m1
     101: if_icmpne     120
     104: aload_0
     105: getfield      #4                  // Field val$failedListener:Lio/undertow/client/ClientCallback;
     108: new           #22                 // class java/nio/channels/ClosedChannelException
     111: dup
     112: invokespecial #23                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     115: invokeinterface #24,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     120: aload_0
     121: getfield      #1                  // Field val$provider:Lio/undertow/protocols/alpn/ALPNProvider;
     124: aload_0
     125: getfield      #2                  // Field val$sslEngine:Ljavax/net/ssl/SSLEngine;
     128: invokeinterface #9,  2            // InterfaceMethod io/undertow/protocols/alpn/ALPNProvider.getSelectedProtocol:(Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;
     133: astore_2
     134: aload_2
     135: ifnull        146
     138: aload_0
     139: aload_2
     140: invokevirtual #10                 // Method handleSelected:(Ljava/lang/String;)V
     143: goto          191
     146: iload         4
     148: ifgt          167
     151: aload_0
     152: getfield      #5                  // Field val$handshakeDone:Ljava/util/concurrent/atomic/AtomicReference;
     155: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     158: checkcast     #26                 // class java/lang/Boolean
     161: invokevirtual #27                 // Method java/lang/Boolean.booleanValue:()Z
     164: ifeq          191
     167: aload_0
     168: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
     171: invokevirtual #15                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     174: invokevirtual #28                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     177: aload_0
     178: getfield      #6                  // Field val$fallback:Lorg/xnio/ChannelListener;
     181: aload_0
     182: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
     185: invokeinterface #29,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
     190: return
     191: goto          234
     194: astore        4
     196: aload         4
     198: instanceof    #31                 // class java/io/IOException
     201: ifeq          212
     204: aload         4
     206: checkcast     #31                 // class java/io/IOException
     209: goto          221
     212: new           #31                 // class java/io/IOException
     215: dup
     216: aload         4
     218: invokespecial #32                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     221: astore        5
     223: aload_0
     224: getfield      #4                  // Field val$failedListener:Lio/undertow/client/ClientCallback;
     227: aload         5
     229: invokeinterface #24,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     234: return
    Exception table:
       from    to  target type
          32   190   194   Class java/lang/Throwable

  private void handleSelected(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method java/lang/String.isEmpty:()Z
       4: ifeq          31
       7: aload_0
       8: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      11: invokevirtual #15                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      14: invokevirtual #28                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      17: aload_0
      18: getfield      #6                  // Field val$fallback:Lorg/xnio/ChannelListener;
      21: aload_0
      22: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      25: invokeinterface #29,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      30: return
      31: aload_0
      32: getfield      #7                  // Field val$protocolMap:Ljava/util/Map;
      35: aload_1
      36: invokeinterface #34,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #35                 // class io/undertow/client/ALPNClientSelector$ALPNProtocol
      44: astore_2
      45: aload_2
      46: ifnonnull     73
      49: aload_0
      50: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      53: invokevirtual #15                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      56: invokevirtual #28                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      59: aload_0
      60: getfield      #6                  // Field val$fallback:Lorg/xnio/ChannelListener;
      63: aload_0
      64: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      67: invokeinterface #29,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      72: return
      73: aload_0
      74: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      77: invokevirtual #15                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      80: invokevirtual #28                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      83: aload_2
      84: invokevirtual #36                 // Method io/undertow/client/ALPNClientSelector$ALPNProtocol.getSelected:()Lorg/xnio/ChannelListener;
      87: aload_0
      88: getfield      #3                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      91: invokeinterface #29,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      96: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #37                 // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #38                 // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return
}
