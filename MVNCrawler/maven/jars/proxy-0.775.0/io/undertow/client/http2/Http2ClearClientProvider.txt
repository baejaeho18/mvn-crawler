Compiled from "Http2ClearClientProvider.java"
public class io.undertow.client.http2.Http2ClearClientProvider implements io.undertow.client.ClientProvider {
  public io.undertow.client.http2.Http2ClearClientProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #2                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioWorker;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #3                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioIoThread;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public java.util.Set<java.lang.String> handlesSchemes();
    Code:
       0: new           #4                  // class java/util/HashSet
       3: dup
       4: iconst_1
       5: anewarray     #5                  // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #6                  // String h2c
      12: aastore
      13: invokestatic  #7                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      16: invokespecial #8                  // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      19: areturn

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: new           #9                  // class java/net/URI
       3: dup
       4: ldc           #10                 // String http
       6: aload_3
       7: invokevirtual #11                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      10: aload_3
      11: invokevirtual #12                 // Method java/net/URI.getHost:()Ljava/lang/String;
      14: aload_3
      15: invokevirtual #13                 // Method java/net/URI.getPort:()I
      18: aload_3
      19: invokevirtual #14                 // Method java/net/URI.getPath:()Ljava/lang/String;
      22: aload_3
      23: invokevirtual #15                 // Method java/net/URI.getQuery:()Ljava/lang/String;
      26: aload_3
      27: invokevirtual #16                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      30: invokespecial #17                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      33: astore        8
      35: goto          56
      38: astore        9
      40: aload_1
      41: new           #19                 // class java/io/IOException
      44: dup
      45: aload         9
      47: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      50: invokeinterface #21,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      55: return
      56: aload_0
      57: aload         7
      59: aload         6
      61: aload_3
      62: invokevirtual #22                 // Method createHeaders:(Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljava/net/URI;)Ljava/util/Map;
      65: astore        9
      67: aload         4
      69: aload_2
      70: aload         8
      72: aload         9
      74: new           #23                 // class io/undertow/client/http2/Http2ClearClientProvider$Http2ClearOpenListener
      77: dup
      78: aload         6
      80: aload         7
      82: aload_1
      83: aload_3
      84: invokevirtual #12                 // Method java/net/URI.getHost:()Ljava/lang/String;
      87: invokespecial #24                 // Method io/undertow/client/http2/Http2ClearClientProvider$Http2ClearOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Lio/undertow/client/ClientCallback;Ljava/lang/String;)V
      90: aconst_null
      91: aload         7
      93: aconst_null
      94: invokestatic  #25                 // Method org/xnio/http/HttpUpgrade.performUpgrade:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Ljava/net/URI;Ljava/util/Map;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;Lorg/xnio/http/HandshakeChecker;)Lorg/xnio/IoFuture;
      97: new           #26                 // class io/undertow/client/http2/Http2ClearClientProvider$FailedNotifier
     100: dup
     101: aload_1
     102: invokespecial #27                 // Method io/undertow/client/http2/Http2ClearClientProvider$FailedNotifier."<init>":(Lio/undertow/client/ClientCallback;)V
     105: aconst_null
     106: invokeinterface #28,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     111: pop
     112: return
    Exception table:
       from    to  target type
           0    35    38   Class java/net/URISyntaxException

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: new           #9                  // class java/net/URI
       3: dup
       4: ldc           #10                 // String http
       6: aload_3
       7: invokevirtual #11                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      10: aload_3
      11: invokevirtual #12                 // Method java/net/URI.getHost:()Ljava/lang/String;
      14: aload_3
      15: invokevirtual #13                 // Method java/net/URI.getPort:()I
      18: aload_3
      19: invokevirtual #14                 // Method java/net/URI.getPath:()Ljava/lang/String;
      22: aload_3
      23: invokevirtual #15                 // Method java/net/URI.getQuery:()Ljava/lang/String;
      26: aload_3
      27: invokevirtual #16                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      30: invokespecial #17                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      33: astore        8
      35: goto          56
      38: astore        9
      40: aload_1
      41: new           #19                 // class java/io/IOException
      44: dup
      45: aload         9
      47: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      50: invokeinterface #21,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      55: return
      56: aload_2
      57: ifnull        125
      60: aload         4
      62: aload_2
      63: new           #29                 // class java/net/InetSocketAddress
      66: dup
      67: aload_3
      68: invokevirtual #12                 // Method java/net/URI.getHost:()Ljava/lang/String;
      71: aload_3
      72: invokevirtual #13                 // Method java/net/URI.getPort:()I
      75: invokespecial #30                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      78: new           #31                 // class io/undertow/client/http2/Http2ClearClientProvider$1
      81: dup
      82: aload_0
      83: aload         7
      85: aload         6
      87: aload_3
      88: aload         8
      90: aload_1
      91: invokespecial #32                 // Method io/undertow/client/http2/Http2ClearClientProvider$1."<init>":(Lio/undertow/client/http2/Http2ClearClientProvider;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljava/net/URI;Ljava/net/URI;Lio/undertow/client/ClientCallback;)V
      94: new           #33                 // class io/undertow/client/http2/Http2ClearClientProvider$2
      97: dup
      98: aload_0
      99: invokespecial #34                 // Method io/undertow/client/http2/Http2ClearClientProvider$2."<init>":(Lio/undertow/client/http2/Http2ClearClientProvider;)V
     102: aload         7
     104: invokevirtual #35                 // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     107: new           #26                 // class io/undertow/client/http2/Http2ClearClientProvider$FailedNotifier
     110: dup
     111: aload_1
     112: invokespecial #27                 // Method io/undertow/client/http2/Http2ClearClientProvider$FailedNotifier."<init>":(Lio/undertow/client/ClientCallback;)V
     115: aconst_null
     116: invokeinterface #28,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     121: pop
     122: goto          186
     125: aload         4
     127: new           #29                 // class java/net/InetSocketAddress
     130: dup
     131: aload_3
     132: invokevirtual #12                 // Method java/net/URI.getHost:()Ljava/lang/String;
     135: aload_3
     136: invokevirtual #13                 // Method java/net/URI.getPort:()I
     139: invokespecial #30                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     142: new           #36                 // class io/undertow/client/http2/Http2ClearClientProvider$3
     145: dup
     146: aload_0
     147: aload         7
     149: aload         6
     151: aload_3
     152: aload         8
     154: aload_1
     155: invokespecial #37                 // Method io/undertow/client/http2/Http2ClearClientProvider$3."<init>":(Lio/undertow/client/http2/Http2ClearClientProvider;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljava/net/URI;Ljava/net/URI;Lio/undertow/client/ClientCallback;)V
     158: new           #38                 // class io/undertow/client/http2/Http2ClearClientProvider$4
     161: dup
     162: aload_0
     163: invokespecial #39                 // Method io/undertow/client/http2/Http2ClearClientProvider$4."<init>":(Lio/undertow/client/http2/Http2ClearClientProvider;)V
     166: aload         7
     168: invokevirtual #40                 // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     171: new           #26                 // class io/undertow/client/http2/Http2ClearClientProvider$FailedNotifier
     174: dup
     175: aload_1
     176: invokespecial #27                 // Method io/undertow/client/http2/Http2ClearClientProvider$FailedNotifier."<init>":(Lio/undertow/client/ClientCallback;)V
     179: aconst_null
     180: invokeinterface #28,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     185: pop
     186: return
    Exception table:
       from    to  target type
           0    35    38   Class java/net/URISyntaxException

  private java.util.Map<java.lang.String, java.lang.String> createHeaders(org.xnio.OptionMap, io.undertow.connector.ByteBufferPool, java.net.URI);
    Code:
       0: new           #41                 // class java/util/HashMap
       3: dup
       4: invokespecial #42                 // Method java/util/HashMap."<init>":()V
       7: astore        4
       9: aload         4
      11: ldc           #43                 // String HTTP2-Settings
      13: aload_1
      14: aload_2
      15: invokestatic  #44                 // Method createSettingsFrame:(Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;)Ljava/lang/String;
      18: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload         4
      26: ldc           #47                 // String Upgrade
      28: ldc           #6                  // String h2c
      30: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload         4
      38: ldc           #49                 // String Connection
      40: ldc           #50                 // String Upgrade, HTTP2-Settings
      42: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload         4
      50: ldc           #51                 // String Host
      52: aload_3
      53: invokevirtual #12                 // Method java/net/URI.getHost:()Ljava/lang/String;
      56: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: aload         4
      64: ldc           #52                 // String X-HTTP2-connect-only
      66: ldc           #53                 // String connect
      68: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: aload         4
      76: areturn

  public static java.lang.String createSettingsFrame(org.xnio.OptionMap, io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_1
       1: invokeinterface #54,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
       6: astore_2
       7: aload_2
       8: invokeinterface #55,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      13: astore_3
      14: aload_0
      15: getstatic     #56                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_HEADER_TABLE_SIZE:Lorg/xnio/Option;
      18: invokevirtual #57                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      21: ifeq          42
      24: aload_3
      25: iconst_1
      26: aload_0
      27: getstatic     #56                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_HEADER_TABLE_SIZE:Lorg/xnio/Option;
      30: invokevirtual #59                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      33: checkcast     #60                 // class java/lang/Integer
      36: invokevirtual #61                 // Method java/lang/Integer.intValue:()I
      39: invokestatic  #62                 // Method pushOption:(Ljava/nio/ByteBuffer;II)V
      42: aload_0
      43: getstatic     #63                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_ENABLE_PUSH:Lorg/xnio/Option;
      46: invokevirtual #57                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      49: ifeq          78
      52: aload_3
      53: iconst_2
      54: aload_0
      55: getstatic     #63                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_ENABLE_PUSH:Lorg/xnio/Option;
      58: invokevirtual #59                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      61: checkcast     #64                 // class java/lang/Boolean
      64: invokevirtual #65                 // Method java/lang/Boolean.booleanValue:()Z
      67: ifeq          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: invokestatic  #62                 // Method pushOption:(Ljava/nio/ByteBuffer;II)V
      78: aload_0
      79: getstatic     #66                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_MAX_CONCURRENT_STREAMS:Lorg/xnio/Option;
      82: invokevirtual #57                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      85: ifeq          106
      88: aload_3
      89: iconst_3
      90: aload_0
      91: getstatic     #66                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_MAX_CONCURRENT_STREAMS:Lorg/xnio/Option;
      94: invokevirtual #59                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      97: checkcast     #60                 // class java/lang/Integer
     100: invokevirtual #61                 // Method java/lang/Integer.intValue:()I
     103: invokestatic  #62                 // Method pushOption:(Ljava/nio/ByteBuffer;II)V
     106: aload_0
     107: getstatic     #67                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_INITIAL_WINDOW_SIZE:Lorg/xnio/Option;
     110: invokevirtual #57                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     113: ifeq          134
     116: aload_3
     117: iconst_4
     118: aload_0
     119: getstatic     #67                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_INITIAL_WINDOW_SIZE:Lorg/xnio/Option;
     122: invokevirtual #59                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     125: checkcast     #60                 // class java/lang/Integer
     128: invokevirtual #61                 // Method java/lang/Integer.intValue:()I
     131: invokestatic  #62                 // Method pushOption:(Ljava/nio/ByteBuffer;II)V
     134: aload_0
     135: getstatic     #68                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_MAX_FRAME_SIZE:Lorg/xnio/Option;
     138: invokevirtual #57                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     141: ifeq          162
     144: aload_3
     145: iconst_5
     146: aload_0
     147: getstatic     #68                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_MAX_FRAME_SIZE:Lorg/xnio/Option;
     150: invokevirtual #59                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     153: checkcast     #60                 // class java/lang/Integer
     156: invokevirtual #61                 // Method java/lang/Integer.intValue:()I
     159: invokestatic  #62                 // Method pushOption:(Ljava/nio/ByteBuffer;II)V
     162: aload_0
     163: getstatic     #69                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_MAX_HEADER_LIST_SIZE:Lorg/xnio/Option;
     166: invokevirtual #57                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     169: ifeq          194
     172: aload_3
     173: bipush        6
     175: aload_0
     176: getstatic     #69                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_MAX_HEADER_LIST_SIZE:Lorg/xnio/Option;
     179: invokevirtual #59                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     182: checkcast     #60                 // class java/lang/Integer
     185: invokevirtual #61                 // Method java/lang/Integer.intValue:()I
     188: invokestatic  #62                 // Method pushOption:(Ljava/nio/ByteBuffer;II)V
     191: goto          223
     194: aload_0
     195: getstatic     #70                 // Field io/undertow/UndertowOptions.MAX_HEADER_SIZE:Lorg/xnio/Option;
     198: invokevirtual #57                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     201: ifeq          223
     204: aload_3
     205: bipush        6
     207: aload_0
     208: getstatic     #69                 // Field io/undertow/UndertowOptions.HTTP2_SETTINGS_MAX_HEADER_LIST_SIZE:Lorg/xnio/Option;
     211: invokevirtual #59                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     214: checkcast     #60                 // class java/lang/Integer
     217: invokevirtual #61                 // Method java/lang/Integer.intValue:()I
     220: invokestatic  #62                 // Method pushOption:(Ljava/nio/ByteBuffer;II)V
     223: aload_3
     224: invokevirtual #71                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     227: pop
     228: aload_3
     229: iconst_0
     230: invokestatic  #72                 // Method io/undertow/util/FlexBase64.encodeStringURL:(Ljava/nio/ByteBuffer;Z)Ljava/lang/String;
     233: astore        4
     235: aload_2
     236: invokeinterface #73,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     241: aload         4
     243: areturn
     244: astore        5
     246: aload_2
     247: invokeinterface #73,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     252: aload         5
     254: athrow
    Exception table:
       from    to  target type
           7   235   244   any
         244   246   244   any

  private static void pushOption(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: ishr
       5: sipush        255
       8: iand
       9: i2b
      10: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      13: pop
      14: aload_0
      15: iload_1
      16: sipush        255
      19: iand
      20: i2b
      21: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      24: pop
      25: aload_0
      26: iload_2
      27: bipush        24
      29: ishr
      30: sipush        255
      33: iand
      34: i2b
      35: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      38: pop
      39: aload_0
      40: iload_2
      41: bipush        16
      43: ishr
      44: sipush        255
      47: iand
      48: i2b
      49: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      52: pop
      53: aload_0
      54: iload_2
      55: bipush        8
      57: ishr
      58: sipush        255
      61: iand
      62: i2b
      63: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      66: pop
      67: aload_0
      68: iload_2
      69: sipush        255
      72: iand
      73: i2b
      74: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      77: pop
      78: return
}
