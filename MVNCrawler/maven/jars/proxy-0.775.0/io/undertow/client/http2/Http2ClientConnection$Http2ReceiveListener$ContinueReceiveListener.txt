Compiled from "Http2ClientConnection.java"
class io.undertow.client.http2.Http2ClientConnection$Http2ReceiveListener$ContinueReceiveListener implements org.xnio.ChannelListener<io.undertow.protocols.http2.AbstractHttp2StreamSourceChannel> {
  private final io.undertow.protocols.http2.Http2Channel http2Channel;

  static final boolean $assertionsDisabled;

  final io.undertow.client.http2.Http2ClientConnection$Http2ReceiveListener this$1;

  io.undertow.client.http2.Http2ClientConnection$Http2ReceiveListener$ContinueReceiveListener(io.undertow.client.http2.Http2ClientConnection$Http2ReceiveListener, io.undertow.protocols.http2.Http2Channel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
      14: return

  public void handleEvent(io.undertow.protocols.http2.AbstractHttp2StreamSourceChannel);
    Code:
       0: getstatic     #4                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: instanceof    #5                  // class io/undertow/protocols/http2/Http2StreamSourceChannel
      10: ifne          21
      13: new           #6                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #7                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: checkcast     #5                  // class io/undertow/protocols/http2/Http2StreamSourceChannel
      25: astore_2
      26: aload_2
      27: invokevirtual #8                  // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
      30: getstatic     #9                  // Field io/undertow/protocols/http2/Http2Channel.STATUS:Lio/undertow/util/HttpString;
      33: invokevirtual #10                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      36: ifnonnull     61
      39: aload_2
      40: ldc2_w        #12                 // long 9223372036854775807l
      43: invokestatic  #14                 // Method org/xnio/channels/Channels.drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
      46: pop2
      47: aload_2
      48: invokevirtual #8                  // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
      51: getstatic     #9                  // Field io/undertow/protocols/http2/Http2Channel.STATUS:Lio/undertow/util/HttpString;
      54: invokevirtual #10                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      57: ifnonnull     61
      60: return
      61: aload_2
      62: invokevirtual #8                  // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
      65: getstatic     #9                  // Field io/undertow/protocols/http2/Http2Channel.STATUS:Lio/undertow/util/HttpString;
      68: invokevirtual #10                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      71: invokestatic  #15                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      74: istore_3
      75: aload_0
      76: getfield      #1                  // Field this$1:Lio/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener;
      79: getfield      #16                 // Field io/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener.this$0:Lio/undertow/client/http2/Http2ClientConnection;
      82: getfield      #17                 // Field io/undertow/client/http2/Http2ClientConnection.currentExchanges:Ljava/util/Map;
      85: aload_2
      86: invokevirtual #18                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getStreamId:()I
      89: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      92: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #21                 // class io/undertow/client/http2/Http2ClientExchange
     100: astore        4
     102: iload_3
     103: sipush        200
     106: if_icmpge     135
     109: iload_3
     110: bipush        100
     112: if_icmpne     126
     115: aload         4
     117: aload         4
     119: aload_2
     120: invokevirtual #22                 // Method io/undertow/client/http2/Http2ClientExchange.createResponse:(Lio/undertow/protocols/http2/Http2StreamSourceChannel;)Lio/undertow/client/ClientResponse;
     123: invokevirtual #23                 // Method io/undertow/client/http2/Http2ClientExchange.setContinueResponse:(Lio/undertow/client/ClientResponse;)V
     126: aload_2
     127: ldc2_w        #12                 // long 9223372036854775807l
     130: invokestatic  #14                 // Method org/xnio/channels/Channels.drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
     133: pop2
     134: return
     135: aload_0
     136: getfield      #1                  // Field this$1:Lio/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener;
     139: aload_0
     140: getfield      #3                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     143: aload         4
     145: aload_2
     146: invokevirtual #24                 // Method io/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener.handleFinalResponse:(Lio/undertow/protocols/http2/Http2Channel;Lio/undertow/client/http2/Http2ClientExchange;Lio/undertow/protocols/http2/Http2StreamSourceChannel;)V
     149: goto          161
     152: astore_2
     153: aload_0
     154: getfield      #1                  // Field this$1:Lio/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener;
     157: aload_2
     158: invokevirtual #26                 // Method io/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener.handleThrowable:(Ljava/lang/Throwable;)V
     161: return
    Exception table:
       from    to  target type
          21    60   152   Class java/lang/Throwable
          61   134   152   Class java/lang/Throwable
         135   149   152   Class java/lang/Throwable

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class io/undertow/protocols/http2/AbstractHttp2StreamSourceChannel
       5: invokevirtual #28                 // Method handleEvent:(Lio/undertow/protocols/http2/AbstractHttp2StreamSourceChannel;)V
       8: return

  static {};
    Code:
       0: ldc           #29                 // class io/undertow/client/http2/Http2ClientConnection
       2: invokevirtual #30                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #4                  // Field $assertionsDisabled:Z
      16: return
}
