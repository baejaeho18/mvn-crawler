Compiled from "Http2ClientProvider.java"
public class io.undertow.client.http2.Http2ClientProvider implements io.undertow.client.ClientProvider {
  private static final java.lang.String HTTP2;

  private static final java.lang.String HTTP_1_1;

  private static final org.xnio.ChannelListener<org.xnio.ssl.SslConnection> FAILED;

  public io.undertow.client.http2.Http2ClientProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #2                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioWorker;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #3                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioIoThread;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public java.util.Set<java.lang.String> handlesSchemes();
    Code:
       0: new           #4                  // class java/util/HashSet
       3: dup
       4: iconst_1
       5: anewarray     #5                  // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #7                  // String h2
      12: aastore
      13: invokestatic  #8                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      16: invokespecial #9                  // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      19: areturn

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload         5
       2: ifnonnull     20
       5: aload_1
       6: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       9: invokeinterface #11,  1           // InterfaceMethod io/undertow/UndertowMessages.sslWasNull:()Ljava/io/IOException;
      14: invokeinterface #12,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      19: return
      20: invokestatic  #13                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      23: getstatic     #14                 // Field io/undertow/UndertowOptions.ENDPOINT_IDENTIFICATION_ALGORITHM:Lorg/xnio/Option;
      26: getstatic     #15                 // Field io/undertow/client/http/HttpClientProvider.DISABLE_HTTPS_ENDPOINT_IDENTIFICATION:Z
      29: ifeq          37
      32: ldc           #16                 // String
      34: goto          39
      37: ldc           #17                 // String HTTPS
      39: invokevirtual #18                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap$Builder;
      42: aload         7
      44: invokevirtual #19                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
      47: getstatic     #20                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
      50: iconst_1
      51: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      54: invokevirtual #22                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      57: astore        8
      59: aload_2
      60: ifnonnull     128
      63: aload         5
      65: aload         4
      67: new           #23                 // class java/net/InetSocketAddress
      70: dup
      71: aload_3
      72: invokevirtual #24                 // Method java/net/URI.getHost:()Ljava/lang/String;
      75: aload_3
      76: invokevirtual #25                 // Method java/net/URI.getPort:()I
      79: iconst_m1
      80: if_icmpne     89
      83: sipush        443
      86: goto          93
      89: aload_3
      90: invokevirtual #25                 // Method java/net/URI.getPort:()I
      93: invokespecial #26                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      96: aload_0
      97: aload_1
      98: aload_3
      99: aload         5
     101: aload         6
     103: aload         8
     105: invokevirtual #27                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     108: aload         8
     110: invokevirtual #28                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     113: aload_0
     114: aload_1
     115: invokevirtual #29                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     118: aconst_null
     119: invokeinterface #30,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     124: pop
     125: goto          191
     128: aload         5
     130: aload         4
     132: aload_2
     133: new           #23                 // class java/net/InetSocketAddress
     136: dup
     137: aload_3
     138: invokevirtual #24                 // Method java/net/URI.getHost:()Ljava/lang/String;
     141: aload_3
     142: invokevirtual #25                 // Method java/net/URI.getPort:()I
     145: iconst_m1
     146: if_icmpne     155
     149: sipush        443
     152: goto          159
     155: aload_3
     156: invokevirtual #25                 // Method java/net/URI.getPort:()I
     159: invokespecial #26                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     162: aload_0
     163: aload_1
     164: aload_3
     165: aload         5
     167: aload         6
     169: aload         8
     171: invokevirtual #27                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     174: aload         8
     176: invokevirtual #31                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     179: aload_0
     180: aload_1
     181: invokevirtual #29                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     184: aconst_null
     185: invokeinterface #30,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     190: pop
     191: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload         5
       2: ifnonnull     20
       5: aload_1
       6: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       9: invokeinterface #11,  1           // InterfaceMethod io/undertow/UndertowMessages.sslWasNull:()Ljava/io/IOException;
      14: invokeinterface #12,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      19: return
      20: invokestatic  #13                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      23: getstatic     #14                 // Field io/undertow/UndertowOptions.ENDPOINT_IDENTIFICATION_ALGORITHM:Lorg/xnio/Option;
      26: getstatic     #15                 // Field io/undertow/client/http/HttpClientProvider.DISABLE_HTTPS_ENDPOINT_IDENTIFICATION:Z
      29: ifeq          37
      32: ldc           #16                 // String
      34: goto          39
      37: ldc           #17                 // String HTTPS
      39: invokevirtual #18                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap$Builder;
      42: aload         7
      44: invokevirtual #19                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
      47: getstatic     #20                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
      50: iconst_1
      51: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      54: invokevirtual #22                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      57: astore        8
      59: aload_2
      60: ifnonnull     128
      63: aload         5
      65: aload         4
      67: new           #23                 // class java/net/InetSocketAddress
      70: dup
      71: aload_3
      72: invokevirtual #24                 // Method java/net/URI.getHost:()Ljava/lang/String;
      75: aload_3
      76: invokevirtual #25                 // Method java/net/URI.getPort:()I
      79: iconst_m1
      80: if_icmpne     89
      83: sipush        443
      86: goto          93
      89: aload_3
      90: invokevirtual #25                 // Method java/net/URI.getPort:()I
      93: invokespecial #26                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      96: aload_0
      97: aload_1
      98: aload_3
      99: aload         5
     101: aload         6
     103: aload         8
     105: invokevirtual #27                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     108: aload         8
     110: invokevirtual #32                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioIoThread;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     113: aload_0
     114: aload_1
     115: invokevirtual #29                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     118: aconst_null
     119: invokeinterface #30,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     124: pop
     125: goto          191
     128: aload         5
     130: aload         4
     132: aload_2
     133: new           #23                 // class java/net/InetSocketAddress
     136: dup
     137: aload_3
     138: invokevirtual #24                 // Method java/net/URI.getHost:()Ljava/lang/String;
     141: aload_3
     142: invokevirtual #25                 // Method java/net/URI.getPort:()I
     145: iconst_m1
     146: if_icmpne     155
     149: sipush        443
     152: goto          159
     155: aload_3
     156: invokevirtual #25                 // Method java/net/URI.getPort:()I
     159: invokespecial #26                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     162: aload_0
     163: aload_1
     164: aload_3
     165: aload         5
     167: aload         6
     169: aload         8
     171: invokevirtual #27                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     174: aload         8
     176: invokevirtual #33                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioIoThread;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     179: aload_0
     180: aload_1
     181: invokevirtual #29                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     184: aconst_null
     185: invokeinterface #30,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     190: pop
     191: return

  private org.xnio.IoFuture$Notifier<org.xnio.StreamConnection, java.lang.Object> createNotifier(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>);
    Code:
       0: new           #34                 // class io/undertow/client/http2/Http2ClientProvider$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #35                 // Method io/undertow/client/http2/Http2ClientProvider$2."<init>":(Lio/undertow/client/http2/Http2ClientProvider;Lio/undertow/client/ClientCallback;)V
       9: areturn

  private org.xnio.ChannelListener<org.xnio.StreamConnection> createOpenListener(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: new           #36                 // class io/undertow/client/http2/Http2ClientProvider$3
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload         4
       9: aload         5
      11: invokespecial #37                 // Method io/undertow/client/http2/Http2ClientProvider$3."<init>":(Lio/undertow/client/http2/Http2ClientProvider;Lio/undertow/client/ClientCallback;Ljava/net/URI;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: areturn

  public static io.undertow.client.ALPNClientSelector$ALPNProtocol alpnProtocol(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: new           #38                 // class io/undertow/client/ALPNClientSelector$ALPNProtocol
       3: dup
       4: new           #39                 // class io/undertow/client/http2/Http2ClientProvider$4
       7: dup
       8: aload_0
       9: aload_2
      10: aload_3
      11: aload_1
      12: invokespecial #40                 // Method io/undertow/client/http2/Http2ClientProvider$4."<init>":(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)V
      15: ldc           #7                  // String h2
      17: invokespecial #41                 // Method io/undertow/client/ALPNClientSelector$ALPNProtocol."<init>":(Lorg/xnio/ChannelListener;Ljava/lang/String;)V
      20: areturn

  private void handleConnected(org.xnio.StreamConnection, io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_1
       1: checkcast     #42                 // class org/xnio/ssl/SslConnection
       4: getstatic     #43                 // Field FAILED:Lorg/xnio/ChannelListener;
       7: aload_2
       8: iconst_1
       9: anewarray     #38                 // class io/undertow/client/ALPNClientSelector$ALPNProtocol
      12: dup
      13: iconst_0
      14: aload_2
      15: aload_3
      16: aload         4
      18: aload         5
      20: invokestatic  #44                 // Method alpnProtocol:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lio/undertow/client/ALPNClientSelector$ALPNProtocol;
      23: aastore
      24: invokestatic  #45                 // Method io/undertow/client/ALPNClientSelector.runAlpn:(Lorg/xnio/ssl/SslConnection;Lorg/xnio/ChannelListener;Lio/undertow/client/ClientCallback;[Lio/undertow/client/ALPNClientSelector$ALPNProtocol;)V
      27: return

  private static io.undertow.client.http2.Http2ClientConnection createHttp2Channel(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.lang.String);
    Code:
       0: aload_2
       1: getstatic     #46                 // Field io/undertow/UndertowOptions.ENABLE_STATISTICS:Lorg/xnio/Option;
       4: iconst_0
       5: invokevirtual #47                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
       8: ifeq          83
      11: new           #48                 // class io/undertow/client/http2/Http2ClientProvider$ClientStatisticsImpl
      14: dup
      15: invokespecial #49                 // Method io/undertow/client/http2/Http2ClientProvider$ClientStatisticsImpl."<init>":()V
      18: astore        4
      20: aload_0
      21: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      24: new           #51                 // class io/undertow/conduits/BytesSentStreamSinkConduit
      27: dup
      28: aload_0
      29: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      32: invokevirtual #52                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      35: new           #53                 // class io/undertow/client/http2/Http2ClientProvider$5
      38: dup
      39: aload         4
      41: invokespecial #54                 // Method io/undertow/client/http2/Http2ClientProvider$5."<init>":(Lio/undertow/client/http2/Http2ClientProvider$ClientStatisticsImpl;)V
      44: invokespecial #55                 // Method io/undertow/conduits/BytesSentStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ByteActivityCallback;)V
      47: invokevirtual #56                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      50: aload_0
      51: invokevirtual #57                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      54: new           #58                 // class io/undertow/conduits/BytesReceivedStreamSourceConduit
      57: dup
      58: aload_0
      59: invokevirtual #57                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      62: invokevirtual #59                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      65: new           #60                 // class io/undertow/client/http2/Http2ClientProvider$6
      68: dup
      69: aload         4
      71: invokespecial #61                 // Method io/undertow/client/http2/Http2ClientProvider$6."<init>":(Lio/undertow/client/http2/Http2ClientProvider$ClientStatisticsImpl;)V
      74: invokespecial #62                 // Method io/undertow/conduits/BytesReceivedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ByteActivityCallback;)V
      77: invokevirtual #63                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      80: goto          86
      83: aconst_null
      84: astore        4
      86: new           #64                 // class io/undertow/protocols/http2/Http2Channel
      89: dup
      90: aload_0
      91: aconst_null
      92: aload_1
      93: aconst_null
      94: iconst_1
      95: iconst_0
      96: aload_2
      97: invokespecial #65                 // Method io/undertow/protocols/http2/Http2Channel."<init>":(Lorg/xnio/StreamConnection;Ljava/lang/String;Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/PooledByteBuffer;ZZLorg/xnio/OptionMap;)V
     100: astore        5
     102: new           #66                 // class io/undertow/client/http2/Http2ClientConnection
     105: dup
     106: aload         5
     108: iconst_0
     109: aload_3
     110: aload         4
     112: iconst_1
     113: invokespecial #67                 // Method io/undertow/client/http2/Http2ClientConnection."<init>":(Lio/undertow/protocols/http2/Http2Channel;ZLjava/lang/String;Lio/undertow/client/ClientStatistics;Z)V
     116: areturn

  static {};
    Code:
       0: new           #68                 // class io/undertow/client/http2/Http2ClientProvider$1
       3: dup
       4: invokespecial #69                 // Method io/undertow/client/http2/Http2ClientProvider$1."<init>":()V
       7: putstatic     #43                 // Field FAILED:Lorg/xnio/ChannelListener;
      10: return
}
