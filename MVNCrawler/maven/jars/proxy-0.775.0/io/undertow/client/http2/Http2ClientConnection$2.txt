Compiled from "Http2ClientConnection.java"
class io.undertow.client.http2.Http2ClientConnection$2 implements io.undertow.protocols.http2.Http2DataStreamSinkChannel$TrailersProducer {
  final io.undertow.client.http2.Http2ClientExchange val$exchange;

  final io.undertow.client.http2.Http2ClientConnection this$0;

  io.undertow.client.http2.Http2ClientConnection$2(io.undertow.client.http2.Http2ClientConnection, io.undertow.client.http2.Http2ClientExchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$exchange:Lio/undertow/client/http2/Http2ClientExchange;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public io.undertow.util.HeaderMap getTrailers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$exchange:Lio/undertow/client/http2/Http2ClientExchange;
       4: getstatic     #4                  // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILERS:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #5                  // Method io/undertow/client/http2/Http2ClientExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #6                  // class io/undertow/util/HeaderMap
      13: astore_1
      14: aload_0
      15: getfield      #2                  // Field val$exchange:Lio/undertow/client/http2/Http2ClientExchange;
      18: getstatic     #7                  // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILER_SUPPLIER:Lio/undertow/util/AttachmentKey;
      21: invokevirtual #5                  // Method io/undertow/client/http2/Http2ClientExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      24: checkcast     #8                  // class java/util/function/Supplier
      27: astore_2
      28: aload_1
      29: ifnull        38
      32: aload_2
      33: ifnonnull     38
      36: aload_1
      37: areturn
      38: aload_1
      39: ifnonnull     56
      42: aload_2
      43: ifnull        56
      46: aload_2
      47: invokeinterface #9,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      52: checkcast     #6                  // class io/undertow/util/HeaderMap
      55: areturn
      56: aload_1
      57: ifnull        115
      60: aload_2
      61: invokeinterface #9,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      66: checkcast     #6                  // class io/undertow/util/HeaderMap
      69: astore_3
      70: aload_3
      71: invokevirtual #10                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
      74: astore        4
      76: aload         4
      78: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          113
      86: aload         4
      88: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #13                 // class io/undertow/util/HeaderValues
      96: astore        5
      98: aload_1
      99: aload         5
     101: invokevirtual #14                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     104: aload         5
     106: invokevirtual #15                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
     109: pop
     110: goto          76
     113: aload_1
     114: areturn
     115: aconst_null
     116: areturn
}
