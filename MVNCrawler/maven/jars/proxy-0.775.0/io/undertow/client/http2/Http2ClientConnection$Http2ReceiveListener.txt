Compiled from "Http2ClientConnection.java"
class io.undertow.client.http2.Http2ClientConnection$Http2ReceiveListener implements org.xnio.ChannelListener<io.undertow.protocols.http2.Http2Channel> {
  final io.undertow.client.http2.Http2ClientConnection this$0;

  private io.undertow.client.http2.Http2ClientConnection$Http2ReceiveListener(io.undertow.client.http2.Http2ClientConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void handleEvent(io.undertow.protocols.http2.Http2Channel);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/undertow/protocols/http2/Http2Channel.receive:()Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
       4: checkcast     #4                  // class io/undertow/protocols/http2/AbstractHttp2StreamSourceChannel
       7: astore_2
       8: aload_2
       9: instanceof    #5                  // class io/undertow/protocols/http2/Http2StreamSourceChannel
      12: ifeq          133
      15: aload_2
      16: checkcast     #5                  // class io/undertow/protocols/http2/Http2StreamSourceChannel
      19: astore_3
      20: aload_3
      21: invokevirtual #6                  // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
      24: getstatic     #7                  // Field io/undertow/protocols/http2/Http2Channel.STATUS:Lio/undertow/util/HttpString;
      27: invokevirtual #8                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      30: invokestatic  #9                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      33: istore        4
      35: aload_0
      36: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
      39: getfield      #10                 // Field io/undertow/client/http2/Http2ClientConnection.currentExchanges:Ljava/util/Map;
      42: aload_3
      43: invokevirtual #11                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getStreamId:()I
      46: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #14                 // class io/undertow/client/http2/Http2ClientExchange
      57: astore        5
      59: iload         4
      61: sipush        200
      64: if_icmpge     122
      67: iload         4
      69: bipush        100
      71: if_icmpne     113
      74: aload         5
      76: aload         5
      78: aload_3
      79: invokevirtual #15                 // Method io/undertow/client/http2/Http2ClientExchange.createResponse:(Lio/undertow/protocols/http2/Http2StreamSourceChannel;)Lio/undertow/client/ClientResponse;
      82: invokevirtual #16                 // Method io/undertow/client/http2/Http2ClientExchange.setContinueResponse:(Lio/undertow/client/ClientResponse;)V
      85: aload_3
      86: invokevirtual #17                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      89: new           #18                 // class io/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener$ContinueReceiveListener
      92: dup
      93: aload_0
      94: aload_0
      95: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
      98: getfield      #19                 // Field io/undertow/client/http2/Http2ClientConnection.http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     101: invokespecial #20                 // Method io/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener$ContinueReceiveListener."<init>":(Lio/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener;Lio/undertow/protocols/http2/Http2Channel;)V
     104: invokeinterface #21,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     109: aload_3
     110: invokevirtual #22                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.resumeReads:()V
     113: aload_2
     114: ldc2_w        #24                 // long 9223372036854775807l
     117: invokestatic  #26                 // Method org/xnio/channels/Channels.drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
     120: pop2
     121: return
     122: aload_0
     123: aload_1
     124: aload         5
     126: aload_3
     127: invokevirtual #27                 // Method handleFinalResponse:(Lio/undertow/protocols/http2/Http2Channel;Lio/undertow/client/http2/Http2ClientExchange;Lio/undertow/protocols/http2/Http2StreamSourceChannel;)V
     130: goto          546
     133: aload_2
     134: instanceof    #28                 // class io/undertow/protocols/http2/Http2PingStreamSourceChannel
     137: ifeq          151
     140: aload_0
     141: aload_2
     142: checkcast     #28                 // class io/undertow/protocols/http2/Http2PingStreamSourceChannel
     145: invokevirtual #29                 // Method handlePing:(Lio/undertow/protocols/http2/Http2PingStreamSourceChannel;)V
     148: goto          546
     151: aload_2
     152: instanceof    #30                 // class io/undertow/protocols/http2/Http2RstStreamStreamSourceChannel
     155: ifeq          232
     158: aload_2
     159: checkcast     #30                 // class io/undertow/protocols/http2/Http2RstStreamStreamSourceChannel
     162: astore_3
     163: aload_3
     164: invokevirtual #31                 // Method io/undertow/protocols/http2/Http2RstStreamStreamSourceChannel.getStreamId:()I
     167: istore        4
     169: getstatic     #32                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     172: ldc           #33                 // String Client received RST_STREAM for stream %s
     174: iload         4
     176: invokeinterface #34,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;I)V
     181: aload_0
     182: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
     185: getfield      #10                 // Field io/undertow/client/http2/Http2ClientConnection.currentExchanges:Ljava/util/Map;
     188: iload         4
     190: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     193: invokeinterface #35,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     198: checkcast     #14                 // class io/undertow/client/http2/Http2ClientExchange
     201: astore        5
     203: aload         5
     205: ifnull        221
     208: aload         5
     210: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     213: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.http2StreamWasReset:()Ljava/io/IOException;
     218: invokevirtual #38                 // Method io/undertow/client/http2/Http2ClientExchange.failed:(Ljava/io/IOException;)V
     221: aload_2
     222: ldc2_w        #24                 // long 9223372036854775807l
     225: invokestatic  #26                 // Method org/xnio/channels/Channels.drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
     228: pop2
     229: goto          546
     232: aload_2
     233: instanceof    #39                 // class io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel
     236: ifeq          517
     239: aload_2
     240: checkcast     #39                 // class io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel
     243: astore_3
     244: aload_0
     245: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
     248: getfield      #10                 // Field io/undertow/client/http2/Http2ClientConnection.currentExchanges:Ljava/util/Map;
     251: aload_3
     252: invokevirtual #40                 // Method io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel.getAssociatedStreamId:()I
     255: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     258: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     263: checkcast     #14                 // class io/undertow/client/http2/Http2ClientExchange
     266: astore        4
     268: aload         4
     270: ifnonnull     281
     273: aload_1
     274: iconst_1
     275: invokevirtual #42                 // Method io/undertow/protocols/http2/Http2Channel.sendGoAway:(I)V
     278: goto          506
     281: aload         4
     283: invokevirtual #43                 // Method io/undertow/client/http2/Http2ClientExchange.getPushCallback:()Lio/undertow/client/PushCallback;
     286: ifnonnull     302
     289: aload_1
     290: aload_3
     291: invokevirtual #44                 // Method io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel.getPushedStreamId:()I
     294: bipush        7
     296: invokevirtual #45                 // Method io/undertow/protocols/http2/Http2Channel.sendRstStream:(II)V
     299: goto          506
     302: new           #46                 // class io/undertow/client/ClientRequest
     305: dup
     306: invokespecial #47                 // Method io/undertow/client/ClientRequest."<init>":()V
     309: astore        5
     311: aload         5
     313: new           #48                 // class io/undertow/util/HttpString
     316: dup
     317: aload_3
     318: invokevirtual #49                 // Method io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
     321: getstatic     #50                 // Field io/undertow/protocols/http2/Http2Channel.METHOD:Lio/undertow/util/HttpString;
     324: invokevirtual #8                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     327: invokespecial #51                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
     330: invokevirtual #52                 // Method io/undertow/client/ClientRequest.setMethod:(Lio/undertow/util/HttpString;)Lio/undertow/client/ClientRequest;
     333: pop
     334: aload         5
     336: aload_3
     337: invokevirtual #49                 // Method io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
     340: getstatic     #53                 // Field io/undertow/protocols/http2/Http2Channel.PATH:Lio/undertow/util/HttpString;
     343: invokevirtual #8                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     346: invokevirtual #54                 // Method io/undertow/client/ClientRequest.setPath:(Ljava/lang/String;)Lio/undertow/client/ClientRequest;
     349: pop
     350: aload         5
     352: getstatic     #55                 // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
     355: invokevirtual #56                 // Method io/undertow/client/ClientRequest.setProtocol:(Lio/undertow/util/HttpString;)Lio/undertow/client/ClientRequest;
     358: pop
     359: aload_3
     360: invokevirtual #49                 // Method io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
     363: invokevirtual #57                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
     366: astore        6
     368: aload         6
     370: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     375: ifeq          409
     378: aload         6
     380: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     385: checkcast     #60                 // class io/undertow/util/HeaderValues
     388: astore        7
     390: aload         5
     392: invokevirtual #61                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     395: aload         7
     397: invokevirtual #62                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     400: aload         7
     402: invokevirtual #63                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
     405: pop
     406: goto          368
     409: new           #14                 // class io/undertow/client/http2/Http2ClientExchange
     412: dup
     413: aload_0
     414: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
     417: aconst_null
     418: aload         5
     420: invokespecial #64                 // Method io/undertow/client/http2/Http2ClientExchange."<init>":(Lio/undertow/client/ClientConnection;Lio/undertow/protocols/http2/Http2StreamSinkChannel;Lio/undertow/client/ClientRequest;)V
     423: astore        6
     425: aload         4
     427: invokevirtual #43                 // Method io/undertow/client/http2/Http2ClientExchange.getPushCallback:()Lio/undertow/client/PushCallback;
     430: aload         4
     432: aload         6
     434: invokeinterface #65,  3           // InterfaceMethod io/undertow/client/PushCallback.handlePush:(Lio/undertow/client/ClientExchange;Lio/undertow/client/ClientExchange;)Z
     439: ifne          459
     442: aload_1
     443: aload_3
     444: invokevirtual #44                 // Method io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel.getPushedStreamId:()I
     447: bipush        7
     449: invokevirtual #45                 // Method io/undertow/protocols/http2/Http2Channel.sendRstStream:(II)V
     452: aload_3
     453: invokestatic  #66                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     456: goto          506
     459: aload_0
     460: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
     463: getfield      #19                 // Field io/undertow/client/http2/Http2ClientConnection.http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     466: aload_3
     467: invokevirtual #44                 // Method io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel.getPushedStreamId:()I
     470: invokevirtual #67                 // Method io/undertow/protocols/http2/Http2Channel.addPushPromiseStream:(I)Z
     473: ifne          484
     476: aload_1
     477: iconst_1
     478: invokevirtual #42                 // Method io/undertow/protocols/http2/Http2Channel.sendGoAway:(I)V
     481: goto          506
     484: aload_0
     485: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
     488: getfield      #10                 // Field io/undertow/client/http2/Http2ClientConnection.currentExchanges:Ljava/util/Map;
     491: aload_3
     492: invokevirtual #44                 // Method io/undertow/protocols/http2/Http2PushPromiseStreamSourceChannel.getPushedStreamId:()I
     495: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     498: aload         6
     500: invokeinterface #68,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     505: pop
     506: aload_2
     507: ldc2_w        #24                 // long 9223372036854775807l
     510: invokestatic  #26                 // Method org/xnio/channels/Channels.drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
     513: pop2
     514: goto          546
     517: aload_2
     518: instanceof    #69                 // class io/undertow/protocols/http2/Http2GoAwayStreamSourceChannel
     521: ifeq          534
     524: aload_0
     525: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
     528: invokevirtual #70                 // Method io/undertow/client/http2/Http2ClientConnection.close:()V
     531: goto          546
     534: aload_2
     535: ifnull        546
     538: aload_2
     539: ldc2_w        #24                 // long 9223372036854775807l
     542: invokestatic  #26                 // Method org/xnio/channels/Channels.drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
     545: pop2
     546: goto          555
     549: astore_2
     550: aload_0
     551: aload_2
     552: invokevirtual #72                 // Method handleThrowable:(Ljava/lang/Throwable;)V
     555: return
    Exception table:
       from    to  target type
           0   121   549   Class java/lang/Throwable
         122   546   549   Class java/lang/Throwable

  private void handleFinalResponse(io.undertow.protocols.http2.Http2Channel, io.undertow.client.http2.Http2ClientExchange, io.undertow.protocols.http2.Http2StreamSourceChannel) throws java.io.IOException;
    Code:
       0: aload_3
       1: aload_2
       2: invokedynamic #73,  0             // InvokeDynamic #0:handleTrailers:(Lio/undertow/client/http2/Http2ClientExchange;)Lio/undertow/protocols/http2/Http2StreamSourceChannel$TrailersHandler;
       7: invokevirtual #74                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.setTrailersHandler:(Lio/undertow/protocols/http2/Http2StreamSourceChannel$TrailersHandler;)V
      10: aload_3
      11: aload_0
      12: aload_3
      13: invokedynamic #75,  0             // InvokeDynamic #1:handleEvent:(Lio/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener;Lio/undertow/protocols/http2/Http2StreamSourceChannel;)Lorg/xnio/ChannelListener;
      18: invokevirtual #76                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.addCloseTask:(Lorg/xnio/ChannelListener;)V
      21: aload_3
      22: aload_0
      23: aload_3
      24: invokedynamic #77,  0             // InvokeDynamic #2:handleEvent:(Lio/undertow/client/http2/Http2ClientConnection$Http2ReceiveListener;Lio/undertow/protocols/http2/Http2StreamSourceChannel;)Lorg/xnio/ChannelListener;
      29: invokevirtual #78                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.setCompletionListener:(Lorg/xnio/ChannelListener;)V
      32: aload_2
      33: ifnonnull     63
      36: aload_0
      37: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
      40: getfield      #79                 // Field io/undertow/client/http2/Http2ClientConnection.initialUpgradeRequest:Z
      43: ifeq          63
      46: aload_3
      47: ldc2_w        #24                 // long 9223372036854775807l
      50: invokestatic  #26                 // Method org/xnio/channels/Channels.drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
      53: pop2
      54: aload_0
      55: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
      58: iconst_0
      59: putfield      #79                 // Field io/undertow/client/http2/Http2ClientConnection.initialUpgradeRequest:Z
      62: return
      63: aload_2
      64: ifnonnull     80
      67: aload_1
      68: iconst_1
      69: invokevirtual #42                 // Method io/undertow/protocols/http2/Http2Channel.sendGoAway:(I)V
      72: aload_0
      73: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
      76: invokestatic  #66                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      79: return
      80: aload_2
      81: aload_3
      82: invokevirtual #80                 // Method io/undertow/client/http2/Http2ClientExchange.responseReady:(Lio/undertow/protocols/http2/Http2StreamSourceChannel;)V
      85: return

  private void handlePing(io.undertow.protocols.http2.Http2PingStreamSourceChannel);
    Code:
       0: aload_1
       1: invokevirtual #81                 // Method io/undertow/protocols/http2/Http2PingStreamSourceChannel.getData:()[B
       4: astore_2
       5: aload_1
       6: invokevirtual #82                 // Method io/undertow/protocols/http2/Http2PingStreamSourceChannel.isAck:()Z
       9: ifne          23
      12: aload_1
      13: invokevirtual #83                 // Method io/undertow/protocols/http2/Http2PingStreamSourceChannel.getHttp2Channel:()Lio/undertow/protocols/http2/Http2Channel;
      16: aload_2
      17: invokevirtual #84                 // Method io/undertow/protocols/http2/Http2Channel.sendPing:([B)V
      20: goto          57
      23: aload_0
      24: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
      27: getfield      #85                 // Field io/undertow/client/http2/Http2ClientConnection.outstandingPings:Ljava/util/Map;
      30: new           #86                 // class io/undertow/client/http2/Http2ClientConnection$PingKey
      33: dup
      34: aload_2
      35: invokespecial #87                 // Method io/undertow/client/http2/Http2ClientConnection$PingKey."<init>":([B)V
      38: invokeinterface #35,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #88                 // class io/undertow/client/ClientConnection$PingListener
      46: astore_3
      47: aload_3
      48: ifnull        57
      51: aload_3
      52: invokeinterface #89,  1           // InterfaceMethod io/undertow/client/ClientConnection$PingListener.acknowledged:()V
      57: return

  private void handleThrowable(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #90                 // class java/io/IOException
       4: ifeq          14
       7: aload_1
       8: checkcast     #90                 // class java/io/IOException
      11: goto          22
      14: new           #90                 // class java/io/IOException
      17: dup
      18: aload_1
      19: invokespecial #91                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      22: astore_2
      23: getstatic     #92                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      26: aload_2
      27: invokeinterface #93,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
      32: aload_0
      33: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
      36: invokestatic  #66                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      39: aload_0
      40: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
      43: getfield      #10                 // Field io/undertow/client/http2/Http2ClientConnection.currentExchanges:Ljava/util/Map;
      46: invokeinterface #94,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      51: invokeinterface #95,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      56: astore_3
      57: aload_3
      58: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          116
      66: aload_3
      67: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #96                 // class java/util/Map$Entry
      75: astore        4
      77: aload         4
      79: invokeinterface #97,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      84: checkcast     #14                 // class io/undertow/client/http2/Http2ClientExchange
      87: aload_2
      88: invokevirtual #38                 // Method io/undertow/client/http2/Http2ClientExchange.failed:(Ljava/io/IOException;)V
      91: goto          113
      94: astore        5
      96: getstatic     #92                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      99: new           #90                 // class java/io/IOException
     102: dup
     103: aload         5
     105: invokespecial #91                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     108: invokeinterface #93,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     113: goto          57
     116: return
    Exception table:
       from    to  target type
          77    91    94   Class java/lang/Throwable

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #41                 // class io/undertow/protocols/http2/Http2Channel
       5: invokevirtual #98                 // Method handleEvent:(Lio/undertow/protocols/http2/Http2Channel;)V
       8: return

  private void lambda$handleFinalResponse$2(io.undertow.protocols.http2.Http2StreamSourceChannel, io.undertow.protocols.http2.Http2StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
       4: getfield      #10                 // Field io/undertow/client/http2/Http2ClientConnection.currentExchanges:Ljava/util/Map;
       7: aload_1
       8: invokevirtual #11                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getStreamId:()I
      11: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokeinterface #35,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  private void lambda$handleFinalResponse$1(io.undertow.protocols.http2.Http2StreamSourceChannel, io.undertow.protocols.http2.AbstractHttp2StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2ClientConnection;
       4: getfield      #10                 // Field io/undertow/client/http2/Http2ClientConnection.currentExchanges:Ljava/util/Map;
       7: aload_1
       8: invokevirtual #11                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getStreamId:()I
      11: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokeinterface #35,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  private static void lambda$handleFinalResponse$0(io.undertow.client.http2.Http2ClientExchange, io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: getstatic     #99                 // Field io/undertow/server/protocol/http/HttpAttachments.REQUEST_TRAILERS:Lio/undertow/util/AttachmentKey;
       4: aload_1
       5: invokevirtual #100                // Method io/undertow/client/http2/Http2ClientExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return
}
