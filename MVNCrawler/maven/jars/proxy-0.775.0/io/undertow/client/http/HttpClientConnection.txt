Compiled from "HttpClientConnection.java"
class io.undertow.client.http.HttpClientConnection extends io.undertow.util.AbstractAttachable implements java.io.Closeable,io.undertow.client.ClientConnection {
  public final io.undertow.conduits.ConduitListener<org.xnio.conduits.StreamSinkConduit> requestFinishListener;

  public final io.undertow.conduits.ConduitListener<org.xnio.conduits.StreamSourceConduit> responseFinishedListener;

  private static final org.jboss.logging.Logger log;

  private final java.util.Deque<io.undertow.client.http.HttpClientExchange> pendingQueue;

  private io.undertow.client.http.HttpClientExchange currentRequest;

  private io.undertow.client.http.HttpResponseBuilder pendingResponse;

  private final org.xnio.OptionMap options;

  private final org.xnio.StreamConnection connection;

  private final org.xnio.conduits.PushBackStreamSourceConduit pushBackStreamSourceConduit;

  private final io.undertow.client.http.HttpClientConnection$ClientReadListener clientReadListener;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private io.undertow.connector.PooledByteBuffer pooledBuffer;

  private final org.xnio.conduits.StreamSinkConduit originalSinkConduit;

  private static final int UPGRADED;

  private static final int UPGRADE_REQUESTED;

  private static final int CLOSE_REQ;

  private static final int CLOSED;

  private int state;

  private final org.xnio.ChannelListener$SimpleSetter<io.undertow.client.http.HttpClientConnection> closeSetter;

  private final io.undertow.client.ClientStatistics clientStatistics;

  private int requestCount;

  private int read;

  private int written;

  private boolean http2Tried;

  private boolean http2UpgradeReceived;

  private io.undertow.client.ClientConnection http2Delegate;

  private final java.util.List<org.xnio.ChannelListener<io.undertow.client.ClientConnection>> closeListeners;

  io.undertow.client.http.HttpClientConnection(org.xnio.StreamConnection, org.xnio.OptionMap, io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/undertow/util/AbstractAttachable."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/client/http/HttpClientConnection$1
       8: dup
       9: aload_0
      10: invokespecial #3                  // Method io/undertow/client/http/HttpClientConnection$1."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
      13: putfield      #4                  // Field requestFinishListener:Lio/undertow/conduits/ConduitListener;
      16: aload_0
      17: new           #5                  // class io/undertow/client/http/HttpClientConnection$2
      20: dup
      21: aload_0
      22: invokespecial #6                  // Method io/undertow/client/http/HttpClientConnection$2."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
      25: putfield      #7                  // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
      28: aload_0
      29: new           #8                  // class java/util/ArrayDeque
      32: dup
      33: invokespecial #9                  // Method java/util/ArrayDeque."<init>":()V
      36: putfield      #10                 // Field pendingQueue:Ljava/util/Deque;
      39: aload_0
      40: new           #11                 // class io/undertow/client/http/HttpClientConnection$ClientReadListener
      43: dup
      44: aload_0
      45: invokespecial #12                 // Method io/undertow/client/http/HttpClientConnection$ClientReadListener."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
      48: putfield      #13                 // Field clientReadListener:Lio/undertow/client/http/HttpClientConnection$ClientReadListener;
      51: aload_0
      52: new           #14                 // class org/xnio/ChannelListener$SimpleSetter
      55: dup
      56: invokespecial #15                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      59: putfield      #16                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      62: aload_0
      63: iconst_0
      64: putfield      #17                 // Field http2Tried:Z
      67: aload_0
      68: iconst_0
      69: putfield      #18                 // Field http2UpgradeReceived:Z
      72: aload_0
      73: new           #19                 // class java/util/concurrent/CopyOnWriteArrayList
      76: dup
      77: invokespecial #20                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      80: putfield      #21                 // Field closeListeners:Ljava/util/List;
      83: aload_2
      84: getstatic     #22                 // Field io/undertow/UndertowOptions.ENABLE_STATISTICS:Lorg/xnio/Option;
      87: iconst_0
      88: invokevirtual #23                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      91: ifeq          167
      94: aload_0
      95: new           #24                 // class io/undertow/client/http/HttpClientConnection$ClientStatisticsImpl
      98: dup
      99: aload_0
     100: invokespecial #25                 // Method io/undertow/client/http/HttpClientConnection$ClientStatisticsImpl."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
     103: putfield      #26                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
     106: aload_1
     107: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     110: new           #28                 // class io/undertow/conduits/BytesSentStreamSinkConduit
     113: dup
     114: aload_1
     115: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     118: invokevirtual #29                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     121: new           #30                 // class io/undertow/client/http/HttpClientConnection$3
     124: dup
     125: aload_0
     126: invokespecial #31                 // Method io/undertow/client/http/HttpClientConnection$3."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
     129: invokespecial #32                 // Method io/undertow/conduits/BytesSentStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ByteActivityCallback;)V
     132: invokevirtual #33                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     135: aload_1
     136: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     139: new           #35                 // class io/undertow/conduits/BytesReceivedStreamSourceConduit
     142: dup
     143: aload_1
     144: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     147: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     150: new           #37                 // class io/undertow/client/http/HttpClientConnection$4
     153: dup
     154: aload_0
     155: invokespecial #38                 // Method io/undertow/client/http/HttpClientConnection$4."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
     158: invokespecial #39                 // Method io/undertow/conduits/BytesReceivedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ByteActivityCallback;)V
     161: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     164: goto          172
     167: aload_0
     168: aconst_null
     169: putfield      #26                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
     172: aload_0
     173: aload_2
     174: putfield      #41                 // Field options:Lorg/xnio/OptionMap;
     177: aload_0
     178: aload_1
     179: putfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     182: aload_0
     183: new           #43                 // class org/xnio/conduits/PushBackStreamSourceConduit
     186: dup
     187: aload_1
     188: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     191: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     194: invokespecial #44                 // Method org/xnio/conduits/PushBackStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
     197: putfield      #45                 // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
     200: aload_0
     201: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     204: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     207: aload_0
     208: getfield      #45                 // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
     211: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     214: aload_0
     215: aload_3
     216: putfield      #46                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     219: aload_0
     220: aload_1
     221: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     224: invokevirtual #29                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     227: putfield      #47                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
     230: aload_1
     231: invokevirtual #48                 // Method org/xnio/StreamConnection.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     234: new           #49                 // class io/undertow/client/http/HttpClientConnection$5
     237: dup
     238: aload_0
     239: invokespecial #50                 // Method io/undertow/client/http/HttpClientConnection$5."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
     242: invokeinterface #51,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     247: aload_1
     248: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     251: aload_0
     252: getfield      #13                 // Field clientReadListener:Lio/undertow/client/http/HttpClientConnection$ClientReadListener;
     255: invokevirtual #52                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
     258: aload_1
     259: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     262: invokevirtual #53                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     265: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #46                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #54                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  org.xnio.StreamConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
       4: areturn

  public <A extends java.net.SocketAddress> A getPeerAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #55                 // Method org/xnio/StreamConnection.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.ChannelListener$Setter<? extends io.undertow.client.http.HttpClientConnection> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #16                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #56                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #57                 // Method org/xnio/StreamConnection.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #58                 // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #59                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #61,  1           // InterfaceMethod io/undertow/client/ClientConnection.isOpen:()Z
      16: ireturn
      17: aload_0
      18: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      21: invokevirtual #62                 // Method org/xnio/StreamConnection.isOpen:()Z
      24: ifeq          43
      27: aload_0
      28: getfield      #63                 // Field state:I
      31: ldc           #65                 // int -1073741824
      33: invokestatic  #66                 // Method org/xnio/Bits.allAreClear:(II)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        18
       7: aload_0
       8: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: aload_1
      12: invokeinterface #67,  2           // InterfaceMethod io/undertow/client/ClientConnection.supportsOption:(Lorg/xnio/Option;)Z
      17: ireturn
      18: aload_0
      19: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      22: aload_1
      23: invokevirtual #68                 // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
      26: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        18
       7: aload_0
       8: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: aload_1
      12: invokeinterface #69,  2           // InterfaceMethod io/undertow/client/ClientConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      17: areturn
      18: aload_0
      19: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      22: aload_1
      23: invokevirtual #70                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      26: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        19
       7: aload_0
       8: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: aload_1
      12: aload_2
      13: invokeinterface #71,  3           // InterfaceMethod io/undertow/client/ClientConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn
      19: aload_0
      20: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      23: aload_1
      24: aload_2
      25: invokevirtual #72                 // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn

  public boolean isUpgraded();
    Code:
       0: aload_0
       1: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #73,  1           // InterfaceMethod io/undertow/client/ClientConnection.isUpgraded:()Z
      16: ireturn
      17: aload_0
      18: getfield      #63                 // Field state:I
      21: ldc           #74                 // int 805306368
      23: invokestatic  #75                 // Method org/xnio/Bits.anyAreSet:(II)Z
      26: ireturn

  public boolean isPushSupported();
    Code:
       0: aload_0
       1: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #76,  1           // InterfaceMethod io/undertow/client/ClientConnection.isPushSupported:()Z
      16: ireturn
      17: iconst_0
      18: ireturn

  public boolean isMultiplexingSupported();
    Code:
       0: aload_0
       1: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #77,  1           // InterfaceMethod io/undertow/client/ClientConnection.isMultiplexingSupported:()Z
      16: ireturn
      17: iconst_0
      18: ireturn

  public io.undertow.client.ClientStatistics getStatistics();
    Code:
       0: aload_0
       1: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #78,  1           // InterfaceMethod io/undertow/client/ClientConnection.getStatistics:()Lio/undertow/client/ClientStatistics;
      16: areturn
      17: aload_0
      18: getfield      #26                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
      21: areturn

  public boolean isUpgradeSupported();
    Code:
       0: aload_0
       1: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        9
       7: iconst_0
       8: ireturn
       9: iconst_1
      10: ireturn

  public void addCloseListener(org.xnio.ChannelListener<io.undertow.client.ClientConnection>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field closeListeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void sendRequest(io.undertow.client.ClientRequest, io.undertow.client.ClientCallback<io.undertow.client.ClientExchange>);
    Code:
       0: aload_0
       1: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
       4: getstatic     #80                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
       7: invokevirtual #70                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      10: checkcast     #81                 // class java/lang/Integer
      13: astore_3
      14: aload_3
      15: ifnull        67
      18: aload_3
      19: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
      22: ifle          67
      25: aload_0
      26: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      29: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      32: new           #83                 // class io/undertow/conduits/ReadTimeoutStreamSourceConduit
      35: dup
      36: aload_0
      37: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      40: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      43: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      46: aload_0
      47: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      50: new           #84                 // class io/undertow/server/protocol/http/HttpOpenListener
      53: dup
      54: aload_0
      55: getfield      #46                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      58: invokespecial #85                 // Method io/undertow/server/protocol/http/HttpOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;)V
      61: invokespecial #86                 // Method io/undertow/conduits/ReadTimeoutStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lorg/xnio/StreamConnection;Lio/undertow/server/OpenListener;)V
      64: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      67: aload_0
      68: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      71: getstatic     #87                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
      74: invokevirtual #70                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      77: checkcast     #81                 // class java/lang/Integer
      80: astore        4
      82: aload         4
      84: ifnull        137
      87: aload         4
      89: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
      92: ifle          137
      95: aload_0
      96: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      99: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     102: new           #88                 // class io/undertow/conduits/WriteTimeoutStreamSinkConduit
     105: dup
     106: aload_0
     107: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     110: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     113: invokevirtual #29                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     116: aload_0
     117: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     120: new           #84                 // class io/undertow/server/protocol/http/HttpOpenListener
     123: dup
     124: aload_0
     125: getfield      #46                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     128: invokespecial #85                 // Method io/undertow/server/protocol/http/HttpOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;)V
     131: invokespecial #89                 // Method io/undertow/conduits/WriteTimeoutStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/StreamConnection;Lio/undertow/server/OpenListener;)V
     134: invokevirtual #33                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     137: goto          157
     140: astore_3
     141: aload_0
     142: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     145: invokestatic  #91                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     148: getstatic     #92                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     151: aload_3
     152: invokeinterface #93,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     157: aload_0
     158: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
     161: ifnull        176
     164: aload_0
     165: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
     168: aload_1
     169: aload_2
     170: invokeinterface #94,  3           // InterfaceMethod io/undertow/client/ClientConnection.sendRequest:(Lio/undertow/client/ClientRequest;Lio/undertow/client/ClientCallback;)V
     175: return
     176: aload_0
     177: getfield      #63                 // Field state:I
     180: ldc           #95                 // int -268435456
     182: invokestatic  #75                 // Method org/xnio/Bits.anyAreSet:(II)Z
     185: ifeq          203
     188: aload_2
     189: getstatic     #96                 // Field io/undertow/client/UndertowClientMessages.MESSAGES:Lio/undertow/client/UndertowClientMessages;
     192: invokeinterface #97,  1           // InterfaceMethod io/undertow/client/UndertowClientMessages.invalidConnectionState:()Ljava/io/IOException;
     197: invokeinterface #98,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     202: return
     203: new           #99                 // class io/undertow/client/http/HttpClientExchange
     206: dup
     207: aload_2
     208: aload_1
     209: aload_0
     210: invokespecial #100                // Method io/undertow/client/http/HttpClientExchange."<init>":(Lio/undertow/client/ClientCallback;Lio/undertow/client/ClientRequest;Lio/undertow/client/http/HttpClientConnection;)V
     213: astore_3
     214: aload_0
     215: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     218: instanceof    #101                // class org/xnio/ssl/SslConnection
     221: istore        4
     223: iload         4
     225: ifne          321
     228: aload_0
     229: getfield      #17                 // Field http2Tried:Z
     232: ifne          321
     235: aload_0
     236: getfield      #41                 // Field options:Lorg/xnio/OptionMap;
     239: getstatic     #102                // Field io/undertow/UndertowOptions.ENABLE_HTTP2:Lorg/xnio/Option;
     242: iconst_0
     243: invokevirtual #23                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     246: ifeq          321
     249: aload_1
     250: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     253: getstatic     #104                // Field io/undertow/util/Headers.UPGRADE:Lio/undertow/util/HttpString;
     256: invokevirtual #105                // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     259: ifne          321
     262: aload_1
     263: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     266: new           #106                // class io/undertow/util/HttpString
     269: dup
     270: ldc           #107                // String HTTP2-Settings
     272: invokespecial #108                // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
     275: aload_0
     276: getfield      #41                 // Field options:Lorg/xnio/OptionMap;
     279: aload_0
     280: getfield      #46                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     283: invokestatic  #109                // Method io/undertow/client/http2/Http2ClearClientProvider.createSettingsFrame:(Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;)Ljava/lang/String;
     286: invokevirtual #110                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     289: pop
     290: aload_1
     291: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     294: getstatic     #104                // Field io/undertow/util/Headers.UPGRADE:Lio/undertow/util/HttpString;
     297: ldc           #112                // String h2c
     299: invokevirtual #110                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     302: pop
     303: aload_1
     304: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     307: getstatic     #113                // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     310: ldc           #114                // String Upgrade, HTTP2-Settings
     312: invokevirtual #110                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     315: pop
     316: aload_0
     317: iconst_1
     318: putfield      #17                 // Field http2Tried:Z
     321: aload_0
     322: getfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     325: ifnonnull     336
     328: aload_0
     329: aload_3
     330: invokevirtual #116                // Method initiateRequest:(Lio/undertow/client/http/HttpClientExchange;)V
     333: goto          347
     336: aload_0
     337: getfield      #10                 // Field pendingQueue:Ljava/util/Deque;
     340: aload_3
     341: invokeinterface #117,  2          // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     346: pop
     347: return
    Exception table:
       from    to  target type
           0   137   140   Class java/io/IOException

  private void initiateRequest(io.undertow.client.http.HttpClientExchange);
    Code:
       0: aload_0
       1: dup
       2: getfield      #118                // Field requestCount:I
       5: iconst_1
       6: iadd
       7: putfield      #118                // Field requestCount:I
      10: aload_0
      11: aload_1
      12: putfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      15: aload_0
      16: new           #119                // class io/undertow/client/http/HttpResponseBuilder
      19: dup
      20: invokespecial #120                // Method io/undertow/client/http/HttpResponseBuilder."<init>":()V
      23: putfield      #121                // Field pendingResponse:Lio/undertow/client/http/HttpResponseBuilder;
      26: aload_1
      27: invokevirtual #122                // Method io/undertow/client/http/HttpClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      30: astore_2
      31: aload_2
      32: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      35: getstatic     #113                // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
      38: invokevirtual #123                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      41: astore_3
      42: aload_3
      43: ifnull        94
      46: getstatic     #124                // Field io/undertow/util/Headers.CLOSE:Lio/undertow/util/HttpString;
      49: aload_3
      50: invokevirtual #125                // Method io/undertow/util/HttpString.equalToString:(Ljava/lang/String;)Z
      53: ifeq          70
      56: aload_0
      57: dup
      58: getfield      #63                 // Field state:I
      61: ldc           #126                // int 1073741824
      63: ior
      64: putfield      #63                 // Field state:I
      67: goto          115
      70: getstatic     #104                // Field io/undertow/util/Headers.UPGRADE:Lio/undertow/util/HttpString;
      73: aload_3
      74: invokevirtual #125                // Method io/undertow/util/HttpString.equalToString:(Ljava/lang/String;)Z
      77: ifeq          115
      80: aload_0
      81: dup
      82: getfield      #63                 // Field state:I
      85: ldc           #127                // int 536870912
      87: ior
      88: putfield      #63                 // Field state:I
      91: goto          115
      94: aload_2
      95: invokevirtual #128                // Method io/undertow/client/ClientRequest.getProtocol:()Lio/undertow/util/HttpString;
      98: getstatic     #129                // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
     101: if_acmpeq     115
     104: aload_0
     105: dup
     106: getfield      #63                 // Field state:I
     109: ldc           #126                // int 1073741824
     111: ior
     112: putfield      #63                 // Field state:I
     115: aload_2
     116: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     119: getstatic     #104                // Field io/undertow/util/Headers.UPGRADE:Lio/undertow/util/HttpString;
     122: invokevirtual #105                // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     125: ifeq          139
     128: aload_0
     129: dup
     130: getfield      #63                 // Field state:I
     133: ldc           #127                // int 536870912
     135: ior
     136: putfield      #63                 // Field state:I
     139: aload_2
     140: invokevirtual #130                // Method io/undertow/client/ClientRequest.getMethod:()Lio/undertow/util/HttpString;
     143: getstatic     #131                // Field io/undertow/util/Methods.CONNECT:Lio/undertow/util/HttpString;
     146: invokevirtual #132                // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     149: ifeq          163
     152: aload_0
     153: dup
     154: getfield      #63                 // Field state:I
     157: ldc           #127                // int 536870912
     159: ior
     160: putfield      #63                 // Field state:I
     163: aload_0
     164: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     167: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     170: astore        4
     172: aload         4
     174: aload_0
     175: getfield      #13                 // Field clientReadListener:Lio/undertow/client/http/HttpClientConnection$ClientReadListener;
     178: invokevirtual #52                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
     181: aload         4
     183: invokevirtual #53                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     186: aload_0
     187: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     190: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     193: astore        5
     195: aload_0
     196: getfield      #47                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
     199: astore        6
     201: new           #133                // class io/undertow/client/http/HttpRequestConduit
     204: dup
     205: aload         6
     207: aload_0
     208: getfield      #46                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     211: aload_2
     212: invokespecial #134                // Method io/undertow/client/http/HttpRequestConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/connector/ByteBufferPool;Lio/undertow/client/ClientRequest;)V
     215: astore        7
     217: aload_1
     218: aload         7
     220: invokevirtual #135                // Method io/undertow/client/http/HttpClientExchange.setRequestConduit:(Lio/undertow/client/http/HttpRequestConduit;)V
     223: aload         7
     225: astore        6
     227: aload_2
     228: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     231: getstatic     #136                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     234: invokevirtual #123                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     237: astore        8
     239: aload_2
     240: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     243: getstatic     #137                // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     246: invokevirtual #138                // Method io/undertow/util/HeaderMap.getLast:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     249: astore        9
     251: iconst_1
     252: istore        10
     254: aload         8
     256: ifnull        311
     259: aload         8
     261: invokestatic  #139                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     264: lstore        11
     266: new           #140                // class io/undertow/client/http/ClientFixedLengthStreamSinkConduit
     269: dup
     270: aload         6
     272: lload         11
     274: iconst_0
     275: iconst_0
     276: aload_0
     277: getfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     280: invokespecial #141                // Method io/undertow/client/http/ClientFixedLengthStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;JZZLio/undertow/client/http/HttpClientExchange;)V
     283: astore        6
     285: lload         11
     287: lconst_0
     288: lcmp
     289: ifeq          296
     292: iconst_1
     293: goto          297
     296: iconst_0
     297: istore        10
     299: goto          409
     302: astore        11
     304: aload_0
     305: aload         11
     307: invokevirtual #143                // Method handleError:(Ljava/lang/Throwable;)V
     310: return
     311: aload         9
     313: ifnull        388
     316: aload         9
     318: getstatic     #144                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
     321: invokevirtual #145                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     324: getstatic     #146                // Field io/undertow/util/Headers.CHUNKED:Lio/undertow/util/HttpString;
     327: invokevirtual #147                // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     330: invokevirtual #148                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     333: ifne          351
     336: aload_0
     337: getstatic     #96                 // Field io/undertow/client/UndertowClientMessages.MESSAGES:Lio/undertow/client/UndertowClientMessages;
     340: aload         9
     342: invokeinterface #149,  2          // InterfaceMethod io/undertow/client/UndertowClientMessages.unknownTransferEncoding:(Ljava/lang/String;)Ljava/io/IOException;
     347: invokevirtual #150                // Method handleError:(Ljava/io/IOException;)V
     350: return
     351: new           #151                // class io/undertow/conduits/ChunkedStreamSinkConduit
     354: dup
     355: aload         6
     357: aload_1
     358: invokevirtual #152                // Method io/undertow/client/http/HttpClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
     361: invokeinterface #153,  1          // InterfaceMethod io/undertow/client/ClientConnection.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
     366: iconst_0
     367: iconst_0
     368: aload_1
     369: invokevirtual #122                // Method io/undertow/client/http/HttpClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
     372: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     375: aload_0
     376: getfield      #4                  // Field requestFinishListener:Lio/undertow/conduits/ConduitListener;
     379: aload_1
     380: invokespecial #154                // Method io/undertow/conduits/ChunkedStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/connector/ByteBufferPool;ZZLio/undertow/util/HeaderMap;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;)V
     383: astore        6
     385: goto          409
     388: new           #140                // class io/undertow/client/http/ClientFixedLengthStreamSinkConduit
     391: dup
     392: aload         6
     394: lconst_0
     395: iconst_0
     396: iconst_0
     397: aload_0
     398: getfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     401: invokespecial #141                // Method io/undertow/client/http/ClientFixedLengthStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;JZZLio/undertow/client/http/HttpClientExchange;)V
     404: astore        6
     406: iconst_0
     407: istore        10
     409: aload         5
     411: aload         6
     413: invokevirtual #33                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     416: aload_1
     417: invokevirtual #155                // Method io/undertow/client/http/HttpClientExchange.invokeReadReadyCallback:()V
     420: iload         10
     422: ifne          471
     425: aload         5
     427: invokevirtual #156                // Method org/xnio/conduits/ConduitStreamSinkChannel.shutdownWrites:()V
     430: aload         5
     432: invokevirtual #157                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     435: ifne          460
     438: aload         5
     440: aconst_null
     441: new           #158                // class io/undertow/client/http/HttpClientConnection$6
     444: dup
     445: aload_0
     446: invokespecial #159                // Method io/undertow/client/http/HttpClientConnection$6."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
     449: invokestatic  #160                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     452: invokevirtual #161                // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
     455: aload         5
     457: invokevirtual #162                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     460: goto          471
     463: astore        11
     465: aload_0
     466: aload         11
     468: invokevirtual #143                // Method handleError:(Ljava/lang/Throwable;)V
     471: return
    Exception table:
       from    to  target type
         259   299   302   Class java/lang/NumberFormatException
         425   460   463   Class java/lang/Throwable

  private void handleError(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #90                 // class java/io/IOException
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #90                 // class java/io/IOException
      12: invokevirtual #150                // Method handleError:(Ljava/io/IOException;)V
      15: goto          30
      18: aload_0
      19: new           #90                 // class java/io/IOException
      22: dup
      23: aload_1
      24: invokespecial #164                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      27: invokevirtual #150                // Method handleError:(Ljava/io/IOException;)V
      30: return

  private void handleError(java.io.IOException);
    Code:
       0: getstatic     #92                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_1
       4: invokeinterface #93,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
       9: aload_0
      10: getfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      13: aload_1
      14: invokevirtual #165                // Method io/undertow/client/http/HttpClientExchange.setFailed:(Ljava/io/IOException;)V
      17: aload_0
      18: aconst_null
      19: putfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      22: aload_0
      23: aconst_null
      24: putfield      #121                // Field pendingResponse:Lio/undertow/client/http/HttpResponseBuilder;
      27: aload_0
      28: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      31: invokestatic  #91                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      34: return

  public org.xnio.StreamConnection performUpgrade() throws java.io.IOException;
    Code:
       0: getstatic     #166                // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #167                // String connection to %s is being upgraded
       5: aload_0
       6: invokevirtual #168                // Method getPeerAddress:()Ljava/net/SocketAddress;
       9: invokevirtual #169                // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #63                 // Field state:I
      16: ldc           #170                // int -805306368
      18: invokestatic  #171                // Method org/xnio/Bits.allAreSet:(II)Z
      21: ifeq          40
      24: new           #90                 // class java/io/IOException
      27: dup
      28: getstatic     #96                 // Field io/undertow/client/UndertowClientMessages.MESSAGES:Lio/undertow/client/UndertowClientMessages;
      31: invokeinterface #172,  1          // InterfaceMethod io/undertow/client/UndertowClientMessages.connectionClosed:()Ljava/lang/String;
      36: invokespecial #173                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: dup
      42: getfield      #63                 // Field state:I
      45: ldc           #174                // int 268435456
      47: ior
      48: putfield      #63                 // Field state:I
      51: aload_0
      52: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      55: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      58: aload_0
      59: getfield      #47                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
      62: invokevirtual #33                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      65: aload_0
      66: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      69: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      72: aload_0
      73: getfield      #45                 // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
      76: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      79: aload_0
      80: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      83: areturn

  public void close() throws java.io.IOException;
    Code:
       0: getstatic     #166                // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #175                // String close called on connection to %s
       5: aload_0
       6: invokevirtual #168                // Method getPeerAddress:()Ljava/net/SocketAddress;
       9: invokevirtual #169                // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      16: ifnull        28
      19: aload_0
      20: getfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      23: invokeinterface #176,  1          // InterfaceMethod io/undertow/client/ClientConnection.close:()V
      28: aload_0
      29: getfield      #63                 // Field state:I
      32: ldc           #177                // int -2147483648
      34: invokestatic  #75                 // Method org/xnio/Bits.anyAreSet:(II)Z
      37: ifeq          41
      40: return
      41: aload_0
      42: dup
      43: getfield      #63                 // Field state:I
      46: ldc           #65                 // int -1073741824
      48: ior
      49: putfield      #63                 // Field state:I
      52: aload_0
      53: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      56: iconst_0
      57: anewarray     #178                // class java/io/Closeable
      60: invokestatic  #179                // Method io/undertow/util/ConnectionUtils.cleanClose:(Lorg/xnio/StreamConnection;[Ljava/io/Closeable;)V
      63: return

  public void exchangeDone();
    Code:
       0: getstatic     #166                // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #180                // String exchange complete in connection to %s
       5: aload_0
       6: invokevirtual #168                // Method getPeerAddress:()Ljava/net/SocketAddress;
       9: invokevirtual #169                // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      16: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      19: aload_0
      20: getfield      #47                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
      23: invokevirtual #33                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      26: aload_0
      27: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      30: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      33: aload_0
      34: getfield      #45                 // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
      37: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      40: aload_0
      41: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      44: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      47: invokevirtual #181                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      50: aload_0
      51: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      54: invokevirtual #27                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      57: aconst_null
      58: invokevirtual #161                // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
      61: aload_0
      62: getfield      #63                 // Field state:I
      65: ldc           #126                // int 1073741824
      67: invokestatic  #75                 // Method org/xnio/Bits.anyAreSet:(II)Z
      70: ifeq          104
      73: aload_0
      74: aconst_null
      75: putfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      78: aload_0
      79: aconst_null
      80: putfield      #121                // Field pendingResponse:Lio/undertow/client/http/HttpResponseBuilder;
      83: aload_0
      84: dup
      85: getfield      #63                 // Field state:I
      88: ldc           #177                // int -2147483648
      90: ior
      91: putfield      #63                 // Field state:I
      94: aload_0
      95: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      98: invokestatic  #91                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     101: goto          137
     104: aload_0
     105: getfield      #63                 // Field state:I
     108: ldc           #127                // int 536870912
     110: invokestatic  #75                 // Method org/xnio/Bits.anyAreSet:(II)Z
     113: ifeq          137
     116: aload_0
     117: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     120: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     123: invokevirtual #182                // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     126: aload_0
     127: aconst_null
     128: putfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     131: aload_0
     132: aconst_null
     133: putfield      #121                // Field pendingResponse:Lio/undertow/client/http/HttpResponseBuilder;
     136: return
     137: aload_0
     138: aconst_null
     139: putfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     142: aload_0
     143: aconst_null
     144: putfield      #121                // Field pendingResponse:Lio/undertow/client/http/HttpResponseBuilder;
     147: aload_0
     148: getfield      #10                 // Field pendingQueue:Ljava/util/Deque;
     151: invokeinterface #183,  1          // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     156: checkcast     #99                 // class io/undertow/client/http/HttpClientExchange
     159: astore_1
     160: aload_1
     161: ifnonnull     191
     164: aload_0
     165: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     168: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     171: aload_0
     172: getfield      #13                 // Field clientReadListener:Lio/undertow/client/http/HttpClientConnection$ClientReadListener;
     175: invokevirtual #52                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
     178: aload_0
     179: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     182: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     185: invokevirtual #53                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     188: goto          196
     191: aload_0
     192: aload_1
     193: invokevirtual #116                // Method initiateRequest:(Lio/undertow/client/http/HttpClientExchange;)V
     196: return

  public void requestDataSent();
    Code:
       0: aload_0
       1: getfield      #18                 // Field http2UpgradeReceived:Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #184                // Method doHttp2Upgrade:()V
      11: return

  protected void doHttp2Upgrade();
    Code:
       0: aload_0
       1: invokevirtual #185                // Method performUpgrade:()Lorg/xnio/StreamConnection;
       4: astore_1
       5: new           #111                // class io/undertow/protocols/http2/Http2Channel
       8: dup
       9: aload_1
      10: aconst_null
      11: aload_0
      12: getfield      #46                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      15: aconst_null
      16: iconst_1
      17: iconst_1
      18: aload_0
      19: getfield      #41                 // Field options:Lorg/xnio/OptionMap;
      22: invokespecial #186                // Method io/undertow/protocols/http2/Http2Channel."<init>":(Lorg/xnio/StreamConnection;Ljava/lang/String;Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/PooledByteBuffer;ZZLorg/xnio/OptionMap;)V
      25: astore_2
      26: new           #187                // class io/undertow/client/http2/Http2ClientConnection
      29: dup
      30: aload_2
      31: aload_0
      32: getfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      35: invokevirtual #188                // Method io/undertow/client/http/HttpClientExchange.getResponseCallback:()Lio/undertow/client/ClientCallback;
      38: aload_0
      39: getfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      42: invokevirtual #122                // Method io/undertow/client/http/HttpClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      45: aload_0
      46: getfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      49: invokevirtual #122                // Method io/undertow/client/http/HttpClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      52: invokevirtual #103                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      55: getstatic     #189                // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
      58: invokevirtual #123                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      61: aload_0
      62: getfield      #26                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
      65: iconst_0
      66: invokespecial #190                // Method io/undertow/client/http2/Http2ClientConnection."<init>":(Lio/undertow/protocols/http2/Http2Channel;Lio/undertow/client/ClientCallback;Lio/undertow/client/ClientRequest;Ljava/lang/String;Lio/undertow/client/ClientStatistics;Z)V
      69: astore_3
      70: aload_3
      71: invokevirtual #191                // Method io/undertow/client/http2/Http2ClientConnection.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
      74: new           #192                // class io/undertow/client/http/HttpClientConnection$7
      77: dup
      78: aload_0
      79: invokespecial #193                // Method io/undertow/client/http/HttpClientConnection$7."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
      82: invokeinterface #51,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      87: aload_0
      88: aload_3
      89: putfield      #60                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      92: aload_1
      93: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      96: invokevirtual #194                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
      99: aload_0
     100: aconst_null
     101: putfield      #115                // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     104: aload_0
     105: aconst_null
     106: putfield      #121                // Field pendingResponse:Lio/undertow/client/http/HttpResponseBuilder;
     109: goto          126
     112: astore_1
     113: getstatic     #92                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     116: aload_1
     117: invokeinterface #93,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     122: aload_0
     123: invokestatic  #91                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     126: return
    Exception table:
       from    to  target type
           0   109   112   Class java/io/IOException

  private void prepareResponseChannel(io.undertow.client.ClientResponse, io.undertow.client.ClientExchange);
    Code:
       0: aload_1
       1: invokevirtual #195                // Method io/undertow/client/ClientResponse.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #137                // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
       7: invokevirtual #138                // Method io/undertow/util/HeaderMap.getLast:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      10: astore_3
      11: aload_3
      12: ifnull        36
      15: getstatic     #146                // Field io/undertow/util/Headers.CHUNKED:Lio/undertow/util/HttpString;
      18: new           #106                // class io/undertow/util/HttpString
      21: dup
      22: aload_3
      23: invokespecial #108                // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      26: invokevirtual #132                // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: istore        4
      39: aload_1
      40: invokevirtual #195                // Method io/undertow/client/ClientResponse.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      43: getstatic     #136                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      46: invokevirtual #123                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      49: astore        5
      51: aload_2
      52: invokeinterface #196,  1          // InterfaceMethod io/undertow/client/ClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      57: invokevirtual #130                // Method io/undertow/client/ClientRequest.getMethod:()Lio/undertow/util/HttpString;
      60: getstatic     #197                // Field io/undertow/util/Methods.HEAD:Lio/undertow/util/HttpString;
      63: invokevirtual #132                // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      66: ifeq          104
      69: aload_0
      70: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      73: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      76: new           #198                // class io/undertow/conduits/FixedLengthStreamSourceConduit
      79: dup
      80: aload_0
      81: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
      84: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      87: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      90: lconst_0
      91: aload_0
      92: getfield      #7                  // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
      95: invokespecial #199                // Method io/undertow/conduits/FixedLengthStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;JLio/undertow/conduits/ConduitListener;)V
      98: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     101: goto          315
     104: iload         4
     106: ifeq          156
     109: aload_0
     110: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     113: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     116: new           #200                // class io/undertow/conduits/ChunkedStreamSourceConduit
     119: dup
     120: aload_0
     121: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     124: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     127: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     130: aload_0
     131: getfield      #45                 // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
     134: aload_0
     135: getfield      #46                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     138: aload_0
     139: getfield      #7                  // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
     142: aload_2
     143: aload_0
     144: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     147: invokespecial #201                // Method io/undertow/conduits/ChunkedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lorg/xnio/conduits/PushBackStreamSourceConduit;Lio/undertow/connector/ByteBufferPool;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;Ljava/io/Closeable;)V
     150: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     153: goto          315
     156: aload         5
     158: ifnull        215
     161: aload         5
     163: invokestatic  #139                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     166: lstore        6
     168: aload_0
     169: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     172: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     175: new           #198                // class io/undertow/conduits/FixedLengthStreamSourceConduit
     178: dup
     179: aload_0
     180: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     183: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     186: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     189: lload         6
     191: aload_0
     192: getfield      #7                  // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
     195: invokespecial #199                // Method io/undertow/conduits/FixedLengthStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;JLio/undertow/conduits/ConduitListener;)V
     198: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     201: goto          315
     204: astore        6
     206: aload_0
     207: aload         6
     209: invokevirtual #143                // Method handleError:(Ljava/lang/Throwable;)V
     212: aload         6
     214: athrow
     215: aload_1
     216: invokevirtual #202                // Method io/undertow/client/ClientResponse.getProtocol:()Lio/undertow/util/HttpString;
     219: getstatic     #129                // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
     222: invokevirtual #132                // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     225: ifeq          273
     228: aload_1
     229: invokevirtual #203                // Method io/undertow/client/ClientResponse.getResponseCode:()I
     232: invokestatic  #204                // Method io/undertow/server/Connectors.isEntityBodyAllowed:(I)Z
     235: ifne          273
     238: aload_0
     239: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     242: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     245: new           #198                // class io/undertow/conduits/FixedLengthStreamSourceConduit
     248: dup
     249: aload_0
     250: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     253: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     256: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     259: lconst_0
     260: aload_0
     261: getfield      #7                  // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
     264: invokespecial #199                // Method io/undertow/conduits/FixedLengthStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;JLio/undertow/conduits/ConduitListener;)V
     267: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     270: goto          315
     273: aload_0
     274: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     277: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     280: new           #205                // class io/undertow/conduits/FinishableStreamSourceConduit
     283: dup
     284: aload_0
     285: getfield      #42                 // Field connection:Lorg/xnio/StreamConnection;
     288: invokevirtual #34                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     291: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     294: aload_0
     295: getfield      #7                  // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
     298: invokespecial #206                // Method io/undertow/conduits/FinishableStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ConduitListener;)V
     301: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     304: aload_0
     305: dup
     306: getfield      #63                 // Field state:I
     309: ldc           #126                // int 1073741824
     311: ior
     312: putfield      #63                 // Field state:I
     315: return
    Exception table:
       from    to  target type
         161   201   204   Class java/lang/NumberFormatException

  static {};
    Code:
       0: ldc           #64                 // class io/undertow/client/http/HttpClientConnection
       2: invokestatic  #207                // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #166                // Field log:Lorg/jboss/logging/Logger;
       8: return
}
