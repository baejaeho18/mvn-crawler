Compiled from "HttpClientProvider.java"
public class io.undertow.client.http.HttpClientProvider implements io.undertow.client.ClientProvider {
  public static final java.lang.String DISABLE_HTTPS_ENDPOINT_IDENTIFICATION_PROPERTY;

  public static final boolean DISABLE_HTTPS_ENDPOINT_IDENTIFICATION;

  public io.undertow.client.http.HttpClientProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.Set<java.lang.String> handlesSchemes();
    Code:
       0: new           #2                  // class java/util/HashSet
       3: dup
       4: iconst_2
       5: anewarray     #3                  // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #4                  // String http
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #5                  // String https
      17: aastore
      18: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokespecial #7                  // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      24: areturn

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #8                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioWorker;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #9                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioIoThread;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_3
       1: invokevirtual #10                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: ldc           #5                  // String https
       6: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          202
      12: aload         5
      14: ifnonnull     32
      17: aload_1
      18: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      21: invokeinterface #13,  1           // InterfaceMethod io/undertow/UndertowMessages.sslWasNull:()Ljava/io/IOException;
      26: invokeinterface #14,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      31: return
      32: invokestatic  #15                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      35: getstatic     #16                 // Field io/undertow/UndertowOptions.ENDPOINT_IDENTIFICATION_ALGORITHM:Lorg/xnio/Option;
      38: getstatic     #17                 // Field DISABLE_HTTPS_ENDPOINT_IDENTIFICATION:Z
      41: ifeq          49
      44: ldc           #18                 // String
      46: goto          51
      49: ldc           #19                 // String HTTPS
      51: invokevirtual #20                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap$Builder;
      54: aload         7
      56: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
      59: getstatic     #22                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
      62: iconst_1
      63: invokevirtual #23                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      66: invokevirtual #24                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      69: astore        8
      71: aload_2
      72: ifnonnull     138
      75: aload         5
      77: aload         4
      79: new           #25                 // class java/net/InetSocketAddress
      82: dup
      83: aload_3
      84: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
      87: aload_3
      88: invokevirtual #27                 // Method java/net/URI.getPort:()I
      91: iconst_m1
      92: if_icmpne     101
      95: sipush        443
      98: goto          105
     101: aload_3
     102: invokevirtual #27                 // Method java/net/URI.getPort:()I
     105: invokespecial #28                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     108: aload_0
     109: aload_1
     110: aload         6
     112: aload         8
     114: aload_3
     115: invokevirtual #29                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)Lorg/xnio/ChannelListener;
     118: aload         8
     120: invokevirtual #30                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     123: aload_0
     124: aload_1
     125: invokevirtual #31                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     128: aconst_null
     129: invokeinterface #32,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     134: pop
     135: goto          199
     138: aload         5
     140: aload         4
     142: aload_2
     143: new           #25                 // class java/net/InetSocketAddress
     146: dup
     147: aload_3
     148: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
     151: aload_3
     152: invokevirtual #27                 // Method java/net/URI.getPort:()I
     155: iconst_m1
     156: if_icmpne     165
     159: sipush        443
     162: goto          169
     165: aload_3
     166: invokevirtual #27                 // Method java/net/URI.getPort:()I
     169: invokespecial #28                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     172: aload_0
     173: aload_1
     174: aload         6
     176: aload         8
     178: aload_3
     179: invokevirtual #29                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)Lorg/xnio/ChannelListener;
     182: aload         8
     184: invokevirtual #33                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     187: aload_0
     188: aload_1
     189: invokevirtual #31                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     192: aconst_null
     193: invokeinterface #32,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     198: pop
     199: goto          325
     202: aload_2
     203: ifnonnull     266
     206: aload         4
     208: new           #25                 // class java/net/InetSocketAddress
     211: dup
     212: aload_3
     213: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
     216: aload_3
     217: invokevirtual #27                 // Method java/net/URI.getPort:()I
     220: iconst_m1
     221: if_icmpne     229
     224: bipush        80
     226: goto          233
     229: aload_3
     230: invokevirtual #27                 // Method java/net/URI.getPort:()I
     233: invokespecial #28                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     236: aload_0
     237: aload_1
     238: aload         6
     240: aload         7
     242: aload_3
     243: invokevirtual #29                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)Lorg/xnio/ChannelListener;
     246: aload         7
     248: invokevirtual #34                 // Method org/xnio/XnioWorker.openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     251: aload_0
     252: aload_1
     253: invokevirtual #31                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     256: aconst_null
     257: invokeinterface #32,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     262: pop
     263: goto          325
     266: aload         4
     268: aload_2
     269: new           #25                 // class java/net/InetSocketAddress
     272: dup
     273: aload_3
     274: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
     277: aload_3
     278: invokevirtual #27                 // Method java/net/URI.getPort:()I
     281: iconst_m1
     282: if_icmpne     290
     285: bipush        80
     287: goto          294
     290: aload_3
     291: invokevirtual #27                 // Method java/net/URI.getPort:()I
     294: invokespecial #28                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     297: aload_0
     298: aload_1
     299: aload         6
     301: aload         7
     303: aload_3
     304: invokevirtual #29                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)Lorg/xnio/ChannelListener;
     307: aconst_null
     308: aload         7
     310: invokevirtual #35                 // Method org/xnio/XnioWorker.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     313: aload_0
     314: aload_1
     315: invokevirtual #31                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     318: aconst_null
     319: invokeinterface #32,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     324: pop
     325: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_3
       1: invokevirtual #10                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: ldc           #5                  // String https
       6: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          202
      12: aload         5
      14: ifnonnull     32
      17: aload_1
      18: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      21: invokeinterface #13,  1           // InterfaceMethod io/undertow/UndertowMessages.sslWasNull:()Ljava/io/IOException;
      26: invokeinterface #14,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      31: return
      32: invokestatic  #15                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      35: getstatic     #16                 // Field io/undertow/UndertowOptions.ENDPOINT_IDENTIFICATION_ALGORITHM:Lorg/xnio/Option;
      38: getstatic     #17                 // Field DISABLE_HTTPS_ENDPOINT_IDENTIFICATION:Z
      41: ifeq          49
      44: ldc           #18                 // String
      46: goto          51
      49: ldc           #19                 // String HTTPS
      51: invokevirtual #20                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap$Builder;
      54: aload         7
      56: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
      59: getstatic     #22                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
      62: iconst_1
      63: invokevirtual #23                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      66: invokevirtual #24                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      69: astore        8
      71: aload_2
      72: ifnonnull     138
      75: aload         5
      77: aload         4
      79: new           #25                 // class java/net/InetSocketAddress
      82: dup
      83: aload_3
      84: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
      87: aload_3
      88: invokevirtual #27                 // Method java/net/URI.getPort:()I
      91: iconst_m1
      92: if_icmpne     101
      95: sipush        443
      98: goto          105
     101: aload_3
     102: invokevirtual #27                 // Method java/net/URI.getPort:()I
     105: invokespecial #28                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     108: aload_0
     109: aload_1
     110: aload         6
     112: aload         8
     114: aload_3
     115: invokevirtual #29                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)Lorg/xnio/ChannelListener;
     118: aload         8
     120: invokevirtual #36                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioIoThread;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     123: aload_0
     124: aload_1
     125: invokevirtual #31                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     128: aconst_null
     129: invokeinterface #32,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     134: pop
     135: goto          199
     138: aload         5
     140: aload         4
     142: aload_2
     143: new           #25                 // class java/net/InetSocketAddress
     146: dup
     147: aload_3
     148: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
     151: aload_3
     152: invokevirtual #27                 // Method java/net/URI.getPort:()I
     155: iconst_m1
     156: if_icmpne     165
     159: sipush        443
     162: goto          169
     165: aload_3
     166: invokevirtual #27                 // Method java/net/URI.getPort:()I
     169: invokespecial #28                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     172: aload_0
     173: aload_1
     174: aload         6
     176: aload         8
     178: aload_3
     179: invokevirtual #29                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)Lorg/xnio/ChannelListener;
     182: aload         8
     184: invokevirtual #37                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioIoThread;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     187: aload_0
     188: aload_1
     189: invokevirtual #31                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     192: aconst_null
     193: invokeinterface #32,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     198: pop
     199: goto          325
     202: aload_2
     203: ifnonnull     266
     206: aload         4
     208: new           #25                 // class java/net/InetSocketAddress
     211: dup
     212: aload_3
     213: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
     216: aload_3
     217: invokevirtual #27                 // Method java/net/URI.getPort:()I
     220: iconst_m1
     221: if_icmpne     229
     224: bipush        80
     226: goto          233
     229: aload_3
     230: invokevirtual #27                 // Method java/net/URI.getPort:()I
     233: invokespecial #28                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     236: aload_0
     237: aload_1
     238: aload         6
     240: aload         7
     242: aload_3
     243: invokevirtual #29                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)Lorg/xnio/ChannelListener;
     246: aload         7
     248: invokevirtual #38                 // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     251: aload_0
     252: aload_1
     253: invokevirtual #31                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     256: aconst_null
     257: invokeinterface #32,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     262: pop
     263: goto          325
     266: aload         4
     268: aload_2
     269: new           #25                 // class java/net/InetSocketAddress
     272: dup
     273: aload_3
     274: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
     277: aload_3
     278: invokevirtual #27                 // Method java/net/URI.getPort:()I
     281: iconst_m1
     282: if_icmpne     290
     285: bipush        80
     287: goto          294
     290: aload_3
     291: invokevirtual #27                 // Method java/net/URI.getPort:()I
     294: invokespecial #28                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     297: aload_0
     298: aload_1
     299: aload         6
     301: aload         7
     303: aload_3
     304: invokevirtual #29                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)Lorg/xnio/ChannelListener;
     307: aconst_null
     308: aload         7
     310: invokevirtual #39                 // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     313: aload_0
     314: aload_1
     315: invokevirtual #31                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     318: aconst_null
     319: invokeinterface #32,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     324: pop
     325: return

  private org.xnio.IoFuture$Notifier<org.xnio.StreamConnection, java.lang.Object> createNotifier(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>);
    Code:
       0: new           #40                 // class io/undertow/client/http/HttpClientProvider$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #41                 // Method io/undertow/client/http/HttpClientProvider$2."<init>":(Lio/undertow/client/http/HttpClientProvider;Lio/undertow/client/ClientCallback;)V
       9: areturn

  private org.xnio.ChannelListener<org.xnio.StreamConnection> createOpenListener(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.net.URI);
    Code:
       0: new           #42                 // class io/undertow/client/http/HttpClientProvider$3
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #43                 // Method io/undertow/client/http/HttpClientProvider$3."<init>":(Lio/undertow/client/http/HttpClientProvider;Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)V
      13: areturn

  private void handleConnected(org.xnio.StreamConnection, io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.net.URI);
    Code:
       0: aload         4
       2: getstatic     #44                 // Field io/undertow/UndertowOptions.ENABLE_HTTP2:Lorg/xnio/Option;
       5: iconst_0
       6: invokevirtual #45                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
       9: istore        6
      11: aload_1
      12: instanceof    #46                 // class org/xnio/ssl/SslConnection
      15: ifeq          97
      18: iload         6
      20: ifeq          97
      23: new           #47                 // class java/util/ArrayList
      26: dup
      27: invokespecial #48                 // Method java/util/ArrayList."<init>":()V
      30: astore        7
      32: iload         6
      34: ifeq          54
      37: aload         7
      39: aload_2
      40: aload         5
      42: aload_3
      43: aload         4
      45: invokestatic  #49                 // Method io/undertow/client/http2/Http2ClientProvider.alpnProtocol:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lio/undertow/client/ALPNClientSelector$ALPNProtocol;
      48: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_1
      55: checkcast     #46                 // class org/xnio/ssl/SslConnection
      58: new           #51                 // class io/undertow/client/http/HttpClientProvider$4
      61: dup
      62: aload_0
      63: aload_2
      64: aload         4
      66: aload_3
      67: invokespecial #52                 // Method io/undertow/client/http/HttpClientProvider$4."<init>":(Lio/undertow/client/http/HttpClientProvider;Lio/undertow/client/ClientCallback;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;)V
      70: aload_2
      71: aload         7
      73: aload         7
      75: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      80: anewarray     #54                 // class io/undertow/client/ALPNClientSelector$ALPNProtocol
      83: invokeinterface #55,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      88: checkcast     #56                 // class "[Lio/undertow/client/ALPNClientSelector$ALPNProtocol;"
      91: invokestatic  #57                 // Method io/undertow/client/ALPNClientSelector.runAlpn:(Lorg/xnio/ssl/SslConnection;Lorg/xnio/ChannelListener;Lio/undertow/client/ClientCallback;[Lio/undertow/client/ALPNClientSelector$ALPNProtocol;)V
      94: goto          164
      97: aload_1
      98: instanceof    #46                 // class org/xnio/ssl/SslConnection
     101: ifeq          147
     104: aload_1
     105: checkcast     #46                 // class org/xnio/ssl/SslConnection
     108: invokevirtual #58                 // Method org/xnio/ssl/SslConnection.startHandshake:()V
     111: goto          147
     114: astore        7
     116: aload_2
     117: aload         7
     119: instanceof    #60                 // class java/io/IOException
     122: ifeq          133
     125: aload         7
     127: checkcast     #60                 // class java/io/IOException
     130: goto          142
     133: new           #60                 // class java/io/IOException
     136: dup
     137: aload         7
     139: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     142: invokeinterface #14,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     147: aload_2
     148: new           #62                 // class io/undertow/client/http/HttpClientConnection
     151: dup
     152: aload_1
     153: aload         4
     155: aload_3
     156: invokespecial #63                 // Method io/undertow/client/http/HttpClientConnection."<init>":(Lorg/xnio/StreamConnection;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;)V
     159: invokeinterface #64,  2           // InterfaceMethod io/undertow/client/ClientCallback.completed:(Ljava/lang/Object;)V
     164: return
    Exception table:
       from    to  target type
         104   111   114   Class java/lang/Throwable

  static {};
    Code:
       0: invokestatic  #65                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: ifnonnull     14
       6: ldc           #67                 // String io.undertow.client.https.disableEndpointIdentification
       8: invokestatic  #68                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      11: goto          27
      14: new           #69                 // class io/undertow/client/http/HttpClientProvider$1
      17: dup
      18: invokespecial #70                 // Method io/undertow/client/http/HttpClientProvider$1."<init>":()V
      21: invokestatic  #71                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      24: checkcast     #3                  // class java/lang/String
      27: astore_0
      28: aload_0
      29: ifnull        50
      32: aload_0
      33: invokevirtual #72                 // Method java/lang/String.isEmpty:()Z
      36: ifne          46
      39: aload_0
      40: invokestatic  #73                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      43: ifeq          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: putstatic     #17                 // Field DISABLE_HTTPS_ENDPOINT_IDENTIFICATION:Z
      54: return
}
