Compiled from "Undertow.java"
public final class io.undertow.Undertow {
  private final int bufferSize;

  private final int ioThreads;

  private final int workerThreads;

  private final boolean directBuffers;

  private final java.util.List<io.undertow.Undertow$ListenerConfig> listeners;

  private volatile java.util.List<io.undertow.Undertow$ListenerInfo> listenerInfo;

  private final io.undertow.server.HttpHandler rootHandler;

  private final org.xnio.OptionMap workerOptions;

  private final org.xnio.OptionMap socketOptions;

  private final org.xnio.OptionMap serverOptions;

  private final boolean internalWorker;

  private io.undertow.connector.ByteBufferPool byteBufferPool;

  private org.xnio.XnioWorker worker;

  private java.util.concurrent.Executor sslEngineDelegatedTaskExecutor;

  private java.util.List<org.xnio.channels.AcceptingChannel<? extends org.xnio.StreamConnection>> channels;

  private org.xnio.Xnio xnio;

  private io.undertow.Undertow(io.undertow.Undertow$Builder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field listeners:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: getfield      #5                  // Field io/undertow/Undertow$Builder.byteBufferPool:Lio/undertow/connector/ByteBufferPool;
      20: putfield      #6                  // Field byteBufferPool:Lio/undertow/connector/ByteBufferPool;
      23: aload_0
      24: aload_0
      25: getfield      #6                  // Field byteBufferPool:Lio/undertow/connector/ByteBufferPool;
      28: ifnull        43
      31: aload_0
      32: getfield      #6                  // Field byteBufferPool:Lio/undertow/connector/ByteBufferPool;
      35: invokeinterface #7,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.getBufferSize:()I
      40: goto          47
      43: aload_1
      44: getfield      #8                  // Field io/undertow/Undertow$Builder.bufferSize:I
      47: putfield      #9                  // Field bufferSize:I
      50: aload_0
      51: aload_0
      52: getfield      #6                  // Field byteBufferPool:Lio/undertow/connector/ByteBufferPool;
      55: ifnull        70
      58: aload_0
      59: getfield      #6                  // Field byteBufferPool:Lio/undertow/connector/ByteBufferPool;
      62: invokeinterface #10,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.isDirect:()Z
      67: goto          74
      70: aload_1
      71: getfield      #11                 // Field io/undertow/Undertow$Builder.directBuffers:Z
      74: putfield      #12                 // Field directBuffers:Z
      77: aload_0
      78: aload_1
      79: getfield      #13                 // Field io/undertow/Undertow$Builder.ioThreads:I
      82: putfield      #14                 // Field ioThreads:I
      85: aload_0
      86: aload_1
      87: getfield      #15                 // Field io/undertow/Undertow$Builder.workerThreads:I
      90: putfield      #16                 // Field workerThreads:I
      93: aload_0
      94: getfield      #4                  // Field listeners:Ljava/util/List;
      97: aload_1
      98: getfield      #17                 // Field io/undertow/Undertow$Builder.listeners:Ljava/util/List;
     101: invokeinterface #18,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     106: pop
     107: aload_0
     108: aload_1
     109: getfield      #19                 // Field io/undertow/Undertow$Builder.handler:Lio/undertow/server/HttpHandler;
     112: putfield      #20                 // Field rootHandler:Lio/undertow/server/HttpHandler;
     115: aload_0
     116: aload_1
     117: getfield      #21                 // Field io/undertow/Undertow$Builder.worker:Lorg/xnio/XnioWorker;
     120: putfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     123: aload_0
     124: aload_1
     125: getfield      #23                 // Field io/undertow/Undertow$Builder.sslEngineDelegatedTaskExecutor:Ljava/util/concurrent/Executor;
     128: putfield      #24                 // Field sslEngineDelegatedTaskExecutor:Ljava/util/concurrent/Executor;
     131: aload_0
     132: aload_1
     133: getfield      #21                 // Field io/undertow/Undertow$Builder.worker:Lorg/xnio/XnioWorker;
     136: ifnonnull     143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: putfield      #25                 // Field internalWorker:Z
     147: aload_0
     148: aload_1
     149: getfield      #26                 // Field io/undertow/Undertow$Builder.workerOptions:Lorg/xnio/OptionMap$Builder;
     152: invokevirtual #27                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     155: putfield      #28                 // Field workerOptions:Lorg/xnio/OptionMap;
     158: aload_0
     159: aload_1
     160: getfield      #29                 // Field io/undertow/Undertow$Builder.socketOptions:Lorg/xnio/OptionMap$Builder;
     163: invokevirtual #27                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     166: putfield      #30                 // Field socketOptions:Lorg/xnio/OptionMap;
     169: aload_0
     170: aload_1
     171: getfield      #31                 // Field io/undertow/Undertow$Builder.serverOptions:Lorg/xnio/OptionMap$Builder;
     174: invokevirtual #27                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     177: putfield      #32                 // Field serverOptions:Lorg/xnio/OptionMap;
     180: return

  public static io.undertow.Undertow$Builder builder();
    Code:
       0: new           #33                 // class io/undertow/Undertow$Builder
       3: dup
       4: invokespecial #34                 // Method io/undertow/Undertow$Builder."<init>":()V
       7: areturn

  public synchronized void start();
    Code:
       0: getstatic     #35                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
       3: ldc           #36                 // String starting server: %s
       5: invokestatic  #37                 // Method io/undertow/Version.getFullVersionString:()Ljava/lang/String;
       8: invokeinterface #38,  3           // InterfaceMethod io/undertow/UndertowLogger.infof:(Ljava/lang/String;Ljava/lang/Object;)V
      13: aload_0
      14: ldc           #39                 // class io/undertow/Undertow
      16: invokevirtual #40                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      19: invokestatic  #41                 // Method org/xnio/Xnio.getInstance:(Ljava/lang/ClassLoader;)Lorg/xnio/Xnio;
      22: putfield      #42                 // Field xnio:Lorg/xnio/Xnio;
      25: aload_0
      26: new           #2                  // class java/util/ArrayList
      29: dup
      30: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      33: putfield      #43                 // Field channels:Ljava/util/List;
      36: aload_0
      37: getfield      #25                 // Field internalWorker:Z
      40: ifeq          127
      43: aload_0
      44: aload_0
      45: getfield      #42                 // Field xnio:Lorg/xnio/Xnio;
      48: invokestatic  #44                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      51: getstatic     #45                 // Field org/xnio/Options.WORKER_IO_THREADS:Lorg/xnio/Option;
      54: aload_0
      55: getfield      #14                 // Field ioThreads:I
      58: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      61: getstatic     #47                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
      64: ldc           #48                 // int 1000000
      66: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      69: getstatic     #49                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
      72: ldc           #48                 // int 1000000
      74: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      77: getstatic     #50                 // Field org/xnio/Options.WORKER_TASK_CORE_THREADS:Lorg/xnio/Option;
      80: aload_0
      81: getfield      #16                 // Field workerThreads:I
      84: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      87: getstatic     #51                 // Field org/xnio/Options.WORKER_TASK_MAX_THREADS:Lorg/xnio/Option;
      90: aload_0
      91: getfield      #16                 // Field workerThreads:I
      94: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      97: getstatic     #52                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     100: iconst_1
     101: invokevirtual #53                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     104: getstatic     #54                 // Field org/xnio/Options.CORK:Lorg/xnio/Option;
     107: iconst_1
     108: invokevirtual #53                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     111: aload_0
     112: getfield      #28                 // Field workerOptions:Lorg/xnio/OptionMap;
     115: invokevirtual #55                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     118: invokevirtual #27                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     121: invokevirtual #56                 // Method org/xnio/Xnio.createWorker:(Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker;
     124: putfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     127: invokestatic  #44                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     130: getstatic     #45                 // Field org/xnio/Options.WORKER_IO_THREADS:Lorg/xnio/Option;
     133: aload_0
     134: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     137: invokevirtual #57                 // Method org/xnio/XnioWorker.getIoThreadCount:()I
     140: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     143: getstatic     #52                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     146: iconst_1
     147: invokevirtual #53                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     150: getstatic     #58                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
     153: iconst_1
     154: invokevirtual #53                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     157: getstatic     #59                 // Field org/xnio/Options.BALANCING_TOKENS:Lorg/xnio/Option;
     160: iconst_1
     161: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     164: getstatic     #60                 // Field org/xnio/Options.BALANCING_CONNECTIONS:Lorg/xnio/Option;
     167: iconst_2
     168: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     171: getstatic     #61                 // Field org/xnio/Options.BACKLOG:Lorg/xnio/Option;
     174: sipush        1000
     177: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     180: aload_0
     181: getfield      #30                 // Field socketOptions:Lorg/xnio/OptionMap;
     184: invokevirtual #55                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     187: invokevirtual #27                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     190: astore_1
     191: invokestatic  #44                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     194: getstatic     #62                 // Field io/undertow/UndertowOptions.NO_REQUEST_TIMEOUT:Lorg/xnio/Option;
     197: ldc           #63                 // int 60000
     199: invokevirtual #46                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     202: aload_0
     203: getfield      #32                 // Field serverOptions:Lorg/xnio/OptionMap;
     206: invokevirtual #55                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     209: invokevirtual #27                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     212: astore_2
     213: aload_0
     214: getfield      #6                  // Field byteBufferPool:Lio/undertow/connector/ByteBufferPool;
     217: astore_3
     218: aload_3
     219: ifnonnull     240
     222: new           #64                 // class io/undertow/server/DefaultByteBufferPool
     225: dup
     226: aload_0
     227: getfield      #12                 // Field directBuffers:Z
     230: aload_0
     231: getfield      #9                  // Field bufferSize:I
     234: iconst_m1
     235: iconst_4
     236: invokespecial #65                 // Method io/undertow/server/DefaultByteBufferPool."<init>":(ZIII)V
     239: astore_3
     240: aload_0
     241: new           #2                  // class java/util/ArrayList
     244: dup
     245: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
     248: putfield      #66                 // Field listenerInfo:Ljava/util/List;
     251: aload_0
     252: getfield      #4                  // Field listeners:Ljava/util/List;
     255: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     260: astore        4
     262: aload         4
     264: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     269: ifeq          1099
     272: aload         4
     274: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     279: checkcast     #70                 // class io/undertow/Undertow$ListenerConfig
     282: astore        5
     284: getstatic     #35                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     287: ldc           #71                 // String Configuring listener with protocol %s for interface %s and port %s
     289: aload         5
     291: getfield      #72                 // Field io/undertow/Undertow$ListenerConfig.type:Lio/undertow/Undertow$ListenerType;
     294: aload         5
     296: getfield      #73                 // Field io/undertow/Undertow$ListenerConfig.host:Ljava/lang/String;
     299: aload         5
     301: getfield      #74                 // Field io/undertow/Undertow$ListenerConfig.port:I
     304: invokestatic  #75                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     307: invokeinterface #76,  5           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     312: aload         5
     314: getfield      #77                 // Field io/undertow/Undertow$ListenerConfig.rootHandler:Lio/undertow/server/HttpHandler;
     317: ifnull        328
     320: aload         5
     322: getfield      #77                 // Field io/undertow/Undertow$ListenerConfig.rootHandler:Lio/undertow/server/HttpHandler;
     325: goto          332
     328: aload_0
     329: getfield      #20                 // Field rootHandler:Lio/undertow/server/HttpHandler;
     332: astore        6
     334: invokestatic  #44                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     337: aload_1
     338: invokevirtual #55                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     341: aload         5
     343: getfield      #78                 // Field io/undertow/Undertow$ListenerConfig.overrideSocketOptions:Lorg/xnio/OptionMap;
     346: invokevirtual #55                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     349: invokevirtual #27                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     352: astore        7
     354: aload         5
     356: getfield      #72                 // Field io/undertow/Undertow$ListenerConfig.type:Lio/undertow/Undertow$ListenerType;
     359: getstatic     #79                 // Field io/undertow/Undertow$ListenerType.AJP:Lio/undertow/Undertow$ListenerType;
     362: if_acmpne     507
     365: new           #80                 // class io/undertow/server/protocol/ajp/AjpOpenListener
     368: dup
     369: aload_3
     370: aload_2
     371: invokespecial #81                 // Method io/undertow/server/protocol/ajp/AjpOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     374: astore        8
     376: aload         8
     378: aload         6
     380: invokevirtual #82                 // Method io/undertow/server/protocol/ajp/AjpOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
     383: aload         5
     385: getfield      #83                 // Field io/undertow/Undertow$ListenerConfig.useProxyProtocol:Z
     388: ifeq          410
     391: new           #84                 // class io/undertow/server/protocol/proxy/ProxyProtocolOpenListener
     394: dup
     395: aload         8
     397: aconst_null
     398: aload_3
     399: getstatic     #85                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
     402: invokespecial #86                 // Method io/undertow/server/protocol/proxy/ProxyProtocolOpenListener."<init>":(Lio/undertow/server/OpenListener;Lio/undertow/protocols/ssl/UndertowXnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     405: astore        9
     407: goto          414
     410: aload         8
     412: astore        9
     414: aload         9
     416: invokestatic  #87                 // Method org/xnio/ChannelListeners.openListenerAdapter:(Lorg/xnio/ChannelListener;)Lorg/xnio/ChannelListener;
     419: astore        10
     421: aload_0
     422: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     425: new           #88                 // class java/net/InetSocketAddress
     428: dup
     429: aload         5
     431: getfield      #73                 // Field io/undertow/Undertow$ListenerConfig.host:Ljava/lang/String;
     434: invokestatic  #89                 // Method java/net/Inet4Address.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
     437: aload         5
     439: getfield      #74                 // Field io/undertow/Undertow$ListenerConfig.port:I
     442: invokespecial #90                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     445: aload         10
     447: aload         7
     449: invokevirtual #91                 // Method org/xnio/XnioWorker.createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
     452: astore        11
     454: aload         11
     456: invokeinterface #92,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
     461: aload_0
     462: getfield      #43                 // Field channels:Ljava/util/List;
     465: aload         11
     467: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     472: pop
     473: aload_0
     474: getfield      #66                 // Field listenerInfo:Ljava/util/List;
     477: new           #94                 // class io/undertow/Undertow$ListenerInfo
     480: dup
     481: ldc           #95                 // String ajp
     483: aload         11
     485: invokeinterface #96,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:()Ljava/net/SocketAddress;
     490: aload         8
     492: aconst_null
     493: aload         11
     495: invokespecial #97                 // Method io/undertow/Undertow$ListenerInfo."<init>":(Ljava/lang/String;Ljava/net/SocketAddress;Lio/undertow/server/OpenListener;Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/channels/AcceptingChannel;)V
     498: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     503: pop
     504: goto          1096
     507: invokestatic  #44                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     510: getstatic     #98                 // Field io/undertow/UndertowOptions.BUFFER_PIPELINED_DATA:Lorg/xnio/Option;
     513: iconst_1
     514: invokevirtual #53                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     517: aload_2
     518: invokevirtual #55                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     521: invokevirtual #27                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     524: astore        8
     526: aload_2
     527: getstatic     #99                 // Field io/undertow/UndertowOptions.ENABLE_HTTP2:Lorg/xnio/Option;
     530: iconst_0
     531: invokevirtual #100                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     534: istore        9
     536: aload         5
     538: getfield      #72                 // Field io/undertow/Undertow$ListenerConfig.type:Lio/undertow/Undertow$ListenerType;
     541: getstatic     #101                // Field io/undertow/Undertow$ListenerType.HTTP:Lio/undertow/Undertow$ListenerType;
     544: if_acmpne     710
     547: new           #102                // class io/undertow/server/protocol/http/HttpOpenListener
     550: dup
     551: aload_3
     552: aload         8
     554: invokespecial #103                // Method io/undertow/server/protocol/http/HttpOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     557: astore        10
     559: aload         6
     561: astore        11
     563: iload         9
     565: ifeq          579
     568: new           #104                // class io/undertow/server/protocol/http2/Http2UpgradeHandler
     571: dup
     572: aload         11
     574: invokespecial #105                // Method io/undertow/server/protocol/http2/Http2UpgradeHandler."<init>":(Lio/undertow/server/HttpHandler;)V
     577: astore        11
     579: aload         10
     581: aload         11
     583: invokevirtual #106                // Method io/undertow/server/protocol/http/HttpOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
     586: aload         5
     588: getfield      #83                 // Field io/undertow/Undertow$ListenerConfig.useProxyProtocol:Z
     591: ifeq          613
     594: new           #84                 // class io/undertow/server/protocol/proxy/ProxyProtocolOpenListener
     597: dup
     598: aload         10
     600: aconst_null
     601: aload_3
     602: getstatic     #85                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
     605: invokespecial #86                 // Method io/undertow/server/protocol/proxy/ProxyProtocolOpenListener."<init>":(Lio/undertow/server/OpenListener;Lio/undertow/protocols/ssl/UndertowXnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     608: astore        12
     610: goto          617
     613: aload         10
     615: astore        12
     617: aload         12
     619: invokestatic  #87                 // Method org/xnio/ChannelListeners.openListenerAdapter:(Lorg/xnio/ChannelListener;)Lorg/xnio/ChannelListener;
     622: astore        13
     624: aload_0
     625: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     628: new           #88                 // class java/net/InetSocketAddress
     631: dup
     632: aload         5
     634: getfield      #73                 // Field io/undertow/Undertow$ListenerConfig.host:Ljava/lang/String;
     637: invokestatic  #89                 // Method java/net/Inet4Address.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
     640: aload         5
     642: getfield      #74                 // Field io/undertow/Undertow$ListenerConfig.port:I
     645: invokespecial #90                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     648: aload         13
     650: aload         7
     652: invokevirtual #91                 // Method org/xnio/XnioWorker.createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
     655: astore        14
     657: aload         14
     659: invokeinterface #92,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
     664: aload_0
     665: getfield      #43                 // Field channels:Ljava/util/List;
     668: aload         14
     670: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     675: pop
     676: aload_0
     677: getfield      #66                 // Field listenerInfo:Ljava/util/List;
     680: new           #94                 // class io/undertow/Undertow$ListenerInfo
     683: dup
     684: ldc           #107                // String http
     686: aload         14
     688: invokeinterface #96,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:()Ljava/net/SocketAddress;
     693: aload         10
     695: aconst_null
     696: aload         14
     698: invokespecial #97                 // Method io/undertow/Undertow$ListenerInfo."<init>":(Ljava/lang/String;Ljava/net/SocketAddress;Lio/undertow/server/OpenListener;Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/channels/AcceptingChannel;)V
     701: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     706: pop
     707: goto          1096
     710: aload         5
     712: getfield      #72                 // Field io/undertow/Undertow$ListenerConfig.type:Lio/undertow/Undertow$ListenerType;
     715: getstatic     #108                // Field io/undertow/Undertow$ListenerType.HTTPS:Lio/undertow/Undertow$ListenerType;
     718: if_acmpne     1096
     721: new           #102                // class io/undertow/server/protocol/http/HttpOpenListener
     724: dup
     725: aload_3
     726: aload         8
     728: invokespecial #103                // Method io/undertow/server/protocol/http/HttpOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     731: astore        11
     733: aload         11
     735: aload         6
     737: invokevirtual #106                // Method io/undertow/server/protocol/http/HttpOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
     740: iload         9
     742: ifeq          809
     745: new           #109                // class io/undertow/server/protocol/http/AlpnOpenListener
     748: dup
     749: aload_3
     750: aload         8
     752: aload         11
     754: invokespecial #110                // Method io/undertow/server/protocol/http/AlpnOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Lio/undertow/server/DelegateOpenListener;)V
     757: astore        12
     759: new           #111                // class io/undertow/server/protocol/http2/Http2OpenListener
     762: dup
     763: aload_3
     764: aload         8
     766: invokespecial #112                // Method io/undertow/server/protocol/http2/Http2OpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     769: astore        13
     771: aload         13
     773: aload         6
     775: invokevirtual #113                // Method io/undertow/server/protocol/http2/Http2OpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
     778: aload         12
     780: ldc           #114                // String h2
     782: aload         13
     784: bipush        10
     786: invokevirtual #115                // Method io/undertow/server/protocol/http/AlpnOpenListener.addProtocol:(Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;I)Lio/undertow/server/protocol/http/AlpnOpenListener;
     789: pop
     790: aload         12
     792: ldc           #116                // String h2-14
     794: aload         13
     796: bipush        7
     798: invokevirtual #115                // Method io/undertow/server/protocol/http/AlpnOpenListener.addProtocol:(Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;I)Lio/undertow/server/protocol/http/AlpnOpenListener;
     801: pop
     802: aload         12
     804: astore        10
     806: goto          813
     809: aload         11
     811: astore        10
     813: aload         5
     815: getfield      #117                // Field io/undertow/Undertow$ListenerConfig.sslContext:Ljavax/net/ssl/SSLContext;
     818: ifnull        856
     821: new           #118                // class io/undertow/protocols/ssl/UndertowXnioSsl
     824: dup
     825: aload_0
     826: getfield      #42                 // Field xnio:Lorg/xnio/Xnio;
     829: getstatic     #119                // Field org/xnio/Options.USE_DIRECT_BUFFERS:Lorg/xnio/Option;
     832: iconst_1
     833: invokestatic  #120                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     836: invokestatic  #121                // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
     839: aload         5
     841: getfield      #117                // Field io/undertow/Undertow$ListenerConfig.sslContext:Ljavax/net/ssl/SSLContext;
     844: aload_0
     845: getfield      #24                 // Field sslEngineDelegatedTaskExecutor:Ljava/util/concurrent/Executor;
     848: invokespecial #122                // Method io/undertow/protocols/ssl/UndertowXnioSsl."<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLContext;Ljava/util/concurrent/Executor;)V
     851: astore        12
     853: goto          940
     856: invokestatic  #44                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     859: aload         7
     861: invokevirtual #55                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     864: astore        13
     866: aload         7
     868: getstatic     #123                // Field org/xnio/Options.SSL_PROTOCOL:Lorg/xnio/Option;
     871: invokevirtual #124                // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     874: ifne          888
     877: aload         13
     879: getstatic     #123                // Field org/xnio/Options.SSL_PROTOCOL:Lorg/xnio/Option;
     882: ldc           #125                // String TLSv1.2
     884: invokevirtual #126                // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap$Builder;
     887: pop
     888: new           #118                // class io/undertow/protocols/ssl/UndertowXnioSsl
     891: dup
     892: aload_0
     893: getfield      #42                 // Field xnio:Lorg/xnio/Xnio;
     896: getstatic     #119                // Field org/xnio/Options.USE_DIRECT_BUFFERS:Lorg/xnio/Option;
     899: iconst_1
     900: invokestatic  #120                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     903: invokestatic  #121                // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
     906: aload         5
     908: getfield      #127                // Field io/undertow/Undertow$ListenerConfig.keyManagers:[Ljavax/net/ssl/KeyManager;
     911: aload         5
     913: getfield      #128                // Field io/undertow/Undertow$ListenerConfig.trustManagers:[Ljavax/net/ssl/TrustManager;
     916: new           #129                // class java/security/SecureRandom
     919: dup
     920: invokespecial #130                // Method java/security/SecureRandom."<init>":()V
     923: aload         13
     925: invokevirtual #27                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     928: invokestatic  #131                // Method org/xnio/ssl/JsseSslUtils.createSSLContext:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;Lorg/xnio/OptionMap;)Ljavax/net/ssl/SSLContext;
     931: aload_0
     932: getfield      #24                 // Field sslEngineDelegatedTaskExecutor:Ljava/util/concurrent/Executor;
     935: invokespecial #122                // Method io/undertow/protocols/ssl/UndertowXnioSsl."<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLContext;Ljava/util/concurrent/Executor;)V
     938: astore        12
     940: aload         5
     942: getfield      #83                 // Field io/undertow/Undertow$ListenerConfig.useProxyProtocol:Z
     945: ifeq          1003
     948: new           #84                 // class io/undertow/server/protocol/proxy/ProxyProtocolOpenListener
     951: dup
     952: aload         10
     954: aload         12
     956: aload_3
     957: aload         7
     959: invokespecial #86                 // Method io/undertow/server/protocol/proxy/ProxyProtocolOpenListener."<init>":(Lio/undertow/server/OpenListener;Lio/undertow/protocols/ssl/UndertowXnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     962: invokestatic  #87                 // Method org/xnio/ChannelListeners.openListenerAdapter:(Lorg/xnio/ChannelListener;)Lorg/xnio/ChannelListener;
     965: astore        14
     967: aload_0
     968: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     971: new           #88                 // class java/net/InetSocketAddress
     974: dup
     975: aload         5
     977: getfield      #73                 // Field io/undertow/Undertow$ListenerConfig.host:Ljava/lang/String;
     980: invokestatic  #89                 // Method java/net/Inet4Address.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
     983: aload         5
     985: getfield      #74                 // Field io/undertow/Undertow$ListenerConfig.port:I
     988: invokespecial #90                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     991: aload         14
     993: aload         7
     995: invokevirtual #91                 // Method org/xnio/XnioWorker.createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
     998: astore        13
    1000: goto          1045
    1003: aload         10
    1005: invokestatic  #87                 // Method org/xnio/ChannelListeners.openListenerAdapter:(Lorg/xnio/ChannelListener;)Lorg/xnio/ChannelListener;
    1008: astore        14
    1010: aload         12
    1012: aload_0
    1013: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
    1016: new           #88                 // class java/net/InetSocketAddress
    1019: dup
    1020: aload         5
    1022: getfield      #73                 // Field io/undertow/Undertow$ListenerConfig.host:Ljava/lang/String;
    1025: invokestatic  #89                 // Method java/net/Inet4Address.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
    1028: aload         5
    1030: getfield      #74                 // Field io/undertow/Undertow$ListenerConfig.port:I
    1033: invokespecial #90                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
    1036: aload         14
    1038: aload         7
    1040: invokevirtual #132                // Method io/undertow/protocols/ssl/UndertowXnioSsl.createSslConnectionServer:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
    1043: astore        13
    1045: aload         13
    1047: invokeinterface #92,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
    1052: aload_0
    1053: getfield      #43                 // Field channels:Ljava/util/List;
    1056: aload         13
    1058: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
    1063: pop
    1064: aload_0
    1065: getfield      #66                 // Field listenerInfo:Ljava/util/List;
    1068: new           #94                 // class io/undertow/Undertow$ListenerInfo
    1071: dup
    1072: ldc           #133                // String https
    1074: aload         13
    1076: invokeinterface #96,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:()Ljava/net/SocketAddress;
    1081: aload         10
    1083: aload         12
    1085: aload         13
    1087: invokespecial #97                 // Method io/undertow/Undertow$ListenerInfo."<init>":(Ljava/lang/String;Ljava/net/SocketAddress;Lio/undertow/server/OpenListener;Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/channels/AcceptingChannel;)V
    1090: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
    1095: pop
    1096: goto          262
    1099: goto          1134
    1102: astore_1
    1103: aload_0
    1104: getfield      #25                 // Field internalWorker:Z
    1107: ifeq          1125
    1110: aload_0
    1111: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
    1114: ifnull        1125
    1117: aload_0
    1118: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
    1121: invokevirtual #135                // Method org/xnio/XnioWorker.shutdownNow:()Ljava/util/List;
    1124: pop
    1125: new           #136                // class java/lang/RuntimeException
    1128: dup
    1129: aload_1
    1130: invokespecial #137                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
    1133: athrow
    1134: return
    Exception table:
       from    to  target type
          36  1099  1102   Class java/lang/Exception

  public synchronized void stop();
    Code:
       0: getstatic     #35                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
       3: ldc           #138                // String stopping server: %s
       5: invokestatic  #37                 // Method io/undertow/Version.getFullVersionString:()Ljava/lang/String;
       8: invokeinterface #38,  3           // InterfaceMethod io/undertow/UndertowLogger.infof:(Ljava/lang/String;Ljava/lang/Object;)V
      13: aload_0
      14: getfield      #43                 // Field channels:Ljava/util/List;
      17: ifnull        61
      20: aload_0
      21: getfield      #43                 // Field channels:Ljava/util/List;
      24: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: aload_1
      31: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          56
      39: aload_1
      40: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #139                // class org/xnio/channels/AcceptingChannel
      48: astore_2
      49: aload_2
      50: invokestatic  #140                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      53: goto          30
      56: aload_0
      57: aconst_null
      58: putfield      #43                 // Field channels:Ljava/util/List;
      61: aload_0
      62: getfield      #25                 // Field internalWorker:Z
      65: ifeq          168
      68: aload_0
      69: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
      72: ifnull        168
      75: aload_0
      76: getfield      #32                 // Field serverOptions:Lorg/xnio/OptionMap;
      79: getstatic     #141                // Field io/undertow/UndertowOptions.SHUTDOWN_TIMEOUT:Lorg/xnio/Option;
      82: invokevirtual #142                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      85: checkcast     #143                // class java/lang/Integer
      88: astore_1
      89: aload_0
      90: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
      93: invokevirtual #144                // Method org/xnio/XnioWorker.shutdown:()V
      96: aload_1
      97: ifnonnull     110
     100: aload_0
     101: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     104: invokevirtual #145                // Method org/xnio/XnioWorker.awaitTermination:()V
     107: goto          136
     110: aload_0
     111: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     114: aload_1
     115: invokevirtual #146                // Method java/lang/Integer.intValue:()I
     118: i2l
     119: getstatic     #147                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     122: invokevirtual #148                // Method org/xnio/XnioWorker.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     125: ifne          136
     128: aload_0
     129: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     132: invokevirtual #135                // Method org/xnio/XnioWorker.shutdownNow:()Ljava/util/List;
     135: pop
     136: goto          163
     139: astore_2
     140: aload_0
     141: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     144: invokevirtual #135                // Method org/xnio/XnioWorker.shutdownNow:()Ljava/util/List;
     147: pop
     148: invokestatic  #150                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     151: invokevirtual #151                // Method java/lang/Thread.interrupt:()V
     154: new           #136                // class java/lang/RuntimeException
     157: dup
     158: aload_2
     159: invokespecial #137                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     162: athrow
     163: aload_0
     164: aconst_null
     165: putfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
     168: aload_0
     169: aconst_null
     170: putfield      #42                 // Field xnio:Lorg/xnio/Xnio;
     173: aload_0
     174: aconst_null
     175: putfield      #66                 // Field listenerInfo:Ljava/util/List;
     178: return
    Exception table:
       from    to  target type
          96   136   139   Class java/lang/InterruptedException

  public org.xnio.Xnio getXnio();
    Code:
       0: aload_0
       1: getfield      #42                 // Field xnio:Lorg/xnio/Xnio;
       4: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #22                 // Field worker:Lorg/xnio/XnioWorker;
       4: areturn

  public java.util.List<io.undertow.Undertow$ListenerInfo> getListenerInfo();
    Code:
       0: aload_0
       1: getfield      #66                 // Field listenerInfo:Ljava/util/List;
       4: ifnonnull     16
       7: getstatic     #152                // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #153,  1          // InterfaceMethod io/undertow/UndertowMessages.serverNotStarted:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: getfield      #66                 // Field listenerInfo:Ljava/util/List;
      20: invokestatic  #154                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      23: areturn
}
