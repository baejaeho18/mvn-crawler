Compiled from "HttpOpenListener.java"
public final class io.undertow.server.protocol.http.HttpOpenListener implements org.xnio.ChannelListener<org.xnio.StreamConnection>, io.undertow.server.DelegateOpenListener {
  private final java.util.Set<io.undertow.server.protocol.http.HttpServerConnection> connections;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final int bufferSize;

  private volatile io.undertow.server.HttpHandler rootHandler;

  private volatile org.xnio.OptionMap undertowOptions;

  private volatile io.undertow.server.protocol.http.HttpRequestParser parser;

  private volatile boolean statisticsEnabled;

  private final io.undertow.server.ConnectorStatisticsImpl connectorStatistics;

  public io.undertow.server.protocol.http.HttpOpenListener(org.xnio.Pool<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
       5: invokespecial #2                  // Method "<init>":(Lorg/xnio/Pool;Lorg/xnio/OptionMap;)V
       8: return

  public io.undertow.server.protocol.http.HttpOpenListener(org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: new           #3                  // class io/undertow/server/XnioByteBufferPool
       4: dup
       5: aload_1
       6: invokespecial #4                  // Method io/undertow/server/XnioByteBufferPool."<init>":(Lorg/xnio/Pool;)V
       9: aload_2
      10: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      13: return

  public io.undertow.server.protocol.http.HttpOpenListener(io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
       5: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
       8: return

  public io.undertow.server.protocol.http.HttpOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: invokestatic  #9                  // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      15: putfield      #10                 // Field connections:Ljava/util/Set;
      18: aload_0
      19: aload_2
      20: putfield      #11                 // Field undertowOptions:Lorg/xnio/OptionMap;
      23: aload_0
      24: aload_1
      25: putfield      #12                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      28: aload_1
      29: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      42: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      45: putfield      #16                 // Field bufferSize:I
      48: aload_3
      49: invokeinterface #17,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      54: aload_0
      55: aload_2
      56: invokestatic  #18                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      59: putfield      #19                 // Field parser:Lio/undertow/server/protocol/http/HttpRequestParser;
      62: aload_0
      63: new           #20                 // class io/undertow/server/ConnectorStatisticsImpl
      66: dup
      67: invokespecial #21                 // Method io/undertow/server/ConnectorStatisticsImpl."<init>":()V
      70: putfield      #22                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
      73: aload_0
      74: aload_2
      75: getstatic     #23                 // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      78: iconst_0
      79: invokevirtual #24                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      82: putfield      #25                 // Field statisticsEnabled:Z
      85: return

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #26                 // Method handleEvent:(Lorg/xnio/StreamConnection;Lio/undertow/connector/PooledByteBuffer;)V
       6: return

  public void handleEvent(org.xnio.StreamConnection, io.undertow.connector.PooledByteBuffer);
    Code:
       0: getstatic     #27                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: invokeinterface #28,  1           // InterfaceMethod io/undertow/UndertowLogger.isTraceEnabled:()Z
       8: ifeq          25
      11: getstatic     #27                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      14: ldc           #29                 // String Opened connection with %s
      16: aload_1
      17: invokevirtual #30                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      20: invokeinterface #31,  3           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_1
      26: getstatic     #32                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
      29: invokevirtual #33                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      32: checkcast     #34                 // class java/lang/Integer
      35: astore_3
      36: aload_0
      37: getfield      #11                 // Field undertowOptions:Lorg/xnio/OptionMap;
      40: getstatic     #35                 // Field io/undertow/UndertowOptions.IDLE_TIMEOUT:Lorg/xnio/Option;
      43: invokevirtual #36                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      46: checkcast     #34                 // class java/lang/Integer
      49: astore        4
      51: aload         4
      53: ifnull        84
      56: new           #37                 // class io/undertow/conduits/IdleTimeoutConduit
      59: dup
      60: aload_1
      61: invokespecial #38                 // Method io/undertow/conduits/IdleTimeoutConduit."<init>":(Lorg/xnio/StreamConnection;)V
      64: astore        5
      66: aload_1
      67: invokevirtual #39                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      70: aload         5
      72: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      75: aload_1
      76: invokevirtual #41                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      79: aload         5
      81: invokevirtual #42                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      84: aload_3
      85: ifnull        118
      88: aload_3
      89: invokevirtual #43                 // Method java/lang/Integer.intValue:()I
      92: ifle          118
      95: aload_1
      96: invokevirtual #39                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      99: new           #44                 // class io/undertow/conduits/ReadTimeoutStreamSourceConduit
     102: dup
     103: aload_1
     104: invokevirtual #39                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     107: invokevirtual #45                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     110: aload_1
     111: aload_0
     112: invokespecial #46                 // Method io/undertow/conduits/ReadTimeoutStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lorg/xnio/StreamConnection;Lio/undertow/server/OpenListener;)V
     115: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     118: aload_1
     119: getstatic     #47                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     122: invokevirtual #33                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
     125: checkcast     #34                 // class java/lang/Integer
     128: astore        5
     130: aload         5
     132: ifnull        166
     135: aload         5
     137: invokevirtual #43                 // Method java/lang/Integer.intValue:()I
     140: ifle          166
     143: aload_1
     144: invokevirtual #41                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     147: new           #48                 // class io/undertow/conduits/WriteTimeoutStreamSinkConduit
     150: dup
     151: aload_1
     152: invokevirtual #41                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     155: invokevirtual #49                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     158: aload_1
     159: aload_0
     160: invokespecial #50                 // Method io/undertow/conduits/WriteTimeoutStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/StreamConnection;Lio/undertow/server/OpenListener;)V
     163: invokevirtual #42                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     166: goto          200
     169: astore_3
     170: aload_1
     171: invokestatic  #52                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     174: getstatic     #53                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     177: aload_3
     178: invokeinterface #54,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     183: goto          200
     186: astore_3
     187: aload_1
     188: invokestatic  #52                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     191: getstatic     #53                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     194: aload_3
     195: invokeinterface #56,  2           // InterfaceMethod io/undertow/UndertowLogger.handleUnexpectedFailure:(Ljava/lang/Throwable;)V
     200: aload_0
     201: getfield      #25                 // Field statisticsEnabled:Z
     204: ifeq          263
     207: aload_1
     208: invokevirtual #41                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     211: new           #57                 // class io/undertow/conduits/BytesSentStreamSinkConduit
     214: dup
     215: aload_1
     216: invokevirtual #41                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     219: invokevirtual #49                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     222: aload_0
     223: getfield      #22                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     226: invokevirtual #58                 // Method io/undertow/server/ConnectorStatisticsImpl.sentAccumulator:()Lio/undertow/conduits/ByteActivityCallback;
     229: invokespecial #59                 // Method io/undertow/conduits/BytesSentStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ByteActivityCallback;)V
     232: invokevirtual #42                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     235: aload_1
     236: invokevirtual #39                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     239: new           #60                 // class io/undertow/conduits/BytesReceivedStreamSourceConduit
     242: dup
     243: aload_1
     244: invokevirtual #39                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     247: invokevirtual #45                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     250: aload_0
     251: getfield      #22                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     254: invokevirtual #61                 // Method io/undertow/server/ConnectorStatisticsImpl.receivedAccumulator:()Lio/undertow/conduits/ByteActivityCallback;
     257: invokespecial #62                 // Method io/undertow/conduits/BytesReceivedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ByteActivityCallback;)V
     260: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     263: new           #63                 // class io/undertow/server/protocol/http/HttpServerConnection
     266: dup
     267: aload_1
     268: aload_0
     269: getfield      #12                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     272: aload_0
     273: getfield      #64                 // Field rootHandler:Lio/undertow/server/HttpHandler;
     276: aload_0
     277: getfield      #11                 // Field undertowOptions:Lorg/xnio/OptionMap;
     280: aload_0
     281: getfield      #16                 // Field bufferSize:I
     284: aload_0
     285: getfield      #25                 // Field statisticsEnabled:Z
     288: ifeq          298
     291: aload_0
     292: getfield      #22                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     295: goto          299
     298: aconst_null
     299: invokespecial #65                 // Method io/undertow/server/protocol/http/HttpServerConnection."<init>":(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lio/undertow/server/HttpHandler;Lorg/xnio/OptionMap;ILio/undertow/server/ConnectorStatisticsImpl;)V
     302: astore_3
     303: new           #66                 // class io/undertow/server/protocol/http/HttpReadListener
     306: dup
     307: aload_3
     308: aload_0
     309: getfield      #19                 // Field parser:Lio/undertow/server/protocol/http/HttpRequestParser;
     312: aload_0
     313: getfield      #25                 // Field statisticsEnabled:Z
     316: ifeq          326
     319: aload_0
     320: getfield      #22                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     323: goto          327
     326: aconst_null
     327: invokespecial #67                 // Method io/undertow/server/protocol/http/HttpReadListener."<init>":(Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/server/protocol/http/HttpRequestParser;Lio/undertow/server/ConnectorStatisticsImpl;)V
     330: astore        4
     332: aload_2
     333: ifnull        362
     336: aload_2
     337: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     342: invokevirtual #68                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     345: ifeq          356
     348: aload_3
     349: aload_2
     350: invokevirtual #69                 // Method io/undertow/server/protocol/http/HttpServerConnection.setExtraBytes:(Lio/undertow/connector/PooledByteBuffer;)V
     353: goto          362
     356: aload_2
     357: invokeinterface #17,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     362: aload_0
     363: getfield      #22                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     366: ifnull        383
     369: aload_0
     370: getfield      #25                 // Field statisticsEnabled:Z
     373: ifeq          383
     376: aload_0
     377: getfield      #22                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     380: invokevirtual #70                 // Method io/undertow/server/ConnectorStatisticsImpl.incrementConnectionCount:()V
     383: aload_0
     384: getfield      #10                 // Field connections:Ljava/util/Set;
     387: aload_3
     388: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     393: pop
     394: aload_3
     395: new           #72                 // class io/undertow/server/protocol/http/HttpOpenListener$1
     398: dup
     399: aload_0
     400: aload_3
     401: invokespecial #73                 // Method io/undertow/server/protocol/http/HttpOpenListener$1."<init>":(Lio/undertow/server/protocol/http/HttpOpenListener;Lio/undertow/server/protocol/http/HttpServerConnection;)V
     404: invokevirtual #74                 // Method io/undertow/server/protocol/http/HttpServerConnection.addCloseListener:(Lio/undertow/server/ServerConnection$CloseListener;)V
     407: aload_3
     408: aload         4
     410: invokevirtual #75                 // Method io/undertow/server/protocol/http/HttpServerConnection.setReadListener:(Lio/undertow/server/protocol/http/HttpReadListener;)V
     413: aload         4
     415: invokevirtual #76                 // Method io/undertow/server/protocol/http/HttpReadListener.newRequest:()V
     418: aload_1
     419: invokevirtual #39                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     422: aload         4
     424: invokevirtual #77                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
     427: aload         4
     429: aload_1
     430: invokevirtual #39                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     433: invokevirtual #78                 // Method io/undertow/server/protocol/http/HttpReadListener.handleEvent:(Lorg/xnio/conduits/ConduitStreamSourceChannel;)V
     436: return
    Exception table:
       from    to  target type
          25   166   169   Class java/io/IOException
          25   166   186   Class java/lang/Throwable

  public io.undertow.server.HttpHandler getRootHandler();
    Code:
       0: aload_0
       1: getfield      #64                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  public void setRootHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       5: return

  public org.xnio.OptionMap getUndertowOptions();
    Code:
       0: aload_0
       1: getfield      #11                 // Field undertowOptions:Lorg/xnio/OptionMap;
       4: areturn

  public void setUndertowOptions(org.xnio.OptionMap);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #79                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #80                 // String undertowOptions
       9: invokeinterface #81,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #11                 // Field undertowOptions:Lorg/xnio/OptionMap;
      20: aload_0
      21: aload_1
      22: invokestatic  #18                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      25: putfield      #19                 // Field parser:Lio/undertow/server/protocol/http/HttpRequestParser;
      28: aload_0
      29: aload_1
      30: getstatic     #23                 // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      33: iconst_0
      34: invokevirtual #24                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      37: putfield      #25                 // Field statisticsEnabled:Z
      40: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #12                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public io.undertow.server.ConnectorStatistics getConnectorStatistics();
    Code:
       0: aload_0
       1: getfield      #25                 // Field statisticsEnabled:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #22                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
      11: areturn
      12: aconst_null
      13: areturn

  public void closeConnections();
    Code:
       0: aload_0
       1: getfield      #10                 // Field connections:Ljava/util/Set;
       4: invokeinterface #82,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          48
      19: aload_1
      20: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #63                 // class io/undertow/server/protocol/http/HttpServerConnection
      28: astore_2
      29: aload_2
      30: invokevirtual #85                 // Method io/undertow/server/protocol/http/HttpServerConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      33: new           #86                 // class io/undertow/server/protocol/http/HttpOpenListener$2
      36: dup
      37: aload_0
      38: aload_2
      39: invokespecial #87                 // Method io/undertow/server/protocol/http/HttpOpenListener$2."<init>":(Lio/undertow/server/protocol/http/HttpOpenListener;Lio/undertow/server/protocol/http/HttpServerConnection;)V
      42: invokevirtual #88                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      45: goto          10
      48: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #89                 // class org/xnio/StreamConnection
       5: invokevirtual #90                 // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return
}
