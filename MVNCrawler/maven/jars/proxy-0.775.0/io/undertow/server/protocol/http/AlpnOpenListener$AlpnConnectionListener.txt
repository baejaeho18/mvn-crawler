Compiled from "AlpnOpenListener.java"
class io.undertow.server.protocol.http.AlpnOpenListener$AlpnConnectionListener implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  private final org.xnio.StreamConnection channel;

  private final java.util.concurrent.CompletableFuture<io.undertow.server.protocol.http.AlpnOpenListener$SelectedAlpn> selectedAlpn;

  final io.undertow.server.protocol.http.AlpnOpenListener this$0;

  private io.undertow.server.protocol.http.AlpnOpenListener$AlpnConnectionListener(org.xnio.StreamConnection, java.util.concurrent.CompletableFuture<io.undertow.server.protocol.http.AlpnOpenListener$SelectedAlpn>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field selectedAlpn:Ljava/util/concurrent/CompletableFuture;
      19: return

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
       4: getfield      #5                  // Field io/undertow/server/protocol/http/AlpnOpenListener.bufferPool:Lio/undertow/connector/ByteBufferPool;
       7: invokeinterface #6,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      12: astore_2
      13: iconst_1
      14: istore_3
      15: aload_0
      16: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
      19: invokevirtual #7                  // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      22: aload_2
      23: invokeinterface #8,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      28: invokevirtual #9                  // Method org/xnio/conduits/ConduitStreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      31: istore        4
      33: iload         4
      35: iconst_m1
      36: if_icmpne     57
      39: aload_0
      40: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
      43: invokestatic  #10                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      46: iload_3
      47: ifeq          56
      50: aload_2
      51: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      56: return
      57: aload_2
      58: invokeinterface #8,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      63: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      66: pop
      67: aload_0
      68: getfield      #4                  // Field selectedAlpn:Ljava/util/concurrent/CompletableFuture;
      71: aconst_null
      72: invokevirtual #13                 // Method java/util/concurrent/CompletableFuture.getNow:(Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #14                 // class io/undertow/server/protocol/http/AlpnOpenListener$SelectedAlpn
      78: astore        5
      80: aload         5
      82: ifnull        105
      85: aload         5
      87: getfield      #15                 // Field io/undertow/server/protocol/http/AlpnOpenListener$SelectedAlpn.provider:Lio/undertow/protocols/alpn/ALPNProvider;
      90: aload         5
      92: getfield      #16                 // Field io/undertow/server/protocol/http/AlpnOpenListener$SelectedAlpn.engine:Ljavax/net/ssl/SSLEngine;
      95: invokeinterface #17,  2           // InterfaceMethod io/undertow/protocols/alpn/ALPNProvider.getSelectedProtocol:(Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;
     100: astore        6
     102: goto          108
     105: aconst_null
     106: astore        6
     108: aload         6
     110: ifnull        253
     113: aload         6
     115: invokevirtual #18                 // Method java/lang/String.isEmpty:()Z
     118: ifeq          194
     121: aload_0
     122: getfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     125: getfield      #19                 // Field io/undertow/server/protocol/http/AlpnOpenListener.fallbackProtocol:Ljava/lang/String;
     128: ifnonnull     164
     131: getstatic     #20                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     134: aload_0
     135: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
     138: invokevirtual #21                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
     141: invokeinterface #22,  2           // InterfaceMethod io/undertow/UndertowLogger.noALPNFallback:(Ljava/net/SocketAddress;)V
     146: aload_0
     147: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
     150: invokestatic  #10                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     153: iload_3
     154: ifeq          163
     157: aload_2
     158: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     163: return
     164: aload_0
     165: getfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     168: getfield      #23                 // Field io/undertow/server/protocol/http/AlpnOpenListener.listeners:Ljava/util/Map;
     171: aload_0
     172: getfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     175: getfield      #19                 // Field io/undertow/server/protocol/http/AlpnOpenListener.fallbackProtocol:Ljava/lang/String;
     178: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     183: checkcast     #25                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
     186: getfield      #26                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
     189: astore        7
     191: goto          216
     194: aload_0
     195: getfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     198: getfield      #23                 // Field io/undertow/server/protocol/http/AlpnOpenListener.listeners:Ljava/util/Map;
     201: aload         6
     203: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     208: checkcast     #25                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
     211: getfield      #26                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
     214: astore        7
     216: aload_1
     217: invokeinterface #27,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     222: aconst_null
     223: invokeinterface #28,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     228: aload         7
     230: aload_0
     231: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
     234: aload_2
     235: invokeinterface #29,  3           // InterfaceMethod io/undertow/server/DelegateOpenListener.handleEvent:(Lorg/xnio/StreamConnection;Lio/undertow/connector/PooledByteBuffer;)V
     240: iconst_0
     241: istore_3
     242: iload_3
     243: ifeq          252
     246: aload_2
     247: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     252: return
     253: iload         4
     255: ifle          365
     258: aload_0
     259: getfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     262: getfield      #19                 // Field io/undertow/server/protocol/http/AlpnOpenListener.fallbackProtocol:Ljava/lang/String;
     265: ifnonnull     301
     268: getstatic     #20                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     271: aload_0
     272: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
     275: invokevirtual #21                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
     278: invokeinterface #22,  2           // InterfaceMethod io/undertow/UndertowLogger.noALPNFallback:(Ljava/net/SocketAddress;)V
     283: aload_0
     284: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
     287: invokestatic  #10                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     290: iload_3
     291: ifeq          300
     294: aload_2
     295: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     300: return
     301: aload_0
     302: getfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     305: getfield      #23                 // Field io/undertow/server/protocol/http/AlpnOpenListener.listeners:Ljava/util/Map;
     308: aload_0
     309: getfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     312: getfield      #19                 // Field io/undertow/server/protocol/http/AlpnOpenListener.fallbackProtocol:Ljava/lang/String;
     315: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     320: checkcast     #25                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
     323: getfield      #26                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
     326: astore        7
     328: aload_1
     329: invokeinterface #27,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     334: aconst_null
     335: invokeinterface #28,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     340: aload         7
     342: aload_0
     343: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
     346: aload_2
     347: invokeinterface #29,  3           // InterfaceMethod io/undertow/server/DelegateOpenListener.handleEvent:(Lorg/xnio/StreamConnection;Lio/undertow/connector/PooledByteBuffer;)V
     352: iconst_0
     353: istore_3
     354: iload_3
     355: ifeq          364
     358: aload_2
     359: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     364: return
     365: iload         4
     367: ifne          391
     370: aload_0
     371: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
     374: invokevirtual #7                  // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     377: invokevirtual #30                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     380: iload_3
     381: ifeq          390
     384: aload_2
     385: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     390: return
     391: goto          15
     394: astore        4
     396: getstatic     #20                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     399: aload         4
     401: invokeinterface #32,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     406: aload_0
     407: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
     410: invokestatic  #10                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     413: iload_3
     414: ifeq          473
     417: aload_2
     418: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     423: goto          473
     426: astore        4
     428: getstatic     #20                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     431: aload         4
     433: invokeinterface #34,  2           // InterfaceMethod io/undertow/UndertowLogger.handleUnexpectedFailure:(Ljava/lang/Throwable;)V
     438: aload_0
     439: getfield      #3                  // Field channel:Lorg/xnio/StreamConnection;
     442: invokestatic  #10                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     445: iload_3
     446: ifeq          473
     449: aload_2
     450: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     455: goto          473
     458: astore        8
     460: iload_3
     461: ifeq          470
     464: aload_2
     465: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     470: aload         8
     472: athrow
     473: return
    Exception table:
       from    to  target type
          15    46   394   Class java/io/IOException
          57   153   394   Class java/io/IOException
         164   242   394   Class java/io/IOException
         253   290   394   Class java/io/IOException
         301   354   394   Class java/io/IOException
         365   380   394   Class java/io/IOException
         391   394   394   Class java/io/IOException
          15    46   426   Class java/lang/Throwable
          57   153   426   Class java/lang/Throwable
         164   242   426   Class java/lang/Throwable
         253   290   426   Class java/lang/Throwable
         301   354   426   Class java/lang/Throwable
         365   380   426   Class java/lang/Throwable
         391   394   426   Class java/lang/Throwable
          15    46   458   any
          57   153   458   any
         164   242   458   any
         253   290   458   any
         301   354   458   any
         365   380   458   any
         391   413   458   any
         426   445   458   any
         458   460   458   any

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #36                 // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return
}
