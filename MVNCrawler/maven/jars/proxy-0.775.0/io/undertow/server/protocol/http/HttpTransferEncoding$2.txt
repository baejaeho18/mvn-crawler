Compiled from "HttpTransferEncoding.java"
class io.undertow.server.protocol.http.HttpTransferEncoding$2 implements io.undertow.conduits.ConduitListener<io.undertow.conduits.ChunkedStreamSourceConduit> {
  final io.undertow.server.HttpServerExchange val$exchange;

  io.undertow.server.protocol.http.HttpTransferEncoding$2(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void handleEvent(io.undertow.conduits.ChunkedStreamSourceConduit);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/undertow/conduits/ChunkedStreamSourceConduit.isFinished:()Z
       4: ifne          24
       7: getstatic     #4                  // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      10: invokeinterface #5,  1            // InterfaceMethod io/undertow/UndertowLogger.requestWasNotFullyConsumed:()V
      15: aload_0
      16: getfield      #1                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      19: iconst_0
      20: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
      23: pop
      24: aload_0
      25: getfield      #1                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      28: invokestatic  #7                  // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
      31: return

  public void handleEvent(org.xnio.conduits.Conduit);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class io/undertow/conduits/ChunkedStreamSourceConduit
       5: invokevirtual #9                  // Method handleEvent:(Lio/undertow/conduits/ChunkedStreamSourceConduit;)V
       8: return
}
