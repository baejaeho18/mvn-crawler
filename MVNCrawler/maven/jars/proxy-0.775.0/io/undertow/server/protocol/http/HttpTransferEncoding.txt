Compiled from "HttpTransferEncoding.java"
class io.undertow.server.protocol.http.HttpTransferEncoding {
  private static final org.jboss.logging.Logger log;

  private io.undertow.server.protocol.http.HttpTransferEncoding();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void setupRequest(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: astore_1
       5: aload_1
       6: getstatic     #3                  // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
       9: invokevirtual #4                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      12: astore_2
      13: aload_1
      14: getstatic     #5                  // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      17: invokevirtual #6                  // Method io/undertow/util/HeaderMap.getLast:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      20: astore_3
      21: aload_1
      22: getstatic     #7                  // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      25: invokevirtual #4                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      28: astore        4
      30: aload_0
      31: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      34: checkcast     #9                  // class io/undertow/server/protocol/http/HttpServerConnection
      37: astore        5
      39: aload         5
      41: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getPipelineBuffer:()Lio/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit;
      44: astore        6
      46: aload         6
      48: ifnull        57
      51: aload         6
      53: aload_0
      54: invokevirtual #11                 // Method io/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit.setupPipelineBuffer:(Lio/undertow/server/HttpServerExchange;)V
      57: aload         5
      59: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      62: invokevirtual #13                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      65: astore        7
      67: aload         7
      69: aload         5
      71: invokevirtual #14                 // Method io/undertow/server/protocol/http/HttpServerConnection.getReadDataStreamSourceConduit:()Lio/undertow/conduits/ReadDataStreamSourceConduit;
      74: invokevirtual #15                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      77: aload_0
      78: aload_2
      79: invokestatic  #16                 // Method persistentConnection:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)Z
      82: istore        8
      84: aload_3
      85: ifnonnull     165
      88: aload         4
      90: ifnonnull     165
      93: iload         8
      95: ifeq          158
      98: aload         5
     100: invokevirtual #17                 // Method io/undertow/server/protocol/http/HttpServerConnection.getExtraBytes:()Lio/undertow/connector/PooledByteBuffer;
     103: ifnull        158
     106: aload         6
     108: ifnonnull     158
     111: aload         5
     113: invokevirtual #18                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
     116: getstatic     #19                 // Field io/undertow/UndertowOptions.BUFFER_PIPELINED_DATA:Lorg/xnio/Option;
     119: iconst_0
     120: invokevirtual #20                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     123: ifeq          158
     126: new           #21                 // class io/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit
     129: dup
     130: aload         5
     132: invokevirtual #22                 // Method io/undertow/server/protocol/http/HttpServerConnection.getOriginalSinkConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     135: aload         5
     137: invokevirtual #23                 // Method io/undertow/server/protocol/http/HttpServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     140: invokespecial #24                 // Method io/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/connector/ByteBufferPool;)V
     143: astore        6
     145: aload         5
     147: aload         6
     149: invokevirtual #25                 // Method io/undertow/server/protocol/http/HttpServerConnection.setPipelineBuffer:(Lio/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit;)V
     152: aload         6
     154: aload_0
     155: invokevirtual #11                 // Method io/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit.setupPipelineBuffer:(Lio/undertow/server/HttpServerExchange;)V
     158: aload_0
     159: invokestatic  #26                 // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
     162: goto          180
     165: aload_0
     166: aload_3
     167: aload         4
     169: aload         5
     171: aload         6
     173: iload         8
     175: invokestatic  #27                 // Method handleRequestEncoding:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit;Z)Z
     178: istore        8
     180: aload_0
     181: iload         8
     183: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
     186: pop
     187: aload_0
     188: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
     191: ifeq          202
     194: aload         5
     196: invokevirtual #17                 // Method io/undertow/server/protocol/http/HttpServerConnection.getExtraBytes:()Lio/undertow/connector/PooledByteBuffer;
     199: ifnull        213
     202: aload         7
     204: aconst_null
     205: invokevirtual #30                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
     208: aload         7
     210: invokevirtual #31                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     213: return

  private static boolean handleRequestEncoding(io.undertow.server.HttpServerExchange, java.lang.String, java.lang.String, io.undertow.server.protocol.http.HttpServerConnection, io.undertow.server.protocol.http.PipeliningBufferingStreamSinkConduit, boolean);
    Code:
       0: getstatic     #32                 // Field io/undertow/util/Headers.IDENTITY:Lio/undertow/util/HttpString;
       3: astore        6
       5: aload_1
       6: ifnull        19
       9: new           #33                 // class io/undertow/util/HttpString
      12: dup
      13: aload_1
      14: invokespecial #34                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      17: astore        6
      19: aload_1
      20: ifnull        74
      23: aload         6
      25: getstatic     #32                 // Field io/undertow/util/Headers.IDENTITY:Lio/undertow/util/HttpString;
      28: invokevirtual #35                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      31: ifne          74
      34: aload_0
      35: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      38: checkcast     #9                  // class io/undertow/server/protocol/http/HttpServerConnection
      41: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      44: invokevirtual #13                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      47: astore        7
      49: aload         7
      51: new           #36                 // class io/undertow/conduits/ChunkedStreamSourceConduit
      54: dup
      55: aload         7
      57: invokevirtual #37                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      60: aload_0
      61: aload_0
      62: invokestatic  #38                 // Method chunkedDrainListener:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/conduits/ConduitListener;
      65: invokespecial #39                 // Method io/undertow/conduits/ChunkedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/server/HttpServerExchange;Lio/undertow/conduits/ConduitListener;)V
      68: invokevirtual #15                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      71: goto          229
      74: aload_2
      75: ifnull        140
      78: aload_2
      79: invokestatic  #40                 // Method parsePositiveLong:(Ljava/lang/String;)J
      82: lstore        7
      84: lload         7
      86: lconst_0
      87: lcmp
      88: ifne          106
      91: getstatic     #41                 // Field log:Lorg/jboss/logging/Logger;
      94: ldc           #42                 // String No content, starting next request
      96: invokevirtual #43                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      99: aload_0
     100: invokestatic  #26                 // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
     103: goto          137
     106: aload_0
     107: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     110: checkcast     #9                  // class io/undertow/server/protocol/http/HttpServerConnection
     113: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     116: invokevirtual #13                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     119: astore        9
     121: aload         9
     123: lload         7
     125: aload         9
     127: invokevirtual #37                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     130: aload_0
     131: invokestatic  #44                 // Method fixedLengthStreamSourceConduitWrapper:(JLorg/xnio/conduits/StreamSourceConduit;Lio/undertow/server/HttpServerExchange;)Lorg/xnio/conduits/StreamSourceConduit;
     134: invokevirtual #15                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     137: goto          229
     140: aload_1
     141: ifnull        158
     144: getstatic     #41                 // Field log:Lorg/jboss/logging/Logger;
     147: ldc           #45                 // String Connection not persistent (no content length and identity transfer encoding)
     149: invokevirtual #43                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
     152: iconst_0
     153: istore        5
     155: goto          229
     158: iload         5
     160: ifeq          225
     163: aload_3
     164: invokevirtual #17                 // Method io/undertow/server/protocol/http/HttpServerConnection.getExtraBytes:()Lio/undertow/connector/PooledByteBuffer;
     167: ifnull        218
     170: aload         4
     172: ifnonnull     218
     175: aload_3
     176: invokevirtual #18                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
     179: getstatic     #19                 // Field io/undertow/UndertowOptions.BUFFER_PIPELINED_DATA:Lorg/xnio/Option;
     182: iconst_0
     183: invokevirtual #20                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     186: ifeq          218
     189: new           #21                 // class io/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit
     192: dup
     193: aload_3
     194: invokevirtual #22                 // Method io/undertow/server/protocol/http/HttpServerConnection.getOriginalSinkConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     197: aload_3
     198: invokevirtual #23                 // Method io/undertow/server/protocol/http/HttpServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     201: invokespecial #24                 // Method io/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/connector/ByteBufferPool;)V
     204: astore        4
     206: aload_3
     207: aload         4
     209: invokevirtual #25                 // Method io/undertow/server/protocol/http/HttpServerConnection.setPipelineBuffer:(Lio/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit;)V
     212: aload         4
     214: aload_0
     215: invokevirtual #11                 // Method io/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit.setupPipelineBuffer:(Lio/undertow/server/HttpServerExchange;)V
     218: aload_0
     219: invokestatic  #26                 // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
     222: goto          229
     225: aload_0
     226: invokestatic  #26                 // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
     229: iload         5
     231: ireturn

  private static boolean persistentConnection(io.undertow.server.HttpServerExchange, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method io/undertow/server/HttpServerExchange.isHttp11:()Z
       4: ifeq          27
       7: aload_1
       8: ifnull        21
      11: getstatic     #47                 // Field io/undertow/util/Headers.CLOSE:Lio/undertow/util/HttpString;
      14: aload_1
      15: invokevirtual #48                 // Method io/undertow/util/HttpString.equalToString:(Ljava/lang/String;)Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
      27: aload_0
      28: invokevirtual #49                 // Method io/undertow/server/HttpServerExchange.isHttp10:()Z
      31: ifeq          50
      34: aload_1
      35: ifnull        50
      38: getstatic     #50                 // Field io/undertow/util/Headers.KEEP_ALIVE:Lio/undertow/util/HttpString;
      41: aload_1
      42: invokevirtual #48                 // Method io/undertow/util/HttpString.equalToString:(Ljava/lang/String;)Z
      45: ifeq          50
      48: iconst_1
      49: ireturn
      50: getstatic     #41                 // Field log:Lorg/jboss/logging/Logger;
      53: ldc           #51                 // String Connection not persistent
      55: invokevirtual #43                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      58: iconst_0
      59: ireturn

  private static org.xnio.conduits.StreamSourceConduit fixedLengthStreamSourceConduitWrapper(long, org.xnio.conduits.StreamSourceConduit, io.undertow.server.HttpServerExchange);
    Code:
       0: new           #52                 // class io/undertow/conduits/FixedLengthStreamSourceConduit
       3: dup
       4: aload_2
       5: lload_0
       6: aload_3
       7: invokestatic  #53                 // Method fixedLengthDrainListener:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/conduits/ConduitListener;
      10: aload_3
      11: invokespecial #54                 // Method io/undertow/conduits/FixedLengthStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;JLio/undertow/conduits/ConduitListener;Lio/undertow/server/HttpServerExchange;)V
      14: areturn

  private static io.undertow.conduits.ConduitListener<io.undertow.conduits.FixedLengthStreamSourceConduit> fixedLengthDrainListener(io.undertow.server.HttpServerExchange);
    Code:
       0: new           #55                 // class io/undertow/server/protocol/http/HttpTransferEncoding$1
       3: dup
       4: aload_0
       5: invokespecial #56                 // Method io/undertow/server/protocol/http/HttpTransferEncoding$1."<init>":(Lio/undertow/server/HttpServerExchange;)V
       8: areturn

  private static io.undertow.conduits.ConduitListener<io.undertow.conduits.ChunkedStreamSourceConduit> chunkedDrainListener(io.undertow.server.HttpServerExchange);
    Code:
       0: new           #57                 // class io/undertow/server/protocol/http/HttpTransferEncoding$2
       3: dup
       4: aload_0
       5: invokespecial #58                 // Method io/undertow/server/protocol/http/HttpTransferEncoding$2."<init>":(Lio/undertow/server/HttpServerExchange;)V
       8: areturn

  private static io.undertow.conduits.ConduitListener<org.xnio.conduits.StreamSinkConduit> terminateResponseListener(io.undertow.server.HttpServerExchange);
    Code:
       0: new           #59                 // class io/undertow/server/protocol/http/HttpTransferEncoding$3
       3: dup
       4: aload_0
       5: invokespecial #60                 // Method io/undertow/server/protocol/http/HttpTransferEncoding$3."<init>":(Lio/undertow/server/HttpServerExchange;)V
       8: areturn

  static org.xnio.conduits.StreamSinkConduit createSinkConduit(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method io/undertow/util/DateUtils.addDateHeaderIfRequired:(Lio/undertow/server/HttpServerExchange;)V
       4: aload_0
       5: invokevirtual #62                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
       8: getstatic     #63                 // Field io/undertow/util/Methods.HEAD:Lio/undertow/util/HttpString;
      11: invokevirtual #35                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      14: istore_1
      15: aload_0
      16: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      19: checkcast     #9                  // class io/undertow/server/protocol/http/HttpServerConnection
      22: astore_2
      23: aload_2
      24: invokevirtual #64                 // Method io/undertow/server/protocol/http/HttpServerConnection.getResponseConduit:()Lio/undertow/server/protocol/http/HttpResponseConduit;
      27: astore_3
      28: aload_3
      29: aload_0
      30: invokevirtual #65                 // Method io/undertow/server/protocol/http/HttpResponseConduit.reset:(Lio/undertow/server/HttpServerExchange;)V
      33: aload_3
      34: astore        4
      36: iload_1
      37: ifeq          58
      40: new           #66                 // class io/undertow/conduits/HeadStreamSinkConduit
      43: dup
      44: aload         4
      46: aload_0
      47: invokestatic  #67                 // Method terminateResponseListener:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/conduits/ConduitListener;
      50: invokespecial #68                 // Method io/undertow/conduits/HeadStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ConduitListener;)V
      53: astore        4
      55: goto          105
      58: aload_0
      59: invokestatic  #69                 // Method io/undertow/server/Connectors.isEntityBodyAllowed:(Lio/undertow/server/HttpServerExchange;)Z
      62: ifne          105
      65: aload_0
      66: invokevirtual #70                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      69: getstatic     #7                  // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      72: invokevirtual #71                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
      75: pop
      76: aload_0
      77: invokevirtual #70                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      80: getstatic     #5                  // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      83: invokevirtual #71                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
      86: pop
      87: new           #66                 // class io/undertow/conduits/HeadStreamSinkConduit
      90: dup
      91: aload         4
      93: aload_0
      94: invokestatic  #67                 // Method terminateResponseListener:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/conduits/ConduitListener;
      97: invokespecial #68                 // Method io/undertow/conduits/HeadStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ConduitListener;)V
     100: astore        4
     102: aload         4
     104: areturn
     105: aload_0
     106: invokevirtual #70                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     109: astore        5
     111: aload         5
     113: getstatic     #3                  // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     116: invokevirtual #4                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     119: astore        6
     121: aload_0
     122: invokevirtual #72                 // Method io/undertow/server/HttpServerExchange.getStatusCode:()I
     125: sipush        417
     128: if_icmpne     137
     131: aload_0
     132: iconst_0
     133: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
     136: pop
     137: aload_0
     138: invokevirtual #74                 // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
     141: ifne          162
     144: aload         5
     146: getstatic     #3                  // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     149: getstatic     #47                 // Field io/undertow/util/Headers.CLOSE:Lio/undertow/util/HttpString;
     152: invokevirtual #75                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     155: invokevirtual #76                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     158: pop
     159: goto          229
     162: aload_0
     163: invokevirtual #74                 // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
     166: ifeq          197
     169: aload         6
     171: ifnull        197
     174: aload         6
     176: invokestatic  #77                 // Method io/undertow/util/HttpString.tryFromString:(Ljava/lang/String;)Lio/undertow/util/HttpString;
     179: getstatic     #47                 // Field io/undertow/util/Headers.CLOSE:Lio/undertow/util/HttpString;
     182: invokevirtual #35                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     185: ifeq          229
     188: aload_0
     189: iconst_0
     190: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
     193: pop
     194: goto          229
     197: aload_0
     198: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     201: invokevirtual #78                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
     204: getstatic     #79                 // Field io/undertow/UndertowOptions.ALWAYS_SET_KEEP_ALIVE:Lorg/xnio/Option;
     207: iconst_1
     208: invokevirtual #20                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     211: ifeq          229
     214: aload         5
     216: getstatic     #3                  // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     219: getstatic     #50                 // Field io/undertow/util/Headers.KEEP_ALIVE:Lio/undertow/util/HttpString;
     222: invokevirtual #75                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     225: invokevirtual #76                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     228: pop
     229: aload         5
     231: getstatic     #5                  // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     234: invokevirtual #6                  // Method io/undertow/util/HeaderMap.getLast:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     237: astore        7
     239: aload         7
     241: ifnonnull     284
     244: aload         5
     246: getstatic     #7                  // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     249: invokevirtual #4                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     252: astore        8
     254: aload         8
     256: ifnull        281
     259: aload_0
     260: iload_1
     261: aload         4
     263: aload         5
     265: aload         8
     267: aload_2
     268: invokestatic  #80                 // Method handleFixedLength:(Lio/undertow/server/HttpServerExchange;ZLorg/xnio/conduits/StreamSinkConduit;Lio/undertow/util/HeaderMap;Ljava/lang/String;Lio/undertow/server/protocol/http/HttpServerConnection;)Lorg/xnio/conduits/StreamSinkConduit;
     271: astore        9
     273: aload         9
     275: ifnull        281
     278: aload         9
     280: areturn
     281: goto          293
     284: aload         5
     286: getstatic     #7                  // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     289: invokevirtual #71                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
     292: pop
     293: aload_0
     294: iload_1
     295: aload         4
     297: aload         5
     299: aload_0
     300: invokestatic  #67                 // Method terminateResponseListener:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/conduits/ConduitListener;
     303: aload         7
     305: invokestatic  #81                 // Method handleResponseConduit:(Lio/undertow/server/HttpServerExchange;ZLorg/xnio/conduits/StreamSinkConduit;Lio/undertow/util/HeaderMap;Lio/undertow/conduits/ConduitListener;Ljava/lang/String;)Lorg/xnio/conduits/StreamSinkConduit;
     308: areturn

  private static org.xnio.conduits.StreamSinkConduit handleFixedLength(io.undertow.server.HttpServerExchange, boolean, org.xnio.conduits.StreamSinkConduit, io.undertow.util.HeaderMap, java.lang.String, io.undertow.server.protocol.http.HttpServerConnection);
    Code:
       0: aload         4
       2: invokestatic  #40                 // Method parsePositiveLong:(Ljava/lang/String;)J
       5: lstore        6
       7: iload_1
       8: ifeq          13
      11: aload_2
      12: areturn
      13: aload         5
      15: invokevirtual #82                 // Method io/undertow/server/protocol/http/HttpServerConnection.getFixedLengthStreamSinkConduit:()Lio/undertow/server/protocol/http/ServerFixedLengthStreamSinkConduit;
      18: astore        8
      20: aload         8
      22: lload         6
      24: aload_0
      25: invokevirtual #83                 // Method io/undertow/server/protocol/http/ServerFixedLengthStreamSinkConduit.reset:(JLio/undertow/server/HttpServerExchange;)V
      28: aload         8
      30: areturn
      31: astore        6
      33: aload_3
      34: getstatic     #7                  // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      37: invokevirtual #71                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
      40: pop
      41: aconst_null
      42: areturn
    Exception table:
       from    to  target type
           0    12    31   Class java/lang/NumberFormatException
          13    30    31   Class java/lang/NumberFormatException

  private static org.xnio.conduits.StreamSinkConduit handleResponseConduit(io.undertow.server.HttpServerExchange, boolean, org.xnio.conduits.StreamSinkConduit, io.undertow.util.HeaderMap, io.undertow.conduits.ConduitListener<org.xnio.conduits.StreamSinkConduit>, java.lang.String);
    Code:
       0: aload         5
       2: ifnonnull     126
       5: aload_0
       6: invokevirtual #46                 // Method io/undertow/server/HttpServerExchange.isHttp11:()Z
       9: ifeq          89
      12: aload_0
      13: invokevirtual #74                 // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
      16: ifeq          72
      19: aload_3
      20: getstatic     #5                  // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      23: getstatic     #85                 // Field io/undertow/util/Headers.CHUNKED:Lio/undertow/util/HttpString;
      26: invokevirtual #75                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      29: invokevirtual #76                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      32: pop
      33: iload_1
      34: ifeq          39
      37: aload_2
      38: areturn
      39: new           #86                 // class io/undertow/conduits/ChunkedStreamSinkConduit
      42: dup
      43: aload_2
      44: aload_0
      45: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      48: invokevirtual #87                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      51: iconst_1
      52: aload_0
      53: invokevirtual #74                 // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
      56: ifne          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: aload_3
      65: aload         4
      67: aload_0
      68: invokespecial #88                 // Method io/undertow/conduits/ChunkedStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/connector/ByteBufferPool;ZZLio/undertow/util/HeaderMap;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;)V
      71: areturn
      72: iload_1
      73: ifeq          78
      76: aload_2
      77: areturn
      78: new           #89                 // class io/undertow/conduits/FinishableStreamSinkConduit
      81: dup
      82: aload_2
      83: aload         4
      85: invokespecial #90                 // Method io/undertow/conduits/FinishableStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ConduitListener;)V
      88: areturn
      89: aload_0
      90: iconst_0
      91: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
      94: pop
      95: aload_3
      96: getstatic     #3                  // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
      99: getstatic     #47                 // Field io/undertow/util/Headers.CLOSE:Lio/undertow/util/HttpString;
     102: invokevirtual #75                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     105: invokevirtual #76                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     108: pop
     109: iload_1
     110: ifeq          115
     113: aload_2
     114: areturn
     115: new           #89                 // class io/undertow/conduits/FinishableStreamSinkConduit
     118: dup
     119: aload_2
     120: aload         4
     122: invokespecial #90                 // Method io/undertow/conduits/FinishableStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ConduitListener;)V
     125: areturn
     126: aload_0
     127: aload_2
     128: aload         4
     130: aload_3
     131: aload         5
     133: iload_1
     134: invokestatic  #91                 // Method handleExplicitTransferEncoding:(Lio/undertow/server/HttpServerExchange;Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/HeaderMap;Ljava/lang/String;Z)Lorg/xnio/conduits/StreamSinkConduit;
     137: areturn

  private static org.xnio.conduits.StreamSinkConduit handleExplicitTransferEncoding(io.undertow.server.HttpServerExchange, org.xnio.conduits.StreamSinkConduit, io.undertow.conduits.ConduitListener<org.xnio.conduits.StreamSinkConduit>, io.undertow.util.HeaderMap, java.lang.String, boolean);
    Code:
       0: new           #33                 // class io/undertow/util/HttpString
       3: dup
       4: aload         4
       6: invokespecial #34                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
       9: astore        6
      11: aload         6
      13: getstatic     #85                 // Field io/undertow/util/Headers.CHUNKED:Lio/undertow/util/HttpString;
      16: invokevirtual #35                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      19: ifeq          97
      22: iload         5
      24: ifeq          29
      27: aload_1
      28: areturn
      29: aload_0
      30: getstatic     #92                 // Field io/undertow/server/protocol/http/HttpAttachments.PRE_CHUNKED_RESPONSE:Lio/undertow/util/AttachmentKey;
      33: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      36: checkcast     #94                 // class java/lang/Boolean
      39: astore        7
      41: aload         7
      43: ifnull        65
      46: aload         7
      48: invokevirtual #95                 // Method java/lang/Boolean.booleanValue:()Z
      51: ifeq          65
      54: new           #96                 // class io/undertow/conduits/PreChunkedStreamSinkConduit
      57: dup
      58: aload_1
      59: aload_2
      60: aload_0
      61: invokespecial #97                 // Method io/undertow/conduits/PreChunkedStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;)V
      64: areturn
      65: new           #86                 // class io/undertow/conduits/ChunkedStreamSinkConduit
      68: dup
      69: aload_1
      70: aload_0
      71: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      74: invokevirtual #87                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      77: iconst_1
      78: aload_0
      79: invokevirtual #74                 // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
      82: ifne          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: aload_3
      91: aload_2
      92: aload_0
      93: invokespecial #88                 // Method io/undertow/conduits/ChunkedStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/connector/ByteBufferPool;ZZLio/undertow/util/HeaderMap;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;)V
      96: areturn
      97: iload         5
      99: ifeq          104
     102: aload_1
     103: areturn
     104: getstatic     #41                 // Field log:Lorg/jboss/logging/Logger;
     107: ldc           #98                 // String Cancelling persistence because response is identity with no content length
     109: invokevirtual #43                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
     112: aload_0
     113: iconst_0
     114: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
     117: pop
     118: aload_3
     119: getstatic     #3                  // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     122: getstatic     #47                 // Field io/undertow/util/Headers.CLOSE:Lio/undertow/util/HttpString;
     125: invokevirtual #75                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     128: invokevirtual #76                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     131: pop
     132: new           #89                 // class io/undertow/conduits/FinishableStreamSinkConduit
     135: dup
     136: aload_1
     137: aload_0
     138: invokestatic  #67                 // Method terminateResponseListener:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/conduits/ConduitListener;
     141: invokespecial #90                 // Method io/undertow/conduits/FinishableStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ConduitListener;)V
     144: areturn

  public static long parsePositiveLong(java.lang.String);
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: invokevirtual #99                 // Method java/lang/String.length:()I
       6: istore_3
       7: iload_3
       8: ifne          20
      11: new           #84                 // class java/lang/NumberFormatException
      14: dup
      15: aload_0
      16: invokespecial #100                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: lconst_1
      21: lstore        4
      23: iload_3
      24: iconst_1
      25: isub
      26: istore        6
      28: iload         6
      30: iflt          94
      33: aload_0
      34: iload         6
      36: invokevirtual #101                // Method java/lang/String.charAt:(I)C
      39: istore        7
      41: iload         7
      43: bipush        48
      45: if_icmplt     55
      48: iload         7
      50: bipush        57
      52: if_icmple     64
      55: new           #84                 // class java/lang/NumberFormatException
      58: dup
      59: aload_0
      60: invokespecial #100                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: iload         7
      66: bipush        48
      68: isub
      69: i2l
      70: lstore        8
      72: lload_1
      73: lload         8
      75: lload         4
      77: lmul
      78: ladd
      79: lstore_1
      80: lload         4
      82: ldc2_w        #102                // long 10l
      85: lmul
      86: lstore        4
      88: iinc          6, -1
      91: goto          28
      94: lload_1
      95: lreturn

  static {};
    Code:
       0: ldc           #104                // String io.undertow.server.handler.transfer-encoding
       2: invokestatic  #105                // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/String;)Lorg/jboss/logging/Logger;
       5: putstatic     #41                 // Field log:Lorg/jboss/logging/Logger;
       8: return
}
