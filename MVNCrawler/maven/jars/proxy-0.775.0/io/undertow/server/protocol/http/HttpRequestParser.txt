Compiled from "HttpRequestParser.java"
public abstract class io.undertow.server.protocol.http.HttpRequestParser {
  private static final byte[] HTTP;

  public static final int HTTP_LENGTH;

  private final int maxParameters;

  private final int maxHeaders;

  private final boolean slashDecodingFlag;

  private final boolean decode;

  private final java.lang.String charset;

  private final int maxCachedHeaderSize;

  private final boolean allowUnescapedCharactersInUrl;

  private final boolean allowIDLessMatrixParams;

  private static final boolean[] ALLOWED_TARGET_CHARACTER;

  private static final java.lang.String ID_LESS_MATRIX_PARAMS_PROPERTY;

  private static final int START;

  private static final int FIRST_COLON;

  private static final int FIRST_SLASH;

  private static final int SECOND_SLASH;

  private static final int IN_PATH;

  private static final int HOST_DONE;

  private static final int NORMAL;

  private static final int WHITESPACE;

  private static final int BEGIN_LINE_END;

  private static final int LINE_END;

  private static final int AWAIT_DATA_END;

  public static boolean isTargetCharacterAllowed(char);
    Code:
       0: getstatic     #1                  // Field ALLOWED_TARGET_CHARACTER:[Z
       3: iload_0
       4: baload
       5: ireturn

  public io.undertow.server.protocol.http.HttpRequestParser(org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getstatic     #3                  // Field io/undertow/UndertowOptions.MAX_PARAMETERS:Lorg/xnio/Option;
       9: sipush        1000
      12: invokevirtual #5                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      15: putfield      #6                  // Field maxParameters:I
      18: aload_0
      19: aload_1
      20: getstatic     #7                  // Field io/undertow/UndertowOptions.MAX_HEADERS:Lorg/xnio/Option;
      23: sipush        200
      26: invokevirtual #5                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      29: putfield      #8                  // Field maxHeaders:I
      32: aload_0
      33: aload_1
      34: invokestatic  #9                  // Method io/undertow/util/URLUtils.getSlashDecodingFlag:(Lorg/xnio/OptionMap;)Z
      37: putfield      #10                 // Field slashDecodingFlag:Z
      40: aload_0
      41: aload_1
      42: getstatic     #11                 // Field io/undertow/UndertowOptions.DECODE_URL:Lorg/xnio/Option;
      45: iconst_1
      46: invokevirtual #12                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      49: putfield      #13                 // Field decode:Z
      52: aload_0
      53: aload_1
      54: getstatic     #14                 // Field io/undertow/UndertowOptions.URL_CHARSET:Lorg/xnio/Option;
      57: getstatic     #15                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      60: invokevirtual #16                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      63: invokevirtual #17                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      66: checkcast     #18                 // class java/lang/String
      69: putfield      #19                 // Field charset:Ljava/lang/String;
      72: aload_0
      73: aload_1
      74: getstatic     #20                 // Field io/undertow/UndertowOptions.MAX_CACHED_HEADER_SIZE:Lorg/xnio/Option;
      77: sipush        150
      80: invokevirtual #5                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      83: putfield      #21                 // Field maxCachedHeaderSize:I
      86: aload_0
      87: aload_1
      88: getstatic     #22                 // Field io/undertow/UndertowOptions.ALLOW_UNESCAPED_CHARACTERS_IN_URL:Lorg/xnio/Option;
      91: iconst_0
      92: invokevirtual #12                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      95: putfield      #23                 // Field allowUnescapedCharactersInUrl:Z
      98: aload_0
      99: ldc           #25                 // String io.undertow.server.protocol.http.Parser.ID_LESS_MATRIX_PARAMS_PROPERTY
     101: invokestatic  #26                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     104: invokestatic  #27                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     107: putfield      #28                 // Field allowIDLessMatrixParams:Z
     110: return

  public static final io.undertow.server.protocol.http.HttpRequestParser instance(org.xnio.OptionMap);
    Code:
       0: ldc           #24                 // class io/undertow/server/protocol/http/HttpRequestParser
       2: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokedynamic #30,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      10: iconst_0
      11: ldc           #24                 // class io/undertow/server/protocol/http/HttpRequestParser
      13: invokevirtual #31                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      16: invokestatic  #32                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      19: astore_1
      20: aload_1
      21: iconst_1
      22: anewarray     #33                 // class java/lang/Class
      25: dup
      26: iconst_0
      27: ldc           #34                 // class org/xnio/OptionMap
      29: aastore
      30: invokevirtual #35                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      33: astore_2
      34: aload_2
      35: iconst_1
      36: anewarray     #36                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: aload_0
      42: aastore
      43: invokevirtual #37                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #24                 // class io/undertow/server/protocol/http/HttpRequestParser
      49: areturn
      50: astore_1
      51: new           #39                 // class java/lang/RuntimeException
      54: dup
      55: aload_1
      56: invokespecial #40                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      59: athrow
    Exception table:
       from    to  target type
           0    49    50   Class java/lang/Exception

  public void handle(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_2
       1: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
       4: ifne          401
       7: aload_1
       8: invokevirtual #42                 // Method java/nio/ByteBuffer.position:()I
      11: istore        4
      13: aload_1
      14: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      17: iconst_3
      18: if_icmple     96
      21: aload_1
      22: iload         4
      24: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
      27: bipush        71
      29: if_icmpne     96
      32: aload_1
      33: iload         4
      35: iconst_1
      36: iadd
      37: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
      40: bipush        69
      42: if_icmpne     96
      45: aload_1
      46: iload         4
      48: iconst_2
      49: iadd
      50: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
      53: bipush        84
      55: if_icmpne     96
      58: aload_1
      59: iload         4
      61: iconst_3
      62: iadd
      63: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
      66: bipush        32
      68: if_icmpne     96
      71: aload_1
      72: iload         4
      74: iconst_4
      75: iadd
      76: invokevirtual #45                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      79: pop
      80: aload_3
      81: getstatic     #46                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      84: invokevirtual #47                 // Method io/undertow/server/HttpServerExchange.setRequestMethod:(Lio/undertow/util/HttpString;)Lio/undertow/server/HttpServerExchange;
      87: pop
      88: aload_2
      89: iconst_1
      90: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
      93: goto          118
      96: aload_0
      97: aload_1
      98: aload_2
      99: aload_3
     100: invokevirtual #49                 // Method handleHttpVerb:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     103: goto          118
     106: astore        5
     108: new           #51                 // class io/undertow/util/BadRequestException
     111: dup
     112: aload         5
     114: invokespecial #52                 // Method io/undertow/util/BadRequestException."<init>":(Ljava/lang/Throwable;)V
     117: athrow
     118: aload_0
     119: aload_1
     120: aload_2
     121: aload_3
     122: invokevirtual #53                 // Method handlePath:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     125: iconst_0
     126: istore        5
     128: aload_1
     129: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
     132: getstatic     #54                 // Field HTTP_LENGTH:I
     135: iconst_3
     136: iadd
     137: if_icmple     332
     140: aload_1
     141: invokevirtual #42                 // Method java/nio/ByteBuffer.position:()I
     144: istore        6
     146: iconst_0
     147: istore        7
     149: iload         7
     151: getstatic     #54                 // Field HTTP_LENGTH:I
     154: if_icmpge     187
     157: getstatic     #55                 // Field HTTP:[B
     160: iload         7
     162: baload
     163: aload_1
     164: iload         6
     166: iload         7
     168: iadd
     169: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
     172: if_icmpeq     181
     175: iconst_1
     176: istore        5
     178: goto          187
     181: iinc          7, 1
     184: goto          149
     187: iload         5
     189: ifne          329
     192: aload_1
     193: iload         6
     195: getstatic     #54                 // Field HTTP_LENGTH:I
     198: iadd
     199: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
     202: istore        7
     204: aload_1
     205: iload         6
     207: getstatic     #54                 // Field HTTP_LENGTH:I
     210: iadd
     211: iconst_1
     212: iadd
     213: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
     216: istore        8
     218: aload_1
     219: iload         6
     221: getstatic     #54                 // Field HTTP_LENGTH:I
     224: iadd
     225: iconst_2
     226: iadd
     227: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
     230: istore        9
     232: iload         8
     234: bipush        13
     236: if_icmpne     326
     239: iload         9
     241: bipush        10
     243: if_icmpne     326
     246: iload         7
     248: bipush        49
     250: if_icmpne     283
     253: aload_3
     254: getstatic     #56                 // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
     257: invokevirtual #57                 // Method io/undertow/server/HttpServerExchange.setProtocol:(Lio/undertow/util/HttpString;)Lio/undertow/server/HttpServerExchange;
     260: pop
     261: aload_1
     262: iload         6
     264: getstatic     #54                 // Field HTTP_LENGTH:I
     267: iadd
     268: iconst_3
     269: iadd
     270: invokevirtual #45                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     273: pop
     274: aload_2
     275: bipush        6
     277: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     280: goto          329
     283: iload         7
     285: bipush        48
     287: if_icmpne     320
     290: aload_3
     291: getstatic     #58                 // Field io/undertow/util/Protocols.HTTP_1_0:Lio/undertow/util/HttpString;
     294: invokevirtual #57                 // Method io/undertow/server/HttpServerExchange.setProtocol:(Lio/undertow/util/HttpString;)Lio/undertow/server/HttpServerExchange;
     297: pop
     298: aload_1
     299: iload         6
     301: getstatic     #54                 // Field HTTP_LENGTH:I
     304: iadd
     305: iconst_3
     306: iadd
     307: invokevirtual #45                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     310: pop
     311: aload_2
     312: bipush        6
     314: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     317: goto          329
     320: iconst_1
     321: istore        5
     323: goto          329
     326: iconst_1
     327: istore        5
     329: goto          335
     332: iconst_1
     333: istore        5
     335: iload         5
     337: ifeq          353
     340: aload_0
     341: aload_1
     342: aload_2
     343: aload_3
     344: invokevirtual #59                 // Method handleHttpVersion:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     347: aload_0
     348: aload_1
     349: aload_2
     350: invokevirtual #60                 // Method handleAfterVersion:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;)V
     353: aload_2
     354: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     357: bipush        8
     359: if_icmpeq     395
     362: aload_1
     363: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     366: ifeq          395
     369: aload_0
     370: aload_1
     371: aload_2
     372: aload_3
     373: invokevirtual #62                 // Method handleHeader:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     376: aload_2
     377: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     380: bipush        7
     382: if_icmpne     353
     385: aload_0
     386: aload_1
     387: aload_2
     388: aload_3
     389: invokevirtual #63                 // Method handleHeaderValue:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     392: goto          353
     395: aload_0
     396: aload_3
     397: invokevirtual #64                 // Method sanitazeListTypeHeaders:(Lio/undertow/server/HttpServerExchange;)V
     400: return
     401: aload_0
     402: aload_1
     403: aload_2
     404: aload_3
     405: invokevirtual #65                 // Method handleStateful:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     408: aload_0
     409: aload_3
     410: invokevirtual #64                 // Method sanitazeListTypeHeaders:(Lio/undertow/server/HttpServerExchange;)V
     413: return
    Exception table:
       from    to  target type
          96   103   106   Class java/lang/IllegalArgumentException

  private void handleStateful(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_2
       1: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
       4: iconst_1
       5: if_icmpne     23
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokevirtual #53                 // Method handlePath:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      15: aload_1
      16: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      19: ifne          23
      22: return
      23: aload_2
      24: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
      27: iconst_3
      28: if_icmpne     46
      31: aload_0
      32: aload_1
      33: aload_2
      34: aload_3
      35: invokevirtual #66                 // Method handleQueryParameters:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      38: aload_1
      39: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      42: ifne          46
      45: return
      46: aload_2
      47: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
      50: iconst_2
      51: if_icmpne     92
      54: aload_0
      55: aload_1
      56: aload_2
      57: aload_3
      58: invokevirtual #67                 // Method handlePathParameters:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      61: aload_1
      62: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      65: ifne          69
      68: return
      69: aload_2
      70: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
      73: iconst_1
      74: if_icmpne     92
      77: aload_0
      78: aload_1
      79: aload_2
      80: aload_3
      81: invokevirtual #53                 // Method handlePath:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      84: aload_1
      85: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      88: ifne          92
      91: return
      92: aload_2
      93: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
      96: iconst_4
      97: if_icmpne     115
     100: aload_0
     101: aload_1
     102: aload_2
     103: aload_3
     104: invokevirtual #59                 // Method handleHttpVersion:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     107: aload_1
     108: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     111: ifne          115
     114: return
     115: aload_2
     116: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     119: iconst_5
     120: if_icmpne     137
     123: aload_0
     124: aload_1
     125: aload_2
     126: invokevirtual #60                 // Method handleAfterVersion:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;)V
     129: aload_1
     130: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     133: ifne          137
     136: return
     137: aload_2
     138: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     141: bipush        8
     143: if_icmpeq     194
     146: aload_2
     147: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     150: bipush        6
     152: if_icmpne     170
     155: aload_0
     156: aload_1
     157: aload_2
     158: aload_3
     159: invokevirtual #62                 // Method handleHeader:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     162: aload_1
     163: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     166: ifne          170
     169: return
     170: aload_2
     171: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     174: bipush        7
     176: if_icmpne     137
     179: aload_0
     180: aload_1
     181: aload_2
     182: aload_3
     183: invokevirtual #63                 // Method handleHeaderValue:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     186: aload_1
     187: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     190: ifne          137
     193: return
     194: return

  private void sanitazeListTypeHeaders(io.undertow.server.HttpServerExchange);
    Code:
       0: invokestatic  #68                 // Method io/undertow/util/Cookies.isCrumbsAssemplyDisabled:()Z
       3: ifne          13
       6: aload_1
       7: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      10: invokestatic  #70                 // Method io/undertow/util/Cookies.assembleCrumbs:(Lio/undertow/util/HeaderMap;)V
      13: return

  abstract void handleHttpVerb(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;

  abstract void handleHttpVersion(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;

  abstract void handleHeader(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;

  final void handlePath(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_2
       1: getfield      #71                 // Field io/undertow/server/protocol/http/ParseState.stringBuilder:Ljava/lang/StringBuilder;
       4: astore        4
       6: aload_2
       7: getfield      #72                 // Field io/undertow/server/protocol/http/ParseState.parseState:I
      10: istore        5
      12: aload_2
      13: getfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
      16: istore        6
      18: aload_2
      19: getfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
      22: istore        7
      24: aload_1
      25: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      28: ifeq          438
      31: aload_1
      32: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      35: sipush        255
      38: iand
      39: i2c
      40: istore        8
      42: aload_0
      43: getfield      #23                 // Field allowUnescapedCharactersInUrl:Z
      46: ifne          76
      49: getstatic     #1                  // Field ALLOWED_TARGET_CHARACTER:[Z
      52: iload         8
      54: baload
      55: ifne          76
      58: new           #51                 // class io/undertow/util/BadRequestException
      61: dup
      62: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      65: iload         8
      67: invokeinterface #77,  2           // InterfaceMethod io/undertow/UndertowMessages.invalidCharacterInRequestTarget:(C)Ljava/lang/String;
      72: invokespecial #78                 // Method io/undertow/util/BadRequestException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: iload         8
      78: bipush        32
      80: if_icmpeq     90
      83: iload         8
      85: bipush        9
      87: if_icmpne     132
      90: aload         4
      92: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
      95: ifeq          435
      98: aload         4
     100: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: astore        9
     105: aload_0
     106: aload_2
     107: aload_3
     108: iload         6
     110: iload         5
     112: iload         7
     114: aload         9
     116: invokevirtual #81                 // Method parsePathComplete:(Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;IIZLjava/lang/String;)V
     119: aload_3
     120: ldc           #82                 // String
     122: invokevirtual #83                 // Method io/undertow/server/HttpServerExchange.setQueryString:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     125: pop
     126: aload_2
     127: iconst_4
     128: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     131: return
     132: iload         8
     134: bipush        13
     136: if_icmpeq     146
     139: iload         8
     141: bipush        10
     143: if_icmpne     155
     146: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     149: invokeinterface #84,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToParsePath:()Ljava/lang/RuntimeException;
     154: athrow
     155: iload         8
     157: bipush        63
     159: if_icmpne     195
     162: iload         5
     164: ifeq          179
     167: iload         5
     169: iconst_5
     170: if_icmpeq     179
     173: iload         5
     175: iconst_4
     176: if_icmpne     195
     179: aload_0
     180: aload_1
     181: aload_2
     182: aload_3
     183: aload         4
     185: iload         5
     187: iload         6
     189: iload         7
     191: invokevirtual #85                 // Method beginQueryParameters:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;Ljava/lang/StringBuilder;IIZ)V
     194: return
     195: iload         8
     197: bipush        59
     199: if_icmpne     284
     202: aload_2
     203: iload         5
     205: putfield      #72                 // Field io/undertow/server/protocol/http/ParseState.parseState:I
     208: aload_2
     209: iload         7
     211: putfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
     214: aload_2
     215: getfield      #86                 // Field io/undertow/server/protocol/http/ParseState.canonicalPath:Ljava/lang/StringBuilder;
     218: aload         4
     220: iload         6
     222: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     225: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: pop
     229: aload_2
     230: getfield      #71                 // Field io/undertow/server/protocol/http/ParseState.stringBuilder:Ljava/lang/StringBuilder;
     233: ldc           #89                 // String ;
     235: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: pop
     239: aload_2
     240: aload_2
     241: getfield      #71                 // Field io/undertow/server/protocol/http/ParseState.stringBuilder:Ljava/lang/StringBuilder;
     244: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     247: putfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
     250: aload_0
     251: aload_1
     252: aload_2
     253: aload_3
     254: invokevirtual #67                 // Method handlePathParameters:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     257: aload_2
     258: getfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     261: iconst_1
     262: if_icmpne     283
     265: aload         4
     267: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     270: istore        6
     272: aload         4
     274: bipush        47
     276: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     279: pop
     280: goto          435
     283: return
     284: aload_0
     285: getfield      #13                 // Field decode:Z
     288: ifeq          311
     291: iload         8
     293: bipush        37
     295: if_icmpeq     305
     298: iload         8
     300: bipush        127
     302: if_icmple     311
     305: iconst_1
     306: istore        7
     308: goto          427
     311: iload         8
     313: bipush        58
     315: if_icmpne     329
     318: iload         5
     320: ifne          329
     323: iconst_1
     324: istore        5
     326: goto          427
     329: iload         8
     331: bipush        47
     333: if_icmpne     348
     336: iload         5
     338: iconst_1
     339: if_icmpne     348
     342: iconst_2
     343: istore        5
     345: goto          427
     348: iload         8
     350: bipush        47
     352: if_icmpne     367
     355: iload         5
     357: iconst_2
     358: if_icmpne     367
     361: iconst_3
     362: istore        5
     364: goto          427
     367: iload         8
     369: bipush        47
     371: if_icmpne     393
     374: iload         5
     376: iconst_3
     377: if_icmpne     393
     380: iconst_5
     381: istore        5
     383: aload         4
     385: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     388: istore        6
     390: goto          427
     393: iload         5
     395: iconst_1
     396: if_icmpeq     405
     399: iload         5
     401: iconst_2
     402: if_icmpne     411
     405: iconst_4
     406: istore        5
     408: goto          427
     411: iload         8
     413: bipush        47
     415: if_icmpne     427
     418: iload         5
     420: iconst_5
     421: if_icmpeq     427
     424: iconst_4
     425: istore        5
     427: aload         4
     429: iload         8
     431: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     434: pop
     435: goto          24
     438: aload_2
     439: iload         5
     441: putfield      #72                 // Field io/undertow/server/protocol/http/ParseState.parseState:I
     444: aload_2
     445: iload         6
     447: putfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
     450: aload_2
     451: iload         7
     453: putfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
     456: return

  private void parsePathComplete(io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange, int, int, boolean, java.lang.String);
    Code:
       0: iload         4
       2: iconst_3
       3: if_icmpne     31
       6: aload_2
       7: ldc           #91                 // String /
       9: invokevirtual #92                 // Method io/undertow/server/HttpServerExchange.setRequestPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      12: pop
      13: aload_2
      14: ldc           #91                 // String /
      16: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.setRelativePath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      19: pop
      20: aload_2
      21: aload         6
      23: iconst_1
      24: invokevirtual #94                 // Method io/undertow/server/HttpServerExchange.setRequestURI:(Ljava/lang/String;Z)Lio/undertow/server/HttpServerExchange;
      27: pop
      28: goto          101
      31: iload         4
      33: iconst_5
      34: if_icmpge     88
      37: aload_1
      38: getfield      #86                 // Field io/undertow/server/protocol/http/ParseState.canonicalPath:Ljava/lang/StringBuilder;
      41: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
      44: ifne          88
      47: aload_0
      48: aload         6
      50: iload         5
      52: aload_1
      53: aload_0
      54: getfield      #10                 // Field slashDecodingFlag:Z
      57: iconst_0
      58: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
      61: astore        7
      63: aload_2
      64: aload         7
      66: invokevirtual #92                 // Method io/undertow/server/HttpServerExchange.setRequestPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      69: pop
      70: aload_2
      71: aload         7
      73: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.setRelativePath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      76: pop
      77: aload_2
      78: aload         6
      80: iconst_0
      81: invokevirtual #94                 // Method io/undertow/server/HttpServerExchange.setRequestURI:(Ljava/lang/String;Z)Lio/undertow/server/HttpServerExchange;
      84: pop
      85: goto          101
      88: aload_0
      89: aload_1
      90: aload_2
      91: iload_3
      92: iload         5
      94: aload         6
      96: iload         4
      98: invokevirtual #96                 // Method handleFullUrl:(Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;IZLjava/lang/String;I)V
     101: aload_1
     102: getfield      #71                 // Field io/undertow/server/protocol/http/ParseState.stringBuilder:Ljava/lang/StringBuilder;
     105: iconst_0
     106: invokevirtual #97                 // Method java/lang/StringBuilder.setLength:(I)V
     109: aload_1
     110: getfield      #86                 // Field io/undertow/server/protocol/http/ParseState.canonicalPath:Ljava/lang/StringBuilder;
     113: iconst_0
     114: invokevirtual #97                 // Method java/lang/StringBuilder.setLength:(I)V
     117: aload_1
     118: iconst_0
     119: putfield      #72                 // Field io/undertow/server/protocol/http/ParseState.parseState:I
     122: aload_1
     123: iconst_0
     124: putfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
     127: aload_1
     128: iconst_0
     129: putfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
     132: return

  private void beginQueryParameters(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange, java.lang.StringBuilder, int, int, boolean) throws io.undertow.util.BadRequestException;
    Code:
       0: aload         4
       2: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       5: astore        8
       7: aload_0
       8: aload_2
       9: aload_3
      10: iload         6
      12: iload         5
      14: iload         7
      16: aload         8
      18: invokevirtual #81                 // Method parsePathComplete:(Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;IIZLjava/lang/String;)V
      21: aload_2
      22: iconst_3
      23: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
      26: aload_0
      27: aload_1
      28: aload_2
      29: aload_3
      30: invokevirtual #66                 // Method handleQueryParameters:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      33: return

  private void handleFullUrl(io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange, int, boolean, java.lang.String, int);
    Code:
       0: aload_1
       1: getfield      #86                 // Field io/undertow/server/protocol/http/ParseState.canonicalPath:Ljava/lang/StringBuilder;
       4: aload         5
       6: iload_3
       7: invokevirtual #98                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      10: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: pop
      14: aload_0
      15: aload_1
      16: getfield      #86                 // Field io/undertow/server/protocol/http/ParseState.canonicalPath:Ljava/lang/StringBuilder;
      19: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: iload         4
      24: aload_1
      25: aload_0
      26: getfield      #10                 // Field slashDecodingFlag:Z
      29: iconst_0
      30: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
      33: astore        7
      35: aload_2
      36: aload         7
      38: invokevirtual #92                 // Method io/undertow/server/HttpServerExchange.setRequestPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      41: pop
      42: aload_2
      43: aload         7
      45: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.setRelativePath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      48: pop
      49: aload_2
      50: aload         5
      52: iload         6
      54: iconst_5
      55: if_icmpne     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: invokevirtual #94                 // Method io/undertow/server/HttpServerExchange.setRequestURI:(Ljava/lang/String;Z)Lio/undertow/server/HttpServerExchange;
      66: pop
      67: return

  final void handleQueryParameters(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_2
       1: getfield      #71                 // Field io/undertow/server/protocol/http/ParseState.stringBuilder:Ljava/lang/StringBuilder;
       4: astore        4
       6: aload_2
       7: getfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
      10: istore        5
      12: aload_2
      13: getfield      #99                 // Field io/undertow/server/protocol/http/ParseState.mapCount:I
      16: istore        6
      18: aload_2
      19: getfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
      22: istore        7
      24: aload_2
      25: getfield      #100                // Field io/undertow/server/protocol/http/ParseState.nextQueryParam:Ljava/lang/String;
      28: astore        8
      30: aload_1
      31: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      34: ifeq          476
      37: aload_1
      38: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      41: sipush        255
      44: iand
      45: i2c
      46: istore        9
      48: aload_0
      49: getfield      #23                 // Field allowUnescapedCharactersInUrl:Z
      52: ifne          82
      55: getstatic     #1                  // Field ALLOWED_TARGET_CHARACTER:[Z
      58: iload         9
      60: baload
      61: ifne          82
      64: new           #51                 // class io/undertow/util/BadRequestException
      67: dup
      68: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      71: iload         9
      73: invokeinterface #77,  2           // InterfaceMethod io/undertow/UndertowMessages.invalidCharacterInRequestTarget:(C)Ljava/lang/String;
      78: invokespecial #78                 // Method io/undertow/util/BadRequestException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: iload         9
      84: bipush        32
      86: if_icmpeq     96
      89: iload         9
      91: bipush        9
      93: if_icmpne     208
      96: aload         4
      98: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: astore        10
     103: aload_3
     104: aload         10
     106: invokevirtual #83                 // Method io/undertow/server/HttpServerExchange.setQueryString:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     109: pop
     110: aload         8
     112: ifnonnull     151
     115: iload         5
     117: aload         4
     119: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     122: if_icmpeq     174
     125: aload_3
     126: aload_0
     127: aload         4
     129: iload         5
     131: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     134: iload         7
     136: aload_2
     137: iconst_1
     138: iconst_1
     139: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
     142: ldc           #82                 // String
     144: invokevirtual #101                // Method io/undertow/server/HttpServerExchange.addQueryParam:(Ljava/lang/String;Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     147: pop
     148: goto          174
     151: aload_3
     152: aload         8
     154: aload_0
     155: aload         4
     157: iload         5
     159: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     162: iload         7
     164: aload_2
     165: iconst_1
     166: iconst_1
     167: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
     170: invokevirtual #101                // Method io/undertow/server/HttpServerExchange.addQueryParam:(Ljava/lang/String;Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     173: pop
     174: aload_2
     175: iconst_4
     176: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     179: aload_2
     180: getfield      #71                 // Field io/undertow/server/protocol/http/ParseState.stringBuilder:Ljava/lang/StringBuilder;
     183: iconst_0
     184: invokevirtual #97                 // Method java/lang/StringBuilder.setLength:(I)V
     187: aload_2
     188: iconst_0
     189: putfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
     192: aload_2
     193: aconst_null
     194: putfield      #100                // Field io/undertow/server/protocol/http/ParseState.nextQueryParam:Ljava/lang/String;
     197: aload_2
     198: iconst_0
     199: putfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
     202: aload_2
     203: iconst_0
     204: putfield      #99                 // Field io/undertow/server/protocol/http/ParseState.mapCount:I
     207: return
     208: iload         9
     210: bipush        13
     212: if_icmpeq     222
     215: iload         9
     217: bipush        10
     219: if_icmpne     231
     222: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     225: invokeinterface #84,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToParsePath:()Ljava/lang/RuntimeException;
     230: athrow
     231: aload_0
     232: getfield      #13                 // Field decode:Z
     235: ifeq          265
     238: iload         9
     240: bipush        43
     242: if_icmpeq     259
     245: iload         9
     247: bipush        37
     249: if_icmpeq     259
     252: iload         9
     254: bipush        127
     256: if_icmple     265
     259: iconst_1
     260: istore        7
     262: goto          465
     265: iload         9
     267: bipush        61
     269: if_icmpne     310
     272: aload         8
     274: ifnonnull     310
     277: aload_0
     278: aload         4
     280: iload         5
     282: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     285: iload         7
     287: aload_2
     288: iconst_1
     289: iconst_1
     290: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
     293: astore        8
     295: iconst_0
     296: istore        7
     298: aload         4
     300: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     303: iconst_1
     304: iadd
     305: istore        5
     307: goto          465
     310: iload         9
     312: bipush        38
     314: if_icmpne     395
     317: aload         8
     319: ifnonnull     395
     322: iinc          6, 1
     325: iload         6
     327: aload_0
     328: getfield      #6                  // Field maxParameters:I
     331: if_icmplt     347
     334: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     337: aload_0
     338: getfield      #6                  // Field maxParameters:I
     341: invokeinterface #102,  2          // InterfaceMethod io/undertow/UndertowMessages.tooManyQueryParameters:(I)Lio/undertow/util/BadRequestException;
     346: athrow
     347: iload         5
     349: aload         4
     351: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     354: if_icmpeq     380
     357: aload_3
     358: aload_0
     359: aload         4
     361: iload         5
     363: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     366: iload         7
     368: aload_2
     369: iconst_1
     370: iconst_1
     371: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
     374: ldc           #82                 // String
     376: invokevirtual #101                // Method io/undertow/server/HttpServerExchange.addQueryParam:(Ljava/lang/String;Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     379: pop
     380: iconst_0
     381: istore        7
     383: aload         4
     385: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     388: iconst_1
     389: iadd
     390: istore        5
     392: goto          465
     395: iload         9
     397: bipush        38
     399: if_icmpne     465
     402: iinc          6, 1
     405: iload         6
     407: aload_0
     408: getfield      #6                  // Field maxParameters:I
     411: if_icmplt     427
     414: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     417: aload_0
     418: getfield      #6                  // Field maxParameters:I
     421: invokeinterface #102,  2          // InterfaceMethod io/undertow/UndertowMessages.tooManyQueryParameters:(I)Lio/undertow/util/BadRequestException;
     426: athrow
     427: aload_3
     428: aload         8
     430: aload_0
     431: aload         4
     433: iload         5
     435: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     438: iload         7
     440: aload_2
     441: iconst_1
     442: iconst_1
     443: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
     446: invokevirtual #101                // Method io/undertow/server/HttpServerExchange.addQueryParam:(Ljava/lang/String;Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     449: pop
     450: iconst_0
     451: istore        7
     453: aload         4
     455: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     458: iconst_1
     459: iadd
     460: istore        5
     462: aconst_null
     463: astore        8
     465: aload         4
     467: iload         9
     469: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     472: pop
     473: goto          30
     476: aload_2
     477: iload         5
     479: putfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
     482: aload_2
     483: aload         8
     485: putfield      #100                // Field io/undertow/server/protocol/http/ParseState.nextQueryParam:Ljava/lang/String;
     488: aload_2
     489: iload         7
     491: putfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
     494: aload_2
     495: iload         6
     497: putfield      #99                 // Field io/undertow/server/protocol/http/ParseState.mapCount:I
     500: return

  private java.lang.String decode(java.lang.String, boolean, io.undertow.server.protocol.http.ParseState, boolean, boolean);
    Code:
       0: iload_2
       1: ifeq          21
       4: aload_1
       5: aload_0
       6: getfield      #19                 // Field charset:Ljava/lang/String;
       9: iload         4
      11: iload         5
      13: aload_3
      14: getfield      #103                // Field io/undertow/server/protocol/http/ParseState.decodeBuffer:Ljava/lang/StringBuilder;
      17: invokestatic  #104                // Method io/undertow/util/URLUtils.decode:(Ljava/lang/String;Ljava/lang/String;ZZLjava/lang/StringBuilder;)Ljava/lang/String;
      20: areturn
      21: aload_1
      22: areturn

  final void handlePathParameters(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_2
       1: iconst_2
       2: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
       5: aload_2
       6: getfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
       9: istore        4
      11: aload_2
      12: getfield      #100                // Field io/undertow/server/protocol/http/ParseState.nextQueryParam:Ljava/lang/String;
      15: astore        5
      17: aload_2
      18: getfield      #71                 // Field io/undertow/server/protocol/http/ParseState.stringBuilder:Ljava/lang/StringBuilder;
      21: astore        6
      23: aload_2
      24: getfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
      27: istore        7
      29: aload_1
      30: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      33: ifeq          441
      36: aload_1
      37: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      40: sipush        255
      43: iand
      44: i2c
      45: istore        8
      47: aload_0
      48: getfield      #23                 // Field allowUnescapedCharactersInUrl:Z
      51: ifne          81
      54: getstatic     #1                  // Field ALLOWED_TARGET_CHARACTER:[Z
      57: iload         8
      59: baload
      60: ifne          81
      63: new           #51                 // class io/undertow/util/BadRequestException
      66: dup
      67: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      70: iload         8
      72: invokeinterface #77,  2           // InterfaceMethod io/undertow/UndertowMessages.invalidCharacterInRequestTarget:(C)Ljava/lang/String;
      77: invokespecial #78                 // Method io/undertow/util/BadRequestException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: iload         8
      83: bipush        32
      85: if_icmpeq     102
      88: iload         8
      90: bipush        9
      92: if_icmpeq     102
      95: iload         8
      97: bipush        63
      99: if_icmpne     187
     102: aload_0
     103: aload         5
     105: aload         6
     107: iload         7
     109: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     112: aload_3
     113: iload         4
     115: aload_2
     116: invokevirtual #105                // Method handleParsedParam:(Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/HttpServerExchange;ZLio/undertow/server/protocol/http/ParseState;)V
     119: aload         6
     121: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: astore        9
     126: aload_0
     127: aload_2
     128: aload_3
     129: aload         9
     131: invokevirtual #106                // Method java/lang/String.length:()I
     134: aload_2
     135: getfield      #72                 // Field io/undertow/server/protocol/http/ParseState.parseState:I
     138: aload_2
     139: getfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
     142: aload         9
     144: invokevirtual #81                 // Method parsePathComplete:(Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;IIZLjava/lang/String;)V
     147: aload_2
     148: iconst_4
     149: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     152: aload_2
     153: aconst_null
     154: putfield      #100                // Field io/undertow/server/protocol/http/ParseState.nextQueryParam:Ljava/lang/String;
     157: iload         8
     159: bipush        63
     161: if_icmpne     179
     164: aload_2
     165: iconst_3
     166: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     169: aload_0
     170: aload_1
     171: aload_2
     172: aload_3
     173: invokevirtual #66                 // Method handleQueryParameters:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     176: goto          186
     179: aload_3
     180: ldc           #82                 // String
     182: invokevirtual #83                 // Method io/undertow/server/HttpServerExchange.setQueryString:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     185: pop
     186: return
     187: iload         8
     189: bipush        13
     191: if_icmpeq     201
     194: iload         8
     196: bipush        10
     198: if_icmpne     210
     201: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     204: invokeinterface #84,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToParsePath:()Ljava/lang/RuntimeException;
     209: athrow
     210: iload         8
     212: bipush        47
     214: if_icmpne     254
     217: aload_0
     218: aload         5
     220: aload         6
     222: iload         7
     224: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     227: aload_3
     228: iload         4
     230: aload_2
     231: invokevirtual #105                // Method handleParsedParam:(Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/HttpServerExchange;ZLio/undertow/server/protocol/http/ParseState;)V
     234: aload_2
     235: aload         6
     237: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     240: putfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
     243: aload_2
     244: iconst_1
     245: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     248: aload_2
     249: aconst_null
     250: putfield      #100                // Field io/undertow/server/protocol/http/ParseState.nextQueryParam:Ljava/lang/String;
     253: return
     254: aload_0
     255: getfield      #13                 // Field decode:Z
     258: ifeq          285
     261: iload         8
     263: bipush        43
     265: if_icmpeq     282
     268: iload         8
     270: bipush        37
     272: if_icmpeq     282
     275: iload         8
     277: bipush        127
     279: if_icmple     285
     282: iconst_1
     283: istore        4
     285: iload         8
     287: bipush        61
     289: if_icmpeq     306
     292: iload         8
     294: bipush        44
     296: if_icmpne     344
     299: aload_0
     300: getfield      #28                 // Field allowIDLessMatrixParams:Z
     303: ifeq          344
     306: aload         5
     308: ifnonnull     344
     311: aload_0
     312: aload         6
     314: iload         7
     316: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     319: iload         4
     321: aload_2
     322: iconst_1
     323: iconst_1
     324: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
     327: astore        5
     329: iconst_0
     330: istore        4
     332: aload         6
     334: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     337: iconst_1
     338: iadd
     339: istore        7
     341: goto          430
     344: iload         8
     346: bipush        59
     348: if_icmpne     383
     351: aload_0
     352: aload         5
     354: aload         6
     356: iload         7
     358: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     361: aload_3
     362: iload         4
     364: aload_2
     365: invokevirtual #105                // Method handleParsedParam:(Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/HttpServerExchange;ZLio/undertow/server/protocol/http/ParseState;)V
     368: aconst_null
     369: astore        5
     371: aload         6
     373: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     376: iconst_1
     377: iadd
     378: istore        7
     380: goto          430
     383: iload         8
     385: bipush        44
     387: if_icmpne     430
     390: aload         5
     392: ifnonnull     404
     395: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     398: invokeinterface #84,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToParsePath:()Ljava/lang/RuntimeException;
     403: athrow
     404: aload_0
     405: aload         5
     407: aload         6
     409: iload         7
     411: invokevirtual #87                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     414: aload_3
     415: iload         4
     417: aload_2
     418: invokevirtual #105                // Method handleParsedParam:(Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/HttpServerExchange;ZLio/undertow/server/protocol/http/ParseState;)V
     421: aload         6
     423: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     426: iconst_1
     427: iadd
     428: istore        7
     430: aload         6
     432: iload         8
     434: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     437: pop
     438: goto          29
     441: aload_2
     442: iload         4
     444: putfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
     447: aload_2
     448: iload         7
     450: putfield      #73                 // Field io/undertow/server/protocol/http/ParseState.pos:I
     453: aload_2
     454: iload         4
     456: putfield      #74                 // Field io/undertow/server/protocol/http/ParseState.urlDecodeRequired:Z
     459: aload_2
     460: aload         5
     462: putfield      #100                // Field io/undertow/server/protocol/http/ParseState.nextQueryParam:Ljava/lang/String;
     465: return

  private void handleParsedParam(java.lang.String, java.lang.String, io.undertow.server.HttpServerExchange, boolean, io.undertow.server.protocol.http.ParseState) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_1
       1: ifnonnull     25
       4: aload_3
       5: aload_0
       6: aload_2
       7: iload         4
       9: aload         5
      11: iconst_1
      12: iconst_1
      13: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
      16: ldc           #82                 // String
      18: invokevirtual #107                // Method io/undertow/server/HttpServerExchange.addPathParam:(Ljava/lang/String;Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      21: pop
      22: goto          42
      25: aload_3
      26: aload_1
      27: aload_0
      28: aload_2
      29: iload         4
      31: aload         5
      33: iconst_1
      34: iconst_1
      35: invokevirtual #95                 // Method decode:(Ljava/lang/String;ZLio/undertow/server/protocol/http/ParseState;ZZ)Ljava/lang/String;
      38: invokevirtual #107                // Method io/undertow/server/HttpServerExchange.addPathParam:(Ljava/lang/String;Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      41: pop
      42: return

  final void handleHeaderValue(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_2
       1: getfield      #108                // Field io/undertow/server/protocol/http/ParseState.nextHeader:Lio/undertow/util/HttpString;
       4: astore        4
       6: aload_2
       7: getfield      #71                 // Field io/undertow/server/protocol/http/ParseState.stringBuilder:Ljava/lang/StringBuilder;
      10: astore        5
      12: aload_2
      13: getfield      #109                // Field io/undertow/server/protocol/http/ParseState.headerValuesCache:Lio/undertow/server/protocol/http/CacheMap;
      16: astore        6
      18: aload         4
      20: ifnull        66
      23: aload         5
      25: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
      28: ifne          66
      31: aload         6
      33: ifnull        66
      36: aload         6
      38: aload         4
      40: invokevirtual #110                // Method io/undertow/server/protocol/http/CacheMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #18                 // class java/lang/String
      46: astore        7
      48: aload         7
      50: ifnull        66
      53: aload_0
      54: aload         7
      56: aload_1
      57: aload_2
      58: aload_3
      59: invokevirtual #111                // Method handleCachedHeader:(Ljava/lang/String;Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)Z
      62: ifeq          66
      65: return
      66: aload_0
      67: aload_1
      68: aload_2
      69: aload_3
      70: aload         4
      72: aload         6
      74: aload         5
      76: invokevirtual #112                // Method handleHeaderValueCacheMiss:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;Lio/undertow/util/HttpString;Lio/undertow/server/protocol/http/CacheMap;Ljava/lang/StringBuilder;)V
      79: return

  private void handleHeaderValueCacheMiss(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange, io.undertow.util.HttpString, io.undertow.server.protocol.http.CacheMap<io.undertow.util.HttpString, java.lang.String>, java.lang.StringBuilder) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_2
       1: getfield      #72                 // Field io/undertow/server/protocol/http/ParseState.parseState:I
       4: istore        7
       6: aload_1
       7: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      10: ifeq          86
      13: iload         7
      15: ifne          86
      18: aload_1
      19: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      22: istore        8
      24: iload         8
      26: bipush        13
      28: if_icmpne     37
      31: iconst_2
      32: istore        7
      34: goto          83
      37: iload         8
      39: bipush        10
      41: if_icmpne     50
      44: iconst_3
      45: istore        7
      47: goto          83
      50: iload         8
      52: bipush        32
      54: if_icmpeq     64
      57: iload         8
      59: bipush        9
      61: if_icmpne     70
      64: iconst_1
      65: istore        7
      67: goto          83
      70: aload         6
      72: iload         8
      74: sipush        255
      77: iand
      78: i2c
      79: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: pop
      83: goto          6
      86: aload_1
      87: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      90: ifeq          476
      93: aload_1
      94: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      97: istore        8
      99: iload         7
     101: tableswitch   { // 0 to 4
                     0: 136
                     1: 198
                     2: 276
                     3: 276
                     4: 466
               default: 473
          }
     136: iload         8
     138: bipush        13
     140: if_icmpne     149
     143: iconst_2
     144: istore        7
     146: goto          473
     149: iload         8
     151: bipush        10
     153: if_icmpne     162
     156: iconst_3
     157: istore        7
     159: goto          473
     162: iload         8
     164: bipush        32
     166: if_icmpeq     176
     169: iload         8
     171: bipush        9
     173: if_icmpne     182
     176: iconst_1
     177: istore        7
     179: goto          473
     182: aload         6
     184: iload         8
     186: sipush        255
     189: iand
     190: i2c
     191: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     194: pop
     195: goto          473
     198: iload         8
     200: bipush        13
     202: if_icmpne     211
     205: iconst_2
     206: istore        7
     208: goto          473
     211: iload         8
     213: bipush        10
     215: if_icmpne     224
     218: iconst_3
     219: istore        7
     221: goto          473
     224: iload         8
     226: bipush        32
     228: if_icmpeq     473
     231: iload         8
     233: bipush        9
     235: if_icmpne     241
     238: goto          473
     241: aload         6
     243: invokevirtual #79                 // Method java/lang/StringBuilder.length:()I
     246: ifle          257
     249: aload         6
     251: bipush        32
     253: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     256: pop
     257: aload         6
     259: iload         8
     261: sipush        255
     264: iand
     265: i2c
     266: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     269: pop
     270: iconst_0
     271: istore        7
     273: goto          473
     276: iload         8
     278: bipush        10
     280: if_icmpne     295
     283: iload         7
     285: iconst_2
     286: if_icmpne     295
     289: iconst_3
     290: istore        7
     292: goto          473
     295: iload         8
     297: bipush        9
     299: if_icmpeq     309
     302: iload         8
     304: bipush        32
     306: if_icmpne     315
     309: iconst_1
     310: istore        7
     312: goto          473
     315: aload         6
     317: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     320: astore        9
     322: aload_2
     323: dup
     324: getfield      #99                 // Field io/undertow/server/protocol/http/ParseState.mapCount:I
     327: iconst_1
     328: iadd
     329: dup_x1
     330: putfield      #99                 // Field io/undertow/server/protocol/http/ParseState.mapCount:I
     333: aload_0
     334: getfield      #8                  // Field maxHeaders:I
     337: if_icmple     360
     340: new           #51                 // class io/undertow/util/BadRequestException
     343: dup
     344: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     347: aload_0
     348: getfield      #8                  // Field maxHeaders:I
     351: invokeinterface #113,  2          // InterfaceMethod io/undertow/UndertowMessages.tooManyHeaders:(I)Ljava/lang/String;
     356: invokespecial #78                 // Method io/undertow/util/BadRequestException."<init>":(Ljava/lang/String;)V
     359: athrow
     360: aload_3
     361: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     364: aload         4
     366: aload         9
     368: invokevirtual #114                // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     371: pop
     372: aload         5
     374: ifnull        405
     377: aload         4
     379: invokevirtual #115                // Method io/undertow/util/HttpString.length:()I
     382: aload         9
     384: invokevirtual #106                // Method java/lang/String.length:()I
     387: iadd
     388: aload_0
     389: getfield      #21                 // Field maxCachedHeaderSize:I
     392: if_icmpge     405
     395: aload         5
     397: aload         4
     399: aload         9
     401: invokevirtual #116                // Method io/undertow/server/protocol/http/CacheMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     404: pop
     405: aload_2
     406: aconst_null
     407: putfield      #108                // Field io/undertow/server/protocol/http/ParseState.nextHeader:Lio/undertow/util/HttpString;
     410: aload_2
     411: iload         8
     413: putfield      #117                // Field io/undertow/server/protocol/http/ParseState.leftOver:B
     416: aload_2
     417: getfield      #71                 // Field io/undertow/server/protocol/http/ParseState.stringBuilder:Ljava/lang/StringBuilder;
     420: iconst_0
     421: invokevirtual #97                 // Method java/lang/StringBuilder.setLength:(I)V
     424: iload         8
     426: bipush        13
     428: if_icmpne     437
     431: iconst_4
     432: istore        7
     434: goto          463
     437: iload         8
     439: bipush        10
     441: if_icmpne     451
     444: aload_2
     445: bipush        8
     447: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     450: return
     451: aload_2
     452: bipush        6
     454: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     457: aload_2
     458: iconst_0
     459: putfield      #72                 // Field io/undertow/server/protocol/http/ParseState.parseState:I
     462: return
     463: goto          473
     466: aload_2
     467: bipush        8
     469: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     472: return
     473: goto          86
     476: aload_2
     477: iload         7
     479: putfield      #72                 // Field io/undertow/server/protocol/http/ParseState.parseState:I
     482: return

  protected boolean handleCachedHeader(java.lang.String, java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_2
       1: invokevirtual #42                 // Method java/nio/ByteBuffer.position:()I
       4: istore        5
       6: iload         5
       8: aload_2
       9: invokevirtual #118                // Method java/nio/ByteBuffer.limit:()I
      12: if_icmpge     32
      15: aload_2
      16: iload         5
      18: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
      21: bipush        32
      23: if_icmpne     32
      26: iinc          5, 1
      29: goto          6
      32: aload_1
      33: invokevirtual #106                // Method java/lang/String.length:()I
      36: iconst_3
      37: iadd
      38: iload         5
      40: iadd
      41: aload_2
      42: invokevirtual #118                // Method java/nio/ByteBuffer.limit:()I
      45: if_icmple     50
      48: iconst_0
      49: ireturn
      50: iconst_0
      51: istore        6
      53: iload         6
      55: aload_1
      56: invokevirtual #106                // Method java/lang/String.length:()I
      59: if_icmpge     92
      62: aload_2
      63: iload         5
      65: iload         6
      67: iadd
      68: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
      71: istore        7
      73: iload         7
      75: aload_1
      76: iload         6
      78: invokevirtual #119                // Method java/lang/String.charAt:(I)C
      81: if_icmpeq     86
      84: iconst_0
      85: ireturn
      86: iinc          6, 1
      89: goto          53
      92: aload_2
      93: iload         5
      95: iload         6
      97: iinc          6, 1
     100: iadd
     101: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
     104: bipush        13
     106: if_icmpeq     111
     109: iconst_0
     110: ireturn
     111: aload_2
     112: iload         5
     114: iload         6
     116: iinc          6, 1
     119: iadd
     120: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
     123: bipush        10
     125: if_icmpeq     130
     128: iconst_0
     129: ireturn
     130: aload_2
     131: iload         5
     133: iload         6
     135: iadd
     136: invokevirtual #44                 // Method java/nio/ByteBuffer.get:(I)B
     139: istore        7
     141: iload         7
     143: bipush        9
     145: if_icmpeq     155
     148: iload         7
     150: bipush        32
     152: if_icmpne     157
     155: iconst_0
     156: ireturn
     157: aload_2
     158: iload         5
     160: iload         6
     162: iadd
     163: invokevirtual #45                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     166: pop
     167: aload_3
     168: dup
     169: getfield      #99                 // Field io/undertow/server/protocol/http/ParseState.mapCount:I
     172: iconst_1
     173: iadd
     174: dup_x1
     175: putfield      #99                 // Field io/undertow/server/protocol/http/ParseState.mapCount:I
     178: aload_0
     179: getfield      #8                  // Field maxHeaders:I
     182: if_icmple     205
     185: new           #51                 // class io/undertow/util/BadRequestException
     188: dup
     189: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     192: aload_0
     193: getfield      #8                  // Field maxHeaders:I
     196: invokeinterface #113,  2          // InterfaceMethod io/undertow/UndertowMessages.tooManyHeaders:(I)Ljava/lang/String;
     201: invokespecial #78                 // Method io/undertow/util/BadRequestException."<init>":(Ljava/lang/String;)V
     204: athrow
     205: aload         4
     207: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     210: aload_3
     211: getfield      #108                // Field io/undertow/server/protocol/http/ParseState.nextHeader:Lio/undertow/util/HttpString;
     214: aload_1
     215: invokevirtual #114                // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     218: pop
     219: aload_3
     220: aconst_null
     221: putfield      #108                // Field io/undertow/server/protocol/http/ParseState.nextHeader:Lio/undertow/util/HttpString;
     224: aload_3
     225: bipush        6
     227: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
     230: aload_3
     231: iconst_0
     232: putfield      #72                 // Field io/undertow/server/protocol/http/ParseState.parseState:I
     235: iconst_1
     236: ireturn

  protected void handleAfterVersion(java.nio.ByteBuffer, io.undertow.server.protocol.http.ParseState) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_2
       1: getfield      #117                // Field io/undertow/server/protocol/http/ParseState.leftOver:B
       4: bipush        10
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: istore_3
      15: aload_1
      16: invokevirtual #61                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      19: ifeq          117
      22: aload_1
      23: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      26: istore        4
      28: iload_3
      29: ifeq          59
      32: iload         4
      34: bipush        10
      36: if_icmpne     46
      39: aload_2
      40: bipush        8
      42: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
      45: return
      46: aload_2
      47: bipush        6
      49: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
      52: aload_2
      53: iload         4
      55: putfield      #117                // Field io/undertow/server/protocol/http/ParseState.leftOver:B
      58: return
      59: iload         4
      61: bipush        10
      63: if_icmpne     71
      66: iconst_1
      67: istore_3
      68: goto          114
      71: iload         4
      73: bipush        13
      75: if_icmpeq     105
      78: iload         4
      80: bipush        32
      82: if_icmpeq     105
      85: iload         4
      87: bipush        9
      89: if_icmpeq     105
      92: aload_2
      93: bipush        6
      95: putfield      #41                 // Field io/undertow/server/protocol/http/ParseState.state:I
      98: aload_2
      99: iload         4
     101: putfield      #117                // Field io/undertow/server/protocol/http/ParseState.leftOver:B
     104: return
     105: getstatic     #76                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     108: invokeinterface #120,  1          // InterfaceMethod io/undertow/UndertowMessages.badRequest:()Lio/undertow/util/BadRequestException;
     113: athrow
     114: goto          15
     117: iload_3
     118: ifeq          127
     121: aload_2
     122: bipush        10
     124: putfield      #117                // Field io/undertow/server/protocol/http/ParseState.leftOver:B
     127: return

  protected static java.util.Map<java.lang.String, io.undertow.util.HttpString> httpStrings();
    Code:
       0: new           #121                // class java/util/HashMap
       3: dup
       4: invokespecial #122                // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: iconst_3
       9: anewarray     #33                 // class java/lang/Class
      12: dup
      13: iconst_0
      14: ldc           #123                // class io/undertow/util/Headers
      16: aastore
      17: dup
      18: iconst_1
      19: ldc           #124                // class io/undertow/util/Methods
      21: aastore
      22: dup
      23: iconst_2
      24: ldc           #125                // class io/undertow/util/Protocols
      26: aastore
      27: astore_1
      28: aload_1
      29: astore_2
      30: aload_2
      31: arraylength
      32: istore_3
      33: iconst_0
      34: istore        4
      36: iload         4
      38: iload_3
      39: if_icmpge     145
      42: aload_2
      43: iload         4
      45: aaload
      46: astore        5
      48: aload         5
      50: invokevirtual #126                // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      53: astore        6
      55: aload         6
      57: arraylength
      58: istore        7
      60: iconst_0
      61: istore        8
      63: iload         8
      65: iload         7
      67: if_icmpge     139
      70: aload         6
      72: iload         8
      74: aaload
      75: astore        9
      77: aload         9
      79: invokevirtual #127                // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      82: ldc           #128                // class io/undertow/util/HttpString
      84: invokevirtual #129                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifeq          133
      90: aconst_null
      91: astore        10
      93: aload         9
      95: aconst_null
      96: invokevirtual #130                // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      99: checkcast     #128                // class io/undertow/util/HttpString
     102: astore        10
     104: aload_0
     105: aload         10
     107: invokevirtual #131                // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     110: aload         10
     112: invokeinterface #132,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: goto          133
     121: astore        11
     123: new           #39                 // class java/lang/RuntimeException
     126: dup
     127: aload         11
     129: invokespecial #40                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     132: athrow
     133: iinc          8, 1
     136: goto          63
     139: iinc          4, 1
     142: goto          36
     145: aload_0
     146: areturn
    Exception table:
       from    to  target type
          93   118   121   Class java/lang/IllegalAccessException

  static {};
    Code:
       0: sipush        256
       3: newarray       boolean
       5: putstatic     #1                  // Field ALLOWED_TARGET_CHARACTER:[Z
       8: ldc           #134                // String HTTP/1.
      10: ldc           #135                // String ASCII
      12: invokevirtual #136                // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      15: putstatic     #55                 // Field HTTP:[B
      18: getstatic     #55                 // Field HTTP:[B
      21: arraylength
      22: putstatic     #54                 // Field HTTP_LENGTH:I
      25: goto          38
      28: astore_0
      29: new           #39                 // class java/lang/RuntimeException
      32: dup
      33: aload_0
      34: invokespecial #40                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: iconst_0
      39: istore_0
      40: iload_0
      41: sipush        256
      44: if_icmpge     181
      47: iload_0
      48: bipush        32
      50: if_icmplt     59
      53: iload_0
      54: bipush        126
      56: if_icmple     68
      59: getstatic     #1                  // Field ALLOWED_TARGET_CHARACTER:[Z
      62: iload_0
      63: iconst_0
      64: bastore
      65: goto          175
      68: iload_0
      69: i2c
      70: lookupswitch  { // 10
                    34: 160
                    35: 160
                    60: 160
                    62: 160
                    92: 160
                    94: 160
                    96: 160
                   123: 160
                   124: 160
                   125: 160
               default: 169
          }
     160: getstatic     #1                  // Field ALLOWED_TARGET_CHARACTER:[Z
     163: iload_0
     164: iconst_0
     165: bastore
     166: goto          175
     169: getstatic     #1                  // Field ALLOWED_TARGET_CHARACTER:[Z
     172: iload_0
     173: iconst_1
     174: bastore
     175: iinc          0, 1
     178: goto          40
     181: return
    Exception table:
       from    to  target type
           8    25    28   Class java/io/UnsupportedEncodingException
}
