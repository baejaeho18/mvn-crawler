Compiled from "AbstractFramedStreamSourceChannel.java"
public abstract class io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C extends io.undertow.server.protocol.framed.AbstractFramedChannel<C, R, S>, R extends io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>, S extends io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel<C, R, S>> implements org.xnio.channels.StreamSourceChannel {
  private final org.xnio.ChannelListener$SimpleSetter<? extends R> readSetter;

  private final org.xnio.ChannelListener$SimpleSetter<? extends R> closeSetter;

  private final C framedChannel;

  private final java.util.Deque<io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>.FrameData> pendingFrameData;

  private int state;

  private static final int STATE_DONE;

  private static final int STATE_READS_RESUMED;

  private static final int STATE_READS_AWAKEN;

  private static final int STATE_CLOSED;

  private static final int STATE_LAST_FRAME;

  private static final int STATE_IN_LISTENER_LOOP;

  private static final int STATE_STREAM_BROKEN;

  private static final int STATE_RETURNED_MINUS_ONE;

  private static final int STATE_WAITNG_MINUS_ONE;

  private volatile io.undertow.connector.PooledByteBuffer data;

  private int currentDataOriginalSize;

  private long frameDataRemaining;

  private final java.lang.Object lock;

  private int waiters;

  private volatile boolean waitingForFrame;

  private int readFrameCount;

  private long maxStreamSize;

  private long currentStreamSize;

  private org.xnio.ChannelListener[] closeListeners;

  public io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel(C);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/xnio/ChannelListener$SimpleSetter
       8: dup
       9: invokespecial #3                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      12: putfield      #4                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      15: aload_0
      16: new           #2                  // class org/xnio/ChannelListener$SimpleSetter
      19: dup
      20: invokespecial #3                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      23: putfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      26: aload_0
      27: new           #6                  // class java/util/LinkedList
      30: dup
      31: invokespecial #7                  // Method java/util/LinkedList."<init>":()V
      34: putfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      37: aload_0
      38: iconst_0
      39: putfield      #9                  // Field state:I
      42: aload_0
      43: new           #10                 // class java/lang/Object
      46: dup
      47: invokespecial #1                  // Method java/lang/Object."<init>":()V
      50: putfield      #11                 // Field lock:Ljava/lang/Object;
      53: aload_0
      54: iconst_0
      55: putfield      #12                 // Field readFrameCount:I
      58: aload_0
      59: ldc2_w        #13                 // long -1l
      62: putfield      #15                 // Field maxStreamSize:J
      65: aload_0
      66: aconst_null
      67: putfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      70: aload_0
      71: aload_1
      72: putfield      #17                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      75: aload_0
      76: iconst_1
      77: putfield      #18                 // Field waitingForFrame:Z
      80: return

  public io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel(C, io.undertow.connector.PooledByteBuffer, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/xnio/ChannelListener$SimpleSetter
       8: dup
       9: invokespecial #3                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      12: putfield      #4                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      15: aload_0
      16: new           #2                  // class org/xnio/ChannelListener$SimpleSetter
      19: dup
      20: invokespecial #3                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      23: putfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      26: aload_0
      27: new           #6                  // class java/util/LinkedList
      30: dup
      31: invokespecial #7                  // Method java/util/LinkedList."<init>":()V
      34: putfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      37: aload_0
      38: iconst_0
      39: putfield      #9                  // Field state:I
      42: aload_0
      43: new           #10                 // class java/lang/Object
      46: dup
      47: invokespecial #1                  // Method java/lang/Object."<init>":()V
      50: putfield      #11                 // Field lock:Ljava/lang/Object;
      53: aload_0
      54: iconst_0
      55: putfield      #12                 // Field readFrameCount:I
      58: aload_0
      59: ldc2_w        #13                 // long -1l
      62: putfield      #15                 // Field maxStreamSize:J
      65: aload_0
      66: aconst_null
      67: putfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      70: aload_0
      71: aload_1
      72: putfield      #17                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      75: aload_0
      76: aload_2
      77: ifnonnull     90
      80: lload_3
      81: lconst_0
      82: lcmp
      83: ifgt          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: putfield      #18                 // Field waitingForFrame:Z
      94: aload_0
      95: lload_3
      96: putfield      #19                 // Field frameDataRemaining:J
      99: aload_0
     100: lload_3
     101: putfield      #20                 // Field currentStreamSize:J
     104: aload_2
     105: ifnull        155
     108: aload_2
     109: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     114: invokevirtual #22                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     117: ifne          149
     120: aload_2
     121: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     126: aload_0
     127: aconst_null
     128: putfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     131: aload_0
     132: lload_3
     133: lconst_0
     134: lcmp
     135: ifgt          142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: putfield      #18                 // Field waitingForFrame:Z
     146: goto          155
     149: aload_0
     150: aconst_null
     151: aload_2
     152: invokevirtual #25                 // Method dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     155: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: iconst_2
       5: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          15
      11: ldc2_w        #13                 // long -1l
      14: lreturn
      15: aload_0
      16: invokevirtual #28                 // Method beforeRead:()V
      19: aload_0
      20: getfield      #18                 // Field waitingForFrame:Z
      23: ifeq          28
      26: lconst_0
      27: lreturn
      28: aload_0
      29: getfield      #19                 // Field frameDataRemaining:J
      32: lconst_0
      33: lcmp
      34: ifne          92
      37: aload_0
      38: getfield      #9                  // Field state:I
      41: bipush        32
      43: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      46: ifeq          92
      49: aload_0
      50: getfield      #11                 // Field lock:Ljava/lang/Object;
      53: dup
      54: astore        6
      56: monitorenter
      57: aload_0
      58: dup
      59: getfield      #9                  // Field state:I
      62: sipush        256
      65: ior
      66: putfield      #9                  // Field state:I
      69: ldc2_w        #13                 // long -1l
      72: lstore        7
      74: aload         6
      76: monitorexit
      77: aload_0
      78: invokevirtual #29                 // Method exitRead:()V
      81: lload         7
      83: lreturn
      84: astore        9
      86: aload         6
      88: monitorexit
      89: aload         9
      91: athrow
      92: aload_0
      93: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      96: ifnull        228
      99: aload_0
     100: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     103: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     108: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:()I
     111: istore        6
     113: lload_3
     114: aload_0
     115: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     118: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     123: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
     126: i2l
     127: lcmp
     128: ifge          160
     131: aload_0
     132: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     135: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     140: aload_0
     141: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     144: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     149: invokevirtual #32                 // Method java/nio/ByteBuffer.position:()I
     152: i2l
     153: lload_3
     154: ladd
     155: l2i
     156: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     159: pop
     160: aload         5
     162: aload_0
     163: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     166: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     171: lload_1
     172: invokevirtual #34                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
     175: i2l
     176: lstore        7
     178: aload_0
     179: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     182: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     187: iload         6
     189: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     192: pop
     193: aload_0
     194: invokevirtual #35                 // Method decrementFrameDataRemaining:()V
     197: aload_0
     198: invokevirtual #29                 // Method exitRead:()V
     201: lload         7
     203: lreturn
     204: astore        10
     206: aload_0
     207: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     210: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     215: iload         6
     217: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     220: pop
     221: aload_0
     222: invokevirtual #35                 // Method decrementFrameDataRemaining:()V
     225: aload         10
     227: athrow
     228: lconst_0
     229: lstore        6
     231: aload_0
     232: invokevirtual #29                 // Method exitRead:()V
     235: lload         6
     237: lreturn
     238: astore        11
     240: aload_0
     241: invokevirtual #29                 // Method exitRead:()V
     244: aload         11
     246: athrow
    Exception table:
       from    to  target type
          57    77    84   any
          84    89    84   any
         113   178   204   any
         204   206   204   any
          28    77   238   any
          84   197   238   any
         204   231   238   any
         238   240   238   any

  private void decrementFrameDataRemaining();
    Code:
       0: aload_0
       1: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
       4: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       9: invokevirtual #22                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      12: ifne          29
      15: aload_0
      16: dup
      17: getfield      #19                 // Field frameDataRemaining:J
      20: aload_0
      21: getfield      #36                 // Field currentDataOriginalSize:I
      24: i2l
      25: lsub
      26: putfield      #19                 // Field frameDataRemaining:J
      29: return

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: iconst_2
       5: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          15
      11: ldc2_w        #13                 // long -1l
      14: lreturn
      15: aload_0
      16: invokevirtual #28                 // Method beforeRead:()V
      19: aload_0
      20: getfield      #18                 // Field waitingForFrame:Z
      23: ifeq          37
      26: aload_3
      27: aload_3
      28: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:()I
      31: invokevirtual #37                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      34: pop
      35: lconst_0
      36: lreturn
      37: aload_0
      38: getfield      #19                 // Field frameDataRemaining:J
      41: lconst_0
      42: lcmp
      43: ifne          101
      46: aload_0
      47: getfield      #9                  // Field state:I
      50: bipush        32
      52: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      55: ifeq          101
      58: aload_0
      59: getfield      #11                 // Field lock:Ljava/lang/Object;
      62: dup
      63: astore        5
      65: monitorenter
      66: aload_0
      67: dup
      68: getfield      #9                  // Field state:I
      71: sipush        256
      74: ior
      75: putfield      #9                  // Field state:I
      78: ldc2_w        #13                 // long -1l
      81: lstore        6
      83: aload         5
      85: monitorexit
      86: aload_0
      87: invokevirtual #29                 // Method exitRead:()V
      90: lload         6
      92: lreturn
      93: astore        8
      95: aload         5
      97: monitorexit
      98: aload         8
     100: athrow
     101: aload_0
     102: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     105: ifnull        308
     108: aload_0
     109: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     112: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     117: invokevirtual #22                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     120: ifeq          308
     123: aload_0
     124: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     127: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     132: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:()I
     135: istore        5
     137: lload_1
     138: aload_0
     139: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     142: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     147: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
     150: i2l
     151: lcmp
     152: ifge          184
     155: aload_0
     156: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     159: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     164: aload_0
     165: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     168: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     173: invokevirtual #32                 // Method java/nio/ByteBuffer.position:()I
     176: i2l
     177: lload_1
     178: ladd
     179: l2i
     180: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     183: pop
     184: aload         4
     186: aload_0
     187: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     190: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     195: invokeinterface #38,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     200: istore        6
     202: aload_0
     203: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     206: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     211: invokevirtual #22                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     214: ifeq          244
     217: aload_3
     218: invokevirtual #39                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     221: pop
     222: aload_3
     223: aload_0
     224: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     227: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     232: invokestatic  #40                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
     235: pop
     236: aload_3
     237: invokevirtual #41                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     240: pop
     241: goto          253
     244: aload_3
     245: aload_3
     246: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:()I
     249: invokevirtual #37                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     252: pop
     253: iload         6
     255: i2l
     256: lstore        7
     258: aload_0
     259: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     262: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     267: iload         5
     269: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     272: pop
     273: aload_0
     274: invokevirtual #35                 // Method decrementFrameDataRemaining:()V
     277: aload_0
     278: invokevirtual #29                 // Method exitRead:()V
     281: lload         7
     283: lreturn
     284: astore        9
     286: aload_0
     287: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     290: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     295: iload         5
     297: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     300: pop
     301: aload_0
     302: invokevirtual #35                 // Method decrementFrameDataRemaining:()V
     305: aload         9
     307: athrow
     308: aload_3
     309: aload_3
     310: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:()I
     313: invokevirtual #37                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     316: pop
     317: lconst_0
     318: lstore        5
     320: aload_0
     321: invokevirtual #29                 // Method exitRead:()V
     324: lload         5
     326: lreturn
     327: astore        10
     329: aload_0
     330: invokevirtual #29                 // Method exitRead:()V
     333: aload         10
     335: athrow
    Exception table:
       from    to  target type
          66    86    93   any
          93    98    93   any
         137   258   284   any
         284   286   284   any
          37    86   327   any
          93   277   327   any
         284   320   327   any
         327   329   327   any

  public long getMaxStreamSize();
    Code:
       0: aload_0
       1: getfield      #15                 // Field maxStreamSize:J
       4: lreturn

  public void setMaxStreamSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #15                 // Field maxStreamSize:J
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifle          24
      11: lload_1
      12: aload_0
      13: getfield      #20                 // Field currentStreamSize:J
      16: lcmp
      17: ifge          24
      20: aload_0
      21: invokevirtual #42                 // Method handleStreamTooLarge:()V
      24: return

  private void handleStreamTooLarge();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       4: return

  public void suspendReads();
    Code:
       0: aload_0
       1: getfield      #11                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: dup
       9: getfield      #9                  // Field state:I
      12: bipush        -13
      14: iand
      15: putfield      #9                  // Field state:I
      18: aload_1
      19: monitorexit
      20: goto          28
      23: astore_2
      24: aload_1
      25: monitorexit
      26: aload_2
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  protected void complete() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method close:()V
       4: return

  protected boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: iconst_2
       5: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void resumeReads();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #45                 // Method resumeReadsInternal:(Z)V
       5: return

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: iconst_4
       5: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void wakeupReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #45                 // Method resumeReadsInternal:(Z)V
       5: return

  public void addCloseTask(org.xnio.ChannelListener<R>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
       4: ifnonnull     22
       7: aload_0
       8: iconst_1
       9: anewarray     #46                 // class org/xnio/ChannelListener
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: putfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      19: goto          58
      22: aload_0
      23: getfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      26: astore_2
      27: aload_0
      28: aload_2
      29: arraylength
      30: iconst_1
      31: iadd
      32: anewarray     #46                 // class org/xnio/ChannelListener
      35: putfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      38: aload_2
      39: iconst_0
      40: aload_0
      41: getfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      44: iconst_0
      45: aload_2
      46: arraylength
      47: invokestatic  #47                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: aload_0
      51: getfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      54: aload_2
      55: arraylength
      56: aload_1
      57: aastore
      58: return

  void resumeReadsInternal(boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: dup
       9: getfield      #9                  // Field state:I
      12: iconst_4
      13: ior
      14: putfield      #9                  // Field state:I
      17: iload_1
      18: ifeq          35
      21: aload_0
      22: dup
      23: getfield      #9                  // Field state:I
      26: bipush        8
      28: ior
      29: putfield      #9                  // Field state:I
      32: goto          49
      35: aload_0
      36: getfield      #9                  // Field state:I
      39: iconst_4
      40: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      43: ifne          49
      46: aload_2
      47: monitorexit
      48: return
      49: aload_0
      50: getfield      #9                  // Field state:I
      53: bipush        64
      55: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      58: ifne          87
      61: aload_0
      62: dup
      63: getfield      #9                  // Field state:I
      66: bipush        64
      68: ior
      69: putfield      #9                  // Field state:I
      72: aload_0
      73: invokevirtual #48                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      76: new           #49                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$1
      79: dup
      80: aload_0
      81: invokespecial #50                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$1."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
      84: invokevirtual #51                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.runInIoThread:(Ljava/lang/Runnable;)V
      87: aload_2
      88: monitorexit
      89: goto          97
      92: astore_3
      93: aload_2
      94: monitorexit
      95: aload_3
      96: athrow
      97: return
    Exception table:
       from    to  target type
           7    48    92   any
          49    89    92   any
          92    95    92   any

  private org.xnio.ChannelListener<? super R> getReadListener();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: invokevirtual #52                 // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
       7: areturn

  public void shutdownReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method close:()V
       4: return

  protected void lastFrame();
    Code:
       0: aload_0
       1: getfield      #11                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: dup
       9: getfield      #9                  // Field state:I
      12: bipush        32
      14: ior
      15: putfield      #9                  // Field state:I
      18: aload_1
      19: monitorexit
      20: goto          28
      23: astore_2
      24: aload_1
      25: monitorexit
      26: aload_2
      27: athrow
      28: aload_0
      29: iconst_0
      30: putfield      #18                 // Field waitingForFrame:Z
      33: aload_0
      34: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      37: ifnonnull     100
      40: aload_0
      41: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      44: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      49: ifeq          100
      52: aload_0
      53: getfield      #19                 // Field frameDataRemaining:J
      56: lconst_0
      57: lcmp
      58: ifne          100
      61: aload_0
      62: getfield      #11                 // Field lock:Ljava/lang/Object;
      65: dup
      66: astore_1
      67: monitorenter
      68: aload_0
      69: dup
      70: getfield      #9                  // Field state:I
      73: iconst_2
      74: ior
      75: putfield      #9                  // Field state:I
      78: aload_1
      79: monitorexit
      80: goto          88
      83: astore_3
      84: aload_1
      85: monitorexit
      86: aload_3
      87: athrow
      88: aload_0
      89: invokevirtual #48                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      92: aload_0
      93: invokevirtual #54                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.notifyFrameReadComplete:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
      96: aload_0
      97: invokestatic  #43                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     100: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any
          68    80    83   any
          83    86    83   any

  protected boolean isLastFrame();
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: bipush        32
       6: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ireturn

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: invokestatic  #55                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: invokevirtual #56                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       7: if_acmpne     19
      10: getstatic     #57                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #58,  1           // InterfaceMethod io/undertow/UndertowMessages.awaitCalledFromIoThread:()Ljava/io/IOException;
      18: athrow
      19: aload_0
      20: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      23: ifnonnull     160
      26: aload_0
      27: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      30: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      35: ifeq          160
      38: aload_0
      39: getfield      #9                  // Field state:I
      42: sipush        144
      45: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      48: ifne          160
      51: aload_0
      52: getfield      #11                 // Field lock:Ljava/lang/Object;
      55: dup
      56: astore_1
      57: monitorenter
      58: aload_0
      59: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      62: ifnonnull     148
      65: aload_0
      66: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      69: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      74: ifeq          148
      77: aload_0
      78: getfield      #9                  // Field state:I
      81: sipush        144
      84: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      87: ifne          148
      90: aload_0
      91: dup
      92: getfield      #59                 // Field waiters:I
      95: iconst_1
      96: iadd
      97: putfield      #59                 // Field waiters:I
     100: aload_0
     101: getfield      #11                 // Field lock:Ljava/lang/Object;
     104: invokevirtual #60                 // Method java/lang/Object.wait:()V
     107: aload_0
     108: dup
     109: getfield      #59                 // Field waiters:I
     112: iconst_1
     113: isub
     114: putfield      #59                 // Field waiters:I
     117: goto          148
     120: astore_2
     121: invokestatic  #55                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     124: invokevirtual #62                 // Method java/lang/Thread.interrupt:()V
     127: new           #63                 // class java/io/InterruptedIOException
     130: dup
     131: invokespecial #64                 // Method java/io/InterruptedIOException."<init>":()V
     134: athrow
     135: astore_3
     136: aload_0
     137: dup
     138: getfield      #59                 // Field waiters:I
     141: iconst_1
     142: isub
     143: putfield      #59                 // Field waiters:I
     146: aload_3
     147: athrow
     148: aload_1
     149: monitorexit
     150: goto          160
     153: astore        4
     155: aload_1
     156: monitorexit
     157: aload         4
     159: athrow
     160: return
    Exception table:
       from    to  target type
          90   107   120   Class java/lang/InterruptedException
          90   107   135   any
         120   136   135   any
          58   150   153   any
         153   157   153   any

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #55                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: invokevirtual #56                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       7: if_acmpne     19
      10: getstatic     #57                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #58,  1           // InterfaceMethod io/undertow/UndertowMessages.awaitCalledFromIoThread:()Ljava/io/IOException;
      18: athrow
      19: aload_0
      20: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      23: ifnonnull     171
      26: aload_0
      27: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      30: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      35: ifeq          171
      38: aload_0
      39: getfield      #9                  // Field state:I
      42: sipush        144
      45: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      48: ifne          171
      51: aload_0
      52: getfield      #11                 // Field lock:Ljava/lang/Object;
      55: dup
      56: astore        4
      58: monitorenter
      59: aload_0
      60: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      63: ifnonnull     157
      66: aload_0
      67: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      70: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      75: ifeq          157
      78: aload_0
      79: getfield      #9                  // Field state:I
      82: sipush        144
      85: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      88: ifne          157
      91: aload_0
      92: dup
      93: getfield      #59                 // Field waiters:I
      96: iconst_1
      97: iadd
      98: putfield      #59                 // Field waiters:I
     101: aload_0
     102: getfield      #11                 // Field lock:Ljava/lang/Object;
     105: aload_3
     106: lload_1
     107: invokevirtual #65                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     110: invokevirtual #66                 // Method java/lang/Object.wait:(J)V
     113: aload_0
     114: dup
     115: getfield      #59                 // Field waiters:I
     118: iconst_1
     119: isub
     120: putfield      #59                 // Field waiters:I
     123: goto          157
     126: astore        5
     128: invokestatic  #55                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     131: invokevirtual #62                 // Method java/lang/Thread.interrupt:()V
     134: new           #63                 // class java/io/InterruptedIOException
     137: dup
     138: invokespecial #64                 // Method java/io/InterruptedIOException."<init>":()V
     141: athrow
     142: astore        6
     144: aload_0
     145: dup
     146: getfield      #59                 // Field waiters:I
     149: iconst_1
     150: isub
     151: putfield      #59                 // Field waiters:I
     154: aload         6
     156: athrow
     157: aload         4
     159: monitorexit
     160: goto          171
     163: astore        7
     165: aload         4
     167: monitorexit
     168: aload         7
     170: athrow
     171: return
    Exception table:
       from    to  target type
          91   113   126   Class java/lang/InterruptedException
          91   113   142   any
         126   144   142   any
          59   160   163   any
         163   168   163   any

  protected void dataReady(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: sipush        144
       7: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          20
      13: aload_2
      14: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      19: return
      20: aload_0
      21: getfield      #11                 // Field lock:Ljava/lang/Object;
      24: dup
      25: astore_3
      26: monitorenter
      27: aload_0
      28: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      31: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      36: istore        4
      38: aload_0
      39: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      42: new           #67                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData
      45: dup
      46: aload_0
      47: aload_1
      48: aload_2
      49: invokespecial #68                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
      52: invokeinterface #69,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      57: pop
      58: iload         4
      60: ifeq          77
      63: aload_0
      64: getfield      #59                 // Field waiters:I
      67: ifle          77
      70: aload_0
      71: getfield      #11                 // Field lock:Ljava/lang/Object;
      74: invokevirtual #70                 // Method java/lang/Object.notifyAll:()V
      77: aload_0
      78: iconst_0
      79: putfield      #18                 // Field waitingForFrame:Z
      82: aload_3
      83: monitorexit
      84: goto          94
      87: astore        5
      89: aload_3
      90: monitorexit
      91: aload         5
      93: athrow
      94: aload_0
      95: getfield      #9                  // Field state:I
      98: iconst_4
      99: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
     102: ifeq          110
     105: aload_0
     106: iconst_1
     107: invokevirtual #45                 // Method resumeReadsInternal:(Z)V
     110: aload_1
     111: ifnull        154
     114: aload_0
     115: dup
     116: getfield      #20                 // Field currentStreamSize:J
     119: aload_1
     120: invokeinterface #71,  1           // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     125: ladd
     126: putfield      #20                 // Field currentStreamSize:J
     129: aload_0
     130: getfield      #15                 // Field maxStreamSize:J
     133: lconst_0
     134: lcmp
     135: ifle          154
     138: aload_0
     139: getfield      #20                 // Field currentStreamSize:J
     142: aload_0
     143: getfield      #15                 // Field maxStreamSize:J
     146: lcmp
     147: ifle          154
     150: aload_0
     151: invokevirtual #42                 // Method handleStreamTooLarge:()V
     154: return
    Exception table:
       from    to  target type
          27    84    87   any
          87    91    87   any

  protected long updateFrameDataRemaining(io.undertow.connector.PooledByteBuffer, long);
    Code:
       0: lload_2
       1: lreturn

  protected io.undertow.connector.PooledByteBuffer processFrameData(io.undertow.connector.PooledByteBuffer, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: areturn

  protected void handleHeaderData(io.undertow.server.protocol.framed.FrameHeaderData);
    Code:
       0: return

  public org.xnio.XnioExecutor getReadThread();
    Code:
       0: aload_0
       1: getfield      #17                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #72                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public org.xnio.ChannelListener$Setter<? extends R> getReadSetter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public org.xnio.ChannelListener$Setter<? extends R> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #17                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #73                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #17                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #72                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: iconst_0
       1: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: iconst_2
       5: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          15
      11: ldc2_w        #13                 // long -1l
      14: lreturn
      15: aload_0
      16: invokevirtual #28                 // Method beforeRead:()V
      19: aload_0
      20: getfield      #18                 // Field waitingForFrame:Z
      23: ifeq          28
      26: lconst_0
      27: lreturn
      28: aload_0
      29: getfield      #19                 // Field frameDataRemaining:J
      32: lconst_0
      33: lcmp
      34: ifne          95
      37: aload_0
      38: getfield      #9                  // Field state:I
      41: bipush        32
      43: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      46: ifeq          95
      49: aload_0
      50: getfield      #11                 // Field lock:Ljava/lang/Object;
      53: dup
      54: astore        4
      56: monitorenter
      57: aload_0
      58: dup
      59: getfield      #9                  // Field state:I
      62: sipush        256
      65: ior
      66: putfield      #9                  // Field state:I
      69: aload         4
      71: monitorexit
      72: goto          83
      75: astore        5
      77: aload         4
      79: monitorexit
      80: aload         5
      82: athrow
      83: ldc2_w        #13                 // long -1l
      86: lstore        4
      88: aload_0
      89: invokevirtual #29                 // Method exitRead:()V
      92: lload         4
      94: lreturn
      95: aload_0
      96: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      99: ifnull        262
     102: aload_0
     103: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     106: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     111: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:()I
     114: istore        4
     116: aload_1
     117: iload_2
     118: iload_3
     119: invokestatic  #74                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;II)J
     122: lstore        5
     124: lload         5
     126: aload_0
     127: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     130: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     135: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
     138: i2l
     139: lcmp
     140: ifge          176
     143: aload_0
     144: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     147: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     152: aload_0
     153: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     156: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     161: invokevirtual #32                 // Method java/nio/ByteBuffer.position:()I
     164: i2l
     165: lload         5
     167: ladd
     168: l2i
     169: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     172: pop
     173: goto          191
     176: aload_0
     177: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     180: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     185: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
     188: i2l
     189: lstore        5
     191: lload         5
     193: l2i
     194: aload_1
     195: iload_2
     196: iload_3
     197: aload_0
     198: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     201: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     206: invokestatic  #75                 // Method org/xnio/Buffers.copy:(I[Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
     209: i2l
     210: lstore        7
     212: aload_0
     213: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     216: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     221: iload         4
     223: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     226: pop
     227: aload_0
     228: invokevirtual #35                 // Method decrementFrameDataRemaining:()V
     231: aload_0
     232: invokevirtual #29                 // Method exitRead:()V
     235: lload         7
     237: lreturn
     238: astore        9
     240: aload_0
     241: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     244: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     249: iload         4
     251: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     254: pop
     255: aload_0
     256: invokevirtual #35                 // Method decrementFrameDataRemaining:()V
     259: aload         9
     261: athrow
     262: lconst_0
     263: lstore        4
     265: aload_0
     266: invokevirtual #29                 // Method exitRead:()V
     269: lload         4
     271: lreturn
     272: astore        10
     274: aload_0
     275: invokevirtual #29                 // Method exitRead:()V
     278: aload         10
     280: athrow
    Exception table:
       from    to  target type
          57    72    75   any
          75    80    75   any
         116   212   238   any
         238   240   238   any
          28    88   272   any
          95   231   272   any
         238   265   272   any
         272   274   272   any

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #76                 // Method read:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: iconst_2
       5: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          13
      11: iconst_m1
      12: ireturn
      13: aload_1
      14: invokevirtual #22                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: invokevirtual #28                 // Method beforeRead:()V
      26: aload_0
      27: getfield      #18                 // Field waitingForFrame:Z
      30: ifeq          35
      33: iconst_0
      34: ireturn
      35: aload_0
      36: getfield      #19                 // Field frameDataRemaining:J
      39: lconst_0
      40: lcmp
      41: ifne          101
      44: aload_0
      45: getfield      #9                  // Field state:I
      48: bipush        32
      50: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      53: ifeq          101
      56: aload_0
      57: getfield      #11                 // Field lock:Ljava/lang/Object;
      60: dup
      61: astore_2
      62: monitorenter
      63: aload_0
      64: dup
      65: getfield      #9                  // Field state:I
      68: sipush        256
      71: ior
      72: putfield      #9                  // Field state:I
      75: aload_2
      76: monitorexit
      77: goto          85
      80: astore_3
      81: aload_2
      82: monitorexit
      83: aload_3
      84: athrow
      85: iconst_m1
      86: istore_2
      87: aload_0
      88: invokevirtual #29                 // Method exitRead:()V
      91: goto          99
      94: astore_3
      95: aload_0
      96: invokevirtual #78                 // Method markStreamBroken:()V
      99: iload_2
     100: ireturn
     101: aload_0
     102: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     105: ifnull        258
     108: aload_0
     109: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     112: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     117: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:()I
     120: istore_2
     121: aload_1
     122: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
     125: istore_3
     126: iload_3
     127: aload_0
     128: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     131: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     136: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
     139: if_icmpge     172
     142: aload_0
     143: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     146: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     151: aload_0
     152: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     155: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     160: invokevirtual #32                 // Method java/nio/ByteBuffer.position:()I
     163: iload_3
     164: iadd
     165: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     168: pop
     169: goto          185
     172: aload_0
     173: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     176: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     181: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
     184: istore_3
     185: iload_3
     186: aload_1
     187: aload_0
     188: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     191: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     196: invokestatic  #79                 // Method org/xnio/Buffers.copy:(ILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
     199: istore        4
     201: aload_0
     202: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     205: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     210: iload_2
     211: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     214: pop
     215: aload_0
     216: invokevirtual #35                 // Method decrementFrameDataRemaining:()V
     219: aload_0
     220: invokevirtual #29                 // Method exitRead:()V
     223: goto          232
     226: astore        5
     228: aload_0
     229: invokevirtual #78                 // Method markStreamBroken:()V
     232: iload         4
     234: ireturn
     235: astore        6
     237: aload_0
     238: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     241: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     246: iload_2
     247: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     250: pop
     251: aload_0
     252: invokevirtual #35                 // Method decrementFrameDataRemaining:()V
     255: aload         6
     257: athrow
     258: iconst_0
     259: istore_2
     260: aload_0
     261: invokevirtual #29                 // Method exitRead:()V
     264: goto          272
     267: astore_3
     268: aload_0
     269: invokevirtual #78                 // Method markStreamBroken:()V
     272: iload_2
     273: ireturn
     274: astore        7
     276: aload_0
     277: invokevirtual #29                 // Method exitRead:()V
     280: goto          289
     283: astore        8
     285: aload_0
     286: invokevirtual #78                 // Method markStreamBroken:()V
     289: aload         7
     291: athrow
    Exception table:
       from    to  target type
          63    77    80   any
          80    83    80   any
          87    91    94   Class java/lang/Throwable
         219   223   226   Class java/lang/Throwable
         121   201   235   any
         235   237   235   any
         260   264   267   Class java/lang/Throwable
          35    87   274   any
         101   219   274   any
         235   260   274   any
         276   280   283   Class java/lang/Throwable
         274   276   274   any

  private void beforeRead() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: sipush        128
       7: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          22
      13: getstatic     #57                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      16: invokeinterface #80,  1           // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      21: athrow
      22: aload_0
      23: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      26: ifnonnull     214
      29: aload_0
      30: getfield      #11                 // Field lock:Ljava/lang/Object;
      33: dup
      34: astore_1
      35: monitorenter
      36: aload_0
      37: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      40: invokeinterface #81,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      45: checkcast     #67                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData
      48: astore_2
      49: aload_2
      50: ifnull        202
      53: aload_2
      54: invokevirtual #82                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.getFrameData:()Lio/undertow/connector/PooledByteBuffer;
      57: astore_3
      58: iconst_1
      59: istore        4
      61: aload_3
      62: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      67: invokevirtual #22                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      70: ifne          82
      73: aload_3
      74: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      79: iconst_0
      80: istore        4
      82: aload_2
      83: invokevirtual #83                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.getFrameHeaderData:()Lio/undertow/server/protocol/framed/FrameHeaderData;
      86: ifnull        110
      89: aload_0
      90: aload_2
      91: invokevirtual #83                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.getFrameHeaderData:()Lio/undertow/server/protocol/framed/FrameHeaderData;
      94: invokeinterface #71,  1           // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
      99: putfield      #19                 // Field frameDataRemaining:J
     102: aload_0
     103: aload_2
     104: invokevirtual #83                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.getFrameHeaderData:()Lio/undertow/server/protocol/framed/FrameHeaderData;
     107: invokevirtual #84                 // Method handleHeaderData:(Lio/undertow/server/protocol/framed/FrameHeaderData;)V
     110: iload         4
     112: ifeq          202
     115: aload_0
     116: aload_0
     117: aload_3
     118: aload_0
     119: getfield      #19                 // Field frameDataRemaining:J
     122: invokevirtual #85                 // Method updateFrameDataRemaining:(Lio/undertow/connector/PooledByteBuffer;J)J
     125: putfield      #19                 // Field frameDataRemaining:J
     128: aload_0
     129: aload_3
     130: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     135: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
     138: putfield      #36                 // Field currentDataOriginalSize:I
     141: aload_0
     142: aload_0
     143: aload_3
     144: aload_0
     145: getfield      #19                 // Field frameDataRemaining:J
     148: aload_0
     149: getfield      #36                 // Field currentDataOriginalSize:I
     152: i2l
     153: lsub
     154: lconst_0
     155: lcmp
     156: ifne          163
     159: iconst_1
     160: goto          164
     163: iconst_0
     164: invokevirtual #86                 // Method processFrameData:(Lio/undertow/connector/PooledByteBuffer;Z)Lio/undertow/connector/PooledByteBuffer;
     167: putfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
     170: goto          202
     173: astore        5
     175: aload_3
     176: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     181: getstatic     #87                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     184: new           #88                 // class java/io/IOException
     187: dup
     188: aload         5
     190: invokespecial #89                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     193: invokeinterface #90,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     198: aload_0
     199: invokevirtual #78                 // Method markStreamBroken:()V
     202: aload_1
     203: monitorexit
     204: goto          214
     207: astore        6
     209: aload_1
     210: monitorexit
     211: aload         6
     213: athrow
     214: return
    Exception table:
       from    to  target type
         141   170   173   Class java/lang/Throwable
          36   204   207   any
         207   211   207   any

  private void exitRead() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        36
       7: aload_0
       8: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      11: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: invokevirtual #22                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      19: ifne          36
      22: aload_0
      23: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      26: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      31: aload_0
      32: aconst_null
      33: putfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      36: aload_0
      37: getfield      #19                 // Field frameDataRemaining:J
      40: lconst_0
      41: lcmp
      42: ifne          196
      45: aload_0
      46: getfield      #11                 // Field lock:Ljava/lang/Object;
      49: dup
      50: astore_1
      51: monitorenter
      52: aload_0
      53: dup
      54: getfield      #12                 // Field readFrameCount:I
      57: iconst_1
      58: iadd
      59: putfield      #12                 // Field readFrameCount:I
      62: aload_0
      63: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      66: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      71: ifeq          140
      74: aload_0
      75: getfield      #9                  // Field state:I
      78: sipush        256
      81: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      84: ifeq          108
      87: aload_0
      88: dup
      89: getfield      #9                  // Field state:I
      92: iconst_2
      93: ior
      94: putfield      #9                  // Field state:I
      97: aload_0
      98: invokevirtual #91                 // Method complete:()V
     101: aload_0
     102: invokevirtual #44                 // Method close:()V
     105: goto          140
     108: aload_0
     109: getfield      #9                  // Field state:I
     112: bipush        32
     114: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
     117: ifeq          135
     120: aload_0
     121: dup
     122: getfield      #9                  // Field state:I
     125: sipush        512
     128: ior
     129: putfield      #9                  // Field state:I
     132: goto          140
     135: aload_0
     136: iconst_1
     137: putfield      #18                 // Field waitingForFrame:Z
     140: aload_1
     141: monitorexit
     142: goto          150
     145: astore_2
     146: aload_1
     147: monitorexit
     148: aload_2
     149: athrow
     150: aload_0
     151: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
     154: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     159: ifeq          196
     162: aload_0
     163: getfield      #17                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     166: aload_0
     167: invokevirtual #54                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.notifyFrameReadComplete:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
     170: goto          196
     173: astore_3
     174: aload_0
     175: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
     178: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     183: ifeq          194
     186: aload_0
     187: getfield      #17                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     190: aload_0
     191: invokevirtual #54                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.notifyFrameReadComplete:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
     194: aload_3
     195: athrow
     196: return
    Exception table:
       from    to  target type
          52   142   145   any
         145   148   145   any
          45   150   173   any

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: bipush        16
       6: invokestatic  #92                 // Method org/xnio/Bits.allAreClear:(II)Z
       9: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: bipush        16
       6: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #11                 // Field lock:Ljava/lang/Object;
      17: dup
      18: astore_1
      19: monitorenter
      20: aload_0
      21: getfield      #9                  // Field state:I
      24: bipush        16
      26: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      29: ifeq          35
      32: aload_1
      33: monitorexit
      34: return
      35: aload_0
      36: dup
      37: getfield      #9                  // Field state:I
      40: bipush        16
      42: ior
      43: putfield      #9                  // Field state:I
      46: aload_0
      47: getfield      #9                  // Field state:I
      50: bipush        34
      52: invokestatic  #92                 // Method org/xnio/Bits.allAreClear:(II)Z
      55: ifeq          74
      58: aload_0
      59: dup
      60: getfield      #9                  // Field state:I
      63: sipush        128
      66: ior
      67: putfield      #9                  // Field state:I
      70: aload_0
      71: invokevirtual #93                 // Method channelForciblyClosed:()V
      74: aload_0
      75: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      78: ifnull        95
      81: aload_0
      82: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      85: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      90: aload_0
      91: aconst_null
      92: putfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      95: aload_0
      96: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      99: invokeinterface #53,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     104: ifne          130
     107: aload_0
     108: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
     111: invokeinterface #81,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     116: checkcast     #67                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData
     119: getfield      #94                 // Field io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.frameData:Lio/undertow/connector/PooledByteBuffer;
     122: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     127: goto          95
     130: aload_0
     131: aload_0
     132: getfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     135: invokevirtual #52                 // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
     138: invokestatic  #95                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     141: pop
     142: aload_0
     143: getfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
     146: ifnull        178
     149: iconst_0
     150: istore_2
     151: iload_2
     152: aload_0
     153: getfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
     156: arraylength
     157: if_icmpge     178
     160: aload_0
     161: getfield      #16                 // Field closeListeners:[Lorg/xnio/ChannelListener;
     164: iload_2
     165: aaload
     166: aload_0
     167: invokeinterface #96,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
     172: iinc          2, 1
     175: goto          151
     178: aload_0
     179: getfield      #59                 // Field waiters:I
     182: ifle          192
     185: aload_0
     186: getfield      #11                 // Field lock:Ljava/lang/Object;
     189: invokevirtual #70                 // Method java/lang/Object.notifyAll:()V
     192: aload_1
     193: monitorexit
     194: goto          202
     197: astore_3
     198: aload_1
     199: monitorexit
     200: aload_3
     201: athrow
     202: return
    Exception table:
       from    to  target type
          20    34   197   any
          35   194   197   any
         197   200   197   any

  protected void channelForciblyClosed();
    Code:
       0: return

  protected C getFramedChannel();
    Code:
       0: aload_0
       1: getfield      #17                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: areturn

  protected int getReadFrameCount();
    Code:
       0: aload_0
       1: getfield      #12                 // Field readFrameCount:I
       4: ireturn

  protected void markStreamBroken();
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: sipush        128
       7: invokestatic  #27                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: getfield      #11                 // Field lock:Ljava/lang/Object;
      18: dup
      19: astore_1
      20: monitorenter
      21: aload_0
      22: dup
      23: getfield      #9                  // Field state:I
      26: sipush        128
      29: ior
      30: putfield      #9                  // Field state:I
      33: aload_0
      34: getfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      37: astore_2
      38: aload_2
      39: ifnull        57
      42: aload_2
      43: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      48: goto          52
      51: astore_3
      52: aload_0
      53: aconst_null
      54: putfield      #24                 // Field data:Lio/undertow/connector/PooledByteBuffer;
      57: aload_0
      58: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
      61: invokeinterface #97,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      66: astore_3
      67: aload_3
      68: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          100
      76: aload_3
      77: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #67                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData
      85: astore        4
      87: aload         4
      89: getfield      #94                 // Field io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.frameData:Lio/undertow/connector/PooledByteBuffer;
      92: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      97: goto          67
     100: aload_0
     101: getfield      #8                  // Field pendingFrameData:Ljava/util/Deque;
     104: invokeinterface #100,  1          // InterfaceMethod java/util/Deque.clear:()V
     109: aload_0
     110: invokevirtual #101                // Method isReadResumed:()Z
     113: ifeq          121
     116: aload_0
     117: iconst_1
     118: invokevirtual #45                 // Method resumeReadsInternal:(Z)V
     121: aload_0
     122: getfield      #59                 // Field waiters:I
     125: ifle          135
     128: aload_0
     129: getfield      #11                 // Field lock:Ljava/lang/Object;
     132: invokevirtual #70                 // Method java/lang/Object.notifyAll:()V
     135: aload_1
     136: monitorexit
     137: goto          147
     140: astore        5
     142: aload_1
     143: monitorexit
     144: aload         5
     146: athrow
     147: return
    Exception table:
       from    to  target type
          42    48    51   Class java/lang/Throwable
          21   137   140   any
         140   144   140   any
}
