Compiled from "AjpReadListener.java"
final class io.undertow.server.protocol.ajp.AjpReadListener implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  private static final byte[] CPONG;

  private static final byte[] SEND_HEADERS_INTERNAL_SERVER_ERROR_MSG;

  private static final byte[] SEND_HEADERS_BAD_REQUEST_MSG;

  private static final byte[] END_RESPONSE;

  private final io.undertow.server.protocol.ajp.AjpServerConnection connection;

  private final java.lang.String scheme;

  private final boolean recordRequestStartTime;

  private io.undertow.server.protocol.ajp.AjpRequestParseState state;

  private io.undertow.server.HttpServerExchange httpServerExchange;

  private volatile int read;

  private final int maxRequestSize;

  private final long maxEntitySize;

  private final io.undertow.server.protocol.ajp.AjpRequestParser parser;

  private final io.undertow.server.ConnectorStatisticsImpl connectorStatistics;

  private org.xnio.conduits.WriteReadyHandler$ChannelListenerHandler<org.xnio.conduits.ConduitStreamSinkChannel> writeReadyHandler;

  private io.undertow.server.protocol.ParseTimeoutUpdater parseTimeoutUpdater;

  io.undertow.server.protocol.ajp.AjpReadListener(io.undertow.server.protocol.ajp.AjpServerConnection, java.lang.String, io.undertow.server.protocol.ajp.AjpRequestParser, io.undertow.server.ConnectorStatisticsImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/server/protocol/ajp/AjpRequestParseState
       8: dup
       9: invokespecial #3                  // Method io/undertow/server/protocol/ajp/AjpRequestParseState."<init>":()V
      12: putfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field read:I
      20: aload_0
      21: aload_1
      22: putfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
      25: aload_0
      26: aload_2
      27: putfield      #7                  // Field scheme:Ljava/lang/String;
      30: aload_0
      31: aload_3
      32: putfield      #8                  // Field parser:Lio/undertow/server/protocol/ajp/AjpRequestParser;
      35: aload_0
      36: aload         4
      38: putfield      #9                  // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
      41: aload_0
      42: aload_1
      43: invokevirtual #10                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      46: getstatic     #11                 // Field io/undertow/UndertowOptions.MAX_HEADER_SIZE:Lorg/xnio/Option;
      49: ldc           #13                 // int 1048576
      51: invokevirtual #14                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      54: putfield      #15                 // Field maxRequestSize:I
      57: aload_0
      58: aload_1
      59: invokevirtual #10                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      62: getstatic     #16                 // Field io/undertow/UndertowOptions.MAX_ENTITY_SIZE:Lorg/xnio/Option;
      65: ldc2_w        #17                 // long -1l
      68: invokevirtual #19                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;J)J
      71: putfield      #20                 // Field maxEntitySize:J
      74: aload_0
      75: new           #21                 // class org/xnio/conduits/WriteReadyHandler$ChannelListenerHandler
      78: dup
      79: aload_1
      80: invokevirtual #22                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      83: invokevirtual #23                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      86: invokespecial #24                 // Method org/xnio/conduits/WriteReadyHandler$ChannelListenerHandler."<init>":(Lorg/xnio/channels/SuspendableWriteChannel;)V
      89: putfield      #25                 // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler$ChannelListenerHandler;
      92: aload_0
      93: aload_1
      94: invokevirtual #10                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      97: getstatic     #26                 // Field io/undertow/UndertowOptions.RECORD_REQUEST_START_TIME:Lorg/xnio/Option;
     100: iconst_0
     101: invokevirtual #27                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     104: putfield      #28                 // Field recordRequestStartTime:Z
     107: aload_1
     108: invokevirtual #10                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
     111: getstatic     #29                 // Field io/undertow/UndertowOptions.REQUEST_PARSE_TIMEOUT:Lorg/xnio/Option;
     114: iconst_m1
     115: invokevirtual #14                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     118: istore        5
     120: aload_1
     121: invokevirtual #10                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
     124: getstatic     #30                 // Field io/undertow/UndertowOptions.NO_REQUEST_TIMEOUT:Lorg/xnio/Option;
     127: iconst_m1
     128: invokevirtual #14                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     131: istore        6
     133: iload         6
     135: ifge          151
     138: iload         5
     140: ifge          151
     143: aload_0
     144: aconst_null
     145: putfield      #31                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     148: goto          177
     151: aload_0
     152: new           #32                 // class io/undertow/server/protocol/ParseTimeoutUpdater
     155: dup
     156: aload_1
     157: iload         5
     159: i2l
     160: iload         6
     162: i2l
     163: invokespecial #33                 // Method io/undertow/server/protocol/ParseTimeoutUpdater."<init>":(Lorg/xnio/channels/ConnectedChannel;JJ)V
     166: putfield      #31                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     169: aload_1
     170: aload_0
     171: getfield      #31                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     174: invokevirtual #34                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.addCloseListener:(Lio/undertow/server/ServerConnection$CloseListener;)V
     177: return

  public void startRequest();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
       4: invokevirtual #35                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.resetChannel:()Lio/undertow/server/AbstractServerConnection$ConduitState;
       7: pop
       8: aload_0
       9: new           #2                  // class io/undertow/server/protocol/ajp/AjpRequestParseState
      12: dup
      13: invokespecial #3                  // Method io/undertow/server/protocol/ajp/AjpRequestParseState."<init>":()V
      16: putfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field read:I
      24: aload_0
      25: getfield      #31                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
      28: ifnull        38
      31: aload_0
      32: getfield      #31                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
      35: invokevirtual #36                 // Method io/undertow/server/protocol/ParseTimeoutUpdater.connectionIdle:()V
      38: aload_0
      39: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
      42: aconst_null
      43: invokevirtual #37                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.setCurrentExchange:(Lio/undertow/server/HttpServerExchange;)V
      46: return

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
       4: invokevirtual #38                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getOriginalSinkConduit:()Lorg/xnio/conduits/StreamSinkConduit;
       7: invokeinterface #39,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.isWriteShutdown:()Z
      12: ifne          30
      15: aload_0
      16: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
      19: invokevirtual #40                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getOriginalSourceConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      22: invokeinterface #41,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.isReadShutdown:()Z
      27: ifeq          44
      30: aload_0
      31: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
      34: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      37: aload_1
      38: invokeinterface #43,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.suspendReads:()V
      43: return
      44: aload_0
      45: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
      48: invokevirtual #44                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getExtraBytes:()Lio/undertow/connector/PooledByteBuffer;
      51: astore_2
      52: aload_2
      53: ifnonnull     71
      56: aload_0
      57: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
      60: invokevirtual #45                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      63: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      68: goto          72
      71: aload_2
      72: astore_3
      73: aload_3
      74: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      79: astore        4
      81: iconst_1
      82: istore        5
      84: iconst_0
      85: istore        6
      87: aload_2
      88: ifnonnull     110
      91: aload         4
      93: invokevirtual #48                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      96: pop
      97: aload_1
      98: aload         4
     100: invokeinterface #49,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     105: istore        7
     107: goto          117
     110: aload         4
     112: invokevirtual #50                 // Method java/nio/ByteBuffer.remaining:()I
     115: istore        7
     117: iload         7
     119: ifne          180
     122: iload         6
     124: ifeq          141
     127: aload_0
     128: getfield      #31                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     131: ifnull        141
     134: aload_0
     135: getfield      #31                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     138: invokevirtual #51                 // Method io/undertow/server/protocol/ParseTimeoutUpdater.failedParse:()V
     141: aload_1
     142: invokeinterface #52,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.isReadResumed:()Z
     147: ifne          168
     150: aload_1
     151: invokeinterface #53,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     156: aload_0
     157: invokeinterface #54,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     162: aload_1
     163: invokeinterface #55,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
     168: iload         5
     170: ifeq          179
     173: aload_3
     174: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     179: return
     180: iload         7
     182: iconst_m1
     183: if_icmpne     230
     186: aload_1
     187: invokeinterface #57,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
     192: aload_0
     193: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     196: invokevirtual #22                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     199: invokevirtual #23                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     202: astore        8
     204: aload         8
     206: invokeinterface #58,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     211: aload_0
     212: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     215: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     218: iload         5
     220: ifeq          229
     223: aload_3
     224: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     229: return
     230: iconst_1
     231: istore        6
     233: aload_2
     234: ifnull        250
     237: aconst_null
     238: astore_2
     239: aload_0
     240: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     243: aconst_null
     244: invokevirtual #59                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.setExtraBytes:(Lio/undertow/connector/PooledByteBuffer;)V
     247: goto          256
     250: aload         4
     252: invokevirtual #60                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     255: pop
     256: aload         4
     258: invokevirtual #50                 // Method java/nio/ByteBuffer.remaining:()I
     261: istore        8
     263: aload_0
     264: getfield      #61                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     267: ifnonnull     289
     270: aload_0
     271: new           #62                 // class io/undertow/server/HttpServerExchange
     274: dup
     275: aload_0
     276: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     279: aload_0
     280: getfield      #20                 // Field maxEntitySize:J
     283: invokespecial #63                 // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;J)V
     286: putfield      #61                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     289: aload_0
     290: getfield      #8                  // Field parser:Lio/undertow/server/protocol/ajp/AjpRequestParser;
     293: aload         4
     295: aload_0
     296: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     299: aload_0
     300: getfield      #61                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     303: invokevirtual #64                 // Method io/undertow/server/protocol/ajp/AjpRequestParser.parse:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/ajp/AjpRequestParseState;Lio/undertow/server/HttpServerExchange;)V
     306: aload_0
     307: dup
     308: getfield      #5                  // Field read:I
     311: iload         8
     313: aload         4
     315: invokevirtual #50                 // Method java/nio/ByteBuffer.remaining:()I
     318: isub
     319: iadd
     320: putfield      #5                  // Field read:I
     323: aload         4
     325: invokevirtual #65                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     328: ifeq          342
     331: iconst_0
     332: istore        5
     334: aload_0
     335: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     338: aload_3
     339: invokevirtual #59                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.setExtraBytes:(Lio/undertow/connector/PooledByteBuffer;)V
     342: aload_0
     343: getfield      #5                  // Field read:I
     346: aload_0
     347: getfield      #15                 // Field maxRequestSize:I
     350: if_icmple     391
     353: getstatic     #66                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     356: aload_0
     357: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     360: invokevirtual #67                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getPeerAddress:()Ljava/net/SocketAddress;
     363: aload_0
     364: getfield      #15                 // Field maxRequestSize:I
     367: invokeinterface #68,  3           // InterfaceMethod io/undertow/UndertowLogger.requestHeaderWasTooLarge:(Ljava/net/SocketAddress;I)V
     372: aload_0
     373: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     376: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     379: iload         5
     381: ifeq          390
     384: aload_3
     385: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     390: return
     391: aload_0
     392: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     395: invokevirtual #69                 // Method io/undertow/server/protocol/ajp/AjpRequestParseState.isComplete:()Z
     398: ifeq          87
     401: aload_0
     402: getfield      #31                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     405: ifnull        415
     408: aload_0
     409: getfield      #31                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     412: invokevirtual #70                 // Method io/undertow/server/protocol/ParseTimeoutUpdater.requestStarted:()V
     415: aload_0
     416: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     419: getfield      #71                 // Field io/undertow/server/protocol/ajp/AjpRequestParseState.prefix:B
     422: iconst_2
     423: if_icmpeq     543
     426: aload_0
     427: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     430: getfield      #71                 // Field io/undertow/server/protocol/ajp/AjpRequestParseState.prefix:B
     433: bipush        10
     435: if_icmpne     455
     438: getstatic     #66                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     441: ldc           #73                 // String Received CPING, sending CPONG
     443: invokeinterface #74,  2           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;)V
     448: aload_0
     449: invokevirtual #75                 // Method handleCPing:()V
     452: goto          531
     455: aload_0
     456: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     459: getfield      #71                 // Field io/undertow/server/protocol/ajp/AjpRequestParseState.prefix:B
     462: bipush        9
     464: if_icmpne     509
     467: getstatic     #66                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     470: ldc           #76                 // String Received CPONG, starting next request
     472: invokeinterface #74,  2           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;)V
     477: aload_0
     478: new           #2                  // class io/undertow/server/protocol/ajp/AjpRequestParseState
     481: dup
     482: invokespecial #3                  // Method io/undertow/server/protocol/ajp/AjpRequestParseState."<init>":()V
     485: putfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     488: aload_1
     489: invokeinterface #53,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     494: aload_0
     495: invokeinterface #54,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     500: aload_1
     501: invokeinterface #55,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
     506: goto          531
     509: getstatic     #66                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     512: aload_0
     513: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     516: getfield      #71                 // Field io/undertow/server/protocol/ajp/AjpRequestParseState.prefix:B
     519: invokeinterface #77,  2           // InterfaceMethod io/undertow/UndertowLogger.ignoringAjpRequestWithPrefixCode:(B)V
     524: aload_0
     525: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     528: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     531: iload         5
     533: ifeq          542
     536: aload_3
     537: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     542: return
     543: aload_1
     544: invokeinterface #53,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     549: aconst_null
     550: invokeinterface #54,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     555: aload_1
     556: invokeinterface #43,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.suspendReads:()V
     561: aload_0
     562: getfield      #61                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     565: astore        8
     567: new           #78                 // class io/undertow/server/protocol/ajp/AjpServerResponseConduit
     570: dup
     571: aload_0
     572: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     575: invokevirtual #22                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     578: invokevirtual #23                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     581: invokevirtual #79                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     584: aload_0
     585: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     588: invokevirtual #45                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     591: aload         8
     593: new           #80                 // class io/undertow/server/protocol/ajp/AjpReadListener$1
     596: dup
     597: aload_0
     598: aload         8
     600: invokespecial #81                 // Method io/undertow/server/protocol/ajp/AjpReadListener$1."<init>":(Lio/undertow/server/protocol/ajp/AjpReadListener;Lio/undertow/server/HttpServerExchange;)V
     603: aload         8
     605: invokevirtual #82                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
     608: getstatic     #83                 // Field io/undertow/util/Methods.HEAD:Lio/undertow/util/HttpString;
     611: invokevirtual #84                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     614: invokespecial #85                 // Method io/undertow/server/protocol/ajp/AjpServerResponseConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/connector/ByteBufferPool;Lio/undertow/server/HttpServerExchange;Lio/undertow/conduits/ConduitListener;Z)V
     617: astore        9
     619: aload_0
     620: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     623: invokevirtual #22                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     626: invokevirtual #23                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     629: aload         9
     631: invokevirtual #86                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     634: aload_0
     635: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     638: invokevirtual #22                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     641: invokevirtual #87                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     644: aload_0
     645: aload_0
     646: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     649: invokevirtual #22                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     652: invokevirtual #87                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     655: invokevirtual #88                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     658: aload         9
     660: aload         8
     662: invokevirtual #89                 // Method createSourceConduit:(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/server/protocol/ajp/AjpServerResponseConduit;Lio/undertow/server/HttpServerExchange;)Lorg/xnio/conduits/StreamSourceConduit;
     665: invokevirtual #90                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     668: aload         9
     670: aload_0
     671: getfield      #25                 // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler$ChannelListenerHandler;
     674: invokevirtual #91                 // Method io/undertow/server/protocol/ajp/AjpServerResponseConduit.setWriteReadyHandler:(Lorg/xnio/conduits/WriteReadyHandler;)V
     677: aload_0
     678: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     681: aload_0
     682: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     685: invokevirtual #92                 // Method io/undertow/server/protocol/ajp/AjpRequestParseState.createSslSessionInfo:()Lio/undertow/server/BasicSSLSessionInfo;
     688: invokevirtual #93                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.setSSLSessionInfo:(Lio/undertow/server/BasicSSLSessionInfo;)V
     691: aload         8
     693: aload_0
     694: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     697: invokevirtual #94                 // Method io/undertow/server/protocol/ajp/AjpRequestParseState.createPeerAddress:()Ljava/net/InetSocketAddress;
     700: invokevirtual #95                 // Method io/undertow/server/HttpServerExchange.setSourceAddress:(Ljava/net/InetSocketAddress;)Lio/undertow/server/HttpServerExchange;
     703: pop
     704: aload         8
     706: aload_0
     707: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     710: invokevirtual #96                 // Method io/undertow/server/protocol/ajp/AjpRequestParseState.createDestinationAddress:()Ljava/net/InetSocketAddress;
     713: invokevirtual #97                 // Method io/undertow/server/HttpServerExchange.setDestinationAddress:(Ljava/net/InetSocketAddress;)Lio/undertow/server/HttpServerExchange;
     716: pop
     717: aload_0
     718: getfield      #7                  // Field scheme:Ljava/lang/String;
     721: ifnull        734
     724: aload         8
     726: aload_0
     727: getfield      #7                  // Field scheme:Ljava/lang/String;
     730: invokevirtual #98                 // Method io/undertow/server/HttpServerExchange.setRequestScheme:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     733: pop
     734: aload_0
     735: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     738: getfield      #99                 // Field io/undertow/server/protocol/ajp/AjpRequestParseState.attributes:Ljava/util/Map;
     741: ifnull        760
     744: aload         8
     746: getstatic     #100                // Field io/undertow/server/HttpServerExchange.REQUEST_ATTRIBUTES:Lio/undertow/util/AttachmentKey;
     749: aload_0
     750: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     753: getfield      #99                 // Field io/undertow/server/protocol/ajp/AjpRequestParseState.attributes:Ljava/util/Map;
     756: invokevirtual #101                // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
     759: pop
     760: aload_0
     761: getfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     764: astore        10
     766: aload_0
     767: aconst_null
     768: putfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
     771: aload_0
     772: aconst_null
     773: putfield      #61                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     776: aload         8
     778: iconst_1
     779: invokevirtual #102                // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
     782: pop
     783: aload_0
     784: getfield      #28                 // Field recordRequestStartTime:Z
     787: ifeq          795
     790: aload         8
     792: invokestatic  #103                // Method io/undertow/server/Connectors.setRequestStartTime:(Lio/undertow/server/HttpServerExchange;)V
     795: aload_0
     796: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     799: aload         8
     801: invokevirtual #37                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.setCurrentExchange:(Lio/undertow/server/HttpServerExchange;)V
     804: aload_0
     805: getfield      #9                  // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     808: ifnull        820
     811: aload_0
     812: getfield      #9                  // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     815: aload         8
     817: invokevirtual #104                // Method io/undertow/server/ConnectorStatisticsImpl.setup:(Lio/undertow/server/HttpServerExchange;)V
     820: aload         8
     822: invokevirtual #105                // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     825: invokestatic  #106                // Method io/undertow/server/Connectors.areRequestHeadersValid:(Lio/undertow/util/HeaderMap;)Z
     828: ifne          854
     831: aload         10
     833: iconst_1
     834: putfield      #107                // Field io/undertow/server/protocol/ajp/AjpRequestParseState.badRequest:Z
     837: getstatic     #108                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     840: ldc           #109                // String Invalid AJP request from %s, request contained invalid headers
     842: aload_0
     843: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     846: invokevirtual #67                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getPeerAddress:()Ljava/net/SocketAddress;
     849: invokeinterface #110,  3          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     854: aload         10
     856: getfield      #107                // Field io/undertow/server/protocol/ajp/AjpRequestParseState.badRequest:Z
     859: ifeq          887
     862: aload         8
     864: sipush        400
     867: invokevirtual #112                // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
     870: pop
     871: aload         8
     873: invokevirtual #113                // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
     876: pop
     877: aload_0
     878: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     881: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     884: goto          899
     887: aload_0
     888: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     891: invokevirtual #114                // Method io/undertow/server/protocol/ajp/AjpServerConnection.getRootHandler:()Lio/undertow/server/HttpHandler;
     894: aload         8
     896: invokestatic  #115                // Method io/undertow/server/Connectors.executeRootHandler:(Lio/undertow/server/HttpHandler;Lio/undertow/server/HttpServerExchange;)V
     899: iload         5
     901: ifeq          1040
     904: aload_3
     905: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     910: goto          1040
     913: astore        7
     915: getstatic     #108                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     918: aload         7
     920: invokeinterface #117,  2          // InterfaceMethod io/undertow/UndertowLogger.failedToParseRequest:(Ljava/lang/Throwable;)V
     925: aload_0
     926: invokevirtual #118                // Method handleBadRequest:()V
     929: aload_0
     930: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     933: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     936: iload         5
     938: ifeq          1040
     941: aload_3
     942: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     947: goto          1040
     950: astore        7
     952: getstatic     #108                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     955: aload         7
     957: invokeinterface #120,  2          // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     962: aload_0
     963: invokevirtual #121                // Method handleInternalServerError:()V
     966: aload_0
     967: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     970: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     973: iload         5
     975: ifeq          1040
     978: aload_3
     979: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     984: goto          1040
     987: astore        7
     989: getstatic     #66                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     992: aload         7
     994: invokeinterface #123,  2          // InterfaceMethod io/undertow/UndertowLogger.exceptionProcessingRequest:(Ljava/lang/Throwable;)V
     999: aload_0
    1000: invokevirtual #121                // Method handleInternalServerError:()V
    1003: aload_0
    1004: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
    1007: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
    1010: iload         5
    1012: ifeq          1040
    1015: aload_3
    1016: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1021: goto          1040
    1024: astore        11
    1026: iload         5
    1028: ifeq          1037
    1031: aload_3
    1032: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1037: aload         11
    1039: athrow
    1040: return
    Exception table:
       from    to  target type
          87   168   913   Class io/undertow/util/BadRequestException
         180   218   913   Class io/undertow/util/BadRequestException
         230   379   913   Class io/undertow/util/BadRequestException
         391   531   913   Class io/undertow/util/BadRequestException
         543   899   913   Class io/undertow/util/BadRequestException
          87   168   950   Class java/io/IOException
         180   218   950   Class java/io/IOException
         230   379   950   Class java/io/IOException
         391   531   950   Class java/io/IOException
         543   899   950   Class java/io/IOException
          87   168   987   Class java/lang/Throwable
         180   218   987   Class java/lang/Throwable
         230   379   987   Class java/lang/Throwable
         391   531   987   Class java/lang/Throwable
         543   899   987   Class java/lang/Throwable
          87   168  1024   any
         180   218  1024   any
         230   379  1024   any
         391   531  1024   any
         543   899  1024   any
         913   936  1024   any
         950   973  1024   any
         987  1010  1024   any
        1024  1026  1024   any

  private void handleInternalServerError();
    Code:
       0: aload_0
       1: iconst_2
       2: anewarray     #124                // class "[B"
       5: dup
       6: iconst_0
       7: getstatic     #125                // Field SEND_HEADERS_INTERNAL_SERVER_ERROR_MSG:[B
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #126                // Field END_RESPONSE:[B
      16: aastore
      17: invokevirtual #127                // Method sendMessages:([[B)Z
      20: pop
      21: return

  private void handleBadRequest();
    Code:
       0: aload_0
       1: iconst_2
       2: anewarray     #124                // class "[B"
       5: dup
       6: iconst_0
       7: getstatic     #128                // Field SEND_HEADERS_BAD_REQUEST_MSG:[B
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #126                // Field END_RESPONSE:[B
      16: aastore
      17: invokevirtual #127                // Method sendMessages:([[B)Z
      20: pop
      21: return

  private void handleCPing();
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #124                // class "[B"
       5: dup
       6: iconst_0
       7: getstatic     #129                // Field CPONG:[B
      10: aastore
      11: invokevirtual #127                // Method sendMessages:([[B)Z
      14: ifeq          31
      17: aload_0
      18: aload_0
      19: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
      22: invokevirtual #22                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      25: invokevirtual #87                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      28: invokevirtual #130                // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
      31: return

  private boolean sendMessages(byte[]...);
    Code:
       0: aload_0
       1: new           #2                  // class io/undertow/server/protocol/ajp/AjpRequestParseState
       4: dup
       5: invokespecial #3                  // Method io/undertow/server/protocol/ajp/AjpRequestParseState."<init>":()V
       8: putfield      #4                  // Field state:Lio/undertow/server/protocol/ajp/AjpRequestParseState;
      11: aload_0
      12: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
      15: invokevirtual #22                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      18: astore_2
      19: aload_2
      20: invokevirtual #87                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      23: invokevirtual #131                // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      26: iconst_0
      27: istore_3
      28: iconst_0
      29: istore        4
      31: iload         4
      33: aload_1
      34: arraylength
      35: if_icmpge     52
      38: iload_3
      39: aload_1
      40: iload         4
      42: aaload
      43: arraylength
      44: iadd
      45: istore_3
      46: iinc          4, 1
      49: goto          31
      52: iload_3
      53: invokestatic  #132                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      56: astore        4
      58: iconst_0
      59: istore        5
      61: iload         5
      63: aload_1
      64: arraylength
      65: if_icmpge     84
      68: aload         4
      70: aload_1
      71: iload         5
      73: aaload
      74: invokevirtual #133                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      77: pop
      78: iinc          5, 1
      81: goto          61
      84: aload         4
      86: invokevirtual #60                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      89: pop
      90: aload_2
      91: invokevirtual #23                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      94: aload         4
      96: invokevirtual #134                // Method org/xnio/conduits/ConduitStreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      99: istore        5
     101: iload         5
     103: ifne          133
     106: aload_2
     107: invokevirtual #23                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     110: new           #135                // class io/undertow/server/protocol/ajp/AjpReadListener$2
     113: dup
     114: aload_0
     115: aload         4
     117: aload_2
     118: invokespecial #136                // Method io/undertow/server/protocol/ajp/AjpReadListener$2."<init>":(Lio/undertow/server/protocol/ajp/AjpReadListener;Ljava/nio/ByteBuffer;Lorg/xnio/StreamConnection;)V
     121: invokevirtual #137                // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
     124: aload_2
     125: invokevirtual #23                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     128: invokevirtual #138                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     131: iconst_0
     132: ireturn
     133: aload         4
     135: invokevirtual #65                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     138: ifne          90
     141: iconst_1
     142: ireturn
     143: astore        6
     145: getstatic     #108                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     148: aload         6
     150: invokeinterface #120,  2          // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     155: aload_0
     156: getfield      #6                  // Field connection:Lio/undertow/server/protocol/ajp/AjpServerConnection;
     159: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     162: iconst_0
     163: ireturn
    Exception table:
       from    to  target type
          90   132   143   Class java/io/IOException
         133   142   143   Class java/io/IOException

  public void exchangeComplete(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #139                // Method io/undertow/server/HttpServerExchange.isUpgrade:()Z
       4: ifne          49
       7: aload_1
       8: invokevirtual #140                // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
      11: ifeq          49
      14: aload_0
      15: invokevirtual #141                // Method startRequest:()V
      18: aload_1
      19: invokevirtual #142                // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      22: checkcast     #143                // class io/undertow/server/protocol/ajp/AjpServerConnection
      25: invokevirtual #22                 // Method io/undertow/server/protocol/ajp/AjpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      28: invokevirtual #87                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      31: astore_2
      32: aload_2
      33: invokevirtual #144                // Method org/xnio/conduits/ConduitStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      36: aload_0
      37: invokeinterface #54,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      42: aload_2
      43: invokevirtual #145                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
      46: goto          63
      49: aload_1
      50: invokevirtual #140                // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
      53: ifne          63
      56: aload_1
      57: invokevirtual #142                // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      60: invokestatic  #42                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      63: return

  private org.xnio.conduits.StreamSourceConduit createSourceConduit(org.xnio.conduits.StreamSourceConduit, io.undertow.server.protocol.ajp.AjpServerResponseConduit, io.undertow.server.HttpServerExchange) throws io.undertow.util.BadRequestException;
    Code:
       0: new           #146                // class io/undertow/conduits/ReadDataStreamSourceConduit
       3: dup
       4: aload_1
       5: aload_3
       6: invokevirtual #142                // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       9: checkcast     #147                // class io/undertow/server/AbstractServerConnection
      12: invokespecial #148                // Method io/undertow/conduits/ReadDataStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/server/AbstractServerConnection;)V
      15: astore        4
      17: aload_3
      18: invokevirtual #105                // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      21: astore        5
      23: getstatic     #149                // Field io/undertow/util/Headers.IDENTITY:Lio/undertow/util/HttpString;
      26: astore        6
      28: aload         5
      30: getstatic     #150                // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      33: invokevirtual #151                // Method io/undertow/util/HeaderMap.getLast:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      36: astore        8
      38: aload         8
      40: ifnull        47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: istore        9
      50: iload         9
      52: ifeq          66
      55: new           #152                // class io/undertow/util/HttpString
      58: dup
      59: aload         8
      61: invokespecial #153                // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      64: astore        6
      66: aload         5
      68: getstatic     #154                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      71: invokevirtual #155                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      74: astore        10
      76: iload         9
      78: ifeq          98
      81: aload         6
      83: getstatic     #149                // Field io/undertow/util/Headers.IDENTITY:Lio/undertow/util/HttpString;
      86: invokevirtual #84                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      89: ifne          98
      92: aconst_null
      93: astore        7
      95: goto          198
      98: aload         10
     100: ifnull        171
     103: aload         10
     105: invokestatic  #156                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     108: lstore        11
     110: lload         11
     112: lconst_0
     113: lcmp
     114: ifne          147
     117: getstatic     #66                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     120: ldc           #157                // String No content, starting next request
     122: invokeinterface #158,  2          // InterfaceMethod io/undertow/UndertowLogger.trace:(Ljava/lang/Object;)V
     127: aload_0
     128: getfield      #61                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     131: invokestatic  #159                // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
     134: new           #160                // class io/undertow/conduits/EmptyStreamSourceConduit
     137: dup
     138: aload         4
     140: invokevirtual #161                // Method io/undertow/conduits/ReadDataStreamSourceConduit.getReadThread:()Lorg/xnio/XnioIoThread;
     143: invokespecial #162                // Method io/undertow/conduits/EmptyStreamSourceConduit."<init>":(Lorg/xnio/XnioIoThread;)V
     146: areturn
     147: lload         11
     149: invokestatic  #163                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     152: astore        7
     154: goto          198
     157: astore        11
     159: new           #116                // class io/undertow/util/BadRequestException
     162: dup
     163: ldc           #165                // String Invalid Content-Length header
     165: aload         11
     167: invokespecial #166                // Method io/undertow/util/BadRequestException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     170: athrow
     171: getstatic     #66                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     174: ldc           #167                // String No content length or transfer coding, starting next request
     176: invokeinterface #158,  2          // InterfaceMethod io/undertow/UndertowLogger.trace:(Ljava/lang/Object;)V
     181: aload_3
     182: invokestatic  #159                // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
     185: new           #160                // class io/undertow/conduits/EmptyStreamSourceConduit
     188: dup
     189: aload         4
     191: invokevirtual #161                // Method io/undertow/conduits/ReadDataStreamSourceConduit.getReadThread:()Lorg/xnio/XnioIoThread;
     194: invokespecial #162                // Method io/undertow/conduits/EmptyStreamSourceConduit."<init>":(Lorg/xnio/XnioIoThread;)V
     197: areturn
     198: new           #168                // class io/undertow/server/protocol/ajp/AjpServerRequestConduit
     201: dup
     202: aload         4
     204: aload_3
     205: aload_2
     206: aload         7
     208: new           #169                // class io/undertow/server/protocol/ajp/AjpReadListener$3
     211: dup
     212: aload_0
     213: aload_3
     214: invokespecial #170                // Method io/undertow/server/protocol/ajp/AjpReadListener$3."<init>":(Lio/undertow/server/protocol/ajp/AjpReadListener;Lio/undertow/server/HttpServerExchange;)V
     217: invokespecial #171                // Method io/undertow/server/protocol/ajp/AjpServerRequestConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/protocol/ajp/AjpServerResponseConduit;Ljava/lang/Long;Lio/undertow/conduits/ConduitListener;)V
     220: areturn
    Exception table:
       from    to  target type
         103   146   157   Class java/lang/NumberFormatException
         147   154   157   Class java/lang/NumberFormatException

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #172                // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #130                // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return

  static {};
    Code:
       0: iconst_5
       1: newarray       byte
       3: dup
       4: iconst_0
       5: bipush        65
       7: bastore
       8: dup
       9: iconst_1
      10: bipush        66
      12: bastore
      13: dup
      14: iconst_2
      15: iconst_0
      16: bastore
      17: dup
      18: iconst_3
      19: iconst_1
      20: bastore
      21: dup
      22: iconst_4
      23: bipush        9
      25: bastore
      26: putstatic     #129                // Field CPONG:[B
      29: bipush        12
      31: newarray       byte
      33: dup
      34: iconst_0
      35: bipush        65
      37: bastore
      38: dup
      39: iconst_1
      40: bipush        66
      42: bastore
      43: dup
      44: iconst_2
      45: iconst_0
      46: bastore
      47: dup
      48: iconst_3
      49: bipush        8
      51: bastore
      52: dup
      53: iconst_4
      54: iconst_4
      55: bastore
      56: dup
      57: iconst_5
      58: iconst_1
      59: bastore
      60: dup
      61: bipush        6
      63: bipush        -12
      65: bastore
      66: dup
      67: bipush        7
      69: iconst_0
      70: bastore
      71: dup
      72: bipush        8
      74: iconst_0
      75: bastore
      76: dup
      77: bipush        9
      79: iconst_0
      80: bastore
      81: dup
      82: bipush        10
      84: iconst_0
      85: bastore
      86: dup
      87: bipush        11
      89: iconst_0
      90: bastore
      91: putstatic     #125                // Field SEND_HEADERS_INTERNAL_SERVER_ERROR_MSG:[B
      94: bipush        12
      96: newarray       byte
      98: dup
      99: iconst_0
     100: bipush        65
     102: bastore
     103: dup
     104: iconst_1
     105: bipush        66
     107: bastore
     108: dup
     109: iconst_2
     110: iconst_0
     111: bastore
     112: dup
     113: iconst_3
     114: bipush        8
     116: bastore
     117: dup
     118: iconst_4
     119: iconst_4
     120: bastore
     121: dup
     122: iconst_5
     123: iconst_1
     124: bastore
     125: dup
     126: bipush        6
     128: bipush        -112
     130: bastore
     131: dup
     132: bipush        7
     134: iconst_0
     135: bastore
     136: dup
     137: bipush        8
     139: iconst_0
     140: bastore
     141: dup
     142: bipush        9
     144: iconst_0
     145: bastore
     146: dup
     147: bipush        10
     149: iconst_0
     150: bastore
     151: dup
     152: bipush        11
     154: iconst_0
     155: bastore
     156: putstatic     #128                // Field SEND_HEADERS_BAD_REQUEST_MSG:[B
     159: bipush        6
     161: newarray       byte
     163: dup
     164: iconst_0
     165: bipush        65
     167: bastore
     168: dup
     169: iconst_1
     170: bipush        66
     172: bastore
     173: dup
     174: iconst_2
     175: iconst_0
     176: bastore
     177: dup
     178: iconst_3
     179: iconst_2
     180: bastore
     181: dup
     182: iconst_4
     183: iconst_5
     184: bastore
     185: dup
     186: iconst_5
     187: iconst_0
     188: bastore
     189: putstatic     #126                // Field END_RESPONSE:[B
     192: return
}
