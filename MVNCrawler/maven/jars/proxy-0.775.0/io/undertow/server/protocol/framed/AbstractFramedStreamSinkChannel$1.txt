Compiled from "AbstractFramedStreamSinkChannel.java"
class io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel$1 implements java.lang.Runnable {
  int loopCount;

  final io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel this$0;

  io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel$1(io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field loopCount:I
      14: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
       4: invokevirtual #5                  // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getWriteListener:()Lorg/xnio/ChannelListener;
       7: astore_1
       8: aload_1
       9: ifnull        22
      12: aload_0
      13: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      16: invokevirtual #6                  // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isWriteResumed:()Z
      19: ifne          34
      22: getstatic     #7                  // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      25: aload_0
      26: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      29: iconst_0
      30: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      33: return
      34: aload_0
      35: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      38: getfield      #9                  // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.writeSucceeded:Z
      41: ifeq          60
      44: aload_0
      45: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      48: iconst_0
      49: putfield      #9                  // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.writeSucceeded:Z
      52: aload_0
      53: iconst_0
      54: putfield      #4                  // Field loopCount:I
      57: goto          103
      60: aload_0
      61: dup
      62: getfield      #4                  // Field loopCount:I
      65: dup_x1
      66: iconst_1
      67: iadd
      68: putfield      #4                  // Field loopCount:I
      71: bipush        100
      73: if_icmpne     103
      76: getstatic     #10                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      79: invokeinterface #11,  1           // InterfaceMethod io/undertow/UndertowLogger.listenerNotProgressing:()V
      84: aload_0
      85: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      88: invokestatic  #12                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      91: getstatic     #7                  // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      94: aload_0
      95: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      98: iconst_0
      99: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     102: return
     103: aload_0
     104: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     107: aload_1
     108: invokestatic  #13                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     111: pop
     112: getstatic     #7                  // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     115: aload_0
     116: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     119: iconst_0
     120: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     123: goto          140
     126: astore_2
     127: getstatic     #7                  // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     130: aload_0
     131: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     134: iconst_0
     135: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     138: aload_2
     139: athrow
     140: aload_0
     141: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     144: getfield      #14                 // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.writesResumed:Z
     147: ifeq          220
     150: aload_0
     151: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     154: getfield      #15                 // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.state:I
     157: iconst_1
     158: invokestatic  #16                 // Method org/xnio/Bits.allAreClear:(II)Z
     161: ifeq          220
     164: aload_0
     165: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     168: getfield      #17                 // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.broken:Z
     171: ifne          220
     174: aload_0
     175: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     178: getfield      #18                 // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.readyForFlush:Z
     181: ifne          220
     184: aload_0
     185: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     188: getfield      #19                 // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.fullyFlushed:Z
     191: ifne          220
     194: getstatic     #7                  // Field io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     197: aload_0
     198: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     201: iconst_0
     202: iconst_1
     203: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     206: ifeq          220
     209: aload_0
     210: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     213: invokevirtual #21                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
     216: aload_0
     217: invokevirtual #22                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
     220: return
    Exception table:
       from    to  target type
           0    22   126   any
          34    91   126   any
         103   112   126   any
}
