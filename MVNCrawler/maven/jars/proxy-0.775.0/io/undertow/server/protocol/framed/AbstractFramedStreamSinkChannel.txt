Compiled from "AbstractFramedStreamSinkChannel.java"
public abstract class io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel<C extends io.undertow.server.protocol.framed.AbstractFramedChannel<C, R, S>, R extends io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>, S extends io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel<C, R, S>> implements org.xnio.channels.StreamSinkChannel {
  private static final int AWAIT_WRITABLE_TIMEOUT;

  private static final int FUZZ_FACTOR;

  private static final io.undertow.connector.PooledByteBuffer EMPTY_BYTE_BUFFER;

  private final C channel;

  private final org.xnio.ChannelListener$SimpleSetter<S> writeSetter;

  private final org.xnio.ChannelListener$SimpleSetter<S> closeSetter;

  private final java.lang.Object lock;

  private volatile org.xnio.XnioExecutor$Key handle;

  private volatile long flushExpirationTime;

  private final io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel$TimeoutRunnable timeoutRunnable;

  private volatile int state;

  private volatile boolean readyForFlush;

  private volatile boolean fullyFlushed;

  private volatile boolean finalFrameQueued;

  private volatile boolean broken;

  private volatile int waiterCount;

  private volatile io.undertow.server.protocol.framed.SendFrameHeader header;

  private volatile io.undertow.connector.PooledByteBuffer writeBuffer;

  private volatile io.undertow.connector.PooledByteBuffer body;

  private static final int STATE_CLOSED;

  private static final int STATE_WRITES_SHUTDOWN;

  private static final int STATE_FIRST_DATA_WRITTEN;

  private static final int STATE_PRE_WRITE_CALLED;

  private volatile boolean bufferFull;

  private volatile boolean writesResumed;

  private volatile int inListenerLoop;

  private volatile boolean writeSucceeded;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel> inListenerLoopUpdater;

  protected io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel(C);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/xnio/ChannelListener$SimpleSetter
       8: dup
       9: invokespecial #3                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      12: putfield      #4                  // Field writeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      15: aload_0
      16: new           #2                  // class org/xnio/ChannelListener$SimpleSetter
      19: dup
      20: invokespecial #3                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      23: putfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      26: aload_0
      27: new           #6                  // class java/lang/Object
      30: dup
      31: invokespecial #1                  // Method java/lang/Object."<init>":()V
      34: putfield      #7                  // Field lock:Ljava/lang/Object;
      37: aload_0
      38: aconst_null
      39: putfield      #8                  // Field handle:Lorg/xnio/XnioExecutor$Key;
      42: aload_0
      43: ldc2_w        #9                  // long -1l
      46: putfield      #11                 // Field flushExpirationTime:J
      49: aload_0
      50: iconst_0
      51: putfield      #12                 // Field state:I
      54: aload_0
      55: iconst_0
      56: putfield      #13                 // Field waiterCount:I
      59: aload_0
      60: aload_1
      61: putfield      #14                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      64: aload_0
      65: new           #15                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel$TimeoutRunnable
      68: dup
      69: aload_0
      70: invokespecial #16                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel$TimeoutRunnable."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)V
      73: putfield      #17                 // Field timeoutRunnable:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel$TimeoutRunnable;
      76: return

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: lload         4
       4: aload_0
       5: invokevirtual #18                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
       8: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: aload         4
       4: aload_0
       5: invokestatic  #19                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
       8: lreturn

  public void suspendWrites();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #20                 // Field writesResumed:Z
       5: return

  final io.undertow.server.protocol.framed.SendFrameHeader getFrameHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       4: ifnonnull     35
       7: aload_0
       8: aload_0
       9: invokevirtual #22                 // Method createFrameHeader:()Lio/undertow/server/protocol/framed/SendFrameHeader;
      12: putfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      15: aload_0
      16: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      19: ifnonnull     35
      22: aload_0
      23: new           #23                 // class io/undertow/server/protocol/framed/SendFrameHeader
      26: dup
      27: iconst_0
      28: aconst_null
      29: invokespecial #24                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;)V
      32: putfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      35: aload_0
      36: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      39: areturn

  protected io.undertow.server.protocol.framed.SendFrameHeader createFrameHeader() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  final void preWrite();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #12                 // Field state:I
      11: bipush        8
      13: invokestatic  #26                 // Method org/xnio/Bits.allAreClear:(II)Z
      16: ifeq          42
      19: aload_0
      20: dup
      21: getfield      #12                 // Field state:I
      24: bipush        8
      26: ior
      27: putfield      #12                 // Field state:I
      30: aload_0
      31: aload_0
      32: aload_0
      33: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      36: invokevirtual #28                 // Method preWriteTransform:(Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
      39: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      42: aload_1
      43: monitorexit
      44: goto          52
      47: astore_2
      48: aload_1
      49: monitorexit
      50: aload_2
      51: athrow
      52: return
    Exception table:
       from    to  target type
           7    44    47   any
          47    50    47   any

  protected io.undertow.connector.PooledByteBuffer preWriteTransform(io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_1
       1: areturn

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #20                 // Field writesResumed:Z
       4: ireturn

  public void wakeupWrites();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #29                 // Method resumeWritesInternal:(Z)V
       5: return

  public void resumeWrites();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #29                 // Method resumeWritesInternal:(Z)V
       5: return

  protected void resumeWritesInternal(boolean);
    Code:
       0: aload_0
       1: getfield      #20                 // Field writesResumed:Z
       4: istore_2
       5: iload_1
       6: ifne          14
       9: iload_2
      10: ifeq          14
      13: return
      14: aload_0
      15: iconst_1
      16: putfield      #20                 // Field writesResumed:Z
      19: aload_0
      20: getfield      #30                 // Field readyForFlush:Z
      23: ifeq          31
      26: iload_1
      27: ifne          31
      30: return
      31: getstatic     #31                 // Field inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      34: aload_0
      35: iconst_0
      36: iconst_1
      37: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      40: ifeq          58
      43: aload_0
      44: invokevirtual #33                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      47: new           #34                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel$1
      50: dup
      51: aload_0
      52: invokespecial #35                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel$1."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)V
      55: invokevirtual #36                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.runInIoThread:(Ljava/lang/Runnable;)V
      58: return

  public void shutdownWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method queueFinalFrame:()V
       4: aload_0
       5: getfield      #7                  // Field lock:Ljava/lang/Object;
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #12                 // Field state:I
      15: iconst_2
      16: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
      19: ifne          29
      22: aload_0
      23: getfield      #39                 // Field broken:Z
      26: ifeq          32
      29: aload_1
      30: monitorexit
      31: return
      32: aload_0
      33: dup
      34: getfield      #12                 // Field state:I
      37: iconst_2
      38: ior
      39: putfield      #12                 // Field state:I
      42: aload_1
      43: monitorexit
      44: goto          52
      47: astore_2
      48: aload_1
      49: monitorexit
      50: aload_2
      51: athrow
      52: return
    Exception table:
       from    to  target type
          11    31    47   any
          32    44    47   any
          47    50    47   any

  private void queueFinalFrame() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #30                 // Field readyForFlush:Z
      11: ifne          117
      14: aload_0
      15: getfield      #40                 // Field fullyFlushed:Z
      18: ifne          117
      21: aload_0
      22: getfield      #12                 // Field state:I
      25: iconst_1
      26: invokestatic  #26                 // Method org/xnio/Bits.allAreClear:(II)Z
      29: ifeq          117
      32: aload_0
      33: getfield      #39                 // Field broken:Z
      36: ifne          117
      39: aload_0
      40: getfield      #41                 // Field finalFrameQueued:Z
      43: ifne          117
      46: aconst_null
      47: aload_0
      48: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      51: if_acmpne     69
      54: aconst_null
      55: aload_0
      56: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      59: if_acmpeq     69
      62: aload_0
      63: invokevirtual #43                 // Method sendWriteBuffer:()V
      66: goto          84
      69: aconst_null
      70: aload_0
      71: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      74: if_acmpne     84
      77: aload_0
      78: getstatic     #44                 // Field EMPTY_BYTE_BUFFER:Lio/undertow/connector/PooledByteBuffer;
      81: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      84: aload_0
      85: iconst_1
      86: putfield      #30                 // Field readyForFlush:Z
      89: aload_0
      90: dup
      91: getfield      #12                 // Field state:I
      94: iconst_4
      95: ior
      96: putfield      #12                 // Field state:I
      99: aload_0
     100: dup
     101: getfield      #12                 // Field state:I
     104: iconst_2
     105: ior
     106: putfield      #12                 // Field state:I
     109: aload_0
     110: iconst_1
     111: putfield      #41                 // Field finalFrameQueued:Z
     114: goto          120
     117: aload_1
     118: monitorexit
     119: return
     120: aload_1
     121: monitorexit
     122: goto          130
     125: astore_2
     126: aload_1
     127: monitorexit
     128: aload_2
     129: athrow
     130: aload_0
     131: getfield      #14                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     134: aload_0
     135: invokevirtual #45                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.queueFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)V
     138: return
    Exception table:
       from    to  target type
           7   119   125   any
         120   122   125   any
         125   128   125   any

  protected boolean isFinalFrameQueued();
    Code:
       0: aload_0
       1: getfield      #41                 // Field finalFrameQueued:Z
       4: ireturn

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #46                 // Method getAwaitWritableTimeout:()J
       5: getstatic     #47                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #48                 // Method awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #49                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: invokevirtual #50                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       7: if_acmpne     19
      10: getstatic     #51                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #52,  1           // InterfaceMethod io/undertow/UndertowMessages.awaitCalledFromIoThread:()Ljava/io/IOException;
      18: athrow
      19: aload_0
      20: getfield      #7                  // Field lock:Ljava/lang/Object;
      23: dup
      24: astore        4
      26: monitorenter
      27: aload_0
      28: getfield      #12                 // Field state:I
      31: iconst_1
      32: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
      35: ifne          45
      38: aload_0
      39: getfield      #39                 // Field broken:Z
      42: ifeq          49
      45: aload         4
      47: monitorexit
      48: return
      49: aload_0
      50: getfield      #30                 // Field readyForFlush:Z
      53: ifeq          147
      56: aload_0
      57: dup
      58: getfield      #13                 // Field waiterCount:I
      61: iconst_1
      62: iadd
      63: putfield      #13                 // Field waiterCount:I
      66: aload_0
      67: getfield      #30                 // Field readyForFlush:Z
      70: ifeq          103
      73: aload_0
      74: getfield      #12                 // Field state:I
      77: iconst_1
      78: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
      81: ifne          103
      84: aload_0
      85: getfield      #39                 // Field broken:Z
      88: ifne          103
      91: aload_0
      92: getfield      #7                  // Field lock:Ljava/lang/Object;
      95: aload_3
      96: lload_1
      97: invokevirtual #53                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     100: invokevirtual #54                 // Method java/lang/Object.wait:(J)V
     103: aload_0
     104: dup
     105: getfield      #13                 // Field waiterCount:I
     108: iconst_1
     109: isub
     110: putfield      #13                 // Field waiterCount:I
     113: goto          147
     116: astore        5
     118: invokestatic  #49                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     121: invokevirtual #56                 // Method java/lang/Thread.interrupt:()V
     124: new           #57                 // class java/io/InterruptedIOException
     127: dup
     128: invokespecial #58                 // Method java/io/InterruptedIOException."<init>":()V
     131: athrow
     132: astore        6
     134: aload_0
     135: dup
     136: getfield      #13                 // Field waiterCount:I
     139: iconst_1
     140: isub
     141: putfield      #13                 // Field waiterCount:I
     144: aload         6
     146: athrow
     147: aload         4
     149: monitorexit
     150: goto          161
     153: astore        7
     155: aload         4
     157: monitorexit
     158: aload         7
     160: athrow
     161: return
    Exception table:
       from    to  target type
          56   103   116   Class java/lang/InterruptedException
          56   103   132   any
         116   134   132   any
          27    48   153   any
          49   150   153   any
         153   158   153   any

  public org.xnio.XnioExecutor getWriteThread();
    Code:
       0: aload_0
       1: getfield      #14                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #59                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public org.xnio.ChannelListener$Setter<? extends S> getWriteSetter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field writeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public org.xnio.ChannelListener$Setter<? extends S> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #14                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #60                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #14                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #59                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: iconst_1
       5: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: getfield      #39                 // Field broken:Z
      17: ifeq          29
      20: getstatic     #51                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      23: invokeinterface #61,  1           // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      28: athrow
      29: aload_0
      30: getfield      #30                 // Field readyForFlush:Z
      33: ifeq          38
      36: iconst_0
      37: ireturn
      38: aload_0
      39: getfield      #7                  // Field lock:Ljava/lang/Object;
      42: dup
      43: astore_1
      44: monitorenter
      45: aload_0
      46: getfield      #40                 // Field fullyFlushed:Z
      49: ifeq          66
      52: aload_0
      53: dup
      54: getfield      #12                 // Field state:I
      57: iconst_1
      58: ior
      59: putfield      #12                 // Field state:I
      62: iconst_1
      63: aload_1
      64: monitorexit
      65: ireturn
      66: aload_1
      67: monitorexit
      68: goto          76
      71: astore_2
      72: aload_1
      73: monitorexit
      74: aload_2
      75: athrow
      76: aload_0
      77: getfield      #12                 // Field state:I
      80: iconst_2
      81: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
      84: ifeq          100
      87: aload_0
      88: getfield      #41                 // Field finalFrameQueued:Z
      91: ifne          100
      94: aload_0
      95: invokevirtual #37                 // Method queueFinalFrame:()V
      98: iconst_0
      99: ireturn
     100: aload_0
     101: getfield      #12                 // Field state:I
     104: iconst_2
     105: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
     108: ifeq          113
     111: iconst_0
     112: ireturn
     113: aload_0
     114: invokevirtual #62                 // Method isFlushRequiredOnEmptyBuffer:()Z
     117: ifne          142
     120: aload_0
     121: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     124: ifnull        159
     127: aload_0
     128: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     131: invokeinterface #63,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     136: invokevirtual #64                 // Method java/nio/ByteBuffer.position:()I
     139: ifle          159
     142: aload_0
     143: invokevirtual #65                 // Method handleBufferFull:()V
     146: aload_0
     147: getfield      #30                 // Field readyForFlush:Z
     150: ifne          157
     153: iconst_1
     154: goto          158
     157: iconst_0
     158: ireturn
     159: iconst_1
     160: ireturn
    Exception table:
       from    to  target type
          45    65    71   any
          66    68    71   any
          71    74    71   any

  protected boolean isFlushRequiredOnEmptyBuffer();
    Code:
       0: iconst_0
       1: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method safeToSend:()Z
       4: ifne          9
       7: lconst_0
       8: lreturn
       9: aload_0
      10: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      13: ifnonnull     32
      16: aload_0
      17: aload_0
      18: invokevirtual #33                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      21: invokevirtual #67                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      24: invokeinterface #68,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      29: putfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      32: aload_0
      33: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      36: invokeinterface #63,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      41: astore        4
      43: aload         4
      45: aload_1
      46: iload_2
      47: iload_3
      48: invokestatic  #69                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
      51: istore        5
      53: aload         4
      55: invokevirtual #70                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      58: ifne          65
      61: aload_0
      62: invokevirtual #65                 // Method handleBufferFull:()V
      65: aload_0
      66: aload_0
      67: getfield      #71                 // Field writeSucceeded:Z
      70: ifne          78
      73: iload         5
      75: ifle          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: putfield      #71                 // Field writeSucceeded:Z
      86: iload         5
      88: i2l
      89: lreturn

  public long write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #72                 // Method write:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method safeToSend:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      13: ifnonnull     32
      16: aload_0
      17: aload_0
      18: invokevirtual #33                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      21: invokevirtual #67                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      24: invokeinterface #68,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      29: putfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      32: aload_0
      33: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      36: invokeinterface #63,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      41: astore_2
      42: aload_2
      43: aload_1
      44: invokestatic  #73                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      47: istore_3
      48: aload_2
      49: invokevirtual #70                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      52: ifne          59
      55: aload_0
      56: invokevirtual #65                 // Method handleBufferFull:()V
      59: aload_0
      60: aload_0
      61: getfield      #71                 // Field writeSucceeded:Z
      64: ifne          71
      67: iload_3
      68: ifle          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: putfield      #71                 // Field writeSucceeded:Z
      79: iload_3
      80: ireturn

  public boolean send(io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method isWritesShutdown:()Z
       4: ifeq          16
       7: getstatic     #51                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #61,  1           // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      15: athrow
      16: aload_0
      17: aload_1
      18: invokevirtual #75                 // Method sendInternal:(Lio/undertow/connector/PooledByteBuffer;)Z
      21: istore_2
      22: iload_2
      23: ifeq          31
      26: aload_0
      27: invokevirtual #76                 // Method flush:()Z
      30: pop
      31: iload_2
      32: ireturn

  protected boolean sendInternal(io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method safeToSend:()Z
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      12: aload_0
      13: iconst_1
      14: putfield      #71                 // Field writeSucceeded:Z
      17: iconst_1
      18: ireturn
      19: iconst_0
      20: ireturn

  protected boolean safeToSend() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_1
       7: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifne          20
      13: aload_0
      14: getfield      #39                 // Field broken:Z
      17: ifeq          29
      20: getstatic     #51                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      23: invokeinterface #61,  1           // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      28: athrow
      29: aload_0
      30: getfield      #30                 // Field readyForFlush:Z
      33: ifeq          38
      36: iconst_0
      37: ireturn
      38: aconst_null
      39: aload_0
      40: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      43: if_acmpeq     55
      46: getstatic     #51                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      49: invokeinterface #77,  1           // InterfaceMethod io/undertow/UndertowMessages.bodyIsSetAndNotReadyForFlush:()Ljava/lang/IllegalStateException;
      54: athrow
      55: iconst_1
      56: ireturn

  protected long getAwaitWritableTimeout();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #33                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       6: getstatic     #78                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
       9: invokevirtual #79                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      12: checkcast     #80                 // class java/lang/Integer
      15: astore_1
      16: goto          20
      19: astore_2
      20: aload_1
      21: ifnull        37
      24: aload_1
      25: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
      28: ifle          37
      31: aload_1
      32: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
      35: i2l
      36: lreturn
      37: getstatic     #83                 // Field AWAIT_WRITABLE_TIMEOUT:I
      40: i2l
      41: lreturn
    Exception table:
       from    to  target type
           2    16    19   Class java/io/IOException

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #84                 // Method org/xnio/channels/Channels.writeFinalBasic:(Lorg/xnio/channels/StreamSinkChannel;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public long writeFinal(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #85                 // Method writeFinal:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method org/xnio/channels/Channels.writeFinalBasic:(Lorg/xnio/channels/StreamSinkChannel;Ljava/nio/ByteBuffer;)I
       5: ireturn

  private void handleBufferFull() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #87                 // Field bufferFull:Z
      12: aload_0
      13: getfield      #30                 // Field readyForFlush:Z
      16: ifeq          22
      19: aload_1
      20: monitorexit
      21: return
      22: aload_0
      23: invokevirtual #43                 // Method sendWriteBuffer:()V
      26: aload_0
      27: iconst_1
      28: putfield      #30                 // Field readyForFlush:Z
      31: aload_0
      32: dup
      33: getfield      #12                 // Field state:I
      36: iconst_4
      37: ior
      38: putfield      #12                 // Field state:I
      41: aload_1
      42: monitorexit
      43: goto          51
      46: astore_2
      47: aload_1
      48: monitorexit
      49: aload_2
      50: athrow
      51: aload_0
      52: getfield      #14                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      55: aload_0
      56: invokevirtual #45                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.queueFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)V
      59: return
    Exception table:
       from    to  target type
           7    21    46   any
          22    43    46   any
          46    49    46   any

  private void sendWriteBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     14
       7: aload_0
       8: getstatic     #44                 // Field EMPTY_BYTE_BUFFER:Lio/undertow/connector/PooledByteBuffer;
      11: putfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      14: aload_0
      15: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      18: invokeinterface #63,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      23: invokevirtual #88                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      26: pop
      27: aload_0
      28: aload_0
      29: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      32: invokevirtual #75                 // Method sendInternal:(Lio/undertow/connector/PooledByteBuffer;)Z
      35: ifne          47
      38: getstatic     #51                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      41: invokeinterface #89,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToSendAfterBeingSafe:()Ljava/lang/IllegalStateException;
      46: athrow
      47: aload_0
      48: aconst_null
      49: putfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      52: return

  protected abstract boolean isLastFrame();

  public boolean isReadyForFlush();
    Code:
       0: aload_0
       1: getfield      #30                 // Field readyForFlush:Z
       4: ireturn

  public boolean isWritesShutdown();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: iconst_2
       5: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: iconst_1
       5: invokestatic  #26                 // Method org/xnio/Bits.allAreClear:(II)Z
       8: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field fullyFlushed:Z
       4: ifne          18
       7: aload_0
       8: getfield      #12                 // Field state:I
      11: iconst_1
      12: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifeq          19
      18: return
      19: aload_0
      20: getfield      #7                  // Field lock:Ljava/lang/Object;
      23: dup
      24: astore_1
      25: monitorenter
      26: aload_0
      27: getfield      #40                 // Field fullyFlushed:Z
      30: ifne          44
      33: aload_0
      34: getfield      #12                 // Field state:I
      37: iconst_1
      38: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
      41: ifeq          51
      44: aload_1
      45: monitorexit
      46: aload_0
      47: invokevirtual #90                 // Method wakeupWaiters:()V
      50: return
      51: aload_0
      52: dup
      53: getfield      #12                 // Field state:I
      56: iconst_1
      57: ior
      58: putfield      #12                 // Field state:I
      61: aload_0
      62: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      65: ifnull        82
      68: aload_0
      69: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      72: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      77: aload_0
      78: aconst_null
      79: putfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      82: aload_0
      83: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      86: ifnull        103
      89: aload_0
      90: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      93: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      98: aload_0
      99: aconst_null
     100: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     103: aload_0
     104: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     107: ifnull        137
     110: aload_0
     111: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     114: invokevirtual #92                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     117: ifnull        137
     120: aload_0
     121: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     124: invokevirtual #92                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     127: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     132: aload_0
     133: aconst_null
     134: putfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     137: aload_0
     138: invokevirtual #93                 // Method removeHandle:()V
     141: aload_1
     142: monitorexit
     143: goto          151
     146: astore_2
     147: aload_1
     148: monitorexit
     149: aload_2
     150: athrow
     151: aload_0
     152: invokevirtual #94                 // Method channelForciblyClosed:()V
     155: aload_0
     156: invokevirtual #95                 // Method isWriteResumed:()Z
     159: ifeq          174
     162: aload_0
     163: invokevirtual #50                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
     166: aload_0
     167: aload_0
     168: invokevirtual #96                 // Method getWriteListener:()Lorg/xnio/ChannelListener;
     171: invokestatic  #97                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
     174: aload_0
     175: invokevirtual #98                 // Method wakeupWrites:()V
     178: aload_0
     179: invokevirtual #90                 // Method wakeupWaiters:()V
     182: goto          192
     185: astore_3
     186: aload_0
     187: invokevirtual #90                 // Method wakeupWaiters:()V
     190: aload_3
     191: athrow
     192: return
    Exception table:
       from    to  target type
          26    46   146   any
          51   143   146   any
         146   149   146   any
          19    46   185   any
          51   178   185   any

  protected void channelForciblyClosed() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method isFirstDataWritten:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #33                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      11: aconst_null
      12: invokevirtual #100                // Method io/undertow/server/protocol/framed/AbstractFramedChannel.markWritesBroken:(Ljava/lang/Throwable;)V
      15: aload_0
      16: invokevirtual #93                 // Method removeHandle:()V
      19: aload_0
      20: invokevirtual #90                 // Method wakeupWaiters:()V
      23: return

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: iconst_0
       1: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public java.nio.ByteBuffer getBuffer();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: iconst_1
       5: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #101                // class java/lang/IllegalStateException
      14: dup
      15: invokespecial #102                // Method java/lang/IllegalStateException."<init>":()V
      18: athrow
      19: aload_0
      20: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      23: ifnonnull     33
      26: aload_0
      27: getstatic     #44                 // Field EMPTY_BYTE_BUFFER:Lio/undertow/connector/PooledByteBuffer;
      30: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      33: aload_0
      34: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      37: invokeinterface #63,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      42: areturn

  final void flushComplete() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: iconst_1
       8: istore_2
       9: aload_0
      10: iconst_0
      11: putfield      #87                 // Field bufferFull:Z
      14: aload_0
      15: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      18: invokevirtual #103                // Method io/undertow/server/protocol/framed/SendFrameHeader.getRemainingInBuffer:()I
      21: istore_3
      22: aload_0
      23: getfield      #41                 // Field finalFrameQueued:Z
      26: istore        4
      28: iload         4
      30: ifeq          51
      33: iload_3
      34: ifne          51
      37: aload_0
      38: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      41: invokevirtual #104                // Method io/undertow/server/protocol/framed/SendFrameHeader.isAnotherFrameRequired:()Z
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore        5
      54: iload_3
      55: ifle          153
      58: aload_0
      59: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      62: invokeinterface #63,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      67: aload_0
      68: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      71: invokeinterface #63,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      76: invokevirtual #105                // Method java/nio/ByteBuffer.limit:()I
      79: iload_3
      80: iadd
      81: invokevirtual #106                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
      84: pop
      85: aload_0
      86: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      89: invokeinterface #63,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      94: invokevirtual #107                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      97: pop
      98: aload_0
      99: aload_0
     100: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     103: putfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     106: aload_0
     107: aconst_null
     108: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     111: aload_0
     112: dup
     113: getfield      #12                 // Field state:I
     116: bipush        -9
     118: iand
     119: putfield      #12                 // Field state:I
     122: iload         4
     124: ifeq          235
     127: aload_0
     128: iconst_0
     129: putfield      #41                 // Field finalFrameQueued:Z
     132: aload_0
     133: iconst_0
     134: dup_x1
     135: putfield      #30                 // Field readyForFlush:Z
     138: istore_2
     139: aload_0
     140: ldc2_w        #9                  // long -1l
     143: putfield      #11                 // Field flushExpirationTime:J
     146: aload_0
     147: invokevirtual #37                 // Method queueFinalFrame:()V
     150: goto          235
     153: aload_0
     154: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     157: invokevirtual #104                // Method io/undertow/server/protocol/framed/SendFrameHeader.isAnotherFrameRequired:()Z
     160: ifeq          203
     163: aload_0
     164: iconst_0
     165: putfield      #41                 // Field finalFrameQueued:Z
     168: aload_0
     169: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     172: ifnull        235
     175: aload_0
     176: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     179: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     184: aload_0
     185: aconst_null
     186: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     189: aload_0
     190: dup
     191: getfield      #12                 // Field state:I
     194: bipush        -9
     196: iand
     197: putfield      #12                 // Field state:I
     200: goto          235
     203: aload_0
     204: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     207: ifnull        235
     210: aload_0
     211: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     214: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     219: aload_0
     220: aconst_null
     221: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     224: aload_0
     225: dup
     226: getfield      #12                 // Field state:I
     229: bipush        -9
     231: iand
     232: putfield      #12                 // Field state:I
     235: iload         5
     237: ifeq          281
     240: aload_0
     241: iconst_1
     242: putfield      #40                 // Field fullyFlushed:Z
     245: aload_0
     246: invokevirtual #93                 // Method removeHandle:()V
     249: aload_0
     250: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     253: ifnull        281
     256: aload_0
     257: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     260: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     265: aload_0
     266: aconst_null
     267: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     270: aload_0
     271: dup
     272: getfield      #12                 // Field state:I
     275: bipush        -9
     277: iand
     278: putfield      #12                 // Field state:I
     281: aload_0
     282: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     285: invokevirtual #92                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     288: ifnull        303
     291: aload_0
     292: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     295: invokevirtual #92                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     298: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     303: aload_0
     304: aconst_null
     305: putfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     308: iload_2
     309: ifeq          324
     312: aload_0
     313: iconst_0
     314: putfield      #30                 // Field readyForFlush:Z
     317: aload_0
     318: ldc2_w        #9                  // long -1l
     321: putfield      #11                 // Field flushExpirationTime:J
     324: aload_0
     325: invokevirtual #95                 // Method isWriteResumed:()Z
     328: ifeq          343
     331: iload         5
     333: ifne          343
     336: aload_0
     337: invokevirtual #98                 // Method wakeupWrites:()V
     340: goto          362
     343: aload_0
     344: invokevirtual #95                 // Method isWriteResumed:()Z
     347: ifeq          362
     350: aload_0
     351: invokevirtual #50                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
     354: aload_0
     355: aload_0
     356: invokevirtual #96                 // Method getWriteListener:()Lorg/xnio/ChannelListener;
     359: invokestatic  #97                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
     362: aload_0
     363: getfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     366: invokevirtual #108                // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
     369: astore        6
     371: iload         5
     373: ifeq          391
     376: aload         6
     378: ifnull        391
     381: aload_0
     382: invokevirtual #50                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
     385: aload_0
     386: aload         6
     388: invokestatic  #97                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
     391: aload_0
     392: iload         5
     394: invokevirtual #109                // Method handleFlushComplete:(Z)V
     397: aload_0
     398: invokevirtual #90                 // Method wakeupWaiters:()V
     401: goto          413
     404: astore        7
     406: aload_0
     407: invokevirtual #90                 // Method wakeupWaiters:()V
     410: aload         7
     412: athrow
     413: aload_1
     414: monitorexit
     415: goto          425
     418: astore        8
     420: aload_1
     421: monitorexit
     422: aload         8
     424: athrow
     425: return
    Exception table:
       from    to  target type
           7   397   404   any
         404   406   404   any
           7   415   418   any
         418   422   418   any

  protected void handleFlushComplete(boolean);
    Code:
       0: return

  protected boolean isFirstDataWritten();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: iconst_4
       5: invokestatic  #38                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void markBroken();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #39                 // Field broken:Z
       5: aload_0
       6: invokevirtual #98                 // Method wakeupWrites:()V
       9: aload_0
      10: invokevirtual #90                 // Method wakeupWaiters:()V
      13: aload_0
      14: invokevirtual #95                 // Method isWriteResumed:()Z
      17: ifeq          41
      20: aload_0
      21: getfield      #4                  // Field writeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      24: invokevirtual #108                // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
      27: astore_1
      28: aload_1
      29: ifnull        41
      32: aload_0
      33: invokevirtual #50                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
      36: aload_0
      37: aload_1
      38: invokestatic  #97                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
      41: aload_0
      42: getfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      45: invokevirtual #108                // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
      48: astore_1
      49: aload_1
      50: ifnull        62
      53: aload_0
      54: invokevirtual #50                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
      57: aload_0
      58: aload_1
      59: invokestatic  #97                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
      62: aload_0
      63: invokevirtual #93                 // Method removeHandle:()V
      66: aload_0
      67: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      70: ifnull        100
      73: aload_0
      74: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      77: invokevirtual #92                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
      80: ifnull        100
      83: aload_0
      84: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      87: invokevirtual #92                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
      90: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      95: aload_0
      96: aconst_null
      97: putfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     100: aload_0
     101: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     104: ifnull        121
     107: aload_0
     108: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     111: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     116: aload_0
     117: aconst_null
     118: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     121: aload_0
     122: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     125: ifnull        228
     128: aload_0
     129: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     132: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     137: aload_0
     138: aconst_null
     139: putfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     142: goto          228
     145: astore_2
     146: aload_0
     147: invokevirtual #93                 // Method removeHandle:()V
     150: aload_0
     151: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     154: ifnull        184
     157: aload_0
     158: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     161: invokevirtual #92                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     164: ifnull        184
     167: aload_0
     168: getfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     171: invokevirtual #92                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     174: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     179: aload_0
     180: aconst_null
     181: putfield      #21                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     184: aload_0
     185: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     188: ifnull        205
     191: aload_0
     192: getfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     195: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     200: aload_0
     201: aconst_null
     202: putfield      #27                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     205: aload_0
     206: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     209: ifnull        226
     212: aload_0
     213: getfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     216: invokeinterface #91,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     221: aload_0
     222: aconst_null
     223: putfield      #42                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     226: aload_2
     227: athrow
     228: return
    Exception table:
       from    to  target type
           5    62   145   any

  org.xnio.ChannelListener<? super S> getWriteListener();
    Code:
       0: aload_0
       1: getfield      #4                  // Field writeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: invokevirtual #108                // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
       7: areturn

  private void wakeupWaiters();
    Code:
       0: aload_0
       1: getfield      #13                 // Field waiterCount:I
       4: ifle          38
       7: aload_0
       8: getfield      #7                  // Field lock:Ljava/lang/Object;
      11: dup
      12: astore_1
      13: monitorenter
      14: aload_0
      15: getfield      #13                 // Field waiterCount:I
      18: ifle          28
      21: aload_0
      22: getfield      #7                  // Field lock:Ljava/lang/Object;
      25: invokevirtual #110                // Method java/lang/Object.notifyAll:()V
      28: aload_1
      29: monitorexit
      30: goto          38
      33: astore_2
      34: aload_1
      35: monitorexit
      36: aload_2
      37: athrow
      38: return
    Exception table:
       from    to  target type
          14    30    33   any
          33    36    33   any

  public C getChannel();
    Code:
       0: aload_0
       1: getfield      #14                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: areturn

  public boolean isBroken();
    Code:
       0: aload_0
       1: getfield      #39                 // Field broken:Z
       4: ireturn

  public boolean isBufferFull();
    Code:
       0: aload_0
       1: getfield      #87                 // Field bufferFull:Z
       4: ireturn

  private void removeHandle();
    Code:
       0: aload_0
       1: getfield      #8                  // Field handle:Lorg/xnio/XnioExecutor$Key;
       4: ifnull        46
       7: aload_0
       8: getfield      #7                  // Field lock:Ljava/lang/Object;
      11: dup
      12: astore_1
      13: monitorenter
      14: aload_0
      15: getfield      #8                  // Field handle:Lorg/xnio/XnioExecutor$Key;
      18: ifnull        36
      21: aload_0
      22: getfield      #8                  // Field handle:Lorg/xnio/XnioExecutor$Key;
      25: invokeinterface #111,  1          // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      30: pop
      31: aload_0
      32: aconst_null
      33: putfield      #8                  // Field handle:Lorg/xnio/XnioExecutor$Key;
      36: aload_1
      37: monitorexit
      38: goto          46
      41: astore_2
      42: aload_1
      43: monitorexit
      44: aload_2
      45: athrow
      46: return
    Exception table:
       from    to  target type
          14    38    41   any
          41    44    41   any

  private void addHandle(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #8                  // Field handle:Lorg/xnio/XnioExecutor$Key;
      11: ifnonnull     40
      14: aload_0
      15: aload_0
      16: invokevirtual #33                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      19: invokevirtual #59                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      22: aload_0
      23: getfield      #17                 // Field timeoutRunnable:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel$TimeoutRunnable;
      26: lload_1
      27: ldc2_w        #112                // long 50l
      30: ladd
      31: getstatic     #47                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      34: invokevirtual #114                // Method org/xnio/XnioIoThread.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      37: putfield      #8                  // Field handle:Lorg/xnio/XnioExecutor$Key;
      40: aload_3
      41: monitorexit
      42: goto          52
      45: astore        4
      47: aload_3
      48: monitorexit
      49: aload         4
      51: athrow
      52: return
    Exception table:
       from    to  target type
           7    42    45   any
          45    49    45   any

  void addReadyForFlushTask();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: invokevirtual #46                 // Method getAwaitWritableTimeout:()J
      11: lstore_2
      12: aload_0
      13: invokestatic  #115                // Method java/lang/System.currentTimeMillis:()J
      16: lload_2
      17: ladd
      18: putfield      #11                 // Field flushExpirationTime:J
      21: aload_0
      22: lload_2
      23: invokevirtual #116                // Method addHandle:(J)V
      26: aload_1
      27: monitorexit
      28: goto          38
      31: astore        4
      33: aload_1
      34: monitorexit
      35: aload         4
      37: athrow
      38: return
    Exception table:
       from    to  target type
           7    28    31   any
          31    35    31   any

  private static java.lang.Integer lambda$static$0();
    Code:
       0: ldc           #117                // String io.undertow.await_writable_timeout
       2: ldc           #118                // int 600000
       4: invokestatic  #119                // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       7: areturn

  static {};
    Code:
       0: ldc           #118                // int 600000
       2: istore_0
       3: invokedynamic #120,  0            // InvokeDynamic #0:run:()Ljava/security/PrivilegedAction;
       8: invokestatic  #121                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      11: checkcast     #80                 // class java/lang/Integer
      14: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
      17: istore_1
      18: iload_1
      19: ifle          26
      22: iload_1
      23: goto          28
      26: ldc           #118                // int 600000
      28: putstatic     #83                 // Field AWAIT_WRITABLE_TIMEOUT:I
      31: new           #122                // class io/undertow/util/ImmediatePooledByteBuffer
      34: dup
      35: iconst_0
      36: invokestatic  #123                // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      39: invokespecial #124                // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
      42: putstatic     #44                 // Field EMPTY_BYTE_BUFFER:Lio/undertow/connector/PooledByteBuffer;
      45: ldc           #25                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
      47: ldc           #125                // String inListenerLoop
      49: invokestatic  #126                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      52: putstatic     #31                 // Field inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      55: return
}
