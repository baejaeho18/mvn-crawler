Compiled from "ALPNOfferedClientHelloExplorer.java"
final class io.undertow.server.protocol.http.ALPNOfferedClientHelloExplorer {
  private static final int RECORD_HEADER_SIZE;

  private io.undertow.server.protocol.http.ALPNOfferedClientHelloExplorer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static boolean isIncompleteHeader(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/nio/ByteBuffer.remaining:()I
       4: iconst_5
       5: if_icmpge     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  static java.util.List<java.lang.Integer> parseClientHello(java.nio.ByteBuffer) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: invokestatic  #5                  // Method isIncompleteHeader:(Ljava/nio/ByteBuffer;)Z
       9: ifeq          20
      12: new           #6                  // class java/nio/BufferUnderflowException
      15: dup
      16: invokespecial #7                  // Method java/nio/BufferUnderflowException."<init>":()V
      19: athrow
      20: aload_1
      21: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
      24: istore_2
      25: aload_1
      26: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
      29: istore_3
      30: aload_1
      31: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
      34: istore        4
      36: iload_2
      37: sipush        128
      40: iand
      41: ifeq          52
      44: iload         4
      46: iconst_1
      47: if_icmpne     52
      50: aconst_null
      51: areturn
      52: iload_2
      53: bipush        22
      55: if_icmpne     84
      58: iload_3
      59: iconst_3
      60: if_icmpne     84
      63: iload         4
      65: iconst_1
      66: if_icmplt     84
      69: iload         4
      71: iconst_3
      72: if_icmpgt     84
      75: aload_1
      76: iload_2
      77: iload_3
      78: iload         4
      80: invokestatic  #9                  // Method exploreTLSRecord:(Ljava/nio/ByteBuffer;BBB)Ljava/util/List;
      83: areturn
      84: aconst_null
      85: areturn

  private static java.util.List<java.lang.Integer> exploreTLSRecord(java.nio.ByteBuffer, byte, byte, byte) throws javax.net.ssl.SSLException;
    Code:
       0: iload_1
       1: bipush        22
       3: if_icmpeq     15
       6: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       9: invokeinterface #11,  1           // InterfaceMethod io/undertow/UndertowMessages.notHandshakeRecord:()Ljavax/net/ssl/SSLHandshakeException;
      14: athrow
      15: aload_0
      16: invokestatic  #12                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      19: istore        4
      21: iload         4
      23: aload_0
      24: invokevirtual #2                  // Method java/nio/ByteBuffer.remaining:()I
      27: if_icmple     38
      30: new           #6                  // class java/nio/BufferUnderflowException
      33: dup
      34: invokespecial #7                  // Method java/nio/BufferUnderflowException."<init>":()V
      37: athrow
      38: aload_0
      39: iload_2
      40: iload_3
      41: iload         4
      43: invokestatic  #13                 // Method exploreHandshake:(Ljava/nio/ByteBuffer;BBI)Ljava/util/List;
      46: areturn
      47: astore        5
      49: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      52: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidHandshakeRecord:()Ljavax/net/ssl/SSLHandshakeException;
      57: athrow
    Exception table:
       from    to  target type
          38    46    47   Class java/nio/BufferUnderflowException

  private static java.util.List<java.lang.Integer> exploreHandshake(java.nio.ByteBuffer, byte, byte, int) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
       4: istore        4
       6: iload         4
       8: iconst_1
       9: if_icmpeq     21
      12: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      15: invokeinterface #15,  1           // InterfaceMethod io/undertow/UndertowMessages.expectedClientHello:()Ljavax/net/ssl/SSLHandshakeException;
      20: athrow
      21: aload_0
      22: invokestatic  #16                 // Method getInt24:(Ljava/nio/ByteBuffer;)I
      25: istore        5
      27: iload         5
      29: iload_3
      30: iconst_4
      31: isub
      32: if_icmple     44
      35: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      38: invokeinterface #17,  1           // InterfaceMethod io/undertow/UndertowMessages.multiRecordSSLHandshake:()Ljavax/net/ssl/SSLHandshakeException;
      43: athrow
      44: aload_0
      45: invokevirtual #4                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      48: astore_0
      49: aload_0
      50: iload         5
      52: aload_0
      53: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
      56: iadd
      57: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
      60: pop
      61: aload_0
      62: invokestatic  #20                 // Method exploreRecord:(Ljava/nio/ByteBuffer;)Ljava/util/List;
      65: areturn

  private static java.util.List<java.lang.Integer> exploreRecord(java.nio.ByteBuffer) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
       4: istore_1
       5: aload_0
       6: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
       9: istore_2
      10: iload_1
      11: iconst_3
      12: if_icmpeq     22
      15: iload_2
      16: iconst_3
      17: if_icmpeq     22
      20: aconst_null
      21: areturn
      22: iconst_0
      23: istore_3
      24: iload_3
      25: bipush        32
      27: if_icmpge     42
      30: aload_0
      31: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
      34: istore        4
      36: iinc          3, 1
      39: goto          24
      42: aload_0
      43: invokestatic  #21                 // Method processByteVector8:(Ljava/nio/ByteBuffer;)V
      46: aload_0
      47: invokestatic  #12                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      50: istore_3
      51: new           #22                 // class java/util/ArrayList
      54: dup
      55: invokespecial #23                 // Method java/util/ArrayList."<init>":()V
      58: astore        4
      60: iconst_0
      61: istore        5
      63: iload         5
      65: iload_3
      66: if_icmpge     90
      69: aload         4
      71: aload_0
      72: invokestatic  #12                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      75: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      78: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: iinc          5, 2
      87: goto          63
      90: aload_0
      91: invokestatic  #21                 // Method processByteVector8:(Ljava/nio/ByteBuffer;)V
      94: aload_0
      95: invokevirtual #2                  // Method java/nio/ByteBuffer.remaining:()I
      98: ifle          108
     101: aload_0
     102: aload         4
     104: invokestatic  #26                 // Method exploreExtensions:(Ljava/nio/ByteBuffer;Ljava/util/List;)Ljava/util/List;
     107: areturn
     108: aconst_null
     109: areturn

  private static java.util.List<java.lang.Integer> exploreExtensions(java.nio.ByteBuffer, java.util.List<java.lang.Integer>) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
       4: istore_2
       5: iload_2
       6: ifle          44
       9: aload_0
      10: invokestatic  #12                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      13: istore_3
      14: aload_0
      15: invokestatic  #12                 // Method getInt16:(Ljava/nio/ByteBuffer;)I
      18: istore        4
      20: iload_3
      21: bipush        16
      23: if_icmpne     28
      26: aload_1
      27: areturn
      28: aload_0
      29: iload         4
      31: invokestatic  #27                 // Method processByteVector:(Ljava/nio/ByteBuffer;I)V
      34: iload_2
      35: iload         4
      37: iconst_4
      38: iadd
      39: isub
      40: istore_2
      41: goto          5
      44: aconst_null
      45: areturn

  private static int getInt8(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
       4: ireturn

  private static int getInt16(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
       4: sipush        255
       7: iand
       8: bipush        8
      10: ishl
      11: aload_0
      12: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
      15: sipush        255
      18: iand
      19: ior
      20: ireturn

  private static int getInt24(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
       4: sipush        255
       7: iand
       8: bipush        16
      10: ishl
      11: aload_0
      12: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
      15: sipush        255
      18: iand
      19: bipush        8
      21: ishl
      22: ior
      23: aload_0
      24: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
      27: sipush        255
      30: iand
      31: ior
      32: ireturn

  private static void processByteVector8(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokestatic  #28                 // Method getInt8:(Ljava/nio/ByteBuffer;)I
       4: istore_1
       5: aload_0
       6: iload_1
       7: invokestatic  #27                 // Method processByteVector:(Ljava/nio/ByteBuffer;I)V
      10: return

  private static void processByteVector(java.nio.ByteBuffer, int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     18
       7: aload_0
       8: invokevirtual #8                  // Method java/nio/ByteBuffer.get:()B
      11: istore_3
      12: iinc          2, 1
      15: goto          2
      18: return
}
