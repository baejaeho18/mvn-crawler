Compiled from "ParseTimeoutUpdater.java"
public final class io.undertow.server.protocol.ParseTimeoutUpdater implements java.lang.Runnable,io.undertow.server.ServerConnection$CloseListener,java.io.Closeable {
  private final org.xnio.channels.ConnectedChannel connection;

  private final long requestParseTimeout;

  private final long requestIdleTimeout;

  private volatile org.xnio.XnioExecutor$Key handle;

  private volatile long expireTime;

  private volatile boolean parsing;

  private static final int FUZZ_FACTOR;

  private final java.lang.Runnable closeTask;

  public io.undertow.server.protocol.ParseTimeoutUpdater(org.xnio.channels.ConnectedChannel, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: new           #1                  // class io/undertow/server/protocol/ParseTimeoutUpdater$1
       8: dup
       9: aload_1
      10: invokespecial #2                  // Method io/undertow/server/protocol/ParseTimeoutUpdater$1."<init>":(Lorg/xnio/channels/ConnectedChannel;)V
      13: invokespecial #3                  // Method "<init>":(Lorg/xnio/channels/ConnectedChannel;JJLjava/lang/Runnable;)V
      16: return

  public io.undertow.server.protocol.ParseTimeoutUpdater(org.xnio.channels.ConnectedChannel, long, long, java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #5                  // long -1l
       8: putfield      #7                  // Field expireTime:J
      11: aload_0
      12: iconst_0
      13: putfield      #8                  // Field parsing:Z
      16: aload_0
      17: aload_1
      18: putfield      #9                  // Field connection:Lorg/xnio/channels/ConnectedChannel;
      21: aload_0
      22: lload_2
      23: putfield      #10                 // Field requestParseTimeout:J
      26: aload_0
      27: lload         4
      29: putfield      #11                 // Field requestIdleTimeout:J
      32: aload_0
      33: aload         6
      35: putfield      #12                 // Field closeTask:Ljava/lang/Runnable;
      38: return

  public void connectionIdle();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #8                  // Field parsing:Z
       5: aload_0
       6: aload_0
       7: getfield      #11                 // Field requestIdleTimeout:J
      10: invokevirtual #13                 // Method handleSchedule:(J)V
      13: return

  private void handleSchedule(long);
    Code:
       0: lload_1
       1: ldc2_w        #5                  // long -1l
       4: lcmp
       5: ifne          16
       8: aload_0
       9: ldc2_w        #5                  // long -1l
      12: putfield      #7                  // Field expireTime:J
      15: return
      16: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
      19: lload_1
      20: ladd
      21: lstore_3
      22: aload_0
      23: getfield      #7                  // Field expireTime:J
      26: lstore        5
      28: aload_0
      29: lload_3
      30: putfield      #7                  // Field expireTime:J
      33: lload_3
      34: lload         5
      36: lcmp
      37: ifge          62
      40: aload_0
      41: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      44: ifnull        62
      47: aload_0
      48: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      51: invokeinterface #16,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      56: pop
      57: aload_0
      58: aconst_null
      59: putfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      62: aload_0
      63: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      66: ifnonnull     111
      69: aload_0
      70: aload_0
      71: getfield      #9                  // Field connection:Lorg/xnio/channels/ConnectedChannel;
      74: invokeinterface #17,  1           // InterfaceMethod org/xnio/channels/ConnectedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      79: aload_0
      80: lload_1
      81: ldc2_w        #19                 // long 50l
      84: ladd
      85: getstatic     #21                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      88: invokestatic  #22                 // Method io/undertow/util/WorkerUtils.executeAfter:(Lorg/xnio/XnioIoThread;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      91: putfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      94: goto          111
      97: astore        7
      99: getstatic     #24                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     102: ldc           #25                 // String Failed to schedule parse timeout, server is probably shutting down
     104: aload         7
     106: invokeinterface #26,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     111: return
    Exception table:
       from    to  target type
          69    94    97   Class java/util/concurrent/RejectedExecutionException

  public void failedParse();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parsing:Z
       4: ifne          20
       7: aload_0
       8: iconst_1
       9: putfield      #8                  // Field parsing:Z
      12: aload_0
      13: aload_0
      14: getfield      #10                 // Field requestParseTimeout:J
      17: invokevirtual #13                 // Method handleSchedule:(J)V
      20: return

  public void requestStarted();
    Code:
       0: aload_0
       1: ldc2_w        #5                  // long -1l
       4: putfield      #7                  // Field expireTime:J
       7: aload_0
       8: iconst_0
       9: putfield      #8                  // Field parsing:Z
      12: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connection:Lorg/xnio/channels/ConnectedChannel;
       4: invokeinterface #27,  1           // InterfaceMethod org/xnio/channels/ConnectedChannel.isOpen:()Z
       9: ifne          13
      12: return
      13: aload_0
      14: aconst_null
      15: putfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      18: aload_0
      19: getfield      #7                  // Field expireTime:J
      22: lconst_0
      23: lcmp
      24: ifle          128
      27: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
      30: lstore_1
      31: aload_0
      32: getfield      #7                  // Field expireTime:J
      35: lload_1
      36: lcmp
      37: ifle          73
      40: aload_0
      41: aload_0
      42: getfield      #9                  // Field connection:Lorg/xnio/channels/ConnectedChannel;
      45: invokeinterface #17,  1           // InterfaceMethod org/xnio/channels/ConnectedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      50: aload_0
      51: aload_0
      52: getfield      #7                  // Field expireTime:J
      55: lload_1
      56: lsub
      57: ldc2_w        #19                 // long 50l
      60: ladd
      61: getstatic     #21                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      64: invokestatic  #22                 // Method io/undertow/util/WorkerUtils.executeAfter:(Lorg/xnio/XnioIoThread;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      67: putfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      70: goto          128
      73: aload_0
      74: getfield      #8                  // Field parsing:Z
      77: ifeq          100
      80: getstatic     #24                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      83: aload_0
      84: getfield      #9                  // Field connection:Lorg/xnio/channels/ConnectedChannel;
      87: invokeinterface #28,  1           // InterfaceMethod org/xnio/channels/ConnectedChannel.getPeerAddress:()Ljava/net/SocketAddress;
      92: invokeinterface #29,  2           // InterfaceMethod io/undertow/UndertowLogger.parseRequestTimedOut:(Ljava/net/SocketAddress;)V
      97: goto          119
     100: getstatic     #24                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     103: ldc           #30                 // String Timing out idle connection from %s
     105: aload_0
     106: getfield      #9                  // Field connection:Lorg/xnio/channels/ConnectedChannel;
     109: invokeinterface #28,  1           // InterfaceMethod org/xnio/channels/ConnectedChannel.getPeerAddress:()Ljava/net/SocketAddress;
     114: invokeinterface #31,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     119: aload_0
     120: getfield      #12                 // Field closeTask:Ljava/lang/Runnable;
     123: invokeinterface #32,  1           // InterfaceMethod java/lang/Runnable.run:()V
     128: return

  public void closed(io.undertow.server.ServerConnection);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method close:()V
       4: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
       4: ifnull        22
       7: aload_0
       8: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      11: invokeinterface #16,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      16: pop
      17: aload_0
      18: aconst_null
      19: putfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      22: return
}
