Compiled from "AlpnOpenListener.java"
public class io.undertow.server.protocol.http.AlpnOpenListener implements org.xnio.ChannelListener<org.xnio.StreamConnection>, io.undertow.server.OpenListener {
  public static final java.lang.String REQUIRED_CIPHER;

  public static final java.lang.String IBM_REQUIRED_CIPHER;

  private static final java.util.Set<java.lang.String> REQUIRED_PROTOCOLS;

  private final io.undertow.protocols.alpn.ALPNManager alpnManager;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final java.util.Map<java.lang.String, io.undertow.server.protocol.http.AlpnOpenListener$ListenerEntry> listeners;

  private java.lang.String[] protocols;

  private final java.lang.String fallbackProtocol;

  private volatile io.undertow.server.HttpHandler rootHandler;

  private volatile org.xnio.OptionMap undertowOptions;

  private volatile boolean statisticsEnabled;

  private volatile boolean providerLogged;

  private volatile boolean alpnFailLogged;

  public io.undertow.server.protocol.http.AlpnOpenListener(org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.OptionMap, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #1                  // String http/1.1
       5: aload_3
       6: invokespecial #2                  // Method "<init>":(Lorg/xnio/Pool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
       9: return

  public io.undertow.server.protocol.http.AlpnOpenListener(org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(Lorg/xnio/Pool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
       8: return

  public io.undertow.server.protocol.http.AlpnOpenListener(org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.OptionMap, java.lang.String, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: new           #3                  // class io/undertow/server/XnioByteBufferPool
       4: dup
       5: aload_1
       6: invokespecial #4                  // Method io/undertow/server/XnioByteBufferPool."<init>":(Lorg/xnio/Pool;)V
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
      16: return

  public io.undertow.server.protocol.http.AlpnOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #1                  // String http/1.1
       5: aload_3
       6: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
       9: return

  public io.undertow.server.protocol.http.AlpnOpenListener(io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #6                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
       5: aconst_null
       6: aconst_null
       7: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
      10: return

  public io.undertow.server.protocol.http.AlpnOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
       8: return

  public io.undertow.server.protocol.http.AlpnOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.lang.String, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #8                  // Field io/undertow/protocols/alpn/ALPNManager.INSTANCE:Lio/undertow/protocols/alpn/ALPNManager;
       8: putfield      #9                  // Field alpnManager:Lio/undertow/protocols/alpn/ALPNManager;
      11: aload_0
      12: new           #10                 // class java/util/HashMap
      15: dup
      16: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      19: putfield      #12                 // Field listeners:Ljava/util/Map;
      22: aload_0
      23: aload_1
      24: putfield      #13                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      27: aload_0
      28: aload_2
      29: putfield      #14                 // Field undertowOptions:Lorg/xnio/OptionMap;
      32: aload_0
      33: aload_3
      34: putfield      #15                 // Field fallbackProtocol:Ljava/lang/String;
      37: aload_0
      38: aload_2
      39: getstatic     #16                 // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      42: iconst_0
      43: invokevirtual #17                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      46: putfield      #18                 // Field statisticsEnabled:Z
      49: aload_3
      50: ifnull        67
      53: aload         4
      55: ifnull        67
      58: aload_0
      59: aload_3
      60: aload         4
      62: iconst_0
      63: invokevirtual #19                 // Method addProtocol:(Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;I)Lio/undertow/server/protocol/http/AlpnOpenListener;
      66: pop
      67: return

  public io.undertow.server.HttpHandler getRootHandler();
    Code:
       0: aload_0
       1: getfield      #20                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  public void setRootHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       5: aload_0
       6: getfield      #12                 // Field listeners:Ljava/util/Map;
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          60
      29: aload_2
      30: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #25                 // class java/util/Map$Entry
      38: astore_3
      39: aload_3
      40: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: checkcast     #27                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
      48: getfield      #28                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      51: aload_1
      52: invokeinterface #29,  2           // InterfaceMethod io/undertow/server/DelegateOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      57: goto          20
      60: return

  public org.xnio.OptionMap getUndertowOptions();
    Code:
       0: aload_0
       1: getfield      #14                 // Field undertowOptions:Lorg/xnio/OptionMap;
       4: areturn

  public void setUndertowOptions(org.xnio.OptionMap);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #30                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #31                 // String undertowOptions
       9: invokeinterface #32,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #14                 // Field undertowOptions:Lorg/xnio/OptionMap;
      20: aload_0
      21: getfield      #12                 // Field listeners:Ljava/util/Map;
      24: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      29: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      34: astore_2
      35: aload_2
      36: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          78
      44: aload_2
      45: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #25                 // class java/util/Map$Entry
      53: astore_3
      54: aload_3
      55: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      60: checkcast     #27                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
      63: getfield      #28                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      66: aload_0
      67: getfield      #20                 // Field rootHandler:Lio/undertow/server/HttpHandler;
      70: invokeinterface #29,  2           // InterfaceMethod io/undertow/server/DelegateOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      75: goto          35
      78: aload_0
      79: aload_1
      80: getstatic     #16                 // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      83: iconst_0
      84: invokevirtual #17                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      87: putfield      #18                 // Field statisticsEnabled:Z
      90: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public io.undertow.server.ConnectorStatistics getConnectorStatistics();
    Code:
       0: aload_0
       1: getfield      #18                 // Field statisticsEnabled:Z
       4: ifeq          111
       7: new           #33                 // class java/util/ArrayList
      10: dup
      11: invokespecial #34                 // Method java/util/ArrayList."<init>":()V
      14: astore_1
      15: aload_0
      16: getfield      #12                 // Field listeners:Ljava/util/Map;
      19: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          85
      39: aload_2
      40: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #25                 // class java/util/Map$Entry
      48: astore_3
      49: aload_3
      50: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      55: checkcast     #27                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
      58: getfield      #28                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      61: invokeinterface #35,  1           // InterfaceMethod io/undertow/server/DelegateOpenListener.getConnectorStatistics:()Lio/undertow/server/ConnectorStatistics;
      66: astore        4
      68: aload         4
      70: ifnull        82
      73: aload_1
      74: aload         4
      76: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          30
      85: new           #37                 // class io/undertow/server/AggregateConnectorStatistics
      88: dup
      89: aload_1
      90: aload_1
      91: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      96: anewarray     #39                 // class io/undertow/server/ConnectorStatistics
      99: invokeinterface #40,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     104: checkcast     #41                 // class "[Lio/undertow/server/ConnectorStatistics;"
     107: invokespecial #42                 // Method io/undertow/server/AggregateConnectorStatistics."<init>":([Lio/undertow/server/ConnectorStatistics;)V
     110: areturn
     111: aconst_null
     112: areturn

  public void closeConnections();
    Code:
       0: aload_0
       1: getfield      #12                 // Field listeners:Ljava/util/Map;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          54
      24: aload_1
      25: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #25                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #27                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
      43: getfield      #28                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      46: invokeinterface #43,  1           // InterfaceMethod io/undertow/server/DelegateOpenListener.closeConnections:()V
      51: goto          15
      54: return

  public io.undertow.server.protocol.http.AlpnOpenListener addProtocol(java.lang.String, io.undertow.server.DelegateOpenListener, int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field listeners:Ljava/util/Map;
       4: aload_1
       5: new           #27                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
       8: dup
       9: aload_2
      10: iload_3
      11: aload_1
      12: invokespecial #44                 // Method io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry."<init>":(Lio/undertow/server/DelegateOpenListener;ILjava/lang/String;)V
      15: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: new           #33                 // class java/util/ArrayList
      24: dup
      25: aload_0
      26: getfield      #12                 // Field listeners:Ljava/util/Map;
      29: invokeinterface #46,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      34: invokespecial #47                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      37: astore        4
      39: aload         4
      41: invokestatic  #48                 // Method java/util/Collections.sort:(Ljava/util/List;)V
      44: aload_0
      45: aload         4
      47: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      52: anewarray     #49                 // class java/lang/String
      55: putfield      #50                 // Field protocols:[Ljava/lang/String;
      58: iconst_0
      59: istore        5
      61: iload         5
      63: aload         4
      65: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      70: if_icmpge     101
      73: aload_0
      74: getfield      #50                 // Field protocols:[Ljava/lang/String;
      77: iload         5
      79: aload         4
      81: iload         5
      83: invokeinterface #51,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      88: checkcast     #27                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
      91: getfield      #52                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.protocol:Ljava/lang/String;
      94: aastore
      95: iinc          5, 1
      98: goto          61
     101: aload_0
     102: areturn

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: getstatic     #53                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: invokeinterface #54,  1           // InterfaceMethod io/undertow/UndertowLogger.isTraceEnabled:()Z
       8: ifeq          25
      11: getstatic     #53                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      14: ldc           #55                 // String Opened connection with %s
      16: aload_1
      17: invokevirtual #56                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      20: invokeinterface #57,  3           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_1
      26: checkcast     #58                 // class org/xnio/ssl/SslConnection
      29: invokestatic  #59                 // Method io/undertow/protocols/ssl/UndertowXnioSsl.getSslConduit:(Lorg/xnio/ssl/SslConnection;)Lio/undertow/protocols/ssl/SslConduit;
      32: astore_2
      33: aload_2
      34: invokevirtual #60                 // Method io/undertow/protocols/ssl/SslConduit.getSSLEngine:()Ljavax/net/ssl/SSLEngine;
      37: astore_3
      38: new           #61                 // class java/util/concurrent/CompletableFuture
      41: dup
      42: invokespecial #62                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      45: astore        4
      47: aload_0
      48: getfield      #9                  // Field alpnManager:Lio/undertow/protocols/alpn/ALPNManager;
      51: aload_3
      52: new           #63                 // class io/undertow/server/protocol/http/AlpnOpenListener$SSLConduitUpdater
      55: dup
      56: aload_2
      57: new           #64                 // class io/undertow/server/protocol/http/AlpnOpenListener$1
      60: dup
      61: aload_0
      62: aload         4
      64: aload_1
      65: invokespecial #65                 // Method io/undertow/server/protocol/http/AlpnOpenListener$1."<init>":(Lio/undertow/server/protocol/http/AlpnOpenListener;Ljava/util/concurrent/CompletableFuture;Lorg/xnio/StreamConnection;)V
      68: invokespecial #66                 // Method io/undertow/server/protocol/http/AlpnOpenListener$SSLConduitUpdater."<init>":(Lio/undertow/protocols/ssl/SslConduit;Ljava/util/function/Function;)V
      71: invokevirtual #67                 // Method io/undertow/protocols/alpn/ALPNManager.registerEngineCallback:(Ljavax/net/ssl/SSLEngine;Ljava/util/function/Function;)V
      74: new           #68                 // class io/undertow/server/protocol/http/AlpnOpenListener$AlpnConnectionListener
      77: dup
      78: aload_0
      79: aload_1
      80: aload         4
      82: invokespecial #69                 // Method io/undertow/server/protocol/http/AlpnOpenListener$AlpnConnectionListener."<init>":(Lio/undertow/server/protocol/http/AlpnOpenListener;Lorg/xnio/StreamConnection;Ljava/util/concurrent/CompletableFuture;)V
      85: astore        5
      87: aload_1
      88: invokevirtual #70                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      91: aload         5
      93: invokevirtual #71                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
      96: aload         5
      98: aload_1
      99: invokevirtual #70                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     102: invokevirtual #72                 // Method io/undertow/server/protocol/http/AlpnOpenListener$AlpnConnectionListener.handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
     105: return

  public static boolean engineSupportsHTTP2(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method javax/net/ssl/SSLEngine.getEnabledProtocols:()[Ljava/lang/String;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_1
       8: astore_3
       9: aload_3
      10: arraylength
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     53
      23: aload_3
      24: iload         5
      26: aaload
      27: astore        6
      29: getstatic     #74                 // Field REQUIRED_PROTOCOLS:Ljava/util/Set;
      32: aload         6
      34: invokeinterface #75,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      39: ifeq          47
      42: iconst_1
      43: istore_2
      44: goto          53
      47: iinc          5, 1
      50: goto          16
      53: iload_2
      54: ifne          59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: invokevirtual #76                 // Method javax/net/ssl/SSLEngine.getEnabledCipherSuites:()[Ljava/lang/String;
      63: astore_3
      64: aload_3
      65: astore        4
      67: aload         4
      69: arraylength
      70: istore        5
      72: iconst_0
      73: istore        6
      75: iload         6
      77: iload         5
      79: if_icmpge     117
      82: aload         4
      84: iload         6
      86: aaload
      87: astore        7
      89: aload         7
      91: ldc           #78                 // String TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      93: invokevirtual #79                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifne          109
      99: aload         7
     101: ldc           #80                 // String SSL_ECDHE_RSA_WITH_AES_128_GCM_SHA256
     103: invokevirtual #79                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     106: ifeq          111
     109: iconst_1
     110: ireturn
     111: iinc          6, 1
     114: goto          75
     117: iconst_0
     118: ireturn

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #81                 // class org/xnio/StreamConnection
       5: invokevirtual #82                 // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return

  static {};
    Code:
       0: new           #83                 // class java/util/HashSet
       3: dup
       4: iconst_2
       5: anewarray     #49                 // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #84                 // String TLSv1.2
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #85                 // String TLSv1.3
      17: aastore
      18: invokestatic  #86                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokespecial #87                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      24: invokestatic  #88                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      27: putstatic     #74                 // Field REQUIRED_PROTOCOLS:Ljava/util/Set;
      30: return
}
