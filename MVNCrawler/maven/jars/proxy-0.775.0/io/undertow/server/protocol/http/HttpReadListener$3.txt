Compiled from "HttpReadListener.java"
class io.undertow.server.protocol.http.HttpReadListener$3 implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  final org.xnio.StreamConnection val$connection;

  final java.nio.ByteBuffer val$buffer;

  final io.undertow.server.protocol.http.HttpServerConnection val$serverConnection;

  final io.undertow.connector.PooledByteBuffer val$extraData;

  final io.undertow.server.protocol.http.HttpReadListener this$0;

  io.undertow.server.protocol.http.HttpReadListener$3(io.undertow.server.protocol.http.HttpReadListener, org.xnio.StreamConnection, java.nio.ByteBuffer, io.undertow.server.protocol.http.HttpServerConnection, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/HttpReadListener;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$connection:Lorg/xnio/StreamConnection;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$buffer:Ljava/nio/ByteBuffer;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$serverConnection:Lio/undertow/server/protocol/http/HttpServerConnection;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$extraData:Lio/undertow/connector/PooledByteBuffer;
      27: aload_0
      28: invokespecial #6                  // Method java/lang/Object."<init>":()V
      31: return

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/HttpReadListener;
       4: aload_0
       5: getfield      #2                  // Field val$connection:Lorg/xnio/StreamConnection;
       8: aload_0
       9: getfield      #3                  // Field val$buffer:Ljava/nio/ByteBuffer;
      12: aload_0
      13: getfield      #4                  // Field val$serverConnection:Lio/undertow/server/protocol/http/HttpServerConnection;
      16: aload_0
      17: getfield      #5                  // Field val$extraData:Lio/undertow/connector/PooledByteBuffer;
      20: invokevirtual #7                  // Method io/undertow/server/protocol/http/HttpReadListener.doHttp2PriRead:(Lorg/xnio/StreamConnection;Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/connector/PooledByteBuffer;)Z
      23: pop
      24: goto          64
      27: astore_2
      28: getstatic     #9                  // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      31: aload_2
      32: invokeinterface #10,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
      37: aload_0
      38: getfield      #2                  // Field val$connection:Lorg/xnio/StreamConnection;
      41: invokestatic  #11                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      44: goto          64
      47: astore_2
      48: getstatic     #9                  // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      51: aload_2
      52: invokeinterface #13,  2           // InterfaceMethod io/undertow/UndertowLogger.handleUnexpectedFailure:(Ljava/lang/Throwable;)V
      57: aload_0
      58: getfield      #2                  // Field val$connection:Lorg/xnio/StreamConnection;
      61: invokestatic  #11                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      64: return
    Exception table:
       from    to  target type
           0    24    27   Class java/io/IOException
           0    24    47   Class java/lang/Throwable

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #15                 // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return
}
