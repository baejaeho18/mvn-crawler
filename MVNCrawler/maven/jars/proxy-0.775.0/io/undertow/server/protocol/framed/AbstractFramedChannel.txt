Compiled from "AbstractFramedChannel.java"
public abstract class io.undertow.server.protocol.framed.AbstractFramedChannel<C extends io.undertow.server.protocol.framed.AbstractFramedChannel<C, R, S>, R extends io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>, S extends io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel<C, R, S>> implements org.xnio.channels.ConnectedChannel {
  private final int maxQueuedBuffers;

  private final org.xnio.StreamConnection channel;

  private final io.undertow.conduits.IdleTimeoutConduit idleTimeoutConduit;

  private final org.xnio.ChannelListener$SimpleSetter<C> closeSetter;

  private final org.xnio.ChannelListener$SimpleSetter<C> receiveSetter;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final io.undertow.server.protocol.framed.FramePriority<C, R, S> framePriority;

  private final java.util.List<S> pendingFrames;

  private final java.util.Deque<S> heldFrames;

  private final java.util.Deque<S> newFrames;

  private volatile long frameDataRemaining;

  private volatile R receiver;

  private volatile boolean receivesSuspendedByUser;

  private volatile boolean receivesSuspendedTooManyQueuedMessages;

  private volatile boolean receivesSuspendedTooManyBuffers;

  private final java.lang.Object lockTooManyQueuedMessages;

  private volatile int readsBroken;

  private volatile int writesBroken;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedChannel> readsBrokenUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedChannel> writesBrokenUpdater;

  private volatile io.undertow.util.ReferenceCountedPooled readData;

  private final java.util.List<org.xnio.ChannelListener<C>> closeTasks;

  private volatile boolean flushingSenders;

  private boolean partialRead;

  private volatile int outstandingBuffers;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedChannel> outstandingBuffersUpdater;

  private final java.util.concurrent.LinkedBlockingDeque<java.lang.Runnable> taskRunQueue;

  private final java.lang.Runnable taskRunQueueRunnable;

  private final org.xnio.OptionMap settings;

  private volatile boolean requireExplicitFlush;

  private volatile boolean readChannelDone;

  private final int queuedFrameHighWaterMark;

  private final int queuedFrameLowWaterMark;

  private final io.undertow.util.ReferenceCountedPooled$FreeNotifier freeNotifier;

  private static final org.xnio.ChannelListener<io.undertow.server.protocol.framed.AbstractFramedChannel> DRAIN_LISTENER;

  static final boolean $assertionsDisabled;

  protected io.undertow.server.protocol.framed.AbstractFramedChannel(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, io.undertow.server.protocol.framed.FramePriority<C, R, S>, io.undertow.connector.PooledByteBuffer, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field pendingFrames:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/ArrayDeque
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayDeque."<init>":()V
      23: putfield      #7                  // Field heldFrames:Ljava/util/Deque;
      26: aload_0
      27: new           #8                  // class java/util/concurrent/LinkedBlockingDeque
      30: dup
      31: invokespecial #9                  // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
      34: putfield      #10                 // Field newFrames:Ljava/util/Deque;
      37: aload_0
      38: iconst_1
      39: putfield      #11                 // Field receivesSuspendedByUser:Z
      42: aload_0
      43: iconst_0
      44: putfield      #12                 // Field receivesSuspendedTooManyQueuedMessages:Z
      47: aload_0
      48: iconst_0
      49: putfield      #13                 // Field receivesSuspendedTooManyBuffers:Z
      52: aload_0
      53: new           #14                 // class java/lang/Object
      56: dup
      57: invokespecial #1                  // Method java/lang/Object."<init>":()V
      60: putfield      #15                 // Field lockTooManyQueuedMessages:Ljava/lang/Object;
      63: aload_0
      64: iconst_0
      65: putfield      #16                 // Field readsBroken:I
      68: aload_0
      69: iconst_0
      70: putfield      #17                 // Field writesBroken:I
      73: aload_0
      74: aconst_null
      75: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      78: aload_0
      79: new           #19                 // class java/util/concurrent/CopyOnWriteArrayList
      82: dup
      83: invokespecial #20                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      86: putfield      #21                 // Field closeTasks:Ljava/util/List;
      89: aload_0
      90: iconst_0
      91: putfield      #22                 // Field flushingSenders:Z
      94: aload_0
      95: iconst_0
      96: putfield      #23                 // Field partialRead:Z
      99: aload_0
     100: new           #8                  // class java/util/concurrent/LinkedBlockingDeque
     103: dup
     104: invokespecial #9                  // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
     107: putfield      #24                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
     110: aload_0
     111: new           #25                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$1
     114: dup
     115: aload_0
     116: invokespecial #26                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$1."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     119: putfield      #27                 // Field taskRunQueueRunnable:Ljava/lang/Runnable;
     122: aload_0
     123: iconst_0
     124: putfield      #28                 // Field requireExplicitFlush:Z
     127: aload_0
     128: iconst_0
     129: putfield      #29                 // Field readChannelDone:Z
     132: aload_0
     133: new           #30                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$2
     136: dup
     137: aload_0
     138: invokespecial #31                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$2."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     141: putfield      #32                 // Field freeNotifier:Lio/undertow/util/ReferenceCountedPooled$FreeNotifier;
     144: aload_0
     145: aload_3
     146: putfield      #33                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
     149: aload_0
     150: aload         5
     152: getstatic     #34                 // Field io/undertow/UndertowOptions.MAX_QUEUED_READ_BUFFERS:Lorg/xnio/Option;
     155: bipush        16
     157: invokevirtual #35                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     160: putfield      #36                 // Field maxQueuedBuffers:I
     163: aload_0
     164: aload         5
     166: putfield      #37                 // Field settings:Lorg/xnio/OptionMap;
     169: aload         4
     171: ifnull        211
     174: aload         4
     176: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     181: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     184: ifeq          204
     187: aload_0
     188: new           #40                 // class io/undertow/util/ReferenceCountedPooled
     191: dup
     192: aload         4
     194: iconst_1
     195: invokespecial #41                 // Method io/undertow/util/ReferenceCountedPooled."<init>":(Lio/undertow/connector/PooledByteBuffer;I)V
     198: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     201: goto          211
     204: aload         4
     206: invokeinterface #42,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     211: aload_2
     212: ifnonnull     226
     215: getstatic     #43                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     218: ldc           #44                 // String bufferPool
     220: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     225: athrow
     226: aload_1
     227: ifnonnull     241
     230: getstatic     #43                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     233: ldc           #46                 // String connectedStreamChannel
     235: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     240: athrow
     241: aload_0
     242: aload_1
     243: invokevirtual #47                 // Method createIdleTimeoutChannel:(Lorg/xnio/StreamConnection;)Lio/undertow/conduits/IdleTimeoutConduit;
     246: astore        6
     248: aload_1
     249: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     252: aload         6
     254: invokevirtual #49                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     257: aload_1
     258: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     261: aload         6
     263: invokevirtual #51                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     266: aload_0
     267: aload         6
     269: putfield      #52                 // Field idleTimeoutConduit:Lio/undertow/conduits/IdleTimeoutConduit;
     272: aload_0
     273: aload_1
     274: putfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     277: aload_0
     278: aload_2
     279: putfield      #54                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     282: aload_0
     283: new           #55                 // class org/xnio/ChannelListener$SimpleSetter
     286: dup
     287: invokespecial #56                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
     290: putfield      #57                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     293: aload_0
     294: new           #55                 // class org/xnio/ChannelListener$SimpleSetter
     297: dup
     298: invokespecial #56                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
     301: putfield      #58                 // Field receiveSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     304: aload_0
     305: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     308: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     311: invokevirtual #59                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     314: aconst_null
     315: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     320: aload_0
     321: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     324: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     327: invokevirtual #61                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     330: aload_0
     331: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     334: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     337: invokevirtual #59                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     340: new           #62                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$FrameReadListener
     343: dup
     344: aload_0
     345: invokespecial #63                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$FrameReadListener."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     348: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     353: aload_1
     354: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     357: invokevirtual #64                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     360: new           #65                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$FrameWriteListener
     363: dup
     364: aload_0
     365: invokespecial #66                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$FrameWriteListener."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     368: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     373: new           #67                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$FrameCloseListener
     376: dup
     377: aload_0
     378: invokespecial #68                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$FrameCloseListener."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     381: astore        7
     383: aload_1
     384: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     387: invokevirtual #69                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     390: aload         7
     392: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     397: aload_1
     398: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     401: invokevirtual #70                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     404: aload         7
     406: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     411: aload_0
     412: aload         5
     414: getstatic     #71                 // Field io/undertow/UndertowOptions.QUEUED_FRAMES_HIGH_WATER_MARK:Lorg/xnio/Option;
     417: bipush        50
     419: invokevirtual #35                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     422: putfield      #72                 // Field queuedFrameHighWaterMark:I
     425: aload_0
     426: aload         5
     428: getstatic     #73                 // Field io/undertow/UndertowOptions.QUEUED_FRAMES_LOW_WATER_MARK:Lorg/xnio/Option;
     431: bipush        10
     433: invokevirtual #35                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     436: putfield      #74                 // Field queuedFrameLowWaterMark:I
     439: return

  protected io.undertow.conduits.IdleTimeoutConduit createIdleTimeoutChannel(org.xnio.StreamConnection);
    Code:
       0: new           #75                 // class io/undertow/conduits/IdleTimeoutConduit
       3: dup
       4: aload_1
       5: invokespecial #76                 // Method io/undertow/conduits/IdleTimeoutConduit."<init>":(Lorg/xnio/StreamConnection;)V
       8: areturn

  void runInIoThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #24                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
       4: aload_1
       5: invokevirtual #77                 // Method java/util/concurrent/LinkedBlockingDeque.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: invokevirtual #78                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
      13: aload_0
      14: getfield      #27                 // Field taskRunQueueRunnable:Ljava/lang/Runnable;
      17: invokevirtual #79                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      20: goto          31
      23: astore_2
      24: aload_0
      25: getfield      #27                 // Field taskRunQueueRunnable:Ljava/lang/Runnable;
      28: invokestatic  #81                 // Method io/undertow/server/protocol/framed/ShutdownFallbackExecutor.execute:(Ljava/lang/Runnable;)V
      31: return
    Exception table:
       from    to  target type
           9    20    23   Class java/util/concurrent/RejectedExecutionException

  void runNowOrInIoThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       4: invokestatic  #82                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: if_acmpne     19
      10: aload_1
      11: invokeinterface #83,  1           // InterfaceMethod java/lang/Runnable.run:()V
      16: goto          24
      19: aload_0
      20: aload_1
      21: invokevirtual #84                 // Method runInIoThread:(Ljava/lang/Runnable;)V
      24: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #54                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #85                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #86                 // Method org/xnio/StreamConnection.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #87                 // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #88                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #89                 // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
       8: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #90                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
       8: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: aload_2
       6: invokevirtual #91                 // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #92                 // Method org/xnio/StreamConnection.isOpen:()Z
       7: ireturn

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #93                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getPeerAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #94                 // Method org/xnio/StreamConnection.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public java.net.InetSocketAddress getSourceAddress();
    Code:
       0: aload_0
       1: ldc           #95                 // class java/net/InetSocketAddress
       3: invokevirtual #96                 // Method getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       6: checkcast     #95                 // class java/net/InetSocketAddress
       9: areturn

  public java.net.InetSocketAddress getDestinationAddress();
    Code:
       0: aload_0
       1: ldc           #95                 // class java/net/InetSocketAddress
       3: invokevirtual #97                 // Method getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       6: checkcast     #95                 // class java/net/InetSocketAddress
       9: areturn

  public synchronized R receive() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
       4: astore_1
       5: aload_0
       6: getfield      #29                 // Field readChannelDone:Z
       9: ifeq          54
      12: aload_0
      13: getfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      16: ifnonnull     54
      19: aload_1
      20: ifnull        32
      23: aload_1
      24: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
      27: aload_0
      28: aconst_null
      29: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      32: aload_0
      33: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
      36: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      39: invokevirtual #61                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      42: aload_0
      43: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
      46: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      49: invokevirtual #100                // Method org/xnio/conduits/ConduitStreamSourceChannel.shutdownReads:()V
      52: aconst_null
      53: areturn
      54: aload_0
      55: iconst_0
      56: putfield      #23                 // Field partialRead:Z
      59: iconst_0
      60: istore_2
      61: iconst_0
      62: istore_3
      63: iconst_0
      64: istore        4
      66: aload_1
      67: ifnonnull     81
      70: aload_0
      71: invokevirtual #101                // Method allocateReferenceCountedBuffer:()Lio/undertow/util/ReferenceCountedPooled;
      74: astore_1
      75: aload_1
      76: ifnonnull     134
      79: aconst_null
      80: areturn
      81: aload_1
      82: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
      85: ifeq          117
      88: aload_1
      89: invokevirtual #103                // Method io/undertow/util/ReferenceCountedPooled.tryUnfree:()Z
      92: ifne          106
      95: aload_0
      96: invokevirtual #101                // Method allocateReferenceCountedBuffer:()Lio/undertow/util/ReferenceCountedPooled;
      99: astore_1
     100: aload_1
     101: ifnonnull     106
     104: aconst_null
     105: areturn
     106: aload_1
     107: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     110: invokevirtual #105                // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     113: pop
     114: goto          134
     117: aload_1
     118: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     121: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     124: istore        4
     126: aload_1
     127: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     130: invokevirtual #106                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     133: pop
     134: iconst_0
     135: istore        5
     137: iconst_0
     138: istore        6
     140: aload_0
     141: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     144: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     147: aload_1
     148: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     151: invokevirtual #107                // Method org/xnio/conduits/ConduitStreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     154: istore        6
     156: iload         6
     158: ifne          280
     161: iload         4
     163: ifne          280
     166: iconst_1
     167: istore        5
     169: aconst_null
     170: astore        7
     172: aload_0
     173: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     176: ifnull        221
     179: aload_1
     180: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     183: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     186: ifeq          194
     189: iload         5
     191: ifeq          221
     194: aload_1
     195: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     198: invokevirtual #108                // Method java/nio/ByteBuffer.capacity:()I
     201: sipush        1024
     204: if_icmplt     212
     207: iload         5
     209: ifeq          217
     212: aload_0
     213: aconst_null
     214: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     217: aload_1
     218: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     221: iload_2
     222: ifeq          277
     225: aload_1
     226: ifnull        267
     229: aload_1
     230: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
     233: ifne          267
     236: aload_1
     237: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     240: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     243: iload_3
     244: if_icmpne     267
     247: aload_1
     248: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     251: aload_0
     252: aconst_null
     253: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     256: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     259: ldc           #111                // String Partial message read before connection close %s
     261: aload_0
     262: invokeinterface #112,  3          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     267: aload_0
     268: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     271: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     274: invokevirtual #113                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
     277: aload         7
     279: areturn
     280: iload         6
     282: iconst_m1
     283: if_icmpne     414
     286: iload         4
     288: ifne          414
     291: iconst_1
     292: istore        5
     294: aload_0
     295: iconst_1
     296: putfield      #29                 // Field readChannelDone:Z
     299: aload_0
     300: invokevirtual #114                // Method lastDataRead:()V
     303: aconst_null
     304: astore        7
     306: aload_0
     307: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     310: ifnull        355
     313: aload_1
     314: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     317: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     320: ifeq          328
     323: iload         5
     325: ifeq          355
     328: aload_1
     329: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     332: invokevirtual #108                // Method java/nio/ByteBuffer.capacity:()I
     335: sipush        1024
     338: if_icmplt     346
     341: iload         5
     343: ifeq          351
     346: aload_0
     347: aconst_null
     348: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     351: aload_1
     352: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     355: iload_2
     356: ifeq          411
     359: aload_1
     360: ifnull        401
     363: aload_1
     364: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
     367: ifne          401
     370: aload_1
     371: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     374: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     377: iload_3
     378: if_icmpne     401
     381: aload_1
     382: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     385: aload_0
     386: aconst_null
     387: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     390: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     393: ldc           #111                // String Partial message read before connection close %s
     395: aload_0
     396: invokeinterface #112,  3          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     401: aload_0
     402: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     405: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     408: invokevirtual #113                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
     411: aload         7
     413: areturn
     414: aload_0
     415: invokevirtual #115                // Method isLastFrameReceived:()Z
     418: ifeq          444
     421: aload_0
     422: getfield      #116                // Field frameDataRemaining:J
     425: lconst_0
     426: lcmp
     427: ifne          444
     430: iconst_1
     431: istore        5
     433: aload_0
     434: new           #117                // class java/nio/channels/ClosedChannelException
     437: dup
     438: invokespecial #118                // Method java/nio/channels/ClosedChannelException."<init>":()V
     441: invokevirtual #119                // Method markReadsBroken:(Ljava/lang/Throwable;)V
     444: aload_1
     445: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     448: invokevirtual #120                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     451: pop
     452: iload         6
     454: iconst_m1
     455: if_icmpne     468
     458: iconst_1
     459: istore_2
     460: aload_1
     461: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     464: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     467: istore_3
     468: aload_0
     469: getfield      #116                // Field frameDataRemaining:J
     472: lconst_0
     473: lcmp
     474: ifle          829
     477: aload_0
     478: getfield      #116                // Field frameDataRemaining:J
     481: aload_1
     482: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     485: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     488: i2l
     489: lcmp
     490: iflt          670
     493: aload_0
     494: dup
     495: getfield      #116                // Field frameDataRemaining:J
     498: aload_1
     499: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     502: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     505: i2l
     506: lsub
     507: putfield      #116                // Field frameDataRemaining:J
     510: aload_0
     511: getfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     514: ifnull        536
     517: aload_1
     518: invokevirtual #121                // Method io/undertow/util/ReferenceCountedPooled.createView:()Lio/undertow/connector/PooledByteBuffer;
     521: astore        7
     523: aload_0
     524: getfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     527: aconst_null
     528: aload         7
     530: invokevirtual #122                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     533: goto          545
     536: aload_1
     537: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     540: aload_0
     541: aconst_null
     542: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     545: aload_0
     546: getfield      #116                // Field frameDataRemaining:J
     549: lconst_0
     550: lcmp
     551: ifne          559
     554: aload_0
     555: aconst_null
     556: putfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     559: aconst_null
     560: astore        7
     562: aload_0
     563: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     566: ifnull        611
     569: aload_1
     570: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     573: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     576: ifeq          584
     579: iload         5
     581: ifeq          611
     584: aload_1
     585: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     588: invokevirtual #108                // Method java/nio/ByteBuffer.capacity:()I
     591: sipush        1024
     594: if_icmplt     602
     597: iload         5
     599: ifeq          607
     602: aload_0
     603: aconst_null
     604: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     607: aload_1
     608: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     611: iload_2
     612: ifeq          667
     615: aload_1
     616: ifnull        657
     619: aload_1
     620: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
     623: ifne          657
     626: aload_1
     627: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     630: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     633: iload_3
     634: if_icmpne     657
     637: aload_1
     638: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     641: aload_0
     642: aconst_null
     643: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     646: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     649: ldc           #111                // String Partial message read before connection close %s
     651: aload_0
     652: invokeinterface #112,  3          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     657: aload_0
     658: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     661: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     664: invokevirtual #113                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
     667: aload         7
     669: areturn
     670: aload_1
     671: aload_0
     672: getfield      #116                // Field frameDataRemaining:J
     675: l2i
     676: invokevirtual #123                // Method io/undertow/util/ReferenceCountedPooled.createView:(I)Lio/undertow/connector/PooledByteBuffer;
     679: astore        7
     681: aload_0
     682: lconst_0
     683: putfield      #116                // Field frameDataRemaining:J
     686: aload_0
     687: getfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     690: ifnull        706
     693: aload_0
     694: getfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     697: aconst_null
     698: aload         7
     700: invokevirtual #122                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     703: goto          713
     706: aload         7
     708: invokeinterface #42,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     713: aload_0
     714: aconst_null
     715: putfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     718: aconst_null
     719: astore        7
     721: aload_0
     722: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     725: ifnull        770
     728: aload_1
     729: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     732: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     735: ifeq          743
     738: iload         5
     740: ifeq          770
     743: aload_1
     744: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     747: invokevirtual #108                // Method java/nio/ByteBuffer.capacity:()I
     750: sipush        1024
     753: if_icmplt     761
     756: iload         5
     758: ifeq          766
     761: aload_0
     762: aconst_null
     763: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     766: aload_1
     767: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     770: iload_2
     771: ifeq          826
     774: aload_1
     775: ifnull        816
     778: aload_1
     779: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
     782: ifne          816
     785: aload_1
     786: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     789: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     792: iload_3
     793: if_icmpne     816
     796: aload_1
     797: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     800: aload_0
     801: aconst_null
     802: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     805: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     808: ldc           #111                // String Partial message read before connection close %s
     810: aload_0
     811: invokeinterface #112,  3          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     816: aload_0
     817: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     820: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     823: invokevirtual #113                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
     826: aload         7
     828: areturn
     829: aload_0
     830: aload_1
     831: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     834: invokevirtual #124                // Method parseFrame:(Ljava/nio/ByteBuffer;)Lio/undertow/server/protocol/framed/FrameHeaderData;
     837: astore        7
     839: aload         7
     841: ifnull        1286
     844: aload         7
     846: invokeinterface #125,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     851: aload_1
     852: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     855: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     858: i2l
     859: lcmp
     860: iflt          907
     863: aload_0
     864: aload         7
     866: invokeinterface #125,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     871: aload_1
     872: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     875: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     878: i2l
     879: lsub
     880: putfield      #116                // Field frameDataRemaining:J
     883: aload_1
     884: invokevirtual #121                // Method io/undertow/util/ReferenceCountedPooled.createView:()Lio/undertow/connector/PooledByteBuffer;
     887: astore        8
     889: aload_1
     890: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     893: aload_1
     894: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     897: invokevirtual #126                // Method java/nio/ByteBuffer.limit:()I
     900: invokevirtual #127                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     903: pop
     904: goto          921
     907: aload_1
     908: aload         7
     910: invokeinterface #125,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     915: l2i
     916: invokevirtual #123                // Method io/undertow/util/ReferenceCountedPooled.createView:(I)Lio/undertow/connector/PooledByteBuffer;
     919: astore        8
     921: aload         7
     923: invokeinterface #128,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getExistingChannel:()Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     928: astore        9
     930: aload         9
     932: ifnull        1096
     935: aload         7
     937: invokeinterface #125,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     942: aload         8
     944: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     949: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
     952: i2l
     953: lcmp
     954: ifle          963
     957: aload_0
     958: aload         9
     960: putfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     963: aload         9
     965: aload         7
     967: aload         8
     969: invokevirtual #122                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     972: aload_0
     973: invokevirtual #115                // Method isLastFrameReceived:()Z
     976: ifeq          985
     979: aload_0
     980: aload         9
     982: invokevirtual #129                // Method handleLastFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
     985: aconst_null
     986: astore        10
     988: aload_0
     989: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     992: ifnull        1037
     995: aload_1
     996: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     999: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1002: ifeq          1010
    1005: iload         5
    1007: ifeq          1037
    1010: aload_1
    1011: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1014: invokevirtual #108                // Method java/nio/ByteBuffer.capacity:()I
    1017: sipush        1024
    1020: if_icmplt     1028
    1023: iload         5
    1025: ifeq          1033
    1028: aload_0
    1029: aconst_null
    1030: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1033: aload_1
    1034: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1037: iload_2
    1038: ifeq          1093
    1041: aload_1
    1042: ifnull        1083
    1045: aload_1
    1046: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
    1049: ifne          1083
    1052: aload_1
    1053: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1056: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
    1059: iload_3
    1060: if_icmpne     1083
    1063: aload_1
    1064: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1067: aload_0
    1068: aconst_null
    1069: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1072: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
    1075: ldc           #111                // String Partial message read before connection close %s
    1077: aload_0
    1078: invokeinterface #112,  3          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
    1083: aload_0
    1084: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
    1087: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
    1090: invokevirtual #113                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
    1093: aload         10
    1095: areturn
    1096: aload         7
    1098: invokeinterface #125,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
    1103: aload         8
    1105: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1110: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
    1113: i2l
    1114: lcmp
    1115: ifle          1122
    1118: iconst_1
    1119: goto          1123
    1122: iconst_0
    1123: istore        10
    1125: aload_0
    1126: aload         7
    1128: aload         8
    1130: invokevirtual #130                // Method createChannel:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
    1133: astore        11
    1135: aload         11
    1137: ifnull        1167
    1140: iload         10
    1142: ifeq          1151
    1145: aload_0
    1146: aload         11
    1148: putfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
    1151: aload_0
    1152: invokevirtual #115                // Method isLastFrameReceived:()Z
    1155: ifeq          1174
    1158: aload_0
    1159: aload         11
    1161: invokevirtual #129                // Method handleLastFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
    1164: goto          1174
    1167: aload         8
    1169: invokeinterface #42,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1174: aload         11
    1176: astore        12
    1178: aload_0
    1179: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1182: ifnull        1227
    1185: aload_1
    1186: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1189: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1192: ifeq          1200
    1195: iload         5
    1197: ifeq          1227
    1200: aload_1
    1201: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1204: invokevirtual #108                // Method java/nio/ByteBuffer.capacity:()I
    1207: sipush        1024
    1210: if_icmplt     1218
    1213: iload         5
    1215: ifeq          1223
    1218: aload_0
    1219: aconst_null
    1220: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1223: aload_1
    1224: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1227: iload_2
    1228: ifeq          1283
    1231: aload_1
    1232: ifnull        1273
    1235: aload_1
    1236: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
    1239: ifne          1273
    1242: aload_1
    1243: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1246: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
    1249: iload_3
    1250: if_icmpne     1273
    1253: aload_1
    1254: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1257: aload_0
    1258: aconst_null
    1259: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1262: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
    1265: ldc           #111                // String Partial message read before connection close %s
    1267: aload_0
    1268: invokeinterface #112,  3          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
    1273: aload_0
    1274: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
    1277: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
    1280: invokevirtual #113                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
    1283: aload         12
    1285: areturn
    1286: aload_0
    1287: iconst_1
    1288: putfield      #23                 // Field partialRead:Z
    1291: aconst_null
    1292: astore        8
    1294: aload_0
    1295: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1298: ifnull        1343
    1301: aload_1
    1302: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1305: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1308: ifeq          1316
    1311: iload         5
    1313: ifeq          1343
    1316: aload_1
    1317: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1320: invokevirtual #108                // Method java/nio/ByteBuffer.capacity:()I
    1323: sipush        1024
    1326: if_icmplt     1334
    1329: iload         5
    1331: ifeq          1339
    1334: aload_0
    1335: aconst_null
    1336: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1339: aload_1
    1340: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1343: iload_2
    1344: ifeq          1399
    1347: aload_1
    1348: ifnull        1389
    1351: aload_1
    1352: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
    1355: ifne          1389
    1358: aload_1
    1359: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1362: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
    1365: iload_3
    1366: if_icmpne     1389
    1369: aload_1
    1370: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1373: aload_0
    1374: aconst_null
    1375: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1378: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
    1381: ldc           #111                // String Partial message read before connection close %s
    1383: aload_0
    1384: invokeinterface #112,  3          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
    1389: aload_0
    1390: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
    1393: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
    1396: invokevirtual #113                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
    1399: aload         8
    1401: areturn
    1402: astore        7
    1404: aload_0
    1405: aload         7
    1407: invokevirtual #119                // Method markReadsBroken:(Ljava/lang/Throwable;)V
    1410: iconst_1
    1411: istore        5
    1413: aload         7
    1415: athrow
    1416: astore        13
    1418: aload_0
    1419: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1422: ifnull        1467
    1425: aload_1
    1426: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1429: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1432: ifeq          1440
    1435: iload         5
    1437: ifeq          1467
    1440: aload_1
    1441: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1444: invokevirtual #108                // Method java/nio/ByteBuffer.capacity:()I
    1447: sipush        1024
    1450: if_icmplt     1458
    1453: iload         5
    1455: ifeq          1463
    1458: aload_0
    1459: aconst_null
    1460: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1463: aload_1
    1464: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1467: iload_2
    1468: ifeq          1523
    1471: aload_1
    1472: ifnull        1513
    1475: aload_1
    1476: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
    1479: ifne          1513
    1482: aload_1
    1483: invokevirtual #104                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1486: invokevirtual #109                // Method java/nio/ByteBuffer.remaining:()I
    1489: iload_3
    1490: if_icmpne     1513
    1493: aload_1
    1494: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1497: aload_0
    1498: aconst_null
    1499: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1502: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
    1505: ldc           #111                // String Partial message read before connection close %s
    1507: aload_0
    1508: invokeinterface #112,  3          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
    1513: aload_0
    1514: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
    1517: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
    1520: invokevirtual #113                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
    1523: aload         13
    1525: athrow
    Exception table:
       from    to  target type
         140   172  1402   Class java/io/IOException
         140   172  1402   Class java/lang/RuntimeException
         140   172  1402   Class java/lang/Error
         280   306  1402   Class java/io/IOException
         280   306  1402   Class java/lang/RuntimeException
         280   306  1402   Class java/lang/Error
         414   562  1402   Class java/io/IOException
         414   562  1402   Class java/lang/RuntimeException
         414   562  1402   Class java/lang/Error
         670   721  1402   Class java/io/IOException
         670   721  1402   Class java/lang/RuntimeException
         670   721  1402   Class java/lang/Error
         829   988  1402   Class java/io/IOException
         829   988  1402   Class java/lang/RuntimeException
         829   988  1402   Class java/lang/Error
        1096  1178  1402   Class java/io/IOException
        1096  1178  1402   Class java/lang/RuntimeException
        1096  1178  1402   Class java/lang/Error
        1286  1294  1402   Class java/io/IOException
        1286  1294  1402   Class java/lang/RuntimeException
        1286  1294  1402   Class java/lang/Error
         140   172  1416   any
         280   306  1416   any
         414   562  1416   any
         670   721  1416   any
         829   988  1416   any
        1096  1178  1416   any
        1286  1294  1416   any
        1402  1418  1416   any

  private void handleLastFrame(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel);
    Code:
       0: new           #134                // class java/util/HashSet
       3: dup
       4: aload_0
       5: invokevirtual #135                // Method getReceivers:()Ljava/util/Collection;
       8: invokespecial #136                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      11: astore_2
      12: aload_2
      13: invokeinterface #137,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #138,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          53
      28: aload_3
      29: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #140                // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel
      37: astore        4
      39: aload         4
      41: aload_1
      42: if_acmpeq     50
      45: aload         4
      47: invokevirtual #141                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.markStreamBroken:()V
      50: goto          19
      53: return

  private io.undertow.util.ReferenceCountedPooled allocateReferenceCountedBuffer();
    Code:
       0: aload_0
       1: getfield      #36                 // Field maxQueuedBuffers:I
       4: ifle          134
       7: getstatic     #142                // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: aload_0
      11: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: getfield      #36                 // Field maxQueuedBuffers:I
      20: if_icmpge     30
      23: aload_0
      24: getfield      #13                 // Field receivesSuspendedTooManyBuffers:Z
      27: ifeq          120
      30: aload_0
      31: getfield      #15                 // Field lockTooManyQueuedMessages:Ljava/lang/Object;
      34: dup
      35: astore_2
      36: monitorenter
      37: aload_0
      38: getfield      #13                 // Field receivesSuspendedTooManyBuffers:Z
      41: ifeq          48
      44: aconst_null
      45: aload_2
      46: monitorexit
      47: areturn
      48: getstatic     #142                // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      51: aload_0
      52: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      55: istore_1
      56: iload_1
      57: aload_0
      58: getfield      #36                 // Field maxQueuedBuffers:I
      61: if_icmplt     110
      64: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      67: invokeinterface #144,  1          // InterfaceMethod io/undertow/UndertowLogger.isTraceEnabled:()Z
      72: ifeq          86
      75: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      78: ldc           #145                // String Suspending reads on %s due to too many outstanding buffers
      80: aload_0
      81: invokeinterface #146,  3          // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      86: aload_0
      87: iconst_1
      88: putfield      #13                 // Field receivesSuspendedTooManyBuffers:Z
      91: aload_0
      92: new           #147                // class io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState
      95: dup
      96: aload_0
      97: aconst_null
      98: aconst_null
      99: aconst_null
     100: invokespecial #148                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
     103: invokevirtual #149                // Method runNowOrInIoThread:(Ljava/lang/Runnable;)V
     106: aconst_null
     107: aload_2
     108: monitorexit
     109: areturn
     110: aload_2
     111: monitorexit
     112: goto          120
     115: astore_3
     116: aload_2
     117: monitorexit
     118: aload_3
     119: athrow
     120: getstatic     #142                // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     123: aload_0
     124: iload_1
     125: iload_1
     126: iconst_1
     127: iadd
     128: invokevirtual #150                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     131: ifeq          7
     134: aload_0
     135: getfield      #54                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     138: invokeinterface #151,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     143: astore_1
     144: aload_0
     145: new           #40                 // class io/undertow/util/ReferenceCountedPooled
     148: dup
     149: aload_1
     150: iconst_1
     151: aload_0
     152: getfield      #36                 // Field maxQueuedBuffers:I
     155: ifle          165
     158: aload_0
     159: getfield      #32                 // Field freeNotifier:Lio/undertow/util/ReferenceCountedPooled$FreeNotifier;
     162: goto          166
     165: aconst_null
     166: invokespecial #152                // Method io/undertow/util/ReferenceCountedPooled."<init>":(Lio/undertow/connector/PooledByteBuffer;ILio/undertow/util/ReferenceCountedPooled$FreeNotifier;)V
     169: dup_x1
     170: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     173: areturn
    Exception table:
       from    to  target type
          37    47   115   any
          48   109   115   any
         110   112   115   any
         115   118   115   any

  protected void lastDataRead();
    Code:
       0: return

  protected abstract R createChannel(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;

  protected abstract io.undertow.server.protocol.framed.FrameHeaderData parseFrame(java.nio.ByteBuffer) throws java.io.IOException;

  protected synchronized void recalculateHeldFrames() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field heldFrames:Ljava/util/Deque;
       4: invokeinterface #153,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifne          34
      12: aload_0
      13: getfield      #33                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
      16: aconst_null
      17: aload_0
      18: getfield      #4                  // Field pendingFrames:Ljava/util/List;
      21: aload_0
      22: getfield      #7                  // Field heldFrames:Ljava/util/Deque;
      25: invokeinterface #154,  4          // InterfaceMethod io/undertow/server/protocol/framed/FramePriority.frameAdded:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;Ljava/util/List;Ljava/util/Deque;)V
      30: aload_0
      31: invokevirtual #155                // Method flushSenders:()V
      34: return

  protected synchronized void flushSenders();
    Code:
       0: aload_0
       1: getfield      #22                 // Field flushingSenders:Z
       4: ifeq          16
       7: getstatic     #43                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #156,  1          // InterfaceMethod io/undertow/UndertowMessages.recursiveCallToFlushingSenders:()Ljava/lang/RuntimeException;
      15: athrow
      16: aload_0
      17: iconst_1
      18: putfield      #22                 // Field flushingSenders:Z
      21: iconst_0
      22: istore_1
      23: aload_0
      24: getfield      #10                 // Field newFrames:Ljava/util/Deque;
      27: invokeinterface #157,  1          // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      32: checkcast     #158                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
      35: dup
      36: astore_2
      37: ifnull        112
      40: aload_2
      41: invokevirtual #159                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.preWrite:()V
      44: aload_0
      45: getfield      #33                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
      48: aload_2
      49: aload_0
      50: getfield      #4                  // Field pendingFrames:Ljava/util/List;
      53: invokeinterface #160,  3          // InterfaceMethod io/undertow/server/protocol/framed/FramePriority.insertFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;Ljava/util/List;)Z
      58: ifeq          94
      61: aload_0
      62: getfield      #7                  // Field heldFrames:Ljava/util/Deque;
      65: invokeinterface #153,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      70: ifne          23
      73: aload_0
      74: getfield      #33                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
      77: aload_2
      78: aload_0
      79: getfield      #4                  // Field pendingFrames:Ljava/util/List;
      82: aload_0
      83: getfield      #7                  // Field heldFrames:Ljava/util/Deque;
      86: invokeinterface #154,  4          // InterfaceMethod io/undertow/server/protocol/framed/FramePriority.frameAdded:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;Ljava/util/List;Ljava/util/Deque;)V
      91: goto          23
      94: aload_2
      95: invokevirtual #161                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.addReadyForFlushTask:()V
      98: aload_0
      99: getfield      #7                  // Field heldFrames:Ljava/util/Deque;
     102: aload_2
     103: invokeinterface #162,  2          // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     108: pop
     109: goto          23
     112: iconst_0
     113: istore_3
     114: aload_0
     115: getfield      #4                  // Field pendingFrames:Ljava/util/List;
     118: invokeinterface #163,  1          // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
     123: astore        4
     125: aload         4
     127: invokeinterface #164,  1          // InterfaceMethod java/util/ListIterator.hasNext:()Z
     132: ifeq          171
     135: aload         4
     137: invokeinterface #165,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
     142: checkcast     #158                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     145: astore        5
     147: aload         5
     149: invokevirtual #166                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isReadyForFlush:()Z
     152: ifeq          171
     155: iinc          1, 1
     158: aload         5
     160: invokevirtual #167                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isLastFrame:()Z
     163: ifeq          168
     166: iconst_1
     167: istore_3
     168: goto          125
     171: iload_1
     172: ifne          244
     175: aload_0
     176: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     179: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     182: invokevirtual #168                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     185: ifeq          198
     188: aload_0
     189: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     192: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     195: invokevirtual #169                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
     198: goto          216
     201: astore        5
     203: aload_0
     204: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     207: invokestatic  #171                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     210: aload_0
     211: aload         5
     213: invokevirtual #172                // Method markWritesBroken:(Ljava/lang/Throwable;)V
     216: aload_0
     217: iconst_0
     218: putfield      #22                 // Field flushingSenders:Z
     221: aload_0
     222: getfield      #10                 // Field newFrames:Ljava/util/Deque;
     225: invokeinterface #153,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
     230: ifne          243
     233: aload_0
     234: aload_0
     235: invokedynamic #173,  0            // InvokeDynamic #0:run:(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)Ljava/lang/Runnable;
     240: invokevirtual #84                 // Method runInIoThread:(Ljava/lang/Runnable;)V
     243: return
     244: iload_1
     245: iconst_3
     246: imul
     247: anewarray     #174                // class java/nio/ByteBuffer
     250: astore        5
     252: iconst_0
     253: istore        6
     255: aload_0
     256: getfield      #4                  // Field pendingFrames:Ljava/util/List;
     259: invokeinterface #163,  1          // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
     264: astore        4
     266: iload         6
     268: iload_1
     269: if_icmpge     386
     272: aload         4
     274: invokeinterface #165,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
     279: checkcast     #158                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     282: astore        7
     284: aload         7
     286: invokevirtual #175                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameHeader:()Lio/undertow/server/protocol/framed/SendFrameHeader;
     289: astore        8
     291: aload         8
     293: invokevirtual #176                // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     296: astore        9
     298: aload         8
     300: invokevirtual #177                // Method io/undertow/server/protocol/framed/SendFrameHeader.getTrailer:()Ljava/nio/ByteBuffer;
     303: astore        10
     305: aload         5
     307: iload         6
     309: iconst_3
     310: imul
     311: aload         9
     313: ifnull        326
     316: aload         9
     318: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     323: goto          329
     326: getstatic     #178                // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
     329: aastore
     330: aload         5
     332: iload         6
     334: iconst_3
     335: imul
     336: iconst_1
     337: iadd
     338: aload         7
     340: invokevirtual #179                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     343: ifnonnull     352
     346: getstatic     #178                // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
     349: goto          357
     352: aload         7
     354: invokevirtual #179                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     357: aastore
     358: aload         5
     360: iload         6
     362: iconst_3
     363: imul
     364: iconst_2
     365: iadd
     366: aload         10
     368: ifnull        376
     371: aload         10
     373: goto          379
     376: getstatic     #178                // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
     379: aastore
     380: iinc          6, 1
     383: goto          266
     386: aload         5
     388: invokestatic  #180                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     391: lstore        7
     393: aload_0
     394: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     397: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     400: aload         5
     402: invokevirtual #181                // Method org/xnio/conduits/ConduitStreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     405: lstore        9
     407: lload         7
     409: lload         9
     411: lsub
     412: lstore        7
     414: lload         9
     416: lconst_0
     417: lcmp
     418: ifle          428
     421: lload         7
     423: lconst_0
     424: lcmp
     425: ifgt          393
     428: iload_1
     429: istore        11
     431: iload         11
     433: ifle          547
     436: aload_0
     437: getfield      #4                  // Field pendingFrames:Ljava/util/List;
     440: iconst_0
     441: invokeinterface #182,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     446: checkcast     #158                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     449: astore        12
     451: aload         12
     453: invokevirtual #175                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameHeader:()Lio/undertow/server/protocol/framed/SendFrameHeader;
     456: invokevirtual #176                // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     459: astore        13
     461: aload         12
     463: invokevirtual #175                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameHeader:()Lio/undertow/server/protocol/framed/SendFrameHeader;
     466: invokevirtual #177                // Method io/undertow/server/protocol/framed/SendFrameHeader.getTrailer:()Ljava/nio/ByteBuffer;
     469: astore        14
     471: aload         13
     473: ifnull        489
     476: aload         13
     478: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     483: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     486: ifne          547
     489: aload         12
     491: invokevirtual #179                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     494: ifnull        508
     497: aload         12
     499: invokevirtual #179                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     502: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     505: ifne          547
     508: aload         14
     510: ifnull        524
     513: aload         14
     515: invokevirtual #39                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     518: ifeq          524
     521: goto          547
     524: aload         12
     526: invokevirtual #183                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.flushComplete:()V
     529: aload_0
     530: getfield      #4                  // Field pendingFrames:Ljava/util/List;
     533: aload         12
     535: invokeinterface #184,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     540: pop
     541: iinc          11, -1
     544: goto          431
     547: aload_0
     548: getfield      #4                  // Field pendingFrames:Ljava/util/List;
     551: invokeinterface #185,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     556: ifeq          572
     559: aload_0
     560: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     563: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     566: invokevirtual #168                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     569: ifne          585
     572: aload_0
     573: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     576: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     579: invokevirtual #186                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     582: goto          595
     585: aload_0
     586: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     589: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     592: invokevirtual #169                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
     595: aload_0
     596: getfield      #4                  // Field pendingFrames:Ljava/util/List;
     599: invokeinterface #185,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     604: ifeq          662
     607: iload_3
     608: ifeq          662
     611: aload_0
     612: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     615: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     618: invokevirtual #187                // Method org/xnio/conduits/ConduitStreamSinkChannel.shutdownWrites:()V
     621: aload_0
     622: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     625: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     628: invokevirtual #168                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     631: ifne          738
     634: aload_0
     635: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     638: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     641: aconst_null
     642: aconst_null
     643: invokestatic  #188                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     646: invokevirtual #189                // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
     649: aload_0
     650: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     653: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     656: invokevirtual #186                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     659: goto          738
     662: aload_0
     663: getfield      #4                  // Field pendingFrames:Ljava/util/List;
     666: invokeinterface #190,  1          // InterfaceMethod java/util/List.size:()I
     671: aload_0
     672: getfield      #72                 // Field queuedFrameHighWaterMark:I
     675: if_icmple     698
     678: new           #147                // class io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState
     681: dup
     682: aload_0
     683: aconst_null
     684: aconst_null
     685: iconst_1
     686: invokestatic  #191                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     689: invokespecial #148                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
     692: invokevirtual #192                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState.run:()V
     695: goto          738
     698: aload_0
     699: getfield      #12                 // Field receivesSuspendedTooManyQueuedMessages:Z
     702: ifeq          738
     705: aload_0
     706: getfield      #4                  // Field pendingFrames:Ljava/util/List;
     709: invokeinterface #190,  1          // InterfaceMethod java/util/List.size:()I
     714: aload_0
     715: getfield      #74                 // Field queuedFrameLowWaterMark:I
     718: if_icmpge     738
     721: new           #147                // class io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState
     724: dup
     725: aload_0
     726: aconst_null
     727: aconst_null
     728: iconst_0
     729: invokestatic  #191                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     732: invokespecial #148                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
     735: invokevirtual #192                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState.run:()V
     738: goto          756
     741: astore        7
     743: aload_0
     744: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     747: invokestatic  #171                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     750: aload_0
     751: aload         7
     753: invokevirtual #172                // Method markWritesBroken:(Ljava/lang/Throwable;)V
     756: aload_0
     757: iconst_0
     758: putfield      #22                 // Field flushingSenders:Z
     761: aload_0
     762: getfield      #10                 // Field newFrames:Ljava/util/Deque;
     765: invokeinterface #153,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
     770: ifne          818
     773: aload_0
     774: aload_0
     775: invokedynamic #173,  0            // InvokeDynamic #0:run:(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)Ljava/lang/Runnable;
     780: invokevirtual #84                 // Method runInIoThread:(Ljava/lang/Runnable;)V
     783: goto          818
     786: astore        15
     788: aload_0
     789: iconst_0
     790: putfield      #22                 // Field flushingSenders:Z
     793: aload_0
     794: getfield      #10                 // Field newFrames:Ljava/util/Deque;
     797: invokeinterface #153,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
     802: ifne          815
     805: aload_0
     806: aload_0
     807: invokedynamic #173,  0            // InvokeDynamic #0:run:(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)Ljava/lang/Runnable;
     812: invokevirtual #84                 // Method runInIoThread:(Ljava/lang/Runnable;)V
     815: aload         15
     817: athrow
     818: return
    Exception table:
       from    to  target type
         175   198   201   Class java/lang/Throwable
         266   738   741   Class java/io/IOException
         266   738   741   Class java/lang/RuntimeException
         266   738   741   Class java/lang/Error
          21   216   786   any
         244   756   786   any
         786   788   786   any

  void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #193                // Method org/xnio/conduits/ConduitStreamSinkChannel.awaitWritable:()V
      10: return

  void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: lload_1
       8: aload_3
       9: invokevirtual #194                // Method org/xnio/conduits/ConduitStreamSinkChannel.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      12: return

  protected void queueFrame(S) throws java.io.IOException;
    Code:
       0: getstatic     #195                // Field $assertionsDisabled:Z
       3: ifne          27
       6: aload_0
       7: getfield      #10                 // Field newFrames:Ljava/util/Deque;
      10: aload_1
      11: invokeinterface #196,  2          // InterfaceMethod java/util/Deque.contains:(Ljava/lang/Object;)Z
      16: ifeq          27
      19: new           #197                // class java/lang/AssertionError
      22: dup
      23: invokespecial #198                // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: aload_0
      28: invokevirtual #199                // Method isWritesBroken:()Z
      31: ifne          61
      34: aload_0
      35: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
      38: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      41: invokevirtual #200                // Method org/xnio/conduits/ConduitStreamSinkChannel.isOpen:()Z
      44: ifeq          61
      47: aload_1
      48: invokevirtual #201                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isBroken:()Z
      51: ifne          61
      54: aload_1
      55: invokevirtual #202                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isOpen:()Z
      58: ifne          74
      61: aload_1
      62: invokestatic  #171                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      65: getstatic     #43                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      68: invokeinterface #203,  1          // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      73: athrow
      74: aload_0
      75: getfield      #10                 // Field newFrames:Ljava/util/Deque;
      78: aload_1
      79: invokeinterface #162,  2          // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_0
      86: getfield      #28                 // Field requireExplicitFlush:Z
      89: ifeq          99
      92: aload_1
      93: invokevirtual #204                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isBufferFull:()Z
      96: ifeq          103
      99: aload_0
     100: invokevirtual #205                // Method flush:()V
     103: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #22                 // Field flushingSenders:Z
       4: ifne          17
       7: aload_0
       8: aload_0
       9: invokedynamic #173,  0            // InvokeDynamic #0:run:(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)Ljava/lang/Runnable;
      14: invokevirtual #149                // Method runNowOrInIoThread:(Ljava/lang/Runnable;)V
      17: return

  protected abstract boolean isLastFrameReceived();

  protected abstract boolean isLastFrameSent();

  protected abstract void handleBrokenSourceChannel(java.lang.Throwable);

  protected abstract void handleBrokenSinkChannel(java.lang.Throwable);

  public org.xnio.ChannelListener$Setter<C> getReceiveSetter();
    Code:
       0: aload_0
       1: getfield      #58                 // Field receiveSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public synchronized void suspendReceives();
    Code:
       0: aload_0
       1: getfield      #11                 // Field receivesSuspendedByUser:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #11                 // Field receivesSuspendedByUser:Z
      13: aload_0
      14: new           #147                // class io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState
      17: dup
      18: aload_0
      19: aconst_null
      20: aconst_null
      21: aconst_null
      22: invokespecial #148                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
      25: invokevirtual #149                // Method runNowOrInIoThread:(Ljava/lang/Runnable;)V
      28: return

  public synchronized void resumeReceives();
    Code:
       0: aload_0
       1: getfield      #11                 // Field receivesSuspendedByUser:Z
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_0
      10: putfield      #11                 // Field receivesSuspendedByUser:Z
      13: aload_0
      14: new           #147                // class io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState
      17: dup
      18: aload_0
      19: aconst_null
      20: aconst_null
      21: aconst_null
      22: invokespecial #148                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$UpdateResumeState."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
      25: invokevirtual #84                 // Method runInIoThread:(Ljava/lang/Runnable;)V
      28: return

  private void doResume();
    Code:
       0: aload_0
       1: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_1
      10: invokevirtual #102                // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
      13: ifne          29
      16: aload_0
      17: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
      20: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      23: invokevirtual #113                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
      26: goto          39
      29: aload_0
      30: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
      33: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      36: invokevirtual #206                // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      39: return

  public boolean isReceivesResumed();
    Code:
       0: aload_0
       1: getfield      #11                 // Field receivesSuspendedByUser:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
       3: invokeinterface #144,  1          // InterfaceMethod io/undertow/UndertowLogger.isTraceEnabled:()Z
       8: ifeq          29
      11: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      14: new           #117                // class java/nio/channels/ClosedChannelException
      17: dup
      18: invokespecial #118                // Method java/nio/channels/ClosedChannelException."<init>":()V
      21: ldc           #207                // String Channel %s is being closed
      23: aload_0
      24: invokeinterface #208,  4          // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
      33: invokestatic  #171                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      36: aload_0
      37: getfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      40: astore_1
      41: aload_1
      42: ifnull        54
      45: aload_1
      46: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
      49: aload_0
      50: aconst_null
      51: putfield      #18                 // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      54: aload_0
      55: invokevirtual #209                // Method closeSubChannels:()V
      58: return

  public org.xnio.ChannelListener$Setter<? extends io.undertow.server.protocol.framed.AbstractFramedChannel> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #57                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  protected void markReadsBroken(java.lang.Throwable);
    Code:
       0: getstatic     #210                // Field readsBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #150                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          115
      12: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      15: invokeinterface #211,  1          // InterfaceMethod io/undertow/UndertowLogger.isDebugEnabled:()Z
      20: ifeq          41
      23: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      26: new           #117                // class java/nio/channels/ClosedChannelException
      29: dup
      30: invokespecial #118                // Method java/nio/channels/ClosedChannelException."<init>":()V
      33: ldc           #212                // String Marking reads broken on channel %s
      35: aload_0
      36: invokeinterface #213,  4          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_0
      42: getfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      45: ifnull        55
      48: aload_0
      49: getfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      52: invokevirtual #141                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.markStreamBroken:()V
      55: new           #214                // class java/util/ArrayList
      58: dup
      59: aload_0
      60: invokevirtual #135                // Method getReceivers:()Ljava/util/Collection;
      63: invokespecial #215                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      66: invokevirtual #216                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      69: astore_2
      70: aload_2
      71: invokeinterface #138,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          96
      79: aload_2
      80: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #140                // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel
      88: astore_3
      89: aload_3
      90: invokevirtual #141                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.markStreamBroken:()V
      93: goto          70
      96: aload_0
      97: aload_1
      98: invokevirtual #217                // Method handleBrokenSourceChannel:(Ljava/lang/Throwable;)V
     101: aload_0
     102: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
     105: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     108: invokestatic  #171                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     111: aload_0
     112: invokevirtual #209                // Method closeSubChannels:()V
     115: return

  protected abstract void closeSubChannels();

  protected void markWritesBroken(java.lang.Throwable);
    Code:
       0: getstatic     #218                // Field writesBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #150                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          213
      12: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      15: invokeinterface #211,  1          // InterfaceMethod io/undertow/UndertowLogger.isDebugEnabled:()Z
      20: ifeq          41
      23: getstatic     #110                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      26: new           #117                // class java/nio/channels/ClosedChannelException
      29: dup
      30: invokespecial #118                // Method java/nio/channels/ClosedChannelException."<init>":()V
      33: ldc           #219                // String Marking writes broken on channel %s
      35: aload_0
      36: invokeinterface #213,  4          // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: invokevirtual #220                // Method handleBrokenSinkChannel:(Ljava/lang/Throwable;)V
      46: aload_0
      47: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
      50: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      53: invokestatic  #171                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      56: aload_0
      57: dup
      58: astore_2
      59: monitorenter
      60: aload_0
      61: getfield      #4                  // Field pendingFrames:Ljava/util/List;
      64: invokeinterface #221,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      69: astore_3
      70: aload_3
      71: invokeinterface #138,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          98
      79: aload_3
      80: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #158                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
      88: astore        4
      90: aload         4
      92: invokevirtual #222                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.markBroken:()V
      95: goto          70
      98: aload_0
      99: getfield      #4                  // Field pendingFrames:Ljava/util/List;
     102: invokeinterface #223,  1          // InterfaceMethod java/util/List.clear:()V
     107: aload_0
     108: getfield      #10                 // Field newFrames:Ljava/util/Deque;
     111: invokeinterface #224,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
     116: astore_3
     117: aload_3
     118: invokeinterface #138,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     123: ifeq          145
     126: aload_3
     127: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     132: checkcast     #158                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     135: astore        4
     137: aload         4
     139: invokevirtual #222                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.markBroken:()V
     142: goto          117
     145: aload_0
     146: getfield      #10                 // Field newFrames:Ljava/util/Deque;
     149: invokeinterface #225,  1          // InterfaceMethod java/util/Deque.clear:()V
     154: aload_0
     155: getfield      #7                  // Field heldFrames:Ljava/util/Deque;
     158: invokeinterface #224,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
     163: astore_3
     164: aload_3
     165: invokeinterface #138,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     170: ifeq          192
     173: aload_3
     174: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     179: checkcast     #158                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     182: astore        4
     184: aload         4
     186: invokevirtual #222                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.markBroken:()V
     189: goto          164
     192: aload_0
     193: getfield      #7                  // Field heldFrames:Ljava/util/Deque;
     196: invokeinterface #225,  1          // InterfaceMethod java/util/Deque.clear:()V
     201: aload_2
     202: monitorexit
     203: goto          213
     206: astore        5
     208: aload_2
     209: monitorexit
     210: aload         5
     212: athrow
     213: return
    Exception table:
       from    to  target type
          60   203   206   any
         206   210   206   any

  protected boolean isWritesBroken();
    Code:
       0: getstatic     #218                // Field writesBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected boolean isReadsBroken();
    Code:
       0: getstatic     #210                // Field readsBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  void resumeWrites();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #186                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      10: return

  void suspendWrites();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #169                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      10: return

  void wakeupWrites();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #50                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #226                // Method org/xnio/conduits/ConduitStreamSinkChannel.wakeupWrites:()V
      10: return

  org.xnio.channels.StreamSourceChannel getSourceChannel();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #48                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
       7: areturn

  void notifyFrameReadComplete(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>);
    Code:
       0: return

  private boolean isReadsSuspended();
    Code:
       0: aload_0
       1: getfield      #11                 // Field receivesSuspendedByUser:Z
       4: ifne          21
       7: aload_0
       8: getfield      #13                 // Field receivesSuspendedTooManyBuffers:Z
      11: ifne          21
      14: aload_0
      15: getfield      #12                 // Field receivesSuspendedTooManyQueuedMessages:Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected abstract java.util.Collection<io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>> getReceivers();

  public void setIdleTimeout(long);
    Code:
       0: aload_0
       1: getfield      #52                 // Field idleTimeoutConduit:Lio/undertow/conduits/IdleTimeoutConduit;
       4: lload_1
       5: invokevirtual #227                // Method io/undertow/conduits/IdleTimeoutConduit.setIdleTimeout:(J)V
       8: return

  public long getIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #52                 // Field idleTimeoutConduit:Lio/undertow/conduits/IdleTimeoutConduit;
       4: invokevirtual #228                // Method io/undertow/conduits/IdleTimeoutConduit.getIdleTimeout:()J
       7: lreturn

  protected io.undertow.server.protocol.framed.FramePriority<C, R, S> getFramePriority();
    Code:
       0: aload_0
       1: getfield      #33                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
       4: areturn

  public void addCloseTask(org.xnio.ChannelListener<C>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field closeTasks:Ljava/util/List;
       4: aload_1
       5: invokeinterface #229,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.lang.String toString();
    Code:
       0: new           #230                // class java/lang/StringBuilder
       3: dup
       4: sipush        150
       7: invokespecial #231                // Method java/lang/StringBuilder."<init>":(I)V
      10: astore_1
      11: aload_1
      12: aload_0
      13: invokevirtual #232                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #233                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      19: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #235                // String  peer
      24: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
      31: invokevirtual #93                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      34: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc           #237                // String  local
      39: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
      46: invokevirtual #85                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
      49: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #238                // String [
      54: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: aload_0
      59: dup
      60: astore_2
      61: monitorenter
      62: aload_1
      63: aload_0
      64: getfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      67: ifnonnull     75
      70: ldc           #239                // String No Receiver
      72: goto          82
      75: aload_0
      76: getfield      #98                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      79: invokevirtual #240                // Method java/lang/Object.toString:()Ljava/lang/String;
      82: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #241                // String
      87: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: getfield      #4                  // Field pendingFrames:Ljava/util/List;
      94: invokevirtual #240                // Method java/lang/Object.toString:()Ljava/lang/String;
      97: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: ldc           #242                // String  --
     102: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: getfield      #7                  // Field heldFrames:Ljava/util/Deque;
     109: invokevirtual #240                // Method java/lang/Object.toString:()Ljava/lang/String;
     112: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #242                // String  --
     117: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: getfield      #10                 // Field newFrames:Ljava/util/Deque;
     124: invokevirtual #240                // Method java/lang/Object.toString:()Ljava/lang/String;
     127: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: pop
     131: aload_2
     132: monitorexit
     133: goto          141
     136: astore_3
     137: aload_2
     138: monitorexit
     139: aload_3
     140: athrow
     141: aload_1
     142: invokevirtual #243                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: areturn
    Exception table:
       from    to  target type
          62   133   136   any
         136   139   136   any

  protected org.xnio.StreamConnection getUnderlyingConnection();
    Code:
       0: aload_0
       1: getfield      #53                 // Field channel:Lorg/xnio/StreamConnection;
       4: areturn

  protected org.xnio.ChannelExceptionHandler<org.xnio.channels.SuspendableWriteChannel> writeExceptionHandler();
    Code:
       0: new           #244                // class io/undertow/server/protocol/framed/AbstractFramedChannel$4
       3: dup
       4: aload_0
       5: invokespecial #245                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$4."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
       8: areturn

  public boolean isRequireExplicitFlush();
    Code:
       0: aload_0
       1: getfield      #28                 // Field requireExplicitFlush:Z
       4: ireturn

  public void setRequireExplicitFlush(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field requireExplicitFlush:Z
       5: return

  protected org.xnio.OptionMap getSettings();
    Code:
       0: aload_0
       1: getfield      #37                 // Field settings:Lorg/xnio/OptionMap;
       4: areturn

  static {};
    Code:
       0: ldc           #246                // class io/undertow/server/protocol/framed/AbstractFramedChannel
       2: invokevirtual #247                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #195                // Field $assertionsDisabled:Z
      16: ldc           #246                // class io/undertow/server/protocol/framed/AbstractFramedChannel
      18: ldc           #248                // String readsBroken
      20: invokestatic  #249                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      23: putstatic     #210                // Field readsBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      26: ldc           #246                // class io/undertow/server/protocol/framed/AbstractFramedChannel
      28: ldc           #250                // String writesBroken
      30: invokestatic  #249                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      33: putstatic     #218                // Field writesBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      36: ldc           #246                // class io/undertow/server/protocol/framed/AbstractFramedChannel
      38: ldc           #251                // String outstandingBuffers
      40: invokestatic  #249                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      43: putstatic     #142                // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      46: new           #252                // class io/undertow/server/protocol/framed/AbstractFramedChannel$3
      49: dup
      50: invokespecial #253                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$3."<init>":()V
      53: putstatic     #254                // Field DRAIN_LISTENER:Lorg/xnio/ChannelListener;
      56: return
}
