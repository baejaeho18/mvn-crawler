Compiled from "AbstractServerConnection.java"
public abstract class io.undertow.server.AbstractServerConnection extends io.undertow.server.ServerConnection {
  protected final org.xnio.StreamConnection channel;

  protected final io.undertow.server.AbstractServerConnection$CloseSetter closeSetter;

  protected final io.undertow.connector.ByteBufferPool bufferPool;

  protected final io.undertow.server.HttpHandler rootHandler;

  protected final org.xnio.OptionMap undertowOptions;

  protected final org.xnio.conduits.StreamSourceConduit originalSourceConduit;

  protected final org.xnio.conduits.StreamSinkConduit originalSinkConduit;

  protected final java.util.List<io.undertow.server.ServerConnection$CloseListener> closeListeners;

  protected io.undertow.server.HttpServerExchange current;

  private final int bufferSize;

  private io.undertow.server.XnioBufferPoolAdaptor poolAdaptor;

  protected io.undertow.connector.PooledByteBuffer extraBytes;

  public io.undertow.server.AbstractServerConnection(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, io.undertow.server.HttpHandler, org.xnio.OptionMap, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/undertow/server/ServerConnection."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field closeListeners:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field rootHandler:Lio/undertow/server/HttpHandler;
      30: aload_0
      31: aload         4
      33: putfield      #8                  // Field undertowOptions:Lorg/xnio/OptionMap;
      36: aload_0
      37: iload         5
      39: putfield      #9                  // Field bufferSize:I
      42: aload_0
      43: new           #10                 // class io/undertow/server/AbstractServerConnection$CloseSetter
      46: dup
      47: aload_0
      48: invokespecial #11                 // Method io/undertow/server/AbstractServerConnection$CloseSetter."<init>":(Lio/undertow/server/AbstractServerConnection;)V
      51: putfield      #12                 // Field closeSetter:Lio/undertow/server/AbstractServerConnection$CloseSetter;
      54: aload_1
      55: ifnull        91
      58: aload_0
      59: aload_1
      60: invokevirtual #13                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      63: invokevirtual #14                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      66: putfield      #15                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
      69: aload_0
      70: aload_1
      71: invokevirtual #16                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      74: invokevirtual #17                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      77: putfield      #18                 // Field originalSourceConduit:Lorg/xnio/conduits/StreamSourceConduit;
      80: aload_1
      81: aload_0
      82: getfield      #12                 // Field closeSetter:Lio/undertow/server/AbstractServerConnection$CloseSetter;
      85: invokevirtual #19                 // Method org/xnio/StreamConnection.setCloseListener:(Lorg/xnio/ChannelListener;)V
      88: goto          101
      91: aload_0
      92: aconst_null
      93: putfield      #15                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
      96: aload_0
      97: aconst_null
      98: putfield      #18                 // Field originalSourceConduit:Lorg/xnio/conduits/StreamSourceConduit;
     101: return

  public org.xnio.Pool<java.nio.ByteBuffer> getBufferPool();
    Code:
       0: aload_0
       1: getfield      #20                 // Field poolAdaptor:Lio/undertow/server/XnioBufferPoolAdaptor;
       4: ifnonnull     22
       7: aload_0
       8: new           #21                 // class io/undertow/server/XnioBufferPoolAdaptor
      11: dup
      12: aload_0
      13: invokevirtual #22                 // Method getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      16: invokespecial #23                 // Method io/undertow/server/XnioBufferPoolAdaptor."<init>":(Lio/undertow/connector/ByteBufferPool;)V
      19: putfield      #20                 // Field poolAdaptor:Lio/undertow/server/XnioBufferPoolAdaptor;
      22: aload_0
      23: getfield      #20                 // Field poolAdaptor:Lio/undertow/server/XnioBufferPoolAdaptor;
      26: areturn

  public io.undertow.server.HttpHandler getRootHandler();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rootHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  public io.undertow.connector.ByteBufferPool getByteBufferPool();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public org.xnio.StreamConnection getChannel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: areturn

  public org.xnio.ChannelListener$Setter<io.undertow.server.ServerConnection> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #12                 // Field closeSetter:Lio/undertow/server/AbstractServerConnection$CloseSetter;
       4: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #24                 // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      13: invokevirtual #25                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      16: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #26                 // Method org/xnio/StreamConnection.isOpen:()Z
       7: ireturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #27                 // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
       8: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #28                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
       8: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: aload_2
       6: invokevirtual #29                 // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #30                 // Method org/xnio/StreamConnection.close:()V
       7: return

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #31                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getPeerAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #32                 // Method org/xnio/StreamConnection.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #33                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #34                 // Method org/xnio/StreamConnection.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.OptionMap getUndertowOptions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field undertowOptions:Lorg/xnio/OptionMap;
       4: areturn

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field bufferSize:I
       4: ireturn

  public io.undertow.connector.PooledByteBuffer getExtraBytes();
    Code:
       0: aload_0
       1: getfield      #35                 // Field extraBytes:Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        38
       7: aload_0
       8: getfield      #35                 // Field extraBytes:Lio/undertow/connector/PooledByteBuffer;
      11: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      19: ifne          38
      22: aload_0
      23: getfield      #35                 // Field extraBytes:Lio/undertow/connector/PooledByteBuffer;
      26: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      31: aload_0
      32: aconst_null
      33: putfield      #35                 // Field extraBytes:Lio/undertow/connector/PooledByteBuffer;
      36: aconst_null
      37: areturn
      38: aload_0
      39: getfield      #35                 // Field extraBytes:Lio/undertow/connector/PooledByteBuffer;
      42: areturn

  public void setExtraBytes(io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field extraBytes:Lio/undertow/connector/PooledByteBuffer;
       5: return

  public org.xnio.conduits.StreamSourceConduit getOriginalSourceConduit();
    Code:
       0: aload_0
       1: getfield      #18                 // Field originalSourceConduit:Lorg/xnio/conduits/StreamSourceConduit;
       4: areturn

  public org.xnio.conduits.StreamSinkConduit getOriginalSinkConduit();
    Code:
       0: aload_0
       1: getfield      #15                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
       4: areturn

  public io.undertow.server.AbstractServerConnection$ConduitState resetChannel();
    Code:
       0: new           #39                 // class io/undertow/server/AbstractServerConnection$ConduitState
       3: dup
       4: aload_0
       5: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       8: invokevirtual #13                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      11: invokevirtual #14                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      14: aload_0
      15: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      18: invokevirtual #16                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      21: invokevirtual #17                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      24: invokespecial #40                 // Method io/undertow/server/AbstractServerConnection$ConduitState."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/conduits/StreamSourceConduit;)V
      27: astore_1
      28: aload_0
      29: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      32: invokevirtual #13                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      35: aload_0
      36: getfield      #15                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
      39: invokevirtual #41                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      42: aload_0
      43: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      46: invokevirtual #16                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      49: aload_0
      50: getfield      #18                 // Field originalSourceConduit:Lorg/xnio/conduits/StreamSourceConduit;
      53: invokevirtual #42                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      56: aload_1
      57: areturn

  public void clearChannel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #13                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: aload_0
       8: getfield      #15                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
      11: invokevirtual #41                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      14: aload_0
      15: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      18: invokevirtual #16                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      21: aload_0
      22: getfield      #18                 // Field originalSourceConduit:Lorg/xnio/conduits/StreamSourceConduit;
      25: invokevirtual #42                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      28: return

  public void restoreChannel(io.undertow.server.AbstractServerConnection$ConduitState);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #13                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: aload_1
       8: getfield      #43                 // Field io/undertow/server/AbstractServerConnection$ConduitState.sink:Lorg/xnio/conduits/StreamSinkConduit;
      11: invokevirtual #41                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      14: aload_0
      15: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      18: invokevirtual #16                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      21: aload_1
      22: getfield      #44                 // Field io/undertow/server/AbstractServerConnection$ConduitState.source:Lorg/xnio/conduits/StreamSourceConduit;
      25: invokevirtual #42                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      28: return

  protected static org.xnio.conduits.StreamSinkConduit sink(io.undertow.server.AbstractServerConnection$ConduitState);
    Code:
       0: aload_0
       1: getfield      #43                 // Field io/undertow/server/AbstractServerConnection$ConduitState.sink:Lorg/xnio/conduits/StreamSinkConduit;
       4: areturn

  protected static org.xnio.conduits.StreamSourceConduit source(io.undertow.server.AbstractServerConnection$ConduitState);
    Code:
       0: aload_0
       1: getfield      #44                 // Field io/undertow/server/AbstractServerConnection$ConduitState.source:Lorg/xnio/conduits/StreamSourceConduit;
       4: areturn

  public void addCloseListener(io.undertow.server.ServerConnection$CloseListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field closeListeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  protected org.xnio.conduits.ConduitStreamSinkChannel getSinkChannel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #13                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: areturn

  protected org.xnio.conduits.ConduitStreamSourceChannel getSourceChannel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #16                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
       7: areturn

  protected void setUpgradeListener(io.undertow.server.HttpUpgradeListener);
    Code:
       0: getstatic     #46                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       3: invokeinterface #47,  1           // InterfaceMethod io/undertow/UndertowMessages.upgradeNotSupported:()Ljava/lang/IllegalStateException;
       8: athrow

  protected void maxEntitySizeUpdated(io.undertow.server.HttpServerExchange);
    Code:
       0: return
}
