Compiled from "ServerConnection.java"
public abstract class io.undertow.server.ServerConnection extends io.undertow.util.AbstractAttachable implements org.xnio.channels.ConnectedChannel {
  private static final java.util.concurrent.atomic.AtomicLong CONNECTION_ID_GENERATOR;

  private final long id;

  public io.undertow.server.ServerConnection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/undertow/util/AbstractAttachable."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field CONNECTION_ID_GENERATOR:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      11: putfield      #4                  // Field id:J
      14: return

  public final long getId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field id:J
       4: lreturn

  public java.lang.String getProtocolRequestId();
    Code:
       0: ldc           #5                  // String
       2: areturn

  public abstract org.xnio.Pool<java.nio.ByteBuffer> getBufferPool();

  public abstract io.undertow.connector.ByteBufferPool getByteBufferPool();

  public abstract org.xnio.XnioWorker getWorker();

  public abstract org.xnio.XnioIoThread getIoThread();

  public abstract io.undertow.server.HttpServerExchange sendOutOfBandResponse(io.undertow.server.HttpServerExchange);

  public abstract boolean isContinueResponseSupported();

  public abstract void terminateRequestChannel(io.undertow.server.HttpServerExchange);

  public abstract boolean isOpen();

  public abstract boolean supportsOption(org.xnio.Option<?>);

  public abstract <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;

  public abstract <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;

  public abstract void close() throws java.io.IOException;

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aconst_null
       1: areturn

  public abstract java.net.SocketAddress getPeerAddress();

  public abstract <A extends java.net.SocketAddress> A getPeerAddress(java.lang.Class<A>);

  public abstract java.net.SocketAddress getLocalAddress();

  public abstract <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);

  public abstract org.xnio.OptionMap getUndertowOptions();

  public abstract int getBufferSize();

  public abstract io.undertow.server.SSLSessionInfo getSslSessionInfo();

  public abstract void setSslSessionInfo(io.undertow.server.SSLSessionInfo);

  public abstract void addCloseListener(io.undertow.server.ServerConnection$CloseListener);

  protected abstract org.xnio.StreamConnection upgradeChannel();

  protected abstract org.xnio.conduits.ConduitStreamSinkChannel getSinkChannel();

  protected abstract org.xnio.conduits.ConduitStreamSourceChannel getSourceChannel();

  protected abstract org.xnio.conduits.StreamSinkConduit getSinkConduit(io.undertow.server.HttpServerExchange, org.xnio.conduits.StreamSinkConduit);

  protected abstract boolean isUpgradeSupported();

  protected abstract boolean isConnectSupported();

  protected abstract void exchangeComplete(io.undertow.server.HttpServerExchange);

  protected abstract void setUpgradeListener(io.undertow.server.HttpUpgradeListener);

  protected abstract void setConnectListener(io.undertow.server.HttpUpgradeListener);

  protected abstract void maxEntitySizeUpdated(io.undertow.server.HttpServerExchange);

  public abstract java.lang.String getTransportProtocol();

  public boolean pushResource(java.lang.String, io.undertow.util.HttpString, io.undertow.util.HeaderMap);
    Code:
       0: iconst_0
       1: ireturn

  public boolean pushResource(java.lang.String, io.undertow.util.HttpString, io.undertow.util.HeaderMap, io.undertow.server.HttpHandler);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isPushSupported();
    Code:
       0: iconst_0
       1: ireturn

  public abstract boolean isRequestTrailerFieldsSupported();

  static {};
    Code:
       0: new           #6                  // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #2                  // Field CONNECTION_ID_GENERATOR:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
