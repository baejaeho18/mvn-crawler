Compiled from "HttpServerExchange.java"
final class io.undertow.server.HttpServerExchange$ReadDispatchChannel extends io.undertow.channels.DetachableStreamSourceChannel implements org.xnio.channels.StreamSourceChannel {
  private boolean wakeup;

  private boolean readsResumed;

  final io.undertow.server.HttpServerExchange this$0;

  io.undertow.server.HttpServerExchange$ReadDispatchChannel(io.undertow.server.HttpServerExchange, org.xnio.conduits.ConduitStreamSourceChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       5: aload_0
       6: aload_2
       7: invokespecial #4                  // Method io/undertow/channels/DetachableStreamSourceChannel."<init>":(Lorg/xnio/channels/StreamSourceChannel;)V
      10: aload_0
      11: iconst_1
      12: putfield      #5                  // Field wakeup:Z
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field readsResumed:Z
      20: return

  protected boolean isFinished();
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       4: getfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
       7: sipush        4096
      10: invokestatic  #8                  // Method org/xnio/Bits.allAreSet:(II)Z
      13: ireturn

  public void resumeReads();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field readsResumed:Z
       5: aload_0
       6: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       9: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.isInCall:()Z
      12: ifeq          53
      15: aload_0
      16: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      19: dup
      20: getfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      23: ldc           #10                 // int 262144
      25: ior
      26: putfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      29: aload_0
      30: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      33: getfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      36: ldc           #11                 // int 32768
      38: invokestatic  #12                 // Method org/xnio/Bits.anyAreSet:(II)Z
      41: ifeq          69
      44: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      47: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.resumedAndDispatched:()Ljava/lang/IllegalStateException;
      52: athrow
      53: aload_0
      54: invokevirtual #15                 // Method isFinished:()Z
      57: ifne          69
      60: aload_0
      61: getfield      #16                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      64: invokeinterface #17,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
      69: return

  public void wakeupReads();
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.isInCall:()Z
       7: ifeq          53
      10: aload_0
      11: iconst_1
      12: putfield      #5                  // Field wakeup:Z
      15: aload_0
      16: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      19: dup
      20: getfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      23: ldc           #10                 // int 262144
      25: ior
      26: putfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      29: aload_0
      30: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      33: getfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      36: ldc           #11                 // int 32768
      38: invokestatic  #12                 // Method org/xnio/Bits.anyAreSet:(II)Z
      41: ifeq          76
      44: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      47: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.resumedAndDispatched:()Ljava/lang/IllegalStateException;
      52: athrow
      53: aload_0
      54: invokevirtual #15                 // Method isFinished:()Z
      57: ifeq          67
      60: aload_0
      61: invokevirtual #18                 // Method invokeListener:()V
      64: goto          76
      67: aload_0
      68: getfield      #16                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      71: invokeinterface #19,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.wakeupReads:()V
      76: return

  private void invokeListener();
    Code:
       0: aload_0
       1: getfield      #2                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: ifnull        22
       7: aload_0
       8: invokespecial #20                 // Method io/undertow/channels/DetachableStreamSourceChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      11: new           #21                 // class io/undertow/server/HttpServerExchange$ReadDispatchChannel$1
      14: dup
      15: aload_0
      16: invokespecial #22                 // Method io/undertow/server/HttpServerExchange$ReadDispatchChannel$1."<init>":(Lio/undertow/server/HttpServerExchange$ReadDispatchChannel;)V
      19: invokevirtual #23                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      22: return

  public void requestDone();
    Code:
       0: aload_0
       1: getfield      #16                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: instanceof    #24                 // class org/xnio/conduits/ConduitStreamSourceChannel
       7: ifeq          35
      10: aload_0
      11: getfield      #16                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      14: checkcast     #24                 // class org/xnio/conduits/ConduitStreamSourceChannel
      17: aconst_null
      18: invokevirtual #25                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
      21: aload_0
      22: getfield      #16                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      25: checkcast     #24                 // class org/xnio/conduits/ConduitStreamSourceChannel
      28: aconst_null
      29: invokevirtual #26                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setCloseListener:(Lorg/xnio/ChannelListener;)V
      32: goto          65
      35: aload_0
      36: getfield      #16                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      39: invokeinterface #27,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      44: aconst_null
      45: invokeinterface #28,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      50: aload_0
      51: getfield      #16                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      54: invokeinterface #29,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
      59: aconst_null
      60: invokeinterface #28,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      65: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #32                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      13: astore        6
      15: aload         6
      17: ifnonnull     29
      20: aload_0
      21: lload_1
      22: lload_3
      23: aload         5
      25: invokespecial #33                 // Method io/undertow/channels/DetachableStreamSourceChannel.transferTo:(JJLjava/nio/channels/FileChannel;)J
      28: lreturn
      29: aload         5
      31: aload_0
      32: lload_1
      33: lload_3
      34: invokevirtual #34                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      37: lreturn

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: invokestatic  #35                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: invokespecial #20                 // Method io/undertow/channels/DetachableStreamSourceChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: if_acmpne     19
      10: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #36,  1           // InterfaceMethod io/undertow/UndertowMessages.awaitCalledFromIoThread:()Ljava/io/IOException;
      18: athrow
      19: aload_0
      20: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      23: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
      26: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      29: checkcast     #32                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      32: astore_1
      33: aload_1
      34: ifnonnull     41
      37: aload_0
      38: invokespecial #37                 // Method io/undertow/channels/DetachableStreamSourceChannel.awaitReadable:()V
      41: return

  public void suspendReads();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #6                  // Field readsResumed:Z
       5: aload_0
       6: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       9: dup
      10: getfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      13: ldc           #38                 // int -262145
      15: iand
      16: putfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      19: aload_0
      20: invokespecial #39                 // Method io/undertow/channels/DetachableStreamSourceChannel.suspendReads:()V
      23: return

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #32                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      13: astore        5
      15: aload         5
      17: ifnonnull     29
      20: aload_0
      21: lload_1
      22: aload_3
      23: aload         4
      25: invokespecial #40                 // Method io/undertow/channels/DetachableStreamSourceChannel.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
      28: lreturn
      29: aload_3
      30: iconst_0
      31: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      34: pop
      35: aload_3
      36: iconst_0
      37: invokevirtual #42                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
      40: pop
      41: lconst_0
      42: lstore        6
      44: iconst_0
      45: istore        8
      47: iload         8
      49: aload         5
      51: arraylength
      52: if_icmpge     154
      55: aload         5
      57: iload         8
      59: aaload
      60: astore        9
      62: aload         9
      64: ifnull        148
      67: aload         9
      69: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      74: astore        10
      76: aload         10
      78: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      81: ifeq          135
      84: aload         4
      86: aload         10
      88: invokeinterface #45,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      93: istore        11
      95: aload         10
      97: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     100: ifne          116
     103: aload         9
     105: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     110: aload         5
     112: iload         8
     114: aconst_null
     115: aastore
     116: iload         11
     118: ifne          124
     121: lload         6
     123: lreturn
     124: lload         6
     126: iload         11
     128: i2l
     129: ladd
     130: lstore        6
     132: goto          148
     135: aload         9
     137: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     142: aload         5
     144: iload         8
     146: aconst_null
     147: aastore
     148: iinc          8, 1
     151: goto          47
     154: aload_0
     155: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
     158: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
     161: invokevirtual #47                 // Method io/undertow/server/HttpServerExchange.removeAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     164: pop
     165: lload         6
     167: lconst_0
     168: lcmp
     169: ifne          181
     172: aload_0
     173: lload_1
     174: aload_3
     175: aload         4
     177: invokespecial #40                 // Method io/undertow/channels/DetachableStreamSourceChannel.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
     180: lreturn
     181: lload         6
     183: lreturn

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #35                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: invokespecial #20                 // Method io/undertow/channels/DetachableStreamSourceChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: if_acmpne     19
      10: getstatic     #13                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #36,  1           // InterfaceMethod io/undertow/UndertowMessages.awaitCalledFromIoThread:()Ljava/io/IOException;
      18: athrow
      19: aload_0
      20: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      23: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
      26: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      29: checkcast     #32                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      32: astore        4
      34: aload         4
      36: ifnonnull     45
      39: aload_0
      40: lload_1
      41: aload_3
      42: invokespecial #48                 // Method io/undertow/channels/DetachableStreamSourceChannel.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      45: return

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #32                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      13: astore        4
      15: aload         4
      17: ifnonnull     28
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokespecial #49                 // Method io/undertow/channels/DetachableStreamSourceChannel.read:([Ljava/nio/ByteBuffer;II)J
      27: lreturn
      28: lconst_0
      29: lstore        5
      31: iconst_0
      32: istore        7
      34: iload         7
      36: aload         4
      38: arraylength
      39: if_icmpge     137
      42: aload         4
      44: iload         7
      46: aaload
      47: astore        8
      49: aload         8
      51: ifnull        131
      54: aload         8
      56: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      61: astore        9
      63: aload         9
      65: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      68: ifeq          118
      71: lload         5
      73: aload_1
      74: iload_2
      75: iload_3
      76: aload         9
      78: invokestatic  #50                 // Method org/xnio/Buffers.copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      81: i2l
      82: ladd
      83: lstore        5
      85: aload         9
      87: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      90: ifne          106
      93: aload         8
      95: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     100: aload         4
     102: iload         7
     104: aconst_null
     105: aastore
     106: aload_1
     107: iload_2
     108: iload_3
     109: invokestatic  #51                 // Method org/xnio/Buffers.hasRemaining:([Ljava/nio/Buffer;II)Z
     112: ifne          131
     115: lload         5
     117: lreturn
     118: aload         8
     120: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     125: aload         4
     127: iload         7
     129: aconst_null
     130: aastore
     131: iinc          7, 1
     134: goto          34
     137: aload_0
     138: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
     141: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
     144: invokevirtual #47                 // Method io/undertow/server/HttpServerExchange.removeAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     147: pop
     148: lload         5
     150: lconst_0
     151: lcmp
     152: ifne          163
     155: aload_0
     156: aload_1
     157: iload_2
     158: iload_3
     159: invokespecial #49                 // Method io/undertow/channels/DetachableStreamSourceChannel.read:([Ljava/nio/ByteBuffer;II)J
     162: lreturn
     163: lload         5
     165: lreturn

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #52                 // Method read:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #32                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      13: astore_1
      14: aload_1
      15: ifnull        20
      18: iconst_1
      19: ireturn
      20: aload_0
      21: invokespecial #53                 // Method io/undertow/channels/DetachableStreamSourceChannel.isOpen:()Z
      24: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #32                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      13: astore_1
      14: aload_1
      15: ifnull        56
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     56
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: aload         5
      40: ifnull        50
      43: aload         5
      45: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      50: iinc          4, 1
      53: goto          26
      56: aload_0
      57: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      60: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
      63: invokevirtual #47                 // Method io/undertow/server/HttpServerExchange.removeAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      66: pop
      67: aload_0
      68: invokespecial #54                 // Method io/undertow/channels/DetachableStreamSourceChannel.close:()V
      71: return

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #32                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      13: astore_1
      14: aload_1
      15: ifnull        23
      18: aload_0
      19: getfield      #6                  // Field readsResumed:Z
      22: ireturn
      23: aload_0
      24: invokevirtual #15                 // Method isFinished:()Z
      27: ifeq          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      36: getfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      39: ldc           #10                 // int 262144
      41: invokestatic  #12                 // Method org/xnio/Bits.anyAreSet:(II)Z
      44: ifne          54
      47: aload_0
      48: invokespecial #55                 // Method io/undertow/channels/DetachableStreamSourceChannel.isReadResumed:()Z
      51: ifeq          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #32                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      13: astore_2
      14: aload_2
      15: ifnonnull     24
      18: aload_0
      19: aload_1
      20: invokespecial #56                 // Method io/undertow/channels/DetachableStreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      23: ireturn
      24: iconst_0
      25: istore_3
      26: iconst_0
      27: istore        4
      29: iload         4
      31: aload_2
      32: arraylength
      33: if_icmpge     120
      36: aload_2
      37: iload         4
      39: aaload
      40: astore        5
      42: aload         5
      44: ifnull        114
      47: aload         5
      49: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      54: astore        6
      56: aload         6
      58: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      61: ifeq          102
      64: iload_3
      65: aload_1
      66: aload         6
      68: invokestatic  #57                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      71: iadd
      72: istore_3
      73: aload         6
      75: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      78: ifne          93
      81: aload         5
      83: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      88: aload_2
      89: iload         4
      91: aconst_null
      92: aastore
      93: aload_1
      94: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      97: ifne          114
     100: iload_3
     101: ireturn
     102: aload         5
     104: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     109: aload_2
     110: iload         4
     112: aconst_null
     113: aastore
     114: iinc          4, 1
     117: goto          29
     120: aload_0
     121: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
     124: getstatic     #30                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
     127: invokevirtual #47                 // Method io/undertow/server/HttpServerExchange.removeAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     130: pop
     131: iload_3
     132: ifne          141
     135: aload_0
     136: aload_1
     137: invokespecial #56                 // Method io/undertow/channels/DetachableStreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     140: ireturn
     141: iload_3
     142: ireturn

  public void runResume();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method isReadResumed:()Z
       4: ifeq          85
       7: aload_0
       8: invokevirtual #15                 // Method isFinished:()Z
      11: ifeq          21
      14: aload_0
      15: invokevirtual #18                 // Method invokeListener:()V
      18: goto          101
      21: aload_0
      22: getfield      #5                  // Field wakeup:Z
      25: ifeq          59
      28: aload_0
      29: iconst_0
      30: putfield      #5                  // Field wakeup:Z
      33: aload_0
      34: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      37: dup
      38: getfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      41: ldc           #38                 // int -262145
      43: iand
      44: putfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      47: aload_0
      48: getfield      #16                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      51: invokeinterface #19,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.wakeupReads:()V
      56: goto          101
      59: aload_0
      60: getfield      #3                  // Field this$0:Lio/undertow/server/HttpServerExchange;
      63: dup
      64: getfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      67: ldc           #38                 // int -262145
      69: iand
      70: putfield      #7                  // Field io/undertow/server/HttpServerExchange.state:I
      73: aload_0
      74: getfield      #16                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      77: invokeinterface #17,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
      82: goto          101
      85: aload_0
      86: getfield      #5                  // Field wakeup:Z
      89: ifeq          101
      92: aload_0
      93: iconst_0
      94: putfield      #5                  // Field wakeup:Z
      97: aload_0
      98: invokevirtual #18                 // Method invokeListener:()V
     101: return

  static org.xnio.ChannelListener$SimpleSetter access$100(io.undertow.server.HttpServerExchange$ReadDispatchChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn
}
