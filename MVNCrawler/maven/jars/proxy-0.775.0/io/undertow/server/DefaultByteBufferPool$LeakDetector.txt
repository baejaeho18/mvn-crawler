Compiled from "DefaultByteBufferPool.java"
class io.undertow.server.DefaultByteBufferPool$LeakDetector {
  volatile boolean closed;

  private final java.lang.Throwable allocationPoint;

  private io.undertow.server.DefaultByteBufferPool$LeakDetector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field closed:Z
       9: aload_0
      10: new           #3                  // class java/lang/Throwable
      13: dup
      14: ldc           #4                  // String Buffer leak detected
      16: invokespecial #5                  // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
      19: putfield      #6                  // Field allocationPoint:Ljava/lang/Throwable;
      22: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ifne          14
       7: aload_0
       8: getfield      #6                  // Field allocationPoint:Ljava/lang/Throwable;
      11: invokevirtual #7                  // Method java/lang/Throwable.printStackTrace:()V
      14: aload_0
      15: invokespecial #8                  // Method java/lang/Object.finalize:()V
      18: goto          28
      21: astore_1
      22: aload_0
      23: invokespecial #8                  // Method java/lang/Object.finalize:()V
      26: aload_1
      27: athrow
      28: return
    Exception table:
       from    to  target type
           0    14    21   any
}
