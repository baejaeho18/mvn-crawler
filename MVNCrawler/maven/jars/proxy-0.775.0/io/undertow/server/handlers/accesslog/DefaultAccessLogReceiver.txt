Compiled from "DefaultAccessLogReceiver.java"
public class io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver implements io.undertow.server.handlers.accesslog.AccessLogReceiver,java.lang.Runnable,java.io.Closeable {
  private static final java.lang.String DEFAULT_LOG_SUFFIX;

  private final java.util.concurrent.Executor logWriteExecutor;

  private final java.util.Deque<java.lang.String> pendingMessages;

  private volatile int state;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver> stateUpdater;

  private long changeOverPoint;

  private java.lang.String currentDateString;

  private boolean forceLogRotation;

  private final java.nio.file.Path outputDirectory;

  private final java.nio.file.Path defaultLogFile;

  private final java.lang.String logBaseName;

  private final java.lang.String logNameSuffix;

  private java.io.BufferedWriter writer;

  private volatile boolean closed;

  private boolean initialRun;

  private final boolean rotate;

  private final io.undertow.server.handlers.accesslog.LogFileHeaderGenerator fileHeaderGenerator;

  public io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver(java.util.concurrent.Executor, java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
       6: aload_3
       7: aconst_null
       8: invokespecial #2                  // Method "<init>":(Ljava/util/concurrent/Executor;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver(java.util.concurrent.Executor, java.io.File, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
       6: aload_3
       7: aload         4
       9: iconst_1
      10: invokespecial #3                  // Method "<init>":(Ljava/util/concurrent/Executor;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Z)V
      13: return

  public io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver(java.util.concurrent.Executor, java.io.File, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
       6: aload_3
       7: aload         4
       9: iload         5
      11: invokespecial #3                  // Method "<init>":(Ljava/util/concurrent/Executor;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Z)V
      14: return

  public io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver(java.util.concurrent.Executor, java.nio.file.Path, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(Ljava/util/concurrent/Executor;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)V
       8: return

  public io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver(java.util.concurrent.Executor, java.nio.file.Path, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iconst_1
       7: invokespecial #3                  // Method "<init>":(Ljava/util/concurrent/Executor;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Z)V
      10: return

  public io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver(java.util.concurrent.Executor, java.nio.file.Path, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: aconst_null
       9: invokespecial #4                  // Method "<init>":(Ljava/util/concurrent/Executor;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;ZLio/undertow/server/handlers/accesslog/LogFileHeaderGenerator;)V
      12: return

  private io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver(java.util.concurrent.Executor, java.nio.file.Path, java.lang.String, java.lang.String, boolean, io.undertow.server.handlers.accesslog.LogFileHeaderGenerator);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field state:I
       9: aload_0
      10: aconst_null
      11: putfield      #7                  // Field writer:Ljava/io/BufferedWriter;
      14: aload_0
      15: iconst_0
      16: putfield      #8                  // Field closed:Z
      19: aload_0
      20: iconst_1
      21: putfield      #9                  // Field initialRun:Z
      24: aload_0
      25: aload_1
      26: putfield      #10                 // Field logWriteExecutor:Ljava/util/concurrent/Executor;
      29: aload_0
      30: aload_2
      31: putfield      #11                 // Field outputDirectory:Ljava/nio/file/Path;
      34: aload_0
      35: aload_3
      36: putfield      #12                 // Field logBaseName:Ljava/lang/String;
      39: aload_0
      40: iload         5
      42: putfield      #13                 // Field rotate:Z
      45: aload_0
      46: aload         6
      48: putfield      #14                 // Field fileHeaderGenerator:Lio/undertow/server/handlers/accesslog/LogFileHeaderGenerator;
      51: aload_0
      52: aload         4
      54: ifnull        62
      57: aload         4
      59: goto          64
      62: ldc           #16                 // String log
      64: putfield      #17                 // Field logNameSuffix:Ljava/lang/String;
      67: aload_0
      68: new           #18                 // class java/util/concurrent/ConcurrentLinkedDeque
      71: dup
      72: invokespecial #19                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      75: putfield      #20                 // Field pendingMessages:Ljava/util/Deque;
      78: aload_0
      79: aload_2
      80: aload_3
      81: aload_0
      82: getfield      #17                 // Field logNameSuffix:Ljava/lang/String;
      85: invokedynamic #21,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      90: invokeinterface #22,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      95: putfield      #23                 // Field defaultLogFile:Ljava/nio/file/Path;
      98: aload_0
      99: invokevirtual #24                 // Method calculateChangeOverPoint:()V
     102: return

  private void calculateChangeOverPoint();
    Code:
       0: invokestatic  #25                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       3: astore_1
       4: aload_1
       5: bipush        13
       7: iconst_0
       8: invokevirtual #27                 // Method java/util/Calendar.set:(II)V
      11: aload_1
      12: bipush        12
      14: iconst_0
      15: invokevirtual #27                 // Method java/util/Calendar.set:(II)V
      18: aload_1
      19: bipush        11
      21: iconst_0
      22: invokevirtual #27                 // Method java/util/Calendar.set:(II)V
      25: aload_1
      26: iconst_5
      27: iconst_1
      28: invokevirtual #28                 // Method java/util/Calendar.add:(II)V
      31: new           #29                 // class java/text/SimpleDateFormat
      34: dup
      35: ldc           #30                 // String yyyy-MM-dd
      37: getstatic     #31                 // Field java/util/Locale.US:Ljava/util/Locale;
      40: invokespecial #32                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      43: astore_2
      44: aload_0
      45: aload_2
      46: new           #33                 // class java/util/Date
      49: dup
      50: invokespecial #34                 // Method java/util/Date."<init>":()V
      53: invokevirtual #35                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      56: putfield      #36                 // Field currentDateString:Ljava/lang/String;
      59: aload_0
      60: getfield      #23                 // Field defaultLogFile:Ljava/nio/file/Path;
      63: iconst_0
      64: anewarray     #37                 // class java/nio/file/LinkOption
      67: invokestatic  #38                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      70: ifeq          106
      73: aload_0
      74: aload_2
      75: new           #33                 // class java/util/Date
      78: dup
      79: aload_0
      80: getfield      #23                 // Field defaultLogFile:Ljava/nio/file/Path;
      83: iconst_0
      84: anewarray     #37                 // class java/nio/file/LinkOption
      87: invokestatic  #39                 // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;
      90: invokevirtual #40                 // Method java/nio/file/attribute/FileTime.toMillis:()J
      93: invokespecial #41                 // Method java/util/Date."<init>":(J)V
      96: invokevirtual #35                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      99: putfield      #36                 // Field currentDateString:Ljava/lang/String;
     102: goto          106
     105: astore_3
     106: aload_0
     107: aload_1
     108: invokevirtual #43                 // Method java/util/Calendar.getTimeInMillis:()J
     111: putfield      #44                 // Field changeOverPoint:J
     114: return
    Exception table:
       from    to  target type
          73   102   105   Class java/io/IOException

  public void logMessage(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field pendingMessages:Ljava/util/Deque;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      10: pop
      11: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      14: aload_0
      15: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      18: istore_2
      19: iload_2
      20: ifne          45
      23: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      26: aload_0
      27: iconst_0
      28: iconst_1
      29: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      32: ifeq          45
      35: aload_0
      36: getfield      #10                 // Field logWriteExecutor:Ljava/util/concurrent/Executor;
      39: aload_0
      40: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      45: return

  public void run();
    Code:
       0: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_1
       5: iconst_2
       6: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifne          13
      12: return
      13: aload_0
      14: getfield      #50                 // Field forceLogRotation:Z
      17: ifeq          27
      20: aload_0
      21: invokevirtual #51                 // Method doRotate:()V
      24: goto          109
      27: aload_0
      28: getfield      #9                  // Field initialRun:Z
      31: ifeq          109
      34: aload_0
      35: getfield      #23                 // Field defaultLogFile:Ljava/nio/file/Path;
      38: iconst_0
      39: anewarray     #37                 // class java/nio/file/LinkOption
      42: invokestatic  #38                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      45: ifeq          109
      48: lconst_0
      49: lstore_1
      50: aload_0
      51: getfield      #23                 // Field defaultLogFile:Ljava/nio/file/Path;
      54: iconst_0
      55: anewarray     #37                 // class java/nio/file/LinkOption
      58: invokestatic  #39                 // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;
      61: invokevirtual #40                 // Method java/nio/file/attribute/FileTime.toMillis:()J
      64: lstore_1
      65: goto          78
      68: astore_3
      69: getstatic     #52                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      72: aload_3
      73: invokeinterface #53,  2           // InterfaceMethod io/undertow/UndertowLogger.errorRotatingAccessLog:(Ljava/io/IOException;)V
      78: invokestatic  #25                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      81: astore_3
      82: aload_3
      83: aload_0
      84: getfield      #44                 // Field changeOverPoint:J
      87: invokevirtual #54                 // Method java/util/Calendar.setTimeInMillis:(J)V
      90: aload_3
      91: iconst_5
      92: iconst_m1
      93: invokevirtual #28                 // Method java/util/Calendar.add:(II)V
      96: lload_1
      97: aload_3
      98: invokevirtual #43                 // Method java/util/Calendar.getTimeInMillis:()J
     101: lcmp
     102: ifgt          109
     105: aload_0
     106: invokevirtual #51                 // Method doRotate:()V
     109: aload_0
     110: iconst_0
     111: putfield      #9                  // Field initialRun:Z
     114: new           #55                 // class java/util/ArrayList
     117: dup
     118: invokespecial #56                 // Method java/util/ArrayList."<init>":()V
     121: astore_1
     122: iconst_0
     123: istore_3
     124: iload_3
     125: sipush        1000
     128: if_icmpge     165
     131: aload_0
     132: getfield      #20                 // Field pendingMessages:Ljava/util/Deque;
     135: invokeinterface #57,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     140: checkcast     #58                 // class java/lang/String
     143: astore_2
     144: aload_2
     145: ifnonnull     151
     148: goto          165
     151: aload_1
     152: aload_2
     153: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     158: pop
     159: iinc          3, 1
     162: goto          124
     165: aload_1
     166: invokeinterface #60,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     171: ifne          179
     174: aload_0
     175: aload_1
     176: invokevirtual #61                 // Method writeMessage:(Ljava/util/List;)V
     179: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     182: aload_0
     183: iconst_3
     184: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     187: aload_0
     188: getfield      #20                 // Field pendingMessages:Ljava/util/Deque;
     191: invokeinterface #63,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     196: ifeq          206
     199: aload_0
     200: getfield      #50                 // Field forceLogRotation:Z
     203: ifeq          228
     206: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     209: aload_0
     210: iconst_3
     211: iconst_1
     212: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     215: ifeq          228
     218: aload_0
     219: getfield      #10                 // Field logWriteExecutor:Ljava/util/concurrent/Executor;
     222: aload_0
     223: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     228: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     231: aload_0
     232: iconst_3
     233: iconst_0
     234: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     237: ifeq          491
     240: aload_0
     241: getfield      #8                  // Field closed:Z
     244: ifeq          491
     247: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     250: aload_0
     251: iconst_0
     252: iconst_3
     253: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     256: ifeq          491
     259: aload_0
     260: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     263: ifnull        285
     266: aload_0
     267: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     270: invokevirtual #64                 // Method java/io/BufferedWriter.flush:()V
     273: aload_0
     274: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     277: invokevirtual #65                 // Method java/io/BufferedWriter.close:()V
     280: aload_0
     281: aconst_null
     282: putfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     285: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     288: aload_0
     289: iconst_0
     290: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     293: goto          330
     296: astore_3
     297: getstatic     #52                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     300: aload_3
     301: invokeinterface #66,  2           // InterfaceMethod io/undertow/UndertowLogger.errorWritingAccessLog:(Ljava/io/IOException;)V
     306: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     309: aload_0
     310: iconst_0
     311: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     314: goto          330
     317: astore        4
     319: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     322: aload_0
     323: iconst_0
     324: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     327: aload         4
     329: athrow
     330: goto          491
     333: astore        5
     335: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     338: aload_0
     339: iconst_3
     340: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     343: aload_0
     344: getfield      #20                 // Field pendingMessages:Ljava/util/Deque;
     347: invokeinterface #63,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     352: ifeq          362
     355: aload_0
     356: getfield      #50                 // Field forceLogRotation:Z
     359: ifeq          384
     362: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     365: aload_0
     366: iconst_3
     367: iconst_1
     368: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     371: ifeq          384
     374: aload_0
     375: getfield      #10                 // Field logWriteExecutor:Ljava/util/concurrent/Executor;
     378: aload_0
     379: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     384: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     387: aload_0
     388: iconst_3
     389: iconst_0
     390: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     393: ifeq          488
     396: aload_0
     397: getfield      #8                  // Field closed:Z
     400: ifeq          488
     403: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     406: aload_0
     407: iconst_0
     408: iconst_3
     409: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     412: ifeq          488
     415: aload_0
     416: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     419: ifnull        441
     422: aload_0
     423: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     426: invokevirtual #64                 // Method java/io/BufferedWriter.flush:()V
     429: aload_0
     430: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     433: invokevirtual #65                 // Method java/io/BufferedWriter.close:()V
     436: aload_0
     437: aconst_null
     438: putfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     441: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     444: aload_0
     445: iconst_0
     446: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     449: goto          488
     452: astore        6
     454: getstatic     #52                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     457: aload         6
     459: invokeinterface #66,  2           // InterfaceMethod io/undertow/UndertowLogger.errorWritingAccessLog:(Ljava/io/IOException;)V
     464: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     467: aload_0
     468: iconst_0
     469: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     472: goto          488
     475: astore        7
     477: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     480: aload_0
     481: iconst_0
     482: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     485: aload         7
     487: athrow
     488: aload         5
     490: athrow
     491: return
    Exception table:
       from    to  target type
          50    65    68   Class java/io/IOException
         259   285   296   Class java/io/IOException
         259   285   317   any
         296   306   317   any
         317   319   317   any
         165   179   333   any
         415   441   452   Class java/io/IOException
         415   441   475   any
         452   464   475   any
         475   477   475   any
         333   335   333   any

  void awaitWrittenForTest() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field pendingMessages:Ljava/util/Deque;
       4: invokeinterface #63,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifeq          19
      12: aload_0
      13: getfield      #50                 // Field forceLogRotation:Z
      16: ifeq          28
      19: ldc2_w        #67                 // long 10l
      22: invokestatic  #69                 // Method java/lang/Thread.sleep:(J)V
      25: goto          0
      28: aload_0
      29: getfield      #6                  // Field state:I
      32: ifeq          44
      35: ldc2_w        #67                 // long 10l
      38: invokestatic  #69                 // Method java/lang/Thread.sleep:(J)V
      41: goto          28
      44: return

  private void writeMessage(java.util.List<java.lang.String>);
    Code:
       0: invokestatic  #70                 // Method java/lang/System.currentTimeMillis:()J
       3: aload_0
       4: getfield      #44                 // Field changeOverPoint:J
       7: lcmp
       8: ifle          15
      11: aload_0
      12: invokevirtual #51                 // Method doRotate:()V
      15: aload_0
      16: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
      19: ifnonnull     107
      22: aload_0
      23: aload_0
      24: getfield      #23                 // Field defaultLogFile:Ljava/nio/file/Path;
      27: getstatic     #71                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      30: iconst_2
      31: anewarray     #72                 // class java/nio/file/OpenOption
      34: dup
      35: iconst_0
      36: getstatic     #73                 // Field java/nio/file/StandardOpenOption.APPEND:Ljava/nio/file/StandardOpenOption;
      39: aastore
      40: dup
      41: iconst_1
      42: getstatic     #74                 // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
      45: aastore
      46: invokestatic  #75                 // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;
      49: putfield      #7                  // Field writer:Ljava/io/BufferedWriter;
      52: aload_0
      53: getfield      #23                 // Field defaultLogFile:Ljava/nio/file/Path;
      56: invokestatic  #76                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
      59: lconst_0
      60: lcmp
      61: ifne          107
      64: aload_0
      65: getfield      #14                 // Field fileHeaderGenerator:Lio/undertow/server/handlers/accesslog/LogFileHeaderGenerator;
      68: ifnull        107
      71: aload_0
      72: getfield      #14                 // Field fileHeaderGenerator:Lio/undertow/server/handlers/accesslog/LogFileHeaderGenerator;
      75: invokeinterface #77,  1           // InterfaceMethod io/undertow/server/handlers/accesslog/LogFileHeaderGenerator.generateHeader:()Ljava/lang/String;
      80: astore_2
      81: aload_2
      82: ifnull        107
      85: aload_0
      86: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
      89: aload_2
      90: invokevirtual #78                 // Method java/io/BufferedWriter.write:(Ljava/lang/String;)V
      93: aload_0
      94: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
      97: invokevirtual #79                 // Method java/io/BufferedWriter.newLine:()V
     100: aload_0
     101: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     104: invokevirtual #64                 // Method java/io/BufferedWriter.flush:()V
     107: aload_1
     108: invokeinterface #80,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     113: astore_2
     114: aload_2
     115: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     120: ifeq          151
     123: aload_2
     124: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #58                 // class java/lang/String
     132: astore_3
     133: aload_0
     134: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     137: aload_3
     138: invokevirtual #78                 // Method java/io/BufferedWriter.write:(Ljava/lang/String;)V
     141: aload_0
     142: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     145: invokevirtual #79                 // Method java/io/BufferedWriter.newLine:()V
     148: goto          114
     151: aload_0
     152: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
     155: invokevirtual #64                 // Method java/io/BufferedWriter.flush:()V
     158: goto          171
     161: astore_2
     162: getstatic     #52                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     165: aload_2
     166: invokeinterface #66,  2           // InterfaceMethod io/undertow/UndertowLogger.errorWritingAccessLog:(Ljava/io/IOException;)V
     171: return
    Exception table:
       from    to  target type
          15   158   161   Class java/io/IOException

  private void doRotate();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #50                 // Field forceLogRotation:Z
       5: aload_0
       6: getfield      #13                 // Field rotate:Z
       9: ifne          13
      12: return
      13: aload_0
      14: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
      17: ifnull        39
      20: aload_0
      21: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
      24: invokevirtual #64                 // Method java/io/BufferedWriter.flush:()V
      27: aload_0
      28: getfield      #7                  // Field writer:Ljava/io/BufferedWriter;
      31: invokevirtual #65                 // Method java/io/BufferedWriter.close:()V
      34: aload_0
      35: aconst_null
      36: putfield      #7                  // Field writer:Ljava/io/BufferedWriter;
      39: aload_0
      40: getfield      #23                 // Field defaultLogFile:Ljava/nio/file/Path;
      43: iconst_0
      44: anewarray     #37                 // class java/nio/file/LinkOption
      47: invokestatic  #38                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      50: ifne          58
      53: aload_0
      54: invokevirtual #24                 // Method calculateChangeOverPoint:()V
      57: return
      58: aload_0
      59: getfield      #11                 // Field outputDirectory:Ljava/nio/file/Path;
      62: aload_0
      63: getfield      #12                 // Field logBaseName:Ljava/lang/String;
      66: aload_0
      67: getfield      #36                 // Field currentDateString:Ljava/lang/String;
      70: aload_0
      71: getfield      #17                 // Field logNameSuffix:Ljava/lang/String;
      74: invokedynamic #83,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      79: invokeinterface #22,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      84: astore_1
      85: iconst_0
      86: istore_2
      87: aload_1
      88: iconst_0
      89: anewarray     #37                 // class java/nio/file/LinkOption
      92: invokestatic  #38                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      95: ifeq          132
      98: iinc          2, 1
     101: aload_0
     102: getfield      #11                 // Field outputDirectory:Ljava/nio/file/Path;
     105: aload_0
     106: getfield      #12                 // Field logBaseName:Ljava/lang/String;
     109: aload_0
     110: getfield      #36                 // Field currentDateString:Ljava/lang/String;
     113: iload_2
     114: aload_0
     115: getfield      #17                 // Field logNameSuffix:Ljava/lang/String;
     118: invokedynamic #84,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
     123: invokeinterface #22,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     128: astore_1
     129: goto          87
     132: aload_0
     133: getfield      #23                 // Field defaultLogFile:Ljava/nio/file/Path;
     136: aload_1
     137: iconst_0
     138: anewarray     #85                 // class java/nio/file/CopyOption
     141: invokestatic  #86                 // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
     144: pop
     145: aload_0
     146: invokevirtual #24                 // Method calculateChangeOverPoint:()V
     149: goto          176
     152: astore_1
     153: getstatic     #52                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     156: aload_1
     157: invokeinterface #53,  2           // InterfaceMethod io/undertow/UndertowLogger.errorRotatingAccessLog:(Ljava/io/IOException;)V
     162: aload_0
     163: invokevirtual #24                 // Method calculateChangeOverPoint:()V
     166: goto          176
     169: astore_3
     170: aload_0
     171: invokevirtual #24                 // Method calculateChangeOverPoint:()V
     174: aload_3
     175: athrow
     176: return
    Exception table:
       from    to  target type
          13    53   152   Class java/io/IOException
          58   145   152   Class java/io/IOException
          13    53   169   any
          58   145   169   any
         152   162   169   any

  public void rotate();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #50                 // Field forceLogRotation:Z
       5: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iconst_0
      10: iconst_1
      11: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      14: ifeq          27
      17: aload_0
      18: getfield      #10                 // Field logWriteExecutor:Ljava/util/concurrent/Executor;
      21: aload_0
      22: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      27: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field closed:Z
       5: getstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iconst_0
      10: iconst_1
      11: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      14: ifeq          27
      17: aload_0
      18: getfield      #10                 // Field logWriteExecutor:Ljava/util/concurrent/Executor;
      21: aload_0
      22: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      27: return

  public static io.undertow.server.handlers.accesslog.DefaultAccessLogReceiver$Builder builder();
    Code:
       0: new           #87                 // class io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver$Builder
       3: dup
       4: invokespecial #88                 // Method io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver$Builder."<init>":()V
       7: areturn

  static {};
    Code:
       0: ldc           #15                 // class io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver
       2: ldc           #89                 // String state
       4: invokestatic  #90                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #46                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
