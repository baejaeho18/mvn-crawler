Compiled from "StuckThreadDetectionHandler.java"
class io.undertow.server.handlers.StuckThreadDetectionHandler$1 implements java.lang.Runnable {
  final io.undertow.server.handlers.StuckThreadDetectionHandler this$0;

  io.undertow.server.handlers.StuckThreadDetectionHandler$1(io.undertow.server.handlers.StuckThreadDetectionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
       4: getfield      #3                  // Field io/undertow/server/handlers/StuckThreadDetectionHandler.threshold:I
       7: i2l
       8: ldc2_w        #4                  // long 1000l
      11: lmul
      12: lstore_1
      13: aload_0
      14: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
      17: getfield      #6                  // Field io/undertow/server/handlers/StuckThreadDetectionHandler.activeThreads:Ljava/util/concurrent/ConcurrentHashMap;
      20: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      23: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          99
      38: aload_3
      39: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #11                 // class io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread
      47: astore        4
      49: aload         4
      51: invokevirtual #12                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getActiveTimeInMillis:()J
      54: lstore        5
      56: lload         5
      58: lload_1
      59: lcmp
      60: iflt          96
      63: aload         4
      65: invokevirtual #13                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.markAsStuckIfStillRunning:()Z
      68: ifeq          96
      71: aload_0
      72: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
      75: getfield      #14                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler.stuckCount:Ljava/util/concurrent/atomic/AtomicInteger;
      78: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      81: istore        7
      83: aload_0
      84: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
      87: aload         4
      89: lload         5
      91: iload         7
      93: invokevirtual #16                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler.notifyStuckThreadDetected:(Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread;JI)V
      96: goto          29
      99: aload_0
     100: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
     103: getfield      #17                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler.completedStuckThreadsQueue:Ljava/util/Queue;
     106: invokeinterface #18,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     111: checkcast     #19                 // class io/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread
     114: astore_3
     115: aload_3
     116: ifnull        160
     119: aload_0
     120: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
     123: getfield      #14                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler.stuckCount:Ljava/util/concurrent/atomic/AtomicInteger;
     126: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     129: istore        4
     131: aload_0
     132: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
     135: aload_3
     136: iload         4
     138: invokevirtual #21                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler.notifyStuckThreadCompleted:(Lio/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread;I)V
     141: aload_0
     142: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
     145: getfield      #17                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler.completedStuckThreadsQueue:Ljava/util/Queue;
     148: invokeinterface #18,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     153: checkcast     #19                 // class io/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread
     156: astore_3
     157: goto          115
     160: aload_0
     161: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
     164: dup
     165: astore_3
     166: monitorenter
     167: aload_0
     168: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
     171: getfield      #6                  // Field io/undertow/server/handlers/StuckThreadDetectionHandler.activeThreads:Ljava/util/concurrent/ConcurrentHashMap;
     174: invokevirtual #22                 // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
     177: ifeq          191
     180: aload_0
     181: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
     184: aconst_null
     185: putfield      #23                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler.timerKey:Lorg/xnio/XnioExecutor$Key;
     188: goto          218
     191: aload_0
     192: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
     195: invokestatic  #24                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     198: checkcast     #25                 // class org/xnio/XnioIoThread
     201: aload_0
     202: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/StuckThreadDetectionHandler;
     205: getfield      #26                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler.stuckThreadTask:Ljava/lang/Runnable;
     208: lconst_1
     209: getstatic     #27                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     212: invokestatic  #28                 // Method io/undertow/util/WorkerUtils.executeAfter:(Lorg/xnio/XnioIoThread;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     215: putfield      #23                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler.timerKey:Lorg/xnio/XnioExecutor$Key;
     218: aload_3
     219: monitorexit
     220: goto          230
     223: astore        8
     225: aload_3
     226: monitorexit
     227: aload         8
     229: athrow
     230: return
    Exception table:
       from    to  target type
         167   220   223   any
         223   227   223   any
}
