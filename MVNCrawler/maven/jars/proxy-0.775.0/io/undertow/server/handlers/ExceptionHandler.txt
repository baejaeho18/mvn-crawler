Compiled from "ExceptionHandler.java"
public class io.undertow.server.handlers.ExceptionHandler implements io.undertow.server.HttpHandler {
  public static final io.undertow.util.AttachmentKey<java.lang.Throwable> THROWABLE;

  private final io.undertow.server.HttpHandler handler;

  private final java.util.List<io.undertow.server.handlers.ExceptionHandler$ExceptionHandlerHolder<?>> exceptionHandlers;

  public io.undertow.server.handlers.ExceptionHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field exceptionHandlers:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field handler:Lio/undertow/server/HttpHandler;
      20: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field handler:Lio/undertow/server/HttpHandler;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      10: goto          82
      13: astore_2
      14: aload_0
      15: getfield      #4                  // Field exceptionHandlers:Ljava/util/List;
      18: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          80
      33: aload_3
      34: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #11                 // class io/undertow/server/handlers/ExceptionHandler$ExceptionHandlerHolder
      42: astore        4
      44: aload         4
      46: invokevirtual #12                 // Method io/undertow/server/handlers/ExceptionHandler$ExceptionHandlerHolder.getClazz:()Ljava/lang/Class;
      49: aload_2
      50: invokevirtual #13                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      53: ifeq          77
      56: aload_1
      57: getstatic     #14                 // Field THROWABLE:Lio/undertow/util/AttachmentKey;
      60: aload_2
      61: invokevirtual #15                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload         4
      67: invokevirtual #16                 // Method io/undertow/server/handlers/ExceptionHandler$ExceptionHandlerHolder.getHandler:()Lio/undertow/server/HttpHandler;
      70: aload_1
      71: invokeinterface #6,  2            // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      76: return
      77: goto          24
      80: aload_2
      81: athrow
      82: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Throwable

  public <T extends java.lang.Throwable> io.undertow.server.handlers.ExceptionHandler addExceptionHandler(java.lang.Class<T>, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field exceptionHandlers:Ljava/util/List;
       4: new           #11                 // class io/undertow/server/handlers/ExceptionHandler$ExceptionHandlerHolder
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #17                 // Method io/undertow/server/handlers/ExceptionHandler$ExceptionHandlerHolder."<init>":(Ljava/lang/Class;Lio/undertow/server/HttpHandler;)V
      13: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_0
      20: areturn

  static {};
    Code:
       0: ldc           #7                  // class java/lang/Throwable
       2: invokestatic  #19                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
       5: putstatic     #14                 // Field THROWABLE:Lio/undertow/util/AttachmentKey;
       8: return
}
