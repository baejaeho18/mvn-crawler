Compiled from "MultiPartParserDefinition.java"
final class io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler implements io.undertow.server.handlers.form.FormDataParser,io.undertow.util.MultipartParser$PartHandler {
  private final io.undertow.server.HttpServerExchange exchange;

  private final io.undertow.server.handlers.form.FormData data;

  private final java.util.List<java.nio.file.Path> createdFiles;

  private final long maxIndividualFileSize;

  private final long fileSizeThreshold;

  private java.lang.String defaultEncoding;

  private final java.io.ByteArrayOutputStream contentBytes;

  private java.lang.String currentName;

  private java.lang.String fileName;

  private java.nio.file.Path file;

  private java.nio.channels.FileChannel fileChannel;

  private io.undertow.util.HeaderMap headers;

  private io.undertow.server.HttpHandler handler;

  private long currentFileSize;

  private final io.undertow.util.MultipartParser$ParseState parser;

  final io.undertow.server.handlers.form.MultiPartParserDefinition this$0;

  private io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler(io.undertow.server.handlers.form.MultiPartParserDefinition, io.undertow.server.HttpServerExchange, java.lang.String, long, long, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/ArrayList
      13: dup
      14: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #5                  // Field createdFiles:Ljava/util/List;
      20: aload_0
      21: new           #6                  // class java/io/ByteArrayOutputStream
      24: dup
      25: invokespecial #7                  // Method java/io/ByteArrayOutputStream."<init>":()V
      28: putfield      #8                  // Field contentBytes:Ljava/io/ByteArrayOutputStream;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      36: aload_0
      37: lload         4
      39: putfield      #10                 // Field maxIndividualFileSize:J
      42: aload_0
      43: aload         8
      45: putfield      #11                 // Field defaultEncoding:Ljava/lang/String;
      48: aload_0
      49: lload         6
      51: putfield      #12                 // Field fileSizeThreshold:J
      54: aload_0
      55: new           #13                 // class io/undertow/server/handlers/form/FormData
      58: dup
      59: aload_2
      60: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      63: invokevirtual #15                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      66: getstatic     #16                 // Field io/undertow/UndertowOptions.MAX_PARAMETERS:Lorg/xnio/Option;
      69: sipush        1000
      72: invokevirtual #17                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      75: invokespecial #18                 // Method io/undertow/server/handlers/form/FormData."<init>":(I)V
      78: putfield      #19                 // Field data:Lio/undertow/server/handlers/form/FormData;
      81: aload         8
      83: astore        9
      85: aload_2
      86: invokevirtual #20                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      89: getstatic     #21                 // Field io/undertow/util/Headers.CONTENT_TYPE:Lio/undertow/util/HttpString;
      92: invokevirtual #22                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      95: astore        10
      97: aload         10
      99: ifnull        120
     102: aload         10
     104: ldc           #23                 // String charset
     106: invokestatic  #24                 // Method io/undertow/util/Headers.extractQuotedValueFromHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     109: astore        11
     111: aload         11
     113: ifnull        120
     116: aload         11
     118: astore        9
     120: aload_0
     121: aload_2
     122: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     125: invokevirtual #25                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     128: aload_0
     129: aload_3
     130: getstatic     #26                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
     133: invokevirtual #27                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     136: aload         9
     138: invokestatic  #28                 // Method io/undertow/util/MultipartParser.beginParse:(Lio/undertow/connector/ByteBufferPool;Lio/undertow/util/MultipartParser$PartHandler;[BLjava/lang/String;)Lio/undertow/util/MultipartParser$ParseState;
     141: putfield      #29                 // Field parser:Lio/undertow/util/MultipartParser$ParseState;
     144: return

  public void parse(io.undertow.server.HttpHandler) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #30                 // Field FORM_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: ifnull        24
      13: aload_1
      14: aload_0
      15: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      18: invokeinterface #32,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      23: return
      24: aload_0
      25: aload_1
      26: putfield      #33                 // Field handler:Lio/undertow/server/HttpHandler;
      29: aload_0
      30: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      33: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.getRequestChannel:()Lorg/xnio/channels/StreamSourceChannel;
      36: astore_2
      37: aload_2
      38: ifnonnull     57
      41: new           #35                 // class java/io/IOException
      44: dup
      45: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      48: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.requestChannelAlreadyProvided:()Ljava/lang/IllegalStateException;
      53: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      56: athrow
      57: aload_0
      58: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
      61: getfield      #39                 // Field io/undertow/server/handlers/form/MultiPartParserDefinition.executor:Ljava/util/concurrent/Executor;
      64: ifnonnull     97
      67: aload_0
      68: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      71: new           #40                 // class io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask
      74: dup
      75: aload_0
      76: aload_0
      77: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      80: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      83: invokevirtual #41                 // Method io/undertow/server/ServerConnection.getWorker:()Lorg/xnio/XnioWorker;
      86: aload_2
      87: invokespecial #42                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler;Ljava/util/concurrent/Executor;Lorg/xnio/channels/StreamSourceChannel;)V
      90: invokevirtual #43                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      93: pop
      94: goto          128
      97: aload_0
      98: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     101: aload_0
     102: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
     105: getfield      #39                 // Field io/undertow/server/handlers/form/MultiPartParserDefinition.executor:Ljava/util/concurrent/Executor;
     108: new           #40                 // class io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask
     111: dup
     112: aload_0
     113: aload_0
     114: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
     117: getfield      #39                 // Field io/undertow/server/handlers/form/MultiPartParserDefinition.executor:Ljava/util/concurrent/Executor;
     120: aload_2
     121: invokespecial #42                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler;Ljava/util/concurrent/Executor;Lorg/xnio/channels/StreamSourceChannel;)V
     124: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
     127: pop
     128: return

  public io.undertow.server.handlers.form.FormData parseBlocking() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #30                 // Field FORM_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #13                 // class io/undertow/server/handlers/form/FormData
      13: astore_1
      14: aload_1
      15: ifnull        20
      18: aload_1
      19: areturn
      20: aload_0
      21: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      24: invokevirtual #45                 // Method io/undertow/server/HttpServerExchange.getInputStream:()Ljava/io/InputStream;
      27: astore_2
      28: aload_2
      29: ifnonnull     48
      32: new           #35                 // class java/io/IOException
      35: dup
      36: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      39: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.requestChannelAlreadyProvided:()Ljava/lang/IllegalStateException;
      44: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      47: athrow
      48: aload_0
      49: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      52: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      55: invokevirtual #25                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      58: invokeinterface #46,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.getArrayBackedPool:()Lio/undertow/connector/ByteBufferPool;
      63: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      68: astore_3
      69: aload_3
      70: ifnull        179
      73: aload_3
      74: invokeinterface #48,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      79: astore        4
      81: aload         4
      83: invokevirtual #49                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      86: pop
      87: aload_2
      88: aload         4
      90: invokevirtual #50                 // Method java/nio/ByteBuffer.array:()[B
      93: aload         4
      95: invokevirtual #51                 // Method java/nio/ByteBuffer.arrayOffset:()I
      98: aload         4
     100: invokevirtual #52                 // Method java/nio/ByteBuffer.remaining:()I
     103: invokevirtual #53                 // Method java/io/InputStream.read:([BII)I
     106: istore        5
     108: iload         5
     110: iconst_m1
     111: if_icmpne     136
     114: aload_0
     115: getfield      #29                 // Field parser:Lio/undertow/util/MultipartParser$ParseState;
     118: invokevirtual #54                 // Method io/undertow/util/MultipartParser$ParseState.isComplete:()Z
     121: ifeq          127
     124: goto          161
     127: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     130: invokeinterface #55,  1           // InterfaceMethod io/undertow/UndertowMessages.connectionTerminatedReadingMultiPartData:()Ljava/io/IOException;
     135: athrow
     136: iload         5
     138: ifeq          158
     141: aload         4
     143: iload         5
     145: invokevirtual #56                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     148: pop
     149: aload_0
     150: getfield      #29                 // Field parser:Lio/undertow/util/MultipartParser$ParseState;
     153: aload         4
     155: invokevirtual #57                 // Method io/undertow/util/MultipartParser$ParseState.parse:(Ljava/nio/ByteBuffer;)V
     158: goto          81
     161: aload_0
     162: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     165: getstatic     #30                 // Field FORM_DATA:Lio/undertow/util/AttachmentKey;
     168: aload_0
     169: getfield      #19                 // Field data:Lio/undertow/server/handlers/form/FormData;
     172: invokevirtual #58                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
     175: pop
     176: goto          188
     179: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     182: invokeinterface #59,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToAllocateResource:()Ljava/io/IOException;
     187: athrow
     188: aload_3
     189: ifnull        228
     192: aload_3
     193: invokeinterface #60,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     198: goto          228
     201: astore        4
     203: aload_3
     204: ifnull        225
     207: aload_3
     208: invokeinterface #60,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     213: goto          225
     216: astore        5
     218: aload         4
     220: aload         5
     222: invokevirtual #62                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     225: aload         4
     227: athrow
     228: goto          241
     231: astore_3
     232: new           #35                 // class java/io/IOException
     235: dup
     236: aload_3
     237: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     240: athrow
     241: aload_0
     242: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     245: getstatic     #30                 // Field FORM_DATA:Lio/undertow/util/AttachmentKey;
     248: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     251: checkcast     #13                 // class io/undertow/server/handlers/form/FormData
     254: areturn
    Exception table:
       from    to  target type
          69   188   201   Class java/lang/Throwable
         207   213   216   Class java/lang/Throwable
          48   228   231   Class io/undertow/util/MalformedMessageException

  public void beginPart(io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #64                 // Field currentFileSize:J
       5: aload_0
       6: aload_1
       7: putfield      #65                 // Field headers:Lio/undertow/util/HeaderMap;
      10: aload_1
      11: getstatic     #66                 // Field io/undertow/util/Headers.CONTENT_DISPOSITION:Lio/undertow/util/HttpString;
      14: invokevirtual #22                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      17: astore_2
      18: aload_2
      19: ifnull        434
      22: aload_2
      23: ldc           #67                 // String form-data
      25: invokevirtual #68                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      28: ifeq          434
      31: aload_0
      32: aload_2
      33: ldc           #69                 // String name
      35: invokestatic  #24                 // Method io/undertow/util/Headers.extractQuotedValueFromHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      38: putfield      #70                 // Field currentName:Ljava/lang/String;
      41: aload_0
      42: aload_2
      43: ldc           #71                 // String filename
      45: invokestatic  #72                 // Method io/undertow/util/Headers.extractQuotedValueFromHeaderWithEncoding:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      48: putfield      #73                 // Field fileName:Ljava/lang/String;
      51: aload_0
      52: getfield      #73                 // Field fileName:Ljava/lang/String;
      55: ifnull        434
      58: aload_0
      59: getfield      #12                 // Field fileSizeThreshold:J
      62: lconst_0
      63: lcmp
      64: ifne          434
      67: aload_0
      68: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
      71: getfield      #74                 // Field io/undertow/server/handlers/form/MultiPartParserDefinition.tempFileLocation:Ljava/nio/file/Path;
      74: ifnull        365
      77: iconst_0
      78: anewarray     #75                 // class java/nio/file/attribute/FileAttribute
      81: astore_3
      82: iconst_0
      83: anewarray     #76                 // class java/nio/file/LinkOption
      86: astore        4
      88: aload_0
      89: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
      92: getfield      #74                 // Field io/undertow/server/handlers/form/MultiPartParserDefinition.tempFileLocation:Ljava/nio/file/Path;
      95: invokeinterface #77,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
     100: astore        5
     102: aload         5
     104: iconst_0
     105: anewarray     #76                 // class java/nio/file/LinkOption
     108: invokestatic  #78                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     111: ifne          317
     114: aload         5
     116: invokeinterface #79,  1           // InterfaceMethod java/nio/file/Path.getNameCount:()I
     121: istore        6
     123: aload         5
     125: astore        7
     127: new           #80                 // class java/util/LinkedList
     130: dup
     131: invokespecial #81                 // Method java/util/LinkedList."<init>":()V
     134: astore        8
     136: iconst_0
     137: istore        9
     139: iload         9
     141: iload         6
     143: if_icmpge     199
     146: aload         7
     148: aload         4
     150: invokestatic  #78                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     153: ifeq          177
     156: aload         7
     158: aload         4
     160: invokestatic  #82                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     163: ifne          199
     166: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     169: aload         7
     171: invokeinterface #83,  2           // InterfaceMethod io/undertow/UndertowMessages.pathElementIsRegularFile:(Ljava/nio/file/Path;)Ljava/io/IOException;
     176: athrow
     177: aload         8
     179: aload         7
     181: invokevirtual #84                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
     184: aload         7
     186: invokeinterface #85,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
     191: astore        7
     193: iinc          9, 1
     196: goto          139
     199: aload         5
     201: aload_3
     202: invokestatic  #86                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
     205: pop
     206: aload         8
     208: invokevirtual #87                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     211: astore        9
     213: aload         9
     215: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     220: ifeq          256
     223: aload         9
     225: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     230: checkcast     #90                 // class java/nio/file/Path
     233: astore        10
     235: aload         10
     237: invokeinterface #91,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     242: invokevirtual #92                 // Method java/io/File.deleteOnExit:()V
     245: goto          253
     248: astore        11
     250: goto          256
     253: goto          213
     256: goto          314
     259: astore        12
     261: aload         8
     263: invokevirtual #87                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     266: astore        13
     268: aload         13
     270: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     275: ifeq          311
     278: aload         13
     280: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     285: checkcast     #90                 // class java/nio/file/Path
     288: astore        14
     290: aload         14
     292: invokeinterface #91,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     297: invokevirtual #92                 // Method java/io/File.deleteOnExit:()V
     300: goto          308
     303: astore        15
     305: goto          311
     308: goto          268
     311: aload         12
     313: athrow
     314: goto          345
     317: aload         5
     319: aload         4
     321: invokestatic  #82                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     324: ifne          345
     327: new           #35                 // class java/io/IOException
     330: dup
     331: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     334: aload         5
     336: invokeinterface #94,  2           // InterfaceMethod io/undertow/UndertowMessages.pathNotADirectory:(Ljava/nio/file/Path;)Ljava/io/IOException;
     341: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     344: athrow
     345: aload_0
     346: aload         5
     348: ldc           #95                 // String undertow
     350: ldc           #96                 // String upload
     352: iconst_0
     353: anewarray     #75                 // class java/nio/file/attribute/FileAttribute
     356: invokestatic  #97                 // Method java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
     359: putfield      #98                 // Field file:Ljava/nio/file/Path;
     362: goto          380
     365: aload_0
     366: ldc           #95                 // String undertow
     368: ldc           #96                 // String upload
     370: iconst_0
     371: anewarray     #75                 // class java/nio/file/attribute/FileAttribute
     374: invokestatic  #99                 // Method java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
     377: putfield      #98                 // Field file:Ljava/nio/file/Path;
     380: aload_0
     381: getfield      #5                  // Field createdFiles:Ljava/util/List;
     384: aload_0
     385: getfield      #98                 // Field file:Ljava/nio/file/Path;
     388: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     393: pop
     394: aload_0
     395: aload_0
     396: getfield      #98                 // Field file:Ljava/nio/file/Path;
     399: iconst_2
     400: anewarray     #101                // class java/nio/file/OpenOption
     403: dup
     404: iconst_0
     405: getstatic     #102                // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
     408: aastore
     409: dup
     410: iconst_1
     411: getstatic     #103                // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
     414: aastore
     415: invokestatic  #104                // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
     418: putfield      #105                // Field fileChannel:Ljava/nio/channels/FileChannel;
     421: goto          434
     424: astore_3
     425: new           #106                // class java/lang/RuntimeException
     428: dup
     429: aload_3
     430: invokespecial #107                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     433: athrow
     434: return
    Exception table:
       from    to  target type
         235   245   248   Class java/lang/Exception
         199   206   259   any
         290   300   303   Class java/lang/Exception
         259   261   259   any
          67   421   424   Class java/io/IOException

  public void data(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #64                 // Field currentFileSize:J
       5: aload_1
       6: invokevirtual #52                 // Method java/nio/ByteBuffer.remaining:()I
       9: i2l
      10: ladd
      11: putfield      #64                 // Field currentFileSize:J
      14: aload_0
      15: getfield      #10                 // Field maxIndividualFileSize:J
      18: lconst_0
      19: lcmp
      20: ifle          48
      23: aload_0
      24: getfield      #64                 // Field currentFileSize:J
      27: aload_0
      28: getfield      #10                 // Field maxIndividualFileSize:J
      31: lcmp
      32: ifle          48
      35: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      38: aload_0
      39: getfield      #10                 // Field maxIndividualFileSize:J
      42: invokeinterface #108,  3          // InterfaceMethod io/undertow/UndertowMessages.maxFileSizeExceeded:(J)Lio/undertow/server/handlers/form/MultiPartParserDefinition$FileTooLargeException;
      47: athrow
      48: aload_0
      49: getfield      #98                 // Field file:Ljava/nio/file/Path;
      52: ifnonnull     184
      55: aload_0
      56: getfield      #73                 // Field fileName:Ljava/lang/String;
      59: ifnull        184
      62: aload_0
      63: getfield      #12                 // Field fileSizeThreshold:J
      66: aload_0
      67: getfield      #64                 // Field currentFileSize:J
      70: lcmp
      71: ifge          184
      74: aload_0
      75: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
      78: getfield      #74                 // Field io/undertow/server/handlers/form/MultiPartParserDefinition.tempFileLocation:Ljava/nio/file/Path;
      81: ifnull        109
      84: aload_0
      85: aload_0
      86: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
      89: getfield      #74                 // Field io/undertow/server/handlers/form/MultiPartParserDefinition.tempFileLocation:Ljava/nio/file/Path;
      92: ldc           #95                 // String undertow
      94: ldc           #96                 // String upload
      96: iconst_0
      97: anewarray     #75                 // class java/nio/file/attribute/FileAttribute
     100: invokestatic  #97                 // Method java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
     103: putfield      #98                 // Field file:Ljava/nio/file/Path;
     106: goto          124
     109: aload_0
     110: ldc           #95                 // String undertow
     112: ldc           #96                 // String upload
     114: iconst_0
     115: anewarray     #75                 // class java/nio/file/attribute/FileAttribute
     118: invokestatic  #99                 // Method java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
     121: putfield      #98                 // Field file:Ljava/nio/file/Path;
     124: aload_0
     125: getfield      #5                  // Field createdFiles:Ljava/util/List;
     128: aload_0
     129: getfield      #98                 // Field file:Ljava/nio/file/Path;
     132: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     137: pop
     138: new           #109                // class java/io/FileOutputStream
     141: dup
     142: aload_0
     143: getfield      #98                 // Field file:Ljava/nio/file/Path;
     146: invokeinterface #91,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     151: invokespecial #110                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
     154: astore_2
     155: aload_0
     156: getfield      #8                  // Field contentBytes:Ljava/io/ByteArrayOutputStream;
     159: aload_2
     160: invokevirtual #111                // Method java/io/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V
     163: aload_0
     164: aload_2
     165: invokevirtual #112                // Method java/io/FileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
     168: putfield      #105                // Field fileChannel:Ljava/nio/channels/FileChannel;
     171: goto          184
     174: astore_2
     175: new           #106                // class java/lang/RuntimeException
     178: dup
     179: aload_2
     180: invokespecial #107                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     183: athrow
     184: aload_0
     185: getfield      #98                 // Field file:Ljava/nio/file/Path;
     188: ifnonnull     212
     191: aload_1
     192: invokevirtual #113                // Method java/nio/ByteBuffer.hasRemaining:()Z
     195: ifeq          221
     198: aload_0
     199: getfield      #8                  // Field contentBytes:Ljava/io/ByteArrayOutputStream;
     202: aload_1
     203: invokevirtual #114                // Method java/nio/ByteBuffer.get:()B
     206: invokevirtual #115                // Method java/io/ByteArrayOutputStream.write:(I)V
     209: goto          191
     212: aload_0
     213: getfield      #105                // Field fileChannel:Ljava/nio/channels/FileChannel;
     216: aload_1
     217: invokevirtual #116                // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
     220: pop
     221: return
    Exception table:
       from    to  target type
          74   171   174   Class java/io/IOException

  public void endPart();
    Code:
       0: aload_0
       1: getfield      #98                 // Field file:Ljava/nio/file/Path;
       4: ifnull        67
       7: aload_0
       8: getfield      #19                 // Field data:Lio/undertow/server/handlers/form/FormData;
      11: aload_0
      12: getfield      #70                 // Field currentName:Ljava/lang/String;
      15: aload_0
      16: getfield      #98                 // Field file:Ljava/nio/file/Path;
      19: aload_0
      20: getfield      #73                 // Field fileName:Ljava/lang/String;
      23: aload_0
      24: getfield      #65                 // Field headers:Lio/undertow/util/HeaderMap;
      27: invokevirtual #117                // Method io/undertow/server/handlers/form/FormData.add:(Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
      30: aload_0
      31: aconst_null
      32: putfield      #98                 // Field file:Ljava/nio/file/Path;
      35: aload_0
      36: getfield      #8                  // Field contentBytes:Ljava/io/ByteArrayOutputStream;
      39: invokevirtual #118                // Method java/io/ByteArrayOutputStream.reset:()V
      42: aload_0
      43: getfield      #105                // Field fileChannel:Ljava/nio/channels/FileChannel;
      46: invokevirtual #119                // Method java/nio/channels/FileChannel.close:()V
      49: aload_0
      50: aconst_null
      51: putfield      #105                // Field fileChannel:Ljava/nio/channels/FileChannel;
      54: goto          204
      57: astore_1
      58: new           #106                // class java/lang/RuntimeException
      61: dup
      62: aload_1
      63: invokespecial #107                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      66: athrow
      67: aload_0
      68: getfield      #73                 // Field fileName:Ljava/lang/String;
      71: ifnull        120
      74: aload_0
      75: getfield      #19                 // Field data:Lio/undertow/server/handlers/form/FormData;
      78: aload_0
      79: getfield      #70                 // Field currentName:Ljava/lang/String;
      82: aload_0
      83: getfield      #8                  // Field contentBytes:Ljava/io/ByteArrayOutputStream;
      86: invokevirtual #120                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      89: aload_0
      90: getfield      #8                  // Field contentBytes:Ljava/io/ByteArrayOutputStream;
      93: invokevirtual #121                // Method java/io/ByteArrayOutputStream.size:()I
      96: invokestatic  #122                // Method java/util/Arrays.copyOf:([BI)[B
      99: aload_0
     100: getfield      #73                 // Field fileName:Ljava/lang/String;
     103: aload_0
     104: getfield      #65                 // Field headers:Lio/undertow/util/HeaderMap;
     107: invokevirtual #123                // Method io/undertow/server/handlers/form/FormData.add:(Ljava/lang/String;[BLjava/lang/String;Lio/undertow/util/HeaderMap;)V
     110: aload_0
     111: getfield      #8                  // Field contentBytes:Ljava/io/ByteArrayOutputStream;
     114: invokevirtual #118                // Method java/io/ByteArrayOutputStream.reset:()V
     117: goto          204
     120: aload_0
     121: getfield      #11                 // Field defaultEncoding:Ljava/lang/String;
     124: astore_1
     125: aload_0
     126: getfield      #65                 // Field headers:Lio/undertow/util/HeaderMap;
     129: getstatic     #21                 // Field io/undertow/util/Headers.CONTENT_TYPE:Lio/undertow/util/HttpString;
     132: invokevirtual #22                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     135: astore_2
     136: aload_2
     137: ifnull        153
     140: aload_2
     141: ldc           #23                 // String charset
     143: invokestatic  #24                 // Method io/undertow/util/Headers.extractQuotedValueFromHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     146: astore_3
     147: aload_3
     148: ifnull        153
     151: aload_3
     152: astore_1
     153: aload_0
     154: getfield      #19                 // Field data:Lio/undertow/server/handlers/form/FormData;
     157: aload_0
     158: getfield      #70                 // Field currentName:Ljava/lang/String;
     161: new           #124                // class java/lang/String
     164: dup
     165: aload_0
     166: getfield      #8                  // Field contentBytes:Ljava/io/ByteArrayOutputStream;
     169: invokevirtual #120                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     172: aload_1
     173: invokespecial #125                // Method java/lang/String."<init>":([BLjava/lang/String;)V
     176: aload_1
     177: aload_0
     178: getfield      #65                 // Field headers:Lio/undertow/util/HeaderMap;
     181: invokevirtual #126                // Method io/undertow/server/handlers/form/FormData.add:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
     184: goto          197
     187: astore_1
     188: new           #106                // class java/lang/RuntimeException
     191: dup
     192: aload_1
     193: invokespecial #107                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     196: athrow
     197: aload_0
     198: getfield      #8                  // Field contentBytes:Ljava/io/ByteArrayOutputStream;
     201: invokevirtual #118                // Method java/io/ByteArrayOutputStream.reset:()V
     204: return
    Exception table:
       from    to  target type
          42    54    57   Class java/io/IOException
         120   184   187   Class java/io/UnsupportedEncodingException

  public java.util.List<java.nio.file.Path> getCreatedFiles();
    Code:
       0: aload_0
       1: getfield      #5                  // Field createdFiles:Ljava/util/List;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #105                // Field fileChannel:Ljava/nio/channels/FileChannel;
       4: invokestatic  #128                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: new           #3                  // class java/util/ArrayList
      10: dup
      11: aload_0
      12: invokevirtual #129                // Method getCreatedFiles:()Ljava/util/List;
      15: invokespecial #130                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore_1
      19: aload_0
      20: getfield      #9                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      23: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      26: invokevirtual #41                 // Method io/undertow/server/ServerConnection.getWorker:()Lorg/xnio/XnioWorker;
      29: new           #131                // class io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$1
      32: dup
      33: aload_0
      34: aload_1
      35: invokespecial #132                // Method io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$1."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler;Ljava/util/List;)V
      38: invokevirtual #133                // Method org/xnio/XnioWorker.execute:(Ljava/lang/Runnable;)V
      41: return

  public void setCharacterEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field defaultEncoding:Ljava/lang/String;
       5: aload_0
       6: getfield      #29                 // Field parser:Lio/undertow/util/MultipartParser$ParseState;
       9: aload_1
      10: invokevirtual #134                // Method io/undertow/util/MultipartParser$ParseState.setCharacterEncoding:(Ljava/lang/String;)V
      13: return
}
