Compiled from "IPAddressAccessControlHandler.java"
public class io.undertow.server.handlers.IPAddressAccessControlHandler implements io.undertow.server.HttpHandler {
  private static final java.util.regex.Pattern IP4_EXACT;

  private static final java.util.regex.Pattern IP4_WILDCARD;

  private static final java.util.regex.Pattern IP4_SLASH;

  private static final java.util.regex.Pattern IP6_EXACT;

  private static final java.util.regex.Pattern IP6_WILDCARD;

  private static final java.util.regex.Pattern IP6_SLASH;

  private volatile io.undertow.server.HttpHandler next;

  private volatile boolean defaultAllow;

  private final int denyResponseCode;

  private final java.util.List<io.undertow.server.handlers.IPAddressAccessControlHandler$PeerMatch> ipv6acl;

  private final java.util.List<io.undertow.server.handlers.IPAddressAccessControlHandler$PeerMatch> ipv4acl;

  private static final boolean traceEnabled;

  private static final boolean debugEnabled;

  static final boolean $assertionsDisabled;

  public io.undertow.server.handlers.IPAddressAccessControlHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        403
       5: invokespecial #2                  // Method "<init>":(Lio/undertow/server/HttpHandler;I)V
       8: return

  public io.undertow.server.handlers.IPAddressAccessControlHandler(io.undertow.server.HttpHandler, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field defaultAllow:Z
       9: aload_0
      10: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
      13: dup
      14: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      17: putfield      #7                  // Field ipv6acl:Ljava/util/List;
      20: aload_0
      21: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
      24: dup
      25: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      28: putfield      #8                  // Field ipv4acl:Ljava/util/List;
      31: aload_0
      32: aload_1
      33: putfield      #9                  // Field next:Lio/undertow/server/HttpHandler;
      36: aload_0
      37: iload_2
      38: putfield      #10                 // Field denyResponseCode:I
      41: return

  public io.undertow.server.handlers.IPAddressAccessControlHandler();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field defaultAllow:Z
       9: aload_0
      10: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
      13: dup
      14: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      17: putfield      #7                  // Field ipv6acl:Ljava/util/List;
      20: aload_0
      21: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
      24: dup
      25: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      28: putfield      #8                  // Field ipv4acl:Ljava/util/List;
      31: aload_0
      32: getstatic     #11                 // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_404:Lio/undertow/server/handlers/ResponseCodeHandler;
      35: putfield      #9                  // Field next:Lio/undertow/server/HttpHandler;
      38: aload_0
      39: sipush        403
      42: putfield      #10                 // Field denyResponseCode:I
      45: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method io/undertow/server/HttpServerExchange.getSourceAddress:()Ljava/net/InetSocketAddress;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #13                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      10: invokevirtual #14                 // Method isAllowed:(Ljava/net/InetAddress;)Z
      13: ifeq          29
      16: aload_0
      17: getfield      #9                  // Field next:Lio/undertow/server/HttpHandler;
      20: aload_1
      21: invokeinterface #15,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      26: goto          64
      29: getstatic     #16                 // Field debugEnabled:Z
      32: ifeq          50
      35: getstatic     #17                 // Field io/undertow/UndertowLogger.PREDICATE_LOGGER:Lio/undertow/UndertowLogger;
      38: ldc           #18                 // String Access to [%s] blocked from %s.
      40: aload_1
      41: aload_2
      42: invokevirtual #19                 // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
      45: invokeinterface #20,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      50: aload_1
      51: aload_0
      52: getfield      #10                 // Field denyResponseCode:I
      55: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      58: pop
      59: aload_1
      60: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
      63: pop
      64: return

  boolean isAllowed(java.net.InetAddress);
    Code:
       0: aload_1
       1: instanceof    #23                 // class java/net/Inet4Address
       4: ifeq          87
       7: aload_0
       8: getfield      #8                  // Field ipv4acl:Ljava/util/List;
      11: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          84
      26: aload_2
      27: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #27                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$PeerMatch
      35: astore_3
      36: getstatic     #28                 // Field traceEnabled:Z
      39: ifeq          60
      42: getstatic     #17                 // Field io/undertow/UndertowLogger.PREDICATE_LOGGER:Lio/undertow/UndertowLogger;
      45: ldc           #29                 // String Comparing rule [%s] to IPv4 address %s.
      47: aload_3
      48: invokevirtual #30                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PeerMatch.toPredicateString:()Ljava/lang/String;
      51: aload_1
      52: invokevirtual #31                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      55: invokeinterface #32,  4           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      60: aload_3
      61: aload_1
      62: invokevirtual #33                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PeerMatch.matches:(Ljava/net/InetAddress;)Z
      65: ifeq          81
      68: aload_3
      69: invokevirtual #34                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PeerMatch.isDeny:()Z
      72: ifne          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn
      81: goto          17
      84: goto          171
      87: aload_1
      88: instanceof    #35                 // class java/net/Inet6Address
      91: ifeq          171
      94: aload_0
      95: getfield      #7                  // Field ipv6acl:Ljava/util/List;
      98: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     103: astore_2
     104: aload_2
     105: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          171
     113: aload_2
     114: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     119: checkcast     #27                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$PeerMatch
     122: astore_3
     123: getstatic     #28                 // Field traceEnabled:Z
     126: ifeq          147
     129: getstatic     #17                 // Field io/undertow/UndertowLogger.PREDICATE_LOGGER:Lio/undertow/UndertowLogger;
     132: ldc           #36                 // String Comparing rule [%s] to IPv6 address %s.
     134: aload_3
     135: invokevirtual #30                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PeerMatch.toPredicateString:()Ljava/lang/String;
     138: aload_1
     139: invokevirtual #31                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     142: invokeinterface #32,  4           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     147: aload_3
     148: aload_1
     149: invokevirtual #33                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PeerMatch.matches:(Ljava/net/InetAddress;)Z
     152: ifeq          168
     155: aload_3
     156: invokevirtual #34                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PeerMatch.isDeny:()Z
     159: ifne          166
     162: iconst_1
     163: goto          167
     166: iconst_0
     167: ireturn
     168: goto          104
     171: aload_0
     172: getfield      #4                  // Field defaultAllow:Z
     175: ireturn

  public int getDenyResponseCode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field denyResponseCode:I
       4: ireturn

  public boolean isDefaultAllow();
    Code:
       0: aload_0
       1: getfield      #4                  // Field defaultAllow:Z
       4: ireturn

  public io.undertow.server.handlers.IPAddressAccessControlHandler setDefaultAllow(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field defaultAllow:Z
       5: aload_0
       6: areturn

  public io.undertow.server.HttpHandler getNext();
    Code:
       0: aload_0
       1: getfield      #9                  // Field next:Lio/undertow/server/HttpHandler;
       4: areturn

  public io.undertow.server.handlers.IPAddressAccessControlHandler setNext(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field next:Lio/undertow/server/HttpHandler;
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.IPAddressAccessControlHandler addAllow(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #37                 // Method addRule:(Ljava/lang/String;Z)Lio/undertow/server/handlers/IPAddressAccessControlHandler;
       6: areturn

  public io.undertow.server.handlers.IPAddressAccessControlHandler addDeny(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #37                 // Method addRule:(Ljava/lang/String;Z)Lio/undertow/server/handlers/IPAddressAccessControlHandler;
       6: areturn

  public io.undertow.server.handlers.IPAddressAccessControlHandler clearRules();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ipv4acl:Ljava/util/List;
       4: invokeinterface #38,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #7                  // Field ipv6acl:Ljava/util/List;
      13: invokeinterface #38,  1           // InterfaceMethod java/util/List.clear:()V
      18: aload_0
      19: areturn

  private io.undertow.server.handlers.IPAddressAccessControlHandler addRule(java.lang.String, boolean);
    Code:
       0: getstatic     #39                 // Field IP4_EXACT:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #40                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #41                 // Method java/util/regex/Matcher.matches:()Z
      10: ifeq          22
      13: aload_0
      14: aload_1
      15: iload_2
      16: invokevirtual #42                 // Method addIpV4ExactMatch:(Ljava/lang/String;Z)V
      19: goto          142
      22: getstatic     #43                 // Field IP4_WILDCARD:Ljava/util/regex/Pattern;
      25: aload_1
      26: invokevirtual #40                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      29: invokevirtual #41                 // Method java/util/regex/Matcher.matches:()Z
      32: ifeq          44
      35: aload_0
      36: aload_1
      37: iload_2
      38: invokevirtual #44                 // Method addIpV4WildcardMatch:(Ljava/lang/String;Z)V
      41: goto          142
      44: getstatic     #45                 // Field IP4_SLASH:Ljava/util/regex/Pattern;
      47: aload_1
      48: invokevirtual #40                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      51: invokevirtual #41                 // Method java/util/regex/Matcher.matches:()Z
      54: ifeq          66
      57: aload_0
      58: aload_1
      59: iload_2
      60: invokevirtual #46                 // Method addIpV4SlashPrefix:(Ljava/lang/String;Z)V
      63: goto          142
      66: getstatic     #47                 // Field IP6_EXACT:Ljava/util/regex/Pattern;
      69: aload_1
      70: invokevirtual #40                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      73: invokevirtual #41                 // Method java/util/regex/Matcher.matches:()Z
      76: ifeq          88
      79: aload_0
      80: aload_1
      81: iload_2
      82: invokevirtual #48                 // Method addIpV6ExactMatch:(Ljava/lang/String;Z)V
      85: goto          142
      88: getstatic     #49                 // Field IP6_WILDCARD:Ljava/util/regex/Pattern;
      91: aload_1
      92: invokevirtual #40                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      95: invokevirtual #41                 // Method java/util/regex/Matcher.matches:()Z
      98: ifeq          110
     101: aload_0
     102: aload_1
     103: iload_2
     104: invokevirtual #50                 // Method addIpV6WildcardMatch:(Ljava/lang/String;Z)V
     107: goto          142
     110: getstatic     #51                 // Field IP6_SLASH:Ljava/util/regex/Pattern;
     113: aload_1
     114: invokevirtual #40                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     117: invokevirtual #41                 // Method java/util/regex/Matcher.matches:()Z
     120: ifeq          132
     123: aload_0
     124: aload_1
     125: iload_2
     126: invokevirtual #52                 // Method addIpV6SlashPrefix:(Ljava/lang/String;Z)V
     129: goto          142
     132: getstatic     #53                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     135: aload_1
     136: invokeinterface #54,  2           // InterfaceMethod io/undertow/UndertowMessages.notAValidIpPattern:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     141: athrow
     142: aload_0
     143: areturn

  private void addIpV6SlashPrefix(java.lang.String, boolean);
    Code:
       0: aload_1
       1: ldc           #55                 // String \\/
       3: invokevirtual #56                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: iconst_0
       9: aaload
      10: ldc           #57                 // String \\:
      12: invokevirtual #56                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      15: astore        4
      17: aload_3
      18: iconst_1
      19: aaload
      20: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      23: istore        5
      25: getstatic     #59                 // Field $assertionsDisabled:Z
      28: ifne          47
      31: aload         4
      33: arraylength
      34: bipush        8
      36: if_icmpeq     47
      39: new           #60                 // class java/lang/AssertionError
      42: dup
      43: invokespecial #61                 // Method java/lang/AssertionError."<init>":()V
      46: athrow
      47: bipush        16
      49: newarray       byte
      51: astore        6
      53: bipush        16
      55: newarray       byte
      57: astore        7
      59: iconst_0
      60: istore        8
      62: iload         8
      64: bipush        8
      66: if_icmpge     116
      69: aload         4
      71: iload         8
      73: aaload
      74: bipush        16
      76: invokestatic  #62                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
      79: istore        9
      81: aload         6
      83: iload         8
      85: iconst_2
      86: imul
      87: iload         9
      89: bipush        8
      91: ishr
      92: i2b
      93: bastore
      94: aload         6
      96: iload         8
      98: iconst_2
      99: imul
     100: iconst_1
     101: iadd
     102: iload         9
     104: sipush        255
     107: iand
     108: i2b
     109: bastore
     110: iinc          8, 1
     113: goto          62
     116: iconst_0
     117: istore        8
     119: iload         8
     121: bipush        16
     123: if_icmpge     179
     126: iload         5
     128: bipush        8
     130: if_icmple     145
     133: aload         7
     135: iload         8
     137: iconst_m1
     138: bastore
     139: iinc          5, -8
     142: goto          173
     145: iload         5
     147: ifeq          179
     150: aload         7
     152: iload         8
     154: bipush        8
     156: iload         5
     158: isub
     159: bipush        7
     161: invokestatic  #63                 // Method org/xnio/Bits.intBitMask:(II)I
     164: sipush        255
     167: iand
     168: i2b
     169: bastore
     170: iconst_0
     171: istore        5
     173: iinc          8, 1
     176: goto          119
     179: aload_0
     180: getfield      #7                  // Field ipv6acl:Ljava/util/List;
     183: new           #64                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$PrefixIpV6PeerMatch
     186: dup
     187: iload_2
     188: aload_1
     189: aload         7
     191: aload         6
     193: invokespecial #65                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PrefixIpV6PeerMatch."<init>":(ZLjava/lang/String;[B[B)V
     196: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     201: pop
     202: return

  private void addIpV4SlashPrefix(java.lang.String, boolean);
    Code:
       0: aload_1
       1: ldc           #55                 // String \\/
       3: invokevirtual #56                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: iconst_0
       9: aaload
      10: ldc           #67                 // String \\.
      12: invokevirtual #56                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      15: astore        4
      17: aload_3
      18: iconst_1
      19: aaload
      20: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      23: istore        5
      25: bipush        32
      27: iload         5
      29: isub
      30: bipush        31
      32: invokestatic  #63                 // Method org/xnio/Bits.intBitMask:(II)I
      35: istore        6
      37: iconst_0
      38: istore        7
      40: iconst_0
      41: istore        8
      43: iload         8
      45: iconst_4
      46: if_icmpge     83
      49: iload         7
      51: bipush        8
      53: ishl
      54: istore        7
      56: aload         4
      58: iload         8
      60: aaload
      61: astore        9
      63: aload         9
      65: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      68: istore        10
      70: iload         7
      72: iload         10
      74: ior
      75: istore        7
      77: iinc          8, 1
      80: goto          43
      83: iload         7
      85: iload         6
      87: iand
      88: istore        7
      90: aload_0
      91: getfield      #8                  // Field ipv4acl:Ljava/util/List;
      94: new           #68                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$PrefixIpV4PeerMatch
      97: dup
      98: iload_2
      99: aload_1
     100: iload         6
     102: iload         7
     104: invokespecial #69                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PrefixIpV4PeerMatch."<init>":(ZLjava/lang/String;II)V
     107: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: return

  private void addIpV6WildcardMatch(java.lang.String, boolean);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_3
       5: bipush        16
       7: newarray       byte
       9: astore        4
      11: aload_1
      12: ldc           #57                 // String \\:
      14: invokevirtual #56                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      17: astore        5
      19: getstatic     #59                 // Field $assertionsDisabled:Z
      22: ifne          41
      25: aload         5
      27: arraylength
      28: bipush        8
      30: if_icmpeq     41
      33: new           #60                 // class java/lang/AssertionError
      36: dup
      37: invokespecial #61                 // Method java/lang/AssertionError."<init>":()V
      40: athrow
      41: iconst_0
      42: istore        6
      44: iload         6
      46: bipush        8
      48: if_icmpge     127
      51: aload         5
      53: iload         6
      55: aaload
      56: ldc           #70                 // String *
      58: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifne          121
      64: aload         5
      66: iload         6
      68: aaload
      69: bipush        16
      71: invokestatic  #62                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
      74: istore        7
      76: aload_3
      77: iload         6
      79: iconst_2
      80: imul
      81: iload         7
      83: bipush        8
      85: ishr
      86: i2b
      87: bastore
      88: aload_3
      89: iload         6
      91: iconst_2
      92: imul
      93: iconst_1
      94: iadd
      95: iload         7
      97: sipush        255
     100: iand
     101: i2b
     102: bastore
     103: aload         4
     105: iload         6
     107: iconst_2
     108: imul
     109: iconst_m1
     110: bastore
     111: aload         4
     113: iload         6
     115: iconst_2
     116: imul
     117: iconst_1
     118: iadd
     119: iconst_m1
     120: bastore
     121: iinc          6, 1
     124: goto          44
     127: aload_0
     128: getfield      #7                  // Field ipv6acl:Ljava/util/List;
     131: new           #64                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$PrefixIpV6PeerMatch
     134: dup
     135: iload_2
     136: aload_1
     137: aload         4
     139: aload_3
     140: invokespecial #65                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PrefixIpV6PeerMatch."<init>":(ZLjava/lang/String;[B[B)V
     143: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     148: pop
     149: return

  private void addIpV4WildcardMatch(java.lang.String, boolean);
    Code:
       0: aload_1
       1: ldc           #67                 // String \\.
       3: invokevirtual #56                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_3
       7: iconst_0
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iconst_0
      14: istore        6
      16: iload         6
      18: iconst_4
      19: if_icmpge     80
      22: iload         4
      24: bipush        8
      26: ishl
      27: istore        4
      29: iload         5
      31: bipush        8
      33: ishl
      34: istore        5
      36: aload_3
      37: iload         6
      39: aaload
      40: astore        7
      42: aload         7
      44: ldc           #70                 // String *
      46: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifne          74
      52: aload         7
      54: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      57: istore        8
      59: iload         4
      61: sipush        255
      64: ior
      65: istore        4
      67: iload         5
      69: iload         8
      71: ior
      72: istore        5
      74: iinc          6, 1
      77: goto          16
      80: aload_0
      81: getfield      #8                  // Field ipv4acl:Ljava/util/List;
      84: new           #68                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$PrefixIpV4PeerMatch
      87: dup
      88: iload_2
      89: aload_1
      90: iload         4
      92: iload         5
      94: invokespecial #69                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PrefixIpV4PeerMatch."<init>":(ZLjava/lang/String;II)V
      97: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     102: pop
     103: return

  private void addIpV6ExactMatch(java.lang.String, boolean);
    Code:
       0: aload_1
       1: invokestatic  #72                 // Method io/undertow/util/NetworkUtils.parseIpv6AddressToBytes:(Ljava/lang/String;)[B
       4: astore_3
       5: aload_0
       6: getfield      #7                  // Field ipv6acl:Ljava/util/List;
       9: new           #73                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$ExactIpV6PeerMatch
      12: dup
      13: iload_2
      14: aload_1
      15: aload_3
      16: invokespecial #74                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$ExactIpV6PeerMatch."<init>":(ZLjava/lang/String;[B)V
      19: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: goto          41
      28: astore        4
      30: getstatic     #53                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      33: aload         4
      35: invokeinterface #76,  2           // InterfaceMethod io/undertow/UndertowMessages.invalidACLAddress:(Ljava/lang/Exception;)Ljava/lang/IllegalArgumentException;
      40: athrow
      41: return
    Exception table:
       from    to  target type
           0    25    28   Class java/io/IOException

  private void addIpV4ExactMatch(java.lang.String, boolean);
    Code:
       0: aload_1
       1: ldc           #67                 // String \\.
       3: invokevirtual #56                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_3
       7: iconst_4
       8: newarray       byte
      10: dup
      11: iconst_0
      12: aload_3
      13: iconst_0
      14: aaload
      15: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      18: i2b
      19: bastore
      20: dup
      21: iconst_1
      22: aload_3
      23: iconst_1
      24: aaload
      25: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      28: i2b
      29: bastore
      30: dup
      31: iconst_2
      32: aload_3
      33: iconst_2
      34: aaload
      35: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      38: i2b
      39: bastore
      40: dup
      41: iconst_3
      42: aload_3
      43: iconst_3
      44: aaload
      45: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      48: i2b
      49: bastore
      50: astore        4
      52: aload_0
      53: getfield      #8                  // Field ipv4acl:Ljava/util/List;
      56: new           #77                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$ExactIpV4PeerMatch
      59: dup
      60: iload_2
      61: aload_1
      62: aload         4
      64: invokespecial #78                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$ExactIpV4PeerMatch."<init>":(ZLjava/lang/String;[B)V
      67: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field defaultAllow:Z
       4: invokedynamic #79,  0             // InvokeDynamic #0:makeConcatWithConstants:(Z)Ljava/lang/String;
       9: astore_1
      10: new           #80                 // class java/util/ArrayList
      13: dup
      14: invokespecial #81                 // Method java/util/ArrayList."<init>":()V
      17: astore_2
      18: aload_2
      19: aload_0
      20: getfield      #8                  // Field ipv4acl:Ljava/util/List;
      23: invokeinterface #82,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      28: pop
      29: aload_2
      30: aload_0
      31: getfield      #7                  // Field ipv6acl:Ljava/util/List;
      34: invokeinterface #82,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      39: pop
      40: aload_1
      41: aload_2
      42: invokeinterface #83,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      47: invokedynamic #84,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      52: invokeinterface #85,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      57: ldc           #86                 // String ,
      59: invokestatic  #87                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      62: invokeinterface #88,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      67: checkcast     #89                 // class java/lang/String
      70: invokedynamic #90,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      75: astore_1
      76: aload_1
      77: invokedynamic #91,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      82: astore_1
      83: aload_0
      84: getfield      #10                 // Field denyResponseCode:I
      87: sipush        403
      90: if_icmpeq     104
      93: aload_1
      94: aload_0
      95: getfield      #10                 // Field denyResponseCode:I
      98: invokedynamic #92,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
     103: astore_1
     104: aload_1
     105: invokedynamic #93,  0             // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     110: astore_1
     111: aload_1
     112: areturn

  private static java.lang.String lambda$toString$0(io.undertow.server.handlers.IPAddressAccessControlHandler$PeerMatch);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$PeerMatch.toPredicateString:()Ljava/lang/String;
       4: invokedynamic #94,  0             // InvokeDynamic #6:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: ldc           #95                 // class io/undertow/server/handlers/IPAddressAccessControlHandler
       2: invokevirtual #96                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #59                 // Field $assertionsDisabled:Z
      16: ldc           #98                 // String (?:\\d{1,3}\\.){3}\\d{1,3}
      18: invokestatic  #99                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      21: putstatic     #39                 // Field IP4_EXACT:Ljava/util/regex/Pattern;
      24: ldc           #100                // String (?:(?:\\d{1,3}|\\*)\\.){3}(?:\\d{1,3}|\\*)
      26: invokestatic  #99                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      29: putstatic     #43                 // Field IP4_WILDCARD:Ljava/util/regex/Pattern;
      32: ldc           #101                // String (?:\\d{1,3}\\.){3}\\d{1,3}\\/\\d\\d?
      34: invokestatic  #99                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      37: putstatic     #45                 // Field IP4_SLASH:Ljava/util/regex/Pattern;
      40: ldc           #102                // String ^(?:([0-9a-fA-F]{1,4}:){7,7}(?:[0-9a-fA-F]){1,4}|(?:([0-9a-fA-F]{1,4}:)){1,7}(?:(:))|(?:([0-9a-fA-F]{1,4}:)){1,6}(?:(:[0-9a-fA-F]){1,4})|(?:([0-9a-fA-F]{1,4}:)){1,5}(?:(:[0-9a-fA-F]{1,4})){1,2}|(?:([0-9a-fA-F]{1,4}:)){1,4}(?:(:[0-9a-fA-F]{1,4})){1,3}|(?:([0-9a-fA-F]{1,4}:)){1,3}(?:(:[0-9a-fA-F]{1,4})){1,4}|(?:([0-9a-fA-F]{1,4}:)){1,2}(?:(:[0-9a-fA-F]{1,4})){1,5}|(?:([0-9a-fA-F]{1,4}:))(?:(:[0-9a-fA-F]{1,4})){1,6}|(?:(:))(?:((:[0-9a-fA-F]{1,4}){1,7}|(?:(:)))))$
      42: invokestatic  #99                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      45: putstatic     #47                 // Field IP6_EXACT:Ljava/util/regex/Pattern;
      48: ldc           #103                // String (?:(?:[a-zA-Z0-9]{1,4}|\\*):){7}(?:[a-zA-Z0-9]{1,4}|\\*)
      50: invokestatic  #99                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      53: putstatic     #49                 // Field IP6_WILDCARD:Ljava/util/regex/Pattern;
      56: ldc           #104                // String (?:[a-zA-Z0-9]{1,4}:){7}[a-zA-Z0-9]{1,4}\\/\\d{1,3}
      58: invokestatic  #99                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      61: putstatic     #51                 // Field IP6_SLASH:Ljava/util/regex/Pattern;
      64: getstatic     #17                 // Field io/undertow/UndertowLogger.PREDICATE_LOGGER:Lio/undertow/UndertowLogger;
      67: invokeinterface #105,  1          // InterfaceMethod io/undertow/UndertowLogger.isTraceEnabled:()Z
      72: putstatic     #28                 // Field traceEnabled:Z
      75: getstatic     #17                 // Field io/undertow/UndertowLogger.PREDICATE_LOGGER:Lio/undertow/UndertowLogger;
      78: invokeinterface #106,  1          // InterfaceMethod io/undertow/UndertowLogger.isDebugEnabled:()Z
      83: putstatic     #16                 // Field debugEnabled:Z
      86: return
}
