Compiled from "PreCompressedResourceSupplier.java"
public class io.undertow.server.handlers.resource.PreCompressedResourceSupplier implements io.undertow.server.handlers.resource.ResourceSupplier {
  private final io.undertow.server.handlers.resource.ResourceManager resourceManager;

  private final java.util.Map<java.lang.String, java.lang.String> encodingMap;

  public io.undertow.server.handlers.resource.PreCompressedResourceSupplier(io.undertow.server.handlers.resource.ResourceManager);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/util/CopyOnWriteMap
       8: dup
       9: invokespecial #3                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      12: putfield      #4                  // Field encodingMap:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field resourceManager:Lio/undertow/server/handlers/resource/ResourceManager;
      20: return

  public io.undertow.server.handlers.resource.Resource getResource(io.undertow.server.HttpServerExchange, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #7                  // Field io/undertow/util/Headers.RANGE:Lio/undertow/util/HttpString;
       7: invokevirtual #8                  // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      10: ifeq          24
      13: aload_0
      14: getfield      #5                  // Field resourceManager:Lio/undertow/server/handlers/resource/ResourceManager;
      17: aload_2
      18: invokeinterface #9,  2            // InterfaceMethod io/undertow/server/handlers/resource/ResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
      23: areturn
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #10                 // Method getEncodedResource:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
      30: astore_3
      31: aload_3
      32: ifnonnull     46
      35: aload_0
      36: getfield      #5                  // Field resourceManager:Lio/undertow/server/handlers/resource/ResourceManager;
      39: aload_2
      40: invokeinterface #9,  2            // InterfaceMethod io/undertow/server/handlers/resource/ResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
      45: areturn
      46: aload_3
      47: areturn

  private io.undertow.server.handlers.resource.Resource getEncodedResource(io.undertow.server.HttpServerExchange, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #11                 // Field io/undertow/util/Headers.ACCEPT_ENCODING:Lio/undertow/util/HttpString;
       7: invokevirtual #12                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
      10: astore_3
      11: aload_3
      12: ifnull        24
      15: aload_3
      16: invokeinterface #13,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      21: ifeq          26
      24: aconst_null
      25: areturn
      26: aload_3
      27: invokestatic  #14                 // Method io/undertow/util/QValueParser.parse:(Ljava/util/List;)Ljava/util/List;
      30: astore        4
      32: aload         4
      34: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: astore        5
      41: aload         5
      43: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          177
      51: aload         5
      53: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #18                 // class java/util/List
      61: astore        6
      63: aload         6
      65: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      70: astore        7
      72: aload         7
      74: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          174
      82: aload         7
      84: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #19                 // class io/undertow/util/QValueParser$QValueResult
      92: astore        8
      94: aload_0
      95: getfield      #4                  // Field encodingMap:Ljava/util/Map;
      98: aload         8
     100: invokevirtual #20                 // Method io/undertow/util/QValueParser$QValueResult.getValue:()Ljava/lang/String;
     103: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     108: checkcast     #22                 // class java/lang/String
     111: astore        9
     113: aload         9
     115: ifnull        171
     118: aload_2
     119: aload         9
     121: invokedynamic #23,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     126: astore        10
     128: aload_0
     129: getfield      #5                  // Field resourceManager:Lio/undertow/server/handlers/resource/ResourceManager;
     132: aload         10
     134: invokeinterface #9,  2            // InterfaceMethod io/undertow/server/handlers/resource/ResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
     139: astore        11
     141: aload         11
     143: ifnull        171
     146: aload         11
     148: invokeinterface #24,  1           // InterfaceMethod io/undertow/server/handlers/resource/Resource.isDirectory:()Z
     153: ifne          171
     156: new           #25                 // class io/undertow/server/handlers/resource/PreCompressedResourceSupplier$1
     159: dup
     160: aload_0
     161: aload         11
     163: aload         9
     165: aload         8
     167: invokespecial #26                 // Method io/undertow/server/handlers/resource/PreCompressedResourceSupplier$1."<init>":(Lio/undertow/server/handlers/resource/PreCompressedResourceSupplier;Lio/undertow/server/handlers/resource/Resource;Ljava/lang/String;Lio/undertow/util/QValueParser$QValueResult;)V
     170: areturn
     171: goto          72
     174: goto          41
     177: aconst_null
     178: areturn

  public io.undertow.server.handlers.resource.PreCompressedResourceSupplier addEncoding(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field encodingMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public io.undertow.server.handlers.resource.PreCompressedResourceSupplier removeEncoding(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field encodingMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: areturn
}
