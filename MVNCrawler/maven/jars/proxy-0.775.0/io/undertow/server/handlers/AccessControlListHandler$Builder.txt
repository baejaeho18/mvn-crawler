Compiled from "AccessControlListHandler.java"
public class io.undertow.server.handlers.AccessControlListHandler$Builder implements io.undertow.server.handlers.builder.HandlerBuilder {
  public io.undertow.server.handlers.AccessControlListHandler$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String name();
    Code:
       0: ldc           #2                  // String access-control
       2: areturn

  public java.util.Map<java.lang.String, java.lang.Class<?>> parameters();
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: invokespecial #4                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #5                  // String acl
      11: ldc           #6                  // class "[Ljava/lang/String;"
      13: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: ldc           #8                  // String default-allow
      22: getstatic     #9                  // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      25: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_1
      32: ldc           #10                 // String attribute
      34: ldc           #11                 // class io/undertow/attribute/ExchangeAttribute
      36: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_1
      43: areturn

  public java.util.Set<java.lang.String> requiredParameters();
    Code:
       0: new           #12                 // class java/util/HashSet
       3: dup
       4: invokespecial #13                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #5                  // String acl
      11: invokevirtual #14                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      14: pop
      15: aload_1
      16: ldc           #10                 // String attribute
      18: invokevirtual #14                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_1
      23: areturn

  public java.lang.String defaultParameter();
    Code:
       0: aconst_null
       1: areturn

  public io.undertow.server.HandlerWrapper build(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #5                  // String acl
       3: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #6                  // class "[Ljava/lang/String;"
      11: astore_2
      12: aload_1
      13: ldc           #8                  // String default-allow
      15: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #16                 // class java/lang/Boolean
      23: astore_3
      24: aload_1
      25: ldc           #10                 // String attribute
      27: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #11                 // class io/undertow/attribute/ExchangeAttribute
      35: astore        4
      37: new           #17                 // class java/util/ArrayList
      40: dup
      41: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
      44: astore        5
      46: aload_2
      47: astore        6
      49: aload         6
      51: arraylength
      52: istore        7
      54: iconst_0
      55: istore        8
      57: iload         8
      59: iload         7
      61: if_icmpge     197
      64: aload         6
      66: iload         8
      68: aaload
      69: astore        9
      71: aload         9
      73: ldc           #19                 // String
      75: invokevirtual #20                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      78: astore        10
      80: aload         10
      82: arraylength
      83: iconst_2
      84: if_icmpeq     98
      87: getstatic     #21                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      90: aload         9
      92: invokeinterface #22,  2           // InterfaceMethod io/undertow/UndertowMessages.invalidAclRule:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      97: athrow
      98: aload         10
     100: iconst_1
     101: aaload
     102: invokevirtual #23                 // Method java/lang/String.trim:()Ljava/lang/String;
     105: ldc           #24                 // String allow
     107: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     110: ifeq          139
     113: aload         5
     115: new           #26                 // class io/undertow/server/handlers/AccessControlListHandler$AclMatch
     118: dup
     119: iconst_0
     120: aload         10
     122: iconst_0
     123: aaload
     124: invokevirtual #23                 // Method java/lang/String.trim:()Ljava/lang/String;
     127: invokespecial #27                 // Method io/undertow/server/handlers/AccessControlListHandler$AclMatch."<init>":(ZLjava/lang/String;)V
     130: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     135: pop
     136: goto          191
     139: aload         10
     141: iconst_1
     142: aaload
     143: invokevirtual #23                 // Method java/lang/String.trim:()Ljava/lang/String;
     146: ldc           #29                 // String deny
     148: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     151: ifeq          180
     154: aload         5
     156: new           #26                 // class io/undertow/server/handlers/AccessControlListHandler$AclMatch
     159: dup
     160: iconst_1
     161: aload         10
     163: iconst_0
     164: aaload
     165: invokevirtual #23                 // Method java/lang/String.trim:()Ljava/lang/String;
     168: invokespecial #27                 // Method io/undertow/server/handlers/AccessControlListHandler$AclMatch."<init>":(ZLjava/lang/String;)V
     171: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     176: pop
     177: goto          191
     180: getstatic     #21                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     183: aload         9
     185: invokeinterface #22,  2           // InterfaceMethod io/undertow/UndertowMessages.invalidAclRule:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     190: athrow
     191: iinc          8, 1
     194: goto          57
     197: new           #30                 // class io/undertow/server/handlers/AccessControlListHandler$Wrapper
     200: dup
     201: aload         5
     203: aload_3
     204: ifnonnull     211
     207: iconst_0
     208: goto          215
     211: aload_3
     212: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
     215: aload         4
     217: invokespecial #32                 // Method io/undertow/server/handlers/AccessControlListHandler$Wrapper."<init>":(Ljava/util/List;ZLio/undertow/attribute/ExchangeAttribute;)V
     220: areturn
}
