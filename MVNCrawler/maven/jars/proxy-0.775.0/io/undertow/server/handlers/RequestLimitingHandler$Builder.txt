Compiled from "RequestLimitingHandler.java"
public class io.undertow.server.handlers.RequestLimitingHandler$Builder implements io.undertow.server.handlers.builder.HandlerBuilder {
  public io.undertow.server.handlers.RequestLimitingHandler$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String name();
    Code:
       0: ldc           #2                  // String request-limit
       2: areturn

  public java.util.Map<java.lang.String, java.lang.Class<?>> parameters();
    Code:
       0: ldc           #3                  // String requests
       2: getstatic     #4                  // Field java/lang/Integer.TYPE:Ljava/lang/Class;
       5: invokestatic  #5                  // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
       8: areturn

  public java.util.Set<java.lang.String> requiredParameters();
    Code:
       0: ldc           #3                  // String requests
       2: invokestatic  #6                  // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       5: areturn

  public java.lang.String defaultParameter();
    Code:
       0: ldc           #3                  // String requests
       2: areturn

  public io.undertow.server.HandlerWrapper build(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #7                  // class io/undertow/server/handlers/RequestLimitingHandler$Wrapper
       3: dup
       4: aload_1
       5: ldc           #3                  // String requests
       7: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #9                  // class java/lang/Integer
      15: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
      18: invokespecial #11                 // Method io/undertow/server/handlers/RequestLimitingHandler$Wrapper."<init>":(I)V
      21: areturn
}
