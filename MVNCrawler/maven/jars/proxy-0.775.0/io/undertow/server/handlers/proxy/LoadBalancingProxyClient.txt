Compiled from "LoadBalancingProxyClient.java"
public class io.undertow.server.handlers.proxy.LoadBalancingProxyClient implements io.undertow.server.handlers.proxy.ProxyClient {
  private final io.undertow.util.AttachmentKey<io.undertow.server.handlers.proxy.LoadBalancingProxyClient$ExclusiveConnectionHolder> exclusiveConnectionKey;

  private static final io.undertow.util.AttachmentKey<io.undertow.util.AttachmentList<io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host>> ATTEMPTED_HOSTS;

  private volatile int problemServerRetry;

  private final java.util.Set<java.lang.String> sessionCookieNames;

  private volatile int connectionsPerThread;

  private volatile int maxQueueSize;

  private volatile int softMaxConnectionsPerThread;

  private volatile int ttl;

  private volatile io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host[] hosts;

  private final io.undertow.server.handlers.proxy.LoadBalancingProxyClient$HostSelector hostSelector;

  private final io.undertow.client.UndertowClient client;

  private final java.util.Map<java.lang.String, io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host> routes;

  private io.undertow.server.handlers.proxy.RouteIteratorFactory routeIteratorFactory;

  private final io.undertow.server.handlers.proxy.ExclusivityChecker exclusivityChecker;

  private static final io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget PROXY_TARGET;

  public java.util.List<io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget> getAllTargets();
    Code:
       0: new           #1                  // class java/util/ArrayList
       3: dup
       4: invokespecial #2                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     65
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: new           #4                  // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$2
      34: dup
      35: aload_0
      36: invokespecial #5                  // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$2."<init>":(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;)V
      39: astore        6
      41: aload         6
      43: aload         5
      45: invokeinterface #6,  2            // InterfaceMethod io/undertow/server/handlers/proxy/ProxyClient$HostProxyTarget.setHost:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;)V
      50: aload_1
      51: aload         6
      53: invokeinterface #7,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      58: pop
      59: iinc          4, 1
      62: goto          19
      65: aload_1
      66: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient();
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method io/undertow/client/UndertowClient.getInstance:()Lio/undertow/client/UndertowClient;
       4: invokespecial #9                  // Method "<init>":(Lio/undertow/client/UndertowClient;)V
       7: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient(io.undertow.client.UndertowClient);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #10                 // Method "<init>":(Lio/undertow/client/UndertowClient;Lio/undertow/server/handlers/proxy/ExclusivityChecker;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;)V
       7: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient(io.undertow.server.handlers.proxy.ExclusivityChecker);
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method io/undertow/client/UndertowClient.getInstance:()Lio/undertow/client/UndertowClient;
       4: aload_1
       5: aconst_null
       6: invokespecial #10                 // Method "<init>":(Lio/undertow/client/UndertowClient;Lio/undertow/server/handlers/proxy/ExclusivityChecker;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;)V
       9: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient(io.undertow.client.UndertowClient, io.undertow.server.handlers.proxy.ExclusivityChecker);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #10                 // Method "<init>":(Lio/undertow/client/UndertowClient;Lio/undertow/server/handlers/proxy/ExclusivityChecker;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;)V
       7: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient(io.undertow.client.UndertowClient, io.undertow.server.handlers.proxy.ExclusivityChecker, io.undertow.server.handlers.proxy.LoadBalancingProxyClient$HostSelector);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #12                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder
       7: invokestatic  #13                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      10: putfield      #14                 // Field exclusiveConnectionKey:Lio/undertow/util/AttachmentKey;
      13: aload_0
      14: bipush        10
      16: putfield      #15                 // Field problemServerRetry:I
      19: aload_0
      20: new           #16                 // class java/util/concurrent/CopyOnWriteArraySet
      23: dup
      24: invokespecial #17                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      27: putfield      #18                 // Field sessionCookieNames:Ljava/util/Set;
      30: aload_0
      31: bipush        10
      33: putfield      #19                 // Field connectionsPerThread:I
      36: aload_0
      37: iconst_0
      38: putfield      #20                 // Field maxQueueSize:I
      41: aload_0
      42: iconst_5
      43: putfield      #21                 // Field softMaxConnectionsPerThread:I
      46: aload_0
      47: iconst_m1
      48: putfield      #22                 // Field ttl:I
      51: aload_0
      52: iconst_0
      53: anewarray     #23                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
      56: putfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      59: aload_0
      60: new           #24                 // class io/undertow/util/CopyOnWriteMap
      63: dup
      64: invokespecial #25                 // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      67: putfield      #26                 // Field routes:Ljava/util/Map;
      70: aload_0
      71: new           #27                 // class io/undertow/server/handlers/proxy/RouteIteratorFactory
      74: dup
      75: getstatic     #28                 // Field io/undertow/server/handlers/proxy/RouteParsingStrategy.SINGLE:Lio/undertow/server/handlers/proxy/RouteParsingStrategy;
      78: getstatic     #29                 // Field io/undertow/server/handlers/proxy/RouteIteratorFactory$ParsingCompatibility.MOD_JK:Lio/undertow/server/handlers/proxy/RouteIteratorFactory$ParsingCompatibility;
      81: invokespecial #30                 // Method io/undertow/server/handlers/proxy/RouteIteratorFactory."<init>":(Lio/undertow/server/handlers/proxy/RouteParsingStrategy;Lio/undertow/server/handlers/proxy/RouteIteratorFactory$ParsingCompatibility;)V
      84: putfield      #31                 // Field routeIteratorFactory:Lio/undertow/server/handlers/proxy/RouteIteratorFactory;
      87: aload_0
      88: aload_1
      89: putfield      #32                 // Field client:Lio/undertow/client/UndertowClient;
      92: aload_0
      93: aload_2
      94: putfield      #33                 // Field exclusivityChecker:Lio/undertow/server/handlers/proxy/ExclusivityChecker;
      97: aload_0
      98: getfield      #18                 // Field sessionCookieNames:Ljava/util/Set;
     101: ldc           #34                 // String JSESSIONID
     103: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     108: pop
     109: aload_3
     110: ifnonnull     127
     113: aload_0
     114: new           #36                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$RoundRobinHostSelector
     117: dup
     118: invokespecial #37                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$RoundRobinHostSelector."<init>":()V
     121: putfield      #38                 // Field hostSelector:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;
     124: goto          132
     127: aload_0
     128: aload_3
     129: putfield      #38                 // Field hostSelector:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;
     132: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient addSessionCookieName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sessionCookieNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient removeSessionCookieName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sessionCookieNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setProblemServerRetry(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field problemServerRetry:I
       5: aload_0
       6: areturn

  public int getProblemServerRetry();
    Code:
       0: aload_0
       1: getfield      #15                 // Field problemServerRetry:I
       4: ireturn

  public int getConnectionsPerThread();
    Code:
       0: aload_0
       1: getfield      #19                 // Field connectionsPerThread:I
       4: ireturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setConnectionsPerThread(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field connectionsPerThread:I
       5: aload_0
       6: areturn

  public int getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field maxQueueSize:I
       4: ireturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setMaxQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field maxQueueSize:I
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setTtl(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field ttl:I
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setSoftMaxConnectionsPerThread(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field softMaxConnectionsPerThread:I
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setRouteParsingStrategy(io.undertow.server.handlers.proxy.RouteParsingStrategy);
    Code:
       0: aload_0
       1: new           #27                 // class io/undertow/server/handlers/proxy/RouteIteratorFactory
       4: dup
       5: aload_1
       6: getstatic     #29                 // Field io/undertow/server/handlers/proxy/RouteIteratorFactory$ParsingCompatibility.MOD_JK:Lio/undertow/server/handlers/proxy/RouteIteratorFactory$ParsingCompatibility;
       9: aconst_null
      10: invokespecial #40                 // Method io/undertow/server/handlers/proxy/RouteIteratorFactory."<init>":(Lio/undertow/server/handlers/proxy/RouteParsingStrategy;Lio/undertow/server/handlers/proxy/RouteIteratorFactory$ParsingCompatibility;Ljava/lang/String;)V
      13: putfield      #31                 // Field routeIteratorFactory:Lio/undertow/server/handlers/proxy/RouteIteratorFactory;
      16: aload_0
      17: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setRankedRoutingDelimiter(java.lang.String);
    Code:
       0: aload_0
       1: new           #27                 // class io/undertow/server/handlers/proxy/RouteIteratorFactory
       4: dup
       5: getstatic     #41                 // Field io/undertow/server/handlers/proxy/RouteParsingStrategy.RANKED:Lio/undertow/server/handlers/proxy/RouteParsingStrategy;
       8: getstatic     #29                 // Field io/undertow/server/handlers/proxy/RouteIteratorFactory$ParsingCompatibility.MOD_JK:Lio/undertow/server/handlers/proxy/RouteIteratorFactory$ParsingCompatibility;
      11: aload_1
      12: invokespecial #40                 // Method io/undertow/server/handlers/proxy/RouteIteratorFactory."<init>":(Lio/undertow/server/handlers/proxy/RouteParsingStrategy;Lio/undertow/server/handlers/proxy/RouteIteratorFactory$ParsingCompatibility;Ljava/lang/String;)V
      15: putfield      #31                 // Field routeIteratorFactory:Lio/undertow/server/handlers/proxy/RouteIteratorFactory;
      18: aload_0
      19: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokevirtual #42                 // Method addHost:(Ljava/net/URI;Ljava/lang/String;Lorg/xnio/ssl/XnioSsl;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       7: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI, org.xnio.ssl.XnioSsl);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #42                 // Method addHost:(Ljava/net/URI;Ljava/lang/String;Lorg/xnio/ssl/XnioSsl;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       7: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #42                 // Method addHost:(Ljava/net/URI;Ljava/lang/String;Lorg/xnio/ssl/XnioSsl;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       7: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI, java.lang.String, org.xnio.ssl.XnioSsl);
    Code:
       0: new           #23                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
       3: dup
       4: aload_0
       5: aload_2
       6: aconst_null
       7: aload_1
       8: aload_3
       9: getstatic     #43                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      12: invokespecial #44                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host."<init>":(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;Ljava/lang/String;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lorg/xnio/OptionMap;)V
      15: astore        4
      17: aload_0
      18: getfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      21: astore        5
      23: aload         5
      25: arraylength
      26: iconst_1
      27: iadd
      28: anewarray     #23                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
      31: astore        6
      33: aload         5
      35: iconst_0
      36: aload         6
      38: iconst_0
      39: aload         5
      41: arraylength
      42: invokestatic  #45                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      45: aload         6
      47: aload         5
      49: arraylength
      50: aload         4
      52: aastore
      53: aload_0
      54: aload         6
      56: putfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      59: aload_2
      60: ifnull        76
      63: aload_0
      64: getfield      #26                 // Field routes:Ljava/util/Map;
      67: aload_2
      68: aload         4
      70: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: aload_0
      77: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI, java.lang.String, org.xnio.ssl.XnioSsl, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokevirtual #47                 // Method addHost:(Ljava/net/InetSocketAddress;Ljava/net/URI;Ljava/lang/String;Lorg/xnio/ssl/XnioSsl;Lorg/xnio/OptionMap;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
      10: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.InetSocketAddress, java.net.URI, java.lang.String, org.xnio.ssl.XnioSsl, org.xnio.OptionMap);
    Code:
       0: new           #23                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
       3: dup
       4: aload_0
       5: aload_3
       6: aload_1
       7: aload_2
       8: aload         4
      10: aload         5
      12: invokespecial #44                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host."<init>":(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;Ljava/lang/String;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lorg/xnio/OptionMap;)V
      15: astore        6
      17: aload_0
      18: getfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      21: astore        7
      23: aload         7
      25: arraylength
      26: iconst_1
      27: iadd
      28: anewarray     #23                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
      31: astore        8
      33: aload         7
      35: iconst_0
      36: aload         8
      38: iconst_0
      39: aload         7
      41: arraylength
      42: invokestatic  #45                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      45: aload         8
      47: aload         7
      49: arraylength
      50: aload         6
      52: aastore
      53: aload_0
      54: aload         8
      56: putfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      59: aload_3
      60: ifnull        76
      63: aload_0
      64: getfield      #26                 // Field routes:Ljava/util/Map;
      67: aload_3
      68: aload         6
      70: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: aload_0
      77: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient removeHost(java.net.URI);
    Code:
       0: iconst_m1
       1: istore_2
       2: aload_0
       3: getfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
       6: astore_3
       7: aconst_null
       8: astore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: aload_3
      16: arraylength
      17: if_icmpge     52
      20: aload_3
      21: iload         5
      23: aaload
      24: getfield      #48                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.uri:Ljava/net/URI;
      27: aload_1
      28: invokevirtual #49                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      31: ifeq          46
      34: iload         5
      36: istore_2
      37: aload_3
      38: iload         5
      40: aaload
      41: astore        4
      43: goto          52
      46: iinc          5, 1
      49: goto          13
      52: iload_2
      53: iconst_m1
      54: if_icmpne     59
      57: aload_0
      58: areturn
      59: aload_3
      60: arraylength
      61: iconst_1
      62: isub
      63: anewarray     #23                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
      66: astore        5
      68: aload_3
      69: iconst_0
      70: aload         5
      72: iconst_0
      73: iload_2
      74: invokestatic  #45                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      77: aload_3
      78: iload_2
      79: iconst_1
      80: iadd
      81: aload         5
      83: iload_2
      84: aload_3
      85: arraylength
      86: iload_2
      87: isub
      88: iconst_1
      89: isub
      90: invokestatic  #45                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      93: aload_0
      94: aload         5
      96: putfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      99: aload         4
     101: getfield      #50                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.connectionPool:Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
     104: invokevirtual #51                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool.close:()V
     107: aload         4
     109: getfield      #52                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.jvmRoute:Ljava/lang/String;
     112: ifnull        130
     115: aload_0
     116: getfield      #26                 // Field routes:Ljava/util/Map;
     119: aload         4
     121: getfield      #52                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.jvmRoute:Ljava/lang/String;
     124: invokeinterface #53,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload_0
     131: areturn

  public io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget findTarget(io.undertow.server.HttpServerExchange);
    Code:
       0: getstatic     #54                 // Field PROXY_TARGET:Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;
       3: areturn

  public void getConnection(io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget, io.undertow.server.HttpServerExchange, io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_2
       1: invokevirtual #55                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       4: aload_0
       5: getfield      #14                 // Field exclusiveConnectionKey:Lio/undertow/util/AttachmentKey;
       8: invokevirtual #56                 // Method io/undertow/server/ServerConnection.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      11: checkcast     #12                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder
      14: astore        7
      16: aload         7
      18: ifnull        50
      21: aload         7
      23: getfield      #57                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder.connection:Lio/undertow/server/handlers/proxy/ProxyConnection;
      26: invokevirtual #58                 // Method io/undertow/server/handlers/proxy/ProxyConnection.getConnection:()Lio/undertow/client/ClientConnection;
      29: invokeinterface #59,  1           // InterfaceMethod io/undertow/client/ClientConnection.isOpen:()Z
      34: ifeq          50
      37: aload_3
      38: aload_2
      39: aload         7
      41: getfield      #57                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder.connection:Lio/undertow/server/handlers/proxy/ProxyConnection;
      44: invokeinterface #60,  3           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.completed:(Lio/undertow/server/HttpServerExchange;Ljava/lang/Object;)V
      49: return
      50: aload_0
      51: aload_2
      52: invokevirtual #61                 // Method selectHost:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      55: astore        8
      57: aload         8
      59: ifnonnull     72
      62: aload_3
      63: aload_2
      64: invokeinterface #62,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.couldNotResolveBackend:(Lio/undertow/server/HttpServerExchange;)V
      69: goto          153
      72: aload_2
      73: getstatic     #63                 // Field ATTEMPTED_HOSTS:Lio/undertow/util/AttachmentKey;
      76: aload         8
      78: invokevirtual #64                 // Method io/undertow/server/HttpServerExchange.addToAttachmentList:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)V
      81: aload         7
      83: ifnonnull     106
      86: aload_0
      87: getfield      #33                 // Field exclusivityChecker:Lio/undertow/server/handlers/proxy/ExclusivityChecker;
      90: ifnull        137
      93: aload_0
      94: getfield      #33                 // Field exclusivityChecker:Lio/undertow/server/handlers/proxy/ExclusivityChecker;
      97: aload_2
      98: invokeinterface #65,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ExclusivityChecker.isExclusivityRequired:(Lio/undertow/server/HttpServerExchange;)Z
     103: ifeq          137
     106: aload         8
     108: getfield      #50                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.connectionPool:Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
     111: aload_1
     112: aload_2
     113: new           #66                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$3
     116: dup
     117: aload_0
     118: aload         7
     120: aload_3
     121: aload         8
     123: invokespecial #67                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$3."<init>":(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder;Lio/undertow/server/handlers/proxy/ProxyCallback;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;)V
     126: lload         4
     128: aload         6
     130: iconst_1
     131: invokevirtual #68                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool.connect:(Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyCallback;JLjava/util/concurrent/TimeUnit;Z)V
     134: goto          153
     137: aload         8
     139: getfield      #50                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.connectionPool:Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
     142: aload_1
     143: aload_2
     144: aload_3
     145: lload         4
     147: aload         6
     149: iconst_0
     150: invokevirtual #68                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool.connect:(Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyCallback;JLjava/util/concurrent/TimeUnit;Z)V
     153: return

  protected io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host selectHost(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: getstatic     #63                 // Field ATTEMPTED_HOSTS:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #70                 // class io/undertow/util/AttachmentList
      10: astore_2
      11: aload_0
      12: getfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      15: astore_3
      16: aload_3
      17: arraylength
      18: ifne          23
      21: aconst_null
      22: areturn
      23: aload_0
      24: aload_1
      25: invokevirtual #71                 // Method parseRoutes:(Lio/undertow/server/HttpServerExchange;)Ljava/util/Iterator;
      28: astore        4
      30: aload         4
      32: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          93
      40: aload_0
      41: getfield      #26                 // Field routes:Ljava/util/Map;
      44: aload         4
      46: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #74                 // class java/lang/CharSequence
      54: invokeinterface #75,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      59: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #23                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
      67: astore        5
      69: aload         5
      71: ifnull        90
      74: aload_2
      75: ifnull        87
      78: aload_2
      79: aload         5
      81: invokevirtual #77                 // Method io/undertow/util/AttachmentList.contains:(Ljava/lang/Object;)Z
      84: ifne          90
      87: aload         5
      89: areturn
      90: goto          30
      93: aload_0
      94: getfield      #38                 // Field hostSelector:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;
      97: aload_3
      98: invokeinterface #78,  2           // InterfaceMethod io/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector.selectHost:([Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;)I
     103: istore        5
     105: iload         5
     107: istore        6
     109: aconst_null
     110: astore        7
     112: aconst_null
     113: astore        8
     115: aload_3
     116: iload         5
     118: aaload
     119: astore        9
     121: aload_2
     122: ifnull        134
     125: aload_2
     126: aload         9
     128: invokevirtual #77                 // Method io/undertow/util/AttachmentList.contains:(Ljava/lang/Object;)Z
     131: ifne          200
     134: aload         9
     136: getfield      #50                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.connectionPool:Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
     139: invokevirtual #79                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool.available:()Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     142: astore        10
     144: aload         10
     146: getstatic     #80                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.AVAILABLE:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     149: if_acmpne     155
     152: aload         9
     154: areturn
     155: aload         10
     157: getstatic     #81                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.FULL:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     160: if_acmpne     175
     163: aload         7
     165: ifnonnull     175
     168: aload         9
     170: astore        7
     172: goto          200
     175: aload         10
     177: getstatic     #82                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.PROBLEM:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     180: if_acmpeq     191
     183: aload         10
     185: getstatic     #83                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.FULL_QUEUE:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     188: if_acmpne     200
     191: aload         8
     193: ifnonnull     200
     196: aload         9
     198: astore        8
     200: iload         5
     202: iconst_1
     203: iadd
     204: aload_3
     205: arraylength
     206: irem
     207: istore        5
     209: iload         5
     211: iload         6
     213: if_icmpne     115
     216: aload         7
     218: ifnull        224
     221: aload         7
     223: areturn
     224: aload         8
     226: ifnull        232
     229: aload         8
     231: areturn
     232: aconst_null
     233: areturn

  protected java.util.Iterator<java.lang.CharSequence> parseRoutes(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sessionCookieNames:Ljava/util/Set;
       4: invokeinterface #84,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          97
      19: aload_2
      20: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #85                 // class java/lang/String
      28: astore_3
      29: aload_1
      30: invokevirtual #86                 // Method io/undertow/server/HttpServerExchange.requestCookies:()Ljava/lang/Iterable;
      33: invokeinterface #87,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      38: astore        4
      40: aload         4
      42: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          94
      50: aload         4
      52: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #88                 // class io/undertow/server/handlers/Cookie
      60: astore        5
      62: aload_3
      63: aload         5
      65: invokeinterface #89,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getName:()Ljava/lang/String;
      70: invokevirtual #90                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifeq          91
      76: aload_0
      77: getfield      #31                 // Field routeIteratorFactory:Lio/undertow/server/handlers/proxy/RouteIteratorFactory;
      80: aload         5
      82: invokeinterface #91,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      87: invokevirtual #92                 // Method io/undertow/server/handlers/proxy/RouteIteratorFactory.iterator:(Ljava/lang/String;)Ljava/util/Iterator;
      90: areturn
      91: goto          40
      94: goto          10
      97: aload_0
      98: getfield      #31                 // Field routeIteratorFactory:Lio/undertow/server/handlers/proxy/RouteIteratorFactory;
     101: aconst_null
     102: invokevirtual #92                 // Method io/undertow/server/handlers/proxy/RouteIteratorFactory.iterator:(Ljava/lang/String;)Ljava/util/Iterator;
     105: areturn

  public void closeCurrentConnections();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #93                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.closeCurrentConnections:()V
      25: iinc          3, 1
      28: goto          10
      31: return

  static {};
    Code:
       0: ldc           #23                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
       2: invokestatic  #94                 // Method io/undertow/util/AttachmentKey.createList:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
       5: putstatic     #63                 // Field ATTEMPTED_HOSTS:Lio/undertow/util/AttachmentKey;
       8: new           #95                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$1
      11: dup
      12: invokespecial #96                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$1."<init>":()V
      15: putstatic     #54                 // Field PROXY_TARGET:Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;
      18: return
}
