Compiled from "ServerSentEventConnection.java"
public class io.undertow.server.handlers.sse.ServerSentEventConnection implements java.nio.channels.Channel,io.undertow.util.Attachable {
  private final io.undertow.server.HttpServerExchange exchange;

  private final org.xnio.channels.StreamSinkChannel sink;

  private final io.undertow.server.handlers.sse.ServerSentEventConnection$SseWriteListener writeListener;

  private io.undertow.connector.PooledByteBuffer pooled;

  private final java.util.Deque<io.undertow.server.handlers.sse.ServerSentEventConnection$SSEData> queue;

  private final java.util.Queue<io.undertow.server.handlers.sse.ServerSentEventConnection$SSEData> buffered;

  private final java.util.Queue<io.undertow.server.handlers.sse.ServerSentEventConnection$SSEData> flushingMessages;

  private final java.util.List<org.xnio.ChannelListener<io.undertow.server.handlers.sse.ServerSentEventConnection>> closeTasks;

  private java.util.Map<java.lang.String, java.lang.String> parameters;

  private java.util.Map<java.lang.String, java.lang.Object> properties;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.handlers.sse.ServerSentEventConnection> openUpdater;

  private volatile int open;

  private volatile boolean shutdown;

  private volatile long keepAliveTime;

  private org.xnio.XnioExecutor$Key timerKey;

  public io.undertow.server.handlers.sse.ServerSentEventConnection(io.undertow.server.HttpServerExchange, org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/server/handlers/sse/ServerSentEventConnection$SseWriteListener
       8: dup
       9: aload_0
      10: invokespecial #3                  // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SseWriteListener."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
      13: putfield      #4                  // Field writeListener:Lio/undertow/server/handlers/sse/ServerSentEventConnection$SseWriteListener;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/ConcurrentLinkedDeque
      20: dup
      21: invokespecial #6                  // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      24: putfield      #7                  // Field queue:Ljava/util/Deque;
      27: aload_0
      28: new           #5                  // class java/util/concurrent/ConcurrentLinkedDeque
      31: dup
      32: invokespecial #6                  // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      35: putfield      #8                  // Field buffered:Ljava/util/Queue;
      38: aload_0
      39: new           #9                  // class java/util/ArrayDeque
      42: dup
      43: invokespecial #10                 // Method java/util/ArrayDeque."<init>":()V
      46: putfield      #11                 // Field flushingMessages:Ljava/util/Queue;
      49: aload_0
      50: new           #12                 // class java/util/concurrent/CopyOnWriteArrayList
      53: dup
      54: invokespecial #13                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      57: putfield      #14                 // Field closeTasks:Ljava/util/List;
      60: aload_0
      61: new           #15                 // class java/util/HashMap
      64: dup
      65: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      68: putfield      #17                 // Field properties:Ljava/util/Map;
      71: aload_0
      72: iconst_1
      73: putfield      #18                 // Field open:I
      76: aload_0
      77: iconst_0
      78: putfield      #19                 // Field shutdown:Z
      81: aload_0
      82: ldc2_w        #20                 // long -1l
      85: putfield      #22                 // Field keepAliveTime:J
      88: aload_0
      89: aload_1
      90: putfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      93: aload_0
      94: aload_2
      95: putfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      98: aload_0
      99: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     102: invokeinterface #25,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     107: new           #26                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$1
     110: dup
     111: aload_0
     112: invokespecial #27                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$1."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
     115: invokeinterface #28,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     120: aload_0
     121: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     124: invokeinterface #29,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     129: aload_0
     130: getfield      #4                  // Field writeListener:Lio/undertow/server/handlers/sse/ServerSentEventConnection$SseWriteListener;
     133: invokeinterface #28,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     138: return

  public synchronized void addCloseTask(org.xnio.ChannelListener<io.undertow.server.handlers.sse.ServerSentEventConnection>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field closeTasks:Ljava/util/List;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.security.Principal getPrincipal();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getAccount:()Lio/undertow/security/idm/Account;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokeinterface #32,  1           // InterfaceMethod io/undertow/security/idm/Account.getPrincipal:()Ljava/security/Principal;
      15: areturn
      16: aconst_null
      17: areturn

  public io.undertow.security.idm.Account getAccount();
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #33                 // Method io/undertow/server/HttpServerExchange.getSecurityContext:()Lio/undertow/security/api/SecurityContext;
       7: astore_1
       8: aload_1
       9: ifnull        19
      12: aload_1
      13: invokeinterface #34,  1           // InterfaceMethod io/undertow/security/api/SecurityContext.getAuthenticatedAccount:()Lio/undertow/security/idm/Account;
      18: areturn
      19: aconst_null
      20: areturn

  public io.undertow.util.HeaderMap getRequestHeaders();
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       7: areturn

  public io.undertow.util.HeaderMap getResponseHeaders();
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #36                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       7: areturn

  public java.lang.String getRequestURI();
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
       7: areturn

  public java.util.Map<java.lang.String, java.util.Deque<java.lang.String>> getQueryParameters();
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
       7: areturn

  public java.lang.String getQueryString();
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #39                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
       7: areturn

  public void send(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: aconst_null
       5: invokevirtual #40                 // Method send:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;)V
       8: return

  public void send(java.lang.String, io.undertow.server.handlers.sse.ServerSentEventConnection$EventCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: aload_2
       5: invokevirtual #40                 // Method send:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;)V
       8: return

  public void sendRetry(long);
    Code:
       0: aload_0
       1: lload_1
       2: aconst_null
       3: invokevirtual #41                 // Method sendRetry:(JLio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;)V
       6: return

  public synchronized void sendRetry(long, io.undertow.server.handlers.sse.ServerSentEventConnection$EventCallback);
    Code:
       0: aload_0
       1: getfield      #18                 // Field open:I
       4: ifeq          14
       7: aload_0
       8: getfield      #19                 // Field shutdown:Z
      11: ifeq          36
      14: aload_3
      15: ifnull        35
      18: aload_3
      19: aload_0
      20: aconst_null
      21: aconst_null
      22: aconst_null
      23: new           #42                 // class java/nio/channels/ClosedChannelException
      26: dup
      27: invokespecial #43                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      30: invokeinterface #44,  6           // InterfaceMethod io/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback.failed:(Lio/undertow/server/handlers/sse/ServerSentEventConnection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/IOException;)V
      35: return
      36: aload_0
      37: getfield      #7                  // Field queue:Ljava/util/Deque;
      40: new           #45                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData
      43: dup
      44: lload_1
      45: aload_3
      46: invokespecial #46                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData."<init>":(JLio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;)V
      49: invokeinterface #47,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      54: pop
      55: aload_0
      56: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      59: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      64: new           #49                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$2
      67: dup
      68: aload_0
      69: invokespecial #50                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$2."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
      72: invokevirtual #51                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      75: return

  public synchronized void send(java.lang.String, java.lang.String, java.lang.String, io.undertow.server.handlers.sse.ServerSentEventConnection$EventCallback);
    Code:
       0: aload_0
       1: getfield      #18                 // Field open:I
       4: ifeq          14
       7: aload_0
       8: getfield      #19                 // Field shutdown:Z
      11: ifeq          38
      14: aload         4
      16: ifnull        37
      19: aload         4
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: new           #42                 // class java/nio/channels/ClosedChannelException
      28: dup
      29: invokespecial #43                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      32: invokeinterface #44,  6           // InterfaceMethod io/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback.failed:(Lio/undertow/server/handlers/sse/ServerSentEventConnection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/IOException;)V
      37: return
      38: aload_0
      39: getfield      #7                  // Field queue:Ljava/util/Deque;
      42: new           #45                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData
      45: dup
      46: aload_2
      47: aload_1
      48: aload_3
      49: aload         4
      51: invokespecial #52                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;)V
      54: invokeinterface #47,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_0
      61: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      64: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      69: new           #53                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$3
      72: dup
      73: aload_0
      74: invokespecial #54                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$3."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
      77: invokevirtual #51                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      80: return

  public java.lang.String getParameter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #55                 // Field parameters:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #55                 // Field parameters:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #57                 // class java/lang/String
      22: areturn

  public void setParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #55                 // Field parameters:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #15                 // class java/util/HashMap
      11: dup
      12: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      15: putfield      #55                 // Field parameters:Ljava/util/Map;
      18: aload_0
      19: getfield      #55                 // Field parameters:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #58,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  public java.util.Map<java.lang.String, java.lang.Object> getProperties();
    Code:
       0: aload_0
       1: getfield      #17                 // Field properties:Ljava/util/Map;
       4: areturn

  public long getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #22                 // Field keepAliveTime:J
       4: lreturn

  public void setKeepAliveTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #22                 // Field keepAliveTime:J
       5: aload_0
       6: getfield      #59                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
       9: ifnull        22
      12: aload_0
      13: getfield      #59                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
      16: invokeinterface #60,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      21: pop
      22: aload_0
      23: aload_0
      24: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      27: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      32: new           #61                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$4
      35: dup
      36: aload_0
      37: invokespecial #62                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$4."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
      40: lload_1
      41: getstatic     #63                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      44: invokevirtual #64                 // Method org/xnio/XnioIoThread.executeAtInterval:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      47: putfield      #59                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
      50: return

  private void fillBuffer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field queue:Ljava/util/Deque;
       4: invokeinterface #65,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifeq          43
      12: aload_0
      13: getfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      16: ifnull        42
      19: aload_0
      20: getfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      23: invokeinterface #67,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      28: aload_0
      29: aconst_null
      30: putfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      33: aload_0
      34: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      37: invokeinterface #68,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.suspendWrites:()V
      42: return
      43: aload_0
      44: getfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      47: ifnonnull     72
      50: aload_0
      51: aload_0
      52: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      55: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      58: invokevirtual #70                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      61: invokeinterface #71,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      66: putfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      69: goto          85
      72: aload_0
      73: getfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      76: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      81: invokevirtual #73                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      84: pop
      85: aload_0
      86: getfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      89: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      94: astore_1
      95: aload_0
      96: getfield      #7                  // Field queue:Ljava/util/Deque;
      99: invokeinterface #65,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     104: ifne          507
     107: aload_1
     108: invokevirtual #74                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     111: ifeq          507
     114: aload_0
     115: getfield      #7                  // Field queue:Ljava/util/Deque;
     118: invokeinterface #75,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     123: checkcast     #45                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData
     126: astore_2
     127: aload_0
     128: getfield      #8                  // Field buffered:Ljava/util/Queue;
     131: aload_2
     132: invokeinterface #76,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     137: pop
     138: aload_2
     139: getfield      #77                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverData:[B
     142: ifnonnull     413
     145: new           #78                 // class java/lang/StringBuilder
     148: dup
     149: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
     152: astore_3
     153: aload_2
     154: getfield      #80                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.retry:J
     157: lconst_0
     158: lcmp
     159: ifle          188
     162: aload_3
     163: ldc           #81                 // String retry:
     165: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: pop
     169: aload_3
     170: aload_2
     171: getfield      #80                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.retry:J
     174: invokevirtual #83                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     177: pop
     178: aload_3
     179: bipush        10
     181: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     184: pop
     185: goto          325
     188: aload_2
     189: getfield      #85                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.id:Ljava/lang/String;
     192: ifnull        218
     195: aload_3
     196: ldc           #86                 // String id:
     198: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: pop
     202: aload_3
     203: aload_2
     204: getfield      #85                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.id:Ljava/lang/String;
     207: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: pop
     211: aload_3
     212: bipush        10
     214: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     217: pop
     218: aload_2
     219: getfield      #87                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.event:Ljava/lang/String;
     222: ifnull        248
     225: aload_3
     226: ldc           #88                 // String event:
     228: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: pop
     232: aload_3
     233: aload_2
     234: getfield      #87                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.event:Ljava/lang/String;
     237: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: pop
     241: aload_3
     242: bipush        10
     244: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     247: pop
     248: aload_2
     249: getfield      #89                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.data:Ljava/lang/String;
     252: ifnull        325
     255: aload_3
     256: ldc           #90                 // String data:
     258: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: pop
     262: iconst_0
     263: istore        4
     265: iload         4
     267: aload_2
     268: getfield      #89                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.data:Ljava/lang/String;
     271: invokevirtual #91                 // Method java/lang/String.length:()I
     274: if_icmpge     318
     277: aload_2
     278: getfield      #89                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.data:Ljava/lang/String;
     281: iload         4
     283: invokevirtual #92                 // Method java/lang/String.charAt:(I)C
     286: istore        5
     288: iload         5
     290: bipush        10
     292: if_icmpne     305
     295: aload_3
     296: ldc           #93                 // String \ndata:
     298: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     301: pop
     302: goto          312
     305: aload_3
     306: iload         5
     308: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     311: pop
     312: iinc          4, 1
     315: goto          265
     318: aload_3
     319: bipush        10
     321: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     324: pop
     325: aload_3
     326: bipush        10
     328: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     331: pop
     332: aload_3
     333: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     336: getstatic     #95                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     339: invokevirtual #96                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     342: astore        4
     344: aload         4
     346: arraylength
     347: aload_1
     348: invokevirtual #97                 // Method java/nio/ByteBuffer.remaining:()I
     351: if_icmpge     372
     354: aload_1
     355: aload         4
     357: invokevirtual #98                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     360: pop
     361: aload_2
     362: aload_1
     363: invokevirtual #99                 // Method java/nio/ByteBuffer.position:()I
     366: putfield      #100                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.endBufferPosition:I
     369: goto          410
     372: aload_0
     373: getfield      #7                  // Field queue:Ljava/util/Deque;
     376: aload_2
     377: invokeinterface #101,  2          // InterfaceMethod java/util/Deque.addFirst:(Ljava/lang/Object;)V
     382: aload_1
     383: invokevirtual #97                 // Method java/nio/ByteBuffer.remaining:()I
     386: istore        5
     388: aload_1
     389: aload         4
     391: iconst_0
     392: iload         5
     394: invokevirtual #102                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     397: pop
     398: aload_2
     399: aload         4
     401: putfield      #77                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverData:[B
     404: aload_2
     405: iload         5
     407: putfield      #103                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverDataOffset:I
     410: goto          504
     413: aload_2
     414: getfield      #77                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverData:[B
     417: arraylength
     418: aload_2
     419: getfield      #103                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverDataOffset:I
     422: isub
     423: istore_3
     424: iload_3
     425: aload_1
     426: invokevirtual #97                 // Method java/nio/ByteBuffer.remaining:()I
     429: if_icmple     477
     432: aload_0
     433: getfield      #7                  // Field queue:Ljava/util/Deque;
     436: aload_2
     437: invokeinterface #101,  2          // InterfaceMethod java/util/Deque.addFirst:(Ljava/lang/Object;)V
     442: aload_1
     443: invokevirtual #97                 // Method java/nio/ByteBuffer.remaining:()I
     446: istore        4
     448: aload_1
     449: aload_2
     450: getfield      #77                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverData:[B
     453: aload_2
     454: getfield      #103                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverDataOffset:I
     457: iload         4
     459: invokevirtual #102                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     462: pop
     463: aload_2
     464: dup
     465: getfield      #103                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverDataOffset:I
     468: iload         4
     470: iadd
     471: putfield      #103                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverDataOffset:I
     474: goto          504
     477: aload_1
     478: aload_2
     479: getfield      #77                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverData:[B
     482: aload_2
     483: getfield      #103                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverDataOffset:I
     486: iload_3
     487: invokevirtual #102                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     490: pop
     491: aload_2
     492: aload_1
     493: invokevirtual #99                 // Method java/nio/ByteBuffer.position:()I
     496: putfield      #100                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.endBufferPosition:I
     499: aload_2
     500: aconst_null
     501: putfield      #77                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.leftOverData:[B
     504: goto          95
     507: aload_1
     508: invokevirtual #104                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     511: pop
     512: aload_0
     513: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     516: invokeinterface #105,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     521: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #18                 // Field open:I
       4: ifeq          14
       7: aload_0
       8: getfield      #19                 // Field shutdown:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: iconst_1
      17: putfield      #19                 // Field shutdown:Z
      20: aload_0
      21: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      24: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      29: new           #106                // class io/undertow/server/handlers/sse/ServerSentEventConnection$5
      32: dup
      33: aload_0
      34: invokespecial #107                // Method io/undertow/server/handlers/sse/ServerSentEventConnection$5."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
      37: invokevirtual #51                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      40: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #18                 // Field open:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #42                 // class java/nio/channels/ClosedChannelException
       4: dup
       5: invokespecial #43                 // Method java/nio/channels/ClosedChannelException."<init>":()V
       8: invokevirtual #108                // Method close:(Ljava/io/IOException;)V
      11: return

  private synchronized void close(java.io.IOException) throws java.io.IOException;
    Code:
       0: getstatic     #109                // Field openUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_1
       5: iconst_0
       6: invokevirtual #110                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          271
      12: aload_0
      13: getfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      16: ifnull        33
      19: aload_0
      20: getfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      23: invokeinterface #67,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      28: aload_0
      29: aconst_null
      30: putfield      #66                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      33: new           #111                // class java/util/ArrayList
      36: dup
      37: aload_0
      38: getfield      #8                  // Field buffered:Ljava/util/Queue;
      41: invokeinterface #112,  1          // InterfaceMethod java/util/Queue.size:()I
      46: aload_0
      47: getfield      #7                  // Field queue:Ljava/util/Deque;
      50: invokeinterface #113,  1          // InterfaceMethod java/util/Deque.size:()I
      55: iadd
      56: aload_0
      57: getfield      #11                 // Field flushingMessages:Ljava/util/Queue;
      60: invokeinterface #112,  1          // InterfaceMethod java/util/Queue.size:()I
      65: iadd
      66: invokespecial #114                // Method java/util/ArrayList."<init>":(I)V
      69: astore_2
      70: aload_2
      71: aload_0
      72: getfield      #8                  // Field buffered:Ljava/util/Queue;
      75: invokeinterface #115,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      80: pop
      81: aload_2
      82: aload_0
      83: getfield      #7                  // Field queue:Ljava/util/Deque;
      86: invokeinterface #115,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      91: pop
      92: aload_2
      93: aload_0
      94: getfield      #11                 // Field flushingMessages:Ljava/util/Queue;
      97: invokeinterface #115,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     102: pop
     103: aload_0
     104: getfield      #7                  // Field queue:Ljava/util/Deque;
     107: invokeinterface #116,  1          // InterfaceMethod java/util/Deque.clear:()V
     112: aload_0
     113: getfield      #8                  // Field buffered:Ljava/util/Queue;
     116: invokeinterface #117,  1          // InterfaceMethod java/util/Queue.clear:()V
     121: aload_0
     122: getfield      #11                 // Field flushingMessages:Ljava/util/Queue;
     125: invokeinterface #117,  1          // InterfaceMethod java/util/Queue.clear:()V
     130: aload_2
     131: invokeinterface #118,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     136: astore_3
     137: aload_3
     138: invokeinterface #119,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     143: ifeq          215
     146: aload_3
     147: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     152: checkcast     #45                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData
     155: astore        4
     157: aload         4
     159: getfield      #121                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.callback:Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;
     162: ifnull        212
     165: aload         4
     167: getfield      #121                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.callback:Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;
     170: aload_0
     171: aload         4
     173: getfield      #89                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.data:Ljava/lang/String;
     176: aload         4
     178: getfield      #87                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.event:Ljava/lang/String;
     181: aload         4
     183: getfield      #85                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.id:Ljava/lang/String;
     186: aload_1
     187: invokeinterface #44,  6           // InterfaceMethod io/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback.failed:(Lio/undertow/server/handlers/sse/ServerSentEventConnection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/IOException;)V
     192: goto          212
     195: astore        5
     197: getstatic     #123                // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     200: aload         4
     202: getfield      #121                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.callback:Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;
     205: aload         5
     207: invokeinterface #124,  3          // InterfaceMethod io/undertow/UndertowLogger.failedToInvokeFailedCallback:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;Ljava/lang/Exception;)V
     212: goto          137
     215: aload_0
     216: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     219: invokeinterface #125,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     224: aload_0
     225: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     228: invokeinterface #126,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
     233: ifne          271
     236: aload_0
     237: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     240: invokeinterface #29,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     245: aconst_null
     246: new           #127                // class io/undertow/server/handlers/sse/ServerSentEventConnection$6
     249: dup
     250: aload_0
     251: invokespecial #128                // Method io/undertow/server/handlers/sse/ServerSentEventConnection$6."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
     254: invokestatic  #129                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     257: invokeinterface #28,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     262: aload_0
     263: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     266: invokeinterface #105,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     271: return
    Exception table:
       from    to  target type
         165   192   195   Class java/lang/Exception

  public <T> T getAttachment(io.undertow.util.AttachmentKey<T>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: invokevirtual #130                // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       8: areturn

  public <T> java.util.List<T> getAttachmentList(io.undertow.util.AttachmentKey<? extends java.util.List<T>>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: invokevirtual #131                // Method io/undertow/server/HttpServerExchange.getAttachmentList:(Lio/undertow/util/AttachmentKey;)Ljava/util/List;
       8: areturn

  public <T> T putAttachment(io.undertow.util.AttachmentKey<T>, T);
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: aload_2
       6: invokevirtual #132                // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public <T> T removeAttachment(io.undertow.util.AttachmentKey<T>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: invokevirtual #133                // Method io/undertow/server/HttpServerExchange.removeAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       8: areturn

  public <T> void addToAttachmentList(io.undertow.util.AttachmentKey<io.undertow.util.AttachmentList<T>>, T);
    Code:
       0: aload_0
       1: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: aload_2
       6: invokevirtual #134                // Method io/undertow/server/HttpServerExchange.addToAttachmentList:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)V
       9: return

  private void handleException(java.io.IOException);
    Code:
       0: iconst_3
       1: anewarray     #135                // class java/io/Closeable
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: dup
       9: iconst_1
      10: aload_0
      11: getfield      #24                 // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      14: aastore
      15: dup
      16: iconst_2
      17: aload_0
      18: getfield      #23                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      21: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      24: aastore
      25: invokestatic  #136                // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
      28: return

  static {};
    Code:
       0: ldc           #137                // class io/undertow/server/handlers/sse/ServerSentEventConnection
       2: ldc           #138                // String open
       4: invokestatic  #139                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #109                // Field openUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
