Compiled from "ProxyConnectionPool.java"
public class io.undertow.server.handlers.proxy.ProxyConnectionPool implements java.io.Closeable {
  private final java.net.URI uri;

  private final java.net.InetSocketAddress bindAddress;

  private final org.xnio.ssl.XnioSsl ssl;

  private final io.undertow.client.UndertowClient client;

  private final io.undertow.server.handlers.proxy.ConnectionPoolManager connectionPoolManager;

  private final org.xnio.OptionMap options;

  private volatile boolean closed;

  private final int maxConnections;

  private final int maxCachedConnections;

  private final int coreCachedConnections;

  private final long timeToLive;

  private final java.util.concurrent.atomic.AtomicInteger openConnections;

  private final java.util.concurrent.atomic.AtomicLong requestCount;

  private final java.util.concurrent.atomic.AtomicLong read;

  private final java.util.concurrent.atomic.AtomicLong written;

  private final java.util.concurrent.ConcurrentMap<org.xnio.XnioIoThread, io.undertow.server.handlers.proxy.ProxyConnectionPool$HostThreadData> hostThreadData;

  public io.undertow.server.handlers.proxy.ProxyConnectionPool(io.undertow.server.handlers.proxy.ConnectionPoolManager, java.net.URI, io.undertow.client.UndertowClient, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: aload         4
       7: invokespecial #1                  // Method "<init>":(Lio/undertow/server/handlers/proxy/ConnectionPoolManager;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/client/UndertowClient;Lorg/xnio/OptionMap;)V
      10: return

  public io.undertow.server.handlers.proxy.ProxyConnectionPool(io.undertow.server.handlers.proxy.ConnectionPoolManager, java.net.InetSocketAddress, java.net.URI, io.undertow.client.UndertowClient, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: aload         4
       7: aload         5
       9: invokespecial #2                  // Method "<init>":(Lio/undertow/server/handlers/proxy/ConnectionPoolManager;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/client/UndertowClient;Lorg/xnio/OptionMap;)V
      12: return

  public io.undertow.server.handlers.proxy.ProxyConnectionPool(io.undertow.server.handlers.proxy.ConnectionPoolManager, java.net.URI, org.xnio.ssl.XnioSsl, io.undertow.client.UndertowClient, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: invokespecial #2                  // Method "<init>":(Lio/undertow/server/handlers/proxy/ConnectionPoolManager;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/client/UndertowClient;Lorg/xnio/OptionMap;)V
      12: return

  public io.undertow.server.handlers.proxy.ProxyConnectionPool(io.undertow.server.handlers.proxy.ConnectionPoolManager, java.net.InetSocketAddress, java.net.URI, org.xnio.ssl.XnioSsl, io.undertow.client.UndertowClient, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #6                  // Field openConnections:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: new           #7                  // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      24: putfield      #9                  // Field requestCount:Ljava/util/concurrent/atomic/AtomicLong;
      27: aload_0
      28: new           #7                  // class java/util/concurrent/atomic/AtomicLong
      31: dup
      32: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      35: putfield      #10                 // Field read:Ljava/util/concurrent/atomic/AtomicLong;
      38: aload_0
      39: new           #7                  // class java/util/concurrent/atomic/AtomicLong
      42: dup
      43: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      46: putfield      #11                 // Field written:Ljava/util/concurrent/atomic/AtomicLong;
      49: aload_0
      50: new           #12                 // class io/undertow/util/CopyOnWriteMap
      53: dup
      54: invokespecial #13                 // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      57: putfield      #14                 // Field hostThreadData:Ljava/util/concurrent/ConcurrentMap;
      60: aload_0
      61: aload_1
      62: putfield      #15                 // Field connectionPoolManager:Lio/undertow/server/handlers/proxy/ConnectionPoolManager;
      65: aload_0
      66: aload_1
      67: invokeinterface #16,  1           // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.getMaxConnections:()I
      72: iconst_1
      73: invokestatic  #17                 // Method java/lang/Math.max:(II)I
      76: putfield      #18                 // Field maxConnections:I
      79: aload_0
      80: aload_1
      81: invokeinterface #19,  1           // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.getMaxCachedConnections:()I
      86: iconst_0
      87: invokestatic  #17                 // Method java/lang/Math.max:(II)I
      90: putfield      #20                 // Field maxCachedConnections:I
      93: aload_0
      94: aload_1
      95: invokeinterface #21,  1           // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.getSMaxConnections:()I
     100: iconst_0
     101: invokestatic  #17                 // Method java/lang/Math.max:(II)I
     104: putfield      #22                 // Field coreCachedConnections:I
     107: aload_0
     108: aload_1
     109: invokeinterface #23,  1           // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.getTtl:()J
     114: putfield      #24                 // Field timeToLive:J
     117: aload_0
     118: aload_2
     119: putfield      #25                 // Field bindAddress:Ljava/net/InetSocketAddress;
     122: aload_0
     123: aload_3
     124: putfield      #26                 // Field uri:Ljava/net/URI;
     127: aload_0
     128: aload         4
     130: putfield      #27                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
     133: aload_0
     134: aload         5
     136: putfield      #28                 // Field client:Lio/undertow/client/UndertowClient;
     139: aload_0
     140: aload         6
     142: putfield      #29                 // Field options:Lorg/xnio/OptionMap;
     145: return

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #26                 // Field uri:Ljava/net/URI;
       4: areturn

  public java.net.InetSocketAddress getBindAddress();
    Code:
       0: aload_0
       1: getfield      #25                 // Field bindAddress:Ljava/net/InetSocketAddress;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #30                 // Field closed:Z
       5: aload_0
       6: getfield      #14                 // Field hostThreadData:Ljava/util/concurrent/ConcurrentMap;
       9: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      14: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore_1
      20: aload_1
      21: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          80
      29: aload_1
      30: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #35                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData
      38: astore_2
      39: aload_2
      40: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
      43: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      48: checkcast     #38                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder
      51: astore_3
      52: aload_3
      53: ifnull        77
      56: aload_3
      57: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
      60: invokeinterface #40,  1           // InterfaceMethod io/undertow/client/ClientConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      65: new           #41                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$1
      68: dup
      69: aload_0
      70: aload_3
      71: invokespecial #42                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$1."<init>":(Lio/undertow/server/handlers/proxy/ProxyConnectionPool;Lio/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder;)V
      74: invokevirtual #43                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      77: goto          20
      80: return

  private void returnConnection(io.undertow.server.handlers.proxy.ProxyConnectionPool$ConnectionHolder);
    Code:
       0: aload_1
       1: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
       4: invokeinterface #44,  1           // InterfaceMethod io/undertow/client/ClientConnection.getStatistics:()Lio/undertow/client/ClientStatistics;
       9: astore_2
      10: aload_0
      11: getfield      #9                  // Field requestCount:Ljava/util/concurrent/atomic/AtomicLong;
      14: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      17: pop2
      18: aload_2
      19: ifnull        56
      22: aload_0
      23: getfield      #10                 // Field read:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_2
      27: invokeinterface #46,  1           // InterfaceMethod io/undertow/client/ClientStatistics.getRead:()J
      32: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      35: pop2
      36: aload_0
      37: getfield      #11                 // Field written:Ljava/util/concurrent/atomic/AtomicLong;
      40: aload_2
      41: invokeinterface #48,  1           // InterfaceMethod io/undertow/client/ClientStatistics.getWritten:()J
      46: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      49: pop2
      50: aload_2
      51: invokeinterface #49,  1           // InterfaceMethod io/undertow/client/ClientStatistics.reset:()V
      56: aload_0
      57: invokevirtual #50                 // Method getData:()Lio/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData;
      60: astore_3
      61: aload_0
      62: getfield      #30                 // Field closed:Z
      65: ifeq          125
      68: aload_1
      69: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
      72: invokestatic  #51                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      75: aload_3
      76: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
      79: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      84: checkcast     #38                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder
      87: astore        4
      89: aload         4
      91: ifnull        119
      94: aload         4
      96: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
      99: invokestatic  #51                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     102: aload_3
     103: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
     106: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     111: checkcast     #38                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder
     114: astore        4
     116: goto          89
     119: aload_0
     120: aload_3
     121: invokevirtual #52                 // Method redistributeQueued:(Lio/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData;)V
     124: return
     125: aload_1
     126: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
     129: astore        4
     131: aload         4
     133: invokeinterface #53,  1           // InterfaceMethod io/undertow/client/ClientConnection.isOpen:()Z
     138: ifeq          382
     141: aload         4
     143: invokeinterface #54,  1           // InterfaceMethod io/undertow/client/ClientConnection.isUpgraded:()Z
     148: ifne          382
     151: aload_3
     152: getfield      #55                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.awaitingConnections:Ljava/util/Deque;
     155: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     160: checkcast     #56                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder
     163: astore        5
     165: aload         5
     167: ifnull        195
     170: aload         5
     172: invokevirtual #57                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.isCancelled:()Z
     175: ifeq          195
     178: aload_3
     179: getfield      #55                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.awaitingConnections:Ljava/util/Deque;
     182: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     187: checkcast     #56                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder
     190: astore        5
     192: goto          165
     195: aload         5
     197: ifnull        238
     200: aload         5
     202: invokevirtual #58                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getTimeoutKey:()Lorg/xnio/XnioExecutor$Key;
     205: ifnull        219
     208: aload         5
     210: invokevirtual #58                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getTimeoutKey:()Lorg/xnio/XnioExecutor$Key;
     213: invokeinterface #59,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
     218: pop
     219: aload_0
     220: aload_1
     221: aload         5
     223: invokevirtual #60                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getCallback:()Lio/undertow/server/handlers/proxy/ProxyCallback;
     226: aload         5
     228: invokevirtual #61                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getExchange:()Lio/undertow/server/HttpServerExchange;
     231: iconst_0
     232: invokevirtual #62                 // Method connectionReady:(Lio/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder;Lio/undertow/server/handlers/proxy/ProxyCallback;Lio/undertow/server/HttpServerExchange;Z)V
     235: goto          379
     238: aload_3
     239: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
     242: invokeinterface #63,  1           // InterfaceMethod java/util/Deque.size:()I
     247: istore        6
     249: iload         6
     251: aload_0
     252: getfield      #20                 // Field maxCachedConnections:I
     255: if_icmplt     285
     258: aload_3
     259: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
     262: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     267: checkcast     #38                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder
     270: astore        7
     272: aload         7
     274: ifnull        285
     277: aload         7
     279: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
     282: invokestatic  #51                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     285: aload_3
     286: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
     289: aload_1
     290: invokeinterface #64,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     295: pop
     296: aload_0
     297: getfield      #24                 // Field timeToLive:J
     300: lconst_0
     301: lcmp
     302: ifle          379
     305: invokestatic  #65                 // Method java/lang/System.currentTimeMillis:()J
     308: lstore        7
     310: aload_1
     311: lload         7
     313: aload_0
     314: getfield      #24                 // Field timeToLive:J
     317: ladd
     318: putfield      #66                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.timeout:J
     321: aload_3
     322: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
     325: invokeinterface #63,  1           // InterfaceMethod java/util/Deque.size:()I
     330: aload_0
     331: getfield      #22                 // Field coreCachedConnections:I
     334: if_icmple     379
     337: aload_3
     338: getfield      #67                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.nextTimeout:J
     341: lconst_0
     342: lcmp
     343: ifgt          379
     346: aload_3
     347: aload         4
     349: invokeinterface #40,  1           // InterfaceMethod io/undertow/client/ClientConnection.getIoThread:()Lorg/xnio/XnioIoThread;
     354: aload_3
     355: getfield      #68                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutTask:Ljava/lang/Runnable;
     358: aload_0
     359: getfield      #24                 // Field timeToLive:J
     362: getstatic     #69                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     365: invokestatic  #70                 // Method io/undertow/util/WorkerUtils.executeAfter:(Lorg/xnio/XnioIoThread;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     368: putfield      #71                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutKey:Lorg/xnio/XnioExecutor$Key;
     371: aload_3
     372: aload_1
     373: getfield      #66                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.timeout:J
     376: putfield      #67                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.nextTimeout:J
     379: goto          421
     382: aload         4
     384: invokeinterface #53,  1           // InterfaceMethod io/undertow/client/ClientConnection.isOpen:()Z
     389: ifeq          421
     392: aload         4
     394: invokeinterface #54,  1           // InterfaceMethod io/undertow/client/ClientConnection.isUpgraded:()Z
     399: ifeq          421
     402: aload         4
     404: invokeinterface #72,  1           // InterfaceMethod io/undertow/client/ClientConnection.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     409: aconst_null
     410: invokeinterface #73,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     415: aload_0
     416: aload_3
     417: aload_1
     418: invokevirtual #74                 // Method handleClosedConnection:(Lio/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData;Lio/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder;)V
     421: return

  private void handleClosedConnection(io.undertow.server.handlers.proxy.ProxyConnectionPool$HostThreadData, io.undertow.server.handlers.proxy.ProxyConnectionPool$ConnectionHolder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field openConnections:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: aload_1
       9: dup
      10: getfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
      13: iconst_1
      14: isub
      15: dup_x1
      16: putfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
      19: istore_3
      20: aload_1
      21: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
      24: aload_2
      25: invokeinterface #77,  2           // InterfaceMethod java/util/Deque.remove:(Ljava/lang/Object;)Z
      30: pop
      31: iload_3
      32: aload_0
      33: getfield      #18                 // Field maxConnections:I
      36: if_icmpge     104
      39: aload_1
      40: getfield      #55                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.awaitingConnections:Ljava/util/Deque;
      43: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      48: checkcast     #56                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder
      51: astore        4
      53: aload         4
      55: ifnull        83
      58: aload         4
      60: invokevirtual #57                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.isCancelled:()Z
      63: ifeq          83
      66: aload_1
      67: getfield      #55                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.awaitingConnections:Ljava/util/Deque;
      70: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      75: checkcast     #56                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder
      78: astore        4
      80: goto          53
      83: aload         4
      85: ifnull        104
      88: aload_0
      89: aload         4
      91: getfield      #78                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.exchange:Lio/undertow/server/HttpServerExchange;
      94: aload         4
      96: getfield      #79                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.callback:Lio/undertow/server/handlers/proxy/ProxyCallback;
      99: aload_1
     100: iconst_0
     101: invokevirtual #80                 // Method openConnection:(Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyCallback;Lio/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData;Z)V
     104: return

  private void openConnection(io.undertow.server.HttpServerExchange, io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection>, io.undertow.server.handlers.proxy.ProxyConnectionPool$HostThreadData, boolean);
    Code:
       0: iload         4
       2: ifne          15
       5: aload_3
       6: dup
       7: getfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
      10: iconst_1
      11: iadd
      12: putfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
      15: aload_0
      16: getfield      #28                 // Field client:Lio/undertow/client/UndertowClient;
      19: new           #81                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$2
      22: dup
      23: aload_0
      24: iload         4
      26: aload_3
      27: aload_2
      28: aload_1
      29: invokespecial #82                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$2."<init>":(Lio/undertow/server/handlers/proxy/ProxyConnectionPool;ZLio/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData;Lio/undertow/server/handlers/proxy/ProxyCallback;Lio/undertow/server/HttpServerExchange;)V
      32: aload_0
      33: getfield      #25                 // Field bindAddress:Ljava/net/InetSocketAddress;
      36: aload_0
      37: invokevirtual #83                 // Method getUri:()Ljava/net/URI;
      40: aload_1
      41: invokevirtual #84                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      44: aload_0
      45: getfield      #27                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
      48: aload_1
      49: invokevirtual #85                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      52: invokevirtual #86                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      55: aload_0
      56: getfield      #29                 // Field options:Lorg/xnio/OptionMap;
      59: invokevirtual #87                 // Method io/undertow/client/UndertowClient.connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioIoThread;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      62: goto          102
      65: astore        5
      67: iload         4
      69: ifne          82
      72: aload_3
      73: dup
      74: getfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
      77: iconst_1
      78: isub
      79: putfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
      82: aload_0
      83: getfield      #15                 // Field connectionPoolManager:Lio/undertow/server/handlers/proxy/ConnectionPoolManager;
      86: invokeinterface #89,  1           // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.handleError:()Z
      91: pop
      92: aload_2
      93: aload_1
      94: invokeinterface #90,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.failed:(Lio/undertow/server/HttpServerExchange;)V
      99: aload         5
     101: athrow
     102: return
    Exception table:
       from    to  target type
          15    62    65   Class java/lang/RuntimeException

  private void redistributeQueued(io.undertow.server.handlers.proxy.ProxyConnectionPool$HostThreadData);
    Code:
       0: aload_1
       1: getfield      #55                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.awaitingConnections:Ljava/util/Deque;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
       9: checkcast     #56                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder
      12: astore_2
      13: aload_2
      14: ifnull        108
      17: aload_2
      18: invokevirtual #58                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getTimeoutKey:()Lorg/xnio/XnioExecutor$Key;
      21: ifnull        34
      24: aload_2
      25: invokevirtual #58                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getTimeoutKey:()Lorg/xnio/XnioExecutor$Key;
      28: invokeinterface #59,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      33: pop
      34: aload_2
      35: invokevirtual #57                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.isCancelled:()Z
      38: ifne          92
      41: invokestatic  #65                 // Method java/lang/System.currentTimeMillis:()J
      44: lstore_3
      45: aload_2
      46: invokevirtual #91                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getExpireTime:()J
      49: lconst_0
      50: lcmp
      51: ifle          79
      54: aload_2
      55: invokevirtual #91                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getExpireTime:()J
      58: lload_3
      59: lcmp
      60: ifge          79
      63: aload_2
      64: invokevirtual #60                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getCallback:()Lio/undertow/server/handlers/proxy/ProxyCallback;
      67: aload_2
      68: invokevirtual #61                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getExchange:()Lio/undertow/server/HttpServerExchange;
      71: invokeinterface #90,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.failed:(Lio/undertow/server/HttpServerExchange;)V
      76: goto          92
      79: aload_2
      80: invokevirtual #60                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getCallback:()Lio/undertow/server/handlers/proxy/ProxyCallback;
      83: aload_2
      84: invokevirtual #61                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.getExchange:()Lio/undertow/server/HttpServerExchange;
      87: invokeinterface #92,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.queuedRequestFailed:(Lio/undertow/server/HttpServerExchange;)V
      92: aload_1
      93: getfield      #55                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.awaitingConnections:Ljava/util/Deque;
      96: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     101: checkcast     #56                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder
     104: astore_2
     105: goto          13
     108: return

  private void connectionReady(io.undertow.server.handlers.proxy.ProxyConnectionPool$ConnectionHolder, io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection>, io.undertow.server.HttpServerExchange, boolean);
    Code:
       0: aload_3
       1: new           #93                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$3
       4: dup
       5: aload_0
       6: iload         4
       8: aload_1
       9: invokespecial #94                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$3."<init>":(Lio/undertow/server/handlers/proxy/ProxyConnectionPool;ZLio/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder;)V
      12: invokevirtual #95                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
      15: pop
      16: goto          34
      19: astore        5
      21: aload_0
      22: aload_1
      23: invokevirtual #97                 // Method returnConnection:(Lio/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder;)V
      26: aload_2
      27: aload_3
      28: invokeinterface #90,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.failed:(Lio/undertow/server/HttpServerExchange;)V
      33: return
      34: aload_2
      35: aload_3
      36: new           #98                 // class io/undertow/server/handlers/proxy/ProxyConnection
      39: dup
      40: aload_1
      41: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
      44: aload_0
      45: getfield      #26                 // Field uri:Ljava/net/URI;
      48: invokevirtual #99                 // Method java/net/URI.getPath:()Ljava/lang/String;
      51: ifnonnull     59
      54: ldc           #100                // String /
      56: goto          66
      59: aload_0
      60: getfield      #26                 // Field uri:Ljava/net/URI;
      63: invokevirtual #99                 // Method java/net/URI.getPath:()Ljava/lang/String;
      66: invokespecial #101                // Method io/undertow/server/handlers/proxy/ProxyConnection."<init>":(Lio/undertow/client/ClientConnection;Ljava/lang/String;)V
      69: invokeinterface #102,  3          // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.completed:(Lio/undertow/server/HttpServerExchange;Ljava/lang/Object;)V
      74: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/Exception

  public io.undertow.server.handlers.proxy.ProxyConnectionPool$AvailabilityType available();
    Code:
       0: aload_0
       1: getfield      #30                 // Field closed:Z
       4: ifeq          11
       7: getstatic     #103                // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.CLOSED:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
      10: areturn
      11: aload_0
      12: getfield      #15                 // Field connectionPoolManager:Lio/undertow/server/handlers/proxy/ConnectionPoolManager;
      15: invokeinterface #104,  1          // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.isAvailable:()Z
      20: ifne          27
      23: getstatic     #105                // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.PROBLEM:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
      26: areturn
      27: aload_0
      28: invokevirtual #50                 // Method getData:()Lio/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData;
      31: astore_1
      32: aload_1
      33: getfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
      36: aload_0
      37: getfield      #18                 // Field maxConnections:I
      40: if_icmpge     47
      43: getstatic     #106                // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.AVAILABLE:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
      46: areturn
      47: aload_1
      48: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
      51: invokeinterface #107,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      56: ifne          63
      59: getstatic     #106                // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.AVAILABLE:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
      62: areturn
      63: aload_1
      64: getfield      #55                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.awaitingConnections:Ljava/util/Deque;
      67: invokeinterface #63,  1           // InterfaceMethod java/util/Deque.size:()I
      72: aload_0
      73: getfield      #15                 // Field connectionPoolManager:Lio/undertow/server/handlers/proxy/ConnectionPoolManager;
      76: invokeinterface #108,  1          // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.getMaxQueueSize:()I
      81: if_icmplt     88
      84: getstatic     #109                // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.FULL_QUEUE:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
      87: areturn
      88: getstatic     #110                // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.FULL:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
      91: areturn

  private void scheduleFailedHostRetry(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #15                 // Field connectionPoolManager:Lio/undertow/server/handlers/proxy/ConnectionPoolManager;
       4: invokeinterface #111,  1          // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.getProblemServerRetry:()I
       9: istore_2
      10: iload_2
      11: ifle          48
      14: aload_0
      15: getfield      #15                 // Field connectionPoolManager:Lio/undertow/server/handlers/proxy/ConnectionPoolManager;
      18: invokeinterface #104,  1          // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.isAvailable:()Z
      23: ifne          48
      26: aload_1
      27: invokevirtual #84                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      30: new           #112                // class io/undertow/server/handlers/proxy/ProxyConnectionPool$4
      33: dup
      34: aload_0
      35: aload_1
      36: invokespecial #113                // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$4."<init>":(Lio/undertow/server/handlers/proxy/ProxyConnectionPool;Lio/undertow/server/HttpServerExchange;)V
      39: iload_2
      40: i2l
      41: getstatic     #114                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      44: invokestatic  #70                 // Method io/undertow/util/WorkerUtils.executeAfter:(Lorg/xnio/XnioIoThread;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      47: pop
      48: return

  private void timeoutConnections(long, io.undertow.server.handlers.proxy.ProxyConnectionPool$HostThreadData);
    Code:
       0: aload_3
       1: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
       4: invokeinterface #63,  1           // InterfaceMethod java/util/Deque.size:()I
       9: istore        4
      11: iload         4
      13: ifle          169
      16: iload         4
      18: aload_0
      19: getfield      #22                 // Field coreCachedConnections:I
      22: if_icmple     169
      25: aload_3
      26: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
      29: invokeinterface #115,  1          // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      34: checkcast     #38                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder
      37: dup
      38: astore        5
      40: ifnull        169
      43: aload         5
      45: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
      48: invokeinterface #53,  1           // InterfaceMethod io/undertow/client/ClientConnection.isOpen:()Z
      53: ifne          62
      56: iinc          4, -1
      59: goto          11
      62: lload_1
      63: aload         5
      65: getfield      #66                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.timeout:J
      68: lcmp
      69: iflt          100
      72: aload_3
      73: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
      76: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      81: checkcast     #38                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder
      84: astore        5
      86: aload         5
      88: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
      91: invokestatic  #51                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      94: iinc          4, -1
      97: goto          11
     100: aload_3
     101: getfield      #71                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutKey:Lorg/xnio/XnioExecutor$Key;
     104: ifnull        122
     107: aload_3
     108: getfield      #71                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutKey:Lorg/xnio/XnioExecutor$Key;
     111: invokeinterface #59,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
     116: pop
     117: aload_3
     118: aconst_null
     119: putfield      #71                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutKey:Lorg/xnio/XnioExecutor$Key;
     122: aload         5
     124: getfield      #66                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.timeout:J
     127: lload_1
     128: lsub
     129: lconst_1
     130: ladd
     131: lstore        6
     133: aload_3
     134: aload         5
     136: getfield      #66                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.timeout:J
     139: putfield      #67                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.nextTimeout:J
     142: aload_3
     143: aload         5
     145: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
     148: invokeinterface #40,  1           // InterfaceMethod io/undertow/client/ClientConnection.getIoThread:()Lorg/xnio/XnioIoThread;
     153: aload_3
     154: getfield      #68                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutTask:Ljava/lang/Runnable;
     157: lload         6
     159: getstatic     #69                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     162: invokestatic  #70                 // Method io/undertow/util/WorkerUtils.executeAfter:(Lorg/xnio/XnioIoThread;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     165: putfield      #71                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutKey:Lorg/xnio/XnioExecutor$Key;
     168: return
     169: aload_3
     170: getfield      #71                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutKey:Lorg/xnio/XnioExecutor$Key;
     173: ifnull        191
     176: aload_3
     177: getfield      #71                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutKey:Lorg/xnio/XnioExecutor$Key;
     180: invokeinterface #59,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
     185: pop
     186: aload_3
     187: aconst_null
     188: putfield      #71                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.timeoutKey:Lorg/xnio/XnioExecutor$Key;
     191: aload_3
     192: ldc2_w        #116                // long -1l
     195: putfield      #67                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.nextTimeout:J
     198: return

  private io.undertow.server.handlers.proxy.ProxyConnectionPool$HostThreadData getData();
    Code:
       0: invokestatic  #118                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: instanceof    #119                // class org/xnio/XnioIoThread
       8: ifne          20
      11: getstatic     #120                // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #121,  1          // InterfaceMethod io/undertow/UndertowMessages.canOnlyBeCalledByIoThread:()Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_1
      21: checkcast     #119                // class org/xnio/XnioIoThread
      24: astore_2
      25: aload_0
      26: getfield      #14                 // Field hostThreadData:Ljava/util/concurrent/ConcurrentMap;
      29: aload_2
      30: invokeinterface #122,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #35                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData
      38: astore_3
      39: aload_3
      40: ifnull        45
      43: aload_3
      44: areturn
      45: new           #35                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData
      48: dup
      49: aload_0
      50: invokespecial #123                // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData."<init>":(Lio/undertow/server/handlers/proxy/ProxyConnectionPool;)V
      53: astore_3
      54: aload_0
      55: getfield      #14                 // Field hostThreadData:Ljava/util/concurrent/ConcurrentMap;
      58: aload_2
      59: aload_3
      60: invokeinterface #124,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #35                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData
      68: astore        4
      70: aload         4
      72: ifnull        78
      75: aload         4
      77: areturn
      78: aload_3
      79: areturn

  public io.undertow.client.ClientStatistics getClientStatistics();
    Code:
       0: new           #125                // class io/undertow/server/handlers/proxy/ProxyConnectionPool$5
       3: dup
       4: aload_0
       5: invokespecial #126                // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$5."<init>":(Lio/undertow/server/handlers/proxy/ProxyConnectionPool;)V
       8: areturn

  public int getOpenConnections();
    Code:
       0: aload_0
       1: getfield      #6                  // Field openConnections:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #127                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public void connect(io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget, io.undertow.server.HttpServerExchange, io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection>, long, java.util.concurrent.TimeUnit, boolean);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getData:()Lio/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData;
       4: astore        8
       6: aload         8
       8: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
      11: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      16: checkcast     #38                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder
      19: astore        9
      21: aload         9
      23: ifnull        57
      26: aload         9
      28: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
      31: invokeinterface #53,  1           // InterfaceMethod io/undertow/client/ClientConnection.isOpen:()Z
      36: ifne          57
      39: aload         8
      41: getfield      #36                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.availableConnections:Ljava/util/Deque;
      44: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      49: checkcast     #38                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder
      52: astore        9
      54: goto          21
      57: aload_2
      58: invokevirtual #128                // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      61: getstatic     #129                // Field io/undertow/util/Headers.UPGRADE:Lio/undertow/util/HttpString;
      64: invokevirtual #130                // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      67: istore        10
      69: aload         9
      71: ifnull        121
      74: iload         10
      76: ifeq          92
      79: aload         9
      81: getfield      #39                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder.clientConnection:Lio/undertow/client/ClientConnection;
      84: invokeinterface #131,  1          // InterfaceMethod io/undertow/client/ClientConnection.isUpgradeSupported:()Z
      89: ifeq          121
      92: iload         7
      94: ifeq          108
      97: aload         8
      99: dup
     100: getfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
     103: iconst_1
     104: isub
     105: putfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
     108: aload_0
     109: aload         9
     111: aload_3
     112: aload_2
     113: iload         7
     115: invokevirtual #62                 // Method connectionReady:(Lio/undertow/server/handlers/proxy/ProxyConnectionPool$ConnectionHolder;Lio/undertow/server/handlers/proxy/ProxyCallback;Lio/undertow/server/HttpServerExchange;Z)V
     118: goto          264
     121: iload         7
     123: ifne          138
     126: aload         8
     128: getfield      #76                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.connections:I
     131: aload_0
     132: getfield      #18                 // Field maxConnections:I
     135: if_icmpge     151
     138: aload_0
     139: aload_2
     140: aload_3
     141: aload         8
     143: iload         7
     145: invokevirtual #80                 // Method openConnection:(Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyCallback;Lio/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData;Z)V
     148: goto          264
     151: aload         8
     153: getfield      #55                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.awaitingConnections:Ljava/util/Deque;
     156: invokeinterface #63,  1           // InterfaceMethod java/util/Deque.size:()I
     161: aload_0
     162: getfield      #15                 // Field connectionPoolManager:Lio/undertow/server/handlers/proxy/ConnectionPoolManager;
     165: invokeinterface #108,  1          // InterfaceMethod io/undertow/server/handlers/proxy/ConnectionPoolManager.getMaxQueueSize:()I
     170: if_icmplt     181
     173: aload_3
     174: aload_2
     175: invokeinterface #92,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.queuedRequestFailed:(Lio/undertow/server/HttpServerExchange;)V
     180: return
     181: lload         4
     183: lconst_0
     184: lcmp
     185: ifle          236
     188: invokestatic  #65                 // Method java/lang/System.currentTimeMillis:()J
     191: lstore        12
     193: new           #56                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder
     196: dup
     197: aload_1
     198: aload_3
     199: aload_2
     200: lload         12
     202: aload         6
     204: lload         4
     206: invokevirtual #132                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     209: ladd
     210: invokespecial #133                // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder."<init>":(Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;Lio/undertow/server/handlers/proxy/ProxyCallback;Lio/undertow/server/HttpServerExchange;J)V
     213: astore        11
     215: aload         11
     217: aload_2
     218: invokevirtual #84                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
     221: aload         11
     223: lload         4
     225: aload         6
     227: invokestatic  #70                 // Method io/undertow/util/WorkerUtils.executeAfter:(Lorg/xnio/XnioIoThread;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     230: invokevirtual #134                // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder.setTimeoutKey:(Lorg/xnio/XnioExecutor$Key;)V
     233: goto          251
     236: new           #56                 // class io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder
     239: dup
     240: aload_1
     241: aload_3
     242: aload_2
     243: ldc2_w        #116                // long -1l
     246: invokespecial #133                // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$CallbackHolder."<init>":(Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;Lio/undertow/server/handlers/proxy/ProxyCallback;Lio/undertow/server/HttpServerExchange;J)V
     249: astore        11
     251: aload         8
     253: getfield      #55                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$HostThreadData.awaitingConnections:Ljava/util/Deque;
     256: aload         11
     258: invokeinterface #64,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     263: pop
     264: return

  void closeCurrentConnections();
    Code:
       0: new           #135                // class java/util/concurrent/CountDownLatch
       3: dup
       4: aload_0
       5: getfield      #14                 // Field hostThreadData:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #136,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      13: invokespecial #137                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #14                 // Field hostThreadData:Ljava/util/concurrent/ConcurrentMap;
      21: invokeinterface #138,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      26: invokeinterface #139,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          76
      41: aload_2
      42: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #140                // class java/util/Map$Entry
      50: astore_3
      51: aload_3
      52: invokeinterface #141,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: checkcast     #119                // class org/xnio/XnioIoThread
      60: new           #142                // class io/undertow/server/handlers/proxy/ProxyConnectionPool$6
      63: dup
      64: aload_0
      65: aload_3
      66: aload_1
      67: invokespecial #143                // Method io/undertow/server/handlers/proxy/ProxyConnectionPool$6."<init>":(Lio/undertow/server/handlers/proxy/ProxyConnectionPool;Ljava/util/Map$Entry;Ljava/util/concurrent/CountDownLatch;)V
      70: invokevirtual #43                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      73: goto          32
      76: aload_1
      77: ldc2_w        #144                // long 10l
      80: getstatic     #114                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      83: invokevirtual #146                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      86: pop
      87: goto          106
      90: astore_2
      91: invokestatic  #118                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      94: invokevirtual #148                // Method java/lang/Thread.interrupt:()V
      97: new           #88                 // class java/lang/RuntimeException
     100: dup
     101: aload_2
     102: invokespecial #149                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     105: athrow
     106: return
    Exception table:
       from    to  target type
          76    87    90   Class java/lang/InterruptedException
}
