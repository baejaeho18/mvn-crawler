Compiled from "StuckThreadDetectionHandler.java"
public class io.undertow.server.handlers.StuckThreadDetectionHandler implements io.undertow.server.HttpHandler {
  public static final int DEFAULT_THRESHOLD;

  private final java.util.concurrent.atomic.AtomicInteger stuckCount;

  private final int threshold;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Long, io.undertow.server.handlers.StuckThreadDetectionHandler$MonitoredThread> activeThreads;

  private final java.util.Queue<io.undertow.server.handlers.StuckThreadDetectionHandler$CompletedStuckThread> completedStuckThreadsQueue;

  private final io.undertow.server.HttpHandler next;

  private final java.lang.Runnable stuckThreadTask;

  private volatile org.xnio.XnioExecutor$Key timerKey;

  public io.undertow.server.handlers.StuckThreadDetectionHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: sipush        600
       4: aload_1
       5: invokespecial #2                  // Method "<init>":(ILio/undertow/server/HttpHandler;)V
       8: return

  public io.undertow.server.handlers.StuckThreadDetectionHandler(int, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #6                  // Field stuckCount:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      20: dup
      21: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      24: putfield      #9                  // Field activeThreads:Ljava/util/concurrent/ConcurrentHashMap;
      27: aload_0
      28: new           #10                 // class java/util/concurrent/ConcurrentLinkedQueue
      31: dup
      32: invokespecial #11                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      35: putfield      #12                 // Field completedStuckThreadsQueue:Ljava/util/Queue;
      38: aload_0
      39: new           #13                 // class io/undertow/server/handlers/StuckThreadDetectionHandler$1
      42: dup
      43: aload_0
      44: invokespecial #14                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$1."<init>":(Lio/undertow/server/handlers/StuckThreadDetectionHandler;)V
      47: putfield      #15                 // Field stuckThreadTask:Ljava/lang/Runnable;
      50: aload_0
      51: iload_1
      52: putfield      #16                 // Field threshold:I
      55: aload_0
      56: aload_2
      57: putfield      #17                 // Field next:Lio/undertow/server/HttpHandler;
      60: return

  public int getThreshold();
    Code:
       0: aload_0
       1: getfield      #16                 // Field threshold:I
       4: ireturn

  private void notifyStuckThreadDetected(io.undertow.server.handlers.StuckThreadDetectionHandler$MonitoredThread, long, int);
    Code:
       0: new           #18                 // class java/lang/Throwable
       3: dup
       4: invokespecial #19                 // Method java/lang/Throwable."<init>":()V
       7: astore        5
       9: aload         5
      11: aload_1
      12: invokevirtual #20                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getThread:()Ljava/lang/Thread;
      15: invokevirtual #21                 // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
      18: invokevirtual #22                 // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
      21: getstatic     #23                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      24: aload_1
      25: invokevirtual #20                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getThread:()Ljava/lang/Thread;
      28: invokevirtual #24                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      31: aload_1
      32: invokevirtual #20                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getThread:()Ljava/lang/Thread;
      35: invokevirtual #25                 // Method java/lang/Thread.getId:()J
      38: lload_2
      39: aload_1
      40: invokevirtual #26                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getStartTime:()Ljava/util/Date;
      43: aload_1
      44: invokevirtual #27                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getRequestUri:()Ljava/lang/String;
      47: aload_0
      48: getfield      #16                 // Field threshold:I
      51: iload         4
      53: aload         5
      55: invokeinterface #28,  11          // InterfaceMethod io/undertow/UndertowLogger.stuckThreadDetected:(Ljava/lang/String;JJLjava/util/Date;Ljava/lang/String;IILjava/lang/Throwable;)V
      60: return

  private void notifyStuckThreadCompleted(io.undertow.server.handlers.StuckThreadDetectionHandler$CompletedStuckThread, int);
    Code:
       0: getstatic     #23                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_1
       4: invokevirtual #29                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread.getName:()Ljava/lang/String;
       7: aload_1
       8: invokevirtual #30                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread.getId:()J
      11: aload_1
      12: invokevirtual #31                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread.getTotalActiveTime:()J
      15: iload_2
      16: invokeinterface #32,  7           // InterfaceMethod io/undertow/UndertowLogger.stuckThreadCompleted:(Ljava/lang/String;JJI)V
      21: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: invokestatic  #33                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #25                 // Method java/lang/Thread.getId:()J
       6: invokestatic  #34                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: astore_2
      10: new           #35                 // class io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread
      13: dup
      14: invokestatic  #33                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      17: aload_1
      18: invokevirtual #36                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      21: aload_1
      22: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
      25: invokedynamic #38,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      30: invokespecial #39                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread."<init>":(Ljava/lang/Thread;Ljava/lang/String;)V
      33: astore_3
      34: aload_0
      35: getfield      #9                  // Field activeThreads:Ljava/util/concurrent/ConcurrentHashMap;
      38: aload_2
      39: aload_3
      40: invokevirtual #40                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_0
      45: getfield      #41                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
      48: ifnonnull     96
      51: aload_0
      52: dup
      53: astore        4
      55: monitorenter
      56: aload_0
      57: getfield      #41                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
      60: ifnonnull     82
      63: aload_0
      64: aload_1
      65: invokevirtual #42                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      68: aload_0
      69: getfield      #15                 // Field stuckThreadTask:Ljava/lang/Runnable;
      72: lconst_1
      73: getstatic     #43                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      76: invokevirtual #44                 // Method org/xnio/XnioIoThread.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      79: putfield      #41                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
      82: aload         4
      84: monitorexit
      85: goto          96
      88: astore        5
      90: aload         4
      92: monitorexit
      93: aload         5
      95: athrow
      96: aload_0
      97: getfield      #17                 // Field next:Lio/undertow/server/HttpHandler;
     100: aload_1
     101: invokeinterface #45,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     106: aload_0
     107: getfield      #9                  // Field activeThreads:Ljava/util/concurrent/ConcurrentHashMap;
     110: aload_2
     111: invokevirtual #46                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     114: pop
     115: aload_3
     116: invokevirtual #47                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.markAsDone:()Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
     119: getstatic     #48                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.STUCK:Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
     122: if_acmpne     202
     125: aload_0
     126: getfield      #12                 // Field completedStuckThreadsQueue:Ljava/util/Queue;
     129: new           #49                 // class io/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread
     132: dup
     133: aload_3
     134: invokevirtual #20                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getThread:()Ljava/lang/Thread;
     137: aload_3
     138: invokevirtual #50                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getActiveTimeInMillis:()J
     141: invokespecial #51                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread."<init>":(Ljava/lang/Thread;J)V
     144: invokeinterface #52,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     149: pop
     150: goto          202
     153: astore        6
     155: aload_0
     156: getfield      #9                  // Field activeThreads:Ljava/util/concurrent/ConcurrentHashMap;
     159: aload_2
     160: invokevirtual #46                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     163: pop
     164: aload_3
     165: invokevirtual #47                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.markAsDone:()Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
     168: getstatic     #48                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.STUCK:Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
     171: if_acmpne     199
     174: aload_0
     175: getfield      #12                 // Field completedStuckThreadsQueue:Ljava/util/Queue;
     178: new           #49                 // class io/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread
     181: dup
     182: aload_3
     183: invokevirtual #20                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getThread:()Ljava/lang/Thread;
     186: aload_3
     187: invokevirtual #50                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getActiveTimeInMillis:()J
     190: invokespecial #51                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$CompletedStuckThread."<init>":(Ljava/lang/Thread;J)V
     193: invokeinterface #52,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     198: pop
     199: aload         6
     201: athrow
     202: return
    Exception table:
       from    to  target type
          56    85    88   any
          88    93    88   any
          96   106   153   any
         153   155   153   any

  public long[] getStuckThreadIds();
    Code:
       0: new           #53                 // class java/util/ArrayList
       3: dup
       4: invokespecial #54                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #9                  // Field activeThreads:Ljava/util/concurrent/ConcurrentHashMap;
      12: invokevirtual #55                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      15: invokeinterface #56,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          67
      30: aload_2
      31: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #35                 // class io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread
      39: astore_3
      40: aload_3
      41: invokevirtual #59                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.isMarkedAsStuck:()Z
      44: ifeq          64
      47: aload_1
      48: aload_3
      49: invokevirtual #20                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThread.getThread:()Ljava/lang/Thread;
      52: invokevirtual #25                 // Method java/lang/Thread.getId:()J
      55: invokestatic  #34                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      58: invokeinterface #60,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          21
      67: aload_1
      68: invokeinterface #61,  1           // InterfaceMethod java/util/List.size:()I
      73: newarray       long
      75: astore_2
      76: iconst_0
      77: istore_3
      78: iload_3
      79: aload_2
      80: arraylength
      81: if_icmpge     106
      84: aload_2
      85: iload_3
      86: aload_1
      87: iload_3
      88: invokeinterface #62,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      93: checkcast     #63                 // class java/lang/Long
      96: invokevirtual #64                 // Method java/lang/Long.longValue:()J
      99: lastore
     100: iinc          3, 1
     103: goto          78
     106: aload_2
     107: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #16                 // Field threshold:I
       4: invokedynamic #65,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;
       9: areturn
}
