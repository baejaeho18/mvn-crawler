Compiled from "ModCluster.java"
public class io.undertow.server.handlers.proxy.mod_cluster.ModCluster {
  private final long healthCheckInterval;

  private final long removeBrokenNodes;

  private final io.undertow.server.handlers.proxy.mod_cluster.NodeHealthChecker healthChecker;

  private final int maxConnections;

  private final int cacheConnections;

  private final int requestQueueSize;

  private final boolean queueNewRequests;

  private final int maxRequestTime;

  private final long ttl;

  private final boolean useAlias;

  private final org.xnio.XnioWorker xnioWorker;

  private final io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer container;

  private final int maxRetries;

  private final boolean deterministicFailover;

  private final io.undertow.server.handlers.proxy.RouteParsingStrategy routeParsingStrategy;

  private final java.lang.String rankedAffinityDelimiter;

  private final boolean reuseXForwarded;

  private final java.lang.String serverID;

  io.undertow.server.handlers.proxy.mod_cluster.ModCluster(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
       8: invokevirtual #3                  // Method java/util/UUID.toString:()Ljava/lang/String;
      11: putfield      #4                  // Field serverID:Ljava/lang/String;
      14: aload_0
      15: aload_1
      16: getfield      #5                  // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.xnioWorker:Lorg/xnio/XnioWorker;
      19: putfield      #6                  // Field xnioWorker:Lorg/xnio/XnioWorker;
      22: aload_0
      23: aload_1
      24: getfield      #7                  // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.maxConnections:I
      27: putfield      #8                  // Field maxConnections:I
      30: aload_0
      31: aload_1
      32: getfield      #9                  // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.cacheConnections:I
      35: putfield      #10                 // Field cacheConnections:I
      38: aload_0
      39: aload_1
      40: getfield      #11                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.requestQueueSize:I
      43: putfield      #12                 // Field requestQueueSize:I
      46: aload_0
      47: aload_1
      48: getfield      #13                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.queueNewRequests:Z
      51: putfield      #14                 // Field queueNewRequests:Z
      54: aload_0
      55: aload_1
      56: getfield      #15                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.healthCheckInterval:J
      59: putfield      #16                 // Field healthCheckInterval:J
      62: aload_0
      63: aload_1
      64: getfield      #17                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.removeBrokenNodes:J
      67: putfield      #18                 // Field removeBrokenNodes:J
      70: aload_0
      71: aload_1
      72: getfield      #19                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.deterministicFailover:Z
      75: putfield      #20                 // Field deterministicFailover:Z
      78: aload_0
      79: aload_1
      80: getfield      #21                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.routeParsingStrategy:Lio/undertow/server/handlers/proxy/RouteParsingStrategy;
      83: putfield      #22                 // Field routeParsingStrategy:Lio/undertow/server/handlers/proxy/RouteParsingStrategy;
      86: aload_0
      87: aload_1
      88: getfield      #23                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.rankedAffinityDelimiter:Ljava/lang/String;
      91: putfield      #24                 // Field rankedAffinityDelimiter:Ljava/lang/String;
      94: aload_0
      95: aload_1
      96: getfield      #25                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
      99: putfield      #26                 // Field healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
     102: aload_0
     103: aload_1
     104: getfield      #27                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.maxRequestTime:I
     107: putfield      #28                 // Field maxRequestTime:I
     110: aload_0
     111: aload_1
     112: getfield      #29                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.ttl:J
     115: putfield      #30                 // Field ttl:J
     118: aload_0
     119: aload_1
     120: getfield      #31                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.useAlias:Z
     123: putfield      #32                 // Field useAlias:Z
     126: aload_0
     127: aload_1
     128: getfield      #33                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.maxRetries:I
     131: putfield      #34                 // Field maxRetries:I
     134: aload_0
     135: aload_1
     136: getfield      #35                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.reuseXForwarded:Z
     139: putfield      #36                 // Field reuseXForwarded:Z
     142: aload_0
     143: new           #37                 // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer
     146: dup
     147: aload_0
     148: aload_1
     149: getfield      #38                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.xnioSsl:Lorg/xnio/ssl/XnioSsl;
     152: aload_1
     153: getfield      #39                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.client:Lio/undertow/client/UndertowClient;
     156: aload_1
     157: getfield      #40                 // Field io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder.clientOptions:Lorg/xnio/OptionMap;
     160: invokespecial #41                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/ModCluster;Lorg/xnio/ssl/XnioSsl;Lio/undertow/client/UndertowClient;Lorg/xnio/OptionMap;)V
     163: putfield      #42                 // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
     166: return

  protected java.lang.String getServerID();
    Code:
       0: aload_0
       1: getfield      #4                  // Field serverID:Ljava/lang/String;
       4: areturn

  protected io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer getContainer();
    Code:
       0: aload_0
       1: getfield      #42                 // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
       4: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModClusterController getController();
    Code:
       0: aload_0
       1: getfield      #42                 // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
       4: areturn

  public int getMaxConnections();
    Code:
       0: aload_0
       1: getfield      #8                  // Field maxConnections:I
       4: ireturn

  public int getCacheConnections();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cacheConnections:I
       4: ireturn

  public int getRequestQueueSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field requestQueueSize:I
       4: ireturn

  public boolean isQueueNewRequests();
    Code:
       0: aload_0
       1: getfield      #14                 // Field queueNewRequests:Z
       4: ireturn

  public long getHealthCheckInterval();
    Code:
       0: aload_0
       1: getfield      #16                 // Field healthCheckInterval:J
       4: lreturn

  public long getRemoveBrokenNodes();
    Code:
       0: aload_0
       1: getfield      #18                 // Field removeBrokenNodes:J
       4: lreturn

  public io.undertow.server.handlers.proxy.mod_cluster.NodeHealthChecker getHealthChecker();
    Code:
       0: aload_0
       1: getfield      #26                 // Field healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
       4: areturn

  public long getTtl();
    Code:
       0: aload_0
       1: getfield      #30                 // Field ttl:J
       4: lreturn

  public boolean isUseAlias();
    Code:
       0: aload_0
       1: getfield      #32                 // Field useAlias:Z
       4: ireturn

  public boolean isDeterministicFailover();
    Code:
       0: aload_0
       1: getfield      #20                 // Field deterministicFailover:Z
       4: ireturn

  public io.undertow.server.handlers.proxy.RouteParsingStrategy routeParsingStrategy();
    Code:
       0: aload_0
       1: getfield      #22                 // Field routeParsingStrategy:Lio/undertow/server/handlers/proxy/RouteParsingStrategy;
       4: areturn

  public java.lang.String rankedAffinityDelimiter();
    Code:
       0: aload_0
       1: getfield      #24                 // Field rankedAffinityDelimiter:Ljava/lang/String;
       4: areturn

  public io.undertow.server.HttpHandler getProxyHandler();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method createProxyHandler:()Lio/undertow/server/HttpHandler;
       4: areturn

  public io.undertow.server.HttpHandler createProxyHandler();
    Code:
       0: invokestatic  #44                 // Method io/undertow/server/handlers/proxy/ProxyHandler.builder:()Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
       3: aload_0
       4: getfield      #42                 // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
       7: invokevirtual #45                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer.getProxyClient:()Lio/undertow/server/handlers/proxy/ProxyClient;
      10: invokevirtual #46                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.setProxyClient:(Lio/undertow/server/handlers/proxy/ProxyClient;)Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
      13: aload_0
      14: getfield      #28                 // Field maxRequestTime:I
      17: invokevirtual #47                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.setMaxRequestTime:(I)Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
      20: aload_0
      21: getfield      #34                 // Field maxRetries:I
      24: invokevirtual #48                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.setMaxConnectionRetries:(I)Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
      27: aload_0
      28: getfield      #36                 // Field reuseXForwarded:Z
      31: invokevirtual #49                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.setReuseXForwarded:(Z)Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
      34: invokevirtual #50                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.build:()Lio/undertow/server/handlers/proxy/ProxyHandler;
      37: areturn

  public io.undertow.server.HttpHandler createProxyHandler(io.undertow.server.HttpHandler);
    Code:
       0: invokestatic  #44                 // Method io/undertow/server/handlers/proxy/ProxyHandler.builder:()Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
       3: aload_0
       4: getfield      #42                 // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
       7: invokevirtual #45                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer.getProxyClient:()Lio/undertow/server/handlers/proxy/ProxyClient;
      10: invokevirtual #46                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.setProxyClient:(Lio/undertow/server/handlers/proxy/ProxyClient;)Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
      13: aload_1
      14: invokevirtual #51                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.setNext:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
      17: aload_0
      18: getfield      #28                 // Field maxRequestTime:I
      21: invokevirtual #47                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.setMaxRequestTime:(I)Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
      24: aload_0
      25: getfield      #34                 // Field maxRetries:I
      28: invokevirtual #48                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.setMaxConnectionRetries:(I)Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
      31: aload_0
      32: getfield      #36                 // Field reuseXForwarded:Z
      35: invokevirtual #49                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.setReuseXForwarded:(Z)Lio/undertow/server/handlers/proxy/ProxyHandler$Builder;
      38: invokevirtual #50                 // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder.build:()Lio/undertow/server/handlers/proxy/ProxyHandler;
      41: areturn

  public synchronized void start();
    Code:
       0: return

  public synchronized void advertise(io.undertow.server.handlers.proxy.mod_cluster.MCMPConfig) throws java.io.IOException;
    Code:
       0: ldc           #52                 // String config
       2: aload_1
       3: invokestatic  #53                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #54                 // String config.getAdvertiseConfig
       9: aload_1
      10: invokevirtual #55                 // Method io/undertow/server/handlers/proxy/mod_cluster/MCMPConfig.getAdvertiseConfig:()Lio/undertow/server/handlers/proxy/mod_cluster/MCMPConfig$AdvertiseConfig;
      13: invokestatic  #53                 // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #56                 // class io/undertow/server/handlers/proxy/mod_cluster/MCMPConfig$AdvertiseConfig
      19: astore_2
      20: aload_0
      21: getfield      #42                 // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
      24: aload_2
      25: aload_0
      26: getfield      #6                  // Field xnioWorker:Lorg/xnio/XnioWorker;
      29: invokestatic  #57                 // Method io/undertow/server/handlers/proxy/mod_cluster/MCMPAdvertiseTask.advertise:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;Lio/undertow/server/handlers/proxy/mod_cluster/MCMPConfig$AdvertiseConfig;Lorg/xnio/XnioWorker;)V
      32: return

  public synchronized void stop();
    Code:
       0: return

  public static io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder builder(org.xnio.XnioWorker);
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method io/undertow/client/UndertowClient.getInstance:()Lio/undertow/client/UndertowClient;
       4: aconst_null
       5: invokestatic  #59                 // Method builder:(Lorg/xnio/XnioWorker;Lio/undertow/client/UndertowClient;Lorg/xnio/ssl/XnioSsl;)Lio/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder;
       8: areturn

  public static io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder builder(org.xnio.XnioWorker, io.undertow.client.UndertowClient);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #59                 // Method builder:(Lorg/xnio/XnioWorker;Lio/undertow/client/UndertowClient;Lorg/xnio/ssl/XnioSsl;)Lio/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder;
       6: areturn

  public static io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder builder(org.xnio.XnioWorker, io.undertow.client.UndertowClient, org.xnio.ssl.XnioSsl);
    Code:
       0: new           #60                 // class io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #61                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder."<init>":(Lorg/xnio/XnioWorker;Lio/undertow/client/UndertowClient;Lorg/xnio/ssl/XnioSsl;)V
      10: areturn
}
