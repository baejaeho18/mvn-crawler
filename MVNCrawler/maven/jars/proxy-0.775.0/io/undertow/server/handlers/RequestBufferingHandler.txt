Compiled from "RequestBufferingHandler.java"
public class io.undertow.server.handlers.RequestBufferingHandler implements io.undertow.server.HttpHandler {
  private final io.undertow.server.HttpHandler next;

  private final int maxBuffers;

  public io.undertow.server.handlers.RequestBufferingHandler(io.undertow.server.HttpHandler, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field next:Lio/undertow/server/HttpHandler;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field maxBuffers:I
      14: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
       4: ifne          264
       7: aload_1
       8: invokevirtual #5                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      11: invokestatic  #6                  // Method io/undertow/server/protocol/http/HttpContinue.requiresContinueResponse:(Lio/undertow/util/HeaderMap;)Z
      14: ifne          264
      17: aload_1
      18: invokevirtual #7                  // Method io/undertow/server/HttpServerExchange.getRequestChannel:()Lorg/xnio/channels/StreamSourceChannel;
      21: astore_2
      22: iconst_0
      23: istore_3
      24: aload_0
      25: getfield      #3                  // Field maxBuffers:I
      28: anewarray     #8                  // class io/undertow/connector/PooledByteBuffer
      31: astore        4
      33: aload_1
      34: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      37: invokevirtual #10                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      40: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      45: astore        5
      47: aload         5
      49: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      54: astore        7
      56: aload_2
      57: aload         7
      59: invokeinterface #13,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      64: istore        6
      66: iload         6
      68: iconst_m1
      69: if_icmpne     105
      72: aload         7
      74: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
      77: ifne          90
      80: aload         5
      82: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      87: goto          201
      90: aload         7
      92: invokevirtual #16                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      95: pop
      96: aload         4
      98: iload_3
      99: aload         5
     101: aastore
     102: goto          201
     105: iload         6
     107: ifne          150
     110: aload         5
     112: astore        8
     114: iload_3
     115: istore        9
     117: aload_2
     118: invokeinterface #17,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     123: new           #18                 // class io/undertow/server/handlers/RequestBufferingHandler$1
     126: dup
     127: aload_0
     128: aload         8
     130: iload         9
     132: aload         4
     134: aload_1
     135: invokespecial #19                 // Method io/undertow/server/handlers/RequestBufferingHandler$1."<init>":(Lio/undertow/server/handlers/RequestBufferingHandler;Lio/undertow/connector/PooledByteBuffer;I[Lio/undertow/connector/PooledByteBuffer;Lio/undertow/server/HttpServerExchange;)V
     138: invokeinterface #20,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     143: aload_2
     144: invokeinterface #21,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
     149: return
     150: aload         7
     152: invokevirtual #22                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     155: ifne          198
     158: aload         7
     160: invokevirtual #16                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     163: pop
     164: aload         4
     166: iload_3
     167: iinc          3, 1
     170: aload         5
     172: aastore
     173: iload_3
     174: aload_0
     175: getfield      #3                  // Field maxBuffers:I
     178: if_icmpne     184
     181: goto          201
     184: aload_1
     185: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     188: invokevirtual #10                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     191: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     196: astore        5
     198: goto          47
     201: aload_1
     202: aload         4
     204: invokestatic  #23                 // Method io/undertow/server/Connectors.ungetRequestBytes:(Lio/undertow/server/HttpServerExchange;[Lio/undertow/connector/PooledByteBuffer;)V
     207: aload_1
     208: invokestatic  #24                 // Method io/undertow/server/Connectors.resetRequestChannel:(Lio/undertow/server/HttpServerExchange;)V
     211: goto          264
     214: astore        6
     216: iconst_0
     217: istore        7
     219: iload         7
     221: aload         4
     223: arraylength
     224: if_icmpge     241
     227: aload         4
     229: iload         7
     231: aaload
     232: invokestatic  #27                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     235: iinc          7, 1
     238: goto          219
     241: aload         5
     243: ifnull        261
     246: aload         5
     248: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
     253: ifeq          261
     256: aload         5
     258: invokestatic  #27                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     261: aload         6
     263: athrow
     264: aload_0
     265: getfield      #2                  // Field next:Lio/undertow/server/HttpHandler;
     268: aload_1
     269: invokeinterface #29,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     274: return
    Exception table:
       from    to  target type
          47   149   214   Class java/lang/Exception
          47   149   214   Class java/lang/Error
         150   211   214   Class java/lang/Exception
         150   211   214   Class java/lang/Error

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxBuffers:I
       4: invokedynamic #30,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
       9: areturn
}
