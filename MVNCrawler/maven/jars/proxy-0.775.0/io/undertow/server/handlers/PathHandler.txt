Compiled from "PathHandler.java"
public class io.undertow.server.handlers.PathHandler implements io.undertow.server.HttpHandler {
  private final io.undertow.util.PathMatcher<io.undertow.server.HttpHandler> pathMatcher;

  private final io.undertow.server.handlers.cache.LRUCache<java.lang.String, io.undertow.util.PathMatcher$PathMatch<io.undertow.server.HttpHandler>> cache;

  public io.undertow.server.handlers.PathHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(I)V
       5: aload_0
       6: getfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
       9: ldc           #3                  // String /
      11: aload_1
      12: invokevirtual #4                  // Method io/undertow/util/PathMatcher.addPrefixPath:(Ljava/lang/String;Ljava/lang/Object;)Lio/undertow/util/PathMatcher;
      15: pop
      16: return

  public io.undertow.server.handlers.PathHandler(io.undertow.server.HttpHandler, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #1                  // Method "<init>":(I)V
       5: aload_0
       6: getfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
       9: ldc           #3                  // String /
      11: aload_1
      12: invokevirtual #4                  // Method io/undertow/util/PathMatcher.addPrefixPath:(Ljava/lang/String;Ljava/lang/Object;)Lio/undertow/util/PathMatcher;
      15: pop
      16: return

  public io.undertow.server.handlers.PathHandler();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public io.undertow.server.handlers.PathHandler(int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class io/undertow/util/PathMatcher
       8: dup
       9: invokespecial #7                  // Method io/undertow/util/PathMatcher."<init>":()V
      12: putfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
      15: iload_1
      16: ifle          36
      19: aload_0
      20: new           #8                  // class io/undertow/server/handlers/cache/LRUCache
      23: dup
      24: iload_1
      25: iconst_m1
      26: iconst_1
      27: invokespecial #9                  // Method io/undertow/server/handlers/cache/LRUCache."<init>":(IIZ)V
      30: putfield      #10                 // Field cache:Lio/undertow/server/handlers/cache/LRUCache;
      33: goto          41
      36: aload_0
      37: aconst_null
      38: putfield      #10                 // Field cache:Lio/undertow/server/handlers/cache/LRUCache;
      41: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
       4: invokevirtual #11                 // Method io/undertow/util/PathMatcher.getPaths:()Ljava/util/Map;
       7: invokeinterface #12,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      12: astore_1
      13: aload_1
      14: invokeinterface #13,  1           // InterfaceMethod java/util/Set.size:()I
      19: iconst_1
      20: if_icmpne     37
      23: aload_1
      24: invokeinterface #14,  1           // InterfaceMethod java/util/Set.toArray:()[Ljava/lang/Object;
      29: iconst_0
      30: aaload
      31: invokedynamic #15,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/Object;)Ljava/lang/String;
      36: areturn
      37: aload_1
      38: invokeinterface #16,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      43: invokedynamic #17,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      48: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      53: ldc           #19                 // String ,
      55: invokestatic  #20                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      58: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      63: checkcast     #22                 // class java/lang/String
      66: invokedynamic #23,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      71: areturn

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: astore_2
       2: iconst_0
       3: istore_3
       4: aload_0
       5: getfield      #10                 // Field cache:Lio/undertow/server/handlers/cache/LRUCache;
       8: ifnull        28
      11: aload_0
      12: getfield      #10                 // Field cache:Lio/undertow/server/handlers/cache/LRUCache;
      15: aload_1
      16: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      19: invokevirtual #25                 // Method io/undertow/server/handlers/cache/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #26                 // class io/undertow/util/PathMatcher$PathMatch
      25: astore_2
      26: iconst_1
      27: istore_3
      28: aload_2
      29: ifnonnull     44
      32: aload_0
      33: getfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
      36: aload_1
      37: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      40: invokevirtual #27                 // Method io/undertow/util/PathMatcher.match:(Ljava/lang/String;)Lio/undertow/util/PathMatcher$PathMatch;
      43: astore_2
      44: aload_2
      45: invokevirtual #28                 // Method io/undertow/util/PathMatcher$PathMatch.getValue:()Ljava/lang/Object;
      48: ifnonnull     59
      51: getstatic     #29                 // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_404:Lio/undertow/server/handlers/ResponseCodeHandler;
      54: aload_1
      55: invokevirtual #30                 // Method io/undertow/server/handlers/ResponseCodeHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      58: return
      59: iload_3
      60: ifeq          75
      63: aload_0
      64: getfield      #10                 // Field cache:Lio/undertow/server/handlers/cache/LRUCache;
      67: aload_1
      68: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      71: aload_2
      72: invokevirtual #31                 // Method io/undertow/server/handlers/cache/LRUCache.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      75: aload_1
      76: aload_2
      77: invokevirtual #32                 // Method io/undertow/util/PathMatcher$PathMatch.getRemaining:()Ljava/lang/String;
      80: invokevirtual #33                 // Method io/undertow/server/HttpServerExchange.setRelativePath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      83: pop
      84: aload_1
      85: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.getResolvedPath:()Ljava/lang/String;
      88: invokevirtual #35                 // Method java/lang/String.isEmpty:()Z
      91: ifeq          106
      94: aload_1
      95: aload_2
      96: invokevirtual #36                 // Method io/undertow/util/PathMatcher$PathMatch.getMatched:()Ljava/lang/String;
      99: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.setResolvedPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     102: pop
     103: goto          124
     106: aload_1
     107: aload_1
     108: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.getResolvedPath:()Ljava/lang/String;
     111: aload_2
     112: invokevirtual #36                 // Method io/undertow/util/PathMatcher$PathMatch.getMatched:()Ljava/lang/String;
     115: invokedynamic #38,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     120: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.setResolvedPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     123: pop
     124: aload_2
     125: invokevirtual #28                 // Method io/undertow/util/PathMatcher$PathMatch.getValue:()Ljava/lang/Object;
     128: checkcast     #39                 // class io/undertow/server/HttpHandler
     131: aload_1
     132: invokeinterface #40,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     137: return

  public synchronized io.undertow.server.handlers.PathHandler addPath(java.lang.String, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #41                 // Method addPrefixPath:(Ljava/lang/String;Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/PathHandler;
       6: areturn

  public synchronized io.undertow.server.handlers.PathHandler addPrefixPath(java.lang.String, io.undertow.server.HttpHandler);
    Code:
       0: aload_2
       1: invokestatic  #42                 // Method io/undertow/Handlers.handlerNotNull:(Lio/undertow/server/HttpHandler;)V
       4: aload_0
       5: getfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
       8: aload_1
       9: aload_2
      10: invokevirtual #4                  // Method io/undertow/util/PathMatcher.addPrefixPath:(Ljava/lang/String;Ljava/lang/Object;)Lio/undertow/util/PathMatcher;
      13: pop
      14: aload_0
      15: areturn

  public synchronized io.undertow.server.handlers.PathHandler addExactPath(java.lang.String, io.undertow.server.HttpHandler);
    Code:
       0: aload_2
       1: invokestatic  #42                 // Method io/undertow/Handlers.handlerNotNull:(Lio/undertow/server/HttpHandler;)V
       4: aload_0
       5: getfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
       8: aload_1
       9: aload_2
      10: invokevirtual #43                 // Method io/undertow/util/PathMatcher.addExactPath:(Ljava/lang/String;Ljava/lang/Object;)Lio/undertow/util/PathMatcher;
      13: pop
      14: aload_0
      15: areturn

  public synchronized io.undertow.server.handlers.PathHandler removePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method removePrefixPath:(Ljava/lang/String;)Lio/undertow/server/handlers/PathHandler;
       5: areturn

  public synchronized io.undertow.server.handlers.PathHandler removePrefixPath(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
       4: aload_1
       5: invokevirtual #45                 // Method io/undertow/util/PathMatcher.removePrefixPath:(Ljava/lang/String;)Lio/undertow/util/PathMatcher;
       8: pop
       9: aload_0
      10: areturn

  public synchronized io.undertow.server.handlers.PathHandler removeExactPath(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
       4: aload_1
       5: invokevirtual #46                 // Method io/undertow/util/PathMatcher.removeExactPath:(Ljava/lang/String;)Lio/undertow/util/PathMatcher;
       8: pop
       9: aload_0
      10: areturn

  public synchronized io.undertow.server.handlers.PathHandler clearPaths();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pathMatcher:Lio/undertow/util/PathMatcher;
       4: invokevirtual #47                 // Method io/undertow/util/PathMatcher.clearPaths:()Lio/undertow/util/PathMatcher;
       7: pop
       8: aload_0
       9: areturn

  private static java.lang.String lambda$toString$0(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #39                 // class io/undertow/server/HttpHandler
       9: invokevirtual #49                 // Method java/lang/Object.toString:()Ljava/lang/String;
      12: areturn
}
