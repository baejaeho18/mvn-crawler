Compiled from "Node.java"
class io.undertow.server.handlers.proxy.mod_cluster.Node$NodeConnectionPoolManager implements io.undertow.server.handlers.proxy.ConnectionPoolManager {
  final io.undertow.server.handlers.proxy.mod_cluster.Node this$0;

  private io.undertow.server.handlers.proxy.mod_cluster.Node$NodeConnectionPoolManager(io.undertow.server.handlers.proxy.mod_cluster.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: getfield      #4                  // Field io/undertow/server/handlers/proxy/mod_cluster/Node.state:I
       7: ldc           #5                  // int -1073741824
       9: invokestatic  #6                  // Method org/xnio/Bits.allAreClear:(II)Z
      12: ireturn

  public boolean handleError();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: invokevirtual #7                  // Method io/undertow/server/handlers/proxy/mod_cluster/Node.markInError:()V
       7: iconst_0
       8: ireturn

  public boolean clearError();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method isAvailable:()Z
       4: ireturn

  public int getMaxConnections();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: getfield      #9                  // Field io/undertow/server/handlers/proxy/mod_cluster/Node.nodeConfig:Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
       7: invokevirtual #10                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getMaxConnections:()I
      10: ireturn

  public int getMaxCachedConnections();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: getfield      #9                  // Field io/undertow/server/handlers/proxy/mod_cluster/Node.nodeConfig:Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
       7: invokevirtual #10                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getMaxConnections:()I
      10: ireturn

  public int getSMaxConnections();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: getfield      #9                  // Field io/undertow/server/handlers/proxy/mod_cluster/Node.nodeConfig:Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
       7: invokevirtual #11                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getSmax:()I
      10: ireturn

  public long getTtl();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: getfield      #9                  // Field io/undertow/server/handlers/proxy/mod_cluster/Node.nodeConfig:Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
       7: invokevirtual #12                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getTtl:()J
      10: lreturn

  public int getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: getfield      #9                  // Field io/undertow/server/handlers/proxy/mod_cluster/Node.nodeConfig:Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
       7: invokevirtual #13                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getRequestQueueSize:()I
      10: ireturn

  public int getProblemServerRetry();
    Code:
       0: iconst_m1
       1: ireturn
}
