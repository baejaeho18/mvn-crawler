Compiled from "PathResource.java"
public class io.undertow.server.handlers.resource.PathResource implements io.undertow.server.handlers.resource.RangeAwareResource {
  private final java.nio.file.Path file;

  private final java.lang.String path;

  private final io.undertow.util.ETag eTag;

  private final io.undertow.server.handlers.resource.PathResourceManager manager;

  public io.undertow.server.handlers.resource.PathResource(java.nio.file.Path, io.undertow.server.handlers.resource.PathResourceManager, java.lang.String, io.undertow.util.ETag);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field file:Ljava/nio/file/Path;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field path:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field manager:Lio/undertow/server/handlers/resource/PathResourceManager;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field eTag:Lio/undertow/util/ETag;
      25: return

  public io.undertow.server.handlers.resource.PathResource(java.nio.file.Path, io.undertow.server.handlers.resource.PathResourceManager, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #6                  // Method "<init>":(Ljava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager;Ljava/lang/String;Lio/undertow/util/ETag;)V
       8: return

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #3                  // Field path:Ljava/lang/String;
       4: areturn

  public java.util.Date getLastModified();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: invokestatic  #7                  // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
       7: ifeq          26
      10: aload_0
      11: getfield      #2                  // Field file:Ljava/nio/file/Path;
      14: iconst_0
      15: anewarray     #8                  // class java/nio/file/LinkOption
      18: invokestatic  #9                  // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      21: ifeq          26
      24: aconst_null
      25: areturn
      26: new           #10                 // class java/util/Date
      29: dup
      30: aload_0
      31: getfield      #2                  // Field file:Ljava/nio/file/Path;
      34: iconst_0
      35: anewarray     #8                  // class java/nio/file/LinkOption
      38: invokestatic  #11                 // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;
      41: invokevirtual #12                 // Method java/nio/file/attribute/FileTime.toMillis:()J
      44: invokespecial #13                 // Method java/util/Date."<init>":(J)V
      47: areturn
      48: astore_1
      49: new           #15                 // class java/lang/RuntimeException
      52: dup
      53: aload_1
      54: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      57: athrow
    Exception table:
       from    to  target type
           0    25    48   Class java/io/IOException
          26    47    48   Class java/io/IOException

  public java.lang.String getLastModifiedString();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getLastModified:()Ljava/util/Date;
       4: invokestatic  #18                 // Method io/undertow/util/DateUtils.toDateString:(Ljava/util/Date;)Ljava/lang/String;
       7: areturn

  public io.undertow.util.ETag getETag();
    Code:
       0: aload_0
       1: getfield      #5                  // Field eTag:Lio/undertow/util/ETag;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       9: ifnull        27
      12: aload_0
      13: getfield      #2                  // Field file:Ljava/nio/file/Path;
      16: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      21: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      26: areturn
      27: aload_0
      28: getfield      #2                  // Field file:Ljava/nio/file/Path;
      31: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      36: areturn

  public boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: iconst_0
       5: anewarray     #8                  // class java/nio/file/LinkOption
       8: invokestatic  #21                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      11: ireturn

  public java.util.List<io.undertow.server.handlers.resource.Resource> list();
    Code:
       0: new           #22                 // class java/util/ArrayList
       3: dup
       4: invokespecial #23                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field file:Ljava/nio/file/Path;
      12: invokestatic  #24                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
      15: astore_2
      16: aload_2
      17: ifnull        106
      20: aload_2
      21: invokeinterface #25,  1           // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          103
      36: aload_3
      37: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #28                 // class java/nio/file/Path
      45: astore        4
      47: aload_1
      48: new           #29                 // class io/undertow/server/handlers/resource/PathResource
      51: dup
      52: aload         4
      54: aload_0
      55: getfield      #4                  // Field manager:Lio/undertow/server/handlers/resource/PathResourceManager;
      58: aload_0
      59: getfield      #3                  // Field path:Ljava/lang/String;
      62: aload_0
      63: getfield      #2                  // Field file:Ljava/nio/file/Path;
      66: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
      71: invokevirtual #31                 // Method java/nio/file/FileSystem.getSeparator:()Ljava/lang/String;
      74: aload         4
      76: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      81: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      86: invokedynamic #32,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      91: invokespecial #33                 // Method "<init>":(Ljava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager;Ljava/lang/String;)V
      94: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      99: pop
     100: goto          27
     103: goto          118
     106: getstatic     #35                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     109: aload_0
     110: getfield      #2                  // Field file:Ljava/nio/file/Path;
     113: invokeinterface #36,  2           // InterfaceMethod io/undertow/UndertowLogger.failedToListPathsForFile:(Ljava/nio/file/Path;)V
     118: aload_2
     119: ifnull        155
     122: aload_2
     123: invokeinterface #37,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     128: goto          155
     131: astore_3
     132: aload_2
     133: ifnull        153
     136: aload_2
     137: invokeinterface #37,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     142: goto          153
     145: astore        4
     147: aload_3
     148: aload         4
     150: invokevirtual #39                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     153: aload_3
     154: athrow
     155: goto          168
     158: astore_2
     159: new           #15                 // class java/lang/RuntimeException
     162: dup
     163: aload_2
     164: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     167: athrow
     168: aload_1
     169: areturn
    Exception table:
       from    to  target type
          16   118   131   Class java/lang/Throwable
         136   142   145   Class java/lang/Throwable
           8   155   158   Class java/io/IOException

  public java.lang.String getContentType(io.undertow.util.MimeMappings);
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       9: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: bipush        46
      18: invokevirtual #40                 // Method java/lang/String.lastIndexOf:(I)I
      21: istore_3
      22: iload_3
      23: iconst_m1
      24: if_icmpeq     49
      27: iload_3
      28: aload_2
      29: invokevirtual #41                 // Method java/lang/String.length:()I
      32: iconst_1
      33: isub
      34: if_icmpeq     49
      37: aload_1
      38: aload_2
      39: iload_3
      40: iconst_1
      41: iadd
      42: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: invokevirtual #43                 // Method io/undertow/util/MimeMappings.getMimeType:(Ljava/lang/String;)Ljava/lang/String;
      48: areturn
      49: aconst_null
      50: areturn

  public void serve(io.undertow.io.Sender, io.undertow.server.HttpServerExchange, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc2_w        #44                 // long -1l
       6: ldc2_w        #44                 // long -1l
       9: aload_3
      10: iconst_0
      11: invokevirtual #46                 // Method serveImpl:(Lio/undertow/io/Sender;Lio/undertow/server/HttpServerExchange;JJLio/undertow/io/IoCallback;Z)V
      14: return

  public void serveRange(io.undertow.io.Sender, io.undertow.server.HttpServerExchange, long, long, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: lload         5
       6: aload         7
       8: iconst_1
       9: invokevirtual #46                 // Method serveImpl:(Lio/undertow/io/Sender;Lio/undertow/server/HttpServerExchange;JJLio/undertow/io/IoCallback;Z)V
      12: return

  private void serveImpl(io.undertow.io.Sender, io.undertow.server.HttpServerExchange, long, long, io.undertow.io.IoCallback, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field manager:Lio/undertow/server/handlers/resource/PathResourceManager;
       4: invokevirtual #47                 // Method io/undertow/server/handlers/resource/PathResourceManager.getTransferMinSize:()J
       7: aload_0
       8: getfield      #2                  // Field file:Ljava/nio/file/Path;
      11: invokestatic  #48                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
      14: lcmp
      15: ifgt          23
      18: iload         8
      20: ifeq          43
      23: new           #49                 // class io/undertow/server/handlers/resource/PathResource$1ServerTask
      26: dup
      27: aload_0
      28: aload_1
      29: aload         7
      31: aload_2
      32: lload_3
      33: iload         8
      35: lload         5
      37: invokespecial #50                 // Method io/undertow/server/handlers/resource/PathResource$1ServerTask."<init>":(Lio/undertow/server/handlers/resource/PathResource;Lio/undertow/io/Sender;Lio/undertow/io/IoCallback;Lio/undertow/server/HttpServerExchange;JZJ)V
      40: goto          58
      43: new           #51                 // class io/undertow/server/handlers/resource/PathResource$1TransferTask
      46: dup
      47: aload_0
      48: aload_1
      49: aload         7
      51: aload_2
      52: lload_3
      53: iload         8
      55: invokespecial #52                 // Method io/undertow/server/handlers/resource/PathResource$1TransferTask."<init>":(Lio/undertow/server/handlers/resource/PathResource;Lio/undertow/io/Sender;Lio/undertow/io/IoCallback;Lio/undertow/server/HttpServerExchange;JZ)V
      58: astore        9
      60: goto          75
      63: astore        10
      65: new           #15                 // class java/lang/RuntimeException
      68: dup
      69: aload         10
      71: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      74: athrow
      75: aload_2
      76: invokevirtual #53                 // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
      79: ifeq          92
      82: aload_2
      83: aload         9
      85: invokevirtual #54                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      88: pop
      89: goto          97
      92: aload         9
      94: invokevirtual #55                 // Method io/undertow/server/handlers/resource/PathResource$1BaseFileTask.run:()V
      97: return
    Exception table:
       from    to  target type
           0    60    63   Class java/io/IOException

  public java.lang.Long getContentLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: invokestatic  #7                  // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
       7: ifeq          26
      10: aload_0
      11: getfield      #2                  // Field file:Ljava/nio/file/Path;
      14: iconst_0
      15: anewarray     #8                  // class java/nio/file/LinkOption
      18: invokestatic  #9                  // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      21: ifeq          26
      24: aconst_null
      25: areturn
      26: aload_0
      27: getfield      #2                  // Field file:Ljava/nio/file/Path;
      30: invokestatic  #48                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
      33: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      36: areturn
      37: astore_1
      38: new           #15                 // class java/lang/RuntimeException
      41: dup
      42: aload_1
      43: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      46: athrow
    Exception table:
       from    to  target type
           0    25    37   Class java/io/IOException
          26    36    37   Class java/io/IOException

  public java.lang.String getCacheKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
       9: areturn

  public java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
       9: areturn

  public java.nio.file.Path getFilePath();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: areturn

  public java.io.File getResourceManagerRoot();
    Code:
       0: aload_0
       1: getfield      #4                  // Field manager:Lio/undertow/server/handlers/resource/PathResourceManager;
       4: invokevirtual #58                 // Method io/undertow/server/handlers/resource/PathResourceManager.getBasePath:()Ljava/nio/file/Path;
       7: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      12: areturn

  public java.nio.file.Path getResourceManagerRootPath();
    Code:
       0: aload_0
       1: getfield      #4                  // Field manager:Lio/undertow/server/handlers/resource/PathResourceManager;
       4: invokevirtual #58                 // Method io/undertow/server/handlers/resource/PathResourceManager.getBasePath:()Ljava/nio/file/Path;
       7: areturn

  public java.net.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: invokeinterface #59,  1           // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;
       9: invokevirtual #60                 // Method java/net/URI.toURL:()Ljava/net/URL;
      12: areturn
      13: astore_1
      14: new           #15                 // class java/lang/RuntimeException
      17: dup
      18: aload_1
      19: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/net/MalformedURLException

  public boolean isRangeSupported();
    Code:
       0: iconst_1
       1: ireturn
}
