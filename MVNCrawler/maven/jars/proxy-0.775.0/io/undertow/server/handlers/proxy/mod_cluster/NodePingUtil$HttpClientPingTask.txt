Compiled from "NodePingUtil.java"
class io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$HttpClientPingTask implements java.lang.Runnable {
  private final java.net.URI connection;

  private final org.xnio.XnioIoThread thread;

  private final io.undertow.client.UndertowClient client;

  private final org.xnio.ssl.XnioSsl xnioSsl;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final org.xnio.OptionMap options;

  private final io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener exchangeListener;

  io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$HttpClientPingTask(java.net.URI, io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener, org.xnio.XnioIoThread, io.undertow.client.UndertowClient, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connection:Ljava/net/URI;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field thread:Lorg/xnio/XnioIoThread;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field client:Lio/undertow/client/UndertowClient;
      20: aload_0
      21: aload         5
      23: putfield      #5                  // Field xnioSsl:Lorg/xnio/ssl/XnioSsl;
      26: aload_0
      27: aload         6
      29: putfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      32: aload_0
      33: aload         7
      35: putfield      #7                  // Field options:Lorg/xnio/OptionMap;
      38: aload_0
      39: aload_2
      40: putfield      #8                  // Field exchangeListener:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
      43: return

  public void run();
    Code:
       0: getstatic     #9                  // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_0
       4: getfield      #2                  // Field connection:Ljava/net/URI;
       7: invokeinterface #10,  2           // InterfaceMethod io/undertow/UndertowLogger.httpClientPingTask:(Ljava/net/URI;)V
      12: aload_0
      13: getfield      #4                  // Field client:Lio/undertow/client/UndertowClient;
      16: new           #11                 // class io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$HttpClientPingTask$1
      19: dup
      20: aload_0
      21: invokespecial #12                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$HttpClientPingTask$1."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$HttpClientPingTask;)V
      24: aload_0
      25: getfield      #2                  // Field connection:Ljava/net/URI;
      28: aload_0
      29: getfield      #3                  // Field thread:Lorg/xnio/XnioIoThread;
      32: aload_0
      33: getfield      #5                  // Field xnioSsl:Lorg/xnio/ssl/XnioSsl;
      36: aload_0
      37: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      40: aload_0
      41: getfield      #7                  // Field options:Lorg/xnio/OptionMap;
      44: invokevirtual #13                 // Method io/undertow/client/UndertowClient.connect:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/XnioIoThread;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      47: return
}
