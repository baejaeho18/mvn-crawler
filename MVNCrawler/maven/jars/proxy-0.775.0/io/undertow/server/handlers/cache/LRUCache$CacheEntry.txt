Compiled from "LRUCache.java"
public final class io.undertow.server.handlers.cache.LRUCache$CacheEntry<K, V> {
  private static final java.lang.Object CLAIM_TOKEN;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.handlers.cache.LRUCache$CacheEntry> hitsUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.server.handlers.cache.LRUCache$CacheEntry, java.lang.Object> tokenUpdator;

  private final K key;

  private volatile V value;

  private final long expires;

  private volatile int hits;

  private volatile java.lang.Object accessToken;

  private io.undertow.server.handlers.cache.LRUCache$CacheEntry(K, V, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field hits:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field key:Ljava/lang/Object;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field value:Ljava/lang/Object;
      19: aload_0
      20: lload_3
      21: putfield      #5                  // Field expires:J
      24: return

  public void setValue(V);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field value:Ljava/lang/Object;
       5: return

  public V getValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: areturn

  public int hit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hits:I
       4: istore_1
       5: getstatic     #6                  // Field hitsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iload_1
      10: iinc          1, 1
      13: iload_1
      14: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.weakCompareAndSet:(Ljava/lang/Object;II)Z
      17: ifeq          22
      20: iload_1
      21: ireturn
      22: goto          0

  public K key();
    Code:
       0: aload_0
       1: getfield      #3                  // Field key:Ljava/lang/Object;
       4: areturn

  java.lang.Object claimToken();
    Code:
       0: aload_0
       1: getfield      #8                  // Field accessToken:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: getstatic     #9                  // Field CLAIM_TOKEN:Ljava/lang/Object;
       9: if_acmpne     16
      12: getstatic     #10                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      15: areturn
      16: getstatic     #11                 // Field tokenUpdator:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      19: aload_0
      20: aload_1
      21: getstatic     #9                  // Field CLAIM_TOKEN:Ljava/lang/Object;
      24: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      27: ifeq          32
      30: aload_1
      31: areturn
      32: goto          0

  boolean setToken(java.lang.Object);
    Code:
       0: getstatic     #11                 // Field tokenUpdator:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: getstatic     #9                  // Field CLAIM_TOKEN:Ljava/lang/Object;
       7: aload_1
       8: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ireturn

  java.lang.Object clearToken();
    Code:
       0: getstatic     #11                 // Field tokenUpdator:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_1
       9: aload_1
      10: getstatic     #9                  // Field CLAIM_TOKEN:Ljava/lang/Object;
      13: if_acmpne     20
      16: aconst_null
      17: goto          21
      20: aload_1
      21: areturn

  public long getExpires();
    Code:
       0: aload_0
       1: getfield      #5                  // Field expires:J
       4: lreturn

  static {};
    Code:
       0: new           #14                 // class java/lang/Object
       3: dup
       4: invokespecial #1                  // Method java/lang/Object."<init>":()V
       7: putstatic     #9                  // Field CLAIM_TOKEN:Ljava/lang/Object;
      10: ldc           #15                 // class io/undertow/server/handlers/cache/LRUCache$CacheEntry
      12: ldc           #16                 // String hits
      14: invokestatic  #17                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: putstatic     #6                  // Field hitsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: ldc           #15                 // class io/undertow/server/handlers/cache/LRUCache$CacheEntry
      22: ldc           #14                 // class java/lang/Object
      24: ldc           #18                 // String accessToken
      26: invokestatic  #19                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      29: putstatic     #11                 // Field tokenUpdator:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      32: return
}
