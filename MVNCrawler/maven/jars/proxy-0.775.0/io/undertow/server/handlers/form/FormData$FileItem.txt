Compiled from "FormData.java"
public class io.undertow.server.handlers.form.FormData$FileItem {
  private final java.nio.file.Path file;

  private final byte[] content;

  public io.undertow.server.handlers.form.FormData$FileItem(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field file:Ljava/nio/file/Path;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field content:[B
      14: return

  public io.undertow.server.handlers.form.FormData$FileItem(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field file:Ljava/nio/file/Path;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field content:[B
      14: return

  public boolean isInMemory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.nio.file.Path getFile();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: areturn

  public long getFileSize() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method isInMemory:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field content:[B
      11: arraylength
      12: i2l
      13: lreturn
      14: aload_0
      15: getfield      #2                  // Field file:Ljava/nio/file/Path;
      18: invokestatic  #5                  // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
      21: lreturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: ifnull        26
       7: new           #6                  // class java/io/BufferedInputStream
      10: dup
      11: aload_0
      12: getfield      #2                  // Field file:Ljava/nio/file/Path;
      15: iconst_0
      16: anewarray     #7                  // class java/nio/file/OpenOption
      19: invokestatic  #8                  // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      22: invokespecial #9                  // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      25: areturn
      26: new           #10                 // class java/io/ByteArrayInputStream
      29: dup
      30: aload_0
      31: getfield      #3                  // Field content:[B
      34: invokespecial #11                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      37: areturn

  public void delete() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: ifnull        18
       7: aload_0
       8: getfield      #2                  // Field file:Ljava/nio/file/Path;
      11: invokestatic  #12                 // Method java/nio/file/Files.delete:(Ljava/nio/file/Path;)V
      14: goto          18
      17: astore_1
      18: return
    Exception table:
       from    to  target type
           7    14    17   Class java/nio/file/NoSuchFileException

  public void write(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Ljava/nio/file/Path;
       4: ifnull        28
       7: aload_0
       8: getfield      #2                  // Field file:Ljava/nio/file/Path;
      11: aload_1
      12: iconst_1
      13: anewarray     #14                 // class java/nio/file/CopyOption
      16: dup
      17: iconst_0
      18: getstatic     #15                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      21: aastore
      22: invokestatic  #16                 // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      25: pop
      26: return
      27: astore_2
      28: aload_0
      29: invokevirtual #18                 // Method getInputStream:()Ljava/io/InputStream;
      32: astore_2
      33: aload_2
      34: aload_1
      35: iconst_1
      36: anewarray     #14                 // class java/nio/file/CopyOption
      39: dup
      40: iconst_0
      41: getstatic     #15                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      44: aastore
      45: invokestatic  #19                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
      48: pop2
      49: aload_2
      50: ifnull        82
      53: aload_2
      54: invokevirtual #20                 // Method java/io/InputStream.close:()V
      57: goto          82
      60: astore_3
      61: aload_2
      62: ifnull        80
      65: aload_2
      66: invokevirtual #20                 // Method java/io/InputStream.close:()V
      69: goto          80
      72: astore        4
      74: aload_3
      75: aload         4
      77: invokevirtual #22                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      80: aload_3
      81: athrow
      82: return
    Exception table:
       from    to  target type
           7    26    27   Class java/io/IOException
          33    49    60   Class java/lang/Throwable
          65    69    72   Class java/lang/Throwable
}
