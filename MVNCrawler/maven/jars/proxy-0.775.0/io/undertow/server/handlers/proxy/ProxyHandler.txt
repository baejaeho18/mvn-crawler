Compiled from "ProxyHandler.java"
public final class io.undertow.server.handlers.proxy.ProxyHandler implements io.undertow.server.HttpHandler {
  private static final int DEFAULT_MAX_RETRY_ATTEMPTS;

  private static final org.jboss.logging.Logger log;

  public static final java.lang.String UTF_8;

  private static final io.undertow.util.AttachmentKey<io.undertow.server.handlers.proxy.ProxyConnection> CONNECTION;

  private static final io.undertow.util.AttachmentKey<io.undertow.server.HttpServerExchange> EXCHANGE;

  private static final io.undertow.util.AttachmentKey<org.xnio.XnioExecutor$Key> TIMEOUT_KEY;

  private final io.undertow.server.handlers.proxy.ProxyClient proxyClient;

  private final int maxRequestTime;

  private final java.util.Map<io.undertow.util.HttpString, io.undertow.attribute.ExchangeAttribute> requestHeaders;

  private final io.undertow.server.HttpHandler next;

  private volatile boolean rewriteHostHeader;

  private volatile boolean reuseXForwarded;

  private volatile int maxConnectionRetries;

  private final io.undertow.predicate.Predicate idempotentRequestPredicate;

  public io.undertow.server.handlers.proxy.ProxyHandler(io.undertow.server.handlers.proxy.ProxyClient, int, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iconst_0
       5: iconst_0
       6: invokespecial #1                  // Method "<init>":(Lio/undertow/server/handlers/proxy/ProxyClient;ILio/undertow/server/HttpHandler;ZZ)V
       9: return

  public io.undertow.server.handlers.proxy.ProxyHandler(io.undertow.server.handlers.proxy.ProxyClient, int, io.undertow.server.HttpHandler, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: getstatic     #2                  // Field DEFAULT_MAX_RETRY_ATTEMPTS:I
      11: invokespecial #3                  // Method "<init>":(Lio/undertow/server/handlers/proxy/ProxyClient;ILio/undertow/server/HttpHandler;ZZI)V
      14: return

  public io.undertow.server.handlers.proxy.ProxyHandler(io.undertow.server.handlers.proxy.ProxyClient, int, io.undertow.server.HttpHandler, boolean, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class io/undertow/util/CopyOnWriteMap
       8: dup
       9: invokespecial #6                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      12: putfield      #7                  // Field requestHeaders:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
      20: aload_0
      21: iload_2
      22: putfield      #9                  // Field maxRequestTime:I
      25: aload_0
      26: aload_3
      27: putfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
      30: aload_0
      31: iload         4
      33: putfield      #11                 // Field rewriteHostHeader:Z
      36: aload_0
      37: iload         5
      39: putfield      #12                 // Field reuseXForwarded:Z
      42: aload_0
      43: iload         6
      45: putfield      #13                 // Field maxConnectionRetries:I
      48: aload_0
      49: getstatic     #14                 // Field io/undertow/predicate/IdempotentPredicate.INSTANCE:Lio/undertow/predicate/IdempotentPredicate;
      52: putfield      #15                 // Field idempotentRequestPredicate:Lio/undertow/predicate/Predicate;
      55: return

  public io.undertow.server.handlers.proxy.ProxyHandler(io.undertow.server.handlers.proxy.ProxyClient, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: aload_2
       4: invokespecial #16                 // Method "<init>":(Lio/undertow/server/handlers/proxy/ProxyClient;ILio/undertow/server/HttpHandler;)V
       7: return

  io.undertow.server.handlers.proxy.ProxyHandler(io.undertow.server.handlers.proxy.ProxyHandler$Builder);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class io/undertow/util/CopyOnWriteMap
       8: dup
       9: invokespecial #6                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      12: putfield      #7                  // Field requestHeaders:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: getfield      #17                 // Field io/undertow/server/handlers/proxy/ProxyHandler$Builder.proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
      20: putfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
      23: aload_0
      24: aload_1
      25: getfield      #18                 // Field io/undertow/server/handlers/proxy/ProxyHandler$Builder.maxRequestTime:I
      28: putfield      #9                  // Field maxRequestTime:I
      31: aload_0
      32: aload_1
      33: getfield      #19                 // Field io/undertow/server/handlers/proxy/ProxyHandler$Builder.next:Lio/undertow/server/HttpHandler;
      36: putfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
      39: aload_0
      40: aload_1
      41: getfield      #20                 // Field io/undertow/server/handlers/proxy/ProxyHandler$Builder.rewriteHostHeader:Z
      44: putfield      #11                 // Field rewriteHostHeader:Z
      47: aload_0
      48: aload_1
      49: getfield      #21                 // Field io/undertow/server/handlers/proxy/ProxyHandler$Builder.reuseXForwarded:Z
      52: putfield      #12                 // Field reuseXForwarded:Z
      55: aload_0
      56: aload_1
      57: getfield      #22                 // Field io/undertow/server/handlers/proxy/ProxyHandler$Builder.maxConnectionRetries:I
      60: putfield      #13                 // Field maxConnectionRetries:I
      63: aload_0
      64: aload_1
      65: getfield      #23                 // Field io/undertow/server/handlers/proxy/ProxyHandler$Builder.idempotentRequestPredicate:Lio/undertow/predicate/Predicate;
      68: putfield      #15                 // Field idempotentRequestPredicate:Lio/undertow/predicate/Predicate;
      71: aload_1
      72: getfield      #24                 // Field io/undertow/server/handlers/proxy/ProxyHandler$Builder.requestHeaders:Ljava/util/Map;
      75: invokeinterface #25,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      80: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      85: astore_2
      86: aload_2
      87: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          136
      95: aload_2
      96: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #29                 // class java/util/Map$Entry
     104: astore_3
     105: aload_0
     106: getfield      #7                  // Field requestHeaders:Ljava/util/Map;
     109: aload_3
     110: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     115: checkcast     #31                 // class io/undertow/util/HttpString
     118: aload_3
     119: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     124: checkcast     #33                 // class io/undertow/attribute/ExchangeAttribute
     127: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: goto          86
     136: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyClient.findTarget:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;
      10: astore_2
      11: aload_2
      12: ifnonnull     38
      15: getstatic     #36                 // Field log:Lorg/jboss/logging/Logger;
      18: ldc           #37                 // String No proxy target for request to %s
      20: aload_1
      21: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.getRequestURL:()Ljava/lang/String;
      24: invokevirtual #39                 // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
      31: aload_1
      32: invokeinterface #40,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      37: return
      38: aload_1
      39: invokevirtual #41                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      42: ifeq          68
      45: getstatic     #42                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      48: aload_1
      49: invokeinterface #43,  2           // InterfaceMethod io/undertow/UndertowLogger.cannotProxyStartedRequest:(Lio/undertow/server/HttpServerExchange;)V
      54: aload_1
      55: sipush        500
      58: invokevirtual #45                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      61: pop
      62: aload_1
      63: invokevirtual #46                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
      66: pop
      67: return
      68: aload_0
      69: getfield      #9                  // Field maxRequestTime:I
      72: ifle          87
      75: invokestatic  #47                 // Method java/lang/System.currentTimeMillis:()J
      78: aload_0
      79: getfield      #9                  // Field maxRequestTime:I
      82: i2l
      83: ladd
      84: goto          88
      87: lconst_0
      88: lstore_3
      89: aload_0
      90: getfield      #13                 // Field maxConnectionRetries:I
      93: istore        5
      95: aload_2
      96: instanceof    #48                 // class io/undertow/server/handlers/proxy/ProxyClient$MaxRetriesProxyTarget
      99: ifeq          118
     102: iload         5
     104: aload_2
     105: checkcast     #48                 // class io/undertow/server/handlers/proxy/ProxyClient$MaxRetriesProxyTarget
     108: invokeinterface #49,  1           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyClient$MaxRetriesProxyTarget.getMaxRetries:()I
     113: invokestatic  #50                 // Method java/lang/Math.max:(II)I
     116: istore        5
     118: new           #51                 // class io/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler
     121: dup
     122: aload_0
     123: aload_1
     124: aload_2
     125: lload_3
     126: iload         5
     128: aload_0
     129: getfield      #15                 // Field idempotentRequestPredicate:Lio/undertow/predicate/Predicate;
     132: invokespecial #52                 // Method io/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler."<init>":(Lio/undertow/server/handlers/proxy/ProxyHandler;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;JILio/undertow/predicate/Predicate;)V
     135: astore        6
     137: lload_3
     138: lconst_0
     139: lcmp
     140: ifle          196
     143: aload_1
     144: invokevirtual #53                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
     147: new           #54                 // class io/undertow/server/handlers/proxy/ProxyHandler$1
     150: dup
     151: aload_0
     152: aload         6
     154: aload_1
     155: invokespecial #55                 // Method io/undertow/server/handlers/proxy/ProxyHandler$1."<init>":(Lio/undertow/server/handlers/proxy/ProxyHandler;Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler;Lio/undertow/server/HttpServerExchange;)V
     158: aload_0
     159: getfield      #9                  // Field maxRequestTime:I
     162: i2l
     163: getstatic     #56                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     166: invokestatic  #57                 // Method io/undertow/util/WorkerUtils.executeAfter:(Lorg/xnio/XnioIoThread;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     169: astore        7
     171: aload_1
     172: getstatic     #58                 // Field TIMEOUT_KEY:Lio/undertow/util/AttachmentKey;
     175: aload         7
     177: invokevirtual #59                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
     180: pop
     181: aload_1
     182: new           #60                 // class io/undertow/server/handlers/proxy/ProxyHandler$2
     185: dup
     186: aload_0
     187: aload         7
     189: invokespecial #61                 // Method io/undertow/server/handlers/proxy/ProxyHandler$2."<init>":(Lio/undertow/server/handlers/proxy/ProxyHandler;Lorg/xnio/XnioExecutor$Key;)V
     192: invokevirtual #62                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
     195: pop
     196: aload_1
     197: aload_1
     198: invokevirtual #63                 // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
     201: ifeq          210
     204: getstatic     #64                 // Field io/undertow/util/SameThreadExecutor.INSTANCE:Ljava/util/concurrent/Executor;
     207: goto          214
     210: aload_1
     211: invokevirtual #53                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
     214: aload         6
     216: invokevirtual #65                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
     219: pop
     220: return

  public io.undertow.server.handlers.proxy.ProxyHandler addRequestHeader(io.undertow.util.HttpString, io.undertow.attribute.ExchangeAttribute);
    Code:
       0: aload_0
       1: getfield      #7                  // Field requestHeaders:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public io.undertow.server.handlers.proxy.ProxyHandler addRequestHeader(io.undertow.util.HttpString, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field requestHeaders:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokestatic  #66                 // Method io/undertow/attribute/ExchangeAttributes.constant:(Ljava/lang/String;)Lio/undertow/attribute/ExchangeAttribute;
       9: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: areturn

  public io.undertow.server.handlers.proxy.ProxyHandler addRequestHeader(io.undertow.util.HttpString, java.lang.String, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: getfield      #7                  // Field requestHeaders:Ljava/util/Map;
       4: aload_1
       5: aload_3
       6: invokestatic  #67                 // Method io/undertow/attribute/ExchangeAttributes.parser:(Ljava/lang/ClassLoader;)Lio/undertow/attribute/ExchangeAttributeParser;
       9: aload_2
      10: invokevirtual #68                 // Method io/undertow/attribute/ExchangeAttributeParser.parse:(Ljava/lang/String;)Lio/undertow/attribute/ExchangeAttribute;
      13: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: areturn

  public io.undertow.server.handlers.proxy.ProxyHandler removeRequestHeader(io.undertow.util.HttpString);
    Code:
       0: aload_0
       1: getfield      #7                  // Field requestHeaders:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #69,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: areturn

  static void copyHeaders(io.undertow.server.HttpServerExchange, io.undertow.util.HeaderMap, io.undertow.util.HeaderMap);
    Code:
       0: aload_2
       1: invokevirtual #70                 // Method io/undertow/util/HeaderMap.fastIterateNonEmpty:()J
       4: lstore_3
       5: lload_3
       6: ldc2_w        #71                 // long -1l
       9: lcmp
      10: ifeq          111
      13: aload_2
      14: lload_3
      15: invokevirtual #73                 // Method io/undertow/util/HeaderMap.fiCurrent:(J)Lio/undertow/util/HeaderValues;
      18: astore        5
      20: aload_1
      21: aload         5
      23: invokevirtual #74                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      26: invokevirtual #75                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      29: ifne          102
      32: aload         5
      34: invokevirtual #74                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      37: invokevirtual #76                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      40: ldc           #77                 // String HTTP2-Settings
      42: invokevirtual #78                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifeq          90
      48: aload_0
      49: invokevirtual #79                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      52: invokevirtual #80                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      55: astore        6
      57: aload_0
      58: invokevirtual #79                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      61: invokevirtual #81                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      64: astore        7
      66: aload_1
      67: new           #31                 // class io/undertow/util/HttpString
      70: dup
      71: ldc           #77                 // String HTTP2-Settings
      73: invokespecial #82                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      76: aload         6
      78: aload         7
      80: invokestatic  #83                 // Method io/undertow/client/http2/Http2ClearClientProvider.createSettingsFrame:(Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;)Ljava/lang/String;
      83: invokevirtual #84                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      86: pop
      87: goto          102
      90: aload_1
      91: aload         5
      93: invokevirtual #74                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      96: aload         5
      98: invokevirtual #85                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
     101: pop
     102: aload_2
     103: lload_3
     104: invokevirtual #86                 // Method io/undertow/util/HeaderMap.fiNextNonEmpty:(J)J
     107: lstore_3
     108: goto          5
     111: return

  public io.undertow.server.handlers.proxy.ProxyClient getProxyClient();
    Code:
       0: aload_0
       1: getfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
       4: invokeinterface #87,  1           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyClient.getAllTargets:()Ljava/util/List;
       9: astore_1
      10: aload_1
      11: invokeinterface #88,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          35
      19: aload_0
      20: getfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
      23: invokevirtual #89                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: invokevirtual #90                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      29: invokedynamic #91,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      34: areturn
      35: aload_1
      36: invokeinterface #92,  1           // InterfaceMethod java/util/List.size:()I
      41: iconst_1
      42: if_icmpne     71
      45: aload_0
      46: getfield      #11                 // Field rewriteHostHeader:Z
      49: ifne          71
      52: aload_1
      53: iconst_0
      54: invokeinterface #93,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      59: checkcast     #94                 // class io/undertow/server/handlers/proxy/ProxyClient$ProxyTarget
      62: invokevirtual #95                 // Method java/lang/Object.toString:()Ljava/lang/String;
      65: invokedynamic #96,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      70: areturn
      71: aload_1
      72: invokeinterface #97,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      77: invokedynamic #98,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      82: invokeinterface #99,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      87: ldc           #100                // String \', \'
      89: invokestatic  #101                // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      92: invokeinterface #102,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      97: checkcast     #103                // class java/lang/String
     100: invokedynamic #104,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     105: astore_2
     106: aload_0
     107: getfield      #11                 // Field rewriteHostHeader:Z
     110: ifeq          120
     113: aload_2
     114: invokedynamic #105,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     119: astore_2
     120: aload_2
     121: invokedynamic #106,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     126: areturn

  static void handleFailure(io.undertow.server.HttpServerExchange, io.undertow.server.handlers.proxy.ProxyHandler$ProxyClientHandler, io.undertow.predicate.Predicate, java.io.IOException);
    Code:
       0: getstatic     #107                // Field io/undertow/UndertowLogger.PROXY_REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_0
       4: invokevirtual #108                // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
       7: aload_3
       8: invokeinterface #109,  3          // InterfaceMethod io/undertow/UndertowLogger.proxyRequestFailed:(Ljava/lang/String;Ljava/lang/Exception;)V
      13: aload_0
      14: invokevirtual #41                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      17: ifeq          30
      20: aload_0
      21: invokevirtual #79                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      24: invokestatic  #110                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      27: goto          65
      30: aload_2
      31: aload_0
      32: invokeinterface #111,  2          // InterfaceMethod io/undertow/predicate/Predicate.resolve:(Lio/undertow/server/HttpServerExchange;)Z
      37: ifeq          52
      40: aload_1
      41: ifnull        52
      44: aload_1
      45: aload_0
      46: invokevirtual #112                // Method io/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler.failed:(Lio/undertow/server/HttpServerExchange;)V
      49: goto          65
      52: aload_0
      53: sipush        503
      56: invokevirtual #45                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      59: pop
      60: aload_0
      61: invokevirtual #46                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
      64: pop
      65: return

  public io.undertow.server.handlers.proxy.ProxyHandler setMaxConnectionRetries(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field maxConnectionRetries:I
       5: aload_0
       6: areturn

  public boolean isRewriteHostHeader();
    Code:
       0: aload_0
       1: getfield      #11                 // Field rewriteHostHeader:Z
       4: ireturn

  public io.undertow.server.handlers.proxy.ProxyHandler setRewriteHostHeader(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field rewriteHostHeader:Z
       5: aload_0
       6: areturn

  public boolean isReuseXForwarded();
    Code:
       0: aload_0
       1: getfield      #12                 // Field reuseXForwarded:Z
       4: ireturn

  public io.undertow.server.handlers.proxy.ProxyHandler setReuseXForwarded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field reuseXForwarded:Z
       5: aload_0
       6: areturn

  public int getMaxConnectionRetries();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxConnectionRetries:I
       4: ireturn

  public io.undertow.predicate.Predicate getIdempotentRequestPredicate();
    Code:
       0: aload_0
       1: getfield      #15                 // Field idempotentRequestPredicate:Lio/undertow/predicate/Predicate;
       4: areturn

  public static io.undertow.server.handlers.proxy.ProxyHandler$Builder builder();
    Code:
       0: new           #113                // class io/undertow/server/handlers/proxy/ProxyHandler$Builder
       3: dup
       4: invokespecial #114                // Method io/undertow/server/handlers/proxy/ProxyHandler$Builder."<init>":()V
       7: areturn

  private static java.lang.String lambda$toString$0(io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget);
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: ldc           #115                // String io.undertow.server.handlers.proxy.maxRetries
       2: iconst_1
       3: invokestatic  #116                // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       6: invokevirtual #117                // Method java/lang/Integer.intValue:()I
       9: putstatic     #2                  // Field DEFAULT_MAX_RETRY_ATTEMPTS:I
      12: ldc           #118                // class io/undertow/server/handlers/proxy/ProxyHandler
      14: invokevirtual #119                // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      17: invokevirtual #120                // Method java/lang/Package.getName:()Ljava/lang/String;
      20: invokestatic  #121                // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/String;)Lorg/jboss/logging/Logger;
      23: putstatic     #36                 // Field log:Lorg/jboss/logging/Logger;
      26: getstatic     #122                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      29: invokevirtual #123                // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      32: putstatic     #124                // Field UTF_8:Ljava/lang/String;
      35: ldc           #125                // class io/undertow/server/handlers/proxy/ProxyConnection
      37: invokestatic  #126                // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      40: putstatic     #127                // Field CONNECTION:Lio/undertow/util/AttachmentKey;
      43: ldc           #128                // class io/undertow/server/HttpServerExchange
      45: invokestatic  #126                // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      48: putstatic     #129                // Field EXCHANGE:Lio/undertow/util/AttachmentKey;
      51: ldc           #130                // class org/xnio/XnioExecutor$Key
      53: invokestatic  #126                // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      56: putstatic     #58                 // Field TIMEOUT_KEY:Lio/undertow/util/AttachmentKey;
      59: return
}
