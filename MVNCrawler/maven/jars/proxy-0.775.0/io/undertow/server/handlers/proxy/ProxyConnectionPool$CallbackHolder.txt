Compiled from "ProxyConnectionPool.java"
final class io.undertow.server.handlers.proxy.ProxyConnectionPool$CallbackHolder implements java.lang.Runnable {
  final io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget proxyTarget;

  final io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection> callback;

  final io.undertow.server.HttpServerExchange exchange;

  final long expireTime;

  org.xnio.XnioExecutor$Key timeoutKey;

  boolean cancelled;

  private io.undertow.server.handlers.proxy.ProxyConnectionPool$CallbackHolder(io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget, io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection>, io.undertow.server.HttpServerExchange, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field cancelled:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field proxyTarget:Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field callback:Lio/undertow/server/handlers/proxy/ProxyCallback;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      24: aload_0
      25: lload         4
      27: putfield      #6                  // Field expireTime:J
      30: return

  private io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection> getCallback();
    Code:
       0: aload_0
       1: getfield      #4                  // Field callback:Lio/undertow/server/handlers/proxy/ProxyCallback;
       4: areturn

  private io.undertow.server.HttpServerExchange getExchange();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: areturn

  private long getExpireTime();
    Code:
       0: aload_0
       1: getfield      #6                  // Field expireTime:J
       4: lreturn

  private org.xnio.XnioExecutor$Key getTimeoutKey();
    Code:
       0: aload_0
       1: getfield      #7                  // Field timeoutKey:Lorg/xnio/XnioExecutor$Key;
       4: areturn

  private boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cancelled:Z
       4: ifne          17
       7: aload_0
       8: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      11: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private void setTimeoutKey(org.xnio.XnioExecutor$Key);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field timeoutKey:Lorg/xnio/XnioExecutor$Key;
       5: return

  public void run();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field cancelled:Z
       5: aload_0
       6: getfield      #4                  // Field callback:Lio/undertow/server/handlers/proxy/ProxyCallback;
       9: aload_0
      10: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      13: invokeinterface #9,  2            // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.failed:(Lio/undertow/server/HttpServerExchange;)V
      18: return

  public io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget getProxyTarget();
    Code:
       0: aload_0
       1: getfield      #3                  // Field proxyTarget:Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;
       4: areturn
}
