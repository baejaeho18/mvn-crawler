Compiled from "IPAddressAccessControlHandler.java"
class io.undertow.server.handlers.IPAddressAccessControlHandler$Wrapper implements io.undertow.server.HandlerWrapper {
  private final java.util.List<io.undertow.server.handlers.IPAddressAccessControlHandler$Holder> peerMatches;

  private final boolean defaultAllow;

  private final int failureStatus;

  private io.undertow.server.handlers.IPAddressAccessControlHandler$Wrapper(java.util.List<io.undertow.server.handlers.IPAddressAccessControlHandler$Holder>, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field peerMatches:Ljava/util/List;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field defaultAllow:Z
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field failureStatus:I
      19: return

  public io.undertow.server.HttpHandler wrap(io.undertow.server.HttpHandler);
    Code:
       0: new           #5                  // class io/undertow/server/handlers/IPAddressAccessControlHandler
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field failureStatus:I
       9: invokespecial #6                  // Method io/undertow/server/handlers/IPAddressAccessControlHandler."<init>":(Lio/undertow/server/HttpHandler;I)V
      12: astore_2
      13: aload_0
      14: getfield      #2                  // Field peerMatches:Ljava/util/List;
      17: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          77
      32: aload_3
      33: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #10                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$Holder
      41: astore        4
      43: aload         4
      45: getfield      #11                 // Field io/undertow/server/handlers/IPAddressAccessControlHandler$Holder.deny:Z
      48: ifeq          64
      51: aload_2
      52: aload         4
      54: getfield      #12                 // Field io/undertow/server/handlers/IPAddressAccessControlHandler$Holder.rule:Ljava/lang/String;
      57: invokevirtual #13                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler.addDeny:(Ljava/lang/String;)Lio/undertow/server/handlers/IPAddressAccessControlHandler;
      60: pop
      61: goto          74
      64: aload_2
      65: aload         4
      67: getfield      #12                 // Field io/undertow/server/handlers/IPAddressAccessControlHandler$Holder.rule:Ljava/lang/String;
      70: invokevirtual #14                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler.addAllow:(Ljava/lang/String;)Lio/undertow/server/handlers/IPAddressAccessControlHandler;
      73: pop
      74: goto          23
      77: aload_2
      78: aload_0
      79: getfield      #3                  // Field defaultAllow:Z
      82: invokevirtual #15                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler.setDefaultAllow:(Z)Lio/undertow/server/handlers/IPAddressAccessControlHandler;
      85: pop
      86: aload_2
      87: areturn
}
