Compiled from "ProxyHandler.java"
class io.undertow.server.handlers.proxy.ProxyHandler$ProxyAction$1$3 implements org.xnio.ChannelListener<org.xnio.channels.StreamSinkChannel> {
  final io.undertow.client.ClientExchange val$result;

  final io.undertow.server.handlers.proxy.ProxyHandler$IoExceptionHandler val$handler;

  final io.undertow.server.handlers.proxy.ProxyHandler$ProxyAction$1 this$1;

  io.undertow.server.handlers.proxy.ProxyHandler$ProxyAction$1$3(io.undertow.server.handlers.proxy.ProxyHandler$ProxyAction$1, io.undertow.client.ClientExchange, io.undertow.server.handlers.proxy.ProxyHandler$IoExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$handler:Lio/undertow/server/handlers/proxy/ProxyHandler$IoExceptionHandler;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void handleEvent(org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$1:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1;
       4: getfield      #5                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1.this$0:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction;
       7: getfield      #6                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction.exchange:Lio/undertow/server/HttpServerExchange;
      10: invokevirtual #7                  // Method io/undertow/server/HttpServerExchange.getRequestChannel:()Lorg/xnio/channels/StreamSourceChannel;
      13: aload_0
      14: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      17: invokeinterface #8,  1            // InterfaceMethod io/undertow/client/ClientExchange.getRequestChannel:()Lorg/xnio/channels/StreamSinkChannel;
      22: invokestatic  #9                  // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
      25: new           #10                 // class io/undertow/server/handlers/proxy/ProxyHandler$HTTPTrailerChannelListener
      28: dup
      29: aload_0
      30: getfield      #1                  // Field this$1:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1;
      33: getfield      #5                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1.this$0:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction;
      36: getfield      #6                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction.exchange:Lio/undertow/server/HttpServerExchange;
      39: aload_0
      40: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      43: aload_0
      44: getfield      #1                  // Field this$1:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1;
      47: getfield      #5                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1.this$0:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction;
      50: getfield      #6                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction.exchange:Lio/undertow/server/HttpServerExchange;
      53: aload_0
      54: getfield      #1                  // Field this$1:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1;
      57: getfield      #5                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1.this$0:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction;
      60: getfield      #11                 // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction.proxyClientHandler:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler;
      63: aload_0
      64: getfield      #1                  // Field this$1:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1;
      67: getfield      #5                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1.this$0:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction;
      70: getfield      #12                 // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction.idempotentPredicate:Lio/undertow/predicate/Predicate;
      73: invokespecial #13                 // Method io/undertow/server/handlers/proxy/ProxyHandler$HTTPTrailerChannelListener."<init>":(Lio/undertow/util/Attachable;Lio/undertow/util/Attachable;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler;Lio/undertow/predicate/Predicate;)V
      76: aload_0
      77: getfield      #3                  // Field val$handler:Lio/undertow/server/handlers/proxy/ProxyHandler$IoExceptionHandler;
      80: aload_0
      81: getfield      #3                  // Field val$handler:Lio/undertow/server/handlers/proxy/ProxyHandler$IoExceptionHandler;
      84: aload_0
      85: getfield      #1                  // Field this$1:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1;
      88: getfield      #5                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction$1.this$0:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyAction;
      91: getfield      #6                  // Field io/undertow/server/handlers/proxy/ProxyHandler$ProxyAction.exchange:Lio/undertow/server/HttpServerExchange;
      94: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      97: invokevirtual #15                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     100: invokestatic  #16                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
     103: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class org/xnio/channels/StreamSinkChannel
       5: invokevirtual #18                 // Method handleEvent:(Lorg/xnio/channels/StreamSinkChannel;)V
       8: return
}
