Compiled from "RequestEncodingHandler.java"
public class io.undertow.server.handlers.encoding.RequestEncodingHandler implements io.undertow.server.HttpHandler {
  private final io.undertow.server.HttpHandler next;

  private final java.util.Map<java.lang.String, io.undertow.server.ConduitWrapper<org.xnio.conduits.StreamSourceConduit>> requestEncodings;

  public io.undertow.server.handlers.encoding.RequestEncodingHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/util/CopyOnWriteMap
       8: dup
       9: invokespecial #3                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      12: putfield      #4                  // Field requestEncodings:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field next:Lio/undertow/server/HttpHandler;
      20: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestEncodings:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       8: getstatic     #7                  // Field io/undertow/util/Headers.CONTENT_ENCODING:Lio/undertow/util/HttpString;
      11: invokevirtual #8                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      14: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #10                 // class io/undertow/server/ConduitWrapper
      22: astore_2
      23: aload_2
      24: ifnull        51
      27: aload_1
      28: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.isRequestChannelAvailable:()Z
      31: ifeq          51
      34: aload_1
      35: aload_2
      36: invokevirtual #12                 // Method io/undertow/server/HttpServerExchange.addRequestWrapper:(Lio/undertow/server/ConduitWrapper;)Lio/undertow/server/HttpServerExchange;
      39: pop
      40: aload_1
      41: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      44: getstatic     #7                  // Field io/undertow/util/Headers.CONTENT_ENCODING:Lio/undertow/util/HttpString;
      47: invokevirtual #13                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
      50: pop
      51: aload_0
      52: getfield      #5                  // Field next:Lio/undertow/server/HttpHandler;
      55: aload_1
      56: invokeinterface #14,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      61: return

  public io.undertow.server.handlers.encoding.RequestEncodingHandler addEncoding(java.lang.String, io.undertow.server.ConduitWrapper<org.xnio.conduits.StreamSourceConduit>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestEncodings:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public io.undertow.server.handlers.encoding.RequestEncodingHandler removeEncoding(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestEncodings:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: areturn

  public io.undertow.server.HttpHandler getNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field next:Lio/undertow/server/HttpHandler;
       4: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #17                 // String uncompress()
       2: areturn
}
