Compiled from "ConnectHandler.java"
class io.undertow.server.handlers.ConnectHandler$1$2$1 implements io.undertow.server.HttpUpgradeListener {
  final org.xnio.StreamConnection val$clientChannel;

  final io.undertow.server.handlers.ConnectHandler$1$2 this$2;

  io.undertow.server.handlers.ConnectHandler$1$2$1(io.undertow.server.handlers.ConnectHandler$1$2, org.xnio.StreamConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$2:Lio/undertow/server/handlers/ConnectHandler$1$2;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$clientChannel:Lorg/xnio/StreamConnection;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void handleUpgrade(org.xnio.StreamConnection, io.undertow.server.HttpServerExchange);
    Code:
       0: new           #4                  // class io/undertow/server/handlers/ConnectHandler$ClosingExceptionHandler
       3: dup
       4: iconst_2
       5: anewarray     #5                  // class java/io/Closeable
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #2                  // Field val$clientChannel:Lorg/xnio/StreamConnection;
      18: aastore
      19: invokespecial #6                  // Method io/undertow/server/handlers/ConnectHandler$ClosingExceptionHandler."<init>":([Ljava/io/Closeable;)V
      22: astore_3
      23: aload_0
      24: getfield      #2                  // Field val$clientChannel:Lorg/xnio/StreamConnection;
      27: invokevirtual #7                  // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      30: aload_1
      31: invokevirtual #8                  // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      34: invokestatic  #9                  // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
      37: invokestatic  #9                  // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
      40: invokestatic  #10                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
      43: invokestatic  #11                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      46: invokestatic  #10                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
      49: invokestatic  #12                 // Method org/xnio/ChannelListeners.writeShutdownChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      52: aload_3
      53: aload_3
      54: aload_2
      55: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      58: invokevirtual #14                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      61: invokestatic  #15                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
      64: aload_1
      65: invokevirtual #7                  // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      68: aload_0
      69: getfield      #2                  // Field val$clientChannel:Lorg/xnio/StreamConnection;
      72: invokevirtual #8                  // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      75: invokestatic  #9                  // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
      78: invokestatic  #9                  // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
      81: invokestatic  #10                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
      84: invokestatic  #11                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      87: invokestatic  #10                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
      90: invokestatic  #12                 // Method org/xnio/ChannelListeners.writeShutdownChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      93: aload_3
      94: aload_3
      95: aload_2
      96: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      99: invokevirtual #14                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     102: invokestatic  #15                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
     105: return
}
