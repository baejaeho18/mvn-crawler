Compiled from "ProxyHandler.java"
class io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback$1 implements io.undertow.server.HttpUpgradeListener {
  final io.undertow.client.ClientExchange val$result;

  final io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback this$0;

  io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback$1(io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback, io.undertow.client.ClientExchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/ProxyHandler$ResponseCallback;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void handleUpgrade(org.xnio.StreamConnection, io.undertow.server.HttpServerExchange);
    Code:
       0: getstatic     #4                  // Field io/undertow/server/handlers/proxy/ProxyHandler.log:Lorg/jboss/logging/Logger;
       3: invokevirtual #5                  // Method org/jboss/logging/Logger.isDebugEnabled:()Z
       6: ifeq          27
       9: getstatic     #4                  // Field io/undertow/server/handlers/proxy/ProxyHandler.log:Lorg/jboss/logging/Logger;
      12: ldc           #6                  // String Upgraded request %s to for exchange %s
      14: aload_0
      15: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      18: invokeinterface #7,  1            // InterfaceMethod io/undertow/client/ClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      23: aload_2
      24: invokevirtual #8                  // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: aconst_null
      28: astore_3
      29: aload_0
      30: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      33: invokeinterface #9,  1            // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
      38: invokeinterface #10,  1           // InterfaceMethod io/undertow/client/ClientConnection.performUpgrade:()Lorg/xnio/StreamConnection;
      43: astore_3
      44: new           #11                 // class io/undertow/server/handlers/proxy/ProxyHandler$ClosingExceptionHandler
      47: dup
      48: iconst_2
      49: anewarray     #12                 // class java/io/Closeable
      52: dup
      53: iconst_0
      54: aload_1
      55: aastore
      56: dup
      57: iconst_1
      58: aload_3
      59: aastore
      60: invokespecial #13                 // Method io/undertow/server/handlers/proxy/ProxyHandler$ClosingExceptionHandler."<init>":([Ljava/io/Closeable;)V
      63: astore        4
      65: aload_3
      66: invokevirtual #14                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      69: aload_1
      70: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      73: invokestatic  #16                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
      76: invokestatic  #16                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
      79: invokestatic  #17                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
      82: invokestatic  #18                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      85: invokestatic  #17                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
      88: invokestatic  #19                 // Method org/xnio/ChannelListeners.writeShutdownChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      91: aload         4
      93: aload         4
      95: aload_0
      96: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      99: invokeinterface #9,  1            // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
     104: invokeinterface #20,  1           // InterfaceMethod io/undertow/client/ClientConnection.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
     109: invokestatic  #21                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
     112: aload_1
     113: invokevirtual #14                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     116: aload_3
     117: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     120: invokestatic  #16                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
     123: invokestatic  #16                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
     126: invokestatic  #17                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
     129: invokestatic  #18                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     132: invokestatic  #17                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
     135: invokestatic  #19                 // Method org/xnio/ChannelListeners.writeShutdownChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     138: aload         4
     140: aload         4
     142: aload_0
     143: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
     146: invokeinterface #9,  1            // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
     151: invokeinterface #20,  1           // InterfaceMethod io/undertow/client/ClientConnection.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
     156: invokestatic  #21                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
     159: goto          179
     162: astore        4
     164: iconst_2
     165: anewarray     #12                 // class java/io/Closeable
     168: dup
     169: iconst_0
     170: aload_1
     171: aastore
     172: dup
     173: iconst_1
     174: aload_3
     175: aastore
     176: invokestatic  #23                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
     179: return
    Exception table:
       from    to  target type
          29   159   162   Class java/io/IOException
}
