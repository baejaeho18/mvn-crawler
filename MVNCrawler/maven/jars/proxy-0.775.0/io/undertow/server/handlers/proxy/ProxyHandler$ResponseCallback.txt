Compiled from "ProxyHandler.java"
final class io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback implements io.undertow.client.ClientCallback<io.undertow.client.ClientExchange> {
  private final io.undertow.server.HttpServerExchange exchange;

  private final io.undertow.server.handlers.proxy.ProxyHandler$ProxyClientHandler proxyClientHandler;

  private final io.undertow.predicate.Predicate idempotentPredicate;

  private io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback(io.undertow.server.HttpServerExchange, io.undertow.server.handlers.proxy.ProxyHandler$ProxyClientHandler, io.undertow.predicate.Predicate);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field proxyClientHandler:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field idempotentPredicate:Lio/undertow/predicate/Predicate;
      19: return

  public void completed(io.undertow.client.ClientExchange);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod io/undertow/client/ClientExchange.getResponse:()Lio/undertow/client/ClientResponse;
       6: astore_2
       7: getstatic     #6                  // Field io/undertow/server/handlers/proxy/ProxyHandler.log:Lorg/jboss/logging/Logger;
      10: invokevirtual #7                  // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      13: ifeq          35
      16: getstatic     #6                  // Field io/undertow/server/handlers/proxy/ProxyHandler.log:Lorg/jboss/logging/Logger;
      19: ldc           #8                  // String Received response %s for request %s for exchange %s
      21: aload_2
      22: aload_1
      23: invokeinterface #9,  1            // InterfaceMethod io/undertow/client/ClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      28: aload_0
      29: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      32: invokevirtual #10                 // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      35: aload_2
      36: invokevirtual #11                 // Method io/undertow/client/ClientResponse.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      39: astore_3
      40: aload_0
      41: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      44: invokevirtual #12                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      47: astore        4
      49: aload_0
      50: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      53: aload_2
      54: invokevirtual #13                 // Method io/undertow/client/ClientResponse.getResponseCode:()I
      57: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      60: pop
      61: aload_0
      62: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      65: aload         4
      67: aload_3
      68: invokestatic  #15                 // Method io/undertow/server/handlers/proxy/ProxyHandler.copyHeaders:(Lio/undertow/server/HttpServerExchange;Lio/undertow/util/HeaderMap;Lio/undertow/util/HeaderMap;)V
      71: invokestatic  #16                 // Method io/undertow/util/Cookies.isCrumbsAssemplyDisabled:()Z
      74: ifne          98
      77: aload_0
      78: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      81: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
      84: getstatic     #18                 // Field io/undertow/util/Protocols.HTTP_2_0:Lio/undertow/util/HttpString;
      87: invokevirtual #19                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      90: ifne          98
      93: aload         4
      95: invokestatic  #20                 // Method io/undertow/util/Cookies.assembleCrumbs:(Lio/undertow/util/HeaderMap;)V
      98: aload_0
      99: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     102: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.isUpgrade:()Z
     105: ifeq          125
     108: aload_0
     109: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     112: new           #22                 // class io/undertow/server/handlers/proxy/ProxyHandler$ResponseCallback$1
     115: dup
     116: aload_0
     117: aload_1
     118: invokespecial #23                 // Method io/undertow/server/handlers/proxy/ProxyHandler$ResponseCallback$1."<init>":(Lio/undertow/server/handlers/proxy/ProxyHandler$ResponseCallback;Lio/undertow/client/ClientExchange;)V
     121: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.upgradeChannel:(Lio/undertow/server/HttpUpgradeListener;)Lio/undertow/server/HttpServerExchange;
     124: pop
     125: new           #25                 // class io/undertow/server/handlers/proxy/ProxyHandler$IoExceptionHandler
     128: dup
     129: aload_0
     130: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     133: aload_1
     134: invokeinterface #26,  1           // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
     139: invokespecial #27                 // Method io/undertow/server/handlers/proxy/ProxyHandler$IoExceptionHandler."<init>":(Lio/undertow/server/HttpServerExchange;Lio/undertow/client/ClientConnection;)V
     142: astore        5
     144: aload_1
     145: invokeinterface #28,  1           // InterfaceMethod io/undertow/client/ClientExchange.getResponseChannel:()Lorg/xnio/channels/StreamSourceChannel;
     150: aload_0
     151: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     154: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     157: invokestatic  #30                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
     160: new           #31                 // class io/undertow/server/handlers/proxy/ProxyHandler$HTTPTrailerChannelListener
     163: dup
     164: aload_1
     165: aload_0
     166: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     169: aload_0
     170: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     173: aload_0
     174: getfield      #3                  // Field proxyClientHandler:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler;
     177: aload_0
     178: getfield      #4                  // Field idempotentPredicate:Lio/undertow/predicate/Predicate;
     181: invokespecial #32                 // Method io/undertow/server/handlers/proxy/ProxyHandler$HTTPTrailerChannelListener."<init>":(Lio/undertow/util/Attachable;Lio/undertow/util/Attachable;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler;Lio/undertow/predicate/Predicate;)V
     184: aload         5
     186: aload         5
     188: aload_0
     189: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     192: invokevirtual #33                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     195: invokevirtual #34                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     198: invokestatic  #35                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
     201: return

  public void failed(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_0
       5: getfield      #3                  // Field proxyClientHandler:Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler;
       8: aload_0
       9: getfield      #4                  // Field idempotentPredicate:Lio/undertow/predicate/Predicate;
      12: aload_1
      13: invokestatic  #36                 // Method io/undertow/server/handlers/proxy/ProxyHandler.handleFailure:(Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler;Lio/undertow/predicate/Predicate;Ljava/io/IOException;)V
      16: return

  public void completed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #37                 // class io/undertow/client/ClientExchange
       5: invokevirtual #38                 // Method completed:(Lio/undertow/client/ClientExchange;)V
       8: return
}
