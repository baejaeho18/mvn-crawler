Compiled from "ModClusterProxyTarget.java"
public class io.undertow.server.handlers.proxy.mod_cluster.ModClusterProxyTarget$ExistingSessionTarget implements io.undertow.server.handlers.proxy.mod_cluster.ModClusterProxyTarget {
  private final java.lang.String session;

  private final java.util.Iterator<java.lang.CharSequence> routes;

  private final io.undertow.server.handlers.proxy.mod_cluster.VirtualHost$HostEntry entry;

  private final boolean forceStickySession;

  private final io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer container;

  private boolean resolved;

  private io.undertow.server.handlers.proxy.mod_cluster.Context resolvedContext;

  public io.undertow.server.handlers.proxy.mod_cluster.ModClusterProxyTarget$ExistingSessionTarget(java.lang.String, java.util.Iterator<java.lang.CharSequence>, io.undertow.server.handlers.proxy.mod_cluster.VirtualHost$HostEntry, io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field session:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field routes:Ljava/util/Iterator;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field entry:Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
      25: aload_0
      26: iload         5
      28: putfield      #6                  // Field forceStickySession:Z
      31: return

  public io.undertow.server.handlers.proxy.mod_cluster.Context resolveContext(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method resolveContextIfUnresolved:()V
       4: aload_0
       5: getfield      #8                  // Field resolvedContext:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
       8: areturn

  void resolveContextIfUnresolved();
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolved:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #9                  // Field resolved:Z
      13: iconst_0
      14: istore_1
      15: aconst_null
      16: astore_2
      17: aconst_null
      18: astore_3
      19: aload_0
      20: getfield      #3                  // Field routes:Ljava/util/Iterator;
      23: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          127
      31: aload_0
      32: getfield      #3                  // Field routes:Ljava/util/Iterator;
      35: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #12                 // class java/lang/CharSequence
      43: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      48: astore        4
      50: aload_0
      51: getfield      #4                  // Field entry:Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;
      54: aload         4
      56: invokevirtual #14                 // Method io/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry.getContextForNode:(Ljava/lang/String;)Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      59: astore        5
      61: aload         5
      63: ifnull        94
      66: aload         5
      68: iconst_1
      69: invokevirtual #15                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.checkAvailable:(Z)Z
      72: ifeq          94
      75: aload         5
      77: invokevirtual #16                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.getNode:()Lio/undertow/server/handlers/proxy/mod_cluster/Node;
      80: astore        6
      82: aload         6
      84: invokevirtual #17                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.elected:()V
      87: aload_0
      88: aload         5
      90: putfield      #8                  // Field resolvedContext:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      93: return
      94: iload_1
      95: ifne          124
      98: iconst_1
      99: istore_1
     100: aload         4
     102: astore_2
     103: aload         5
     105: ifnull        122
     108: aload         5
     110: invokevirtual #16                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.getNode:()Lio/undertow/server/handlers/proxy/mod_cluster/Node;
     113: invokevirtual #18                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getNodeConfig:()Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
     116: invokevirtual #19                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getDomain:()Ljava/lang/String;
     119: goto          123
     122: aconst_null
     123: astore_3
     124: goto          19
     127: aload_0
     128: aload_0
     129: getfield      #5                  // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
     132: aload_0
     133: getfield      #4                  // Field entry:Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;
     136: aload_3
     137: aload_0
     138: getfield      #2                  // Field session:Ljava/lang/String;
     141: aload_2
     142: aload_0
     143: getfield      #6                  // Field forceStickySession:Z
     146: invokevirtual #20                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer.findFailoverNode:(Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lio/undertow/server/handlers/proxy/mod_cluster/Context;
     149: putfield      #8                  // Field resolvedContext:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
     152: return

  public int getMaxRetries();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method resolveContextIfUnresolved:()V
       4: aload_0
       5: getfield      #8                  // Field resolvedContext:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #8                  // Field resolvedContext:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      17: invokevirtual #16                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.getNode:()Lio/undertow/server/handlers/proxy/mod_cluster/Node;
      20: invokevirtual #21                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getBalancer:()Lio/undertow/server/handlers/proxy/mod_cluster/Balancer;
      23: astore_1
      24: aload_1
      25: ifnonnull     30
      28: iconst_0
      29: ireturn
      30: aload_1
      31: invokevirtual #22                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.getMaxRetries:()I
      34: ireturn
}
