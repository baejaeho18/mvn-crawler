Compiled from "RequestLimit.java"
public class io.undertow.server.handlers.RequestLimit {
  private volatile int requests;

  private volatile int max;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.handlers.RequestLimit> requestsUpdater;

  private volatile io.undertow.server.HttpHandler failureHandler;

  private final java.util.Queue<io.undertow.server.handlers.RequestLimit$SuspendedRequest> queue;

  private final io.undertow.server.ExchangeCompletionListener COMPLETION_LISTENER;

  public io.undertow.server.handlers.RequestLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_m1
       3: invokespecial #1                  // Method "<init>":(II)V
       6: return

  public io.undertow.server.handlers.RequestLimit(int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class io/undertow/server/handlers/ResponseCodeHandler
       8: dup
       9: sipush        503
      12: invokespecial #4                  // Method io/undertow/server/handlers/ResponseCodeHandler."<init>":(I)V
      15: putfield      #5                  // Field failureHandler:Lio/undertow/server/HttpHandler;
      18: aload_0
      19: new           #6                  // class io/undertow/server/handlers/RequestLimit$1
      22: dup
      23: aload_0
      24: invokespecial #7                  // Method io/undertow/server/handlers/RequestLimit$1."<init>":(Lio/undertow/server/handlers/RequestLimit;)V
      27: putfield      #8                  // Field COMPLETION_LISTENER:Lio/undertow/server/ExchangeCompletionListener;
      30: iload_1
      31: iconst_1
      32: if_icmpge     45
      35: new           #9                  // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #10                 // String Maximum concurrent requests must be at least 1
      41: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: iload_1
      47: putfield      #12                 // Field max:I
      50: aload_0
      51: new           #13                 // class java/util/concurrent/LinkedBlockingQueue
      54: dup
      55: iload_2
      56: ifgt          64
      59: ldc           #15                 // int 2147483647
      61: goto          65
      64: iload_2
      65: invokespecial #16                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      68: putfield      #17                 // Field queue:Ljava/util/Queue;
      71: return

  public void handleRequest(io.undertow.server.HttpServerExchange, io.undertow.server.HttpHandler) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #18                 // Field requests:I
       4: istore_3
       5: iload_3
       6: aload_0
       7: getfield      #12                 // Field max:I
      10: if_icmplt     32
      13: aload_1
      14: getstatic     #19                 // Field io/undertow/util/SameThreadExecutor.INSTANCE:Ljava/util/concurrent/Executor;
      17: new           #20                 // class io/undertow/server/handlers/RequestLimit$2
      20: dup
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokespecial #21                 // Method io/undertow/server/handlers/RequestLimit$2."<init>":(Lio/undertow/server/handlers/RequestLimit;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/HttpHandler;)V
      27: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      30: pop
      31: return
      32: iload_3
      33: iconst_1
      34: iadd
      35: istore        4
      37: getstatic     #23                 // Field requestsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      40: aload_0
      41: iload_3
      42: iload         4
      44: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      47: ifeq          0
      50: aload_1
      51: aload_0
      52: getfield      #8                  // Field COMPLETION_LISTENER:Lio/undertow/server/ExchangeCompletionListener;
      55: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
      58: pop
      59: aload_2
      60: aload_1
      61: invokeinterface #26,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      66: return

  public int getMaximumConcurrentRequests();
    Code:
       0: aload_0
       1: getfield      #12                 // Field max:I
       4: ireturn

  public int setMaximumConcurrentRequests(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #9                  // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #10                 // String Maximum concurrent requests must be at least 1
      11: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #12                 // Field max:I
      19: istore_2
      20: aload_0
      21: iload_1
      22: putfield      #12                 // Field max:I
      25: iload_1
      26: iload_2
      27: if_icmple     128
      30: aload_0
      31: dup
      32: astore_3
      33: monitorenter
      34: aload_0
      35: getfield      #17                 // Field queue:Ljava/util/Queue;
      38: invokeinterface #27,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      43: ifne          116
      46: aload_0
      47: getfield      #18                 // Field requests:I
      50: istore        4
      52: iload         4
      54: aload_0
      55: getfield      #12                 // Field max:I
      58: if_icmplt     65
      61: iload_2
      62: aload_3
      63: monitorexit
      64: ireturn
      65: iload         4
      67: iconst_1
      68: iadd
      69: istore        5
      71: getstatic     #23                 // Field requestsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      74: aload_0
      75: iload         4
      77: iload         5
      79: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      82: ifeq          46
      85: aload_0
      86: getfield      #17                 // Field queue:Ljava/util/Queue;
      89: invokeinterface #28,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      94: checkcast     #29                 // class io/undertow/server/handlers/RequestLimit$SuspendedRequest
      97: astore        6
      99: aload         6
     101: getfield      #30                 // Field io/undertow/server/handlers/RequestLimit$SuspendedRequest.exchange:Lio/undertow/server/HttpServerExchange;
     104: aload         6
     106: getfield      #31                 // Field io/undertow/server/handlers/RequestLimit$SuspendedRequest.next:Lio/undertow/server/HttpHandler;
     109: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.dispatch:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpServerExchange;
     112: pop
     113: goto          34
     116: aload_3
     117: monitorexit
     118: goto          128
     121: astore        7
     123: aload_3
     124: monitorexit
     125: aload         7
     127: athrow
     128: iload_2
     129: ireturn
    Exception table:
       from    to  target type
          34    64   121   any
          65   118   121   any
         121   125   121   any

  private void decrementRequests();
    Code:
       0: getstatic     #23                 // Field requestsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
       7: pop
       8: return

  public io.undertow.server.HttpHandler getFailureHandler();
    Code:
       0: aload_0
       1: getfield      #5                  // Field failureHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  public void setFailureHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field failureHandler:Lio/undertow/server/HttpHandler;
       5: return

  static {};
    Code:
       0: ldc           #34                 // class io/undertow/server/handlers/RequestLimit
       2: ldc           #35                 // String requests
       4: invokestatic  #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #23                 // Field requestsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
