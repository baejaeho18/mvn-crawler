Compiled from "ResponseRateLimitingHandler.java"
class io.undertow.server.handlers.ResponseRateLimitingHandler$Wrapper implements io.undertow.server.HandlerWrapper {
  private final long time;

  private final int bytes;

  private io.undertow.server.handlers.ResponseRateLimitingHandler$Wrapper(int, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload         4
       7: lload_2
       8: invokevirtual #2                  // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      11: putfield      #3                  // Field time:J
      14: aload_0
      15: iload_1
      16: putfield      #4                  // Field bytes:I
      19: return

  public io.undertow.server.HttpHandler wrap(io.undertow.server.HttpHandler);
    Code:
       0: new           #5                  // class io/undertow/server/handlers/ResponseRateLimitingHandler
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field bytes:I
       9: aload_0
      10: getfield      #3                  // Field time:J
      13: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      16: invokespecial #7                  // Method io/undertow/server/handlers/ResponseRateLimitingHandler."<init>":(Lio/undertow/server/HttpHandler;IJLjava/util/concurrent/TimeUnit;)V
      19: areturn
}
