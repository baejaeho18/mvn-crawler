Compiled from "RequestLimit.java"
class io.undertow.server.handlers.RequestLimit$2 implements java.lang.Runnable {
  final io.undertow.server.HttpServerExchange val$exchange;

  final io.undertow.server.HttpHandler val$next;

  final io.undertow.server.handlers.RequestLimit this$0;

  io.undertow.server.handlers.RequestLimit$2(io.undertow.server.handlers.RequestLimit, io.undertow.server.HttpServerExchange, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestLimit;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$next:Lio/undertow/server/HttpHandler;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestLimit;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestLimit;
      11: getfield      #5                  // Field io/undertow/server/handlers/RequestLimit.requests:I
      14: istore_2
      15: iload_2
      16: aload_0
      17: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestLimit;
      20: getfield      #6                  // Field io/undertow/server/handlers/RequestLimit.max:I
      23: if_icmplt     73
      26: aload_0
      27: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestLimit;
      30: getfield      #7                  // Field io/undertow/server/handlers/RequestLimit.queue:Ljava/util/Queue;
      33: new           #8                  // class io/undertow/server/handlers/RequestLimit$SuspendedRequest
      36: dup
      37: aload_0
      38: getfield      #2                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      41: aload_0
      42: getfield      #3                  // Field val$next:Lio/undertow/server/HttpHandler;
      45: invokespecial #9                  // Method io/undertow/server/handlers/RequestLimit$SuspendedRequest."<init>":(Lio/undertow/server/HttpServerExchange;Lio/undertow/server/HttpHandler;)V
      48: invokeinterface #10,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      53: ifne          70
      56: aload_0
      57: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestLimit;
      60: getfield      #11                 // Field io/undertow/server/handlers/RequestLimit.failureHandler:Lio/undertow/server/HttpHandler;
      63: aload_0
      64: getfield      #2                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      67: invokestatic  #12                 // Method io/undertow/server/Connectors.executeRootHandler:(Lio/undertow/server/HttpHandler;Lio/undertow/server/HttpServerExchange;)V
      70: aload_1
      71: monitorexit
      72: return
      73: iload_2
      74: iconst_1
      75: iadd
      76: istore_3
      77: getstatic     #13                 // Field io/undertow/server/handlers/RequestLimit.requestsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      80: aload_0
      81: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestLimit;
      84: iload_2
      85: iload_3
      86: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      89: ifeq          7
      92: aload_0
      93: getfield      #2                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      96: aload_0
      97: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestLimit;
     100: getfield      #15                 // Field io/undertow/server/handlers/RequestLimit.COMPLETION_LISTENER:Lio/undertow/server/ExchangeCompletionListener;
     103: invokevirtual #16                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
     106: pop
     107: aload_0
     108: getfield      #2                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     111: aload_0
     112: getfield      #3                  // Field val$next:Lio/undertow/server/HttpHandler;
     115: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.dispatch:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpServerExchange;
     118: pop
     119: aload_1
     120: monitorexit
     121: goto          131
     124: astore        4
     126: aload_1
     127: monitorexit
     128: aload         4
     130: athrow
     131: return
    Exception table:
       from    to  target type
           7    72   124   any
          73   121   124   any
         124   128   124   any
}
