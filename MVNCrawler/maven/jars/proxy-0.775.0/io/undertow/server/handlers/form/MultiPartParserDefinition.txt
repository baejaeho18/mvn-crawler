Compiled from "MultiPartParserDefinition.java"
public class io.undertow.server.handlers.form.MultiPartParserDefinition implements io.undertow.server.handlers.form.FormParserFactory$ParserDefinition<io.undertow.server.handlers.form.MultiPartParserDefinition> {
  public static final java.lang.String MULTIPART_FORM_DATA;

  private java.util.concurrent.Executor executor;

  private java.nio.file.Path tempFileLocation;

  private java.lang.String defaultEncoding;

  private long maxIndividualFileSize;

  private long fileSizeThreshold;

  public io.undertow.server.handlers.form.MultiPartParserDefinition();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       8: invokevirtual #3                  // Method java/nio/charset/Charset.displayName:()Ljava/lang/String;
      11: putfield      #4                  // Field defaultEncoding:Ljava/lang/String;
      14: aload_0
      15: ldc2_w        #5                  // long -1l
      18: putfield      #7                  // Field maxIndividualFileSize:J
      21: aload_0
      22: ldc           #8                  // String java.io.tmpdir
      24: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      27: iconst_0
      28: anewarray     #10                 // class java/lang/String
      31: invokestatic  #11                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      34: putfield      #12                 // Field tempFileLocation:Ljava/nio/file/Path;
      37: return

  public io.undertow.server.handlers.form.MultiPartParserDefinition(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       8: invokevirtual #3                  // Method java/nio/charset/Charset.displayName:()Ljava/lang/String;
      11: putfield      #4                  // Field defaultEncoding:Ljava/lang/String;
      14: aload_0
      15: ldc2_w        #5                  // long -1l
      18: putfield      #7                  // Field maxIndividualFileSize:J
      21: aload_0
      22: aload_1
      23: putfield      #12                 // Field tempFileLocation:Ljava/nio/file/Path;
      26: return

  public io.undertow.server.handlers.form.FormDataParser create(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #14                 // Field io/undertow/util/Headers.CONTENT_TYPE:Lio/undertow/util/HttpString;
       7: invokevirtual #15                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnull        134
      15: aload_2
      16: ldc           #17                 // String multipart/form-data
      18: invokevirtual #18                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      21: ifeq          134
      24: aload_2
      25: ldc           #19                 // String boundary
      27: invokestatic  #20                 // Method io/undertow/util/Headers.extractQuotedValueFromHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      30: astore_3
      31: aload_3
      32: ifnonnull     48
      35: getstatic     #21                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      38: ldc           #22                 // String Could not find boundary in multipart request with ContentType: %s, multipart data will not be available
      40: aload_2
      41: invokeinterface #23,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aconst_null
      47: areturn
      48: new           #24                 // class io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler
      51: dup
      52: aload_0
      53: aload_1
      54: aload_3
      55: aload_0
      56: getfield      #7                  // Field maxIndividualFileSize:J
      59: aload_0
      60: getfield      #25                 // Field fileSizeThreshold:J
      63: aload_0
      64: getfield      #4                  // Field defaultEncoding:Ljava/lang/String;
      67: invokespecial #26                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition;Lio/undertow/server/HttpServerExchange;Ljava/lang/String;JJLjava/lang/String;)V
      70: astore        4
      72: aload_1
      73: new           #27                 // class io/undertow/server/handlers/form/MultiPartParserDefinition$1
      76: dup
      77: aload_0
      78: aload         4
      80: invokespecial #28                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition$1."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition;Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler;)V
      83: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
      86: pop
      87: aload_1
      88: invokevirtual #30                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      91: invokevirtual #31                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      94: getstatic     #32                 // Field io/undertow/UndertowOptions.MULTIPART_MAX_ENTITY_SIZE:Lorg/xnio/Option;
      97: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     100: checkcast     #34                 // class java/lang/Long
     103: astore        5
     105: aload         5
     107: ifnull        120
     110: aload_1
     111: aload         5
     113: invokevirtual #35                 // Method java/lang/Long.longValue:()J
     116: invokevirtual #36                 // Method io/undertow/server/HttpServerExchange.setMaxEntitySize:(J)Lio/undertow/server/HttpServerExchange;
     119: pop
     120: getstatic     #21                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     123: ldc           #37                 // String Created multipart parser for %s
     125: aload_1
     126: invokeinterface #38,  3           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     131: aload         4
     133: areturn
     134: aconst_null
     135: areturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #39                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  public io.undertow.server.handlers.form.MultiPartParserDefinition setExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field executor:Ljava/util/concurrent/Executor;
       5: aload_0
       6: areturn

  public java.nio.file.Path getTempFileLocation();
    Code:
       0: aload_0
       1: getfield      #12                 // Field tempFileLocation:Ljava/nio/file/Path;
       4: areturn

  public io.undertow.server.handlers.form.MultiPartParserDefinition setTempFileLocation(java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field tempFileLocation:Ljava/nio/file/Path;
       5: aload_0
       6: areturn

  public java.lang.String getDefaultEncoding();
    Code:
       0: aload_0
       1: getfield      #4                  // Field defaultEncoding:Ljava/lang/String;
       4: areturn

  public io.undertow.server.handlers.form.MultiPartParserDefinition setDefaultEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field defaultEncoding:Ljava/lang/String;
       5: aload_0
       6: areturn

  public long getMaxIndividualFileSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxIndividualFileSize:J
       4: lreturn

  public void setMaxIndividualFileSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field maxIndividualFileSize:J
       5: return

  public void setFileSizeThreshold(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #25                 // Field fileSizeThreshold:J
       5: return

  public java.lang.Object setDefaultEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setDefaultEncoding:(Ljava/lang/String;)Lio/undertow/server/handlers/form/MultiPartParserDefinition;
       5: areturn
}
