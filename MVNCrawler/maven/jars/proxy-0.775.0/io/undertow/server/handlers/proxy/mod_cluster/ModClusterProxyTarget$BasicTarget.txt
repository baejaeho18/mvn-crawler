Compiled from "ModClusterProxyTarget.java"
public class io.undertow.server.handlers.proxy.mod_cluster.ModClusterProxyTarget$BasicTarget implements io.undertow.server.handlers.proxy.mod_cluster.ModClusterProxyTarget {
  private final io.undertow.server.handlers.proxy.mod_cluster.VirtualHost$HostEntry entry;

  private final io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer container;

  private io.undertow.server.handlers.proxy.mod_cluster.Context resolved;

  public io.undertow.server.handlers.proxy.mod_cluster.ModClusterProxyTarget$BasicTarget(io.undertow.server.handlers.proxy.mod_cluster.VirtualHost$HostEntry, io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field entry:Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
      14: return

  public int getMaxRetries();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resolved:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #5                  // Method resolveNode:()V
      11: aload_0
      12: getfield      #4                  // Field resolved:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: getfield      #4                  // Field resolved:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      24: invokevirtual #6                  // Method io/undertow/server/handlers/proxy/mod_cluster/Context.getNode:()Lio/undertow/server/handlers/proxy/mod_cluster/Node;
      27: invokevirtual #7                  // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getBalancer:()Lio/undertow/server/handlers/proxy/mod_cluster/Balancer;
      30: astore_1
      31: aload_1
      32: ifnonnull     37
      35: iconst_0
      36: ireturn
      37: aload_1
      38: invokevirtual #8                  // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.getMaxRetries:()I
      41: ireturn

  public io.undertow.server.handlers.proxy.mod_cluster.Context resolveContext(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #4                  // Field resolved:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #5                  // Method resolveNode:()V
      11: aload_0
      12: getfield      #4                  // Field resolved:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      15: areturn

  private void resolveNode();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field container:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;
       5: aload_0
       6: getfield      #2                  // Field entry:Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;
       9: invokevirtual #9                  // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer.findNewNode:(Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;)Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      12: putfield      #4                  // Field resolved:Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      15: return
}
