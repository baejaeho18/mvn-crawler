Compiled from "CookieImpl.java"
public class io.undertow.server.handlers.CookieImpl implements io.undertow.server.handlers.Cookie {
  private final java.lang.String name;

  private java.lang.String value;

  private java.lang.String path;

  private java.lang.String domain;

  private java.lang.Integer maxAge;

  private java.util.Date expires;

  private boolean discard;

  private boolean secure;

  private boolean httpOnly;

  private int version;

  private java.lang.String comment;

  private boolean sameSite;

  private java.lang.String sameSiteMode;

  public io.undertow.server.handlers.CookieImpl(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field version:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field value:Ljava/lang/String;
      19: return

  public io.undertow.server.handlers.CookieImpl(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field version:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/String;
       4: areturn

  public io.undertow.server.handlers.CookieImpl setValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field value:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #5                  // Field path:Ljava/lang/String;
       4: areturn

  public io.undertow.server.handlers.CookieImpl setPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field path:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getDomain();
    Code:
       0: aload_0
       1: getfield      #6                  // Field domain:Ljava/lang/String;
       4: areturn

  public io.undertow.server.handlers.CookieImpl setDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field domain:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Integer getMaxAge();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxAge:Ljava/lang/Integer;
       4: areturn

  public io.undertow.server.handlers.CookieImpl setMaxAge(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field maxAge:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public boolean isDiscard();
    Code:
       0: aload_0
       1: getfield      #8                  // Field discard:Z
       4: ireturn

  public io.undertow.server.handlers.CookieImpl setDiscard(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field discard:Z
       5: aload_0
       6: areturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #9                  // Field secure:Z
       4: ireturn

  public io.undertow.server.handlers.CookieImpl setSecure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field secure:Z
       5: aload_0
       6: areturn

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field version:I
       4: ireturn

  public io.undertow.server.handlers.CookieImpl setVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field version:I
       5: aload_0
       6: areturn

  public boolean isHttpOnly();
    Code:
       0: aload_0
       1: getfield      #10                 // Field httpOnly:Z
       4: ireturn

  public io.undertow.server.handlers.CookieImpl setHttpOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field httpOnly:Z
       5: aload_0
       6: areturn

  public java.util.Date getExpires();
    Code:
       0: aload_0
       1: getfield      #11                 // Field expires:Ljava/util/Date;
       4: areturn

  public io.undertow.server.handlers.CookieImpl setExpires(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field expires:Ljava/util/Date;
       5: aload_0
       6: areturn

  public java.lang.String getComment();
    Code:
       0: aload_0
       1: getfield      #12                 // Field comment:Ljava/lang/String;
       4: areturn

  public io.undertow.server.handlers.Cookie setComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field comment:Ljava/lang/String;
       5: aload_0
       6: areturn

  public boolean isSameSite();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sameSite:Z
       4: ireturn

  public io.undertow.server.handlers.Cookie setSameSite(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field sameSite:Z
       5: aload_0
       6: areturn

  public java.lang.String getSameSiteMode();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sameSiteMode:Ljava/lang/String;
       4: areturn

  public io.undertow.server.handlers.Cookie setSameSiteMode(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method io/undertow/server/handlers/CookieSameSiteMode.lookupModeString:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        38
       9: getstatic     #16                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      12: ldc           #17                 // String Setting SameSite mode to [%s] for cookie [%s]
      14: aload_2
      15: aload_0
      16: getfield      #3                  // Field name:Ljava/lang/String;
      19: invokeinterface #18,  4           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      24: aload_0
      25: aload_2
      26: putfield      #14                 // Field sameSiteMode:Ljava/lang/String;
      29: aload_0
      30: iconst_1
      31: invokevirtual #19                 // Method setSameSite:(Z)Lio/undertow/server/handlers/Cookie;
      34: pop
      35: goto          68
      38: getstatic     #16                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      41: getstatic     #20                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      44: aload_1
      45: invokestatic  #21                 // Method io/undertow/server/handlers/CookieSameSiteMode.values:()[Lio/undertow/server/handlers/CookieSameSiteMode;
      48: invokestatic  #22                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      51: invokeinterface #23,  3           // InterfaceMethod io/undertow/UndertowMessages.invalidSameSiteMode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      56: ldc           #24                 // String Ignoring specified SameSite mode [%s] for cookie [%s]
      58: aload_1
      59: aload_0
      60: getfield      #3                  // Field name:Ljava/lang/String;
      63: invokeinterface #25,  5           // InterfaceMethod io/undertow/UndertowLogger.warnf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      68: aload_0
      69: areturn

  public final int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: bipush        37
       5: iload_1
       6: imul
       7: aload_0
       8: invokevirtual #26                 // Method getName:()Ljava/lang/String;
      11: ifnonnull     18
      14: iconst_0
      15: goto          25
      18: aload_0
      19: invokevirtual #26                 // Method getName:()Ljava/lang/String;
      22: invokevirtual #27                 // Method java/lang/String.hashCode:()I
      25: iadd
      26: istore_1
      27: bipush        37
      29: iload_1
      30: imul
      31: aload_0
      32: invokevirtual #28                 // Method getPath:()Ljava/lang/String;
      35: ifnonnull     42
      38: iconst_0
      39: goto          49
      42: aload_0
      43: invokevirtual #28                 // Method getPath:()Ljava/lang/String;
      46: invokevirtual #27                 // Method java/lang/String.hashCode:()I
      49: iadd
      50: istore_1
      51: bipush        37
      53: iload_1
      54: imul
      55: aload_0
      56: invokevirtual #29                 // Method getDomain:()Ljava/lang/String;
      59: ifnonnull     66
      62: iconst_0
      63: goto          73
      66: aload_0
      67: invokevirtual #29                 // Method getDomain:()Ljava/lang/String;
      70: invokevirtual #27                 // Method java/lang/String.hashCode:()I
      73: iadd
      74: istore_1
      75: iload_1
      76: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #30                 // class io/undertow/server/handlers/Cookie
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #30                 // class io/undertow/server/handlers/Cookie
      20: astore_2
      21: aload_0
      22: invokevirtual #26                 // Method getName:()Ljava/lang/String;
      25: ifnonnull     39
      28: aload_2
      29: invokeinterface #31,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getName:()Ljava/lang/String;
      34: ifnull        39
      37: iconst_0
      38: ireturn
      39: aload_0
      40: invokevirtual #26                 // Method getName:()Ljava/lang/String;
      43: ifnull        64
      46: aload_0
      47: invokevirtual #26                 // Method getName:()Ljava/lang/String;
      50: aload_2
      51: invokeinterface #31,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getName:()Ljava/lang/String;
      56: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      59: ifne          64
      62: iconst_0
      63: ireturn
      64: aload_0
      65: invokevirtual #28                 // Method getPath:()Ljava/lang/String;
      68: ifnonnull     82
      71: aload_2
      72: invokeinterface #33,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getPath:()Ljava/lang/String;
      77: ifnull        82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: invokevirtual #28                 // Method getPath:()Ljava/lang/String;
      86: ifnull        107
      89: aload_0
      90: invokevirtual #28                 // Method getPath:()Ljava/lang/String;
      93: aload_2
      94: invokeinterface #33,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getPath:()Ljava/lang/String;
      99: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     102: ifne          107
     105: iconst_0
     106: ireturn
     107: aload_0
     108: invokevirtual #29                 // Method getDomain:()Ljava/lang/String;
     111: ifnonnull     125
     114: aload_2
     115: invokeinterface #34,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getDomain:()Ljava/lang/String;
     120: ifnull        125
     123: iconst_0
     124: ireturn
     125: aload_0
     126: invokevirtual #29                 // Method getDomain:()Ljava/lang/String;
     129: ifnull        150
     132: aload_0
     133: invokevirtual #29                 // Method getDomain:()Ljava/lang/String;
     136: aload_2
     137: invokeinterface #34,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getDomain:()Ljava/lang/String;
     142: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     145: ifne          150
     148: iconst_0
     149: ireturn
     150: iconst_1
     151: ireturn

  public final int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // InterfaceMethod io/undertow/server/handlers/Cookie.compareTo:(Ljava/lang/Object;)I
       5: ireturn

  public final java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: aload_0
       5: invokevirtual #26                 // Method getName:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #28                 // Method getPath:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #29                 // Method getDomain:()Ljava/lang/String;
      16: invokedynamic #37,  0             // InvokeDynamic #0:makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      21: areturn

  public io.undertow.server.handlers.Cookie setExpires(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setExpires:(Ljava/util/Date;)Lio/undertow/server/handlers/CookieImpl;
       5: areturn

  public io.undertow.server.handlers.Cookie setHttpOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #39                 // Method setHttpOnly:(Z)Lio/undertow/server/handlers/CookieImpl;
       5: areturn

  public io.undertow.server.handlers.Cookie setVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #40                 // Method setVersion:(I)Lio/undertow/server/handlers/CookieImpl;
       5: areturn

  public io.undertow.server.handlers.Cookie setSecure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #41                 // Method setSecure:(Z)Lio/undertow/server/handlers/CookieImpl;
       5: areturn

  public io.undertow.server.handlers.Cookie setDiscard(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #42                 // Method setDiscard:(Z)Lio/undertow/server/handlers/CookieImpl;
       5: areturn

  public io.undertow.server.handlers.Cookie setMaxAge(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method setMaxAge:(Ljava/lang/Integer;)Lio/undertow/server/handlers/CookieImpl;
       5: areturn

  public io.undertow.server.handlers.Cookie setDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setDomain:(Ljava/lang/String;)Lio/undertow/server/handlers/CookieImpl;
       5: areturn

  public io.undertow.server.handlers.Cookie setPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method setPath:(Ljava/lang/String;)Lio/undertow/server/handlers/CookieImpl;
       5: areturn

  public io.undertow.server.handlers.Cookie setValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setValue:(Ljava/lang/String;)Lio/undertow/server/handlers/CookieImpl;
       5: areturn
}
