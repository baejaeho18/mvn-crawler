Compiled from "XnioByteBufferPool.java"
public class io.undertow.server.XnioByteBufferPool implements io.undertow.connector.ByteBufferPool {
  private final org.xnio.Pool<java.nio.ByteBuffer> pool;

  private final io.undertow.connector.ByteBufferPool arrayBackedPool;

  private final int bufferSize;

  private final boolean direct;

  public io.undertow.server.XnioByteBufferPool(org.xnio.Pool<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field pool:Lorg/xnio/Pool;
       9: aload_1
      10: invokeinterface #3,  1            // InterfaceMethod org/xnio/Pool.allocate:()Lorg/xnio/Pooled;
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokeinterface #4,  1            // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      23: checkcast     #5                  // class java/nio/ByteBuffer
      26: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      29: putfield      #7                  // Field bufferSize:I
      32: aload_0
      33: aload_2
      34: invokeinterface #4,  1            // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      39: checkcast     #5                  // class java/nio/ByteBuffer
      42: invokevirtual #8                  // Method java/nio/ByteBuffer.hasArray:()Z
      45: ifne          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: putfield      #9                  // Field direct:Z
      56: aload_2
      57: invokeinterface #10,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      62: aload_0
      63: getfield      #9                  // Field direct:Z
      66: ifeq          88
      69: aload_0
      70: new           #11                 // class io/undertow/server/DefaultByteBufferPool
      73: dup
      74: iconst_0
      75: aload_0
      76: getfield      #7                  // Field bufferSize:I
      79: invokespecial #12                 // Method io/undertow/server/DefaultByteBufferPool."<init>":(ZI)V
      82: putfield      #13                 // Field arrayBackedPool:Lio/undertow/connector/ByteBufferPool;
      85: goto          93
      88: aload_0
      89: aload_0
      90: putfield      #13                 // Field arrayBackedPool:Lio/undertow/connector/ByteBufferPool;
      93: return

  public io.undertow.connector.PooledByteBuffer allocate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/xnio/Pool;
       4: invokeinterface #3,  1            // InterfaceMethod org/xnio/Pool.allocate:()Lorg/xnio/Pooled;
       9: astore_1
      10: new           #14                 // class io/undertow/server/XnioByteBufferPool$1
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #15                 // Method io/undertow/server/XnioByteBufferPool$1."<init>":(Lio/undertow/server/XnioByteBufferPool;Lorg/xnio/Pooled;)V
      19: areturn

  public io.undertow.connector.ByteBufferPool getArrayBackedPool();
    Code:
       0: aload_0
       1: getfield      #13                 // Field arrayBackedPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public void close();
    Code:
       0: return

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bufferSize:I
       4: ireturn

  public boolean isDirect();
    Code:
       0: aload_0
       1: getfield      #9                  // Field direct:Z
       4: ireturn
}
