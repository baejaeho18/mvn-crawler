Compiled from "InMemorySessionManager.java"
public class io.undertow.server.session.InMemorySessionManager implements io.undertow.server.session.SessionManager,io.undertow.server.session.SessionManagerStatistics {
  private final io.undertow.util.AttachmentKey<io.undertow.server.session.InMemorySessionManager$SessionImpl> NEW_SESSION;

  private final io.undertow.server.session.SessionIdGenerator sessionIdGenerator;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.undertow.server.session.InMemorySessionManager$SessionImpl> sessions;

  private final io.undertow.server.session.SessionListeners sessionListeners;

  private volatile int defaultSessionTimeout;

  private final int maxSize;

  private final io.undertow.util.ConcurrentDirectDeque<java.lang.String> evictionQueue;

  private final java.lang.String deploymentName;

  private final java.util.concurrent.atomic.AtomicLong createdSessionCount;

  private final java.util.concurrent.atomic.AtomicLong rejectedSessionCount;

  private volatile long longestSessionLifetime;

  private volatile long expiredSessionCount;

  private volatile java.math.BigInteger totalSessionLifetime;

  private final java.util.concurrent.atomic.AtomicInteger highestSessionCount;

  private final boolean statisticsEnabled;

  private volatile long startTime;

  private final boolean expireOldestUnusedSessionOnMax;

  public io.undertow.server.session.InMemorySessionManager(java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: new           #1                  // class io/undertow/server/session/SecureRandomSessionIdGenerator
       4: dup
       5: invokespecial #2                  // Method io/undertow/server/session/SecureRandomSessionIdGenerator."<init>":()V
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #3                  // Method "<init>":(Lio/undertow/server/session/SessionIdGenerator;Ljava/lang/String;IZ)V
      14: return

  public io.undertow.server.session.InMemorySessionManager(io.undertow.server.session.SessionIdGenerator, java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iconst_1
       7: invokespecial #4                  // Method "<init>":(Lio/undertow/server/session/SessionIdGenerator;Ljava/lang/String;IZZ)V
      10: return

  public io.undertow.server.session.InMemorySessionManager(io.undertow.server.session.SessionIdGenerator, java.lang.String, int, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #6                  // class io/undertow/server/session/InMemorySessionManager$SessionImpl
       7: invokestatic  #7                  // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      10: putfield      #8                  // Field NEW_SESSION:Lio/undertow/util/AttachmentKey;
      13: aload_0
      14: new           #9                  // class io/undertow/server/session/SessionListeners
      17: dup
      18: invokespecial #10                 // Method io/undertow/server/session/SessionListeners."<init>":()V
      21: putfield      #11                 // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
      24: aload_0
      25: sipush        1800
      28: putfield      #12                 // Field defaultSessionTimeout:I
      31: aload_0
      32: new           #13                 // class java/util/concurrent/atomic/AtomicLong
      35: dup
      36: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      39: putfield      #15                 // Field createdSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
      42: aload_0
      43: new           #13                 // class java/util/concurrent/atomic/AtomicLong
      46: dup
      47: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      50: putfield      #16                 // Field rejectedSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
      53: aload_0
      54: lconst_0
      55: putfield      #17                 // Field longestSessionLifetime:J
      58: aload_0
      59: lconst_0
      60: putfield      #18                 // Field expiredSessionCount:J
      63: aload_0
      64: getstatic     #19                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
      67: putfield      #20                 // Field totalSessionLifetime:Ljava/math/BigInteger;
      70: aload_0
      71: new           #21                 // class java/util/concurrent/atomic/AtomicInteger
      74: dup
      75: invokespecial #22                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      78: putfield      #23                 // Field highestSessionCount:Ljava/util/concurrent/atomic/AtomicInteger;
      81: aload_0
      82: aload_1
      83: putfield      #24                 // Field sessionIdGenerator:Lio/undertow/server/session/SessionIdGenerator;
      86: aload_0
      87: aload_2
      88: putfield      #25                 // Field deploymentName:Ljava/lang/String;
      91: aload_0
      92: iload         5
      94: putfield      #26                 // Field statisticsEnabled:Z
      97: aload_0
      98: iload         4
     100: putfield      #27                 // Field expireOldestUnusedSessionOnMax:Z
     103: aload_0
     104: new           #28                 // class java/util/concurrent/ConcurrentHashMap
     107: dup
     108: invokespecial #29                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     111: putfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
     114: aload_0
     115: iload_3
     116: putfield      #31                 // Field maxSize:I
     119: aconst_null
     120: astore        6
     122: iload_3
     123: ifle          136
     126: iload         4
     128: ifeq          136
     131: invokestatic  #32                 // Method io/undertow/util/ConcurrentDirectDeque.newInstance:()Lio/undertow/util/ConcurrentDirectDeque;
     134: astore        6
     136: aload_0
     137: aload         6
     139: putfield      #33                 // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
     142: return

  public io.undertow.server.session.InMemorySessionManager(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #34                 // Method "<init>":(Ljava/lang/String;IZ)V
       7: return

  public io.undertow.server.session.InMemorySessionManager(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokespecial #35                 // Method "<init>":(Ljava/lang/String;I)V
       6: return

  public java.lang.String getDeploymentName();
    Code:
       0: aload_0
       1: getfield      #25                 // Field deploymentName:Ljava/lang/String;
       4: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #15                 // Field createdSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: aload_0
       9: lconst_0
      10: putfield      #18                 // Field expiredSessionCount:J
      13: aload_0
      14: getfield      #16                 // Field rejectedSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
      17: lconst_0
      18: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      21: aload_0
      22: getstatic     #19                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
      25: putfield      #20                 // Field totalSessionLifetime:Ljava/math/BigInteger;
      28: aload_0
      29: invokestatic  #37                 // Method java/lang/System.currentTimeMillis:()J
      32: putfield      #38                 // Field startTime:J
      35: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          91
      24: aload_1
      25: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #43                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #6                  // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      43: astore_3
      44: aload_3
      45: invokevirtual #45                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.destroy:()V
      48: aload_3
      49: invokevirtual #46                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.getId:()Ljava/lang/String;
      52: ifnonnull     68
      55: aload_3
      56: aload_2
      57: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      62: checkcast     #48                 // class java/lang/String
      65: invokevirtual #49                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.setId:(Ljava/lang/String;)V
      68: aload_0
      69: getfield      #11                 // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
      72: aload_2
      73: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: checkcast     #50                 // class io/undertow/server/session/Session
      81: aconst_null
      82: getstatic     #51                 // Field io/undertow/server/session/SessionListener$SessionDestroyedReason.UNDEPLOY:Lio/undertow/server/session/SessionListener$SessionDestroyedReason;
      85: invokevirtual #52                 // Method io/undertow/server/session/SessionListeners.sessionDestroyed:(Lio/undertow/server/session/Session;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/session/SessionListener$SessionDestroyedReason;)V
      88: goto          15
      91: aload_0
      92: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      95: invokeinterface #53,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
     100: return

  public io.undertow.server.session.Session createSession(io.undertow.server.HttpServerExchange, io.undertow.server.session.SessionConfig);
    Code:
       0: aload_0
       1: getfield      #31                 // Field maxSize:I
       4: ifle          145
       7: aload_0
       8: getfield      #27                 // Field expireOldestUnusedSessionOnMax:Z
      11: ifeq          101
      14: aload_0
      15: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      18: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      23: aload_0
      24: getfield      #31                 // Field maxSize:I
      27: if_icmplt     145
      30: aload_0
      31: getfield      #33                 // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
      34: invokevirtual #55                 // Method io/undertow/util/ConcurrentDirectDeque.isEmpty:()Z
      37: ifne          145
      40: aload_0
      41: getfield      #33                 // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
      44: invokevirtual #56                 // Method io/undertow/util/ConcurrentDirectDeque.poll:()Ljava/lang/Object;
      47: checkcast     #48                 // class java/lang/String
      50: astore_3
      51: aload_3
      52: ifnonnull     58
      55: goto          145
      58: getstatic     #57                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      61: ldc           #58                 // String Removing session %s as max size has been hit
      63: aload_3
      64: invokeinterface #59,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      69: aload_0
      70: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      73: aload_3
      74: invokeinterface #60,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      79: checkcast     #6                  // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      82: astore        4
      84: aload         4
      86: ifnull        98
      89: aload         4
      91: aconst_null
      92: getstatic     #61                 // Field io/undertow/server/session/SessionListener$SessionDestroyedReason.TIMEOUT:Lio/undertow/server/session/SessionListener$SessionDestroyedReason;
      95: invokevirtual #62                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.invalidate:(Lio/undertow/server/HttpServerExchange;Lio/undertow/server/session/SessionListener$SessionDestroyedReason;)V
      98: goto          14
     101: aload_0
     102: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
     105: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
     110: aload_0
     111: getfield      #31                 // Field maxSize:I
     114: if_icmplt     145
     117: aload_0
     118: getfield      #26                 // Field statisticsEnabled:Z
     121: ifeq          132
     124: aload_0
     125: getfield      #16                 // Field rejectedSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
     128: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     131: pop2
     132: getstatic     #64                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     135: aload_0
     136: getfield      #31                 // Field maxSize:I
     139: invokeinterface #65,  2           // InterfaceMethod io/undertow/UndertowMessages.tooManySessions:(I)Ljava/lang/IllegalStateException;
     144: athrow
     145: aload_2
     146: ifnonnull     158
     149: getstatic     #64                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     152: invokeinterface #66,  1           // InterfaceMethod io/undertow/UndertowMessages.couldNotFindSessionCookieConfig:()Ljava/lang/IllegalStateException;
     157: athrow
     158: aload_2
     159: aload_1
     160: invokeinterface #67,  2           // InterfaceMethod io/undertow/server/session/SessionConfig.findSessionId:(Lio/undertow/server/HttpServerExchange;)Ljava/lang/String;
     165: astore_3
     166: new           #6                  // class io/undertow/server/session/InMemorySessionManager$SessionImpl
     169: dup
     170: aload_0
     171: aload_2
     172: aload_1
     173: invokevirtual #68                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
     176: aload_1
     177: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     180: invokevirtual #70                 // Method io/undertow/server/ServerConnection.getWorker:()Lorg/xnio/XnioWorker;
     183: aload_0
     184: getfield      #12                 // Field defaultSessionTimeout:I
     187: invokespecial #71                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl."<init>":(Lio/undertow/server/session/InMemorySessionManager;Lio/undertow/server/session/SessionConfig;Lorg/xnio/XnioIoThread;Lorg/xnio/XnioWorker;I)V
     190: astore        4
     192: aload_3
     193: ifnull        216
     196: aload_0
     197: aload_3
     198: aload         4
     200: invokevirtual #72                 // Method saveSessionID:(Ljava/lang/String;Lio/undertow/server/session/InMemorySessionManager$SessionImpl;)Z
     203: ifne          223
     206: getstatic     #64                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     209: aload_3
     210: invokeinterface #73,  2           // InterfaceMethod io/undertow/UndertowMessages.sessionWithIdAlreadyExists:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
     215: athrow
     216: aload_0
     217: aload         4
     219: invokevirtual #74                 // Method createAndSaveNewID:(Lio/undertow/server/session/InMemorySessionManager$SessionImpl;)Ljava/lang/String;
     222: astore_3
     223: aload         4
     225: aload_3
     226: invokevirtual #49                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.setId:(Ljava/lang/String;)V
     229: aload_0
     230: getfield      #33                 // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
     233: ifnull        249
     236: aload         4
     238: aload_0
     239: getfield      #33                 // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
     242: aload_3
     243: invokevirtual #75                 // Method io/undertow/util/ConcurrentDirectDeque.offerLastAndReturnToken:(Ljava/lang/Object;)Ljava/lang/Object;
     246: invokevirtual #76                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.setEvictionToken:(Ljava/lang/Object;)V
     249: getstatic     #77                 // Field io/undertow/UndertowLogger.SESSION_LOGGER:Lio/undertow/UndertowLogger;
     252: ldc           #78                 // String Created session with id %s for exchange %s
     254: aload_3
     255: aload_1
     256: invokeinterface #79,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     261: aload_2
     262: aload_1
     263: aload         4
     265: invokevirtual #46                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.getId:()Ljava/lang/String;
     268: invokeinterface #80,  3           // InterfaceMethod io/undertow/server/session/SessionConfig.setSessionId:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)V
     273: aload         4
     275: invokevirtual #81                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.bumpTimeout:()V
     278: aload_0
     279: getfield      #11                 // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
     282: aload         4
     284: aload_1
     285: invokevirtual #82                 // Method io/undertow/server/session/SessionListeners.sessionCreated:(Lio/undertow/server/session/Session;Lio/undertow/server/HttpServerExchange;)V
     288: aload_1
     289: aload_0
     290: getfield      #8                  // Field NEW_SESSION:Lio/undertow/util/AttachmentKey;
     293: aload         4
     295: invokevirtual #83                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
     298: pop
     299: aload_0
     300: getfield      #26                 // Field statisticsEnabled:Z
     303: ifeq          358
     306: aload_0
     307: getfield      #15                 // Field createdSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
     310: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     313: pop2
     314: aload_0
     315: getfield      #23                 // Field highestSessionCount:Ljava/util/concurrent/atomic/AtomicInteger;
     318: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     321: istore        5
     323: aload_0
     324: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
     327: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
     332: istore        6
     334: iload         6
     336: iload         5
     338: if_icmpgt     344
     341: goto          358
     344: aload_0
     345: getfield      #23                 // Field highestSessionCount:Ljava/util/concurrent/atomic/AtomicInteger;
     348: iload         5
     350: iload         6
     352: invokevirtual #85                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
     355: ifeq          314
     358: aload         4
     360: areturn

  private boolean saveSessionID(java.lang.String, io.undertow.server.session.InMemorySessionManager$SessionImpl);
    Code:
       0: aload_0
       1: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #86,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private java.lang.String createAndSaveNewID(io.undertow.server.session.InMemorySessionManager$SessionImpl);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        100
       5: if_icmpge     35
       8: aload_0
       9: getfield      #24                 // Field sessionIdGenerator:Lio/undertow/server/session/SessionIdGenerator;
      12: invokeinterface #87,  1           // InterfaceMethod io/undertow/server/session/SessionIdGenerator.createSessionId:()Ljava/lang/String;
      17: astore_3
      18: aload_0
      19: aload_3
      20: aload_1
      21: invokevirtual #72                 // Method saveSessionID:(Ljava/lang/String;Lio/undertow/server/session/InMemorySessionManager$SessionImpl;)Z
      24: ifeq          29
      27: aload_3
      28: areturn
      29: iinc          2, 1
      32: goto          2
      35: getstatic     #64                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      38: invokeinterface #88,  1           // InterfaceMethod io/undertow/UndertowMessages.couldNotGenerateUniqueSessionId:()Ljava/lang/RuntimeException;
      43: athrow

  public io.undertow.server.session.Session getSession(io.undertow.server.HttpServerExchange, io.undertow.server.session.SessionConfig);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_1
       5: aload_0
       6: getfield      #8                  // Field NEW_SESSION:Lio/undertow/util/AttachmentKey;
       9: invokevirtual #89                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      12: checkcast     #6                  // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      15: astore_3
      16: aload_3
      17: ifnull        22
      20: aload_3
      21: areturn
      22: goto          27
      25: aconst_null
      26: areturn
      27: aload_2
      28: aload_1
      29: invokeinterface #67,  2           // InterfaceMethod io/undertow/server/session/SessionConfig.findSessionId:(Lio/undertow/server/HttpServerExchange;)Ljava/lang/String;
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokevirtual #90                 // Method getSession:(Ljava/lang/String;)Lio/undertow/server/session/Session;
      40: checkcast     #6                  // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      43: astore        4
      45: aload         4
      47: ifnull        60
      50: aload_1
      51: ifnull        60
      54: aload         4
      56: aload_1
      57: invokevirtual #91                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.requestStarted:(Lio/undertow/server/HttpServerExchange;)V
      60: aload         4
      62: areturn

  public io.undertow.server.session.Session getSession(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      10: aload_1
      11: invokeinterface #60,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #6                  // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      19: astore_2
      20: aload_2
      21: ifnonnull     26
      24: aconst_null
      25: areturn
      26: aload_2
      27: invokevirtual #46                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.getId:()Ljava/lang/String;
      30: ifnonnull     38
      33: aload_2
      34: aload_1
      35: invokevirtual #49                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.setId:(Ljava/lang/String;)V
      38: aload_2
      39: areturn

  public synchronized void registerSessionListener(io.undertow.server.session.SessionListener);
    Code:
       0: getstatic     #77                 // Field io/undertow/UndertowLogger.SESSION_LOGGER:Lio/undertow/UndertowLogger;
       3: ldc           #92                 // String Registered session listener %s
       5: aload_1
       6: invokeinterface #59,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #11                 // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
      15: aload_1
      16: invokevirtual #93                 // Method io/undertow/server/session/SessionListeners.addSessionListener:(Lio/undertow/server/session/SessionListener;)V
      19: return

  public synchronized void removeSessionListener(io.undertow.server.session.SessionListener);
    Code:
       0: getstatic     #77                 // Field io/undertow/UndertowLogger.SESSION_LOGGER:Lio/undertow/UndertowLogger;
       3: ldc           #94                 // String Removed session listener %s
       5: aload_1
       6: invokeinterface #59,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #11                 // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
      15: aload_1
      16: invokevirtual #95                 // Method io/undertow/server/session/SessionListeners.removeSessionListener:(Lio/undertow/server/session/SessionListener;)Z
      19: pop
      20: return

  public void setDefaultSessionTimeout(int);
    Code:
       0: getstatic     #77                 // Field io/undertow/UndertowLogger.SESSION_LOGGER:Lio/undertow/UndertowLogger;
       3: ldc           #96                 // String Setting default session timeout to %s
       5: iload_1
       6: invokeinterface #97,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;I)V
      11: aload_0
      12: iload_1
      13: putfield      #12                 // Field defaultSessionTimeout:I
      16: return

  public java.util.Set<java.lang.String> getTransientSessions();
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method getAllSessions:()Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getActiveSessions();
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method getAllSessions:()Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getAllSessions();
    Code:
       0: new           #99                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #100,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      13: invokespecial #101                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #102                // class io/undertow/server/session/SessionManager
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #102                // class io/undertow/server/session/SessionManager
      13: astore_2
      14: aload_0
      15: getfield      #25                 // Field deploymentName:Ljava/lang/String;
      18: aload_2
      19: invokeinterface #103,  1          // InterfaceMethod io/undertow/server/session/SessionManager.getDeploymentName:()Ljava/lang/String;
      24: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #25                 // Field deploymentName:Ljava/lang/String;
       4: invokevirtual #105                // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #25                 // Field deploymentName:Ljava/lang/String;
       4: areturn

  public io.undertow.server.session.SessionManagerStatistics getStatistics();
    Code:
       0: aload_0
       1: areturn

  public long getCreatedSessionCount();
    Code:
       0: aload_0
       1: getfield      #15                 // Field createdSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getMaxActiveSessions();
    Code:
       0: aload_0
       1: getfield      #31                 // Field maxSize:I
       4: i2l
       5: lreturn

  public long getHighestSessionCount();
    Code:
       0: aload_0
       1: getfield      #23                 // Field highestSessionCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: i2l
       8: lreturn

  public long getActiveSessionCount();
    Code:
       0: aload_0
       1: getfield      #30                 // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: i2l
      10: lreturn

  public long getExpiredSessionCount();
    Code:
       0: aload_0
       1: getfield      #18                 // Field expiredSessionCount:J
       4: lreturn

  public long getRejectedSessions();
    Code:
       0: aload_0
       1: getfield      #16                 // Field rejectedSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getMaxSessionAliveTime();
    Code:
       0: aload_0
       1: getfield      #17                 // Field longestSessionLifetime:J
       4: lreturn

  public synchronized long getAverageSessionAliveTime();
    Code:
       0: aload_0
       1: getfield      #18                 // Field expiredSessionCount:J
       4: lconst_0
       5: lcmp
       6: ifne          11
       9: lconst_0
      10: lreturn
      11: new           #107                // class java/math/BigDecimal
      14: dup
      15: aload_0
      16: getfield      #20                 // Field totalSessionLifetime:Ljava/math/BigInteger;
      19: invokespecial #108                // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      22: aload_0
      23: getfield      #18                 // Field expiredSessionCount:J
      26: invokestatic  #109                // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
      29: getstatic     #110                // Field java/math/MathContext.DECIMAL128:Ljava/math/MathContext;
      32: invokevirtual #111                // Method java/math/BigDecimal.divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
      35: invokevirtual #112                // Method java/math/BigDecimal.longValue:()J
      38: lreturn

  public long getStartTime();
    Code:
       0: aload_0
       1: getfield      #38                 // Field startTime:J
       4: lreturn
}
