Compiled from "SSLSessionInfo.java"
public interface io.undertow.server.SSLSessionInfo {
  public static int calculateKeySize(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: ldc           #1                  // String TLS_AES_256_GCM_SHA384
       9: invokevirtual #2                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          19
      15: sipush        256
      18: ireturn
      19: aload_0
      20: ldc           #3                  // String TLS_CHACHA20_POLY1305_SHA256
      22: invokevirtual #2                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: sipush        256
      31: ireturn
      32: aload_0
      33: ldc           #4                  // String TLS_AES_128_
      35: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      38: ifeq          45
      41: sipush        128
      44: ireturn
      45: aload_0
      46: ldc           #6                  // String WITH_AES_128_
      48: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      51: ifeq          58
      54: sipush        128
      57: ireturn
      58: aload_0
      59: ldc           #8                  // String WITH_AES_256_
      61: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      64: ifeq          71
      67: sipush        256
      70: ireturn
      71: aload_0
      72: ldc           #9                  // String WITH_3DES_EDE_CBC_
      74: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      77: ifeq          84
      80: sipush        168
      83: ireturn
      84: aload_0
      85: ldc           #10                 // String WITH_RC4_128_
      87: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      90: ifeq          97
      93: sipush        128
      96: ireturn
      97: aload_0
      98: ldc           #11                 // String WITH_DES_CBC_
     100: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     103: ifeq          109
     106: bipush        56
     108: ireturn
     109: aload_0
     110: ldc           #12                 // String WITH_DES40_CBC_
     112: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     115: ifeq          121
     118: bipush        40
     120: ireturn
     121: aload_0
     122: ldc           #13                 // String WITH_RC4_40_
     124: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     127: ifeq          133
     130: bipush        40
     132: ireturn
     133: aload_0
     134: ldc           #14                 // String WITH_IDEA_CBC_
     136: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     139: ifeq          146
     142: sipush        128
     145: ireturn
     146: aload_0
     147: ldc           #15                 // String WITH_RC2_CBC_40_
     149: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     152: ifeq          158
     155: bipush        40
     157: ireturn
     158: iconst_0
     159: ireturn

  public abstract byte[] getSessionId();

  public abstract java.lang.String getCipherSuite();

  public default int getKeySize();
    Code:
       0: aload_0
       1: invokeinterface #16,  1           // InterfaceMethod getCipherSuite:()Ljava/lang/String;
       6: invokestatic  #17                 // InterfaceMethod calculateKeySize:(Ljava/lang/String;)I
       9: ireturn

  public abstract java.security.cert.Certificate[] getPeerCertificates() throws javax.net.ssl.SSLPeerUnverifiedException, io.undertow.server.RenegotiationRequiredException;

  public abstract javax.security.cert.X509Certificate[] getPeerCertificateChain() throws javax.net.ssl.SSLPeerUnverifiedException, io.undertow.server.RenegotiationRequiredException;

  public abstract void renegotiate(io.undertow.server.HttpServerExchange, org.xnio.SslClientAuthMode) throws java.io.IOException;

  public abstract javax.net.ssl.SSLSession getSSLSession();
}
