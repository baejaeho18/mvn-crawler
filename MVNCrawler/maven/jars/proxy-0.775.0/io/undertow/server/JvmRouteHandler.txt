Compiled from "JvmRouteHandler.java"
public class io.undertow.server.JvmRouteHandler implements io.undertow.server.HttpHandler {
  private final io.undertow.server.HttpHandler next;

  private final java.lang.String sessionCookieName;

  private final java.lang.String jvmRoute;

  private final io.undertow.server.JvmRouteHandler$JvmRouteWrapper wrapper;

  public io.undertow.server.JvmRouteHandler(io.undertow.server.HttpHandler, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/server/JvmRouteHandler$JvmRouteWrapper
       8: dup
       9: aload_0
      10: invokespecial #3                  // Method io/undertow/server/JvmRouteHandler$JvmRouteWrapper."<init>":(Lio/undertow/server/JvmRouteHandler;)V
      13: putfield      #4                  // Field wrapper:Lio/undertow/server/JvmRouteHandler$JvmRouteWrapper;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field next:Lio/undertow/server/HttpHandler;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field sessionCookieName:Ljava/lang/String;
      26: aload_0
      27: aload_3
      28: putfield      #7                  // Field jvmRoute:Ljava/lang/String;
      31: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.requestCookies:()Ljava/lang/Iterable;
       4: invokeinterface #9,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          86
      19: aload_2
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #12                 // class io/undertow/server/handlers/Cookie
      28: astore_3
      29: aload_0
      30: getfield      #6                  // Field sessionCookieName:Ljava/lang/String;
      33: aload_3
      34: invokeinterface #13,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getName:()Ljava/lang/String;
      39: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          83
      45: aload_3
      46: invokeinterface #15,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      51: bipush        46
      53: invokevirtual #16                 // Method java/lang/String.indexOf:(I)I
      56: istore        4
      58: iload         4
      60: iconst_m1
      61: if_icmpeq     83
      64: aload_3
      65: aload_3
      66: invokeinterface #15,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      71: iconst_0
      72: iload         4
      74: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      77: invokeinterface #18,  2           // InterfaceMethod io/undertow/server/handlers/Cookie.setValue:(Ljava/lang/String;)Lio/undertow/server/handlers/Cookie;
      82: pop
      83: goto          10
      86: aload_1
      87: aload_0
      88: getfield      #4                  // Field wrapper:Lio/undertow/server/JvmRouteHandler$JvmRouteWrapper;
      91: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.addResponseWrapper:(Lio/undertow/server/ConduitWrapper;)Lio/undertow/server/HttpServerExchange;
      94: pop
      95: aload_0
      96: getfield      #5                  // Field next:Lio/undertow/server/HttpHandler;
      99: aload_1
     100: invokeinterface #20,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     105: return
}
