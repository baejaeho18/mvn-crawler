Compiled from "GzipStreamSourceConduit.java"
public class io.undertow.conduits.GzipStreamSourceConduit extends io.undertow.conduits.InflatingStreamSourceConduit {
  public static final io.undertow.server.ConduitWrapper<org.xnio.conduits.StreamSourceConduit> WRAPPER;

  private static final int GZIP_MAGIC;

  private static final byte[] HEADER;

  private final java.util.zip.CRC32 crc;

  private int totalOut;

  private int headerRead;

  private int footerRead;

  byte[] expectedFooter;

  public io.undertow.conduits.GzipStreamSourceConduit(io.undertow.server.HttpServerExchange, org.xnio.conduits.StreamSourceConduit);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method io/undertow/conduits/InflatingStreamSourceConduit."<init>":(Lio/undertow/server/HttpServerExchange;Lorg/xnio/conduits/StreamSourceConduit;)V
       6: aload_0
       7: new           #2                  // class java/util/zip/CRC32
      10: dup
      11: invokespecial #3                  // Method java/util/zip/CRC32."<init>":()V
      14: putfield      #4                  // Field crc:Ljava/util/zip/CRC32;
      17: aload_0
      18: iconst_0
      19: putfield      #5                  // Field headerRead:I
      22: aload_0
      23: iconst_0
      24: putfield      #6                  // Field footerRead:I
      27: return

  public io.undertow.conduits.GzipStreamSourceConduit(io.undertow.server.HttpServerExchange, org.xnio.conduits.StreamSourceConduit, io.undertow.util.ObjectPool<java.util.zip.Inflater>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method io/undertow/conduits/InflatingStreamSourceConduit."<init>":(Lio/undertow/server/HttpServerExchange;Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/util/ObjectPool;)V
       7: aload_0
       8: new           #2                  // class java/util/zip/CRC32
      11: dup
      12: invokespecial #3                  // Method java/util/zip/CRC32."<init>":()V
      15: putfield      #4                  // Field crc:Ljava/util/zip/CRC32;
      18: aload_0
      19: iconst_0
      20: putfield      #5                  // Field headerRead:I
      23: aload_0
      24: iconst_0
      25: putfield      #6                  // Field footerRead:I
      28: return

  protected boolean readHeader(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field headerRead:I
       4: getstatic     #8                  // Field HEADER:[B
       7: arraylength
       8: if_icmpge     87
      11: aload_1
      12: invokevirtual #9                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      15: ifeq          87
      18: aload_1
      19: invokevirtual #10                 // Method java/nio/ByteBuffer.get:()B
      22: istore_2
      23: aload_0
      24: getfield      #5                  // Field headerRead:I
      27: ifne          48
      30: iload_2
      31: getstatic     #8                  // Field HEADER:[B
      34: iconst_0
      35: baload
      36: if_icmpeq     48
      39: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      42: invokeinterface #12,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidGzipHeader:()Ljava/io/IOException;
      47: athrow
      48: aload_0
      49: getfield      #5                  // Field headerRead:I
      52: iconst_1
      53: if_icmpne     74
      56: iload_2
      57: getstatic     #8                  // Field HEADER:[B
      60: iconst_1
      61: baload
      62: if_icmpeq     74
      65: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      68: invokeinterface #12,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidGzipHeader:()Ljava/io/IOException;
      73: athrow
      74: aload_0
      75: dup
      76: getfield      #5                  // Field headerRead:I
      79: iconst_1
      80: iadd
      81: putfield      #5                  // Field headerRead:I
      84: goto          0
      87: aload_0
      88: getfield      #5                  // Field headerRead:I
      91: getstatic     #8                  // Field HEADER:[B
      94: arraylength
      95: if_icmpne     102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: ireturn

  protected void readFooter(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field expectedFooter:[B
       4: ifnonnull     128
       7: bipush        8
       9: newarray       byte
      11: astore_2
      12: aload_0
      13: getfield      #4                  // Field crc:Ljava/util/zip/CRC32;
      16: invokevirtual #14                 // Method java/util/zip/CRC32.getValue:()J
      19: l2i
      20: istore_3
      21: aload_0
      22: getfield      #15                 // Field totalOut:I
      25: istore        4
      27: aload_2
      28: iconst_0
      29: iload_3
      30: sipush        255
      33: iand
      34: i2b
      35: bastore
      36: aload_2
      37: iconst_1
      38: iload_3
      39: bipush        8
      41: ishr
      42: sipush        255
      45: iand
      46: i2b
      47: bastore
      48: aload_2
      49: iconst_2
      50: iload_3
      51: bipush        16
      53: ishr
      54: sipush        255
      57: iand
      58: i2b
      59: bastore
      60: aload_2
      61: iconst_3
      62: iload_3
      63: bipush        24
      65: ishr
      66: sipush        255
      69: iand
      70: i2b
      71: bastore
      72: aload_2
      73: iconst_4
      74: iload         4
      76: sipush        255
      79: iand
      80: i2b
      81: bastore
      82: aload_2
      83: iconst_5
      84: iload         4
      86: bipush        8
      88: ishr
      89: sipush        255
      92: iand
      93: i2b
      94: bastore
      95: aload_2
      96: bipush        6
      98: iload         4
     100: bipush        16
     102: ishr
     103: sipush        255
     106: iand
     107: i2b
     108: bastore
     109: aload_2
     110: bipush        7
     112: iload         4
     114: bipush        24
     116: ishr
     117: sipush        255
     120: iand
     121: i2b
     122: bastore
     123: aload_0
     124: aload_2
     125: putfield      #13                 // Field expectedFooter:[B
     128: aload_1
     129: invokevirtual #9                  // Method java/nio/ByteBuffer.hasRemaining:()Z
     132: ifeq          184
     135: aload_0
     136: getfield      #6                  // Field footerRead:I
     139: aload_0
     140: getfield      #13                 // Field expectedFooter:[B
     143: arraylength
     144: if_icmpge     184
     147: aload_1
     148: invokevirtual #10                 // Method java/nio/ByteBuffer.get:()B
     151: istore_2
     152: aload_0
     153: getfield      #13                 // Field expectedFooter:[B
     156: aload_0
     157: dup
     158: getfield      #6                  // Field footerRead:I
     161: dup_x1
     162: iconst_1
     163: iadd
     164: putfield      #6                  // Field footerRead:I
     167: baload
     168: iload_2
     169: if_icmpeq     181
     172: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     175: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidGZIPFooter:()Ljava/io/IOException;
     180: athrow
     181: goto          128
     184: aload_1
     185: invokevirtual #9                  // Method java/nio/ByteBuffer.hasRemaining:()Z
     188: ifeq          212
     191: aload_0
     192: getfield      #6                  // Field footerRead:I
     195: aload_0
     196: getfield      #13                 // Field expectedFooter:[B
     199: arraylength
     200: if_icmpne     212
     203: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     206: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidGZIPFooter:()Ljava/io/IOException;
     211: athrow
     212: return

  protected void dataDeflated(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field crc:Ljava/util/zip/CRC32;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #17                 // Method java/util/zip/CRC32.update:([BII)V
      10: aload_0
      11: dup
      12: getfield      #15                 // Field totalOut:I
      15: iload_3
      16: iadd
      17: putfield      #15                 // Field totalOut:I
      20: return

  static {};
    Code:
       0: new           #18                 // class io/undertow/conduits/GzipStreamSourceConduit$1
       3: dup
       4: invokespecial #19                 // Method io/undertow/conduits/GzipStreamSourceConduit$1."<init>":()V
       7: putstatic     #20                 // Field WRAPPER:Lio/undertow/server/ConduitWrapper;
      10: bipush        10
      12: newarray       byte
      14: dup
      15: iconst_0
      16: bipush        31
      18: bastore
      19: dup
      20: iconst_1
      21: bipush        -117
      23: bastore
      24: dup
      25: iconst_2
      26: bipush        8
      28: bastore
      29: dup
      30: iconst_3
      31: iconst_0
      32: bastore
      33: dup
      34: iconst_4
      35: iconst_0
      36: bastore
      37: dup
      38: iconst_5
      39: iconst_0
      40: bastore
      41: dup
      42: bipush        6
      44: iconst_0
      45: bastore
      46: dup
      47: bipush        7
      49: iconst_0
      50: bastore
      51: dup
      52: bipush        8
      54: iconst_0
      55: bastore
      56: dup
      57: bipush        9
      59: iconst_0
      60: bastore
      61: putstatic     #8                  // Field HEADER:[B
      64: return
}
