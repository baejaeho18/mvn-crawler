Compiled from "ChunkedStreamSinkConduit.java"
public class io.undertow.conduits.ChunkedStreamSinkConduit extends org.xnio.conduits.AbstractStreamSinkConduit<org.xnio.conduits.StreamSinkConduit> {
  public static final io.undertow.util.AttachmentKey<io.undertow.util.HeaderMap> TRAILERS;

  private final io.undertow.util.HeaderMap responseHeaders;

  private final io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSinkConduit> finishListener;

  private final int config;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private static final byte[] LAST_CHUNK;

  private static final byte[] CRLF;

  private final io.undertow.util.Attachable attachable;

  private int state;

  private int chunkleft;

  private final java.nio.ByteBuffer chunkingBuffer;

  private final java.nio.ByteBuffer chunkingSepBuffer;

  private io.undertow.connector.PooledByteBuffer lastChunkBuffer;

  private static final int CONF_FLAG_CONFIGURABLE;

  private static final int CONF_FLAG_PASS_CLOSE;

  private static final int FLAG_WRITES_SHUTDOWN;

  private static final int FLAG_NEXT_SHUTDOWN;

  private static final int FLAG_WRITTEN_FIRST_CHUNK;

  private static final int FLAG_FIRST_DATA_WRITTEN;

  private static final int FLAG_FINISHED;

  private static final byte[] DIGITS;

  public io.undertow.conduits.ChunkedStreamSinkConduit(org.xnio.conduits.StreamSinkConduit, io.undertow.connector.ByteBufferPool, boolean, boolean, io.undertow.util.HeaderMap, io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSinkConduit>, io.undertow.util.Attachable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/xnio/conduits/AbstractStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field chunkleft:I
      10: aload_0
      11: bipush        12
      13: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      16: putfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      24: aload_0
      25: aload         5
      27: putfield      #6                  // Field responseHeaders:Lio/undertow/util/HeaderMap;
      30: aload_0
      31: aload         6
      33: putfield      #7                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      36: aload_0
      37: aload         7
      39: putfield      #8                  // Field attachable:Lio/undertow/util/Attachable;
      42: aload_0
      43: iload_3
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: iload         4
      54: ifeq          61
      57: iconst_2
      58: goto          62
      61: iconst_0
      62: ior
      63: putfield      #10                 // Field config:I
      66: aload_0
      67: iconst_2
      68: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      71: putfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      74: aload_0
      75: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      78: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      81: pop
      82: return

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method doWrite:(Ljava/nio/ByteBuffer;)I
       5: ireturn

  int doWrite(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field state:I
       4: iconst_1
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #16                 // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #17                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_1
      20: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: dup
      30: getfield      #14                 // Field state:I
      33: bipush        16
      35: ior
      36: putfield      #14                 // Field state:I
      39: aload_1
      40: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:()I
      43: istore_2
      44: iconst_0
      45: istore_3
      46: aload_0
      47: getfield      #2                  // Field chunkleft:I
      50: ifne          150
      53: aload_0
      54: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      57: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      60: ifne          150
      63: aload_0
      64: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      67: invokevirtual #21                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      70: pop
      71: aload_0
      72: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      75: aload_1
      76: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      79: invokestatic  #22                 // Method putIntAsHexString:(Ljava/nio/ByteBuffer;I)V
      82: aload_0
      83: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      86: getstatic     #23                 // Field CRLF:[B
      89: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      92: pop
      93: aload_0
      94: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      97: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     100: pop
     101: aload_0
     102: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     105: invokevirtual #21                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     108: pop
     109: aload_0
     110: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     113: getstatic     #23                 // Field CRLF:[B
     116: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     119: pop
     120: aload_0
     121: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     124: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     127: pop
     128: aload_0
     129: dup
     130: getfield      #14                 // Field state:I
     133: bipush        8
     135: ior
     136: putfield      #14                 // Field state:I
     139: aload_0
     140: aload_1
     141: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     144: putfield      #2                  // Field chunkleft:I
     147: goto          177
     150: aload_1
     151: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     154: aload_0
     155: getfield      #2                  // Field chunkleft:I
     158: if_icmple     177
     161: iconst_1
     162: istore_3
     163: aload_1
     164: aload_0
     165: getfield      #2                  // Field chunkleft:I
     168: aload_1
     169: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     172: iadd
     173: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     176: pop
     177: aload_0
     178: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
     181: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     184: istore        4
     186: aload_0
     187: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     190: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     193: istore        5
     195: iload         4
     197: ifgt          212
     200: iload         5
     202: ifgt          212
     205: aload_0
     206: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     209: ifnull        464
     212: aload_1
     213: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     216: istore        6
     218: aload_0
     219: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     222: ifnull        229
     225: iload_3
     226: ifeq          276
     229: iconst_3
     230: anewarray     #28                 // class java/nio/ByteBuffer
     233: dup
     234: iconst_0
     235: aload_0
     236: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
     239: aastore
     240: dup
     241: iconst_1
     242: aload_1
     243: aastore
     244: dup
     245: iconst_2
     246: aload_0
     247: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     250: aastore
     251: astore        9
     253: aload_0
     254: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     257: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     260: aload         9
     262: iconst_0
     263: aload         9
     265: arraylength
     266: invokeinterface #31,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
     271: lstore        7
     273: goto          410
     276: iconst_3
     277: anewarray     #28                 // class java/nio/ByteBuffer
     280: dup
     281: iconst_0
     282: aload_0
     283: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
     286: aastore
     287: dup
     288: iconst_1
     289: aload_1
     290: aastore
     291: dup
     292: iconst_2
     293: aload_0
     294: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     297: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     302: aastore
     303: astore        9
     305: aload_0
     306: getfield      #14                 // Field state:I
     309: iconst_2
     310: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
     313: ifeq          339
     316: aload_0
     317: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     320: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     323: aload         9
     325: iconst_0
     326: aload         9
     328: arraylength
     329: invokeinterface #33,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.writeFinal:([Ljava/nio/ByteBuffer;II)J
     334: lstore        7
     336: goto          359
     339: aload_0
     340: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     343: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     346: aload         9
     348: iconst_0
     349: aload         9
     351: arraylength
     352: invokeinterface #31,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
     357: lstore        7
     359: aload_1
     360: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     363: ifne          376
     366: aload_0
     367: dup
     368: getfield      #14                 // Field state:I
     371: iconst_1
     372: ior
     373: putfield      #14                 // Field state:I
     376: aload_0
     377: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     380: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     385: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     388: ifne          410
     391: aload_0
     392: dup
     393: getfield      #14                 // Field state:I
     396: iconst_4
     397: ior
     398: putfield      #14                 // Field state:I
     401: aload_0
     402: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     405: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     410: iload         6
     412: aload_1
     413: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     416: isub
     417: istore        9
     419: aload_0
     420: dup
     421: getfield      #2                  // Field chunkleft:I
     424: iload         9
     426: isub
     427: putfield      #2                  // Field chunkleft:I
     430: lload         7
     432: iload         4
     434: i2l
     435: lcmp
     436: ifge          451
     439: iconst_0
     440: istore        10
     442: aload_1
     443: iload_2
     444: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     447: pop
     448: iload         10
     450: ireturn
     451: iload         9
     453: istore        10
     455: aload_1
     456: iload_2
     457: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     460: pop
     461: iload         10
     463: ireturn
     464: aload_0
     465: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     468: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     471: aload_1
     472: invokeinterface #35,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
     477: istore        6
     479: aload_0
     480: dup
     481: getfield      #2                  // Field chunkleft:I
     484: iload         6
     486: isub
     487: putfield      #2                  // Field chunkleft:I
     490: iload         6
     492: istore        7
     494: aload_1
     495: iload_2
     496: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     499: pop
     500: iload         7
     502: ireturn
     503: astore        11
     505: aload_1
     506: iload_2
     507: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     510: pop
     511: aload         11
     513: athrow
    Exception table:
       from    to  target type
         177   442   503   any
         451   455   503   any
         464   494   503   any
         503   505   503   any

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        16
       7: aload_0
       8: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
      11: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      16: aload_0
      17: getfield      #14                 // Field state:I
      20: bipush        32
      22: invokestatic  #36                 // Method org/xnio/Bits.allAreClear:(II)Z
      25: ifeq          32
      28: aload_0
      29: invokevirtual #37                 // Method invokeFinishListener:()V
      32: aload_0
      33: invokespecial #38                 // Method org/xnio/conduits/AbstractStreamSinkConduit.truncateWrites:()V
      36: goto          46
      39: astore_1
      40: aload_0
      41: invokespecial #38                 // Method org/xnio/conduits/AbstractStreamSinkConduit.truncateWrites:()V
      44: aload_1
      45: athrow
      46: return
    Exception table:
       from    to  target type
           0    32    39   any

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     39
       9: aload_1
      10: iload_2
      11: iload         4
      13: iadd
      14: aaload
      15: astore        5
      17: aload         5
      19: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      22: ifeq          33
      25: aload_0
      26: aload         5
      28: invokevirtual #39                 // Method write:(Ljava/nio/ByteBuffer;)I
      31: i2l
      32: lreturn
      33: iinc          4, 1
      36: goto          3
      39: lconst_0
      40: lreturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #40                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          13
       7: aload_0
       8: invokevirtual #41                 // Method terminateWrites:()V
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
      17: ifnonnull     25
      20: aload_0
      21: iconst_1
      22: invokevirtual #42                 // Method createLastChunk:(Z)V
      25: aload_0
      26: aload_1
      27: invokevirtual #13                 // Method doWrite:(Ljava/nio/ByteBuffer;)I
      30: ireturn

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field state:I
       4: iconst_1
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #16                 // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #17                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_1
      20: lload_2
      21: lload         4
      23: new           #43                 // class org/xnio/conduits/ConduitWritableByteChannel
      26: dup
      27: aload_0
      28: invokespecial #44                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      31: invokevirtual #45                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      34: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field state:I
       4: iconst_1
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #16                 // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #17                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_1
      20: lload_2
      21: aload         4
      23: new           #43                 // class org/xnio/conduits/ConduitWritableByteChannel
      26: dup
      27: aload_0
      28: invokespecial #44                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      31: invokestatic  #46                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      34: lreturn

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #14                 // Field state:I
       5: bipush        16
       7: ior
       8: putfield      #14                 // Field state:I
      11: aload_0
      12: getfield      #14                 // Field state:I
      15: iconst_1
      16: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      19: ifeq          184
      22: aload_0
      23: getfield      #14                 // Field state:I
      26: iconst_4
      27: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      30: ifeq          68
      33: aload_0
      34: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
      37: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
      40: invokeinterface #47,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      45: istore_1
      46: iload_1
      47: ifeq          66
      50: aload_0
      51: getfield      #14                 // Field state:I
      54: bipush        32
      56: invokestatic  #36                 // Method org/xnio/Bits.allAreClear:(II)Z
      59: ifeq          66
      62: aload_0
      63: invokevirtual #37                 // Method invokeFinishListener:()V
      66: iload_1
      67: ireturn
      68: aload_0
      69: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
      72: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
      75: aload_0
      76: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
      79: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      84: invokeinterface #35,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      89: pop
      90: aload_0
      91: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
      94: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      99: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     102: ifne          182
     105: aload_0
     106: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     109: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     114: aload_0
     115: getfield      #10                 // Field config:I
     118: iconst_2
     119: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
     122: ifeq          137
     125: aload_0
     126: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     129: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     132: invokeinterface #48,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
     137: aload_0
     138: dup
     139: getfield      #14                 // Field state:I
     142: iconst_4
     143: ior
     144: putfield      #14                 // Field state:I
     147: aload_0
     148: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     151: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     154: invokeinterface #47,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     159: istore_1
     160: iload_1
     161: ifeq          180
     164: aload_0
     165: getfield      #14                 // Field state:I
     168: bipush        32
     170: invokestatic  #36                 // Method org/xnio/Bits.allAreClear:(II)Z
     173: ifeq          180
     176: aload_0
     177: invokevirtual #37                 // Method invokeFinishListener:()V
     180: iload_1
     181: ireturn
     182: iconst_0
     183: ireturn
     184: aload_0
     185: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     188: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     191: invokeinterface #47,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     196: ireturn

  private void invokeFinishListener();
    Code:
       0: aload_0
       1: dup
       2: getfield      #14                 // Field state:I
       5: bipush        32
       7: ior
       8: putfield      #14                 // Field state:I
      11: aload_0
      12: getfield      #7                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      15: ifnull        28
      18: aload_0
      19: getfield      #7                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      22: aload_0
      23: invokeinterface #49,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
      28: return

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field state:I
       4: iconst_1
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: getfield      #14                 // Field state:I
      16: bipush        16
      18: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      21: ifne          102
      24: aload_0
      25: getfield      #6                  // Field responseHeaders:Lio/undertow/util/HeaderMap;
      28: getstatic     #50                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      31: ldc           #51                 // String 0
      33: invokevirtual #52                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      36: pop
      37: aload_0
      38: getfield      #6                  // Field responseHeaders:Lio/undertow/util/HeaderMap;
      41: getstatic     #53                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      44: invokevirtual #54                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
      47: pop
      48: aload_0
      49: dup
      50: getfield      #14                 // Field state:I
      53: iconst_5
      54: ior
      55: putfield      #14                 // Field state:I
      58: aload_0
      59: invokevirtual #55                 // Method flush:()Z
      62: pop
      63: goto          76
      66: astore_1
      67: getstatic     #57                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      70: aload_1
      71: invokeinterface #58,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
      76: aload_0
      77: getfield      #14                 // Field state:I
      80: iconst_2
      81: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      84: ifeq          135
      87: aload_0
      88: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
      91: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
      94: invokeinterface #48,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
      99: goto          135
     102: aload_0
     103: iconst_0
     104: invokevirtual #42                 // Method createLastChunk:(Z)V
     107: aload_0
     108: dup
     109: getfield      #14                 // Field state:I
     112: iconst_1
     113: ior
     114: putfield      #14                 // Field state:I
     117: aload_0
     118: invokevirtual #55                 // Method flush:()Z
     121: pop
     122: goto          135
     125: astore_1
     126: getstatic     #57                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     129: aload_1
     130: invokeinterface #58,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     135: aload_0
     136: getfield      #2                  // Field chunkleft:I
     139: ifeq          168
     142: getstatic     #57                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     145: ldc           #59                 // String Channel closed mid-chunk
     147: iconst_0
     148: anewarray     #60                 // class java/lang/Object
     151: invokeinterface #61,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;[Ljava/lang/Object;)V
     156: aload_0
     157: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     160: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     163: invokeinterface #62,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.truncateWrites:()V
     168: return
    Exception table:
       from    to  target type
          58    63    66   Class java/io/IOException
         117   122   125   Class java/io/IOException

  private void createLastChunk(boolean) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #63,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
       9: astore_2
      10: aload_2
      11: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: astore_3
      17: iload_1
      18: ifeq          32
      21: aload_3
      22: getstatic     #23                 // Field CRLF:[B
      25: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      28: pop
      29: goto          51
      32: aload_0
      33: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      36: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      39: ifeq          51
      42: aload_3
      43: aload_0
      44: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      47: invokevirtual #64                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      50: pop
      51: aload_3
      52: getstatic     #65                 // Field LAST_CHUNK:[B
      55: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      58: pop
      59: aload_0
      60: getfield      #8                  // Field attachable:Lio/undertow/util/Attachable;
      63: getstatic     #66                 // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILERS:Lio/undertow/util/AttachmentKey;
      66: invokeinterface #67,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      71: checkcast     #68                 // class io/undertow/util/HeaderMap
      74: astore        4
      76: aload_0
      77: getfield      #8                  // Field attachable:Lio/undertow/util/Attachable;
      80: getstatic     #69                 // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILER_SUPPLIER:Lio/undertow/util/AttachmentKey;
      83: invokeinterface #67,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      88: checkcast     #70                 // class java/util/function/Supplier
      91: astore        6
      93: aload         4
      95: ifnull        110
      98: aload         6
     100: ifnonnull     110
     103: aload         4
     105: astore        5
     107: goto          207
     110: aload         4
     112: ifnonnull     135
     115: aload         6
     117: ifnull        135
     120: aload         6
     122: invokeinterface #71,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     127: checkcast     #68                 // class io/undertow/util/HeaderMap
     130: astore        5
     132: goto          207
     135: aload         4
     137: ifnull        204
     140: aload         6
     142: invokeinterface #71,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     147: checkcast     #68                 // class io/undertow/util/HeaderMap
     150: astore        7
     152: aload         7
     154: invokevirtual #72                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
     157: astore        8
     159: aload         8
     161: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     166: ifeq          197
     169: aload         8
     171: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     176: checkcast     #75                 // class io/undertow/util/HeaderValues
     179: astore        9
     181: aload         4
     183: aload         9
     185: invokevirtual #76                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     188: aload         9
     190: invokevirtual #77                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
     193: pop
     194: goto          159
     197: aload         4
     199: astore        5
     201: goto          207
     204: aconst_null
     205: astore        5
     207: aload         5
     209: ifnull        339
     212: aload         5
     214: invokevirtual #78                 // Method io/undertow/util/HeaderMap.size:()I
     217: ifeq          339
     220: aload         5
     222: invokevirtual #72                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
     225: astore        7
     227: aload         7
     229: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     234: ifeq          328
     237: aload         7
     239: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     244: checkcast     #75                 // class io/undertow/util/HeaderValues
     247: astore        8
     249: aload         8
     251: invokevirtual #79                 // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
     254: astore        9
     256: aload         9
     258: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     263: ifeq          325
     266: aload         9
     268: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     273: checkcast     #80                 // class java/lang/String
     276: astore        10
     278: aload         8
     280: invokevirtual #76                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     283: aload_3
     284: invokevirtual #81                 // Method io/undertow/util/HttpString.appendTo:(Ljava/nio/ByteBuffer;)V
     287: aload_3
     288: bipush        58
     290: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     293: pop
     294: aload_3
     295: bipush        32
     297: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     300: pop
     301: aload_3
     302: aload         10
     304: getstatic     #83                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
     307: invokevirtual #84                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     310: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     313: pop
     314: aload_3
     315: getstatic     #23                 // Field CRLF:[B
     318: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     321: pop
     322: goto          256
     325: goto          227
     328: aload_3
     329: getstatic     #23                 // Field CRLF:[B
     332: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     335: pop
     336: goto          347
     339: aload_3
     340: getstatic     #23                 // Field CRLF:[B
     343: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     346: pop
     347: aload_3
     348: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     351: pop
     352: aload_3
     353: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     356: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     359: astore        7
     361: aload         7
     363: aload_3
     364: invokevirtual #64                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     367: pop
     368: aload         7
     370: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     373: pop
     374: aload_0
     375: new           #85                 // class io/undertow/util/ImmediatePooledByteBuffer
     378: dup
     379: aload         7
     381: invokespecial #86                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
     384: putfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     387: aload_2
     388: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     393: return

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
       4: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
       7: invokeinterface #87,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
      12: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
       4: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
       7: lload_1
       8: aload_3
       9: invokeinterface #88,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      14: return

  private static void putIntAsHexString(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: bipush        24
       3: ishr
       4: i2b
       5: istore_2
       6: iload_1
       7: bipush        16
       9: ishr
      10: i2b
      11: istore_3
      12: iload_1
      13: bipush        8
      15: ishr
      16: i2b
      17: istore        4
      19: iload_1
      20: i2b
      21: istore        5
      23: iconst_0
      24: istore        6
      26: iload_2
      27: ifeq          60
      30: aload_0
      31: getstatic     #89                 // Field DIGITS:[B
      34: sipush        240
      37: iload_2
      38: iand
      39: iconst_4
      40: iushr
      41: baload
      42: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      45: getstatic     #89                 // Field DIGITS:[B
      48: bipush        15
      50: iload_2
      51: iand
      52: baload
      53: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      56: pop
      57: iconst_1
      58: istore        6
      60: iload         6
      62: ifne          69
      65: iload_3
      66: ifeq          99
      69: aload_0
      70: getstatic     #89                 // Field DIGITS:[B
      73: sipush        240
      76: iload_3
      77: iand
      78: iconst_4
      79: iushr
      80: baload
      81: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      84: getstatic     #89                 // Field DIGITS:[B
      87: bipush        15
      89: iload_3
      90: iand
      91: baload
      92: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      95: pop
      96: iconst_1
      97: istore        6
      99: iload         6
     101: ifne          109
     104: iload         4
     106: ifeq          138
     109: aload_0
     110: getstatic     #89                 // Field DIGITS:[B
     113: sipush        240
     116: iload         4
     118: iand
     119: iconst_4
     120: iushr
     121: baload
     122: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     125: getstatic     #89                 // Field DIGITS:[B
     128: bipush        15
     130: iload         4
     132: iand
     133: baload
     134: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     137: pop
     138: aload_0
     139: getstatic     #89                 // Field DIGITS:[B
     142: sipush        240
     145: iload         5
     147: iand
     148: iconst_4
     149: iushr
     150: baload
     151: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     154: getstatic     #89                 // Field DIGITS:[B
     157: bipush        15
     159: iload         5
     161: iand
     162: baload
     163: invokevirtual #82                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     166: pop
     167: return

  static {};
    Code:
       0: getstatic     #66                 // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILERS:Lio/undertow/util/AttachmentKey;
       3: putstatic     #90                 // Field TRAILERS:Lio/undertow/util/AttachmentKey;
       6: iconst_3
       7: newarray       byte
       9: dup
      10: iconst_0
      11: bipush        48
      13: bastore
      14: dup
      15: iconst_1
      16: bipush        13
      18: bastore
      19: dup
      20: iconst_2
      21: bipush        10
      23: bastore
      24: putstatic     #65                 // Field LAST_CHUNK:[B
      27: iconst_2
      28: newarray       byte
      30: dup
      31: iconst_0
      32: bipush        13
      34: bastore
      35: dup
      36: iconst_1
      37: bipush        10
      39: bastore
      40: putstatic     #23                 // Field CRLF:[B
      43: bipush        16
      45: newarray       byte
      47: dup
      48: iconst_0
      49: bipush        48
      51: bastore
      52: dup
      53: iconst_1
      54: bipush        49
      56: bastore
      57: dup
      58: iconst_2
      59: bipush        50
      61: bastore
      62: dup
      63: iconst_3
      64: bipush        51
      66: bastore
      67: dup
      68: iconst_4
      69: bipush        52
      71: bastore
      72: dup
      73: iconst_5
      74: bipush        53
      76: bastore
      77: dup
      78: bipush        6
      80: bipush        54
      82: bastore
      83: dup
      84: bipush        7
      86: bipush        55
      88: bastore
      89: dup
      90: bipush        8
      92: bipush        56
      94: bastore
      95: dup
      96: bipush        9
      98: bipush        57
     100: bastore
     101: dup
     102: bipush        10
     104: bipush        97
     106: bastore
     107: dup
     108: bipush        11
     110: bipush        98
     112: bastore
     113: dup
     114: bipush        12
     116: bipush        99
     118: bastore
     119: dup
     120: bipush        13
     122: bipush        100
     124: bastore
     125: dup
     126: bipush        14
     128: bipush        101
     130: bastore
     131: dup
     132: bipush        15
     134: bipush        102
     136: bastore
     137: putstatic     #89                 // Field DIGITS:[B
     140: return
}
