Compiled from "ChunkedStreamSourceConduit.java"
public class io.undertow.conduits.ChunkedStreamSourceConduit extends org.xnio.conduits.AbstractStreamSourceConduit<org.xnio.conduits.StreamSourceConduit> {
  public static final io.undertow.util.AttachmentKey<io.undertow.util.HeaderMap> TRAILERS;

  private final io.undertow.conduits.ChunkedStreamSourceConduit$BufferWrapper bufferWrapper;

  private final io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSourceConduit> finishListener;

  private final io.undertow.server.HttpServerExchange exchange;

  private final java.io.Closeable closeable;

  private boolean closed;

  private boolean finishListenerInvoked;

  private long remainingAllowed;

  private final io.undertow.conduits.ChunkReader chunkReader;

  private final org.xnio.conduits.PushBackStreamSourceConduit channel;

  public io.undertow.conduits.ChunkedStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, org.xnio.conduits.PushBackStreamSourceConduit, io.undertow.connector.ByteBufferPool, io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSourceConduit>, io.undertow.util.Attachable, java.io.Closeable);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class io/undertow/conduits/ChunkedStreamSourceConduit$1
       5: dup
       6: aload_3
       7: aload_2
       8: invokespecial #2                  // Method io/undertow/conduits/ChunkedStreamSourceConduit$1."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/conduits/PushBackStreamSourceConduit;)V
      11: aload         4
      13: aload         5
      15: aconst_null
      16: aload         6
      18: aload_2
      19: invokespecial #3                  // Method "<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;Lio/undertow/server/HttpServerExchange;Ljava/io/Closeable;Lorg/xnio/conduits/PushBackStreamSourceConduit;)V
      22: return

  public io.undertow.conduits.ChunkedStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, io.undertow.server.HttpServerExchange, io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSourceConduit>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #4                  // class io/undertow/conduits/ChunkedStreamSourceConduit$2
       5: dup
       6: aload_2
       7: invokespecial #5                  // Method io/undertow/conduits/ChunkedStreamSourceConduit$2."<init>":(Lio/undertow/server/HttpServerExchange;)V
      10: aload_3
      11: aload_2
      12: aload_2
      13: aload_2
      14: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      17: aconst_null
      18: invokespecial #3                  // Method "<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;Lio/undertow/server/HttpServerExchange;Ljava/io/Closeable;Lorg/xnio/conduits/PushBackStreamSourceConduit;)V
      21: return

  protected io.undertow.conduits.ChunkedStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, io.undertow.conduits.ChunkedStreamSourceConduit$BufferWrapper, io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSourceConduit>, io.undertow.util.Attachable, io.undertow.server.HttpServerExchange, java.io.Closeable, org.xnio.conduits.PushBackStreamSourceConduit);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/xnio/conduits/AbstractStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
       5: aload_0
       6: aload_2
       7: putfield      #8                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
      10: aload_0
      11: aload_3
      12: putfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      15: aload_0
      16: ldc2_w        #11                 // long -9223372036854775808l
      19: putfield      #13                 // Field remainingAllowed:J
      22: aload_0
      23: new           #14                 // class io/undertow/conduits/ChunkReader
      26: dup
      27: aload         4
      29: getstatic     #15                 // Field io/undertow/server/protocol/http/HttpAttachments.REQUEST_TRAILERS:Lio/undertow/util/AttachmentKey;
      32: aload_0
      33: invokespecial #16                 // Method io/undertow/conduits/ChunkReader."<init>":(Lio/undertow/util/Attachable;Lio/undertow/util/AttachmentKey;Lorg/xnio/conduits/Conduit;)V
      36: putfield      #17                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
      39: aload_0
      40: aload         5
      42: putfield      #18                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      45: aload_0
      46: aload         6
      48: putfield      #19                 // Field closeable:Ljava/io/Closeable;
      51: aload_0
      52: aload         7
      54: putfield      #20                 // Field channel:Lorg/xnio/conduits/PushBackStreamSourceConduit;
      57: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload         5
       2: new           #21                 // class org/xnio/conduits/ConduitReadableByteChannel
       5: dup
       6: aload_0
       7: invokespecial #22                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      10: lload_1
      11: lload_3
      12: invokevirtual #23                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      15: lreturn
      16: astore        6
      18: aload_0
      19: getfield      #19                 // Field closeable:Ljava/io/Closeable;
      22: invokestatic  #27                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      25: aload         6
      27: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException
           0    15    16   Class java/lang/RuntimeException
           0    15    16   Class java/lang/Error

  private void updateRemainingAllowed(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field remainingAllowed:J
       4: ldc2_w        #11                 // long -9223372036854775808l
       7: lcmp
       8: ifne          39
      11: aload_0
      12: getfield      #18                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      15: ifnonnull     19
      18: return
      19: aload_0
      20: getfield      #18                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      23: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.getMaxEntitySize:()J
      26: lstore_2
      27: lload_2
      28: lconst_0
      29: lcmp
      30: ifgt          34
      33: return
      34: aload_0
      35: lload_2
      36: putfield      #13                 // Field remainingAllowed:J
      39: aload_0
      40: dup
      41: getfield      #13                 // Field remainingAllowed:J
      44: iload_1
      45: i2l
      46: lsub
      47: putfield      #13                 // Field remainingAllowed:J
      50: aload_0
      51: getfield      #13                 // Field remainingAllowed:J
      54: lconst_0
      55: lcmp
      56: ifge          106
      59: aload_0
      60: getfield      #18                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      63: invokestatic  #29                 // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
      66: aload_0
      67: iconst_1
      68: putfield      #30                 // Field closed:Z
      71: aload_0
      72: getfield      #18                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      75: iconst_0
      76: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
      79: pop
      80: aload_0
      81: getfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      84: aload_0
      85: invokeinterface #32,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
      90: getstatic     #33                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      93: aload_0
      94: getfield      #18                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      97: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.getMaxEntitySize:()J
     100: invokeinterface #34,  3           // InterfaceMethod io/undertow/UndertowMessages.requestEntityWasTooLarge:(J)Lio/undertow/server/RequestTooBigException;
     105: athrow
     106: return

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: new           #21                 // class org/xnio/conduits/ConduitReadableByteChannel
       3: dup
       4: aload_0
       5: invokespecial #22                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
       8: lload_1
       9: aload_3
      10: aload         4
      12: invokestatic  #35                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      15: lreturn
      16: astore        5
      18: aload_0
      19: getfield      #19                 // Field closeable:Ljava/io/Closeable;
      22: invokestatic  #27                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      25: aload         5
      27: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException
           0    15    16   Class java/lang/RuntimeException
           0    15    16   Class java/lang/Error

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     35
       9: aload_1
      10: iload         4
      12: aaload
      13: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      16: ifeq          29
      19: aload_0
      20: aload_1
      21: iload         4
      23: aaload
      24: invokevirtual #37                 // Method read:(Ljava/nio/ByteBuffer;)I
      27: i2l
      28: lreturn
      29: iinc          4, 1
      32: goto          3
      35: lconst_0
      36: lreturn

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method org/xnio/conduits/AbstractStreamSourceConduit.terminateReads:()V
       4: aload_0
       5: getfield      #20                 // Field channel:Lorg/xnio/conduits/PushBackStreamSourceConduit;
       8: ifnull        18
      11: aload_0
      12: getfield      #20                 // Field channel:Lorg/xnio/conduits/PushBackStreamSourceConduit;
      15: invokevirtual #39                 // Method org/xnio/conduits/PushBackStreamSourceConduit.terminateReads:()V
      18: aload_0
      19: invokevirtual #40                 // Method isFinished:()Z
      22: ifne          47
      25: aload_0
      26: getfield      #18                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      29: iconst_0
      30: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
      33: pop
      34: aload_0
      35: invokespecial #38                 // Method org/xnio/conduits/AbstractStreamSourceConduit.terminateReads:()V
      38: getstatic     #33                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      41: invokeinterface #41,  1           // InterfaceMethod io/undertow/UndertowMessages.chunkedChannelClosedMidChunk:()Ljava/io/IOException;
      46: athrow
      47: return

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #17                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
       6: invokevirtual #42                 // Method io/undertow/conduits/ChunkReader.getChunkRemaining:()J
       9: lstore_3
      10: lload_3
      11: ldc2_w        #43                 // long -1l
      14: lcmp
      15: ifne          52
      18: aload_0
      19: getfield      #45                 // Field finishListenerInvoked:Z
      22: ifne          27
      25: iconst_1
      26: istore_2
      27: iconst_m1
      28: istore        5
      30: iload_2
      31: ifeq          49
      34: aload_0
      35: iconst_1
      36: putfield      #45                 // Field finishListenerInvoked:Z
      39: aload_0
      40: getfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      43: aload_0
      44: invokeinterface #32,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
      49: iload         5
      51: ireturn
      52: aload_0
      53: getfield      #30                 // Field closed:Z
      56: ifeq          67
      59: new           #46                 // class java/nio/channels/ClosedChannelException
      62: dup
      63: invokespecial #47                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      66: athrow
      67: aload_0
      68: getfield      #8                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
      71: invokeinterface #48,  1           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.allocate:()Lio/undertow/connector/PooledByteBuffer;
      76: astore        5
      78: aload         5
      80: invokeinterface #49,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      85: astore        6
      87: iconst_1
      88: istore        7
      90: aload_0
      91: getfield      #50                 // Field next:Lorg/xnio/conduits/Conduit;
      94: checkcast     #51                 // class org/xnio/conduits/StreamSourceConduit
      97: aload         6
      99: invokeinterface #52,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     104: istore        8
     106: aload         6
     108: invokevirtual #53                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     111: pop
     112: iload         8
     114: iconst_m1
     115: if_icmpne     126
     118: new           #46                 // class java/nio/channels/ClosedChannelException
     121: dup
     122: invokespecial #47                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     125: athrow
     126: iload         8
     128: ifne          204
     131: iconst_0
     132: istore        9
     134: lload_3
     135: lconst_0
     136: lcmp
     137: iflt          148
     140: aload_0
     141: getfield      #17                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     144: lload_3
     145: invokevirtual #54                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     148: iload         7
     150: ifne          175
     153: aload         6
     155: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     158: ifeq          175
     161: aload_0
     162: getfield      #8                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     165: aload         5
     167: invokeinterface #55,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     172: goto          182
     175: aload         5
     177: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     182: iload_2
     183: ifeq          201
     186: aload_0
     187: iconst_1
     188: putfield      #45                 // Field finishListenerInvoked:Z
     191: aload_0
     192: getfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
     195: aload_0
     196: invokeinterface #32,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
     201: iload         9
     203: ireturn
     204: lload_3
     205: lconst_0
     206: lcmp
     207: ifne          326
     210: aload_0
     211: getfield      #17                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     214: aload         6
     216: invokevirtual #57                 // Method io/undertow/conduits/ChunkReader.readChunk:(Ljava/nio/ByteBuffer;)J
     219: lstore_3
     220: lload_3
     221: lconst_0
     222: lcmp
     223: ifgt          326
     226: aload         6
     228: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     231: ifeq          237
     234: iconst_0
     235: istore        7
     237: aload_0
     238: getfield      #45                 // Field finishListenerInvoked:Z
     241: ifne          252
     244: lload_3
     245: lconst_0
     246: lcmp
     247: ifge          252
     250: iconst_1
     251: istore_2
     252: lload_3
     253: l2i
     254: istore        9
     256: lload_3
     257: lconst_0
     258: lcmp
     259: iflt          270
     262: aload_0
     263: getfield      #17                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     266: lload_3
     267: invokevirtual #54                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     270: iload         7
     272: ifne          297
     275: aload         6
     277: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     280: ifeq          297
     283: aload_0
     284: getfield      #8                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     287: aload         5
     289: invokeinterface #55,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     294: goto          304
     297: aload         5
     299: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     304: iload_2
     305: ifeq          323
     308: aload_0
     309: iconst_1
     310: putfield      #45                 // Field finishListenerInvoked:Z
     313: aload_0
     314: getfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
     317: aload_0
     318: invokeinterface #32,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
     323: iload         9
     325: ireturn
     326: aload_1
     327: invokevirtual #58                 // Method java/nio/ByteBuffer.limit:()I
     330: istore        9
     332: iconst_0
     333: istore        10
     335: aload         6
     337: invokevirtual #59                 // Method java/nio/ByteBuffer.remaining:()I
     340: i2l
     341: lload_3
     342: invokestatic  #60                 // Method java/lang/Math.min:(JJ)J
     345: lstore        11
     347: aload_1
     348: invokevirtual #59                 // Method java/nio/ByteBuffer.remaining:()I
     351: istore        13
     353: lload         11
     355: iload         13
     357: i2l
     358: lcmp
     359: ifle          494
     362: aload         6
     364: invokevirtual #58                 // Method java/nio/ByteBuffer.limit:()I
     367: istore        14
     369: aload         6
     371: aload         6
     373: invokevirtual #61                 // Method java/nio/ByteBuffer.position:()I
     376: iload         13
     378: iadd
     379: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     382: pop
     383: aload_1
     384: aload         6
     386: invokevirtual #63                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     389: pop
     390: aload         6
     392: iload         14
     394: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     397: pop
     398: lload_3
     399: iload         13
     401: i2l
     402: lsub
     403: lstore_3
     404: aload_0
     405: iload         13
     407: invokevirtual #64                 // Method updateRemainingAllowed:(I)V
     410: iconst_0
     411: istore        7
     413: iload         13
     415: istore        15
     417: aload_1
     418: iload         9
     420: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     423: pop
     424: lload_3
     425: lconst_0
     426: lcmp
     427: iflt          438
     430: aload_0
     431: getfield      #17                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     434: lload_3
     435: invokevirtual #54                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     438: iload         7
     440: ifne          465
     443: aload         6
     445: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     448: ifeq          465
     451: aload_0
     452: getfield      #8                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     455: aload         5
     457: invokeinterface #55,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     462: goto          472
     465: aload         5
     467: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     472: iload_2
     473: ifeq          491
     476: aload_0
     477: iconst_1
     478: putfield      #45                 // Field finishListenerInvoked:Z
     481: aload_0
     482: getfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
     485: aload_0
     486: invokeinterface #32,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
     491: iload         15
     493: ireturn
     494: aload         6
     496: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     499: ifeq          576
     502: aload         6
     504: invokevirtual #58                 // Method java/nio/ByteBuffer.limit:()I
     507: istore        14
     509: aload         6
     511: iload         14
     513: i2l
     514: aload         6
     516: invokevirtual #61                 // Method java/nio/ByteBuffer.position:()I
     519: i2l
     520: lload         11
     522: ladd
     523: invokestatic  #60                 // Method java/lang/Math.min:(JJ)J
     526: l2i
     527: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     530: pop
     531: aload_1
     532: aload         6
     534: invokevirtual #63                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     537: pop
     538: aload         6
     540: iload         14
     542: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     545: pop
     546: goto          562
     549: astore        16
     551: aload         6
     553: iload         14
     555: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     558: pop
     559: aload         16
     561: athrow
     562: iload         10
     564: i2l
     565: lload         11
     567: ladd
     568: l2i
     569: istore        10
     571: lload_3
     572: lload         11
     574: lsub
     575: lstore_3
     576: lload_3
     577: lconst_0
     578: lcmp
     579: ifle          697
     582: aload_1
     583: invokevirtual #58                 // Method java/nio/ByteBuffer.limit:()I
     586: istore        14
     588: lload_3
     589: aload_1
     590: invokevirtual #59                 // Method java/nio/ByteBuffer.remaining:()I
     593: i2l
     594: lcmp
     595: ifge          611
     598: aload_1
     599: aload_1
     600: invokevirtual #61                 // Method java/nio/ByteBuffer.position:()I
     603: i2l
     604: lload_3
     605: ladd
     606: l2i
     607: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     610: pop
     611: iconst_0
     612: istore        15
     614: aload_0
     615: getfield      #50                 // Field next:Lorg/xnio/conduits/Conduit;
     618: checkcast     #51                 // class org/xnio/conduits/StreamSourceConduit
     621: aload_1
     622: invokeinterface #52,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     627: istore        15
     629: iload         15
     631: ifle          647
     634: iload         10
     636: iload         15
     638: iadd
     639: istore        10
     641: lload_3
     642: iload         15
     644: i2l
     645: lsub
     646: lstore_3
     647: iload         15
     649: ifle          658
     652: lload_3
     653: lconst_0
     654: lcmp
     655: ifgt          614
     658: iload         15
     660: iconst_m1
     661: if_icmpne     672
     664: new           #46                 // class java/nio/channels/ClosedChannelException
     667: dup
     668: invokespecial #47                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     671: athrow
     672: aload_1
     673: iload         14
     675: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     678: pop
     679: goto          694
     682: astore        17
     684: aload_1
     685: iload         14
     687: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     690: pop
     691: aload         17
     693: athrow
     694: goto          700
     697: iconst_0
     698: istore        7
     700: aload_0
     701: iload         10
     703: invokevirtual #64                 // Method updateRemainingAllowed:(I)V
     706: iload         10
     708: istore        14
     710: aload_1
     711: iload         9
     713: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     716: pop
     717: lload_3
     718: lconst_0
     719: lcmp
     720: iflt          731
     723: aload_0
     724: getfield      #17                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     727: lload_3
     728: invokevirtual #54                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     731: iload         7
     733: ifne          758
     736: aload         6
     738: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     741: ifeq          758
     744: aload_0
     745: getfield      #8                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     748: aload         5
     750: invokeinterface #55,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     755: goto          765
     758: aload         5
     760: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     765: iload_2
     766: ifeq          784
     769: aload_0
     770: iconst_1
     771: putfield      #45                 // Field finishListenerInvoked:Z
     774: aload_0
     775: getfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
     778: aload_0
     779: invokeinterface #32,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
     784: iload         14
     786: ireturn
     787: astore        18
     789: aload_1
     790: iload         9
     792: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     795: pop
     796: aload         18
     798: athrow
     799: astore        19
     801: lload_3
     802: lconst_0
     803: lcmp
     804: iflt          815
     807: aload_0
     808: getfield      #17                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     811: lload_3
     812: invokevirtual #54                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     815: iload         7
     817: ifne          842
     820: aload         6
     822: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     825: ifeq          842
     828: aload_0
     829: getfield      #8                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     832: aload         5
     834: invokeinterface #55,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     839: goto          849
     842: aload         5
     844: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     849: aload         19
     851: athrow
     852: astore_3
     853: aload_0
     854: getfield      #19                 // Field closeable:Ljava/io/Closeable;
     857: invokestatic  #27                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     860: aload_3
     861: athrow
     862: astore        20
     864: iload_2
     865: ifeq          883
     868: aload_0
     869: iconst_1
     870: putfield      #45                 // Field finishListenerInvoked:Z
     873: aload_0
     874: getfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
     877: aload_0
     878: invokeinterface #32,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
     883: aload         20
     885: athrow
    Exception table:
       from    to  target type
         531   538   549   any
         549   551   549   any
         588   672   682   any
         682   684   682   any
         332   417   787   any
         494   710   787   any
         787   789   787   any
          90   134   799   any
         204   256   799   any
         326   424   799   any
         494   717   799   any
         787   801   799   any
           2    30   852   Class java/io/IOException
           2    30   852   Class java/lang/RuntimeException
           2    30   852   Class java/lang/Error
          52   182   852   Class java/io/IOException
          52   182   852   Class java/lang/RuntimeException
          52   182   852   Class java/lang/Error
         204   304   852   Class java/io/IOException
         204   304   852   Class java/lang/RuntimeException
         204   304   852   Class java/lang/Error
         326   472   852   Class java/io/IOException
         326   472   852   Class java/lang/RuntimeException
         326   472   852   Class java/lang/Error
         494   765   852   Class java/io/IOException
         494   765   852   Class java/lang/RuntimeException
         494   765   852   Class java/lang/Error
         787   852   852   Class java/io/IOException
         787   852   852   Class java/lang/RuntimeException
         787   852   852   Class java/lang/Error
           2    30   862   any
          52   182   862   any
         204   304   862   any
         326   472   862   any
         494   765   862   any
         787   864   862   any

  public boolean isFinished();
    Code:
       0: aload_0
       1: getfield      #30                 // Field closed:Z
       4: ifne          21
       7: aload_0
       8: getfield      #17                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
      11: invokevirtual #42                 // Method io/undertow/conduits/ChunkReader.getChunkRemaining:()J
      14: ldc2_w        #43                 // long -1l
      17: lcmp
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  static {};
    Code:
       0: getstatic     #15                 // Field io/undertow/server/protocol/http/HttpAttachments.REQUEST_TRAILERS:Lio/undertow/util/AttachmentKey;
       3: putstatic     #65                 // Field TRAILERS:Lio/undertow/util/AttachmentKey;
       6: return
}
