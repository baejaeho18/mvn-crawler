Compiled from "DeflatingStreamSinkConduit.java"
public class io.undertow.conduits.DeflatingStreamSinkConduit implements org.xnio.conduits.StreamSinkConduit {
  private static final java.nio.ByteBuffer EMPTY;

  protected volatile java.util.zip.Deflater deflater;

  protected final io.undertow.util.PooledObject<java.util.zip.Deflater> pooledObject;

  private final io.undertow.util.ConduitFactory<org.xnio.conduits.StreamSinkConduit> conduitFactory;

  private final io.undertow.server.HttpServerExchange exchange;

  private org.xnio.conduits.StreamSinkConduit next;

  private org.xnio.conduits.WriteReadyHandler writeReadyHandler;

  protected io.undertow.connector.PooledByteBuffer currentBuffer;

  private java.nio.ByteBuffer trailerBuffer;

  private int state;

  private static final int SHUTDOWN;

  private static final int NEXT_SHUTDOWN;

  private static final int FLUSHING_BUFFER;

  private static final int WRITES_RESUMED;

  private static final int CLOSED;

  private static final int WRITTEN_TRAILER;

  public io.undertow.conduits.DeflatingStreamSinkConduit(io.undertow.util.ConduitFactory<org.xnio.conduits.StreamSinkConduit>, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: bipush        8
       5: invokespecial #2                  // Method "<init>":(Lio/undertow/util/ConduitFactory;Lio/undertow/server/HttpServerExchange;I)V
       8: return

  public io.undertow.conduits.DeflatingStreamSinkConduit(io.undertow.util.ConduitFactory<org.xnio.conduits.StreamSinkConduit>, io.undertow.server.HttpServerExchange, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #3                  // Method newInstanceDeflaterPool:(I)Lio/undertow/util/ObjectPool;
       7: invokespecial #4                  // Method "<init>":(Lio/undertow/util/ConduitFactory;Lio/undertow/server/HttpServerExchange;Lio/undertow/util/ObjectPool;)V
      10: return

  public io.undertow.conduits.DeflatingStreamSinkConduit(io.undertow.util.ConduitFactory<org.xnio.conduits.StreamSinkConduit>, io.undertow.server.HttpServerExchange, io.undertow.util.ObjectPool<java.util.zip.Deflater>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field state:I
       9: aload_0
      10: aload_3
      11: invokeinterface #7,  1            // InterfaceMethod io/undertow/util/ObjectPool.allocate:()Lio/undertow/util/PooledObject;
      16: putfield      #8                  // Field pooledObject:Lio/undertow/util/PooledObject;
      19: aload_0
      20: aload_0
      21: getfield      #8                  // Field pooledObject:Lio/undertow/util/PooledObject;
      24: invokeinterface #9,  1            // InterfaceMethod io/undertow/util/PooledObject.getObject:()Ljava/lang/Object;
      29: checkcast     #1                  // class java/util/zip/Deflater
      32: putfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
      35: aload_0
      36: aload_2
      37: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      40: invokevirtual #12                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      43: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      48: putfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
      51: aload_0
      52: aload_2
      53: putfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      56: aload_0
      57: aload_1
      58: putfield      #16                 // Field conduitFactory:Lio/undertow/util/ConduitFactory;
      61: aload_0
      62: new           #17                 // class org/xnio/conduits/WriteReadyHandler$ChannelListenerHandler
      65: dup
      66: aload_2
      67: invokestatic  #18                 // Method io/undertow/server/Connectors.getConduitSinkChannel:(Lio/undertow/server/HttpServerExchange;)Lorg/xnio/conduits/ConduitStreamSinkChannel;
      70: invokespecial #19                 // Method org/xnio/conduits/WriteReadyHandler$ChannelListenerHandler."<init>":(Lorg/xnio/channels/SuspendableWriteChannel;)V
      73: invokevirtual #20                 // Method setWriteReadyHandler:(Lorg/xnio/conduits/WriteReadyHandler;)V
      76: return

  public static io.undertow.util.ObjectPool<java.util.zip.Deflater> newInstanceDeflaterPool(int);
    Code:
       0: new           #21                 // class io/undertow/util/NewInstanceObjectPool
       3: dup
       4: iload_0
       5: invokedynamic #22,  0             // InvokeDynamic #0:get:(I)Ljava/util/function/Supplier;
      10: invokedynamic #23,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      15: invokespecial #24                 // Method io/undertow/util/NewInstanceObjectPool."<init>":(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)V
      18: areturn

  public static io.undertow.util.ObjectPool<java.util.zip.Deflater> simpleDeflaterPool(int, int);
    Code:
       0: new           #25                 // class io/undertow/util/SimpleObjectPool
       3: dup
       4: iload_0
       5: iload_1
       6: invokedynamic #26,  0             // InvokeDynamic #2:get:(I)Ljava/util/function/Supplier;
      11: invokedynamic #27,  0             // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
      16: invokedynamic #23,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      21: invokespecial #28                 // Method io/undertow/util/SimpleObjectPool."<init>":(ILjava/util/function/Supplier;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
      24: areturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        17
       6: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifne          19
      12: aload_0
      13: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
      16: ifnonnull     27
      19: new           #31                 // class java/nio/channels/ClosedChannelException
      22: dup
      23: invokespecial #32                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      26: athrow
      27: aload_0
      28: invokevirtual #33                 // Method performFlushIfRequired:()Z
      31: ifne          36
      34: iconst_0
      35: ireturn
      36: aload_1
      37: invokevirtual #34                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_1
      46: invokevirtual #35                 // Method java/nio/ByteBuffer.position:()I
      49: istore_2
      50: aload_1
      51: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
      54: istore_3
      55: aload_0
      56: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
      59: aload_1
      60: invokevirtual #37                 // Method java/util/zip/Deflater.setInput:(Ljava/nio/ByteBuffer;)V
      63: aload_0
      64: iconst_0
      65: invokevirtual #38                 // Method deflateData:(Z)V
      68: iload_3
      69: aload_1
      70: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
      73: isub
      74: istore        4
      76: aload_0
      77: getfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      80: iload         4
      82: ineg
      83: i2l
      84: invokestatic  #39                 // Method io/undertow/server/Connectors.updateResponseBytesSent:(Lio/undertow/server/HttpServerExchange;J)V
      87: aload_1
      88: invokevirtual #35                 // Method java/nio/ByteBuffer.position:()I
      91: istore        5
      93: aload_1
      94: invokevirtual #40                 // Method java/nio/ByteBuffer.limit:()I
      97: istore        6
      99: aload_1
     100: iload_2
     101: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     104: pop
     105: aload_1
     106: iload         5
     108: invokevirtual #42                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     111: pop
     112: aload_0
     113: aload_1
     114: invokevirtual #43                 // Method postDeflate:(Ljava/nio/ByteBuffer;)V
     117: aload_1
     118: iload         6
     120: invokevirtual #42                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     123: pop
     124: aload_1
     125: iload         5
     127: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     130: pop
     131: aload_0
     132: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
     135: getstatic     #44                 // Field EMPTY:Ljava/nio/ByteBuffer;
     138: invokevirtual #37                 // Method java/util/zip/Deflater.setInput:(Ljava/nio/ByteBuffer;)V
     141: iload         4
     143: ireturn
     144: astore_2
     145: aload_0
     146: invokevirtual #48                 // Method freeBuffer:()V
     149: aload_2
     150: athrow
    Exception table:
       from    to  target type
          27    35   144   Class java/io/IOException
          27    35   144   Class java/lang/RuntimeException
          27    35   144   Class java/lang/Error
          36    44   144   Class java/io/IOException
          36    44   144   Class java/lang/RuntimeException
          36    44   144   Class java/lang/Error
          45   143   144   Class java/io/IOException
          45   143   144   Class java/lang/RuntimeException
          45   143   144   Class java/lang/Error

  protected void postDeflate(java.nio.ByteBuffer);
    Code:
       0: return

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        17
       6: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifne          19
      12: aload_0
      13: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
      16: ifnonnull     27
      19: new           #31                 // class java/nio/channels/ClosedChannelException
      22: dup
      23: invokespecial #32                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      26: athrow
      27: iconst_0
      28: istore        4
      30: iload_2
      31: istore        5
      33: iload         5
      35: iload_2
      36: iload_3
      37: iadd
      38: if_icmpge     93
      41: aload_1
      42: iload         5
      44: aaload
      45: astore        6
      47: aload         6
      49: invokevirtual #34                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      52: ifeq          87
      55: aload_0
      56: aload         6
      58: invokevirtual #49                 // Method write:(Ljava/nio/ByteBuffer;)I
      61: istore        7
      63: iload         4
      65: iload         7
      67: iadd
      68: istore        4
      70: iload         7
      72: ifeq          83
      75: aload         6
      77: invokevirtual #34                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      80: ifeq          87
      83: iload         4
      85: i2l
      86: lreturn
      87: iinc          5, 1
      90: goto          33
      93: iload         4
      95: i2l
      96: lreturn
      97: astore        4
      99: aload_0
     100: invokevirtual #48                 // Method freeBuffer:()V
     103: aload         4
     105: athrow
    Exception table:
       from    to  target type
          27    86    97   Class java/io/IOException
          27    86    97   Class java/lang/RuntimeException
          27    86    97   Class java/lang/Error
          87    96    97   Class java/io/IOException
          87    96    97   Class java/lang/RuntimeException
          87    96    97   Class java/lang/Error

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;Ljava/nio/ByteBuffer;)I
       5: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #51                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        17
       6: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #31                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #32                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: invokevirtual #33                 // Method performFlushIfRequired:()Z
      24: ifne          29
      27: lconst_0
      28: lreturn
      29: aload_1
      30: lload_2
      31: lload         4
      33: new           #52                 // class org/xnio/conduits/ConduitWritableByteChannel
      36: dup
      37: aload_0
      38: invokespecial #53                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      41: invokevirtual #54                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      44: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        17
       6: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #31                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #32                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: invokevirtual #33                 // Method performFlushIfRequired:()Z
      24: ifne          29
      27: lconst_0
      28: lreturn
      29: aload_1
      30: lload_2
      31: aload         4
      33: new           #52                 // class org/xnio/conduits/ConduitWritableByteChannel
      36: dup
      37: aload_0
      38: invokespecial #53                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      41: invokestatic  #55                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      44: lreturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       7: invokevirtual #56                 // Method io/undertow/server/ServerConnection.getWorker:()Lorg/xnio/XnioWorker;
      10: areturn

  public void suspendWrites();
    Code:
       0: aload_0
       1: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
       4: ifnonnull     21
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field state:I
      12: bipush        -9
      14: iand
      15: putfield      #6                  // Field state:I
      18: goto          30
      21: aload_0
      22: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      25: invokeinterface #58,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.suspendWrites:()V
      30: return

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
       4: ifnonnull     17
       7: aload_0
       8: getfield      #6                  // Field state:I
      11: bipush        8
      13: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      16: ireturn
      17: aload_0
      18: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      21: invokeinterface #59,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.isWriteResumed:()Z
      26: ireturn

  public void wakeupWrites();
    Code:
       0: aload_0
       1: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
       4: ifnonnull     14
       7: aload_0
       8: invokevirtual #60                 // Method resumeWrites:()V
      11: goto          23
      14: aload_0
      15: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      18: invokeinterface #61,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.wakeupWrites:()V
      23: return

  public void resumeWrites();
    Code:
       0: aload_0
       1: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
       4: ifnonnull     25
       7: aload_0
       8: dup
       9: getfield      #6                  // Field state:I
      12: bipush        8
      14: ior
      15: putfield      #6                  // Field state:I
      18: aload_0
      19: invokevirtual #62                 // Method queueWriteListener:()V
      22: goto          34
      25: aload_0
      26: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      29: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
      34: return

  private void queueWriteListener();
    Code:
       0: aload_0
       1: getfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       7: invokevirtual #64                 // Method io/undertow/server/ServerConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      10: new           #65                 // class io/undertow/conduits/DeflatingStreamSinkConduit$1
      13: dup
      14: aload_0
      15: invokespecial #66                 // Method io/undertow/conduits/DeflatingStreamSinkConduit$1."<init>":(Lio/undertow/conduits/DeflatingStreamSinkConduit;)V
      18: invokevirtual #67                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      21: return

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
       4: ifnull        14
       7: aload_0
       8: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
      11: invokevirtual #68                 // Method java/util/zip/Deflater.finish:()V
      14: aload_0
      15: dup
      16: getfield      #6                  // Field state:I
      19: iconst_1
      20: ior
      21: putfield      #6                  // Field state:I
      24: return

  public boolean isWriteShutdown();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      12: invokeinterface #69,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
      17: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      12: lload_1
      13: aload_3
      14: invokeinterface #70,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      19: return

  public org.xnio.XnioIoThread getWriteThread();
    Code:
       0: aload_0
       1: getfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       7: invokevirtual #64                 // Method io/undertow/server/ServerConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      10: areturn

  public void setWriteReadyHandler(org.xnio.conduits.WriteReadyHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field writeReadyHandler:Lorg/xnio/conduits/WriteReadyHandler;
       5: return

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     30
       7: aload_0
       8: getfield      #6                  // Field state:I
      11: iconst_2
      12: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifeq          28
      18: aload_0
      19: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      22: invokeinterface #72,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      27: ireturn
      28: iconst_1
      29: ireturn
      30: iconst_0
      31: istore_1
      32: aload_0
      33: getfield      #6                  // Field state:I
      36: iconst_1
      37: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      40: ifeq          604
      43: aload_0
      44: getfield      #6                  // Field state:I
      47: iconst_2
      48: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      51: ifeq          117
      54: aload_0
      55: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      58: invokeinterface #72,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      63: istore_2
      64: iload_1
      65: ifeq          115
      68: aload_0
      69: getfield      #6                  // Field state:I
      72: bipush        8
      74: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      77: ifeq          115
      80: aload_0
      81: getfield      #6                  // Field state:I
      84: iconst_2
      85: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      88: ifne          115
      91: aload_0
      92: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      95: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     100: goto          115
     103: astore_3
     104: getstatic     #74                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     107: ldc           #75                 // String Failed to resume
     109: aload_3
     110: invokeinterface #76,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     115: iload_2
     116: ireturn
     117: aload_0
     118: invokevirtual #33                 // Method performFlushIfRequired:()Z
     121: ifne          179
     124: iconst_0
     125: istore_2
     126: iload_1
     127: ifeq          177
     130: aload_0
     131: getfield      #6                  // Field state:I
     134: bipush        8
     136: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     139: ifeq          177
     142: aload_0
     143: getfield      #6                  // Field state:I
     146: iconst_2
     147: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     150: ifne          177
     153: aload_0
     154: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     157: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     162: goto          177
     165: astore_3
     166: getstatic     #74                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     169: ldc           #75                 // String Failed to resume
     171: aload_3
     172: invokeinterface #76,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     177: iload_2
     178: ireturn
     179: aload_0
     180: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
     183: invokevirtual #77                 // Method java/util/zip/Deflater.finished:()Z
     186: ifne          259
     189: aload_0
     190: iconst_0
     191: invokevirtual #38                 // Method deflateData:(Z)V
     194: aload_0
     195: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
     198: invokevirtual #77                 // Method java/util/zip/Deflater.finished:()Z
     201: ifne          259
     204: iconst_0
     205: istore_2
     206: iload_1
     207: ifeq          257
     210: aload_0
     211: getfield      #6                  // Field state:I
     214: bipush        8
     216: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     219: ifeq          257
     222: aload_0
     223: getfield      #6                  // Field state:I
     226: iconst_2
     227: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     230: ifne          257
     233: aload_0
     234: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     237: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     242: goto          257
     245: astore_3
     246: getstatic     #74                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     249: ldc           #75                 // String Failed to resume
     251: aload_3
     252: invokeinterface #76,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     257: iload_2
     258: ireturn
     259: aload_0
     260: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
     263: invokeinterface #78,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     268: astore_2
     269: aload_0
     270: getfield      #6                  // Field state:I
     273: bipush        32
     275: invokestatic  #79                 // Method org/xnio/Bits.allAreClear:(II)Z
     278: ifeq          409
     281: aload_0
     282: dup
     283: getfield      #6                  // Field state:I
     286: bipush        32
     288: ior
     289: putfield      #6                  // Field state:I
     292: aload_0
     293: invokevirtual #80                 // Method getTrailer:()[B
     296: astore_3
     297: aload_3
     298: ifnull        409
     301: aload_0
     302: getfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
     305: aload_3
     306: arraylength
     307: i2l
     308: invokestatic  #39                 // Method io/undertow/server/Connectors.updateResponseBytesSent:(Lio/undertow/server/HttpServerExchange;J)V
     311: aload_0
     312: getfield      #81                 // Field trailerBuffer:Ljava/nio/ByteBuffer;
     315: ifnull        328
     318: new           #82                 // class java/lang/IllegalStateException
     321: dup
     322: ldc           #83                 // String trailerBuffer is already set
     324: invokespecial #84                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     327: athrow
     328: aload_0
     329: getfield      #6                  // Field state:I
     332: iconst_4
     333: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     336: ifeq          372
     339: aload_2
     340: invokevirtual #85                 // Method java/nio/ByteBuffer.capacity:()I
     343: aload_2
     344: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
     347: isub
     348: aload_3
     349: arraylength
     350: if_icmplt     372
     353: aload_2
     354: invokevirtual #86                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     357: pop
     358: aload_2
     359: aload_3
     360: invokevirtual #87                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     363: pop
     364: aload_2
     365: invokevirtual #88                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     368: pop
     369: goto          409
     372: aload_3
     373: arraylength
     374: aload_2
     375: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
     378: if_icmpgt     401
     381: aload_0
     382: getfield      #6                  // Field state:I
     385: iconst_4
     386: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     389: ifne          401
     392: aload_2
     393: aload_3
     394: invokevirtual #87                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     397: pop
     398: goto          409
     401: aload_0
     402: aload_3
     403: invokestatic  #89                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     406: putfield      #81                 // Field trailerBuffer:Ljava/nio/ByteBuffer;
     409: aload_0
     410: getfield      #6                  // Field state:I
     413: iconst_4
     414: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     417: ifne          452
     420: aload_2
     421: invokevirtual #88                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     424: pop
     425: aload_0
     426: dup
     427: getfield      #6                  // Field state:I
     430: iconst_4
     431: ior
     432: putfield      #6                  // Field state:I
     435: aload_0
     436: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     439: ifnonnull     452
     442: iconst_1
     443: istore_1
     444: aload_0
     445: aload_0
     446: invokevirtual #90                 // Method createNextChannel:()Lorg/xnio/conduits/StreamSinkConduit;
     449: putfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     452: aload_0
     453: invokevirtual #33                 // Method performFlushIfRequired:()Z
     456: ifeq          547
     459: aload_0
     460: dup
     461: getfield      #6                  // Field state:I
     464: iconst_2
     465: ior
     466: putfield      #6                  // Field state:I
     469: aload_0
     470: invokevirtual #48                 // Method freeBuffer:()V
     473: aload_0
     474: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     477: invokeinterface #91,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
     482: aload_0
     483: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     486: invokeinterface #72,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     491: istore_3
     492: iload_1
     493: ifeq          545
     496: aload_0
     497: getfield      #6                  // Field state:I
     500: bipush        8
     502: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     505: ifeq          545
     508: aload_0
     509: getfield      #6                  // Field state:I
     512: iconst_2
     513: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     516: ifne          545
     519: aload_0
     520: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     523: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     528: goto          545
     531: astore        4
     533: getstatic     #74                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     536: ldc           #75                 // String Failed to resume
     538: aload         4
     540: invokeinterface #76,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     545: iload_3
     546: ireturn
     547: iconst_0
     548: istore_3
     549: iload_1
     550: ifeq          602
     553: aload_0
     554: getfield      #6                  // Field state:I
     557: bipush        8
     559: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     562: ifeq          602
     565: aload_0
     566: getfield      #6                  // Field state:I
     569: iconst_2
     570: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     573: ifne          602
     576: aload_0
     577: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     580: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     585: goto          602
     588: astore        4
     590: getstatic     #74                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     593: ldc           #75                 // String Failed to resume
     595: aload         4
     597: invokeinterface #76,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     602: iload_3
     603: ireturn
     604: aload_0
     605: getfield      #6                  // Field state:I
     608: iconst_4
     609: invokestatic  #79                 // Method org/xnio/Bits.allAreClear:(II)Z
     612: ifeq          671
     615: aload_0
     616: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     619: ifnonnull     632
     622: iconst_1
     623: istore_1
     624: aload_0
     625: aload_0
     626: invokevirtual #90                 // Method createNextChannel:()Lorg/xnio/conduits/StreamSinkConduit;
     629: putfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     632: aload_0
     633: iconst_1
     634: invokevirtual #38                 // Method deflateData:(Z)V
     637: aload_0
     638: getfield      #6                  // Field state:I
     641: iconst_4
     642: invokestatic  #79                 // Method org/xnio/Bits.allAreClear:(II)Z
     645: ifeq          671
     648: aload_0
     649: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
     652: invokeinterface #78,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     657: invokevirtual #88                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     660: pop
     661: aload_0
     662: dup
     663: getfield      #6                  // Field state:I
     666: iconst_4
     667: ior
     668: putfield      #6                  // Field state:I
     671: aload_0
     672: invokevirtual #33                 // Method performFlushIfRequired:()Z
     675: ifne          733
     678: iconst_0
     679: istore_2
     680: iload_1
     681: ifeq          731
     684: aload_0
     685: getfield      #6                  // Field state:I
     688: bipush        8
     690: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     693: ifeq          731
     696: aload_0
     697: getfield      #6                  // Field state:I
     700: iconst_2
     701: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     704: ifne          731
     707: aload_0
     708: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     711: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     716: goto          731
     719: astore_3
     720: getstatic     #74                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     723: ldc           #75                 // String Failed to resume
     725: aload_3
     726: invokeinterface #76,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     731: iload_2
     732: ireturn
     733: aload_0
     734: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     737: invokeinterface #72,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     742: istore_2
     743: iload_1
     744: ifeq          794
     747: aload_0
     748: getfield      #6                  // Field state:I
     751: bipush        8
     753: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     756: ifeq          794
     759: aload_0
     760: getfield      #6                  // Field state:I
     763: iconst_2
     764: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     767: ifne          794
     770: aload_0
     771: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     774: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     779: goto          794
     782: astore_3
     783: getstatic     #74                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     786: ldc           #75                 // String Failed to resume
     788: aload_3
     789: invokeinterface #76,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     794: iload_2
     795: ireturn
     796: astore        5
     798: iload_1
     799: ifeq          851
     802: aload_0
     803: getfield      #6                  // Field state:I
     806: bipush        8
     808: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     811: ifeq          851
     814: aload_0
     815: getfield      #6                  // Field state:I
     818: iconst_2
     819: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     822: ifne          851
     825: aload_0
     826: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     829: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     834: goto          851
     837: astore        6
     839: getstatic     #74                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     842: ldc           #75                 // String Failed to resume
     844: aload         6
     846: invokeinterface #76,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     851: aload         5
     853: athrow
     854: astore_1
     855: aload_0
     856: invokevirtual #48                 // Method freeBuffer:()V
     859: aload_1
     860: athrow
    Exception table:
       from    to  target type
          91   100   103   Class java/lang/Throwable
         153   162   165   Class java/lang/Throwable
         233   242   245   Class java/lang/Throwable
         519   528   531   Class java/lang/Throwable
         576   585   588   Class java/lang/Throwable
         707   716   719   Class java/lang/Throwable
         770   779   782   Class java/lang/Throwable
          32    64   796   any
         117   126   796   any
         179   206   796   any
         259   492   796   any
         547   549   796   any
         604   680   796   any
         733   743   796   any
         825   834   837   Class java/lang/Throwable
         796   798   796   any
          30   115   854   Class java/io/IOException
          30   115   854   Class java/lang/RuntimeException
          30   115   854   Class java/lang/Error
         117   177   854   Class java/io/IOException
         117   177   854   Class java/lang/RuntimeException
         117   177   854   Class java/lang/Error
         179   257   854   Class java/io/IOException
         179   257   854   Class java/lang/RuntimeException
         179   257   854   Class java/lang/Error
         259   545   854   Class java/io/IOException
         259   545   854   Class java/lang/RuntimeException
         259   545   854   Class java/lang/Error
         547   602   854   Class java/io/IOException
         547   602   854   Class java/lang/RuntimeException
         547   602   854   Class java/lang/Error
         604   731   854   Class java/io/IOException
         604   731   854   Class java/lang/RuntimeException
         604   731   854   Class java/lang/Error
         733   794   854   Class java/io/IOException
         733   794   854   Class java/lang/RuntimeException
         733   794   854   Class java/lang/Error
         796   854   854   Class java/io/IOException
         796   854   854   Class java/lang/RuntimeException
         796   854   854   Class java/lang/Error

  protected byte[] getTrailer();
    Code:
       0: aconst_null
       1: areturn

  private boolean performFlushIfRequired() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_4
       5: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          30
      11: aload_0
      12: getfield      #81                 // Field trailerBuffer:Ljava/nio/ByteBuffer;
      15: ifnonnull     25
      18: aload_0
      19: invokevirtual #92                 // Method performFlushIfRequiredSingleBuffer:()Z
      22: goto          29
      25: aload_0
      26: invokevirtual #93                 // Method performFlushIfRequiredAdditionalBuffer:()Z
      29: ireturn
      30: iconst_1
      31: ireturn

  private boolean performFlushIfRequiredSingleBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
       4: invokeinterface #78,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       9: astore_1
      10: aload_1
      11: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
      14: i2l
      15: lstore_2
      16: lload_2
      17: lconst_0
      18: lcmp
      19: ifle          62
      22: iconst_0
      23: istore        4
      25: iconst_0
      26: istore        5
      28: aload_0
      29: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      32: aload_1
      33: invokeinterface #94,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      38: istore        5
      40: iload         4
      42: iload         5
      44: iadd
      45: istore        4
      47: iload         5
      49: ifne          54
      52: iconst_0
      53: ireturn
      54: iload         4
      56: i2l
      57: lload_2
      58: lcmp
      59: iflt          28
      62: aload_0
      63: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
      66: invokeinterface #78,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      71: invokevirtual #95                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      74: pop
      75: aload_0
      76: aload_0
      77: getfield      #6                  // Field state:I
      80: bipush        -5
      82: iand
      83: putfield      #6                  // Field state:I
      86: iconst_1
      87: ireturn

  private boolean performFlushIfRequiredAdditionalBuffer() throws java.io.IOException;
    Code:
       0: iconst_2
       1: anewarray     #96                 // class java/nio/ByteBuffer
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
      10: invokeinterface #78,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #81                 // Field trailerBuffer:Ljava/nio/ByteBuffer;
      22: aastore
      23: astore_1
      24: aload_1
      25: invokestatic  #97                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
      28: lstore_2
      29: lload_2
      30: lconst_0
      31: lcmp
      32: ifle          79
      35: lconst_0
      36: lstore        4
      38: lconst_0
      39: lstore        6
      41: aload_0
      42: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      45: aload_1
      46: iconst_0
      47: aload_1
      48: arraylength
      49: invokeinterface #98,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
      54: lstore        6
      56: lload         4
      58: lload         6
      60: ladd
      61: lstore        4
      63: lload         6
      65: lconst_0
      66: lcmp
      67: ifne          72
      70: iconst_0
      71: ireturn
      72: lload         4
      74: lload_2
      75: lcmp
      76: iflt          41
      79: aload_0
      80: aconst_null
      81: putfield      #81                 // Field trailerBuffer:Ljava/nio/ByteBuffer;
      84: aload_0
      85: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
      88: invokeinterface #78,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      93: invokevirtual #95                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      96: pop
      97: aload_0
      98: aload_0
      99: getfield      #6                  // Field state:I
     102: bipush        -5
     104: iand
     105: putfield      #6                  // Field state:I
     108: iconst_1
     109: ireturn

  private org.xnio.conduits.StreamSinkConduit createNextChannel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
       4: invokevirtual #77                 // Method java/util/zip/Deflater.finished:()Z
       7: ifeq          89
      10: aload_0
      11: getfield      #6                  // Field state:I
      14: bipush        32
      16: invokestatic  #99                 // Method org/xnio/Bits.allAreSet:(II)Z
      19: ifeq          89
      22: aload_0
      23: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
      26: invokeinterface #78,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      31: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
      34: istore_1
      35: aload_0
      36: getfield      #81                 // Field trailerBuffer:Ljava/nio/ByteBuffer;
      39: ifnull        52
      42: iload_1
      43: aload_0
      44: getfield      #81                 // Field trailerBuffer:Ljava/nio/ByteBuffer;
      47: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
      50: iadd
      51: istore_1
      52: aload_0
      53: getfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      56: invokevirtual #100                // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      59: getstatic     #101                // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      62: invokevirtual #102                // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      65: ifne          86
      68: aload_0
      69: getfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      72: invokevirtual #100                // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      75: getstatic     #103                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      78: iload_1
      79: invokestatic  #104                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      82: invokevirtual #105                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      85: pop
      86: goto          103
      89: aload_0
      90: getfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      93: invokevirtual #100                // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      96: getstatic     #103                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      99: invokevirtual #106                // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
     102: pop
     103: aload_0
     104: getfield      #16                 // Field conduitFactory:Lio/undertow/util/ConduitFactory;
     107: invokeinterface #107,  1          // InterfaceMethod io/undertow/util/ConduitFactory.create:()Lorg/xnio/conduits/Conduit;
     112: checkcast     #108                // class org/xnio/conduits/StreamSinkConduit
     115: areturn

  private void deflateData(boolean) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
       6: astore_3
       7: aload_3
       8: invokeinterface #78,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      13: astore        4
      15: aload_0
      16: getfield      #6                  // Field state:I
      19: iconst_1
      20: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      23: istore        5
      25: iload_1
      26: ifne          54
      29: aload_0
      30: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
      33: invokevirtual #109                // Method java/util/zip/Deflater.needsInput:()Z
      36: ifeq          54
      39: iload         5
      41: ifeq          168
      44: aload_0
      45: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
      48: invokevirtual #77                 // Method java/util/zip/Deflater.finished:()Z
      51: ifne          168
      54: aload_0
      55: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
      58: aload         4
      60: iload_1
      61: ifeq          68
      64: iconst_2
      65: goto          69
      68: iconst_0
      69: invokevirtual #110                // Method java/util/zip/Deflater.deflate:(Ljava/nio/ByteBuffer;I)I
      72: istore        6
      74: iload         6
      76: ifeq          163
      79: aload_0
      80: getfield      #15                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      83: iload         6
      85: i2l
      86: invokestatic  #39                 // Method io/undertow/server/Connectors.updateResponseBytesSent:(Lio/undertow/server/HttpServerExchange;J)V
      89: aload         4
      91: invokevirtual #34                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      94: ifne          165
      97: aload         4
      99: invokevirtual #88                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     102: pop
     103: aload_0
     104: dup
     105: getfield      #6                  // Field state:I
     108: iconst_4
     109: ior
     110: putfield      #6                  // Field state:I
     113: aload_0
     114: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     117: ifnonnull     130
     120: iconst_1
     121: istore_2
     122: aload_0
     123: aload_0
     124: invokevirtual #90                 // Method createNextChannel:()Lorg/xnio/conduits/StreamSinkConduit;
     127: putfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     130: aload_0
     131: invokevirtual #33                 // Method performFlushIfRequired:()Z
     134: ifne          165
     137: iload_2
     138: ifeq          162
     141: aload_0
     142: getfield      #6                  // Field state:I
     145: bipush        8
     147: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     150: ifeq          162
     153: aload_0
     154: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     157: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     162: return
     163: iconst_0
     164: istore_1
     165: goto          25
     168: iload_2
     169: ifeq          226
     172: aload_0
     173: getfield      #6                  // Field state:I
     176: bipush        8
     178: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     181: ifeq          226
     184: aload_0
     185: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     188: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     193: goto          226
     196: astore        7
     198: iload_2
     199: ifeq          223
     202: aload_0
     203: getfield      #6                  // Field state:I
     206: bipush        8
     208: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
     211: ifeq          223
     214: aload_0
     215: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
     218: invokeinterface #63,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     223: aload         7
     225: athrow
     226: return
    Exception table:
       from    to  target type
           2   137   196   any
         163   168   196   any
         196   198   196   any

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method freeBuffer:()V
       4: aload_0
       5: dup
       6: getfield      #6                  // Field state:I
       9: bipush        16
      11: ior
      12: putfield      #6                  // Field state:I
      15: aload_0
      16: getfield      #57                 // Field next:Lorg/xnio/conduits/StreamSinkConduit;
      19: invokeinterface #111,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.truncateWrites:()V
      24: return

  private void freeBuffer();
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        32
       7: aload_0
       8: getfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
      11: invokeinterface #112,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      16: aload_0
      17: aconst_null
      18: putfield      #14                 // Field currentBuffer:Lio/undertow/connector/PooledByteBuffer;
      21: aload_0
      22: aload_0
      23: getfield      #6                  // Field state:I
      26: bipush        -5
      28: iand
      29: putfield      #6                  // Field state:I
      32: aload_0
      33: getfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
      36: ifnull        53
      39: aload_0
      40: aconst_null
      41: putfield      #10                 // Field deflater:Ljava/util/zip/Deflater;
      44: aload_0
      45: getfield      #8                  // Field pooledObject:Lio/undertow/util/PooledObject;
      48: invokeinterface #113,  1          // InterfaceMethod io/undertow/util/PooledObject.close:()V
      53: aload_0
      54: aconst_null
      55: putfield      #81                 // Field trailerBuffer:Ljava/nio/ByteBuffer;
      58: return

  private static java.util.zip.Deflater lambda$simpleDeflaterPool$1(int);
    Code:
       0: new           #1                  // class java/util/zip/Deflater
       3: dup
       4: iload_0
       5: iconst_1
       6: invokespecial #114                // Method java/util/zip/Deflater."<init>":(IZ)V
       9: areturn

  private static java.util.zip.Deflater lambda$newInstanceDeflaterPool$0(int);
    Code:
       0: new           #1                  // class java/util/zip/Deflater
       3: dup
       4: iload_0
       5: iconst_1
       6: invokespecial #114                // Method java/util/zip/Deflater."<init>":(IZ)V
       9: areturn

  static {};
    Code:
       0: iconst_0
       1: invokestatic  #115                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       4: putstatic     #44                 // Field EMPTY:Ljava/nio/ByteBuffer;
       7: return
}
