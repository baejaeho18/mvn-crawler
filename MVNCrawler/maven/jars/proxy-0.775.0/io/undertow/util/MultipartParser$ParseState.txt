Compiled from "MultipartParser.java"
public class io.undertow.util.MultipartParser$ParseState {
  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final io.undertow.util.MultipartParser$PartHandler partHandler;

  private java.lang.String requestCharset;

  private final byte[] boundary;

  private int state;

  private int subState;

  private java.io.ByteArrayOutputStream currentString;

  private java.lang.String currentHeaderName;

  private io.undertow.util.HeaderMap headers;

  private io.undertow.util.MultipartParser$Encoding encodingHandler;

  public io.undertow.util.MultipartParser$ParseState(io.undertow.connector.ByteBufferPool, io.undertow.util.MultipartParser$PartHandler, java.lang.String, byte[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field state:I
       9: aload_0
      10: ldc           #5                  // int 2147483647
      12: putfield      #6                  // Field subState:I
      15: aload_0
      16: aconst_null
      17: putfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      20: aload_0
      21: aconst_null
      22: putfield      #8                  // Field currentHeaderName:Ljava/lang/String;
      25: aload_0
      26: aload_1
      27: putfield      #9                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      30: aload_0
      31: aload_2
      32: putfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
      35: aload_0
      36: aload_3
      37: putfield      #11                 // Field requestCharset:Ljava/lang/String;
      40: aload_0
      41: aload         4
      43: putfield      #12                 // Field boundary:[B
      46: return

  public void setCharacterEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field requestCharset:Ljava/lang/String;
       5: return

  public void parse(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          94
       7: aload_0
       8: getfield      #3                  // Field state:I
      11: tableswitch   { // -1 to 3
                    -1: 76
                     0: 44
                     1: 52
                     2: 60
                     3: 68
               default: 77
          }
      44: aload_0
      45: aload_1
      46: invokevirtual #14                 // Method preamble:(Ljava/nio/ByteBuffer;)V
      49: goto          0
      52: aload_0
      53: aload_1
      54: invokevirtual #15                 // Method headerName:(Ljava/nio/ByteBuffer;)V
      57: goto          0
      60: aload_0
      61: aload_1
      62: invokevirtual #16                 // Method headerValue:(Ljava/nio/ByteBuffer;)V
      65: goto          0
      68: aload_0
      69: aload_1
      70: invokevirtual #17                 // Method entity:(Ljava/nio/ByteBuffer;)V
      73: goto          0
      76: return
      77: new           #18                 // class java/lang/IllegalStateException
      80: dup
      81: aload_0
      82: getfield      #3                  // Field state:I
      85: invokedynamic #19,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      90: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: return

  private void preamble(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          188
       7: aload_1
       8: invokevirtual #21                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: aload_0
      13: getfield      #6                  // Field subState:I
      16: iflt          120
      19: aload_0
      20: getfield      #6                  // Field subState:I
      23: ldc           #5                  // int 2147483647
      25: if_icmpne     51
      28: aload_0
      29: getfield      #12                 // Field boundary:[B
      32: iconst_2
      33: baload
      34: iload_2
      35: if_icmpne     46
      38: aload_0
      39: iconst_2
      40: putfield      #6                  // Field subState:I
      43: goto          51
      46: aload_0
      47: iconst_0
      48: putfield      #6                  // Field subState:I
      51: iload_2
      52: aload_0
      53: getfield      #12                 // Field boundary:[B
      56: aload_0
      57: getfield      #6                  // Field subState:I
      60: baload
      61: if_icmpne     94
      64: aload_0
      65: dup
      66: getfield      #6                  // Field subState:I
      69: iconst_1
      70: iadd
      71: putfield      #6                  // Field subState:I
      74: aload_0
      75: getfield      #6                  // Field subState:I
      78: aload_0
      79: getfield      #12                 // Field boundary:[B
      82: arraylength
      83: if_icmpne     185
      86: aload_0
      87: iconst_m1
      88: putfield      #6                  // Field subState:I
      91: goto          185
      94: iload_2
      95: aload_0
      96: getfield      #12                 // Field boundary:[B
      99: iconst_0
     100: baload
     101: if_icmpne     112
     104: aload_0
     105: iconst_1
     106: putfield      #6                  // Field subState:I
     109: goto          185
     112: aload_0
     113: iconst_0
     114: putfield      #6                  // Field subState:I
     117: goto          185
     120: aload_0
     121: getfield      #6                  // Field subState:I
     124: iconst_m1
     125: if_icmpne     143
     128: iload_2
     129: bipush        13
     131: if_icmpne     185
     134: aload_0
     135: bipush        -2
     137: putfield      #6                  // Field subState:I
     140: goto          185
     143: aload_0
     144: getfield      #6                  // Field subState:I
     147: bipush        -2
     149: if_icmpne     185
     152: iload_2
     153: bipush        10
     155: if_icmpne     180
     158: aload_0
     159: iconst_0
     160: putfield      #6                  // Field subState:I
     163: aload_0
     164: iconst_1
     165: putfield      #3                  // Field state:I
     168: aload_0
     169: new           #22                 // class io/undertow/util/HeaderMap
     172: dup
     173: invokespecial #23                 // Method io/undertow/util/HeaderMap."<init>":()V
     176: putfield      #24                 // Field headers:Lio/undertow/util/HeaderMap;
     179: return
     180: aload_0
     181: iconst_m1
     182: putfield      #6                  // Field subState:I
     185: goto          0
     188: return

  private void headerName(java.nio.ByteBuffer) throws io.undertow.util.MalformedMessageException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          305
       7: aload_1
       8: invokevirtual #21                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: bipush        58
      15: if_icmpne     80
      18: aload_0
      19: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      22: ifnull        32
      25: aload_0
      26: getfield      #6                  // Field subState:I
      29: ifeq          40
      32: new           #25                 // class io/undertow/util/MalformedMessageException
      35: dup
      36: invokespecial #26                 // Method io/undertow/util/MalformedMessageException."<init>":()V
      39: athrow
      40: aload_0
      41: new           #27                 // class java/lang/String
      44: dup
      45: aload_0
      46: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      49: invokevirtual #28                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      52: aload_0
      53: getfield      #11                 // Field requestCharset:Ljava/lang/String;
      56: invokespecial #29                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      59: putfield      #8                  // Field currentHeaderName:Ljava/lang/String;
      62: aload_0
      63: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      66: invokevirtual #30                 // Method java/io/ByteArrayOutputStream.reset:()V
      69: aload_0
      70: iconst_0
      71: putfield      #6                  // Field subState:I
      74: aload_0
      75: iconst_2
      76: putfield      #3                  // Field state:I
      79: return
      80: iload_2
      81: bipush        13
      83: if_icmpne     109
      86: aload_0
      87: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      90: ifnull        101
      93: new           #25                 // class io/undertow/util/MalformedMessageException
      96: dup
      97: invokespecial #26                 // Method io/undertow/util/MalformedMessageException."<init>":()V
     100: athrow
     101: aload_0
     102: iconst_1
     103: putfield      #6                  // Field subState:I
     106: goto          302
     109: iload_2
     110: bipush        10
     112: if_icmpne     261
     115: aload_0
     116: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     119: ifnonnull     130
     122: aload_0
     123: getfield      #6                  // Field subState:I
     126: iconst_1
     127: if_icmpeq     138
     130: new           #25                 // class io/undertow/util/MalformedMessageException
     133: dup
     134: invokespecial #26                 // Method io/undertow/util/MalformedMessageException."<init>":()V
     137: athrow
     138: aload_0
     139: iconst_3
     140: putfield      #3                  // Field state:I
     143: aload_0
     144: iconst_0
     145: putfield      #6                  // Field subState:I
     148: aload_0
     149: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     152: aload_0
     153: getfield      #24                 // Field headers:Lio/undertow/util/HeaderMap;
     156: invokeinterface #31,  2           // InterfaceMethod io/undertow/util/MultipartParser$PartHandler.beginPart:(Lio/undertow/util/HeaderMap;)V
     161: aload_0
     162: getfield      #24                 // Field headers:Lio/undertow/util/HeaderMap;
     165: getstatic     #32                 // Field io/undertow/util/Headers.CONTENT_TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     168: invokevirtual #33                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     171: astore_3
     172: aload_3
     173: ifnonnull     190
     176: aload_0
     177: new           #34                 // class io/undertow/util/MultipartParser$IdentityEncoding
     180: dup
     181: invokespecial #35                 // Method io/undertow/util/MultipartParser$IdentityEncoding."<init>":()V
     184: putfield      #36                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     187: goto          255
     190: aload_3
     191: ldc           #37                 // String base64
     193: invokevirtual #38                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     196: ifeq          217
     199: aload_0
     200: new           #39                 // class io/undertow/util/MultipartParser$Base64Encoding
     203: dup
     204: aload_0
     205: getfield      #9                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     208: invokespecial #40                 // Method io/undertow/util/MultipartParser$Base64Encoding."<init>":(Lio/undertow/connector/ByteBufferPool;)V
     211: putfield      #36                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     214: goto          255
     217: aload_3
     218: ldc           #41                 // String quoted-printable
     220: invokevirtual #38                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     223: ifeq          244
     226: aload_0
     227: new           #42                 // class io/undertow/util/MultipartParser$QuotedPrintableEncoding
     230: dup
     231: aload_0
     232: getfield      #9                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     235: invokespecial #43                 // Method io/undertow/util/MultipartParser$QuotedPrintableEncoding."<init>":(Lio/undertow/connector/ByteBufferPool;)V
     238: putfield      #36                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     241: goto          255
     244: aload_0
     245: new           #34                 // class io/undertow/util/MultipartParser$IdentityEncoding
     248: dup
     249: invokespecial #35                 // Method io/undertow/util/MultipartParser$IdentityEncoding."<init>":()V
     252: putfield      #36                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     255: aload_0
     256: aconst_null
     257: putfield      #24                 // Field headers:Lio/undertow/util/HeaderMap;
     260: return
     261: aload_0
     262: getfield      #6                  // Field subState:I
     265: ifeq          276
     268: new           #25                 // class io/undertow/util/MalformedMessageException
     271: dup
     272: invokespecial #26                 // Method io/undertow/util/MalformedMessageException."<init>":()V
     275: athrow
     276: aload_0
     277: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     280: ifnonnull     294
     283: aload_0
     284: new           #44                 // class java/io/ByteArrayOutputStream
     287: dup
     288: invokespecial #45                 // Method java/io/ByteArrayOutputStream."<init>":()V
     291: putfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     294: aload_0
     295: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     298: iload_2
     299: invokevirtual #46                 // Method java/io/ByteArrayOutputStream.write:(I)V
     302: goto          0
     305: return

  private void headerValue(java.nio.ByteBuffer) throws io.undertow.util.MalformedMessageException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          256
       7: aload_1
       8: invokevirtual #21                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: aload_0
      13: getfield      #6                  // Field subState:I
      16: iconst_2
      17: if_icmpne     186
      20: iload_2
      21: bipush        13
      23: if_icmpne     85
      26: aload_0
      27: getfield      #24                 // Field headers:Lio/undertow/util/HeaderMap;
      30: new           #47                 // class io/undertow/util/HttpString
      33: dup
      34: aload_0
      35: getfield      #8                  // Field currentHeaderName:Ljava/lang/String;
      38: invokevirtual #48                 // Method java/lang/String.trim:()Ljava/lang/String;
      41: invokespecial #49                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      44: new           #27                 // class java/lang/String
      47: dup
      48: aload_0
      49: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      52: invokevirtual #28                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      55: aload_0
      56: getfield      #11                 // Field requestCharset:Ljava/lang/String;
      59: invokespecial #29                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      62: invokevirtual #48                 // Method java/lang/String.trim:()Ljava/lang/String;
      65: invokevirtual #50                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      68: pop
      69: aload_0
      70: iconst_1
      71: putfield      #3                  // Field state:I
      74: aload_0
      75: iconst_1
      76: putfield      #6                  // Field subState:I
      79: aload_0
      80: aconst_null
      81: putfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      84: return
      85: iload_2
      86: bipush        32
      88: if_icmpeq     97
      91: iload_2
      92: bipush        9
      94: if_icmpne     113
      97: aload_0
      98: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     101: iload_2
     102: invokevirtual #46                 // Method java/io/ByteArrayOutputStream.write:(I)V
     105: aload_0
     106: iconst_0
     107: putfield      #6                  // Field subState:I
     110: goto          253
     113: aload_0
     114: getfield      #24                 // Field headers:Lio/undertow/util/HeaderMap;
     117: new           #47                 // class io/undertow/util/HttpString
     120: dup
     121: aload_0
     122: getfield      #8                  // Field currentHeaderName:Ljava/lang/String;
     125: invokevirtual #48                 // Method java/lang/String.trim:()Ljava/lang/String;
     128: invokespecial #49                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
     131: new           #27                 // class java/lang/String
     134: dup
     135: aload_0
     136: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     139: invokevirtual #28                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     142: aload_0
     143: getfield      #11                 // Field requestCharset:Ljava/lang/String;
     146: invokespecial #29                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
     149: invokevirtual #48                 // Method java/lang/String.trim:()Ljava/lang/String;
     152: invokevirtual #50                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     155: pop
     156: aload_0
     157: iconst_1
     158: putfield      #3                  // Field state:I
     161: aload_0
     162: iconst_0
     163: putfield      #6                  // Field subState:I
     166: aload_0
     167: new           #44                 // class java/io/ByteArrayOutputStream
     170: dup
     171: invokespecial #45                 // Method java/io/ByteArrayOutputStream."<init>":()V
     174: putfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     177: aload_0
     178: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     181: iload_2
     182: invokevirtual #46                 // Method java/io/ByteArrayOutputStream.write:(I)V
     185: return
     186: iload_2
     187: bipush        13
     189: if_icmpne     200
     192: aload_0
     193: iconst_1
     194: putfield      #6                  // Field subState:I
     197: goto          253
     200: iload_2
     201: bipush        10
     203: if_icmpne     230
     206: aload_0
     207: getfield      #6                  // Field subState:I
     210: iconst_1
     211: if_icmpeq     222
     214: new           #25                 // class io/undertow/util/MalformedMessageException
     217: dup
     218: invokespecial #26                 // Method io/undertow/util/MalformedMessageException."<init>":()V
     221: athrow
     222: aload_0
     223: iconst_2
     224: putfield      #6                  // Field subState:I
     227: goto          253
     230: aload_0
     231: getfield      #6                  // Field subState:I
     234: ifeq          245
     237: new           #25                 // class io/undertow/util/MalformedMessageException
     240: dup
     241: invokespecial #26                 // Method io/undertow/util/MalformedMessageException."<init>":()V
     244: athrow
     245: aload_0
     246: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     249: iload_2
     250: invokevirtual #46                 // Method java/io/ByteArrayOutputStream.write:(I)V
     253: goto          0
     256: return

  private void entity(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field subState:I
       4: istore_2
       5: aload_1
       6: invokevirtual #51                 // Method java/nio/ByteBuffer.position:()I
       9: istore_3
      10: aload_1
      11: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      14: ifeq          348
      17: aload_1
      18: invokevirtual #21                 // Method java/nio/ByteBuffer.get:()B
      21: istore        4
      23: aload_0
      24: getfield      #6                  // Field subState:I
      27: iflt          216
      30: iload         4
      32: aload_0
      33: getfield      #12                 // Field boundary:[B
      36: aload_0
      37: getfield      #6                  // Field subState:I
      40: baload
      41: if_icmpne     133
      44: aload_0
      45: dup
      46: getfield      #6                  // Field subState:I
      49: iconst_1
      50: iadd
      51: putfield      #6                  // Field subState:I
      54: aload_0
      55: getfield      #6                  // Field subState:I
      58: aload_0
      59: getfield      #12                 // Field boundary:[B
      62: arraylength
      63: if_icmpne     345
      66: iconst_0
      67: istore_2
      68: aload_1
      69: invokevirtual #52                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      72: astore        5
      74: aload         5
      76: iload_3
      77: invokevirtual #53                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      80: pop
      81: aload         5
      83: aload_1
      84: invokevirtual #51                 // Method java/nio/ByteBuffer.position:()I
      87: aload_0
      88: getfield      #12                 // Field boundary:[B
      91: arraylength
      92: isub
      93: iconst_0
      94: invokestatic  #54                 // Method java/lang/Math.max:(II)I
      97: invokevirtual #55                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     100: pop
     101: aload_0
     102: getfield      #36                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     105: aload_0
     106: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     109: aload         5
     111: invokeinterface #56,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     116: aload_0
     117: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     120: invokeinterface #57,  1           // InterfaceMethod io/undertow/util/MultipartParser$PartHandler.endPart:()V
     125: aload_0
     126: iconst_m1
     127: putfield      #6                  // Field subState:I
     130: goto          345
     133: iload         4
     135: aload_0
     136: getfield      #12                 // Field boundary:[B
     139: iconst_0
     140: baload
     141: if_icmpne     180
     144: iload_2
     145: ifle          172
     148: aload_0
     149: getfield      #36                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     152: aload_0
     153: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     156: aload_0
     157: getfield      #12                 // Field boundary:[B
     160: iconst_0
     161: iload_2
     162: invokestatic  #58                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     165: invokeinterface #56,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     170: iconst_0
     171: istore_2
     172: aload_0
     173: iconst_1
     174: putfield      #6                  // Field subState:I
     177: goto          345
     180: iload_2
     181: ifle          208
     184: aload_0
     185: getfield      #36                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     188: aload_0
     189: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     192: aload_0
     193: getfield      #12                 // Field boundary:[B
     196: iconst_0
     197: iload_2
     198: invokestatic  #58                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     201: invokeinterface #56,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     206: iconst_0
     207: istore_2
     208: aload_0
     209: iconst_0
     210: putfield      #6                  // Field subState:I
     213: goto          345
     216: aload_0
     217: getfield      #6                  // Field subState:I
     220: iconst_m1
     221: if_icmpne     256
     224: iload         4
     226: bipush        13
     228: if_icmpne     240
     231: aload_0
     232: bipush        -2
     234: putfield      #6                  // Field subState:I
     237: goto          345
     240: iload         4
     242: bipush        45
     244: if_icmpne     345
     247: aload_0
     248: bipush        -3
     250: putfield      #6                  // Field subState:I
     253: goto          345
     256: aload_0
     257: getfield      #6                  // Field subState:I
     260: bipush        -2
     262: if_icmpne     318
     265: iload         4
     267: bipush        10
     269: if_icmpne     294
     272: aload_0
     273: iconst_0
     274: putfield      #6                  // Field subState:I
     277: aload_0
     278: iconst_1
     279: putfield      #3                  // Field state:I
     282: aload_0
     283: new           #22                 // class io/undertow/util/HeaderMap
     286: dup
     287: invokespecial #23                 // Method io/undertow/util/HeaderMap."<init>":()V
     290: putfield      #24                 // Field headers:Lio/undertow/util/HeaderMap;
     293: return
     294: iload         4
     296: bipush        45
     298: if_icmpne     310
     301: aload_0
     302: bipush        -3
     304: putfield      #6                  // Field subState:I
     307: goto          345
     310: aload_0
     311: iconst_m1
     312: putfield      #6                  // Field subState:I
     315: goto          345
     318: aload_0
     319: getfield      #6                  // Field subState:I
     322: bipush        -3
     324: if_icmpne     345
     327: iload         4
     329: bipush        45
     331: if_icmpne     340
     334: aload_0
     335: iconst_m1
     336: putfield      #3                  // Field state:I
     339: return
     340: aload_0
     341: iconst_m1
     342: putfield      #6                  // Field subState:I
     345: goto          10
     348: aload_1
     349: invokevirtual #52                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     352: astore        4
     354: aload         4
     356: iload_3
     357: invokevirtual #53                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     360: pop
     361: aload_0
     362: getfield      #6                  // Field subState:I
     365: ifne          386
     368: aload_0
     369: getfield      #36                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     372: aload_0
     373: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     376: aload         4
     378: invokeinterface #56,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     383: goto          436
     386: aload         4
     388: invokevirtual #59                 // Method java/nio/ByteBuffer.remaining:()I
     391: aload_0
     392: getfield      #6                  // Field subState:I
     395: if_icmple     436
     398: aload_0
     399: getfield      #6                  // Field subState:I
     402: ifle          436
     405: aload         4
     407: aload         4
     409: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:()I
     412: aload_0
     413: getfield      #6                  // Field subState:I
     416: isub
     417: invokevirtual #55                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     420: pop
     421: aload_0
     422: getfield      #36                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     425: aload_0
     426: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     429: aload         4
     431: invokeinterface #56,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     436: return

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
}
