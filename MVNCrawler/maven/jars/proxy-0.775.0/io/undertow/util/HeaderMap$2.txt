Compiled from "HeaderMap.java"
class io.undertow.util.HeaderMap$2 extends java.util.AbstractCollection<io.undertow.util.HttpString> {
  final io.undertow.util.HeaderMap this$0;

  io.undertow.util.HeaderMap$2(io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/util/HeaderMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractCollection."<init>":()V
       9: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #3                  // class io/undertow/util/HttpString
       4: ifeq          25
       7: aload_0
       8: getfield      #1                  // Field this$0:Lio/undertow/util/HeaderMap;
      11: aload_1
      12: checkcast     #3                  // class io/undertow/util/HttpString
      15: invokevirtual #4                  // Method io/undertow/util/HeaderMap.getEntry:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean add(io.undertow.util.HttpString);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/HeaderMap;
       4: aload_1
       5: invokevirtual #5                  // Method io/undertow/util/HeaderMap.getOrCreateEntry:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
       8: pop
       9: iconst_1
      10: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #3                  // class io/undertow/util/HttpString
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #3                  // class io/undertow/util/HttpString
      13: astore_2
      14: aload_0
      15: getfield      #1                  // Field this$0:Lio/undertow/util/HeaderMap;
      18: aload_2
      19: invokevirtual #4                  // Method io/undertow/util/HeaderMap.getEntry:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
      22: astore_3
      23: aload_3
      24: ifnonnull     29
      27: iconst_0
      28: ireturn
      29: aload_3
      30: invokevirtual #6                  // Method io/undertow/util/HeaderValues.clear:()V
      33: iconst_1
      34: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/HeaderMap;
       4: invokevirtual #7                  // Method io/undertow/util/HeaderMap.clear:()Lio/undertow/util/HeaderMap;
       7: pop
       8: return

  public java.util.Iterator<io.undertow.util.HttpString> iterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/HeaderMap;
       4: invokevirtual #8                  // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: new           #9                  // class io/undertow/util/HeaderMap$2$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #10                 // Method io/undertow/util/HeaderMap$2$1."<init>":(Lio/undertow/util/HeaderMap$2;Ljava/util/Iterator;)V
      17: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/HeaderMap;
       4: invokevirtual #11                 // Method io/undertow/util/HeaderMap.size:()I
       7: ireturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class io/undertow/util/HttpString
       5: invokevirtual #12                 // Method add:(Lio/undertow/util/HttpString;)Z
       8: ireturn
}
