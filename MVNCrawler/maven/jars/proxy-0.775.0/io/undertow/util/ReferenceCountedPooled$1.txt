Compiled from "ReferenceCountedPooled.java"
class io.undertow.util.ReferenceCountedPooled$1 implements io.undertow.connector.PooledByteBuffer {
  volatile boolean free;

  final java.nio.ByteBuffer val$newValue;

  final io.undertow.util.ReferenceCountedPooled this$0;

  io.undertow.util.ReferenceCountedPooled$1(io.undertow.util.ReferenceCountedPooled, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/util/ReferenceCountedPooled;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$newValue:Ljava/nio/ByteBuffer;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field free:Z
      19: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field free:Z
       4: ifne          43
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #4                  // Field free:Z
      15: ifeq          21
      18: aload_1
      19: monitorexit
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #4                  // Field free:Z
      26: aload_0
      27: getfield      #1                  // Field this$0:Lio/undertow/util/ReferenceCountedPooled;
      30: invokevirtual #5                  // Method io/undertow/util/ReferenceCountedPooled.freeInternal:()V
      33: aload_1
      34: monitorexit
      35: goto          43
      38: astore_2
      39: aload_1
      40: monitorexit
      41: aload_2
      42: athrow
      43: return
    Exception table:
       from    to  target type
          11    20    38   any
          21    35    38   any
          38    41    38   any

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #4                  // Field free:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.nio.ByteBuffer getBuffer() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field free:Z
       4: ifeq          16
       7: getstatic     #6                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #7,  1            // InterfaceMethod io/undertow/UndertowMessages.bufferAlreadyFreed:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: getfield      #2                  // Field val$newValue:Ljava/nio/ByteBuffer;
      20: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$newValue:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #4                  // Field free:Z
       8: aload_0
       9: getfield      #1                  // Field this$0:Lio/undertow/util/ReferenceCountedPooled;
      12: getfield      #8                  // Field io/undertow/util/ReferenceCountedPooled.underlying:Lio/undertow/connector/PooledByteBuffer;
      15: aload_0
      16: getfield      #1                  // Field this$0:Lio/undertow/util/ReferenceCountedPooled;
      19: getfield      #9                  // Field io/undertow/util/ReferenceCountedPooled.referenceCount:I
      22: aload_0
      23: getfield      #1                  // Field this$0:Lio/undertow/util/ReferenceCountedPooled;
      26: getfield      #10                 // Field io/undertow/util/ReferenceCountedPooled.mainFreed:Z
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/undertow/util/ReferenceCountedPooled;
      33: getfield      #11                 // Field io/undertow/util/ReferenceCountedPooled.slice:Ljava/nio/ByteBuffer;
      36: invokedynamic #12,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/nio/ByteBuffer;ZLio/undertow/connector/PooledByteBuffer;IZLjava/nio/ByteBuffer;)Ljava/lang/String;
      41: areturn
}
