Compiled from "FlexBase64.java"
public final class io.undertow.util.FlexBase64$Encoder {
  private int state;

  private int last;

  private int count;

  private final boolean wrap;

  private int lastPos;

  private final byte[] encodingTable;

  private io.undertow.util.FlexBase64$Encoder(boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field wrap:Z
       9: aload_0
      10: iload_2
      11: ifeq          20
      14: getstatic     #3                  // Field io/undertow/util/FlexBase64.URL_ENCODING_TABLE:[B
      17: goto          23
      20: getstatic     #4                  // Field io/undertow/util/FlexBase64.STANDARD_ENCODING_TABLE:[B
      23: putfield      #5                  // Field encodingTable:[B
      26: return

  public void encode(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: new           #6                  // class java/lang/IllegalStateException
       7: dup
       8: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #8                  // Field last:I
      16: istore_3
      17: aload_0
      18: getfield      #9                  // Field state:I
      21: istore        4
      23: aload_0
      24: getfield      #2                  // Field wrap:Z
      27: istore        5
      29: aload_0
      30: getfield      #10                 // Field count:I
      33: istore        6
      35: aload_0
      36: getfield      #5                  // Field encodingTable:[B
      39: astore        7
      41: aload_1
      42: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
      45: istore        8
      47: iload         8
      49: ifle          274
      52: iconst_4
      53: iload         4
      55: isub
      56: istore        9
      58: iload         5
      60: ifeq          77
      63: iload         6
      65: bipush        72
      67: if_icmplt     77
      70: iload         9
      72: iconst_2
      73: iadd
      74: goto          79
      77: iload         9
      79: istore        9
      81: aload_2
      82: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
      85: iload         9
      87: if_icmpge     93
      90: goto          274
      93: aload_1
      94: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      97: sipush        255
     100: iand
     101: istore        10
     103: iload         4
     105: ifne          151
     108: aload_2
     109: aload         7
     111: iload         10
     113: iconst_2
     114: iushr
     115: baload
     116: invokevirtual #13                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     119: pop
     120: iload         10
     122: iconst_3
     123: iand
     124: iconst_4
     125: ishl
     126: istore_3
     127: iinc          4, 1
     130: iinc          8, -1
     133: iload         8
     135: ifgt          141
     138: goto          274
     141: aload_1
     142: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
     145: sipush        255
     148: iand
     149: istore        10
     151: iload         4
     153: iconst_1
     154: if_icmpne     203
     157: aload_2
     158: aload         7
     160: iload_3
     161: iload         10
     163: iconst_4
     164: iushr
     165: ior
     166: baload
     167: invokevirtual #13                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     170: pop
     171: iload         10
     173: bipush        15
     175: iand
     176: iconst_2
     177: ishl
     178: istore_3
     179: iinc          4, 1
     182: iinc          8, -1
     185: iload         8
     187: ifgt          193
     190: goto          274
     193: aload_1
     194: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
     197: sipush        255
     200: iand
     201: istore        10
     203: iload         4
     205: iconst_2
     206: if_icmpne     245
     209: aload_2
     210: aload         7
     212: iload_3
     213: iload         10
     215: bipush        6
     217: iushr
     218: ior
     219: baload
     220: invokevirtual #13                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     223: pop
     224: aload_2
     225: aload         7
     227: iload         10
     229: bipush        63
     231: iand
     232: baload
     233: invokevirtual #13                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     236: pop
     237: iconst_0
     238: dup
     239: istore        4
     241: istore_3
     242: iinc          8, -1
     245: iload         5
     247: ifeq          271
     250: iinc          6, 4
     253: iload         6
     255: bipush        76
     257: if_icmplt     271
     260: iconst_0
     261: istore        6
     263: aload_2
     264: sipush        3338
     267: invokevirtual #14                 // Method java/nio/ByteBuffer.putShort:(S)Ljava/nio/ByteBuffer;
     270: pop
     271: goto          47
     274: aload_0
     275: iload         6
     277: putfield      #10                 // Field count:I
     280: aload_0
     281: iload_3
     282: putfield      #8                  // Field last:I
     285: aload_0
     286: iload         4
     288: putfield      #9                  // Field state:I
     291: aload_0
     292: aload_1
     293: invokevirtual #15                 // Method java/nio/ByteBuffer.position:()I
     296: putfield      #16                 // Field lastPos:I
     299: return

  public int encode(byte[], int, int, byte[], int, int);
    Code:
       0: aload         4
       2: ifnonnull     13
       5: new           #6                  // class java/lang/IllegalStateException
       8: dup
       9: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #8                  // Field last:I
      17: istore        7
      19: aload_0
      20: getfield      #9                  // Field state:I
      23: istore        8
      25: aload_0
      26: getfield      #10                 // Field count:I
      29: istore        9
      31: aload_0
      32: getfield      #2                  // Field wrap:Z
      35: istore        10
      37: aload_0
      38: getfield      #5                  // Field encodingTable:[B
      41: astore        11
      43: iload_3
      44: iload_2
      45: if_icmple     297
      48: iconst_4
      49: iload         8
      51: isub
      52: istore        12
      54: iload         10
      56: ifeq          73
      59: iload         9
      61: bipush        72
      63: if_icmplt     73
      66: iload         12
      68: iconst_2
      69: iadd
      70: goto          75
      73: iload         12
      75: istore        12
      77: iload         12
      79: iload         5
      81: iadd
      82: iload         6
      84: if_icmple     90
      87: goto          297
      90: aload_1
      91: iload_2
      92: iinc          2, 1
      95: baload
      96: sipush        255
      99: iand
     100: istore        13
     102: iload         8
     104: ifne          153
     107: aload         4
     109: iload         5
     111: iinc          5, 1
     114: aload         11
     116: iload         13
     118: iconst_2
     119: iushr
     120: baload
     121: bastore
     122: iload         13
     124: iconst_3
     125: iand
     126: iconst_4
     127: ishl
     128: istore        7
     130: iinc          8, 1
     133: iload_2
     134: iload_3
     135: if_icmplt     141
     138: goto          297
     141: aload_1
     142: iload_2
     143: iinc          2, 1
     146: baload
     147: sipush        255
     150: iand
     151: istore        13
     153: iload         8
     155: iconst_1
     156: if_icmpne     209
     159: aload         4
     161: iload         5
     163: iinc          5, 1
     166: aload         11
     168: iload         7
     170: iload         13
     172: iconst_4
     173: iushr
     174: ior
     175: baload
     176: bastore
     177: iload         13
     179: bipush        15
     181: iand
     182: iconst_2
     183: ishl
     184: istore        7
     186: iinc          8, 1
     189: iload_2
     190: iload_3
     191: if_icmplt     197
     194: goto          297
     197: aload_1
     198: iload_2
     199: iinc          2, 1
     202: baload
     203: sipush        255
     206: iand
     207: istore        13
     209: iload         8
     211: iconst_2
     212: if_icmpne     256
     215: aload         4
     217: iload         5
     219: iinc          5, 1
     222: aload         11
     224: iload         7
     226: iload         13
     228: bipush        6
     230: iushr
     231: ior
     232: baload
     233: bastore
     234: aload         4
     236: iload         5
     238: iinc          5, 1
     241: aload         11
     243: iload         13
     245: bipush        63
     247: iand
     248: baload
     249: bastore
     250: iconst_0
     251: dup
     252: istore        8
     254: istore        7
     256: iload         10
     258: ifeq          294
     261: iinc          9, 4
     264: iload         9
     266: bipush        76
     268: if_icmplt     294
     271: iconst_0
     272: istore        9
     274: aload         4
     276: iload         5
     278: iinc          5, 1
     281: bipush        13
     283: bastore
     284: aload         4
     286: iload         5
     288: iinc          5, 1
     291: bipush        10
     293: bastore
     294: goto          43
     297: aload_0
     298: iload         9
     300: putfield      #10                 // Field count:I
     303: aload_0
     304: iload         7
     306: putfield      #8                  // Field last:I
     309: aload_0
     310: iload         8
     312: putfield      #9                  // Field state:I
     315: aload_0
     316: iload_2
     317: putfield      #16                 // Field lastPos:I
     320: iload         5
     322: ireturn

  private static java.lang.String encodeString(byte[], int, int, boolean, boolean);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: istore        5
       5: iload         5
       7: iconst_3
       8: irem
       9: istore        6
      11: iload         5
      13: iload         6
      15: ifne          22
      18: iconst_0
      19: goto          26
      22: iconst_3
      23: iload         6
      25: isub
      26: iadd
      27: iconst_3
      28: idiv
      29: iconst_4
      30: imul
      31: istore        5
      33: iload         5
      35: iload_3
      36: ifeq          51
      39: iload         5
      41: bipush        76
      43: idiv
      44: iconst_2
      45: imul
      46: iconst_2
      47: iadd
      48: goto          52
      51: iconst_0
      52: iadd
      53: istore        5
      55: iload         5
      57: newarray       char
      59: astore        7
      61: iconst_0
      62: istore        8
      64: iconst_0
      65: istore        9
      67: iconst_0
      68: istore        10
      70: iconst_0
      71: istore        11
      73: iload         4
      75: ifeq          84
      78: getstatic     #3                  // Field io/undertow/util/FlexBase64.URL_ENCODING_TABLE:[B
      81: goto          87
      84: getstatic     #4                  // Field io/undertow/util/FlexBase64.STANDARD_ENCODING_TABLE:[B
      87: astore        12
      89: iload_2
      90: iload_1
      91: if_icmple     281
      94: aload_0
      95: iload_1
      96: iinc          1, 1
      99: baload
     100: sipush        255
     103: iand
     104: istore        13
     106: aload         7
     108: iload         8
     110: iinc          8, 1
     113: aload         12
     115: iload         13
     117: iconst_2
     118: iushr
     119: baload
     120: i2c
     121: castore
     122: iload         13
     124: iconst_3
     125: iand
     126: iconst_4
     127: ishl
     128: istore        9
     130: iload_1
     131: iload_2
     132: if_icmplt     141
     135: iconst_1
     136: istore        11
     138: goto          281
     141: aload_0
     142: iload_1
     143: iinc          1, 1
     146: baload
     147: sipush        255
     150: iand
     151: istore        13
     153: aload         7
     155: iload         8
     157: iinc          8, 1
     160: aload         12
     162: iload         9
     164: iload         13
     166: iconst_4
     167: iushr
     168: ior
     169: baload
     170: i2c
     171: castore
     172: iload         13
     174: bipush        15
     176: iand
     177: iconst_2
     178: ishl
     179: istore        9
     181: iload_1
     182: iload_2
     183: if_icmplt     192
     186: iconst_2
     187: istore        11
     189: goto          281
     192: aload_0
     193: iload_1
     194: iinc          1, 1
     197: baload
     198: sipush        255
     201: iand
     202: istore        13
     204: aload         7
     206: iload         8
     208: iinc          8, 1
     211: aload         12
     213: iload         9
     215: iload         13
     217: bipush        6
     219: iushr
     220: ior
     221: baload
     222: i2c
     223: castore
     224: aload         7
     226: iload         8
     228: iinc          8, 1
     231: aload         12
     233: iload         13
     235: bipush        63
     237: iand
     238: baload
     239: i2c
     240: castore
     241: iload_3
     242: ifeq          278
     245: iinc          10, 4
     248: iload         10
     250: bipush        76
     252: if_icmplt     278
     255: iconst_0
     256: istore        10
     258: aload         7
     260: iload         8
     262: iinc          8, 1
     265: bipush        13
     267: castore
     268: aload         7
     270: iload         8
     272: iinc          8, 1
     275: bipush        10
     277: castore
     278: goto          89
     281: aload         7
     283: iload         8
     285: iload         11
     287: iload         9
     289: iload_3
     290: iload         4
     292: invokestatic  #17                 // Method complete:([CIIIZZ)I
     295: pop
     296: getstatic     #18                 // Field io/undertow/util/FlexBase64.STRING_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
     299: ifnull        327
     302: getstatic     #18                 // Field io/undertow/util/FlexBase64.STRING_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
     305: iconst_2
     306: anewarray     #19                 // class java/lang/Object
     309: dup
     310: iconst_0
     311: aload         7
     313: aastore
     314: dup
     315: iconst_1
     316: getstatic     #20                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     319: aastore
     320: invokevirtual #21                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     323: checkcast     #22                 // class java/lang/String
     326: areturn
     327: goto          332
     330: astore        13
     332: new           #22                 // class java/lang/String
     335: dup
     336: aload         7
     338: invokespecial #24                 // Method java/lang/String."<init>":([C)V
     341: areturn
    Exception table:
       from    to  target type
         296   326   330   Class java/lang/Exception

  private static byte[] encodeBytes(byte[], int, int, boolean, boolean);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: istore        5
       5: iload         5
       7: iconst_3
       8: irem
       9: istore        6
      11: iload         5
      13: iload         6
      15: ifne          22
      18: iconst_0
      19: goto          26
      22: iconst_3
      23: iload         6
      25: isub
      26: iadd
      27: iconst_3
      28: idiv
      29: iconst_4
      30: imul
      31: istore        5
      33: iload         5
      35: iload_3
      36: ifeq          51
      39: iload         5
      41: bipush        76
      43: idiv
      44: iconst_2
      45: imul
      46: iconst_2
      47: iadd
      48: goto          52
      51: iconst_0
      52: iadd
      53: istore        5
      55: iload         5
      57: newarray       byte
      59: astore        7
      61: iconst_0
      62: istore        8
      64: iconst_0
      65: istore        9
      67: iconst_0
      68: istore        10
      70: iconst_0
      71: istore        11
      73: iload         4
      75: ifeq          84
      78: getstatic     #3                  // Field io/undertow/util/FlexBase64.URL_ENCODING_TABLE:[B
      81: goto          87
      84: getstatic     #4                  // Field io/undertow/util/FlexBase64.STANDARD_ENCODING_TABLE:[B
      87: astore        12
      89: iload_2
      90: iload_1
      91: if_icmple     277
      94: aload_0
      95: iload_1
      96: iinc          1, 1
      99: baload
     100: sipush        255
     103: iand
     104: istore        13
     106: aload         7
     108: iload         8
     110: iinc          8, 1
     113: aload         12
     115: iload         13
     117: iconst_2
     118: iushr
     119: baload
     120: bastore
     121: iload         13
     123: iconst_3
     124: iand
     125: iconst_4
     126: ishl
     127: istore        10
     129: iload_1
     130: iload_2
     131: if_icmplt     140
     134: iconst_1
     135: istore        11
     137: goto          277
     140: aload_0
     141: iload_1
     142: iinc          1, 1
     145: baload
     146: sipush        255
     149: iand
     150: istore        13
     152: aload         7
     154: iload         8
     156: iinc          8, 1
     159: aload         12
     161: iload         10
     163: iload         13
     165: iconst_4
     166: iushr
     167: ior
     168: baload
     169: bastore
     170: iload         13
     172: bipush        15
     174: iand
     175: iconst_2
     176: ishl
     177: istore        10
     179: iload_1
     180: iload_2
     181: if_icmplt     190
     184: iconst_2
     185: istore        11
     187: goto          277
     190: aload_0
     191: iload_1
     192: iinc          1, 1
     195: baload
     196: sipush        255
     199: iand
     200: istore        13
     202: aload         7
     204: iload         8
     206: iinc          8, 1
     209: aload         12
     211: iload         10
     213: iload         13
     215: bipush        6
     217: iushr
     218: ior
     219: baload
     220: bastore
     221: aload         7
     223: iload         8
     225: iinc          8, 1
     228: aload         12
     230: iload         13
     232: bipush        63
     234: iand
     235: baload
     236: bastore
     237: iload_3
     238: ifeq          274
     241: iinc          9, 4
     244: iload         9
     246: bipush        76
     248: if_icmplt     274
     251: iconst_0
     252: istore        9
     254: aload         7
     256: iload         8
     258: iinc          8, 1
     261: bipush        13
     263: bastore
     264: aload         7
     266: iload         8
     268: iinc          8, 1
     271: bipush        10
     273: bastore
     274: goto          89
     277: aload         7
     279: iload         8
     281: iload         11
     283: iload         10
     285: iload_3
     286: iload         4
     288: invokestatic  #25                 // Method complete:([BIIIZZ)I
     291: pop
     292: aload         7
     294: areturn

  private static java.lang.String encodeString(java.nio.ByteBuffer, boolean, boolean);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_3
       5: iload_3
       6: iconst_3
       7: irem
       8: istore        4
      10: iload_3
      11: iload         4
      13: ifne          20
      16: iconst_0
      17: goto          24
      20: iconst_3
      21: iload         4
      23: isub
      24: iadd
      25: iconst_3
      26: idiv
      27: iconst_4
      28: imul
      29: istore        5
      31: iload         5
      33: iload_1
      34: ifeq          49
      37: iload         5
      39: bipush        76
      41: idiv
      42: iconst_2
      43: imul
      44: iconst_2
      45: iadd
      46: goto          50
      49: iconst_0
      50: iadd
      51: istore        5
      53: iload         5
      55: newarray       char
      57: astore        6
      59: iconst_0
      60: istore        7
      62: iconst_0
      63: istore        8
      65: iconst_0
      66: istore        9
      68: iconst_0
      69: istore        10
      71: iload_2
      72: ifeq          81
      75: getstatic     #3                  // Field io/undertow/util/FlexBase64.URL_ENCODING_TABLE:[B
      78: goto          84
      81: getstatic     #4                  // Field io/undertow/util/FlexBase64.STANDARD_ENCODING_TABLE:[B
      84: astore        11
      86: iload_3
      87: ifle          278
      90: aload_0
      91: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      94: sipush        255
      97: iand
      98: istore        12
     100: aload         6
     102: iload         7
     104: iinc          7, 1
     107: aload         11
     109: iload         12
     111: iconst_2
     112: iushr
     113: baload
     114: i2c
     115: castore
     116: iload         12
     118: iconst_3
     119: iand
     120: iconst_4
     121: ishl
     122: istore        8
     124: iinc          3, -1
     127: iload_3
     128: ifgt          137
     131: iconst_1
     132: istore        9
     134: goto          278
     137: aload_0
     138: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
     141: sipush        255
     144: iand
     145: istore        12
     147: aload         6
     149: iload         7
     151: iinc          7, 1
     154: aload         11
     156: iload         8
     158: iload         12
     160: iconst_4
     161: iushr
     162: ior
     163: baload
     164: i2c
     165: castore
     166: iload         12
     168: bipush        15
     170: iand
     171: iconst_2
     172: ishl
     173: istore        8
     175: iinc          3, -1
     178: iload_3
     179: ifgt          188
     182: iconst_2
     183: istore        9
     185: goto          278
     188: aload_0
     189: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
     192: sipush        255
     195: iand
     196: istore        12
     198: aload         6
     200: iload         7
     202: iinc          7, 1
     205: aload         11
     207: iload         8
     209: iload         12
     211: bipush        6
     213: iushr
     214: ior
     215: baload
     216: i2c
     217: castore
     218: aload         6
     220: iload         7
     222: iinc          7, 1
     225: aload         11
     227: iload         12
     229: bipush        63
     231: iand
     232: baload
     233: i2c
     234: castore
     235: iinc          3, -1
     238: iload_1
     239: ifeq          275
     242: iinc          10, 4
     245: iload         10
     247: bipush        76
     249: if_icmplt     275
     252: iconst_0
     253: istore        10
     255: aload         6
     257: iload         7
     259: iinc          7, 1
     262: bipush        13
     264: castore
     265: aload         6
     267: iload         7
     269: iinc          7, 1
     272: bipush        10
     274: castore
     275: goto          86
     278: aload         6
     280: iload         7
     282: iload         9
     284: iload         8
     286: iload_1
     287: iload_2
     288: invokestatic  #17                 // Method complete:([CIIIZZ)I
     291: pop
     292: getstatic     #18                 // Field io/undertow/util/FlexBase64.STRING_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
     295: ifnull        323
     298: getstatic     #18                 // Field io/undertow/util/FlexBase64.STRING_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
     301: iconst_2
     302: anewarray     #19                 // class java/lang/Object
     305: dup
     306: iconst_0
     307: aload         6
     309: aastore
     310: dup
     311: iconst_1
     312: getstatic     #20                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     315: aastore
     316: invokevirtual #21                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     319: checkcast     #22                 // class java/lang/String
     322: areturn
     323: goto          328
     326: astore        12
     328: new           #22                 // class java/lang/String
     331: dup
     332: aload         6
     334: invokespecial #24                 // Method java/lang/String."<init>":([C)V
     337: areturn
    Exception table:
       from    to  target type
         292   322   326   Class java/lang/Exception

  public int getLastInputPosition();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lastPos:I
       4: ireturn

  public int complete(byte[], int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: ifle          56
       7: aload_1
       8: iload_2
       9: iinc          2, 1
      12: aload_0
      13: getfield      #5                  // Field encodingTable:[B
      16: aload_0
      17: getfield      #8                  // Field last:I
      20: baload
      21: bastore
      22: aload_0
      23: getfield      #9                  // Field state:I
      26: istore_3
      27: iload_3
      28: iconst_3
      29: if_icmpge     46
      32: aload_1
      33: iload_2
      34: iinc          2, 1
      37: bipush        61
      39: bastore
      40: iinc          3, 1
      43: goto          27
      46: aload_0
      47: aload_0
      48: iconst_0
      49: dup_x1
      50: putfield      #9                  // Field state:I
      53: putfield      #8                  // Field last:I
      56: aload_0
      57: getfield      #2                  // Field wrap:Z
      60: ifeq          79
      63: aload_1
      64: iload_2
      65: iinc          2, 1
      68: bipush        13
      70: bastore
      71: aload_1
      72: iload_2
      73: iinc          2, 1
      76: bipush        10
      78: bastore
      79: iload_2
      80: ireturn

  private static int complete(char[], int, int, int, boolean, boolean);
    Code:
       0: iload_2
       1: ifle          50
       4: aload_0
       5: iload_1
       6: iinc          1, 1
       9: iload         5
      11: ifeq          20
      14: getstatic     #3                  // Field io/undertow/util/FlexBase64.URL_ENCODING_TABLE:[B
      17: goto          23
      20: getstatic     #4                  // Field io/undertow/util/FlexBase64.STANDARD_ENCODING_TABLE:[B
      23: iload_3
      24: baload
      25: i2c
      26: castore
      27: iload_2
      28: istore        6
      30: iload         6
      32: iconst_3
      33: if_icmpge     50
      36: aload_0
      37: iload_1
      38: iinc          1, 1
      41: bipush        61
      43: castore
      44: iinc          6, 1
      47: goto          30
      50: iload         4
      52: ifeq          71
      55: aload_0
      56: iload_1
      57: iinc          1, 1
      60: bipush        13
      62: castore
      63: aload_0
      64: iload_1
      65: iinc          1, 1
      68: bipush        10
      70: castore
      71: iload_1
      72: ireturn

  private static int complete(byte[], int, int, int, boolean, boolean);
    Code:
       0: iload_2
       1: ifle          49
       4: aload_0
       5: iload_1
       6: iinc          1, 1
       9: iload         5
      11: ifeq          20
      14: getstatic     #3                  // Field io/undertow/util/FlexBase64.URL_ENCODING_TABLE:[B
      17: goto          23
      20: getstatic     #4                  // Field io/undertow/util/FlexBase64.STANDARD_ENCODING_TABLE:[B
      23: iload_3
      24: baload
      25: bastore
      26: iload_2
      27: istore        6
      29: iload         6
      31: iconst_3
      32: if_icmpge     49
      35: aload_0
      36: iload_1
      37: iinc          1, 1
      40: bipush        61
      42: bastore
      43: iinc          6, 1
      46: goto          29
      49: iload         4
      51: ifeq          70
      54: aload_0
      55: iload_1
      56: iinc          1, 1
      59: bipush        13
      61: bastore
      62: aload_0
      63: iload_1
      64: iinc          1, 1
      67: bipush        10
      69: bastore
      70: iload_1
      71: ireturn

  public void complete(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:I
       4: ifle          54
       7: aload_1
       8: aload_0
       9: getfield      #5                  // Field encodingTable:[B
      12: aload_0
      13: getfield      #8                  // Field last:I
      16: baload
      17: invokevirtual #13                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      20: pop
      21: aload_0
      22: getfield      #9                  // Field state:I
      25: istore_2
      26: iload_2
      27: iconst_3
      28: if_icmpge     44
      31: aload_1
      32: bipush        61
      34: invokevirtual #13                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      37: pop
      38: iinc          2, 1
      41: goto          26
      44: aload_0
      45: aload_0
      46: iconst_0
      47: dup_x1
      48: putfield      #9                  // Field state:I
      51: putfield      #8                  // Field last:I
      54: aload_0
      55: getfield      #2                  // Field wrap:Z
      58: ifeq          69
      61: aload_1
      62: sipush        3338
      65: invokevirtual #14                 // Method java/nio/ByteBuffer.putShort:(S)Ljava/nio/ByteBuffer;
      68: pop
      69: aload_0
      70: iconst_0
      71: putfield      #10                 // Field count:I
      74: return
}
