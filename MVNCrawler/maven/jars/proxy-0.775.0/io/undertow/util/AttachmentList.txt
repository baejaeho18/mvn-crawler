Compiled from "AttachmentList.java"
public final class io.undertow.util.AttachmentList<T> implements java.util.List<T>, java.util.RandomAccess {
  private final java.lang.Class<T> valueClass;

  private final java.util.List<T> delegate;

  public io.undertow.util.AttachmentList(int, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: iload_1
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      13: aload_2
      14: invokestatic  #4                  // Method java/util/Collections.checkedList:(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;
      17: putfield      #5                  // Field delegate:Ljava/util/List;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field valueClass:Ljava/lang/Class;
      25: return

  public io.undertow.util.AttachmentList(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      12: aload_1
      13: invokestatic  #4                  // Method java/util/Collections.checkedList:(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;
      16: putfield      #5                  // Field delegate:Ljava/util/List;
      19: aload_0
      20: aload_1
      21: putfield      #6                  // Field valueClass:Ljava/lang/Class;
      24: return

  public io.undertow.util.AttachmentList(java.util.Collection<? extends T>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.size:()I
      15: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      18: aload_2
      19: invokestatic  #4                  // Method java/util/Collections.checkedList:(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;
      22: putfield      #5                  // Field delegate:Ljava/util/List;
      25: aload_0
      26: getfield      #5                  // Field delegate:Ljava/util/List;
      29: aload_1
      30: invokeinterface #9,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      35: pop
      36: aload_0
      37: aload_2
      38: putfield      #6                  // Field valueClass:Ljava/lang/Class;
      41: return

  public java.lang.Class<T> getValueClass();
    Code:
       0: aload_0
       1: getfield      #6                  // Field valueClass:Ljava/lang/Class;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Iterator<T> iterator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
       9: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      10: areturn

  public boolean add(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      10: ireturn

  public boolean addAll(java.util.Collection<? extends T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      10: ireturn

  public boolean addAll(int, java.util.Collection<? extends T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: iload_1
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod java/util/List.addAll:(ILjava/util/Collection;)Z
      11: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      10: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/List.clear:()V
       9: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      10: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/List.hashCode:()I
       9: ireturn

  public T get(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: iload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: areturn

  public T set(int, T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: iload_1
       5: aload_2
       6: invokeinterface #26,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public void add(int, T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: iload_1
       5: aload_2
       6: invokeinterface #27,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      11: return

  public T remove(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: iload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      10: areturn

  public int indexOf(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      10: ireturn

  public int lastIndexOf(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/List.lastIndexOf:(Ljava/lang/Object;)I
      10: ireturn

  public java.util.ListIterator<T> listIterator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
       9: areturn

  public java.util.ListIterator<T> listIterator(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: iload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
      10: areturn

  public java.util.List<T> subList(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/List;
       4: iload_1
       5: iload_2
       6: invokeinterface #33,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      11: areturn
}
