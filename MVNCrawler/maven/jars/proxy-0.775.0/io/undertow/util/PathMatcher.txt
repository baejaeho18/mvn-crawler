Compiled from "PathMatcher.java"
public class io.undertow.util.PathMatcher<T> {
  private static final java.lang.String STRING_PATH_SEPARATOR;

  private volatile T defaultHandler;

  private final io.undertow.util.SubstringMap<T> paths;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, T> exactPathMatches;

  private volatile int[] lengths;

  public io.undertow.util.PathMatcher(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/util/SubstringMap
       8: dup
       9: invokespecial #3                  // Method io/undertow/util/SubstringMap."<init>":()V
      12: putfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      15: aload_0
      16: new           #5                  // class io/undertow/util/CopyOnWriteMap
      19: dup
      20: invokespecial #6                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      23: putfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: iconst_0
      28: newarray       int
      30: putfield      #8                  // Field lengths:[I
      33: aload_0
      34: aload_1
      35: putfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      38: return

  public io.undertow.util.PathMatcher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/util/SubstringMap
       8: dup
       9: invokespecial #3                  // Method io/undertow/util/SubstringMap."<init>":()V
      12: putfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      15: aload_0
      16: new           #5                  // class io/undertow/util/CopyOnWriteMap
      19: dup
      20: invokespecial #6                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      23: putfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: iconst_0
      28: newarray       int
      30: putfield      #8                  // Field lengths:[I
      33: return

  public java.util.Set<java.lang.String> getExactPathMatchesSet();
    Code:
       0: aload_0
       1: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: invokestatic  #11                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public java.util.Set<java.lang.String> getPathMatchesSet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
       4: invokevirtual #12                 // Method io/undertow/util/SubstringMap.toMap:()Ljava/util/Map;
       7: invokeinterface #13,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      12: invokestatic  #11                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      15: areturn

  public io.undertow.util.PathMatcher$PathMatch<T> match(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ifne          45
      12: aload_0
      13: aload_1
      14: invokevirtual #15                 // Method getExactPath:(Ljava/lang/String;)Ljava/lang/Object;
      17: astore_2
      18: aload_2
      19: ifnull        45
      22: getstatic     #16                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      25: ldc           #17                 // String Matched exact path %s
      27: aload_1
      28: invokeinterface #18,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      33: new           #19                 // class io/undertow/util/PathMatcher$PathMatch
      36: dup
      37: aload_1
      38: ldc           #20                 // String
      40: aload_2
      41: invokespecial #21                 // Method io/undertow/util/PathMatcher$PathMatch."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      44: areturn
      45: aload_1
      46: invokevirtual #22                 // Method java/lang/String.length:()I
      49: istore_2
      50: aload_0
      51: getfield      #8                  // Field lengths:[I
      54: astore_3
      55: iconst_0
      56: istore        4
      58: iload         4
      60: aload_3
      61: arraylength
      62: if_icmpge     212
      65: aload_3
      66: iload         4
      68: iaload
      69: istore        5
      71: iload         5
      73: iload_2
      74: if_icmpne     128
      77: aload_0
      78: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      81: aload_1
      82: iload_2
      83: invokevirtual #23                 // Method io/undertow/util/SubstringMap.get:(Ljava/lang/String;I)Lio/undertow/util/SubstringMap$SubstringMatch;
      86: astore        6
      88: aload         6
      90: ifnull        125
      93: getstatic     #16                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      96: ldc           #24                 // String Matched prefix path %s for path %s
      98: aload         6
     100: invokevirtual #25                 // Method io/undertow/util/SubstringMap$SubstringMatch.getKey:()Ljava/lang/String;
     103: aload_1
     104: invokeinterface #26,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     109: new           #19                 // class io/undertow/util/PathMatcher$PathMatch
     112: dup
     113: aload_1
     114: ldc           #20                 // String
     116: aload         6
     118: invokevirtual #27                 // Method io/undertow/util/SubstringMap$SubstringMatch.getValue:()Ljava/lang/Object;
     121: invokespecial #21                 // Method io/undertow/util/PathMatcher$PathMatch."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
     124: areturn
     125: goto          206
     128: iload         5
     130: iload_2
     131: if_icmpge     206
     134: aload_1
     135: iload         5
     137: invokevirtual #28                 // Method java/lang/String.charAt:(I)C
     140: istore        6
     142: iload         6
     144: bipush        47
     146: if_icmpne     206
     149: aload_0
     150: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
     153: aload_1
     154: iload         5
     156: invokevirtual #23                 // Method io/undertow/util/SubstringMap.get:(Ljava/lang/String;I)Lio/undertow/util/SubstringMap$SubstringMatch;
     159: astore        7
     161: aload         7
     163: ifnull        206
     166: getstatic     #16                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     169: ldc           #24                 // String Matched prefix path %s for path %s
     171: aload         7
     173: invokevirtual #25                 // Method io/undertow/util/SubstringMap$SubstringMatch.getKey:()Ljava/lang/String;
     176: aload_1
     177: invokeinterface #26,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     182: new           #19                 // class io/undertow/util/PathMatcher$PathMatch
     185: dup
     186: aload         7
     188: invokevirtual #25                 // Method io/undertow/util/SubstringMap$SubstringMatch.getKey:()Ljava/lang/String;
     191: aload_1
     192: iload         5
     194: invokevirtual #29                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     197: aload         7
     199: invokevirtual #27                 // Method io/undertow/util/SubstringMap$SubstringMatch.getValue:()Ljava/lang/Object;
     202: invokespecial #21                 // Method io/undertow/util/PathMatcher$PathMatch."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
     205: areturn
     206: iinc          4, 1
     209: goto          58
     212: getstatic     #16                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     215: ldc           #30                 // String Matched default handler path %s
     217: aload_1
     218: invokeinterface #18,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     223: new           #19                 // class io/undertow/util/PathMatcher$PathMatch
     226: dup
     227: ldc           #20                 // String
     229: aload_1
     230: aload_0
     231: getfield      #9                  // Field defaultHandler:Ljava/lang/Object;
     234: invokespecial #21                 // Method io/undertow/util/PathMatcher$PathMatch."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
     237: areturn

  public synchronized io.undertow.util.PathMatcher addPrefixPath(java.lang.String, T);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method java/lang/String.isEmpty:()Z
       4: ifeq          16
       7: getstatic     #32                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #33,  1           // InterfaceMethod io/undertow/UndertowMessages.pathMustBeSpecified:()Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_1
      17: invokestatic  #34                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
      20: astore_3
      21: ldc           #36                 // String /
      23: aload_3
      24: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          37
      30: aload_0
      31: aload_2
      32: putfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      35: aload_0
      36: areturn
      37: aload_0
      38: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      41: aload_3
      42: aload_2
      43: invokevirtual #38                 // Method io/undertow/util/SubstringMap.put:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aload_0
      47: invokevirtual #39                 // Method buildLengths:()V
      50: aload_0
      51: areturn

  public synchronized io.undertow.util.PathMatcher addExactPath(java.lang.String, T);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method java/lang/String.isEmpty:()Z
       4: ifeq          16
       7: getstatic     #32                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #33,  1           // InterfaceMethod io/undertow/UndertowMessages.pathMustBeSpecified:()Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      20: aload_1
      21: invokestatic  #34                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
      24: aload_2
      25: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: areturn

  public T getExactPath(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokestatic  #34                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
       8: invokeinterface #41,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public T getPrefixPath(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #34                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
       9: aload_2
      10: invokevirtual #42                 // Method io/undertow/util/SubstringMap.get:(Ljava/lang/String;)Lio/undertow/util/SubstringMap$SubstringMatch;
      13: astore_3
      14: ldc           #36                 // String /
      16: aload_2
      17: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          32
      23: aload_3
      24: ifnonnull     32
      27: aload_0
      28: getfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      31: areturn
      32: aload_3
      33: ifnonnull     38
      36: aconst_null
      37: areturn
      38: aload_3
      39: invokevirtual #27                 // Method io/undertow/util/SubstringMap$SubstringMatch.getValue:()Ljava/lang/Object;
      42: areturn

  private void buildLengths();
    Code:
       0: new           #43                 // class java/util/TreeSet
       3: dup
       4: new           #44                 // class io/undertow/util/PathMatcher$1
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method io/undertow/util/PathMatcher$1."<init>":(Lio/undertow/util/PathMatcher;)V
      12: invokespecial #46                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      15: astore_1
      16: aload_0
      17: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      20: invokevirtual #47                 // Method io/undertow/util/SubstringMap.keys:()Ljava/lang/Iterable;
      23: invokeinterface #48,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_2
      30: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          65
      38: aload_2
      39: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #51                 // class java/lang/String
      47: astore_3
      48: aload_1
      49: aload_3
      50: invokevirtual #22                 // Method java/lang/String.length:()I
      53: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      61: pop
      62: goto          29
      65: aload_1
      66: invokeinterface #54,  1           // InterfaceMethod java/util/Set.size:()I
      71: newarray       int
      73: astore_2
      74: iconst_0
      75: istore_3
      76: aload_1
      77: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      82: astore        4
      84: aload         4
      86: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          120
      94: aload         4
      96: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #56                 // class java/lang/Integer
     104: invokevirtual #57                 // Method java/lang/Integer.intValue:()I
     107: istore        5
     109: aload_2
     110: iload_3
     111: iinc          3, 1
     114: iload         5
     116: iastore
     117: goto          84
     120: aload_0
     121: aload_2
     122: putfield      #8                  // Field lengths:[I
     125: return

  public synchronized io.undertow.util.PathMatcher removePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method removePrefixPath:(Ljava/lang/String;)Lio/undertow/util/PathMatcher;
       5: areturn

  public synchronized io.undertow.util.PathMatcher removePrefixPath(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #31                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          20
      11: getstatic     #32                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #33,  1           // InterfaceMethod io/undertow/UndertowMessages.pathMustBeSpecified:()Ljava/lang/IllegalArgumentException;
      19: athrow
      20: aload_1
      21: invokestatic  #34                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
      24: astore_2
      25: ldc           #36                 // String /
      27: aload_2
      28: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          41
      34: aload_0
      35: aconst_null
      36: putfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      39: aload_0
      40: areturn
      41: aload_0
      42: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      45: aload_2
      46: invokevirtual #59                 // Method io/undertow/util/SubstringMap.remove:(Ljava/lang/String;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: invokevirtual #39                 // Method buildLengths:()V
      54: aload_0
      55: areturn

  public synchronized io.undertow.util.PathMatcher removeExactPath(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #31                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          20
      11: getstatic     #32                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #33,  1           // InterfaceMethod io/undertow/UndertowMessages.pathMustBeSpecified:()Ljava/lang/IllegalArgumentException;
      19: athrow
      20: aload_0
      21: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      24: aload_1
      25: invokestatic  #34                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
      28: invokeinterface #60,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_0
      35: areturn

  public synchronized io.undertow.util.PathMatcher clearPaths();
    Code:
       0: aload_0
       1: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
       4: invokevirtual #61                 // Method io/undertow/util/SubstringMap.clear:()V
       7: aload_0
       8: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      11: invokeinterface #62,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      16: aload_0
      17: iconst_0
      18: newarray       int
      20: putfield      #8                  // Field lengths:[I
      23: aload_0
      24: aconst_null
      25: putfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      28: aload_0
      29: areturn

  public java.util.Map<java.lang.String, T> getPaths();
    Code:
       0: aload_0
       1: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
       4: invokevirtual #12                 // Method io/undertow/util/SubstringMap.toMap:()Ljava/util/Map;
       7: areturn
}
