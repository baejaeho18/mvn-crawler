Compiled from "MultipartParser.java"
class io.undertow.util.MultipartParser$Base64Encoding implements io.undertow.util.MultipartParser$Encoding {
  private final io.undertow.util.FlexBase64$Decoder decoder;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private io.undertow.util.MultipartParser$Base64Encoding(io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method io/undertow/util/FlexBase64.createDecoder:()Lio/undertow/util/FlexBase64$Decoder;
       8: putfield      #3                  // Field decoder:Lio/undertow/util/FlexBase64$Decoder;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      16: return

  public void handle(io.undertow.util.MultipartParser$PartHandler, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #5,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
       9: astore_3
      10: aload_3
      11: invokeinterface #6,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: astore        4
      18: aload         4
      20: invokevirtual #7                  // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      23: pop
      24: aload_0
      25: getfield      #3                  // Field decoder:Lio/undertow/util/FlexBase64$Decoder;
      28: aload_2
      29: aload         4
      31: invokevirtual #8                  // Method io/undertow/util/FlexBase64$Decoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
      34: goto          49
      37: astore        5
      39: new           #10                 // class java/lang/RuntimeException
      42: dup
      43: aload         5
      45: invokespecial #11                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      48: athrow
      49: aload         4
      51: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      54: pop
      55: aload_1
      56: aload         4
      58: invokeinterface #13,  2           // InterfaceMethod io/undertow/util/MultipartParser$PartHandler.data:(Ljava/nio/ByteBuffer;)V
      63: aload_2
      64: invokevirtual #14                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      67: ifne          18
      70: aload_3
      71: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      76: goto          90
      79: astore        6
      81: aload_3
      82: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      87: aload         6
      89: athrow
      90: return
    Exception table:
       from    to  target type
          24    34    37   Class java/io/IOException
          18    70    79   any
          79    81    79   any
}
