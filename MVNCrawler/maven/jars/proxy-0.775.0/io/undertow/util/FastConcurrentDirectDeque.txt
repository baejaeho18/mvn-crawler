Compiled from "FastConcurrentDirectDeque.java"
public class io.undertow.util.FastConcurrentDirectDeque<E> extends io.undertow.util.ConcurrentDirectDeque<E> implements java.util.Deque<E>, java.io.Serializable {
  private static final long serialVersionUID;

  private volatile transient io.undertow.util.FastConcurrentDirectDeque$Node<E> head;

  private volatile transient io.undertow.util.FastConcurrentDirectDeque$Node<E> tail;

  private static final io.undertow.util.FastConcurrentDirectDeque$Node<java.lang.Object> PREV_TERMINATOR;

  private static final io.undertow.util.FastConcurrentDirectDeque$Node<java.lang.Object> NEXT_TERMINATOR;

  private static final int HOPS;

  private static final java.lang.invoke.VarHandle HEAD;

  private static final java.lang.invoke.VarHandle TAIL;

  private static final java.lang.invoke.VarHandle PREV;

  private static final java.lang.invoke.VarHandle NEXT;

  private static final java.lang.invoke.VarHandle ITEM;

  io.undertow.util.FastConcurrentDirectDeque$Node<E> prevTerminator();
    Code:
       0: getstatic     #1                  // Field PREV_TERMINATOR:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       3: areturn

  io.undertow.util.FastConcurrentDirectDeque$Node<E> nextTerminator();
    Code:
       0: getstatic     #2                  // Field NEXT_TERMINATOR:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       3: areturn

  static <E> io.undertow.util.FastConcurrentDirectDeque$Node<E> newNode(E);
    Code:
       0: new           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
       3: dup
       4: invokespecial #4                  // Method io/undertow/util/FastConcurrentDirectDeque$Node."<init>":()V
       7: astore_1
       8: getstatic     #5                  // Field ITEM:Ljava/lang/invoke/VarHandle;
      11: aload_1
      12: aload_0
      13: invokevirtual #6                  // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Object;)V
      16: aload_1
      17: areturn

  private io.undertow.util.FastConcurrentDirectDeque$Node linkFirst(E);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: invokestatic  #8                  // Method newNode:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
       7: astore_2
       8: aload_0
       9: getfield      #9                  // Field head:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      12: astore_3
      13: aload_3
      14: astore        4
      16: aload         4
      18: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      21: dup
      22: astore        5
      24: ifnull        62
      27: aload         5
      29: dup
      30: astore        4
      32: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      35: dup
      36: astore        5
      38: ifnull        62
      41: aload_3
      42: aload_0
      43: getfield      #9                  // Field head:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      46: dup
      47: astore_3
      48: if_acmpeq     55
      51: aload_3
      52: goto          57
      55: aload         5
      57: astore        4
      59: goto          16
      62: aload         4
      64: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      67: aload         4
      69: if_acmpne     75
      72: goto          8
      75: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
      78: aload_2
      79: aload         4
      81: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      84: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
      87: aload         4
      89: aconst_null
      90: aload_2
      91: invokevirtual #15                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Void;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      94: ifeq          16
      97: aload         4
      99: aload_3
     100: if_acmpeq     113
     103: getstatic     #16                 // Field HEAD:Ljava/lang/invoke/VarHandle;
     106: aload_0
     107: aload_3
     108: aload_2
     109: invokevirtual #17                 // Method java/lang/invoke/VarHandle.weakCompareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
     112: pop
     113: aload_2
     114: areturn

  private io.undertow.util.FastConcurrentDirectDeque$Node linkLast(E);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: invokestatic  #8                  // Method newNode:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
       7: astore_2
       8: aload_0
       9: getfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      12: astore_3
      13: aload_3
      14: astore        4
      16: aload         4
      18: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      21: dup
      22: astore        5
      24: ifnull        62
      27: aload         5
      29: dup
      30: astore        4
      32: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      35: dup
      36: astore        5
      38: ifnull        62
      41: aload_3
      42: aload_0
      43: getfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      46: dup
      47: astore_3
      48: if_acmpeq     55
      51: aload_3
      52: goto          57
      55: aload         5
      57: astore        4
      59: goto          16
      62: aload         4
      64: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      67: aload         4
      69: if_acmpne     75
      72: goto          8
      75: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
      78: aload_2
      79: aload         4
      81: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      84: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
      87: aload         4
      89: aconst_null
      90: aload_2
      91: invokevirtual #15                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Void;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      94: ifeq          16
      97: aload         4
      99: aload_3
     100: if_acmpeq     113
     103: getstatic     #19                 // Field TAIL:Ljava/lang/invoke/VarHandle;
     106: aload_0
     107: aload_3
     108: aload_2
     109: invokevirtual #17                 // Method java/lang/invoke/VarHandle.weakCompareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
     112: pop
     113: aload_2
     114: areturn

  void unlink(io.undertow.util.FastConcurrentDirectDeque$Node<E>);
    Code:
       0: aload_1
       1: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_2
       5: aload_1
       6: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       9: astore_3
      10: aload_2
      11: ifnonnull     23
      14: aload_0
      15: aload_1
      16: aload_3
      17: invokevirtual #20                 // Method unlinkFirst:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      20: goto          334
      23: aload_3
      24: ifnonnull     36
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokevirtual #21                 // Method unlinkLast:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      33: goto          334
      36: iconst_1
      37: istore        8
      39: aload_2
      40: astore        9
      42: aload         9
      44: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      47: ifnull        60
      50: aload         9
      52: astore        4
      54: iconst_0
      55: istore        6
      57: goto          111
      60: aload         9
      62: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      65: astore        10
      67: aload         10
      69: ifnonnull     93
      72: aload         9
      74: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      77: aload         9
      79: if_acmpne     83
      82: return
      83: aload         9
      85: astore        4
      87: iconst_1
      88: istore        6
      90: goto          111
      93: aload         9
      95: aload         10
      97: if_acmpne     101
     100: return
     101: aload         10
     103: astore        9
     105: iinc          8, 1
     108: goto          42
     111: aload_3
     112: astore        9
     114: aload         9
     116: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
     119: ifnull        132
     122: aload         9
     124: astore        5
     126: iconst_0
     127: istore        7
     129: goto          183
     132: aload         9
     134: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     137: astore        10
     139: aload         10
     141: ifnonnull     165
     144: aload         9
     146: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     149: aload         9
     151: if_acmpne     155
     154: return
     155: aload         9
     157: astore        5
     159: iconst_1
     160: istore        7
     162: goto          183
     165: aload         9
     167: aload         10
     169: if_acmpne     173
     172: return
     173: aload         10
     175: astore        9
     177: iinc          8, 1
     180: goto          114
     183: iload         8
     185: iconst_2
     186: if_icmpge     198
     189: iload         6
     191: iload         7
     193: ior
     194: ifeq          198
     197: return
     198: aload_0
     199: aload         4
     201: invokevirtual #24                 // Method skipDeletedSuccessors:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
     204: aload_0
     205: aload         5
     207: invokevirtual #25                 // Method skipDeletedPredecessors:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
     210: iload         6
     212: iload         7
     214: ior
     215: ifeq          334
     218: aload         4
     220: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     223: aload         5
     225: if_acmpne     334
     228: aload         5
     230: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     233: aload         4
     235: if_acmpne     334
     238: iload         6
     240: ifeq          254
     243: aload         4
     245: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     248: ifnonnull     334
     251: goto          262
     254: aload         4
     256: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
     259: ifnull        334
     262: iload         7
     264: ifeq          278
     267: aload         5
     269: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     272: ifnonnull     334
     275: goto          286
     278: aload         5
     280: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
     283: ifnull        334
     286: aload_0
     287: invokevirtual #26                 // Method updateHead:()V
     290: aload_0
     291: invokevirtual #27                 // Method updateTail:()V
     294: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
     297: aload_1
     298: iload         6
     300: ifeq          310
     303: aload_0
     304: invokevirtual #28                 // Method prevTerminator:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
     307: goto          311
     310: aload_1
     311: invokevirtual #29                 // Method java/lang/invoke/VarHandle.setRelease:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Object;)V
     314: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
     317: aload_1
     318: iload         7
     320: ifeq          330
     323: aload_0
     324: invokevirtual #30                 // Method nextTerminator:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
     327: goto          331
     330: aload_1
     331: invokevirtual #29                 // Method java/lang/invoke/VarHandle.setRelease:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Object;)V
     334: return

  private void unlinkFirst(io.undertow.util.FastConcurrentDirectDeque$Node<E>, io.undertow.util.FastConcurrentDirectDeque$Node<E>);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: astore        4
       5: aload         4
       7: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      10: ifnonnull     24
      13: aload         4
      15: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      18: dup
      19: astore        5
      21: ifnonnull     117
      24: aload_3
      25: ifnull        116
      28: aload         4
      30: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      33: aload         4
      35: if_acmpeq     116
      38: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
      41: aload_1
      42: aload_2
      43: aload         4
      45: invokevirtual #31                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      48: ifeq          116
      51: aload_0
      52: aload         4
      54: invokevirtual #25                 // Method skipDeletedPredecessors:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      57: aload_1
      58: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      61: ifnonnull     116
      64: aload         4
      66: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      69: ifnull        80
      72: aload         4
      74: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      77: ifnull        116
      80: aload         4
      82: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      85: aload_1
      86: if_acmpne     116
      89: aload_0
      90: invokevirtual #26                 // Method updateHead:()V
      93: aload_0
      94: invokevirtual #27                 // Method updateTail:()V
      97: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
     100: aload_3
     101: aload_3
     102: invokevirtual #32                 // Method java/lang/invoke/VarHandle.setRelease:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
     105: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
     108: aload_3
     109: aload_0
     110: invokevirtual #28                 // Method prevTerminator:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
     113: invokevirtual #32                 // Method java/lang/invoke/VarHandle.setRelease:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
     116: return
     117: aload         4
     119: aload         5
     121: if_acmpne     125
     124: return
     125: aload         4
     127: astore_3
     128: aload         5
     130: astore        4
     132: goto          5

  private void unlinkLast(io.undertow.util.FastConcurrentDirectDeque$Node<E>, io.undertow.util.FastConcurrentDirectDeque$Node<E>);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: astore        4
       5: aload         4
       7: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      10: ifnonnull     24
      13: aload         4
      15: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      18: dup
      19: astore        5
      21: ifnonnull     117
      24: aload_3
      25: ifnull        116
      28: aload         4
      30: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      33: aload         4
      35: if_acmpeq     116
      38: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
      41: aload_1
      42: aload_2
      43: aload         4
      45: invokevirtual #31                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      48: ifeq          116
      51: aload_0
      52: aload         4
      54: invokevirtual #24                 // Method skipDeletedSuccessors:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      57: aload_1
      58: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      61: ifnonnull     116
      64: aload         4
      66: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      69: ifnull        80
      72: aload         4
      74: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      77: ifnull        116
      80: aload         4
      82: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      85: aload_1
      86: if_acmpne     116
      89: aload_0
      90: invokevirtual #26                 // Method updateHead:()V
      93: aload_0
      94: invokevirtual #27                 // Method updateTail:()V
      97: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
     100: aload_3
     101: aload_3
     102: invokevirtual #32                 // Method java/lang/invoke/VarHandle.setRelease:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
     105: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
     108: aload_3
     109: aload_0
     110: invokevirtual #30                 // Method nextTerminator:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
     113: invokevirtual #32                 // Method java/lang/invoke/VarHandle.setRelease:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
     116: return
     117: aload         4
     119: aload         5
     121: if_acmpne     125
     124: return
     125: aload         4
     127: astore_3
     128: aload         5
     130: astore        4
     132: goto          5

  private void updateHead();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: dup
       5: astore_1
       6: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
       9: ifnonnull     70
      12: aload_1
      13: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      16: dup
      17: astore_2
      18: ifnull        70
      21: aload_2
      22: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      25: dup
      26: astore_3
      27: ifnull        41
      30: aload_3
      31: dup
      32: astore_2
      33: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      36: dup
      37: astore_3
      38: ifnonnull     54
      41: getstatic     #16                 // Field HEAD:Ljava/lang/invoke/VarHandle;
      44: aload_0
      45: aload_1
      46: aload_2
      47: invokevirtual #33                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      50: ifeq          0
      53: return
      54: aload_1
      55: aload_0
      56: getfield      #9                  // Field head:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      59: if_acmpeq     65
      62: goto          0
      65: aload_3
      66: astore_2
      67: goto          21
      70: return

  private void updateTail();
    Code:
       0: aload_0
       1: getfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: dup
       5: astore_1
       6: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
       9: ifnonnull     70
      12: aload_1
      13: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      16: dup
      17: astore_2
      18: ifnull        70
      21: aload_2
      22: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      25: dup
      26: astore_3
      27: ifnull        41
      30: aload_3
      31: dup
      32: astore_2
      33: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      36: dup
      37: astore_3
      38: ifnonnull     54
      41: getstatic     #19                 // Field TAIL:Ljava/lang/invoke/VarHandle;
      44: aload_0
      45: aload_1
      46: aload_2
      47: invokevirtual #33                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      50: ifeq          0
      53: return
      54: aload_1
      55: aload_0
      56: getfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      59: if_acmpeq     65
      62: goto          0
      65: aload_3
      66: astore_2
      67: goto          21
      70: return

  private void skipDeletedPredecessors(io.undertow.util.FastConcurrentDirectDeque$Node<E>);
    Code:
       0: aload_1
       1: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_2
       5: aload_2
       6: astore_3
       7: aload_3
       8: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      11: ifnull        17
      14: goto          54
      17: aload_3
      18: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      21: astore        4
      23: aload         4
      25: ifnonnull     39
      28: aload_3
      29: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      32: aload_3
      33: if_acmpne     54
      36: goto          72
      39: aload_3
      40: aload         4
      42: if_acmpne     48
      45: goto          72
      48: aload         4
      50: astore_3
      51: goto          7
      54: aload_2
      55: aload_3
      56: if_acmpeq     71
      59: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
      62: aload_1
      63: aload_2
      64: aload_3
      65: invokevirtual #31                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      68: ifeq          72
      71: return
      72: aload_1
      73: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      76: ifnonnull     0
      79: aload_1
      80: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      83: ifnull        0
      86: return

  private void skipDeletedSuccessors(io.undertow.util.FastConcurrentDirectDeque$Node<E>);
    Code:
       0: aload_1
       1: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_2
       5: aload_2
       6: astore_3
       7: aload_3
       8: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      11: ifnull        17
      14: goto          54
      17: aload_3
      18: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      21: astore        4
      23: aload         4
      25: ifnonnull     39
      28: aload_3
      29: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      32: aload_3
      33: if_acmpne     54
      36: goto          72
      39: aload_3
      40: aload         4
      42: if_acmpne     48
      45: goto          72
      48: aload         4
      50: astore_3
      51: goto          7
      54: aload_2
      55: aload_3
      56: if_acmpeq     71
      59: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
      62: aload_1
      63: aload_2
      64: aload_3
      65: invokevirtual #31                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      68: ifeq          72
      71: return
      72: aload_1
      73: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      76: ifnonnull     0
      79: aload_1
      80: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      83: ifnull        0
      86: return

  final io.undertow.util.FastConcurrentDirectDeque$Node<E> succ(io.undertow.util.FastConcurrentDirectDeque$Node<E>);
    Code:
       0: aload_1
       1: aload_1
       2: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       5: dup
       6: astore_1
       7: if_acmpne     15
      10: aload_0
      11: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
      14: astore_1
      15: aload_1
      16: areturn

  final io.undertow.util.FastConcurrentDirectDeque$Node<E> pred(io.undertow.util.FastConcurrentDirectDeque$Node<E>);
    Code:
       0: aload_1
       1: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_2
       5: aload_1
       6: aload_2
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #35                 // Method last:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
      14: goto          18
      17: aload_2
      18: areturn

  io.undertow.util.FastConcurrentDirectDeque$Node<E> first();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_1
       5: aload_1
       6: astore_2
       7: aload_2
       8: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      11: dup
      12: astore_3
      13: ifnull        46
      16: aload_3
      17: dup
      18: astore_2
      19: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      22: dup
      23: astore_3
      24: ifnull        46
      27: aload_1
      28: aload_0
      29: getfield      #9                  // Field head:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      32: dup
      33: astore_1
      34: if_acmpeq     41
      37: aload_1
      38: goto          42
      41: aload_3
      42: astore_2
      43: goto          7
      46: aload_2
      47: aload_1
      48: if_acmpeq     63
      51: getstatic     #16                 // Field HEAD:Ljava/lang/invoke/VarHandle;
      54: aload_0
      55: aload_1
      56: aload_2
      57: invokevirtual #33                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      60: ifeq          0
      63: aload_2
      64: areturn

  io.undertow.util.FastConcurrentDirectDeque$Node<E> last();
    Code:
       0: aload_0
       1: getfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_1
       5: aload_1
       6: astore_2
       7: aload_2
       8: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      11: dup
      12: astore_3
      13: ifnull        46
      16: aload_3
      17: dup
      18: astore_2
      19: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      22: dup
      23: astore_3
      24: ifnull        46
      27: aload_1
      28: aload_0
      29: getfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      32: dup
      33: astore_1
      34: if_acmpeq     41
      37: aload_1
      38: goto          42
      41: aload_3
      42: astore_2
      43: goto          7
      46: aload_2
      47: aload_1
      48: if_acmpeq     63
      51: getstatic     #19                 // Field TAIL:Ljava/lang/invoke/VarHandle;
      54: aload_0
      55: aload_1
      56: aload_2
      57: invokevirtual #33                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
      60: ifeq          0
      63: aload_2
      64: areturn

  private E screenNullResult(E);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #36                 // class java/util/NoSuchElementException
       7: dup
       8: invokespecial #37                 // Method java/util/NoSuchElementException."<init>":()V
      11: athrow
      12: aload_1
      13: areturn

  public io.undertow.util.FastConcurrentDirectDeque();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method io/undertow/util/ConcurrentDirectDeque."<init>":()V
       4: aload_0
       5: aload_0
       6: new           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
       9: dup
      10: invokespecial #4                  // Method io/undertow/util/FastConcurrentDirectDeque$Node."<init>":()V
      13: dup_x1
      14: putfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      17: putfield      #9                  // Field head:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      20: return

  public io.undertow.util.FastConcurrentDirectDeque(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method io/undertow/util/ConcurrentDirectDeque."<init>":()V
       4: aconst_null
       5: astore_2
       6: aconst_null
       7: astore_3
       8: aload_1
       9: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          81
      26: aload         4
      28: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: astore        5
      35: aload         5
      37: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokestatic  #8                  // Method newNode:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      43: astore        6
      45: aload_2
      46: ifnonnull     57
      49: aload         6
      51: dup
      52: astore_3
      53: astore_2
      54: goto          78
      57: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
      60: aload_3
      61: aload         6
      63: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      66: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
      69: aload         6
      71: aload_3
      72: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      75: aload         6
      77: astore_3
      78: goto          16
      81: aload_0
      82: aload_2
      83: aload_3
      84: invokevirtual #42                 // Method initHeadTail:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      87: return

  private void initHeadTail(io.undertow.util.FastConcurrentDirectDeque$Node<E>, io.undertow.util.FastConcurrentDirectDeque$Node<E>);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     48
       5: aload_1
       6: ifnonnull     22
       9: new           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      12: dup
      13: invokespecial #4                  // Method io/undertow/util/FastConcurrentDirectDeque$Node."<init>":()V
      16: dup
      17: astore_2
      18: astore_1
      19: goto          48
      22: new           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      25: dup
      26: invokespecial #4                  // Method io/undertow/util/FastConcurrentDirectDeque$Node."<init>":()V
      29: astore_3
      30: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
      33: aload_2
      34: aload_3
      35: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      38: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
      41: aload_3
      42: aload_2
      43: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      46: aload_3
      47: astore_2
      48: aload_0
      49: aload_1
      50: putfield      #9                  // Field head:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      53: aload_0
      54: aload_2
      55: putfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      58: return

  public void addFirst(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method linkFirst:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
       5: pop
       6: return

  public void addLast(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method linkLast:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
       5: pop
       6: return

  public boolean offerFirst(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method linkFirst:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
       5: pop
       6: iconst_1
       7: ireturn

  public java.lang.Object offerFirstAndReturnToken(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method linkFirst:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
       5: areturn

  public java.lang.Object offerLastAndReturnToken(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method linkLast:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
       5: areturn

  public void removeToken(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
       4: ifne          15
       7: new           #45                 // class java/lang/IllegalArgumentException
      10: dup
      11: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":()V
      14: athrow
      15: aload_1
      16: checkcast     #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      19: astore_2
      20: getstatic     #5                  // Field ITEM:Ljava/lang/invoke/VarHandle;
      23: aload_2
      24: aload_2
      25: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      28: aconst_null
      29: invokevirtual #47                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Object;Ljava/lang/Void;)Z
      32: ifne          38
      35: goto          20
      38: aload_0
      39: aload_2
      40: invokevirtual #48                 // Method unlink:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      43: return

  public boolean offerLast(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method linkLast:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
       5: pop
       6: iconst_1
       7: ireturn

  public E peekFirst();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_1
      10: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      13: dup
      14: astore_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_0
      21: aload_1
      22: invokevirtual #49                 // Method succ:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      25: astore_1
      26: goto          5
      29: aconst_null
      30: areturn

  public E peekLast();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method last:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_1
      10: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      13: dup
      14: astore_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_0
      21: aload_1
      22: invokevirtual #50                 // Method pred:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      25: astore_1
      26: goto          5
      29: aconst_null
      30: areturn

  public E getFirst();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #51                 // Method peekFirst:()Ljava/lang/Object;
       5: invokevirtual #52                 // Method screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public E getLast();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #53                 // Method peekLast:()Ljava/lang/Object;
       5: invokevirtual #52                 // Method screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public E pollFirst();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_1
       5: aload_1
       6: ifnull        46
       9: aload_1
      10: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      13: dup
      14: astore_2
      15: ifnull        37
      18: getstatic     #5                  // Field ITEM:Ljava/lang/invoke/VarHandle;
      21: aload_1
      22: aload_2
      23: aconst_null
      24: invokevirtual #54                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Object;Ljava/lang/Void;)Z
      27: ifeq          37
      30: aload_0
      31: aload_1
      32: invokevirtual #48                 // Method unlink:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      35: aload_2
      36: areturn
      37: aload_0
      38: aload_1
      39: invokevirtual #49                 // Method succ:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      42: astore_1
      43: goto          5
      46: aconst_null
      47: areturn

  public E pollLast();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method last:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       4: astore_1
       5: aload_1
       6: ifnull        46
       9: aload_1
      10: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      13: dup
      14: astore_2
      15: ifnull        37
      18: getstatic     #5                  // Field ITEM:Ljava/lang/invoke/VarHandle;
      21: aload_1
      22: aload_2
      23: aconst_null
      24: invokevirtual #54                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Object;Ljava/lang/Void;)Z
      27: ifeq          37
      30: aload_0
      31: aload_1
      32: invokevirtual #48                 // Method unlink:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      35: aload_2
      36: areturn
      37: aload_0
      38: aload_1
      39: invokevirtual #50                 // Method pred:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      42: astore_1
      43: goto          5
      46: aconst_null
      47: areturn

  public E removeFirst();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #55                 // Method pollFirst:()Ljava/lang/Object;
       5: invokevirtual #52                 // Method screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public E removeLast();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #56                 // Method pollLast:()Ljava/lang/Object;
       5: invokevirtual #52                 // Method screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public boolean offer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method offerLast:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean add(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method offerLast:(Ljava/lang/Object;)Z
       5: ireturn

  public E poll();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method pollFirst:()Ljava/lang/Object;
       4: areturn

  public E peek();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method peekFirst:()Ljava/lang/Object;
       4: areturn

  public E remove();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method removeFirst:()Ljava/lang/Object;
       4: areturn

  public E pop();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method removeFirst:()Ljava/lang/Object;
       4: areturn

  public E element();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getFirst:()Ljava/lang/Object;
       4: areturn

  public void push(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method addFirst:(Ljava/lang/Object;)V
       5: return

  public boolean removeFirstOccurrence(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       9: astore_2
      10: aload_2
      11: ifnull        59
      14: aload_2
      15: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      18: dup
      19: astore_3
      20: ifnull        50
      23: aload_1
      24: aload_3
      25: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          50
      31: getstatic     #5                  // Field ITEM:Ljava/lang/invoke/VarHandle;
      34: aload_2
      35: aload_3
      36: aconst_null
      37: invokevirtual #54                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Object;Ljava/lang/Void;)Z
      40: ifeq          50
      43: aload_0
      44: aload_2
      45: invokevirtual #48                 // Method unlink:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      48: iconst_1
      49: ireturn
      50: aload_0
      51: aload_2
      52: invokevirtual #49                 // Method succ:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      55: astore_2
      56: goto          10
      59: iconst_0
      60: ireturn

  public boolean removeLastOccurrence(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #35                 // Method last:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       9: astore_2
      10: aload_2
      11: ifnull        59
      14: aload_2
      15: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      18: dup
      19: astore_3
      20: ifnull        50
      23: aload_1
      24: aload_3
      25: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          50
      31: getstatic     #5                  // Field ITEM:Ljava/lang/invoke/VarHandle;
      34: aload_2
      35: aload_3
      36: aconst_null
      37: invokevirtual #54                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Object;Ljava/lang/Void;)Z
      40: ifeq          50
      43: aload_0
      44: aload_2
      45: invokevirtual #48                 // Method unlink:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      48: iconst_1
      49: ireturn
      50: aload_0
      51: aload_2
      52: invokevirtual #50                 // Method pred:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      55: astore_2
      56: goto          10
      59: iconst_0
      60: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        41
       4: aload_0
       5: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       8: astore_2
       9: aload_2
      10: ifnull        41
      13: aload_2
      14: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      17: dup
      18: astore_3
      19: ifnull        32
      22: aload_1
      23: aload_3
      24: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: iconst_1
      31: ireturn
      32: aload_0
      33: aload_2
      34: invokevirtual #49                 // Method succ:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      37: astore_2
      38: goto          9
      41: iconst_0
      42: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method peekFirst:()Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       6: astore_2
       7: aload_2
       8: ifnull        43
      11: aload_2
      12: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      15: ifnull        30
      18: iinc          1, 1
      21: iload_1
      22: ldc           #63                 // int 2147483647
      24: if_icmpne     30
      27: goto          43
      30: aload_2
      31: aload_2
      32: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      35: dup
      36: astore_2
      37: if_acmpne     7
      40: goto          0
      43: iload_1
      44: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method removeFirstOccurrence:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     13
       5: new           #45                 // class java/lang/IllegalArgumentException
       8: dup
       9: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":()V
      12: athrow
      13: aconst_null
      14: astore_2
      15: aconst_null
      16: astore_3
      17: aload_1
      18: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          90
      35: aload         4
      37: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: astore        5
      44: aload         5
      46: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      49: invokestatic  #8                  // Method newNode:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      52: astore        6
      54: aload_2
      55: ifnonnull     66
      58: aload         6
      60: dup
      61: astore_3
      62: astore_2
      63: goto          87
      66: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
      69: aload_3
      70: aload         6
      72: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      75: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
      78: aload         6
      80: aload_3
      81: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      84: aload         6
      86: astore_3
      87: goto          25
      90: aload_2
      91: ifnonnull     96
      94: iconst_0
      95: ireturn
      96: aload_0
      97: getfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     100: astore        4
     102: aload         4
     104: astore        5
     106: aload         5
     108: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     111: dup
     112: astore        6
     114: ifnull        155
     117: aload         6
     119: dup
     120: astore        5
     122: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     125: dup
     126: astore        6
     128: ifnull        155
     131: aload         4
     133: aload_0
     134: getfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     137: dup
     138: astore        4
     140: if_acmpeq     148
     143: aload         4
     145: goto          150
     148: aload         6
     150: astore        5
     152: goto          106
     155: aload         5
     157: getfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     160: aload         5
     162: if_acmpne     168
     165: goto          96
     168: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
     171: aload_2
     172: aload         5
     174: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
     177: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
     180: aload         5
     182: aconst_null
     183: aload_2
     184: invokevirtual #15                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Void;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
     187: ifeq          106
     190: getstatic     #19                 // Field TAIL:Ljava/lang/invoke/VarHandle;
     193: aload_0
     194: aload         4
     196: aload_3
     197: invokevirtual #17                 // Method java/lang/invoke/VarHandle.weakCompareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
     200: ifne          227
     203: aload_0
     204: getfield      #18                 // Field tail:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     207: astore        4
     209: aload_3
     210: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
     213: ifnonnull     227
     216: getstatic     #19                 // Field TAIL:Ljava/lang/invoke/VarHandle;
     219: aload_0
     220: aload         4
     222: aload_3
     223: invokevirtual #17                 // Method java/lang/invoke/VarHandle.weakCompareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque;Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)Z
     226: pop
     227: iconst_1
     228: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method pollFirst:()Ljava/lang/Object;
       4: ifnull        10
       7: goto          0
      10: return

  public java.lang.String toString();
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: aload_0
       7: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
      10: astore        4
      12: aload         4
      14: ifnull        99
      17: aload         4
      19: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      22: dup
      23: astore        5
      25: ifnull        80
      28: aload_1
      29: ifnonnull     40
      32: iconst_4
      33: anewarray     #65                 // class java/lang/String
      36: astore_1
      37: goto          57
      40: iload_3
      41: aload_1
      42: arraylength
      43: if_icmpne     57
      46: aload_1
      47: iconst_2
      48: iload_3
      49: imul
      50: invokestatic  #66                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      53: checkcast     #67                 // class "[Ljava/lang/String;"
      56: astore_1
      57: aload         5
      59: invokevirtual #68                 // Method java/lang/Object.toString:()Ljava/lang/String;
      62: astore        6
      64: aload_1
      65: iload_3
      66: iinc          3, 1
      69: aload         6
      71: aastore
      72: iload_2
      73: aload         6
      75: invokevirtual #69                 // Method java/lang/String.length:()I
      78: iadd
      79: istore_2
      80: aload         4
      82: aload         4
      84: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      87: dup
      88: astore        4
      90: if_acmpne     96
      93: goto          2
      96: goto          12
      99: iload_3
     100: ifne          106
     103: ldc           #70                 // String []
     105: areturn
     106: aload_0
     107: aload_1
     108: iload_3
     109: iload_2
     110: invokevirtual #71                 // Method toString:([Ljava/lang/Object;II)Ljava/lang/String;
     113: areturn

  private java.lang.Object[] toArrayInternal(java.lang.Object[]);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_0
       3: istore_3
       4: aload_0
       5: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       8: astore        4
      10: aload         4
      12: ifnull        81
      15: aload         4
      17: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      20: dup
      21: astore        5
      23: ifnull        62
      26: aload_2
      27: ifnonnull     38
      30: iconst_4
      31: anewarray     #72                 // class java/lang/Object
      34: astore_2
      35: goto          54
      38: iload_3
      39: aload_2
      40: arraylength
      41: if_icmpne     54
      44: aload_2
      45: iconst_2
      46: iload_3
      47: iconst_4
      48: iadd
      49: imul
      50: invokestatic  #66                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      53: astore_2
      54: aload_2
      55: iload_3
      56: iinc          3, 1
      59: aload         5
      61: aastore
      62: aload         4
      64: aload         4
      66: getfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      69: dup
      70: astore        4
      72: if_acmpne     78
      75: goto          2
      78: goto          10
      81: aload_2
      82: ifnonnull     90
      85: iconst_0
      86: anewarray     #72                 // class java/lang/Object
      89: areturn
      90: aload_1
      91: ifnull        125
      94: iload_3
      95: aload_1
      96: arraylength
      97: if_icmpgt     125
     100: aload_1
     101: aload_2
     102: if_acmpeq     113
     105: aload_2
     106: iconst_0
     107: aload_1
     108: iconst_0
     109: iload_3
     110: invokestatic  #73                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     113: iload_3
     114: aload_1
     115: arraylength
     116: if_icmpge     123
     119: aload_1
     120: iload_3
     121: aconst_null
     122: aastore
     123: aload_1
     124: areturn
     125: iload_3
     126: aload_2
     127: arraylength
     128: if_icmpne     135
     131: aload_2
     132: goto          140
     135: aload_2
     136: iload_3
     137: invokestatic  #66                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     140: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #74                 // Method toArrayInternal:([Ljava/lang/Object;)[Ljava/lang/Object;
       5: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: ldc           #75                 // String a
       3: aload_1
       4: invokestatic  #76                 // Method org/wildfly/common/Assert.checkNotNullParamWithNullPointerException:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #77                 // class "[Ljava/lang/Object;"
      10: invokevirtual #74                 // Method toArrayInternal:([Ljava/lang/Object;)[Ljava/lang/Object;
      13: areturn

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #78                 // class io/undertow/util/FastConcurrentDirectDeque$Itr
       3: dup
       4: aload_0
       5: invokespecial #79                 // Method io/undertow/util/FastConcurrentDirectDeque$Itr."<init>":(Lio/undertow/util/FastConcurrentDirectDeque;)V
       8: areturn

  public java.util.Iterator<E> descendingIterator();
    Code:
       0: new           #80                 // class io/undertow/util/FastConcurrentDirectDeque$DescendingItr
       3: dup
       4: aload_0
       5: invokespecial #81                 // Method io/undertow/util/FastConcurrentDirectDeque$DescendingItr."<init>":(Lio/undertow/util/FastConcurrentDirectDeque;)V
       8: areturn

  private java.lang.String toString(java.lang.Object[], int, int);
    Code:
       0: iload_3
       1: iconst_2
       2: iload_2
       3: imul
       4: iadd
       5: newarray       char
       7: astore        4
       9: aload         4
      11: iconst_0
      12: bipush        91
      14: castore
      15: iconst_1
      16: istore        5
      18: iconst_0
      19: istore        6
      21: iload         6
      23: iload_2
      24: if_icmpge     93
      27: iload         6
      29: ifle          52
      32: aload         4
      34: iload         5
      36: iinc          5, 1
      39: bipush        44
      41: castore
      42: aload         4
      44: iload         5
      46: iinc          5, 1
      49: bipush        32
      51: castore
      52: aload_1
      53: iload         6
      55: aaload
      56: checkcast     #65                 // class java/lang/String
      59: astore        7
      61: aload         7
      63: invokevirtual #69                 // Method java/lang/String.length:()I
      66: istore        8
      68: aload         7
      70: iconst_0
      71: iload         8
      73: aload         4
      75: iload         5
      77: invokevirtual #82                 // Method java/lang/String.getChars:(II[CI)V
      80: iload         5
      82: iload         8
      84: iadd
      85: istore        5
      87: iinc          6, 1
      90: goto          21
      93: aload         4
      95: iload         5
      97: bipush        93
      99: castore
     100: new           #65                 // class java/lang/String
     103: dup
     104: aload         4
     106: invokespecial #83                 // Method java/lang/String."<init>":([C)V
     109: areturn

  public java.util.Spliterator<E> spliterator();
    Code:
       0: new           #84                 // class io/undertow/util/FastConcurrentDirectDeque$CLDSpliterator
       3: dup
       4: aload_0
       5: invokespecial #85                 // Method io/undertow/util/FastConcurrentDirectDeque$CLDSpliterator."<init>":(Lio/undertow/util/FastConcurrentDirectDeque;)V
       8: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #86                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_0
       5: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       8: astore_2
       9: aload_2
      10: ifnull        36
      13: aload_2
      14: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      17: dup
      18: astore_3
      19: ifnull        27
      22: aload_1
      23: aload_3
      24: invokevirtual #87                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      27: aload_0
      28: aload_2
      29: invokevirtual #49                 // Method succ:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      32: astore_2
      33: goto          9
      36: aload_1
      37: aconst_null
      38: invokevirtual #87                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      41: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #88                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aconst_null
       5: astore_2
       6: aconst_null
       7: astore_3
       8: aload_1
       9: invokevirtual #89                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      12: dup
      13: astore        4
      15: ifnull        61
      18: aload         4
      20: invokestatic  #8                  // Method newNode:(Ljava/lang/Object;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      23: astore        5
      25: aload_2
      26: ifnonnull     37
      29: aload         5
      31: dup
      32: astore_3
      33: astore_2
      34: goto          58
      37: getstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
      40: aload_3
      41: aload         5
      43: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      46: getstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
      49: aload         5
      51: aload_3
      52: invokevirtual #13                 // Method java/lang/invoke/VarHandle.set:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      55: aload         5
      57: astore_3
      58: goto          8
      61: aload_0
      62: aload_2
      63: aload_3
      64: invokevirtual #42                 // Method initHeadTail:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      67: return

  public boolean removeIf(java.util.function.Predicate<? super E>);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokevirtual #90                 // Method bulkRemove:(Ljava/util/function/Predicate;)Z
      10: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #91,  0             // InvokeDynamic #0:test:(Ljava/util/Collection;)Ljava/util/function/Predicate;
      12: invokevirtual #90                 // Method bulkRemove:(Ljava/util/function/Predicate;)Z
      15: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #92,  0             // InvokeDynamic #1:test:(Ljava/util/Collection;)Ljava/util/function/Predicate;
      12: invokevirtual #90                 // Method bulkRemove:(Ljava/util/function/Predicate;)Z
      15: ireturn

  private boolean bulkRemove(java.util.function.Predicate<? super E>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       6: astore_3
       7: aload_3
       8: ifnull        65
      11: aload_0
      12: aload_3
      13: invokevirtual #49                 // Method succ:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      16: astore        4
      18: aload_3
      19: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      22: dup
      23: astore        5
      25: ifnull        59
      28: aload_1
      29: aload         5
      31: invokeinterface #93,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      36: ifeq          59
      39: getstatic     #5                  // Field ITEM:Ljava/lang/invoke/VarHandle;
      42: aload_3
      43: aload         5
      45: aconst_null
      46: invokevirtual #54                 // Method java/lang/invoke/VarHandle.compareAndSet:(Lio/undertow/util/FastConcurrentDirectDeque$Node;Ljava/lang/Object;Ljava/lang/Void;)Z
      49: ifeq          59
      52: aload_0
      53: aload_3
      54: invokevirtual #48                 // Method unlink:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)V
      57: iconst_1
      58: istore_2
      59: aload         4
      61: astore_3
      62: goto          7
      65: iload_2
      66: ireturn

  public void forEach(java.util.function.Consumer<? super E>);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #34                 // Method first:()Lio/undertow/util/FastConcurrentDirectDeque$Node;
       9: astore_3
      10: aload_3
      11: ifnull        39
      14: aload_3
      15: getfield      #22                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.item:Ljava/lang/Object;
      18: dup
      19: astore_2
      20: ifnull        30
      23: aload_1
      24: aload_2
      25: invokeinterface #94,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      30: aload_0
      31: aload_3
      32: invokevirtual #49                 // Method succ:(Lio/undertow/util/FastConcurrentDirectDeque$Node;)Lio/undertow/util/FastConcurrentDirectDeque$Node;
      35: astore_3
      36: goto          10
      39: return

  private static boolean lambda$retainAll$1(java.util.Collection, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #95,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static boolean lambda$removeAll$0(java.util.Collection, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #95,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
       7: ireturn

  static {};
    Code:
       0: new           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
       3: dup
       4: invokespecial #4                  // Method io/undertow/util/FastConcurrentDirectDeque$Node."<init>":()V
       7: putstatic     #1                  // Field PREV_TERMINATOR:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      10: getstatic     #1                  // Field PREV_TERMINATOR:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      13: getstatic     #1                  // Field PREV_TERMINATOR:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      16: putfield      #11                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.next:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      19: new           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      22: dup
      23: invokespecial #4                  // Method io/undertow/util/FastConcurrentDirectDeque$Node."<init>":()V
      26: putstatic     #2                  // Field NEXT_TERMINATOR:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      29: getstatic     #2                  // Field NEXT_TERMINATOR:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      32: getstatic     #2                  // Field NEXT_TERMINATOR:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      35: putfield      #10                 // Field io/undertow/util/FastConcurrentDirectDeque$Node.prev:Lio/undertow/util/FastConcurrentDirectDeque$Node;
      38: invokestatic  #96                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
      41: astore_0
      42: aload_0
      43: ldc           #23                 // class io/undertow/util/FastConcurrentDirectDeque
      45: ldc           #97                 // String head
      47: ldc           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      49: invokevirtual #98                 // Method java/lang/invoke/MethodHandles$Lookup.findVarHandle:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/VarHandle;
      52: putstatic     #16                 // Field HEAD:Ljava/lang/invoke/VarHandle;
      55: aload_0
      56: ldc           #23                 // class io/undertow/util/FastConcurrentDirectDeque
      58: ldc           #99                 // String tail
      60: ldc           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      62: invokevirtual #98                 // Method java/lang/invoke/MethodHandles$Lookup.findVarHandle:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/VarHandle;
      65: putstatic     #19                 // Field TAIL:Ljava/lang/invoke/VarHandle;
      68: aload_0
      69: ldc           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      71: ldc           #100                // String prev
      73: ldc           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      75: invokevirtual #98                 // Method java/lang/invoke/MethodHandles$Lookup.findVarHandle:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/VarHandle;
      78: putstatic     #14                 // Field PREV:Ljava/lang/invoke/VarHandle;
      81: aload_0
      82: ldc           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      84: ldc           #101                // String next
      86: ldc           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      88: invokevirtual #98                 // Method java/lang/invoke/MethodHandles$Lookup.findVarHandle:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/VarHandle;
      91: putstatic     #12                 // Field NEXT:Ljava/lang/invoke/VarHandle;
      94: aload_0
      95: ldc           #3                  // class io/undertow/util/FastConcurrentDirectDeque$Node
      97: ldc           #102                // String item
      99: ldc           #72                 // class java/lang/Object
     101: invokevirtual #98                 // Method java/lang/invoke/MethodHandles$Lookup.findVarHandle:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/VarHandle;
     104: putstatic     #5                  // Field ITEM:Ljava/lang/invoke/VarHandle;
     107: goto          120
     110: astore_0
     111: new           #104                // class java/lang/Error
     114: dup
     115: aload_0
     116: invokespecial #105                // Method java/lang/Error."<init>":(Ljava/lang/Throwable;)V
     119: athrow
     120: return
    Exception table:
       from    to  target type
          38   107   110   Class java/lang/ReflectiveOperationException
}
