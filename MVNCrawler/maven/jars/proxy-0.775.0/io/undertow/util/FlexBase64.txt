Compiled from "FlexBase64.java"
public class io.undertow.util.FlexBase64 {
  private static final byte[] STANDARD_ENCODING_TABLE;

  private static final byte[] STANDARD_DECODING_TABLE;

  private static final byte[] URL_ENCODING_TABLE;

  private static final byte[] URL_DECODING_TABLE;

  private static final java.lang.reflect.Constructor<java.lang.String> STRING_CONSTRUCTOR;

  public io.undertow.util.FlexBase64();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static io.undertow.util.FlexBase64$Encoder createEncoder(boolean);
    Code:
       0: new           #2                  // class io/undertow/util/FlexBase64$Encoder
       3: dup
       4: iload_0
       5: iconst_0
       6: invokespecial #3                  // Method io/undertow/util/FlexBase64$Encoder."<init>":(ZZ)V
       9: areturn

  public static io.undertow.util.FlexBase64$Encoder createURLEncoder(boolean);
    Code:
       0: new           #2                  // class io/undertow/util/FlexBase64$Encoder
       3: dup
       4: iload_0
       5: iconst_1
       6: invokespecial #3                  // Method io/undertow/util/FlexBase64$Encoder."<init>":(ZZ)V
       9: areturn

  public static io.undertow.util.FlexBase64$Decoder createDecoder();
    Code:
       0: new           #4                  // class io/undertow/util/FlexBase64$Decoder
       3: dup
       4: iconst_0
       5: invokespecial #5                  // Method io/undertow/util/FlexBase64$Decoder."<init>":(Z)V
       8: areturn

  public static io.undertow.util.FlexBase64$Decoder createURLDecoder();
    Code:
       0: new           #4                  // class io/undertow/util/FlexBase64$Decoder
       3: dup
       4: iconst_1
       5: invokespecial #5                  // Method io/undertow/util/FlexBase64$Decoder."<init>":(Z)V
       8: areturn

  public static java.lang.String encodeString(byte[], boolean);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: iload_1
       5: iconst_0
       6: invokestatic  #6                  // Method io/undertow/util/FlexBase64$Encoder.encodeString:([BIIZZ)Ljava/lang/String;
       9: areturn

  public static java.lang.String encodeStringURL(byte[], boolean);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: iload_1
       5: iconst_1
       6: invokestatic  #6                  // Method io/undertow/util/FlexBase64$Encoder.encodeString:([BIIZZ)Ljava/lang/String;
       9: areturn

  public static java.lang.String encodeString(byte[], int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iconst_0
       5: invokestatic  #6                  // Method io/undertow/util/FlexBase64$Encoder.encodeString:([BIIZZ)Ljava/lang/String;
       8: areturn

  public static java.lang.String encodeStringURL(byte[], int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iconst_1
       5: invokestatic  #6                  // Method io/undertow/util/FlexBase64$Encoder.encodeString:([BIIZZ)Ljava/lang/String;
       8: areturn

  public static java.lang.String encodeString(java.nio.ByteBuffer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #7                  // Method io/undertow/util/FlexBase64$Encoder.encodeString:(Ljava/nio/ByteBuffer;ZZ)Ljava/lang/String;
       6: areturn

  public static java.lang.String encodeStringURL(java.nio.ByteBuffer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokestatic  #7                  // Method io/undertow/util/FlexBase64$Encoder.encodeString:(Ljava/nio/ByteBuffer;ZZ)Ljava/lang/String;
       6: areturn

  public static byte[] encodeBytes(byte[], int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iconst_0
       5: invokestatic  #8                  // Method io/undertow/util/FlexBase64$Encoder.encodeBytes:([BIIZZ)[B
       8: areturn

  public static byte[] encodeBytesURL(byte[], int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iconst_1
       5: invokestatic  #8                  // Method io/undertow/util/FlexBase64$Encoder.encodeBytes:([BIIZZ)[B
       8: areturn

  public static java.nio.ByteBuffer decode(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #9                  // Method io/undertow/util/FlexBase64$Decoder.decode:(Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
       5: areturn

  public static java.nio.ByteBuffer decodeURL(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #9                  // Method io/undertow/util/FlexBase64$Decoder.decode:(Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
       5: areturn

  public static java.nio.ByteBuffer decode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #10                 // Method io/undertow/util/FlexBase64$Decoder.decode:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;
       5: areturn

  public static java.nio.ByteBuffer decodeURL(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // Method io/undertow/util/FlexBase64$Decoder.decode:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;
       5: areturn

  public static java.nio.ByteBuffer decode(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: invokestatic  #11                 // Method io/undertow/util/FlexBase64$Decoder.decode:([BIIZ)Ljava/nio/ByteBuffer;
       7: areturn

  public static java.nio.ByteBuffer decodeURL(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_1
       4: invokestatic  #11                 // Method io/undertow/util/FlexBase64$Decoder.decode:([BIIZ)Ljava/nio/ByteBuffer;
       7: areturn

  public static io.undertow.util.FlexBase64$EncoderInputStream createEncoderInputStream(java.io.InputStream, int, boolean);
    Code:
       0: new           #12                 // class io/undertow/util/FlexBase64$EncoderInputStream
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: iconst_0
       8: invokespecial #13                 // Method io/undertow/util/FlexBase64$EncoderInputStream."<init>":(Ljava/io/InputStream;IZZ)V
      11: areturn

  public static io.undertow.util.FlexBase64$EncoderInputStream createEncoderInputStream(java.io.InputStream);
    Code:
       0: new           #12                 // class io/undertow/util/FlexBase64$EncoderInputStream
       3: dup
       4: aload_0
       5: invokespecial #14                 // Method io/undertow/util/FlexBase64$EncoderInputStream."<init>":(Ljava/io/InputStream;)V
       8: areturn

  public static io.undertow.util.FlexBase64$DecoderInputStream createDecoderInputStream(java.io.InputStream, int);
    Code:
       0: new           #15                 // class io/undertow/util/FlexBase64$DecoderInputStream
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #16                 // Method io/undertow/util/FlexBase64$DecoderInputStream."<init>":(Ljava/io/InputStream;I)V
       9: areturn

  public static io.undertow.util.FlexBase64$DecoderInputStream createDecoderInputStream(java.io.InputStream);
    Code:
       0: new           #15                 // class io/undertow/util/FlexBase64$DecoderInputStream
       3: dup
       4: aload_0
       5: invokespecial #17                 // Method io/undertow/util/FlexBase64$DecoderInputStream."<init>":(Ljava/io/InputStream;)V
       8: areturn

  public static io.undertow.util.FlexBase64$EncoderOutputStream createEncoderOutputStream(java.io.OutputStream, int, boolean);
    Code:
       0: new           #18                 // class io/undertow/util/FlexBase64$EncoderOutputStream
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokespecial #19                 // Method io/undertow/util/FlexBase64$EncoderOutputStream."<init>":(Ljava/io/OutputStream;IZ)V
      10: areturn

  public static io.undertow.util.FlexBase64$EncoderOutputStream createEncoderOutputStream(java.io.OutputStream);
    Code:
       0: new           #18                 // class io/undertow/util/FlexBase64$EncoderOutputStream
       3: dup
       4: aload_0
       5: invokespecial #20                 // Method io/undertow/util/FlexBase64$EncoderOutputStream."<init>":(Ljava/io/OutputStream;)V
       8: areturn

  public static io.undertow.util.FlexBase64$DecoderOutputStream createDecoderOutputStream(java.io.OutputStream, int);
    Code:
       0: new           #21                 // class io/undertow/util/FlexBase64$DecoderOutputStream
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #22                 // Method io/undertow/util/FlexBase64$DecoderOutputStream."<init>":(Ljava/io/OutputStream;I)V
       9: areturn

  public static io.undertow.util.FlexBase64$DecoderOutputStream createDecoderOutputStream(java.io.OutputStream);
    Code:
       0: new           #21                 // class io/undertow/util/FlexBase64$DecoderOutputStream
       3: dup
       4: aload_0
       5: invokespecial #23                 // Method io/undertow/util/FlexBase64$DecoderOutputStream."<init>":(Ljava/io/OutputStream;)V
       8: areturn

  static {};
    Code:
       0: bipush        80
       2: newarray       byte
       4: putstatic     #24                 // Field STANDARD_DECODING_TABLE:[B
       7: bipush        80
       9: newarray       byte
      11: putstatic     #25                 // Field URL_DECODING_TABLE:[B
      14: ldc           #26                 // String ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
      16: getstatic     #27                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      19: invokevirtual #28                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      22: putstatic     #29                 // Field STANDARD_ENCODING_TABLE:[B
      25: ldc           #30                 // String ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_
      27: getstatic     #27                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      30: invokevirtual #28                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      33: putstatic     #31                 // Field URL_ENCODING_TABLE:[B
      36: iconst_0
      37: istore_0
      38: iload_0
      39: getstatic     #29                 // Field STANDARD_ENCODING_TABLE:[B
      42: arraylength
      43: if_icmpge     74
      46: getstatic     #29                 // Field STANDARD_ENCODING_TABLE:[B
      49: iload_0
      50: baload
      51: sipush        255
      54: iand
      55: bipush        43
      57: isub
      58: istore_1
      59: getstatic     #24                 // Field STANDARD_DECODING_TABLE:[B
      62: iload_1
      63: iload_0
      64: iconst_1
      65: iadd
      66: i2b
      67: bastore
      68: iinc          0, 1
      71: goto          38
      74: iconst_0
      75: istore_0
      76: iload_0
      77: getstatic     #31                 // Field URL_ENCODING_TABLE:[B
      80: arraylength
      81: if_icmpge     112
      84: getstatic     #31                 // Field URL_ENCODING_TABLE:[B
      87: iload_0
      88: baload
      89: sipush        255
      92: iand
      93: bipush        43
      95: isub
      96: istore_1
      97: getstatic     #25                 // Field URL_DECODING_TABLE:[B
     100: iload_1
     101: iload_0
     102: iconst_1
     103: iadd
     104: i2b
     105: bastore
     106: iinc          0, 1
     109: goto          76
     112: aconst_null
     113: astore_0
     114: new           #32                 // class io/undertow/util/FlexBase64$1
     117: dup
     118: invokespecial #33                 // Method io/undertow/util/FlexBase64$1."<init>":()V
     121: astore_1
     122: invokestatic  #34                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
     125: ifnull        139
     128: aload_1
     129: invokestatic  #35                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     132: checkcast     #36                 // class java/lang/reflect/Constructor
     135: astore_0
     136: goto          149
     139: aload_1
     140: invokeinterface #37,  1           // InterfaceMethod java/security/PrivilegedExceptionAction.run:()Ljava/lang/Object;
     145: checkcast     #36                 // class java/lang/reflect/Constructor
     148: astore_0
     149: goto          153
     152: astore_1
     153: aload_0
     154: putstatic     #39                 // Field STRING_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
     157: return
    Exception table:
       from    to  target type
         114   149   152   Class java/lang/Throwable
}
