Compiled from "BlockingSenderImpl.java"
public class io.undertow.io.BlockingSenderImpl implements io.undertow.io.Sender {
  private final io.undertow.server.HttpServerExchange exchange;

  private final java.io.OutputStream outputStream;

  private volatile java.lang.Thread inCall;

  private volatile java.lang.Thread sendThread;

  private java.nio.ByteBuffer[] next;

  private java.nio.channels.FileChannel pendingFile;

  private io.undertow.io.IoCallback queuedCallback;

  public io.undertow.io.BlockingSenderImpl(io.undertow.server.HttpServerExchange, java.io.OutputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field outputStream:Ljava/io/OutputStream;
      14: return

  public void send(java.nio.ByteBuffer, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #5                  // Field sendThread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #6                  // Field inCall:Ljava/lang/Thread;
      11: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: if_acmpne     31
      17: aload_0
      18: iconst_1
      19: anewarray     #7                  // class java/nio/ByteBuffer
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: aload_2
      27: invokevirtual #8                  // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      30: return
      31: aload_0
      32: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      35: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      38: lstore_3
      39: lload_3
      40: lconst_0
      41: lcmp
      42: ifle          81
      45: aload_1
      46: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      49: i2l
      50: lload_3
      51: lcmp
      52: ifle          81
      55: aload_2
      56: aload_0
      57: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      60: aload_0
      61: getstatic     #11                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      64: aload_1
      65: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      68: i2l
      69: lload_3
      70: invokeinterface #12,  5           // InterfaceMethod io/undertow/UndertowLogger.dataLargerThanContentLength:(JJ)Ljava/io/IOException;
      75: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      80: return
      81: aload_0
      82: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      85: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      88: ifne          135
      91: aload_2
      92: getstatic     #15                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
      95: if_acmpne     135
      98: lload_3
      99: ldc2_w        #16                 // long -1l
     102: lcmp
     103: ifne          135
     106: aload_0
     107: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     110: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     113: getstatic     #19                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     116: invokevirtual #20                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     119: ifne          135
     122: aload_0
     123: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     126: aload_1
     127: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
     130: i2l
     131: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
     134: pop
     135: aload_0
     136: aload_1
     137: aload_2
     138: invokevirtual #22                 // Method writeBuffer:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
     141: ifeq          149
     144: aload_0
     145: aload_2
     146: invokevirtual #23                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
     149: return

  public void send(java.nio.ByteBuffer[], io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #5                  // Field sendThread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #6                  // Field inCall:Ljava/lang/Thread;
      11: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: if_acmpne     24
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #8                  // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      23: return
      24: aload_0
      25: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      28: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      31: lstore_3
      32: lload_3
      33: lconst_0
      34: lcmp
      35: ifle          72
      38: aload_1
      39: invokestatic  #24                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
      42: lload_3
      43: lcmp
      44: ifle          72
      47: aload_2
      48: aload_0
      49: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      52: aload_0
      53: getstatic     #11                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      56: aload_1
      57: invokestatic  #24                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
      60: lload_3
      61: invokeinterface #12,  5           // InterfaceMethod io/undertow/UndertowLogger.dataLargerThanContentLength:(JJ)Ljava/io/IOException;
      66: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      71: return
      72: aload_0
      73: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      76: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      79: ifne          125
      82: aload_2
      83: getstatic     #15                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
      86: if_acmpne     125
      89: lload_3
      90: ldc2_w        #16                 // long -1l
      93: lcmp
      94: ifne          125
      97: aload_0
      98: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     101: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     104: getstatic     #19                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     107: invokevirtual #20                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     110: ifne          125
     113: aload_0
     114: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     117: aload_1
     118: invokestatic  #24                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     121: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
     124: pop
     125: aload_0
     126: aload_1
     127: aload_2
     128: invokevirtual #25                 // Method writeBuffer:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
     131: ifne          135
     134: return
     135: aload_0
     136: aload_2
     137: invokevirtual #23                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
     140: return

  public void send(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #15                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #26                 // Method send:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.nio.ByteBuffer[]);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #15                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #27                 // Method send:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.lang.String, io.undertow.io.IoCallback);
    Code:
       0: aload_1
       1: getstatic     #28                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       4: invokevirtual #29                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       7: astore_3
       8: aload_0
       9: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      12: putfield      #5                  // Field sendThread:Ljava/lang/Thread;
      15: aload_0
      16: getfield      #6                  // Field inCall:Ljava/lang/Thread;
      19: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      22: if_acmpne     42
      25: aload_0
      26: iconst_1
      27: anewarray     #7                  // class java/nio/ByteBuffer
      30: dup
      31: iconst_0
      32: aload_3
      33: invokestatic  #30                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      36: aastore
      37: aload_2
      38: invokevirtual #8                  // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      41: return
      42: aload_0
      43: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      46: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      49: lstore        4
      51: lload         4
      53: lconst_0
      54: lcmp
      55: ifle          92
      58: aload_3
      59: arraylength
      60: i2l
      61: lload         4
      63: lcmp
      64: ifle          92
      67: aload_2
      68: aload_0
      69: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      72: aload_0
      73: getstatic     #11                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      76: aload_3
      77: arraylength
      78: i2l
      79: lload         4
      81: invokeinterface #12,  5           // InterfaceMethod io/undertow/UndertowLogger.dataLargerThanContentLength:(JJ)Ljava/io/IOException;
      86: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      91: return
      92: aload_0
      93: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      96: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      99: ifne          145
     102: aload_2
     103: getstatic     #15                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
     106: if_acmpne     145
     109: lload         4
     111: ldc2_w        #16                 // long -1l
     114: lcmp
     115: ifne          145
     118: aload_0
     119: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     122: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     125: getstatic     #19                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     128: invokevirtual #20                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     131: ifne          145
     134: aload_0
     135: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     138: aload_3
     139: arraylength
     140: i2l
     141: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
     144: pop
     145: aload_0
     146: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
     149: aload_3
     150: invokevirtual #31                 // Method java/io/OutputStream.write:([B)V
     153: aload_0
     154: aload_2
     155: invokevirtual #23                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
     158: goto          176
     161: astore        4
     163: aload_2
     164: aload_0
     165: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     168: aload_0
     169: aload         4
     171: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     176: return
    Exception table:
       from    to  target type
         145   158   161   Class java/io/IOException

  public void send(java.lang.String, java.nio.charset.Charset, io.undertow.io.IoCallback);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #29                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       5: astore        4
       7: aload_0
       8: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: putfield      #5                  // Field sendThread:Ljava/lang/Thread;
      14: aload_0
      15: getfield      #6                  // Field inCall:Ljava/lang/Thread;
      18: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      21: if_acmpne     42
      24: aload_0
      25: iconst_1
      26: anewarray     #7                  // class java/nio/ByteBuffer
      29: dup
      30: iconst_0
      31: aload         4
      33: invokestatic  #30                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      36: aastore
      37: aload_3
      38: invokevirtual #8                  // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      41: return
      42: aload_0
      43: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      46: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      49: lstore        5
      51: lload         5
      53: lconst_0
      54: lcmp
      55: ifle          94
      58: aload         4
      60: arraylength
      61: i2l
      62: lload         5
      64: lcmp
      65: ifle          94
      68: aload_3
      69: aload_0
      70: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      73: aload_0
      74: getstatic     #11                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      77: aload         4
      79: arraylength
      80: i2l
      81: lload         5
      83: invokeinterface #12,  5           // InterfaceMethod io/undertow/UndertowLogger.dataLargerThanContentLength:(JJ)Ljava/io/IOException;
      88: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      93: return
      94: aload_0
      95: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      98: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
     101: ifne          148
     104: aload_3
     105: getstatic     #15                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
     108: if_acmpne     148
     111: lload         5
     113: ldc2_w        #16                 // long -1l
     116: lcmp
     117: ifne          148
     120: aload_0
     121: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     124: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     127: getstatic     #19                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     130: invokevirtual #20                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     133: ifne          148
     136: aload_0
     137: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     140: aload         4
     142: arraylength
     143: i2l
     144: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
     147: pop
     148: aload_0
     149: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
     152: aload         4
     154: invokevirtual #31                 // Method java/io/OutputStream.write:([B)V
     157: aload_0
     158: aload_3
     159: invokevirtual #23                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
     162: goto          180
     165: astore        5
     167: aload_3
     168: aload_0
     169: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     172: aload_0
     173: aload         5
     175: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     180: return
    Exception table:
       from    to  target type
         148   162   165   Class java/io/IOException

  public void send(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #15                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #33                 // Method send:(Ljava/lang/String;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #15                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       6: invokevirtual #34                 // Method send:(Ljava/lang/String;Ljava/nio/charset/Charset;Lio/undertow/io/IoCallback;)V
       9: return

  public void transferFrom(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #5                  // Field sendThread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #6                  // Field inCall:Ljava/lang/Thread;
      11: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: if_acmpne     24
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #35                 // Method queue:(Ljava/nio/channels/FileChannel;Lio/undertow/io/IoCallback;)V
      23: return
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #36                 // Method performTransfer:(Ljava/nio/channels/FileChannel;Lio/undertow/io/IoCallback;)V
      30: aload_0
      31: aload_2
      32: invokevirtual #23                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      35: return

  private void performTransfer(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
       4: instanceof    #37                 // class io/undertow/io/BufferWritableOutputStream
       7: ifeq          42
      10: aload_0
      11: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
      14: checkcast     #37                 // class io/undertow/io/BufferWritableOutputStream
      17: aload_1
      18: invokeinterface #38,  2           // InterfaceMethod io/undertow/io/BufferWritableOutputStream.transferFrom:(Ljava/nio/channels/FileChannel;)V
      23: goto          235
      26: astore_3
      27: aload_2
      28: aload_0
      29: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      32: aload_0
      33: aload_3
      34: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      39: goto          235
      42: aload_0
      43: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      46: invokevirtual #39                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      49: invokevirtual #40                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      52: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.getArrayBackedPool:()Lio/undertow/connector/ByteBufferPool;
      57: invokeinterface #42,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      62: astore_3
      63: aload_3
      64: ifnull        170
      67: aload_3
      68: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      73: astore        4
      75: aload_1
      76: invokevirtual #44                 // Method java/nio/channels/FileChannel.position:()J
      79: lstore        5
      81: aload_1
      82: invokevirtual #45                 // Method java/nio/channels/FileChannel.size:()J
      85: lstore        7
      87: lload         7
      89: lload         5
      91: lsub
      92: lconst_0
      93: lcmp
      94: ifle          149
      97: aload_1
      98: aload         4
     100: invokevirtual #46                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
     103: istore        9
     105: iload         9
     107: ifgt          113
     110: goto          149
     113: lload         5
     115: iload         9
     117: i2l
     118: ladd
     119: lstore        5
     121: aload_0
     122: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
     125: aload         4
     127: invokevirtual #47                 // Method java/nio/ByteBuffer.array:()[B
     130: aload         4
     132: invokevirtual #48                 // Method java/nio/ByteBuffer.arrayOffset:()I
     135: iload         9
     137: invokevirtual #49                 // Method java/io/OutputStream.write:([BII)V
     140: aload         4
     142: invokevirtual #50                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     145: pop
     146: goto          87
     149: lload         5
     151: lload         7
     153: lcmp
     154: ifeq          167
     157: new           #51                 // class java/io/EOFException
     160: dup
     161: ldc           #52                 // String Unexpected EOF reading file
     163: invokespecial #53                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
     166: athrow
     167: goto          179
     170: getstatic     #54                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     173: invokeinterface #55,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToAllocateResource:()Ljava/io/IOException;
     178: athrow
     179: aload_3
     180: ifnull        219
     183: aload_3
     184: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     189: goto          219
     192: astore        4
     194: aload_3
     195: ifnull        216
     198: aload_3
     199: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     204: goto          216
     207: astore        5
     209: aload         4
     211: aload         5
     213: invokevirtual #58                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     216: aload         4
     218: athrow
     219: goto          235
     222: astore_3
     223: aload_2
     224: aload_0
     225: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     228: aload_0
     229: aload_3
     230: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     235: return
    Exception table:
       from    to  target type
          10    23    26   Class java/io/IOException
          63   179   192   Class java/lang/Throwable
         198   204   207   Class java/lang/Throwable
          42   219   222   Class java/io/IOException

  public void close(io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
       4: invokevirtual #59                 // Method java/io/OutputStream.close:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      12: goto          28
      15: astore_2
      16: aload_1
      17: aload_0
      18: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      21: aload_0
      22: aload_2
      23: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      28: return
    Exception table:
       from    to  target type
           0    12    15   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
       4: invokestatic  #60                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: return

  private boolean writeBuffer(java.nio.ByteBuffer, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #7                  // class java/nio/ByteBuffer
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: aload_2
      10: invokevirtual #25                 // Method writeBuffer:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
      13: ireturn

  private boolean writeBuffer(java.nio.ByteBuffer[], io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
       4: instanceof    #37                 // class io/undertow/io/BufferWritableOutputStream
       7: ifeq          40
      10: aload_0
      11: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
      14: checkcast     #37                 // class io/undertow/io/BufferWritableOutputStream
      17: aload_1
      18: invokeinterface #61,  2           // InterfaceMethod io/undertow/io/BufferWritableOutputStream.write:([Ljava/nio/ByteBuffer;)V
      23: iconst_1
      24: ireturn
      25: astore_3
      26: aload_2
      27: aload_0
      28: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      31: aload_0
      32: aload_3
      33: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      38: iconst_0
      39: ireturn
      40: aload_1
      41: astore_3
      42: aload_3
      43: arraylength
      44: istore        4
      46: iconst_0
      47: istore        5
      49: iload         5
      51: iload         4
      53: if_icmpge     342
      56: aload_3
      57: iload         5
      59: aaload
      60: astore        6
      62: aload         6
      64: invokevirtual #62                 // Method java/nio/ByteBuffer.hasArray:()Z
      67: ifeq          112
      70: aload_0
      71: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
      74: aload         6
      76: invokevirtual #47                 // Method java/nio/ByteBuffer.array:()[B
      79: aload         6
      81: invokevirtual #48                 // Method java/nio/ByteBuffer.arrayOffset:()I
      84: aload         6
      86: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      89: invokevirtual #49                 // Method java/io/OutputStream.write:([BII)V
      92: goto          336
      95: astore        7
      97: aload_2
      98: aload_0
      99: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     102: aload_0
     103: aload         7
     105: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     110: iconst_0
     111: ireturn
     112: aload_0
     113: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     116: invokevirtual #39                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     119: invokevirtual #40                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     122: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.getArrayBackedPool:()Lio/undertow/connector/ByteBufferPool;
     127: invokeinterface #42,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     132: astore        7
     134: aload         7
     136: ifnull        263
     139: aload         6
     141: invokevirtual #63                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     144: ifeq          272
     147: aload         6
     149: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
     152: aload         7
     154: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     159: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
     162: invokestatic  #64                 // Method java/lang/Math.min:(II)I
     165: istore        8
     167: aload         6
     169: aload         7
     171: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     176: invokevirtual #47                 // Method java/nio/ByteBuffer.array:()[B
     179: aload         7
     181: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     186: invokevirtual #48                 // Method java/nio/ByteBuffer.arrayOffset:()I
     189: iload         8
     191: invokevirtual #65                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     194: pop
     195: aload_0
     196: getfield      #3                  // Field outputStream:Ljava/io/OutputStream;
     199: aload         7
     201: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     206: invokevirtual #47                 // Method java/nio/ByteBuffer.array:()[B
     209: aload         7
     211: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     216: invokevirtual #48                 // Method java/nio/ByteBuffer.arrayOffset:()I
     219: iload         8
     221: invokevirtual #49                 // Method java/io/OutputStream.write:([BII)V
     224: goto          260
     227: astore        9
     229: aload_2
     230: aload_0
     231: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     234: aload_0
     235: aload         9
     237: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     242: iconst_0
     243: istore        10
     245: aload         7
     247: ifnull        257
     250: aload         7
     252: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     257: iload         10
     259: ireturn
     260: goto          139
     263: getstatic     #54                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     266: invokeinterface #55,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToAllocateResource:()Ljava/io/IOException;
     271: athrow
     272: aload         7
     274: ifnull        316
     277: aload         7
     279: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     284: goto          316
     287: astore        8
     289: aload         7
     291: ifnull        313
     294: aload         7
     296: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     301: goto          313
     304: astore        9
     306: aload         8
     308: aload         9
     310: invokevirtual #58                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     313: aload         8
     315: athrow
     316: goto          336
     319: astore        7
     321: aload_2
     322: aload_0
     323: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     326: aload_0
     327: aload         7
     329: invokeinterface #13,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     334: iconst_0
     335: ireturn
     336: iinc          5, 1
     339: goto          49
     342: iconst_1
     343: ireturn
    Exception table:
       from    to  target type
          10    24    25   Class java/io/IOException
          70    92    95   Class java/io/IOException
         195   224   227   Class java/io/IOException
         134   245   287   Class java/lang/Throwable
         260   272   287   Class java/lang/Throwable
         294   301   304   Class java/lang/Throwable
         112   257   319   Class java/io/IOException
         260   316   319   Class java/io/IOException

  private void invokeOnComplete(io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field sendThread:Ljava/lang/Thread;
       5: aload_0
       6: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: putfield      #6                  // Field inCall:Ljava/lang/Thread;
      12: aload_1
      13: aload_0
      14: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      17: aload_0
      18: invokeinterface #66,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
      23: aload_0
      24: aconst_null
      25: putfield      #6                  // Field inCall:Ljava/lang/Thread;
      28: goto          39
      31: astore_2
      32: aload_0
      33: aconst_null
      34: putfield      #6                  // Field inCall:Ljava/lang/Thread;
      37: aload_2
      38: athrow
      39: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      42: aload_0
      43: getfield      #5                  // Field sendThread:Ljava/lang/Thread;
      46: if_acmpeq     50
      49: return
      50: aload_0
      51: getfield      #67                 // Field next:[Ljava/nio/ByteBuffer;
      54: ifnonnull     64
      57: aload_0
      58: getfield      #68                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      61: ifnull        208
      64: aload_0
      65: getfield      #67                 // Field next:[Ljava/nio/ByteBuffer;
      68: astore_2
      69: aload_0
      70: getfield      #69                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      73: astore_3
      74: aload_0
      75: getfield      #68                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      78: astore        4
      80: aload_0
      81: aconst_null
      82: putfield      #67                 // Field next:[Ljava/nio/ByteBuffer;
      85: aload_0
      86: aconst_null
      87: putfield      #69                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      90: aload_0
      91: aconst_null
      92: putfield      #68                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      95: aload_2
      96: ifnull        141
      99: aload_2
     100: astore        5
     102: aload         5
     104: arraylength
     105: istore        6
     107: iconst_0
     108: istore        7
     110: iload         7
     112: iload         6
     114: if_icmpge     138
     117: aload         5
     119: iload         7
     121: aaload
     122: astore        8
     124: aload_0
     125: aload         8
     127: aload_3
     128: invokevirtual #22                 // Method writeBuffer:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
     131: pop
     132: iinc          7, 1
     135: goto          110
     138: goto          153
     141: aload         4
     143: ifnull        153
     146: aload_0
     147: aload         4
     149: aload_3
     150: invokevirtual #36                 // Method performTransfer:(Ljava/nio/channels/FileChannel;Lio/undertow/io/IoCallback;)V
     153: aload_0
     154: aconst_null
     155: putfield      #5                  // Field sendThread:Ljava/lang/Thread;
     158: aload_0
     159: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     162: putfield      #6                  // Field inCall:Ljava/lang/Thread;
     165: aload_3
     166: aload_0
     167: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     170: aload_0
     171: invokeinterface #66,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
     176: aload_0
     177: aconst_null
     178: putfield      #6                  // Field inCall:Ljava/lang/Thread;
     181: goto          194
     184: astore        9
     186: aload_0
     187: aconst_null
     188: putfield      #6                  // Field inCall:Ljava/lang/Thread;
     191: aload         9
     193: athrow
     194: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     197: aload_0
     198: getfield      #5                  // Field sendThread:Ljava/lang/Thread;
     201: if_acmpeq     205
     204: return
     205: goto          50
     208: return
    Exception table:
       from    to  target type
          12    23    31   any
         165   176   184   any
         184   186   184   any

  private void queue(java.nio.ByteBuffer[], io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #67                 // Field next:[Ljava/nio/ByteBuffer;
       4: ifnull        16
       7: getstatic     #54                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #70,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #67                 // Field next:[Ljava/nio/ByteBuffer;
      21: aload_0
      22: aload_2
      23: putfield      #69                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      26: return

  private void queue(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #68                 // Field pendingFile:Ljava/nio/channels/FileChannel;
       4: ifnull        16
       7: getstatic     #54                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #70,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #68                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      21: aload_0
      22: aload_2
      23: putfield      #69                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      26: return
}
