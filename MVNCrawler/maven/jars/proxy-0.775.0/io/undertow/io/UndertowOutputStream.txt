Compiled from "UndertowOutputStream.java"
public class io.undertow.io.UndertowOutputStream extends java.io.OutputStream implements io.undertow.io.BufferWritableOutputStream {
  private final io.undertow.server.HttpServerExchange exchange;

  private java.nio.ByteBuffer buffer;

  private io.undertow.connector.PooledByteBuffer pooledBuffer;

  private org.xnio.channels.StreamSinkChannel channel;

  private int state;

  private long written;

  private final long contentLength;

  private static final int FLAG_CLOSED;

  private static final int FLAG_WRITE_STARTED;

  private static final int MAX_BUFFERS_TO_ALLOCATE;

  public io.undertow.io.UndertowOutputStream(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      14: putfield      #4                  // Field contentLength:J
      17: return

  public void resetBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_2
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #9,  1            // InterfaceMethod io/undertow/UndertowMessages.cannotResetBuffer:()Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: aconst_null
      22: putfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      25: aload_0
      26: getfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      29: invokestatic  #12                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      32: aload_0
      33: aconst_null
      34: putfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      37: aload_0
      38: lconst_0
      39: putfield      #13                 // Field written:J
      42: return

  public long getBytesWritten();
    Code:
       0: aload_0
       1: getfield      #13                 // Field written:J
       4: lreturn

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: newarray       byte
       4: dup
       5: iconst_0
       6: iload_1
       7: i2b
       8: bastore
       9: iconst_0
      10: iconst_1
      11: invokevirtual #14                 // Method write:([BII)V
      14: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #14                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     6
       5: return
       6: aload_0
       7: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      10: invokevirtual #15                 // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
      13: ifeq          25
      16: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      19: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.blockingIoFromIOThread:()Ljava/lang/IllegalStateException;
      24: athrow
      25: aload_0
      26: getfield      #5                  // Field state:I
      29: iconst_1
      30: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
      33: ifeq          45
      36: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      39: invokeinterface #17,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      44: athrow
      45: aload_0
      46: invokevirtual #18                 // Method buffer:()Ljava/nio/ByteBuffer;
      49: astore        4
      51: iload_3
      52: i2l
      53: aload_0
      54: getfield      #4                  // Field contentLength:J
      57: aload_0
      58: getfield      #13                 // Field written:J
      61: lsub
      62: lcmp
      63: ifeq          75
      66: aload         4
      68: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      71: iload_3
      72: if_icmpge     582
      75: aload         4
      77: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      80: iload_3
      81: if_icmpge     557
      84: aload_0
      85: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      88: astore        5
      90: aload         5
      92: ifnonnull     109
      95: aload_0
      96: aload_0
      97: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     100: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     103: dup
     104: astore        5
     106: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     109: aload_0
     110: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     113: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     116: invokevirtual #23                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     119: astore        6
     121: bipush        11
     123: anewarray     #24                 // class java/nio/ByteBuffer
     126: astore        7
     128: bipush        10
     130: anewarray     #25                 // class io/undertow/connector/PooledByteBuffer
     133: astore        8
     135: aload         7
     137: iconst_0
     138: aload         4
     140: aastore
     141: iconst_0
     142: istore        9
     144: aload         4
     146: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     149: istore        10
     151: aload         4
     153: aload_1
     154: iload         9
     156: iload_2
     157: iadd
     158: iload         10
     160: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     163: pop
     164: aload         4
     166: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     169: pop
     170: iload         9
     172: iload         10
     174: iadd
     175: istore        9
     177: iconst_1
     178: istore        11
     180: iconst_0
     181: istore        12
     183: iload         12
     185: bipush        10
     187: if_icmpge     317
     190: aload         6
     192: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     197: astore        13
     199: aload         8
     201: iload         11
     203: iconst_1
     204: isub
     205: aload         13
     207: aastore
     208: aload         7
     210: iload         11
     212: iinc          11, 1
     215: aload         13
     217: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     222: aastore
     223: aload         13
     225: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     230: astore        14
     232: iload_3
     233: iload         9
     235: isub
     236: istore        15
     238: iload         15
     240: aload         14
     242: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     245: if_icmple     284
     248: aload         14
     250: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     253: istore        10
     255: aload         14
     257: aload_1
     258: iload         9
     260: iload_2
     261: iadd
     262: iload         10
     264: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     267: pop
     268: aload         14
     270: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     273: pop
     274: iload         9
     276: iload         10
     278: iadd
     279: istore        9
     281: goto          311
     284: aload         14
     286: aload_1
     287: iload         9
     289: iload_2
     290: iadd
     291: iload_3
     292: iload         9
     294: isub
     295: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     298: pop
     299: iload_3
     300: istore        9
     302: aload         14
     304: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     307: pop
     308: goto          317
     311: iinc          12, 1
     314: goto          183
     317: aload         5
     319: aload         7
     321: iconst_0
     322: iload         11
     324: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     327: pop2
     328: iload         9
     330: iload_3
     331: if_icmpge     462
     334: iconst_0
     335: istore        11
     337: iconst_0
     338: istore        12
     340: iload         12
     342: bipush        11
     344: if_icmpge     448
     347: aload         7
     349: iload         12
     351: aaload
     352: astore        13
     354: aload         13
     356: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     359: pop
     360: iinc          11, 1
     363: iload_3
     364: iload         9
     366: isub
     367: istore        14
     369: iload         14
     371: aload         13
     373: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     376: if_icmple     415
     379: aload         13
     381: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     384: istore        10
     386: aload         13
     388: aload_1
     389: iload         9
     391: iload_2
     392: iadd
     393: iload         10
     395: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     398: pop
     399: aload         13
     401: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     404: pop
     405: iload         9
     407: iload         10
     409: iadd
     410: istore        9
     412: goto          442
     415: aload         13
     417: aload_1
     418: iload         9
     420: iload_2
     421: iadd
     422: iload_3
     423: iload         9
     425: isub
     426: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     429: pop
     430: iload_3
     431: istore        9
     433: aload         13
     435: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     438: pop
     439: goto          448
     442: iinc          12, 1
     445: goto          340
     448: aload         5
     450: aload         7
     452: iconst_0
     453: iload         11
     455: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     458: pop2
     459: goto          328
     462: aload         4
     464: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     467: pop
     468: iconst_0
     469: istore        9
     471: iload         9
     473: aload         8
     475: arraylength
     476: if_icmpge     507
     479: aload         8
     481: iload         9
     483: aaload
     484: astore        10
     486: aload         10
     488: ifnonnull     494
     491: goto          507
     494: aload         10
     496: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     501: iinc          9, 1
     504: goto          471
     507: goto          554
     510: astore        16
     512: iconst_0
     513: istore        17
     515: iload         17
     517: aload         8
     519: arraylength
     520: if_icmpge     551
     523: aload         8
     525: iload         17
     527: aaload
     528: astore        18
     530: aload         18
     532: ifnonnull     538
     535: goto          551
     538: aload         18
     540: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     545: iinc          17, 1
     548: goto          515
     551: aload         16
     553: athrow
     554: goto          604
     557: aload         4
     559: aload_1
     560: iload_2
     561: iload_3
     562: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     565: pop
     566: aload         4
     568: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     571: ifne          604
     574: aload_0
     575: iconst_0
     576: invokevirtual #33                 // Method writeBufferBlocking:(Z)V
     579: goto          604
     582: aload         4
     584: aload_1
     585: iload_2
     586: iload_3
     587: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     590: pop
     591: aload         4
     593: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     596: ifne          604
     599: aload_0
     600: iconst_0
     601: invokevirtual #33                 // Method writeBufferBlocking:(Z)V
     604: aload_0
     605: iload_3
     606: i2l
     607: invokevirtual #34                 // Method updateWritten:(J)V
     610: return
    Exception table:
       from    to  target type
         135   468   510   any
         510   512   510   any

  public void write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_1
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #17,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: iconst_0
      21: istore_2
      22: aload_1
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     58
      38: aload_3
      39: iload         5
      41: aaload
      42: astore        6
      44: iload_2
      45: aload         6
      47: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      50: iadd
      51: istore_2
      52: iinc          5, 1
      55: goto          31
      58: iload_2
      59: iconst_1
      60: if_icmpge     64
      63: return
      64: aload_0
      65: getfield      #13                 // Field written:J
      68: lconst_0
      69: lcmp
      70: ifne          126
      73: iload_2
      74: i2l
      75: aload_0
      76: getfield      #4                  // Field contentLength:J
      79: lcmp
      80: ifne          126
      83: aload_0
      84: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      87: ifnonnull     101
      90: aload_0
      91: aload_0
      92: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      95: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      98: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     101: aload_0
     102: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     105: aload_1
     106: iconst_0
     107: aload_1
     108: arraylength
     109: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     112: pop2
     113: aload_0
     114: dup
     115: getfield      #5                  // Field state:I
     118: iconst_2
     119: ior
     120: putfield      #5                  // Field state:I
     123: goto          249
     126: aload_0
     127: invokevirtual #18                 // Method buffer:()Ljava/nio/ByteBuffer;
     130: astore_3
     131: iload_2
     132: aload_3
     133: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     136: if_icmpge     151
     139: aload_3
     140: aload_1
     141: iconst_0
     142: aload_1
     143: arraylength
     144: invokestatic  #35                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     147: pop
     148: goto          249
     151: aload_0
     152: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     155: ifnonnull     169
     158: aload_0
     159: aload_0
     160: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     163: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     166: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     169: aload_3
     170: invokevirtual #36                 // Method java/nio/ByteBuffer.position:()I
     173: ifne          191
     176: aload_0
     177: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     180: aload_1
     181: iconst_0
     182: aload_1
     183: arraylength
     184: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     187: pop2
     188: goto          239
     191: aload_1
     192: arraylength
     193: iconst_1
     194: iadd
     195: anewarray     #24                 // class java/nio/ByteBuffer
     198: astore        4
     200: aload_3
     201: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     204: pop
     205: aload         4
     207: iconst_0
     208: aload_3
     209: aastore
     210: aload_1
     211: iconst_0
     212: aload         4
     214: iconst_1
     215: aload_1
     216: arraylength
     217: invokestatic  #37                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     220: aload_0
     221: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     224: aload         4
     226: iconst_0
     227: aload         4
     229: arraylength
     230: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     233: pop2
     234: aload_3
     235: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     238: pop
     239: aload_0
     240: dup
     241: getfield      #5                  // Field state:I
     244: iconst_2
     245: ior
     246: putfield      #5                  // Field state:I
     249: aload_0
     250: iload_2
     251: i2l
     252: invokevirtual #34                 // Method updateWritten:(J)V
     255: return

  public void write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #24                 // class java/nio/ByteBuffer
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokevirtual #38                 // Method write:([Ljava/nio/ByteBuffer;)V
      12: return

  void updateWritten(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #13                 // Field written:J
       5: lload_1
       6: ladd
       7: putfield      #13                 // Field written:J
      10: aload_0
      11: getfield      #4                  // Field contentLength:J
      14: ldc2_w        #39                 // long -1l
      17: lcmp
      18: ifeq          41
      21: aload_0
      22: getfield      #13                 // Field written:J
      25: aload_0
      26: getfield      #4                  // Field contentLength:J
      29: lcmp
      30: iflt          41
      33: aload_0
      34: invokevirtual #41                 // Method flush:()V
      37: aload_0
      38: invokevirtual #42                 // Method close:()V
      41: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_1
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: istore_1
       9: aload_0
      10: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      13: ifnull        47
      16: aload_0
      17: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      20: invokevirtual #36                 // Method java/nio/ByteBuffer.position:()I
      23: ifeq          47
      26: iload_1
      27: ifeq          39
      30: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      33: invokeinterface #17,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      38: athrow
      39: aload_0
      40: iconst_0
      41: invokevirtual #33                 // Method writeBufferBlocking:(Z)V
      44: goto          52
      47: iload_1
      48: ifeq          52
      51: return
      52: aload_0
      53: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      56: ifnonnull     70
      59: aload_0
      60: aload_0
      61: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      64: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      67: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      70: aload_0
      71: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      74: invokestatic  #43                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
      77: return

  private void writeBufferBlocking(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      12: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      15: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      18: aload_0
      19: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      22: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      25: pop
      26: aload_0
      27: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      33: ifeq          86
      36: iload_1
      37: ifeq          56
      40: aload_0
      41: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      44: aload_0
      45: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      48: invokeinterface #45,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:(Ljava/nio/ByteBuffer;)I
      53: goto          69
      56: aload_0
      57: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      60: aload_0
      61: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      64: invokeinterface #46,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      69: istore_2
      70: iload_2
      71: ifne          83
      74: aload_0
      75: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      78: invokeinterface #47,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.awaitWritable:()V
      83: goto          26
      86: aload_0
      87: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      90: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
      93: pop
      94: aload_0
      95: dup
      96: getfield      #5                  // Field state:I
      99: iconst_2
     100: ior
     101: putfield      #5                  // Field state:I
     104: return

  public void transferFrom(java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_1
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #17,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      24: ifnull        42
      27: aload_0
      28: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      31: invokevirtual #36                 // Method java/nio/ByteBuffer.position:()I
      34: ifeq          42
      37: aload_0
      38: iconst_0
      39: invokevirtual #33                 // Method writeBufferBlocking:(Z)V
      42: aload_0
      43: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      46: ifnonnull     60
      49: aload_0
      50: aload_0
      51: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      54: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      57: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      60: aload_1
      61: invokevirtual #48                 // Method java/nio/channels/FileChannel.position:()J
      64: lstore_2
      65: aload_1
      66: invokevirtual #49                 // Method java/nio/channels/FileChannel.size:()J
      69: lstore        4
      71: aload_0
      72: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      75: aload_1
      76: lload_2
      77: lload         4
      79: invokestatic  #50                 // Method org/xnio/channels/Channels.transferBlocking:(Lorg/xnio/channels/StreamSinkChannel;Ljava/nio/channels/FileChannel;JJ)V
      82: aload_0
      83: lload         4
      85: lload_2
      86: lsub
      87: invokevirtual #34                 // Method updateWritten:(J)V
      90: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_1
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: dup
      14: getfield      #5                  // Field state:I
      17: iconst_1
      18: ior
      19: putfield      #5                  // Field state:I
      22: aload_0
      23: getfield      #5                  // Field state:I
      26: iconst_2
      27: invokestatic  #51                 // Method org/xnio/Bits.anyAreClear:(II)Z
      30: ifeq          102
      33: aload_0
      34: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      37: ifnonnull     102
      40: aload_0
      41: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      44: invokestatic  #52                 // Method isHeadRequestWithContentLength:(Lio/undertow/server/HttpServerExchange;)Z
      47: ifne          102
      50: aload_0
      51: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      54: ifnonnull     76
      57: aload_0
      58: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      61: invokevirtual #53                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      64: getstatic     #54                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      67: ldc           #55                 // String 0
      69: invokevirtual #56                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      72: pop
      73: goto          102
      76: aload_0
      77: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      80: invokevirtual #53                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      83: getstatic     #54                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      86: aload_0
      87: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      90: invokevirtual #36                 // Method java/nio/ByteBuffer.position:()I
      93: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      98: invokevirtual #56                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     101: pop
     102: aload_0
     103: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
     106: ifnull        114
     109: aload_0
     110: iconst_1
     111: invokevirtual #33                 // Method writeBufferBlocking:(Z)V
     114: aload_0
     115: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     118: ifnonnull     132
     121: aload_0
     122: aload_0
     123: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     126: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     129: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     132: aload_0
     133: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     136: ifnonnull     169
     139: aload_0
     140: getfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     143: ifnull        163
     146: aload_0
     147: getfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     150: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     155: aload_0
     156: aconst_null
     157: putfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
     160: goto          168
     163: aload_0
     164: aconst_null
     165: putfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
     168: return
     169: aload_0
     170: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     173: astore_1
     174: aload_1
     175: invokeinterface #58,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     180: aload_1
     181: invokestatic  #43                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
     184: aload_0
     185: getfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     188: ifnull        208
     191: aload_0
     192: getfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     195: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     200: aload_0
     201: aconst_null
     202: putfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
     205: goto          248
     208: aload_0
     209: aconst_null
     210: putfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
     213: goto          248
     216: astore_2
     217: aload_0
     218: getfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     221: ifnull        241
     224: aload_0
     225: getfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     228: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     233: aload_0
     234: aconst_null
     235: putfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
     238: goto          246
     241: aload_0
     242: aconst_null
     243: putfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
     246: aload_2
     247: athrow
     248: return
    Exception table:
       from    to  target type
          12   139   216   any
         169   184   216   any

  private static boolean isHeadRequestWithContentLength(io.undertow.server.HttpServerExchange);
    Code:
       0: getstatic     #59                 // Field io/undertow/util/Methods.HEAD:Lio/undertow/util/HttpString;
       3: aload_0
       4: invokevirtual #60                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
       7: invokevirtual #61                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      10: ifeq          30
      13: aload_0
      14: invokevirtual #53                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      17: getstatic     #54                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      20: invokevirtual #62                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private java.nio.ByteBuffer buffer();
    Code:
       0: aload_0
       1: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: aload_0
      12: aload_0
      13: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      16: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      19: invokevirtual #23                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      22: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      27: putfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      30: aload_0
      31: aload_0
      32: getfield      #11                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      35: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      40: putfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      43: aload_0
      44: getfield      #10                 // Field buffer:Ljava/nio/ByteBuffer;
      47: areturn
}
