Compiled from "UndertowInputStream.java"
public class io.undertow.io.UndertowInputStream extends java.io.InputStream {
  private final org.xnio.channels.StreamSourceChannel channel;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final int readTimeout;

  private static final int FLAG_CLOSED;

  private static final int FLAG_FINISHED;

  private int state;

  private io.undertow.connector.PooledByteBuffer pooled;

  public io.undertow.io.UndertowInputStream(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       4: aload_1
       5: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.isRequestChannelAvailable:()Z
       8: ifeq          22
      11: aload_0
      12: aload_1
      13: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getRequestChannel:()Lorg/xnio/channels/StreamSourceChannel;
      16: putfield      #5                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      19: goto          37
      22: aload_0
      23: new           #6                  // class org/xnio/channels/EmptyStreamSourceChannel
      26: dup
      27: aload_1
      28: invokevirtual #7                  // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      31: invokespecial #8                  // Method org/xnio/channels/EmptyStreamSourceChannel."<init>":(Lorg/xnio/XnioIoThread;)V
      34: putfield      #5                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      37: aload_0
      38: aload_1
      39: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      42: invokevirtual #10                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      45: putfield      #11                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      48: aconst_null
      49: astore_2
      50: aload_0
      51: getfield      #5                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      54: getstatic     #12                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
      57: invokeinterface #13,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      62: checkcast     #14                 // class java/lang/Integer
      65: astore_2
      66: aload_0
      67: getfield      #5                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      70: getstatic     #15                 // Field io/undertow/UndertowOptions.IDLE_TIMEOUT:Lorg/xnio/Option;
      73: invokeinterface #13,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      78: checkcast     #14                 // class java/lang/Integer
      81: astore_3
      82: aload_2
      83: ifnull        93
      86: aload_2
      87: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      90: ifgt          98
      93: aload_3
      94: astore_2
      95: goto          122
      98: aload_3
      99: ifnull        122
     102: aload_3
     103: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
     106: ifle          122
     109: aload_3
     110: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
     113: aload_2
     114: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
     117: if_icmpge     122
     120: aload_3
     121: astore_2
     122: goto          135
     125: astore_3
     126: getstatic     #18                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     129: aload_3
     130: invokeinterface #19,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     135: aload_0
     136: aload_2
     137: ifnull        147
     140: aload_2
     141: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
     144: ifgt          152
     147: ldc           #20                 // int 600000
     149: goto          156
     152: aload_2
     153: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
     156: putfield      #21                 // Field readTimeout:I
     159: return
    Exception table:
       from    to  target type
          50   122   125   Class java/io/IOException

  public int read() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokevirtual #22                 // Method read:([B)I
       9: istore_2
      10: iload_2
      11: iconst_m1
      12: if_icmpne     17
      15: iconst_m1
      16: ireturn
      17: aload_1
      18: iconst_0
      19: baload
      20: sipush        255
      23: iand
      24: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #23                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: invokestatic  #24                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: getfield      #5                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       7: invokeinterface #25,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      12: if_acmpne     24
      15: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      18: invokeinterface #27,  1           // InterfaceMethod io/undertow/UndertowMessages.blockingIoFromIOThread:()Ljava/lang/IllegalStateException;
      23: athrow
      24: aload_0
      25: getfield      #28                 // Field state:I
      28: iconst_1
      29: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      32: ifeq          44
      35: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      38: invokeinterface #31,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      43: athrow
      44: aload_0
      45: invokevirtual #32                 // Method readIntoBuffer:()V
      48: aload_0
      49: getfield      #28                 // Field state:I
      52: iconst_2
      53: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      56: ifeq          61
      59: iconst_m1
      60: ireturn
      61: iload_3
      62: ifne          67
      65: iconst_0
      66: ireturn
      67: aload_0
      68: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      71: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      76: astore        4
      78: aload         4
      80: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      83: iload_3
      84: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      87: istore        5
      89: aload         4
      91: aload_1
      92: iload_2
      93: iload         5
      95: invokevirtual #37                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      98: pop
      99: aload         4
     101: invokevirtual #38                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     104: ifne          121
     107: aload_0
     108: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     111: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     116: aload_0
     117: aconst_null
     118: putfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     121: iload         5
     123: ireturn

  private void readIntoBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     119
       7: aload_0
       8: getfield      #28                 // Field state:I
      11: iconst_2
      12: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifne          119
      18: aload_0
      19: aload_0
      20: getfield      #11                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      23: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      28: putfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      31: aload_0
      32: getfield      #5                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      35: aload_0
      36: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      39: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      44: aload_0
      45: getfield      #21                 // Field readTimeout:I
      48: i2l
      49: getstatic     #41                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      52: invokestatic  #42                 // Method org/xnio/channels/Channels.readBlocking:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;)I
      55: istore_1
      56: aload_0
      57: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      60: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      65: invokevirtual #43                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      68: pop
      69: iload_1
      70: iconst_m1
      71: if_icmpne     101
      74: aload_0
      75: dup
      76: getfield      #28                 // Field state:I
      79: iconst_2
      80: ior
      81: putfield      #28                 // Field state:I
      84: aload_0
      85: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      88: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      93: aload_0
      94: aconst_null
      95: putfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      98: goto          119
     101: iload_1
     102: ifne          119
     105: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     108: aload_0
     109: getfield      #21                 // Field readTimeout:I
     112: i2l
     113: invokeinterface #44,  3           // InterfaceMethod io/undertow/UndertowMessages.readTimedOut:(J)Lorg/xnio/channels/ReadTimeoutException;
     118: athrow
     119: return

  private void readIntoBufferNonBlocking() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     111
       7: aload_0
       8: getfield      #28                 // Field state:I
      11: iconst_2
      12: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifne          111
      18: aload_0
      19: aload_0
      20: getfield      #11                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      23: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      28: putfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      31: aload_0
      32: getfield      #5                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      35: aload_0
      36: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      39: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      44: invokeinterface #45,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      49: istore_1
      50: iload_1
      51: ifne          69
      54: aload_0
      55: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      58: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      63: aload_0
      64: aconst_null
      65: putfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      68: return
      69: aload_0
      70: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      73: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      78: invokevirtual #43                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      81: pop
      82: iload_1
      83: iconst_m1
      84: if_icmpne     111
      87: aload_0
      88: dup
      89: getfield      #28                 // Field state:I
      92: iconst_2
      93: ior
      94: putfield      #28                 // Field state:I
      97: aload_0
      98: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     101: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     106: aload_0
     107: aconst_null
     108: putfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     111: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field state:I
       4: iconst_1
       5: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #31,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: invokevirtual #46                 // Method readIntoBufferNonBlocking:()V
      24: aload_0
      25: getfield      #28                 // Field state:I
      28: iconst_2
      29: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
      32: ifeq          37
      35: iconst_m1
      36: ireturn
      37: aload_0
      38: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      41: ifnonnull     46
      44: iconst_0
      45: ireturn
      46: aload_0
      47: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      50: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      55: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      58: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field state:I
       4: iconst_1
       5: invokestatic  #30                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: dup
      14: getfield      #28                 // Field state:I
      17: iconst_1
      18: ior
      19: putfield      #28                 // Field state:I
      22: aload_0
      23: getfield      #28                 // Field state:I
      26: iconst_2
      27: invokestatic  #47                 // Method org/xnio/Bits.allAreClear:(II)Z
      30: ifeq          61
      33: aload_0
      34: invokevirtual #32                 // Method readIntoBuffer:()V
      37: aload_0
      38: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      41: ifnull        22
      44: aload_0
      45: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      48: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      53: aload_0
      54: aconst_null
      55: putfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      58: goto          22
      61: aload_0
      62: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      65: ifnull        82
      68: aload_0
      69: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      72: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      77: aload_0
      78: aconst_null
      79: putfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      82: aload_0
      83: getfield      #5                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      86: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
      91: aload_0
      92: dup
      93: getfield      #28                 // Field state:I
      96: iconst_2
      97: ior
      98: putfield      #28                 // Field state:I
     101: goto          147
     104: astore_1
     105: aload_0
     106: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     109: ifnull        126
     112: aload_0
     113: getfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     116: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     121: aload_0
     122: aconst_null
     123: putfield      #33                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
     126: aload_0
     127: getfield      #5                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     130: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.shutdownReads:()V
     135: aload_0
     136: dup
     137: getfield      #28                 // Field state:I
     140: iconst_2
     141: ior
     142: putfield      #28                 // Field state:I
     145: aload_1
     146: athrow
     147: return
    Exception table:
       from    to  target type
          22    61   104   any
}
