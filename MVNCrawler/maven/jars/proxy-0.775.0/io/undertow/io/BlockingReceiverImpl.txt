Compiled from "BlockingReceiverImpl.java"
public class io.undertow.io.BlockingReceiverImpl implements io.undertow.io.Receiver {
  private static final io.undertow.io.Receiver$ErrorCallback END_EXCHANGE;

  public static final byte[] EMPTY_BYTE_ARRAY;

  private final io.undertow.server.HttpServerExchange exchange;

  private final java.io.InputStream inputStream;

  private int maxBufferSize;

  private boolean done;

  public io.undertow.io.BlockingReceiverImpl(io.undertow.server.HttpServerExchange, java.io.InputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field maxBufferSize:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field done:Z
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field inputStream:Ljava/io/InputStream;
      24: return

  public void setMaxBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxBufferSize:I
       5: return

  public void receiveFullString(io.undertow.io.Receiver$FullStringCallback, io.undertow.io.Receiver$ErrorCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #6                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       6: invokevirtual #7                  // Method receiveFullString:(Lio/undertow/io/Receiver$FullStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
       9: return

  public void receiveFullString(io.undertow.io.Receiver$FullStringCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: getstatic     #6                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       8: invokevirtual #7                  // Method receiveFullString:(Lio/undertow/io/Receiver$FullStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
      11: return

  public void receivePartialString(io.undertow.io.Receiver$PartialStringCallback, io.undertow.io.Receiver$ErrorCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #6                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       6: invokevirtual #9                  // Method receivePartialString:(Lio/undertow/io/Receiver$PartialStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
       9: return

  public void receivePartialString(io.undertow.io.Receiver$PartialStringCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: getstatic     #6                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       8: invokevirtual #9                  // Method receivePartialString:(Lio/undertow/io/Receiver$PartialStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
      11: return

  public void receiveFullString(io.undertow.io.Receiver$FullStringCallback, io.undertow.io.Receiver$ErrorCallback, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #3                  // Field done:Z
       4: ifeq          16
       7: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #11,  1           // InterfaceMethod io/undertow/UndertowMessages.requestBodyAlreadyRead:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_2
      17: ifnonnull     26
      20: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      23: goto          27
      26: aload_2
      27: astore        4
      29: aload_1
      30: ifnonnull     44
      33: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      36: ldc           #12                 // String callback
      38: invokeinterface #13,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      43: athrow
      44: aload_0
      45: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      48: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      51: ifeq          67
      54: aload_1
      55: aload_0
      56: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      59: ldc           #15                 // String
      61: invokeinterface #16,  3           // InterfaceMethod io/undertow/io/Receiver$FullStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)V
      66: return
      67: aload_0
      68: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      71: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      74: getstatic     #18                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      77: invokevirtual #19                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      80: astore        5
      82: aload         5
      84: ifnull        137
      87: aload         5
      89: invokestatic  #20                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      92: lstore        6
      94: lload         6
      96: ldc2_w        #22                 // long 2147483647l
      99: lcmp
     100: ifle          122
     103: aload         4
     105: aload_0
     106: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     109: new           #24                 // class io/undertow/io/Receiver$RequestToLargeException
     112: dup
     113: invokespecial #25                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     116: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     121: return
     122: new           #27                 // class java/io/ByteArrayOutputStream
     125: dup
     126: lload         6
     128: l2i
     129: invokespecial #28                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
     132: astore        8
     134: goto          151
     137: ldc2_w        #29                 // long -1l
     140: lstore        6
     142: new           #27                 // class java/io/ByteArrayOutputStream
     145: dup
     146: invokespecial #31                 // Method java/io/ByteArrayOutputStream."<init>":()V
     149: astore        8
     151: aload_0
     152: getfield      #2                  // Field maxBufferSize:I
     155: ifle          188
     158: lload         6
     160: aload_0
     161: getfield      #2                  // Field maxBufferSize:I
     164: i2l
     165: lcmp
     166: ifle          188
     169: aload         4
     171: aload_0
     172: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     175: new           #24                 // class io/undertow/io/Receiver$RequestToLargeException
     178: dup
     179: invokespecial #25                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     182: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     187: return
     188: aload_0
     189: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     192: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     195: invokevirtual #33                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     198: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.getArrayBackedPool:()Lio/undertow/connector/ByteBufferPool;
     203: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     208: astore        10
     210: aload         10
     212: ifnull        310
     215: aload_0
     216: getfield      #5                  // Field inputStream:Ljava/io/InputStream;
     219: aload         10
     221: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     226: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
     229: aload         10
     231: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     236: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
     239: aload         10
     241: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     246: invokevirtual #39                 // Method java/nio/ByteBuffer.remaining:()I
     249: invokevirtual #40                 // Method java/io/InputStream.read:([BII)I
     252: dup
     253: istore        9
     255: ifle          288
     258: aload         8
     260: aload         10
     262: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     267: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
     270: aload         10
     272: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     277: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
     280: iload         9
     282: invokevirtual #41                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     285: goto          215
     288: aload_1
     289: aload_0
     290: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     293: aload         8
     295: aload_3
     296: invokevirtual #42                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
     299: invokevirtual #43                 // Method java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
     302: invokeinterface #16,  3           // InterfaceMethod io/undertow/io/Receiver$FullStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)V
     307: goto          319
     310: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     313: invokeinterface #44,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToAllocateResource:()Ljava/io/IOException;
     318: athrow
     319: aload         10
     321: ifnull        363
     324: aload         10
     326: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     331: goto          363
     334: astore        11
     336: aload         10
     338: ifnull        360
     341: aload         10
     343: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     348: goto          360
     351: astore        12
     353: aload         11
     355: aload         12
     357: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     360: aload         11
     362: athrow
     363: goto          381
     366: astore        10
     368: aload         4
     370: aload_0
     371: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     374: aload         10
     376: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     381: return
    Exception table:
       from    to  target type
         210   319   334   Class java/lang/Throwable
         341   348   351   Class java/lang/Throwable
         188   363   366   Class java/io/IOException

  public void receiveFullString(io.undertow.io.Receiver$FullStringCallback, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: aload_2
       6: invokevirtual #7                  // Method receiveFullString:(Lio/undertow/io/Receiver$FullStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
       9: return

  public void receivePartialString(io.undertow.io.Receiver$PartialStringCallback, io.undertow.io.Receiver$ErrorCallback, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #3                  // Field done:Z
       4: ifeq          16
       7: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #11,  1           // InterfaceMethod io/undertow/UndertowMessages.requestBodyAlreadyRead:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_2
      17: ifnonnull     26
      20: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      23: goto          27
      26: aload_2
      27: astore        4
      29: aload_1
      30: ifnonnull     44
      33: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      36: ldc           #12                 // String callback
      38: invokeinterface #13,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      43: athrow
      44: aload_0
      45: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      48: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      51: ifeq          68
      54: aload_1
      55: aload_0
      56: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      59: ldc           #15                 // String
      61: iconst_1
      62: invokeinterface #49,  4           // InterfaceMethod io/undertow/io/Receiver$PartialStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
      67: return
      68: aload_0
      69: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      72: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      75: getstatic     #18                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      78: invokevirtual #19                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      81: astore        5
      83: aload         5
      85: ifnull        123
      88: aload         5
      90: invokestatic  #20                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      93: lstore        6
      95: lload         6
      97: ldc2_w        #22                 // long 2147483647l
     100: lcmp
     101: ifle          128
     104: aload         4
     106: aload_0
     107: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     110: new           #24                 // class io/undertow/io/Receiver$RequestToLargeException
     113: dup
     114: invokespecial #25                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     117: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     122: return
     123: ldc2_w        #29                 // long -1l
     126: lstore        6
     128: aload_0
     129: getfield      #2                  // Field maxBufferSize:I
     132: ifle          165
     135: lload         6
     137: aload_0
     138: getfield      #2                  // Field maxBufferSize:I
     141: i2l
     142: lcmp
     143: ifle          165
     146: aload         4
     148: aload_0
     149: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     152: new           #24                 // class io/undertow/io/Receiver$RequestToLargeException
     155: dup
     156: invokespecial #25                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     159: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     164: return
     165: aload_3
     166: invokevirtual #50                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
     169: astore        8
     171: aload_0
     172: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     175: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     178: invokevirtual #33                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     181: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.getArrayBackedPool:()Lio/undertow/connector/ByteBufferPool;
     186: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     191: astore        10
     193: aload         10
     195: ifnull        314
     198: aload_0
     199: getfield      #5                  // Field inputStream:Ljava/io/InputStream;
     202: aload         10
     204: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     209: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
     212: aload         10
     214: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     219: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
     222: aload         10
     224: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     229: invokevirtual #39                 // Method java/nio/ByteBuffer.remaining:()I
     232: invokevirtual #40                 // Method java/io/InputStream.read:([BII)I
     235: dup
     236: istore        9
     238: ifle          298
     241: aload         10
     243: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     248: iload         9
     250: invokevirtual #51                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     253: pop
     254: aload         8
     256: aload         10
     258: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     263: invokevirtual #52                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
     266: astore        11
     268: aload_1
     269: aload_0
     270: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     273: aload         11
     275: invokevirtual #53                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
     278: iconst_0
     279: invokeinterface #49,  4           // InterfaceMethod io/undertow/io/Receiver$PartialStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
     284: aload         10
     286: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     291: invokevirtual #54                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
     294: pop
     295: goto          198
     298: aload_1
     299: aload_0
     300: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     303: ldc           #15                 // String
     305: iconst_1
     306: invokeinterface #49,  4           // InterfaceMethod io/undertow/io/Receiver$PartialStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
     311: goto          323
     314: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     317: invokeinterface #44,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToAllocateResource:()Ljava/io/IOException;
     322: athrow
     323: aload         10
     325: ifnull        367
     328: aload         10
     330: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     335: goto          367
     338: astore        11
     340: aload         10
     342: ifnull        364
     345: aload         10
     347: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     352: goto          364
     355: astore        12
     357: aload         11
     359: aload         12
     361: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     364: aload         11
     366: athrow
     367: goto          385
     370: astore        10
     372: aload         4
     374: aload_0
     375: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     378: aload         10
     380: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     385: return
    Exception table:
       from    to  target type
         193   323   338   Class java/lang/Throwable
         345   352   355   Class java/lang/Throwable
         171   367   370   Class java/io/IOException

  public void receivePartialString(io.undertow.io.Receiver$PartialStringCallback, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: aload_2
       6: invokevirtual #9                  // Method receivePartialString:(Lio/undertow/io/Receiver$PartialStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
       9: return

  public void receiveFullBytes(io.undertow.io.Receiver$FullBytesCallback, io.undertow.io.Receiver$ErrorCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field done:Z
       4: ifeq          16
       7: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #11,  1           // InterfaceMethod io/undertow/UndertowMessages.requestBodyAlreadyRead:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_2
      17: ifnonnull     26
      20: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      23: goto          27
      26: aload_2
      27: astore_3
      28: aload_1
      29: ifnonnull     43
      32: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      35: ldc           #12                 // String callback
      37: invokeinterface #13,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      42: athrow
      43: aload_0
      44: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      47: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      50: ifeq          67
      53: aload_1
      54: aload_0
      55: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      58: getstatic     #55                 // Field EMPTY_BYTE_ARRAY:[B
      61: invokeinterface #56,  3           // InterfaceMethod io/undertow/io/Receiver$FullBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[B)V
      66: return
      67: aload_0
      68: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      71: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      74: getstatic     #18                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      77: invokevirtual #19                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      80: astore        4
      82: aload         4
      84: ifnull        136
      87: aload         4
      89: invokestatic  #20                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      92: lstore        5
      94: lload         5
      96: ldc2_w        #22                 // long 2147483647l
      99: lcmp
     100: ifle          121
     103: aload_3
     104: aload_0
     105: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     108: new           #24                 // class io/undertow/io/Receiver$RequestToLargeException
     111: dup
     112: invokespecial #25                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     115: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     120: return
     121: new           #27                 // class java/io/ByteArrayOutputStream
     124: dup
     125: lload         5
     127: l2i
     128: invokespecial #28                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
     131: astore        7
     133: goto          150
     136: ldc2_w        #29                 // long -1l
     139: lstore        5
     141: new           #27                 // class java/io/ByteArrayOutputStream
     144: dup
     145: invokespecial #31                 // Method java/io/ByteArrayOutputStream."<init>":()V
     148: astore        7
     150: aload_0
     151: getfield      #2                  // Field maxBufferSize:I
     154: ifle          186
     157: lload         5
     159: aload_0
     160: getfield      #2                  // Field maxBufferSize:I
     163: i2l
     164: lcmp
     165: ifle          186
     168: aload_3
     169: aload_0
     170: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     173: new           #24                 // class io/undertow/io/Receiver$RequestToLargeException
     176: dup
     177: invokespecial #25                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     180: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     185: return
     186: aload_0
     187: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     190: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     193: invokevirtual #33                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     196: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.getArrayBackedPool:()Lio/undertow/connector/ByteBufferPool;
     201: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     206: astore        9
     208: aload         9
     210: ifnull        304
     213: aload_0
     214: getfield      #5                  // Field inputStream:Ljava/io/InputStream;
     217: aload         9
     219: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     224: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
     227: aload         9
     229: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     234: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
     237: aload         9
     239: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     244: invokevirtual #39                 // Method java/nio/ByteBuffer.remaining:()I
     247: invokevirtual #40                 // Method java/io/InputStream.read:([BII)I
     250: dup
     251: istore        8
     253: ifle          286
     256: aload         7
     258: aload         9
     260: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     265: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
     268: aload         9
     270: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     275: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
     278: iload         8
     280: invokevirtual #41                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     283: goto          213
     286: aload_1
     287: aload_0
     288: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     291: aload         7
     293: invokevirtual #57                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     296: invokeinterface #56,  3           // InterfaceMethod io/undertow/io/Receiver$FullBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[B)V
     301: goto          313
     304: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     307: invokeinterface #44,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToAllocateResource:()Ljava/io/IOException;
     312: athrow
     313: aload         9
     315: ifnull        357
     318: aload         9
     320: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     325: goto          357
     328: astore        10
     330: aload         9
     332: ifnull        354
     335: aload         9
     337: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     342: goto          354
     345: astore        11
     347: aload         10
     349: aload         11
     351: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     354: aload         10
     356: athrow
     357: goto          374
     360: astore        9
     362: aload_3
     363: aload_0
     364: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     367: aload         9
     369: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     374: return
    Exception table:
       from    to  target type
         208   313   328   Class java/lang/Throwable
         335   342   345   Class java/lang/Throwable
         186   357   360   Class java/io/IOException

  public void receiveFullBytes(io.undertow.io.Receiver$FullBytesCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: invokevirtual #58                 // Method receiveFullBytes:(Lio/undertow/io/Receiver$FullBytesCallback;Lio/undertow/io/Receiver$ErrorCallback;)V
       8: return

  public void receivePartialBytes(io.undertow.io.Receiver$PartialBytesCallback, io.undertow.io.Receiver$ErrorCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field done:Z
       4: ifeq          16
       7: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #11,  1           // InterfaceMethod io/undertow/UndertowMessages.requestBodyAlreadyRead:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_2
      17: ifnonnull     26
      20: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      23: goto          27
      26: aload_2
      27: astore_3
      28: aload_1
      29: ifnonnull     43
      32: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      35: ldc           #12                 // String callback
      37: invokeinterface #13,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      42: athrow
      43: aload_0
      44: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      47: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      50: ifeq          68
      53: aload_1
      54: aload_0
      55: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      58: getstatic     #55                 // Field EMPTY_BYTE_ARRAY:[B
      61: iconst_1
      62: invokeinterface #59,  4           // InterfaceMethod io/undertow/io/Receiver$PartialBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[BZ)V
      67: return
      68: aload_0
      69: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      72: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      75: getstatic     #18                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      78: invokevirtual #19                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      81: astore        4
      83: aload         4
      85: ifnull        122
      88: aload         4
      90: invokestatic  #20                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      93: lstore        5
      95: lload         5
      97: ldc2_w        #22                 // long 2147483647l
     100: lcmp
     101: ifle          127
     104: aload_3
     105: aload_0
     106: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     109: new           #24                 // class io/undertow/io/Receiver$RequestToLargeException
     112: dup
     113: invokespecial #25                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     116: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     121: return
     122: ldc2_w        #29                 // long -1l
     125: lstore        5
     127: aload_0
     128: getfield      #2                  // Field maxBufferSize:I
     131: ifle          163
     134: lload         5
     136: aload_0
     137: getfield      #2                  // Field maxBufferSize:I
     140: i2l
     141: lcmp
     142: ifle          163
     145: aload_3
     146: aload_0
     147: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     150: new           #24                 // class io/undertow/io/Receiver$RequestToLargeException
     153: dup
     154: invokespecial #25                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     157: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     162: return
     163: aload_0
     164: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     167: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     170: invokevirtual #33                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     173: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.getArrayBackedPool:()Lio/undertow/connector/ByteBufferPool;
     178: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     183: astore        8
     185: aload         8
     187: ifnull        300
     190: aload_0
     191: getfield      #5                  // Field inputStream:Ljava/io/InputStream;
     194: aload         8
     196: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     201: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
     204: aload         8
     206: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     211: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
     214: aload         8
     216: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     221: invokevirtual #39                 // Method java/nio/ByteBuffer.remaining:()I
     224: invokevirtual #40                 // Method java/io/InputStream.read:([BII)I
     227: dup
     228: istore        7
     230: ifle          283
     233: iload         7
     235: newarray       byte
     237: astore        9
     239: aload         8
     241: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     246: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
     249: aload         8
     251: invokeinterface #36,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     256: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
     259: aload         9
     261: iconst_0
     262: iload         7
     264: invokestatic  #60                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     267: aload_1
     268: aload_0
     269: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     272: aload         9
     274: iconst_0
     275: invokeinterface #59,  4           // InterfaceMethod io/undertow/io/Receiver$PartialBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[BZ)V
     280: goto          190
     283: aload_1
     284: aload_0
     285: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     288: getstatic     #55                 // Field EMPTY_BYTE_ARRAY:[B
     291: iconst_1
     292: invokeinterface #59,  4           // InterfaceMethod io/undertow/io/Receiver$PartialBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[BZ)V
     297: goto          309
     300: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     303: invokeinterface #44,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToAllocateResource:()Ljava/io/IOException;
     308: athrow
     309: aload         8
     311: ifnull        353
     314: aload         8
     316: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     321: goto          353
     324: astore        9
     326: aload         8
     328: ifnull        350
     331: aload         8
     333: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     338: goto          350
     341: astore        10
     343: aload         9
     345: aload         10
     347: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     350: aload         9
     352: athrow
     353: goto          370
     356: astore        8
     358: aload_3
     359: aload_0
     360: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     363: aload         8
     365: invokeinterface #26,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     370: return
    Exception table:
       from    to  target type
         185   309   324   Class java/lang/Throwable
         331   338   341   Class java/lang/Throwable
         163   353   356   Class java/io/IOException

  public void receivePartialBytes(io.undertow.io.Receiver$PartialBytesCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: invokevirtual #61                 // Method receivePartialBytes:(Lio/undertow/io/Receiver$PartialBytesCallback;Lio/undertow/io/Receiver$ErrorCallback;)V
       8: return

  public void pause();
    Code:
       0: return

  public void resume();
    Code:
       0: return

  static {};
    Code:
       0: new           #62                 // class io/undertow/io/BlockingReceiverImpl$1
       3: dup
       4: invokespecial #63                 // Method io/undertow/io/BlockingReceiverImpl$1."<init>":()V
       7: putstatic     #8                  // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      10: iconst_0
      11: newarray       byte
      13: putstatic     #55                 // Field EMPTY_BYTE_ARRAY:[B
      16: return
}
