Compiled from "AsyncSenderImpl.java"
public class io.undertow.io.AsyncSenderImpl$TransferTask implements java.lang.Runnable, org.xnio.ChannelListener<org.xnio.channels.StreamSinkChannel> {
  final io.undertow.io.AsyncSenderImpl this$0;

  public io.undertow.io.AsyncSenderImpl$TransferTask(io.undertow.io.AsyncSenderImpl);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean run(boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
       4: getfield      #3                  // Field io/undertow/io/AsyncSenderImpl.fileChannel:Ljava/nio/channels/FileChannel;
       7: astore_2
       8: aload_2
       9: invokevirtual #4                  // Method java/nio/channels/FileChannel.position:()J
      12: lstore_3
      13: aload_2
      14: invokevirtual #5                  // Method java/nio/channels/FileChannel.size:()J
      17: lstore        5
      19: aload_0
      20: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
      23: getfield      #6                  // Field io/undertow/io/AsyncSenderImpl.channel:Lorg/xnio/channels/StreamSinkChannel;
      26: astore        7
      28: aload         7
      30: ifnonnull     129
      33: aload_0
      34: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
      37: getfield      #7                  // Field io/undertow/io/AsyncSenderImpl.callback:Lio/undertow/io/IoCallback;
      40: getstatic     #8                  // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
      43: if_acmpne     95
      46: aload_0
      47: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
      50: getfield      #9                  // Field io/undertow/io/AsyncSenderImpl.exchange:Lio/undertow/server/HttpServerExchange;
      53: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      56: ldc2_w        #11                 // long -1l
      59: lcmp
      60: ifne          95
      63: aload_0
      64: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
      67: getfield      #9                  // Field io/undertow/io/AsyncSenderImpl.exchange:Lio/undertow/server/HttpServerExchange;
      70: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      73: getstatic     #14                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      76: invokevirtual #15                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      79: ifne          95
      82: aload_0
      83: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
      86: getfield      #9                  // Field io/undertow/io/AsyncSenderImpl.exchange:Lio/undertow/server/HttpServerExchange;
      89: lload         5
      91: invokevirtual #16                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
      94: pop
      95: aload_0
      96: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
      99: aload_0
     100: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
     103: getfield      #9                  // Field io/undertow/io/AsyncSenderImpl.exchange:Lio/undertow/server/HttpServerExchange;
     106: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     109: dup
     110: astore        7
     112: putfield      #6                  // Field io/undertow/io/AsyncSenderImpl.channel:Lorg/xnio/channels/StreamSinkChannel;
     115: aload         7
     117: ifnonnull     129
     120: getstatic     #18                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     123: invokeinterface #19,  1           // InterfaceMethod io/undertow/UndertowMessages.responseChannelAlreadyProvided:()Ljava/lang/IllegalStateException;
     128: athrow
     129: lload         5
     131: lload_3
     132: lsub
     133: lconst_0
     134: lcmp
     135: ifle          196
     138: aload         7
     140: aload_2
     141: lload_3
     142: lload         5
     144: lload_3
     145: lsub
     146: invokeinterface #20,  6           // InterfaceMethod org/xnio/channels/StreamSinkChannel.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
     151: lstore        8
     153: lload_3
     154: lload         8
     156: ladd
     157: lstore_3
     158: lload         8
     160: lconst_0
     161: lcmp
     162: ifne          193
     165: aload_2
     166: lload_3
     167: invokevirtual #21                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
     170: pop
     171: aload         7
     173: invokeinterface #22,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     178: aload_0
     179: invokeinterface #23,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     184: aload         7
     186: invokeinterface #24,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     191: iconst_0
     192: ireturn
     193: goto          129
     196: iload_1
     197: ifeq          207
     200: aload_0
     201: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
     204: invokevirtual #25                 // Method io/undertow/io/AsyncSenderImpl.invokeOnComplete:()V
     207: goto          226
     210: astore_2
     211: aload_0
     212: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
     215: aload_0
     216: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
     219: getfield      #7                  // Field io/undertow/io/AsyncSenderImpl.callback:Lio/undertow/io/IoCallback;
     222: aload_2
     223: invokevirtual #27                 // Method io/undertow/io/AsyncSenderImpl.invokeOnException:(Lio/undertow/io/IoCallback;Ljava/io/IOException;)V
     226: iconst_1
     227: ireturn
    Exception table:
       from    to  target type
           0   192   210   Class java/io/IOException
         193   207   210   Class java/io/IOException

  public void handleEvent(org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_1
       1: invokeinterface #28,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.suspendWrites:()V
       6: aload_1
       7: invokeinterface #22,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      12: aconst_null
      13: invokeinterface #23,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/undertow/io/AsyncSenderImpl;
      22: getfield      #9                  // Field io/undertow/io/AsyncSenderImpl.exchange:Lio/undertow/server/HttpServerExchange;
      25: aload_0
      26: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      29: pop
      30: return

  public void run();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #30                 // Method run:(Z)Z
       5: pop
       6: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class org/xnio/channels/StreamSinkChannel
       5: invokevirtual #32                 // Method handleEvent:(Lorg/xnio/channels/StreamSinkChannel;)V
       8: return
}
