Compiled from "RequestSmallerThanPredicate.java"
public class io.undertow.predicate.RequestSmallerThanPredicate implements io.undertow.predicate.Predicate {
  private final long size;

  io.undertow.predicate.RequestSmallerThanPredicate(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field size:J
       9: return

  public boolean resolve(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #4                  // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
       7: invokevirtual #5                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnonnull     17
      15: iconst_0
      16: ireturn
      17: aload_2
      18: invokestatic  #6                  // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      21: aload_0
      22: getfield      #2                  // Field size:J
      25: lcmp
      26: ifge          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:J
       4: invokedynamic #7,  0              // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;
       9: areturn
}
