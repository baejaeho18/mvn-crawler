Compiled from "UndertowLogger.java"
public interface io.undertow.UndertowLogger extends org.jboss.logging.BasicLogger {
  public static final io.undertow.UndertowLogger ROOT_LOGGER;

  public static final io.undertow.UndertowLogger CLIENT_LOGGER;

  public static final io.undertow.UndertowLogger PREDICATE_LOGGER;

  public static final io.undertow.UndertowLogger REQUEST_LOGGER;

  public static final io.undertow.UndertowLogger SESSION_LOGGER;

  public static final io.undertow.UndertowLogger SECURITY_LOGGER;

  public static final io.undertow.UndertowLogger PROXY_REQUEST_LOGGER;

  public static final io.undertow.UndertowLogger REQUEST_DUMPER_LOGGER;

  public static final io.undertow.UndertowLogger REQUEST_IO_LOGGER;

  public static final io.undertow.UndertowLogger ERROR_RESPONSE;

  public abstract void exceptionProcessingRequest(java.lang.Throwable);

  public abstract void ioExceptionReadingFromChannel(java.io.IOException);

  public abstract void cannotRemoveUploadedFile(java.nio.file.Path);

  public abstract void requestHeaderWasTooLarge(java.net.SocketAddress, int);

  public abstract void requestWasNotFullyConsumed();

  public abstract void invalidTokenReceived(java.lang.String, java.lang.String);

  public abstract void missingAuthorizationToken(java.lang.String);

  public abstract void authenticationFailed(java.lang.String, java.lang.String);

  public abstract void ignoringAjpRequestWithPrefixCode(byte);

  public abstract void ioException(java.io.IOException);

  public abstract void failedToParseRequest(java.lang.Throwable);

  public abstract void errorRotatingAccessLog(java.io.IOException);

  public abstract void errorWritingAccessLog(java.io.IOException);

  public abstract void unknownVariable(java.lang.String);

  public abstract void exceptionInvokingCloseListener(io.undertow.server.ServerConnection$CloseListener, java.lang.Throwable);

  public abstract void errorWritingJDBCLog(java.lang.Exception);

  public abstract void exceptionGeneratingErrorPage(java.lang.Exception, java.lang.String);

  public abstract void exceptionHandlingRequest(java.lang.Throwable, java.lang.String);

  public abstract void couldNotRegisterChangeListener(java.lang.Exception);

  public abstract void timingOutRequest(java.lang.String);

  public abstract void proxyRequestFailed(java.lang.String, java.lang.Exception);

  public abstract void proxyFailedToConnectToBackend(java.lang.String, java.net.URI);

  public abstract void listenerNotProgressing();

  public abstract void remoteEndpointFailedToSendInitialSettings(int);

  public abstract void parseRequestTimedOut(java.net.SocketAddress);

  public abstract void noALPNFallback(java.net.SocketAddress);

  public abstract void stickySessionCookieLengthTruncated(java.lang.String, java.lang.String);

  public abstract void balancerCreated(int, java.lang.String, boolean, java.lang.String, java.lang.String, boolean, boolean, int, int);

  public abstract void proxyAdvertisementsStarted(java.lang.String, int);

  public abstract void proxyAdvertiseMessagePayload(java.lang.String);

  public abstract void proxyAdvertiseCannotSendMessage(java.lang.Exception, java.net.InetSocketAddress);

  public abstract void mcmpHandlerCreated();

  public abstract void mcmpProcessingError(java.lang.String, java.lang.String);

  public abstract void removingNode(java.lang.String);

  public abstract void registeringContext(java.lang.String, java.lang.String);

  public abstract void registeringContext(java.lang.String, java.lang.String, java.util.List<java.lang.String>);

  public abstract void unregisteringContext(java.lang.String, java.lang.String);

  public abstract void nodeIsInError(java.lang.String);

  public abstract void nodeConfigCreated(java.net.URI, java.lang.String, java.lang.String, java.lang.String, boolean, int, int, long, int, int, int, int, boolean);

  public abstract void failedToProcessManagementReq(java.lang.Exception);

  public abstract void failedToSendPingResponse(java.lang.Exception);

  public abstract void failedToSendPingResponseDBG(java.lang.Exception, java.lang.String, java.lang.String);

  public abstract void registeringNode(java.lang.String, java.net.URI);

  public abstract void mcmpKeyValue(io.undertow.util.HttpString, java.lang.String);

  public abstract void httpClientPingTask(java.net.URI);

  public abstract void receivedNodeLoad(java.lang.String, java.lang.String);

  public abstract void mcmpSendingResponse(java.net.InetSocketAddress, int, io.undertow.util.HeaderMap, java.lang.String);

  public abstract void potentialCrossTalking(java.net.InetAddress, java.lang.String, java.lang.String);

  public abstract void oldStylePredicateSyntax(java.lang.String);

  public abstract java.lang.IllegalStateException maxRestartsExceeded(int);

  public abstract void extendedAccessLogPatternParseError(java.lang.Throwable);

  public abstract void extendedAccessLogUnknownToken(java.lang.String);

  public abstract void extendedAccessLogMissingClosing();

  public abstract void extendedAccessLogCannotDecode(java.lang.String);

  public abstract void extendedAccessLogCannotDecodeXParamValue(java.lang.String);

  public abstract void extendedAccessLogBadXParam();

  public abstract void extendedAccessLogEmptyPattern();

  public abstract void failedToWriteJdbcAccessLog(java.lang.Exception);

  public abstract void failedToWritePreCachedFile();

  public abstract void undertowRequestFailed(java.lang.Throwable, io.undertow.server.HttpServerExchange);

  public abstract void stuckThreadDetected(java.lang.String, long, long, java.util.Date, java.lang.String, int, int, java.lang.Throwable);

  public abstract void stuckThreadCompleted(java.lang.String, long, long, int);

  public abstract void failedToInvokeFailedCallback(io.undertow.server.handlers.sse.ServerSentEventConnection$EventCallback, java.lang.Exception);

  public abstract java.lang.IllegalStateException unableToResolveModClusterManagementHost(java.lang.String);

  public abstract void sslReadLoopDetected(io.undertow.protocols.ssl.SslConduit);

  public abstract void sslBufferOverflow(io.undertow.protocols.ssl.SslConduit);

  public abstract void alpnConnectionFailed(org.xnio.ssl.SslConnection);

  public abstract void resumedAndDispatched();

  public abstract void cannotProxyStartedRequest(io.undertow.server.HttpServerExchange);

  public abstract java.lang.IllegalArgumentException cannotUseWildcardAddressAsModClusterManagementHost(java.lang.String);

  public abstract java.io.IOException unexpectedEndOfCompressedInput();

  public abstract java.io.IOException dataLargerThanContentLength(long, long);

  public abstract void responseWasNotTerminated(io.undertow.server.ServerConnection, io.undertow.server.HttpServerExchange);

  public abstract void failedToAcceptSSLRequest(java.lang.Exception);

  public abstract void closeAsyncFailed(java.io.IOException);

  public abstract java.lang.IllegalArgumentException nullParameter(java.lang.String);

  public abstract void handleUnexpectedFailure(java.lang.Throwable);

  public abstract void directBufferDeallocatorInitializationFailed(java.lang.Throwable);

  public abstract void directBufferDeallocationFailed(java.lang.Throwable);

  public abstract void blockingReadTimedOut(org.xnio.channels.ReadTimeoutException);

  public abstract void blockingWriteTimedOut(org.xnio.channels.WriteTimeoutException);

  public abstract void sslEngineDelegatedTaskRejected(java.util.concurrent.RejectedExecutionException);

  public abstract void authenticationFailedFor(java.lang.String, io.undertow.server.HttpServerExchange, java.lang.Exception);

  public abstract void failedToObtainSubject(io.undertow.server.HttpServerExchange, java.security.GeneralSecurityException);

  public abstract void failedToNegotiateAtGSSAPI(io.undertow.server.HttpServerExchange, java.lang.Throwable);

  public abstract void failedToCreateSSOForSession(java.lang.String);

  public abstract void failedToListPathsForFile(java.nio.file.Path);

  public abstract void noSourceToListResourcesFrom();

  public abstract void noFrameflushInTimeout(long);

  static {};
    Code:
       0: ldc           #1                  // class io/undertow/UndertowLogger
       2: ldc           #1                  // class io/undertow/UndertowLogger
       4: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       7: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      10: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #1                  // class io/undertow/UndertowLogger
      16: putstatic     #5                  // Field ROOT_LOGGER:Lio/undertow/UndertowLogger;
      19: ldc           #1                  // class io/undertow/UndertowLogger
      21: ldc           #6                  // class io/undertow/client/ClientConnection
      23: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      26: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      29: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      32: checkcast     #1                  // class io/undertow/UndertowLogger
      35: putstatic     #7                  // Field CLIENT_LOGGER:Lio/undertow/UndertowLogger;
      38: ldc           #1                  // class io/undertow/UndertowLogger
      40: ldc           #1                  // class io/undertow/UndertowLogger
      42: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      45: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      48: invokedynamic #8,  0              // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      53: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      56: checkcast     #1                  // class io/undertow/UndertowLogger
      59: putstatic     #9                  // Field PREDICATE_LOGGER:Lio/undertow/UndertowLogger;
      62: ldc           #1                  // class io/undertow/UndertowLogger
      64: ldc           #1                  // class io/undertow/UndertowLogger
      66: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      69: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      72: invokedynamic #10,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      77: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      80: checkcast     #1                  // class io/undertow/UndertowLogger
      83: putstatic     #11                 // Field REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      86: ldc           #1                  // class io/undertow/UndertowLogger
      88: ldc           #1                  // class io/undertow/UndertowLogger
      90: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      93: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      96: invokedynamic #12,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     101: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     104: checkcast     #1                  // class io/undertow/UndertowLogger
     107: putstatic     #13                 // Field SESSION_LOGGER:Lio/undertow/UndertowLogger;
     110: ldc           #1                  // class io/undertow/UndertowLogger
     112: ldc           #1                  // class io/undertow/UndertowLogger
     114: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     117: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
     120: invokedynamic #14,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     125: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     128: checkcast     #1                  // class io/undertow/UndertowLogger
     131: putstatic     #15                 // Field SECURITY_LOGGER:Lio/undertow/UndertowLogger;
     134: ldc           #1                  // class io/undertow/UndertowLogger
     136: ldc           #1                  // class io/undertow/UndertowLogger
     138: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     141: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
     144: invokedynamic #16,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     149: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     152: checkcast     #1                  // class io/undertow/UndertowLogger
     155: putstatic     #17                 // Field PROXY_REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     158: ldc           #1                  // class io/undertow/UndertowLogger
     160: ldc           #1                  // class io/undertow/UndertowLogger
     162: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     165: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
     168: invokedynamic #18,  0             // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     173: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     176: checkcast     #1                  // class io/undertow/UndertowLogger
     179: putstatic     #19                 // Field REQUEST_DUMPER_LOGGER:Lio/undertow/UndertowLogger;
     182: ldc           #1                  // class io/undertow/UndertowLogger
     184: ldc           #1                  // class io/undertow/UndertowLogger
     186: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     189: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
     192: invokedynamic #20,  0             // InvokeDynamic #6:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     197: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     200: checkcast     #1                  // class io/undertow/UndertowLogger
     203: putstatic     #21                 // Field REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     206: ldc           #1                  // class io/undertow/UndertowLogger
     208: ldc           #1                  // class io/undertow/UndertowLogger
     210: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     213: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
     216: invokedynamic #22,  0             // InvokeDynamic #7:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     221: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     224: checkcast     #1                  // class io/undertow/UndertowLogger
     227: putstatic     #23                 // Field ERROR_RESPONSE:Lio/undertow/UndertowLogger;
     230: return
}
