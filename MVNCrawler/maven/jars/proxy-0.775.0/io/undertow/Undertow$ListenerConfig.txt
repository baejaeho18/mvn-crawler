Compiled from "Undertow.java"
class io.undertow.Undertow$ListenerConfig {
  final io.undertow.Undertow$ListenerType type;

  final int port;

  final java.lang.String host;

  final javax.net.ssl.KeyManager[] keyManagers;

  final javax.net.ssl.TrustManager[] trustManagers;

  final javax.net.ssl.SSLContext sslContext;

  final io.undertow.server.HttpHandler rootHandler;

  final org.xnio.OptionMap overrideSocketOptions;

  final boolean useProxyProtocol;

  private io.undertow.Undertow$ListenerConfig(io.undertow.Undertow$ListenerType, int, java.lang.String, javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Lio/undertow/Undertow$ListenerType;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field port:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field host:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field keyManagers:[Ljavax/net/ssl/KeyManager;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field trustManagers:[Ljavax/net/ssl/TrustManager;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field rootHandler:Lio/undertow/server/HttpHandler;
      37: aload_0
      38: aconst_null
      39: putfield      #8                  // Field sslContext:Ljavax/net/ssl/SSLContext;
      42: aload_0
      43: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      46: putfield      #10                 // Field overrideSocketOptions:Lorg/xnio/OptionMap;
      49: aload_0
      50: iconst_0
      51: putfield      #11                 // Field useProxyProtocol:Z
      54: return

  private io.undertow.Undertow$ListenerConfig(io.undertow.Undertow$ListenerType, int, java.lang.String, javax.net.ssl.SSLContext, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Lio/undertow/Undertow$ListenerType;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field port:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field host:Ljava/lang/String;
      19: aload_0
      20: aload         5
      22: putfield      #7                  // Field rootHandler:Lio/undertow/server/HttpHandler;
      25: aload_0
      26: aconst_null
      27: putfield      #5                  // Field keyManagers:[Ljavax/net/ssl/KeyManager;
      30: aload_0
      31: aconst_null
      32: putfield      #6                  // Field trustManagers:[Ljavax/net/ssl/TrustManager;
      35: aload_0
      36: aload         4
      38: putfield      #8                  // Field sslContext:Ljavax/net/ssl/SSLContext;
      41: aload_0
      42: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      45: putfield      #10                 // Field overrideSocketOptions:Lorg/xnio/OptionMap;
      48: aload_0
      49: iconst_0
      50: putfield      #11                 // Field useProxyProtocol:Z
      53: return

  private io.undertow.Undertow$ListenerConfig(io.undertow.Undertow$ListenerBuilder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #12                 // Field io/undertow/Undertow$ListenerBuilder.type:Lio/undertow/Undertow$ListenerType;
       9: putfield      #2                  // Field type:Lio/undertow/Undertow$ListenerType;
      12: aload_0
      13: aload_1
      14: getfield      #13                 // Field io/undertow/Undertow$ListenerBuilder.port:I
      17: putfield      #3                  // Field port:I
      20: aload_0
      21: aload_1
      22: getfield      #14                 // Field io/undertow/Undertow$ListenerBuilder.host:Ljava/lang/String;
      25: putfield      #4                  // Field host:Ljava/lang/String;
      28: aload_0
      29: aload_1
      30: getfield      #15                 // Field io/undertow/Undertow$ListenerBuilder.rootHandler:Lio/undertow/server/HttpHandler;
      33: putfield      #7                  // Field rootHandler:Lio/undertow/server/HttpHandler;
      36: aload_0
      37: aload_1
      38: getfield      #16                 // Field io/undertow/Undertow$ListenerBuilder.keyManagers:[Ljavax/net/ssl/KeyManager;
      41: putfield      #5                  // Field keyManagers:[Ljavax/net/ssl/KeyManager;
      44: aload_0
      45: aload_1
      46: getfield      #17                 // Field io/undertow/Undertow$ListenerBuilder.trustManagers:[Ljavax/net/ssl/TrustManager;
      49: putfield      #6                  // Field trustManagers:[Ljavax/net/ssl/TrustManager;
      52: aload_0
      53: aload_1
      54: getfield      #18                 // Field io/undertow/Undertow$ListenerBuilder.sslContext:Ljavax/net/ssl/SSLContext;
      57: putfield      #8                  // Field sslContext:Ljavax/net/ssl/SSLContext;
      60: aload_0
      61: aload_1
      62: getfield      #19                 // Field io/undertow/Undertow$ListenerBuilder.overrideSocketOptions:Lorg/xnio/OptionMap;
      65: putfield      #10                 // Field overrideSocketOptions:Lorg/xnio/OptionMap;
      68: aload_0
      69: aload_1
      70: getfield      #20                 // Field io/undertow/Undertow$ListenerBuilder.useProxyProtocol:Z
      73: putfield      #11                 // Field useProxyProtocol:Z
      76: return
}
