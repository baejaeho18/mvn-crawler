Compiled from "ProxyServer.java"
public class io.fluxcapacitor.proxy.ProxyServer {
  private static final org.slf4j.Logger log;

  public io.fluxcapacitor.proxy.ProxyServer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void main(java.lang.String[]);
    Code:
       0: invokedynamic #7,  0              // InvokeDynamic #0:uncaughtException:()Ljava/lang/Thread$UncaughtExceptionHandler;
       5: invokestatic  #11                 // Method java/lang/Thread.setDefaultUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
       8: ldc           #17                 // String PROXY_PORT
      10: bipush        80
      12: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokestatic  #25                 // Method io/fluxcapacitor/javaclient/configuration/ApplicationProperties.getIntegerProperty:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
      18: invokevirtual #31                 // Method java/lang/Integer.intValue:()I
      21: istore_1
      22: ldc           #35                 // String FLUX_URL
      24: invokestatic  #37                 // Method io/fluxcapacitor/javaclient/configuration/ApplicationProperties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      27: invokestatic  #41                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      30: invokedynamic #47,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      35: invokevirtual #51                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      38: invokedynamic #55,  0             // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      43: invokevirtual #59                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      46: checkcast     #63                 // class io/fluxcapacitor/javaclient/configuration/client/Client
      49: astore_2
      50: iload_1
      51: new           #65                 // class io/fluxcapacitor/proxy/ProxyRequestHandler
      54: dup
      55: aload_2
      56: invokespecial #67                 // Method io/fluxcapacitor/proxy/ProxyRequestHandler."<init>":(Lio/fluxcapacitor/javaclient/configuration/client/Client;)V
      59: invokestatic  #70                 // Method start:(ILio/fluxcapacitor/proxy/ProxyRequestHandler;)Lio/fluxcapacitor/common/Registration;
      62: aload_2
      63: invokestatic  #76                 // Method startTrackingExternalRequests:(Lio/fluxcapacitor/javaclient/configuration/client/Client;)Lio/fluxcapacitor/common/Registration;
      66: invokeinterface #80,  2           // InterfaceMethod io/fluxcapacitor/common/Registration.merge:(Lio/fluxcapacitor/common/Registration;)Lio/fluxcapacitor/common/Registration;
      71: astore_3
      72: getstatic     #86                 // Field log:Lorg/slf4j/Logger;
      75: ldc           #90                 // String Flux Capacitor proxy server running on port {}
      77: iload_1
      78: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: invokeinterface #92,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      86: invokestatic  #98                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      89: new           #12                 // class java/lang/Thread
      92: dup
      93: aload_3
      94: invokedynamic #104,  0            // InvokeDynamic #3:run:(Lio/fluxcapacitor/common/Registration;)Ljava/lang/Runnable;
      99: ldc           #108                // String ProxyServer-shutdown
     101: invokestatic  #110                // Method io/fluxcapacitor/common/ObjectUtils.newThreadName:(Ljava/lang/String;)Ljava/lang/String;
     104: invokespecial #115                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
     107: invokevirtual #118                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
     110: return

  public static io.fluxcapacitor.common.Registration start(int, io.fluxcapacitor.proxy.ProxyRequestHandler);
    Code:
       0: invokestatic  #122                // Method io/undertow/Undertow.builder:()Lio/undertow/Undertow$Builder;
       3: iload_0
       4: ldc           #128                // String 0.0.0.0
       6: invokevirtual #130                // Method io/undertow/Undertow$Builder.addHttpListener:(ILjava/lang/String;)Lio/undertow/Undertow$Builder;
       9: invokestatic  #136                // Method io/undertow/Handlers.path:()Lio/undertow/server/handlers/PathHandler;
      12: ldc           #142                // String /
      14: aload_1
      15: invokevirtual #144                // Method io/undertow/server/handlers/PathHandler.addPrefixPath:(Ljava/lang/String;Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/PathHandler;
      18: ldc           #150                // String PROXY_HEALTH_ENDPOINT
      20: ldc           #152                // String /proxy/health
      22: invokestatic  #154                // Method io/fluxcapacitor/javaclient/configuration/ApplicationProperties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      25: invokedynamic #157,  0            // InvokeDynamic #4:handleRequest:()Lio/undertow/server/HttpHandler;
      30: invokevirtual #161                // Method io/undertow/server/handlers/PathHandler.addExactPath:(Ljava/lang/String;Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/PathHandler;
      33: invokevirtual #164                // Method io/undertow/Undertow$Builder.setHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/Undertow$Builder;
      36: invokevirtual #168                // Method io/undertow/Undertow$Builder.build:()Lio/undertow/Undertow;
      39: astore_2
      40: aload_2
      41: invokevirtual #172                // Method io/undertow/Undertow.start:()V
      44: aload_1
      45: aload_2
      46: invokedynamic #174,  0            // InvokeDynamic #5:cancel:(Lio/fluxcapacitor/proxy/ProxyRequestHandler;Lio/undertow/Undertow;)Lio/fluxcapacitor/common/Registration;
      51: areturn

  public static io.fluxcapacitor.common.Registration startTrackingExternalRequests(io.fluxcapacitor.javaclient.configuration.client.Client);
    Code:
       0: new           #178                // class io/fluxcapacitor/proxy/ExternalRequestConsumer
       3: dup
       4: aload_0
       5: invokespecial #180                // Method io/fluxcapacitor/proxy/ExternalRequestConsumer."<init>":(Lio/fluxcapacitor/javaclient/configuration/client/Client;)V
       8: getstatic     #181                // Field io/fluxcapacitor/common/MessageType.WEBREQUEST:Lio/fluxcapacitor/common/MessageType;
      11: invokestatic  #187                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration.builder:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      14: ldc           #192                // String external-request-consumer
      16: invokevirtual #194                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.name:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      19: iconst_4
      20: invokevirtual #200                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.threads:(I)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      23: invokevirtual #204                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.build:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
      26: aload_0
      27: invokestatic  #207                // Method io/fluxcapacitor/javaclient/tracking/client/DefaultTracker.start:(Ljava/util/function/Consumer;Lio/fluxcapacitor/common/MessageType;Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;Lio/fluxcapacitor/javaclient/configuration/client/Client;)Lio/fluxcapacitor/common/Registration;
      30: areturn

  private static void lambda$start$5(io.fluxcapacitor.proxy.ProxyRequestHandler, io.undertow.Undertow);
    Code:
       0: aload_0
       1: invokevirtual #212                // Method io/fluxcapacitor/proxy/ProxyRequestHandler.close:()V
       4: aload_1
       5: invokevirtual #215                // Method io/undertow/Undertow.stop:()V
       8: return

  private static void lambda$start$4(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #218                // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #224                // Field io/undertow/util/Headers.CONTENT_TYPE:Lio/undertow/util/HttpString;
       7: ldc           #230                // String text/plain
       9: invokevirtual #232                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      12: pop
      13: aload_0
      14: invokevirtual #238                // Method io/undertow/server/HttpServerExchange.getResponseSender:()Lio/undertow/io/Sender;
      17: ldc           #242                // String Healthy
      19: invokeinterface #244,  2          // InterfaceMethod io/undertow/io/Sender.send:(Ljava/lang/String;)V
      24: return

  private static void lambda$main$3(io.fluxcapacitor.common.Registration);
    Code:
       0: getstatic     #86                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #250                // String Stopping Flux Capacitor proxy server
       5: invokeinterface #252,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aload_0
      11: invokeinterface #254,  1          // InterfaceMethod io/fluxcapacitor/common/Registration.cancel:()V
      16: return

  private static java.lang.IllegalStateException lambda$main$2();
    Code:
       0: new           #256                // class java/lang/IllegalStateException
       3: dup
       4: ldc_w         #258                // String FLUX_URL environment variable is not set
       7: invokespecial #260                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      10: areturn

  private static io.fluxcapacitor.javaclient.configuration.client.Client lambda$main$1(java.lang.String);
    Code:
       0: invokestatic  #262                // Method io/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig.builder:()Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig$ClientConfigBuilder;
       3: ldc_w         #267                // String $proxy
       6: invokevirtual #269                // Method io/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig$ClientConfigBuilder.name:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig$ClientConfigBuilder;
       9: aload_0
      10: invokevirtual #274                // Method io/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig$ClientConfigBuilder.serviceBaseUrl:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig$ClientConfigBuilder;
      13: ldc_w         #277                // String PROJECT_ID
      16: invokestatic  #37                 // Method io/fluxcapacitor/javaclient/configuration/ApplicationProperties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      19: invokevirtual #279                // Method io/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig$ClientConfigBuilder.projectId:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig$ClientConfigBuilder;
      22: invokevirtual #282                // Method io/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig$ClientConfigBuilder.build:()Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig;
      25: invokestatic  #285                // Method io/fluxcapacitor/javaclient/configuration/client/WebSocketClient.newInstance:(Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig;)Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient;
      28: areturn

  private static void lambda$main$0(java.lang.Thread, java.lang.Throwable);
    Code:
       0: getstatic     #86                 // Field log:Lorg/slf4j/Logger;
       3: ldc_w         #291                // String Uncaught error
       6: aload_1
       7: invokeinterface #293,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      12: return

  static {};
    Code:
       0: ldc           #71                 // class io/fluxcapacitor/proxy/ProxyServer
       2: invokestatic  #297                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #86                 // Field log:Lorg/slf4j/Logger;
       8: return
}
