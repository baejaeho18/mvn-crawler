Compiled from "ExternalRequestConsumer.java"
public class io.fluxcapacitor.proxy.ExternalRequestConsumer implements java.util.function.Consumer<java.util.List<io.fluxcapacitor.common.api.SerializedMessage>> {
  private static final org.slf4j.Logger log;

  private static final java.net.http.HttpClient httpClient;

  private static final io.fluxcapacitor.javaclient.web.WebRequestSettings defaultSettings;

  private static final io.fluxcapacitor.javaclient.common.serialization.Serializer serializer;

  private final io.fluxcapacitor.javaclient.configuration.client.Client client;

  public void accept(java.util.List<io.fluxcapacitor.common.api.SerializedMessage>);
    Code:
       0: aload_1
       1: invokeinterface #1,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          56
      16: aload_2
      17: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #17                 // class io/fluxcapacitor/common/api/SerializedMessage
      25: astore_3
      26: aload_3
      27: invokevirtual #19                 // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      30: invokestatic  #23                 // Method io/fluxcapacitor/javaclient/web/WebRequest.getUrl:(Lio/fluxcapacitor/common/api/Metadata;)Ljava/lang/String;
      33: invokestatic  #29                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      36: astore        4
      38: aload         4
      40: invokevirtual #35                 // Method java/net/URI.isAbsolute:()Z
      43: ifeq          53
      46: aload_0
      47: aload_3
      48: aload         4
      50: invokevirtual #38                 // Method handle:(Lio/fluxcapacitor/common/api/SerializedMessage;Ljava/net/URI;)V
      53: goto          7
      56: return

  void handle(io.fluxcapacitor.common.api.SerializedMessage, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #44                 // Method asHttpRequest:(Lio/fluxcapacitor/common/api/SerializedMessage;Ljava/net/URI;)Ljava/net/http/HttpRequest;
       6: astore_3
       7: aload_0
       8: aload_3
       9: invokevirtual #48                 // Method executeRequest:(Ljava/net/http/HttpRequest;)Lio/fluxcapacitor/javaclient/web/WebResponse;
      12: astore        4
      14: aload         4
      16: getstatic     #52                 // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
      19: invokevirtual #56                 // Method io/fluxcapacitor/javaclient/web/WebResponse.serialize:(Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)Lio/fluxcapacitor/common/api/SerializedMessage;
      22: astore        5
      24: aload         5
      26: aload_1
      27: invokevirtual #62                 // Method io/fluxcapacitor/common/api/SerializedMessage.getRequestId:()Ljava/lang/Integer;
      30: invokevirtual #66                 // Method io/fluxcapacitor/common/api/SerializedMessage.setRequestId:(Ljava/lang/Integer;)V
      33: aload         5
      35: aload_1
      36: invokevirtual #70                 // Method io/fluxcapacitor/common/api/SerializedMessage.getSource:()Ljava/lang/String;
      39: invokevirtual #74                 // Method io/fluxcapacitor/common/api/SerializedMessage.setTarget:(Ljava/lang/String;)V
      42: aload_0
      43: getfield      #78                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      46: getstatic     #82                 // Field io/fluxcapacitor/common/MessageType.WEBRESPONSE:Lio/fluxcapacitor/common/MessageType;
      49: invokeinterface #88,  2           // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.getGatewayClient:(Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/publishing/client/GatewayClient;
      54: getstatic     #94                 // Field io/fluxcapacitor/common/Guarantee.NONE:Lio/fluxcapacitor/common/Guarantee;
      57: iconst_1
      58: anewarray     #17                 // class io/fluxcapacitor/common/api/SerializedMessage
      61: dup
      62: iconst_0
      63: aload         5
      65: aastore
      66: invokeinterface #100,  3          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/client/GatewayClient.send:(Lio/fluxcapacitor/common/Guarantee;[Lio/fluxcapacitor/common/api/SerializedMessage;)Ljava/util/concurrent/CompletableFuture;
      71: pop
      72: goto          87
      75: astore_3
      76: getstatic     #108                // Field log:Lorg/slf4j/Logger;
      79: ldc           #112                // String Failed to handle external request
      81: aload_3
      82: invokeinterface #114,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: return
    Exception table:
       from    to  target type
           0    72    75   Class java/lang/Throwable

  java.net.http.HttpRequest asHttpRequest(io.fluxcapacitor.common.api.SerializedMessage, java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
       4: ldc           #120                // String settings
       6: ldc           #122                // class io/fluxcapacitor/javaclient/web/WebRequestSettings
       8: invokevirtual #124                // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      11: checkcast     #122                // class io/fluxcapacitor/javaclient/web/WebRequestSettings
      14: invokestatic  #130                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      17: getstatic     #136                // Field defaultSettings:Lio/fluxcapacitor/javaclient/web/WebRequestSettings;
      20: invokevirtual #140                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #122                // class io/fluxcapacitor/javaclient/web/WebRequestSettings
      26: astore_3
      27: invokestatic  #144                // Method java/net/http/HttpRequest.newBuilder:()Ljava/net/http/HttpRequest$Builder;
      30: aload_3
      31: invokevirtual #150                // Method io/fluxcapacitor/javaclient/web/WebRequestSettings.getHttpVersion:()Lio/fluxcapacitor/javaclient/web/HttpVersion;
      34: invokevirtual #154                // Method io/fluxcapacitor/javaclient/web/HttpVersion.name:()Ljava/lang/String;
      37: invokestatic  #159                // Method java/net/http/HttpClient$Version.valueOf:(Ljava/lang/String;)Ljava/net/http/HttpClient$Version;
      40: invokeinterface #165,  2          // InterfaceMethod java/net/http/HttpRequest$Builder.version:(Ljava/net/http/HttpClient$Version;)Ljava/net/http/HttpRequest$Builder;
      45: aload_3
      46: invokevirtual #171                // Method io/fluxcapacitor/javaclient/web/WebRequestSettings.getTimeout:()Ljava/time/Duration;
      49: invokeinterface #175,  2          // InterfaceMethod java/net/http/HttpRequest$Builder.timeout:(Ljava/time/Duration;)Ljava/net/http/HttpRequest$Builder;
      54: astore        4
      56: aload_1
      57: invokevirtual #19                 // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      60: invokestatic  #179                // Method io/fluxcapacitor/javaclient/web/WebRequest.getHeaders:(Lio/fluxcapacitor/common/api/Metadata;)Ljava/util/Map;
      63: aload         4
      65: invokedynamic #183,  0            // InvokeDynamic #0:accept:(Ljava/net/http/HttpRequest$Builder;)Ljava/util/function/BiConsumer;
      70: invokeinterface #187,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      75: aload         4
      77: aload_2
      78: invokeinterface #193,  2          // InterfaceMethod java/net/http/HttpRequest$Builder.uri:(Ljava/net/URI;)Ljava/net/http/HttpRequest$Builder;
      83: aload_1
      84: invokevirtual #19                 // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      87: invokestatic  #197                // Method io/fluxcapacitor/javaclient/web/WebRequest.getMethod:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      90: invokevirtual #201                // Method io/fluxcapacitor/javaclient/web/HttpRequestMethod.name:()Ljava/lang/String;
      93: aload_0
      94: aload_1
      95: invokevirtual #204                // Method getBodyPublisher:(Lio/fluxcapacitor/common/api/SerializedMessage;)Ljava/net/http/HttpRequest$BodyPublisher;
      98: invokeinterface #208,  3          // InterfaceMethod java/net/http/HttpRequest$Builder.method:(Ljava/lang/String;Ljava/net/http/HttpRequest$BodyPublisher;)Ljava/net/http/HttpRequest$Builder;
     103: pop
     104: aload         4
     106: invokeinterface #212,  1          // InterfaceMethod java/net/http/HttpRequest$Builder.build:()Ljava/net/http/HttpRequest;
     111: areturn

  io.fluxcapacitor.javaclient.web.WebResponse executeRequest(java.net.http.HttpRequest);
    Code:
       0: getstatic     #216                // Field httpClient:Ljava/net/http/HttpClient;
       3: aload_1
       4: invokestatic  #220                // Method java/net/http/HttpResponse$BodyHandlers.ofByteArray:()Ljava/net/http/HttpResponse$BodyHandler;
       7: invokevirtual #226                // Method java/net/http/HttpClient.send:(Ljava/net/http/HttpRequest;Ljava/net/http/HttpResponse$BodyHandler;)Ljava/net/http/HttpResponse;
      10: astore_2
      11: aload_0
      12: aload_2
      13: invokevirtual #231                // Method asWebResponse:(Ljava/net/http/HttpResponse;)Lio/fluxcapacitor/javaclient/web/WebResponse;
      16: areturn
      17: astore_2
      18: getstatic     #108                // Field log:Lorg/slf4j/Logger;
      21: ldc           #235                // String Failed to handle external request. Returning error..
      23: aload_2
      24: invokeinterface #114,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      29: invokestatic  #237                // Method io/fluxcapacitor/javaclient/web/WebResponse.builder:()Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
      32: sipush        502
      35: invokestatic  #241                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokevirtual #246                // Method io/fluxcapacitor/javaclient/web/WebResponse$Builder.status:(Ljava/lang/Integer;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
      41: aload_2
      42: invokevirtual #252                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      45: invokestatic  #130                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      48: ldc           #255                // String Exception while handling request in proxy
      50: invokevirtual #140                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #257                // class java/lang/String
      56: invokevirtual #259                // Method java/lang/String.getBytes:()[B
      59: invokevirtual #263                // Method io/fluxcapacitor/javaclient/web/WebResponse$Builder.payload:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
      62: invokevirtual #267                // Method io/fluxcapacitor/javaclient/web/WebResponse$Builder.build:()Lio/fluxcapacitor/javaclient/web/WebResponse;
      65: areturn
    Exception table:
       from    to  target type
           0    16    17   Class java/lang/Throwable

  io.fluxcapacitor.javaclient.web.WebResponse asWebResponse(java.net.http.HttpResponse<byte[]>);
    Code:
       0: invokestatic  #237                // Method io/fluxcapacitor/javaclient/web/WebResponse.builder:()Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
       3: aload_1
       4: invokeinterface #270,  1          // InterfaceMethod java/net/http/HttpResponse.statusCode:()I
       9: invokestatic  #241                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokevirtual #246                // Method io/fluxcapacitor/javaclient/web/WebResponse$Builder.status:(Ljava/lang/Integer;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
      15: aload_1
      16: invokeinterface #276,  1          // InterfaceMethod java/net/http/HttpResponse.body:()Ljava/lang/Object;
      21: invokevirtual #263                // Method io/fluxcapacitor/javaclient/web/WebResponse$Builder.payload:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
      24: astore_2
      25: aload_1
      26: invokeinterface #279,  1          // InterfaceMethod java/net/http/HttpResponse.headers:()Ljava/net/http/HttpHeaders;
      31: invokevirtual #283                // Method java/net/http/HttpHeaders.map:()Ljava/util/Map;
      34: aload_2
      35: invokedynamic #289,  0            // InvokeDynamic #1:accept:(Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;)Ljava/util/function/BiConsumer;
      40: invokeinterface #187,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      45: aload_2
      46: invokevirtual #267                // Method io/fluxcapacitor/javaclient/web/WebResponse$Builder.build:()Lio/fluxcapacitor/javaclient/web/WebResponse;
      49: areturn

  java.net.http.HttpRequest$BodyPublisher getBodyPublisher(io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_1
       1: invokevirtual #292                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
       4: invokevirtual #296                // Method io/fluxcapacitor/common/api/Data.getType:()Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: ifnull        25
      12: ldc_w         #301                // class java/lang/Void
      15: invokevirtual #303                // Method java/lang/Class.getName:()Ljava/lang/String;
      18: aload_2
      19: invokevirtual #308                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifeq          29
      25: invokestatic  #312                // Method java/net/http/HttpRequest$BodyPublishers.noBody:()Ljava/net/http/HttpRequest$BodyPublisher;
      28: areturn
      29: aload_1
      30: invokevirtual #292                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
      33: invokevirtual #318                // Method io/fluxcapacitor/common/api/Data.getValue:()Ljava/lang/Object;
      36: checkcast     #321                // class "[B"
      39: invokestatic  #323                // Method java/net/http/HttpRequest$BodyPublishers.ofByteArray:([B)Ljava/net/http/HttpRequest$BodyPublisher;
      42: areturn

  public io.fluxcapacitor.proxy.ExternalRequestConsumer(io.fluxcapacitor.javaclient.configuration.client.Client);
    Code:
       0: aload_0
       1: invokespecial #326                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #78                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
       9: return

  public void accept(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class java/util/List
       5: invokevirtual #332                // Method accept:(Ljava/util/List;)V
       8: return

  private static void lambda$asWebResponse$3(io.fluxcapacitor.javaclient.web.WebResponse$Builder, java.lang.String, java.util.List);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #335,  0            // InvokeDynamic #2:accept:(Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;Ljava/lang/String;)Ljava/util/function/Consumer;
       8: invokeinterface #338,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      13: return

  private static void lambda$asWebResponse$2(io.fluxcapacitor.javaclient.web.WebResponse$Builder, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #341                // Method io/fluxcapacitor/javaclient/web/WebUtils.fixHeaderName:(Ljava/lang/String;)Ljava/lang/String;
       5: aload_2
       6: invokevirtual #347                // Method io/fluxcapacitor/javaclient/web/WebResponse$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lio/fluxcapacitor/javaclient/web/WebResponse$Builder;
       9: pop
      10: return

  private static void lambda$asHttpRequest$1(java.net.http.HttpRequest$Builder, java.lang.String, java.util.List);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #351,  0            // InvokeDynamic #3:accept:(Ljava/net/http/HttpRequest$Builder;Ljava/lang/String;)Ljava/util/function/Consumer;
       8: invokeinterface #338,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      13: return

  private static void lambda$asHttpRequest$0(java.net.http.HttpRequest$Builder, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #354,  3          // InterfaceMethod java/net/http/HttpRequest$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/http/HttpRequest$Builder;
       8: pop
       9: return

  static {};
    Code:
       0: ldc           #39                 // class io/fluxcapacitor/proxy/ExternalRequestConsumer
       2: invokestatic  #357                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #108                // Field log:Lorg/slf4j/Logger;
       8: invokestatic  #363                // Method java/net/http/HttpClient.newBuilder:()Ljava/net/http/HttpClient$Builder;
      11: getstatic     #366                // Field java/net/http/HttpClient$Redirect.NORMAL:Ljava/net/http/HttpClient$Redirect;
      14: invokeinterface #372,  2          // InterfaceMethod java/net/http/HttpClient$Builder.followRedirects:(Ljava/net/http/HttpClient$Redirect;)Ljava/net/http/HttpClient$Builder;
      19: ldc2_w        #378                // long 5l
      22: invokestatic  #380                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      25: invokeinterface #386,  2          // InterfaceMethod java/net/http/HttpClient$Builder.connectTimeout:(Ljava/time/Duration;)Ljava/net/http/HttpClient$Builder;
      30: invokeinterface #390,  1          // InterfaceMethod java/net/http/HttpClient$Builder.build:()Ljava/net/http/HttpClient;
      35: putstatic     #216                // Field httpClient:Ljava/net/http/HttpClient;
      38: invokestatic  #393                // Method io/fluxcapacitor/javaclient/web/WebRequestSettings.builder:()Lio/fluxcapacitor/javaclient/web/WebRequestSettings$WebRequestSettingsBuilder;
      41: invokevirtual #396                // Method io/fluxcapacitor/javaclient/web/WebRequestSettings$WebRequestSettingsBuilder.build:()Lio/fluxcapacitor/javaclient/web/WebRequestSettings;
      44: putstatic     #136                // Field defaultSettings:Lio/fluxcapacitor/javaclient/web/WebRequestSettings;
      47: new           #401                // class io/fluxcapacitor/proxy/ProxySerializer
      50: dup
      51: invokespecial #403                // Method io/fluxcapacitor/proxy/ProxySerializer."<init>":()V
      54: putstatic     #52                 // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
      57: return
}
