Compiled from "WebsocketEndpoint.java"
public class io.fluxcapacitor.proxy.WebsocketEndpoint extends jakarta.websocket.Endpoint {
  private static final org.slf4j.Logger log;

  static final java.lang.String metadataPrefix;

  static final java.lang.String clientIdKey;

  static final java.lang.String trackerIdKey;

  private final java.util.Map<java.lang.String, jakarta.websocket.Session> openSessions;

  private final io.fluxcapacitor.javaclient.configuration.client.Client client;

  private final io.fluxcapacitor.javaclient.publishing.client.GatewayClient requestGateway;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private volatile io.fluxcapacitor.common.Registration registration;

  public io.fluxcapacitor.proxy.WebsocketEndpoint(io.fluxcapacitor.javaclient.configuration.client.Client);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/websocket/Endpoint."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #10                 // Field openSessions:Ljava/util/Map;
      15: aload_0
      16: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #18                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #19                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: aload_1
      28: putfield      #23                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      31: aload_0
      32: aload_1
      33: getstatic     #27                 // Field io/fluxcapacitor/common/MessageType.WEBREQUEST:Lio/fluxcapacitor/common/MessageType;
      36: invokeinterface #33,  2           // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.getGatewayClient:(Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/publishing/client/GatewayClient;
      41: putfield      #39                 // Field requestGateway:Lio/fluxcapacitor/javaclient/publishing/client/GatewayClient;
      44: return

  public void onOpen(jakarta.websocket.Session, jakarta.websocket.EndpointConfig);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method ensureStarted:()V
       4: aload_0
       5: getfield      #10                 // Field openSessions:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #46,  1           // InterfaceMethod jakarta/websocket/Session.getId:()Ljava/lang/String;
      14: aload_1
      15: invokeinterface #52,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_1
      22: ldc           #58                 // class "[B"
      24: aload_0
      25: aload_1
      26: invokedynamic #60,  0             // InvokeDynamic #0:onMessage:(Lio/fluxcapacitor/proxy/WebsocketEndpoint;Ljakarta/websocket/Session;)Ljakarta/websocket/MessageHandler$Whole;
      31: invokeinterface #64,  3           // InterfaceMethod jakarta/websocket/Session.addMessageHandler:(Ljava/lang/Class;Ljakarta/websocket/MessageHandler$Whole;)V
      36: aload_1
      37: ldc           #68                 // class java/lang/String
      39: aload_0
      40: aload_1
      41: invokedynamic #70,  0             // InvokeDynamic #1:onMessage:(Lio/fluxcapacitor/proxy/WebsocketEndpoint;Ljakarta/websocket/Session;)Ljakarta/websocket/MessageHandler$Whole;
      46: invokeinterface #64,  3           // InterfaceMethod jakarta/websocket/Session.addMessageHandler:(Ljava/lang/Class;Ljakarta/websocket/MessageHandler$Whole;)V
      51: aload_1
      52: ldc           #71                 // class jakarta/websocket/PongMessage
      54: aload_0
      55: aload_1
      56: invokedynamic #73,  0             // InvokeDynamic #2:onMessage:(Lio/fluxcapacitor/proxy/WebsocketEndpoint;Ljakarta/websocket/Session;)Ljakarta/websocket/MessageHandler$Whole;
      61: invokeinterface #64,  3           // InterfaceMethod jakarta/websocket/Session.addMessageHandler:(Ljava/lang/Class;Ljakarta/websocket/MessageHandler$Whole;)V
      66: aload_0
      67: aload_1
      68: getstatic     #74                 // Field io/fluxcapacitor/javaclient/web/HttpRequestMethod.WS_OPEN:Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      71: aconst_null
      72: invokevirtual #80                 // Method sendRequest:(Ljakarta/websocket/Session;Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;[B)V
      75: return

  public void onClose(jakarta.websocket.Session, jakarta.websocket.CloseReason);
    Code:
       0: aload_0
       1: getfield      #10                 // Field openSessions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #46,  1           // InterfaceMethod jakarta/websocket/Session.getId:()Ljava/lang/String;
      10: invokeinterface #84,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: aload_1
      18: getstatic     #88                 // Field io/fluxcapacitor/javaclient/web/HttpRequestMethod.WS_CLOSE:Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
      21: aload_2
      22: invokevirtual #91                 // Method jakarta/websocket/CloseReason.getCloseCode:()Ljakarta/websocket/CloseReason$CloseCode;
      25: invokeinterface #97,  1           // InterfaceMethod jakarta/websocket/CloseReason$CloseCode.getCode:()I
      30: invokestatic  #103                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      33: getstatic     #107                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      36: invokevirtual #113                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      39: invokevirtual #80                 // Method sendRequest:(Ljakarta/websocket/Session;Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;[B)V
      42: return

  public void onError(jakarta.websocket.Session, java.lang.Throwable);
    Code:
       0: getstatic     #117                // Field log:Lorg/slf4j/Logger;
       3: ldc           #121                // String Error in session {}
       5: aload_1
       6: invokeinterface #46,  1           // InterfaceMethod jakarta/websocket/Session.getId:()Ljava/lang/String;
      11: aload_2
      12: invokeinterface #123,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      17: return

  protected void sendRequest(jakarta.websocket.Session, io.fluxcapacitor.javaclient.web.HttpRequestMethod, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #129                // Method getContext:(Ljakarta/websocket/Session;)Lio/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext;
       5: invokevirtual #133                // Method io/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext.metadata:()Lio/fluxcapacitor/common/api/Metadata;
       8: ldc           #139                // String method
      10: aload_2
      11: invokevirtual #141                // Method io/fluxcapacitor/javaclient/web/HttpRequestMethod.name:()Ljava/lang/String;
      14: invokevirtual #144                // Method io/fluxcapacitor/common/api/Metadata.with:(Ljava/lang/Object;Ljava/lang/Object;)Lio/fluxcapacitor/common/api/Metadata;
      17: astore        4
      19: new           #150                // class io/fluxcapacitor/common/api/SerializedMessage
      22: dup
      23: new           #152                // class io/fluxcapacitor/common/api/Data
      26: dup
      27: aload_3
      28: aconst_null
      29: iconst_0
      30: ldc           #154                // String unknown
      32: invokespecial #156                // Method io/fluxcapacitor/common/api/Data."<init>":(Ljava/lang/Object;Ljava/lang/String;ILjava/lang/String;)V
      35: aload         4
      37: invokestatic  #159                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.generateId:()Ljava/lang/String;
      40: invokestatic  #164                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.currentClock:()Ljava/time/Clock;
      43: invokevirtual #168                // Method java/time/Clock.millis:()J
      46: invokestatic  #174                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      49: invokespecial #179                // Method io/fluxcapacitor/common/api/SerializedMessage."<init>":(Lio/fluxcapacitor/common/api/Data;Lio/fluxcapacitor/common/api/Metadata;Ljava/lang/String;Ljava/lang/Long;)V
      52: astore        5
      54: aload         5
      56: aload_0
      57: getfield      #23                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      60: invokeinterface #182,  1          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.id:()Ljava/lang/String;
      65: invokevirtual #185                // Method io/fluxcapacitor/common/api/SerializedMessage.setSource:(Ljava/lang/String;)V
      68: aload         5
      70: aload_0
      71: aload_1
      72: invokevirtual #129                // Method getContext:(Ljakarta/websocket/Session;)Lio/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext;
      75: invokevirtual #189                // Method io/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext.trackerId:()Ljava/lang/String;
      78: invokevirtual #192                // Method io/fluxcapacitor/common/api/SerializedMessage.setTarget:(Ljava/lang/String;)V
      81: aload_0
      82: getfield      #39                 // Field requestGateway:Lio/fluxcapacitor/javaclient/publishing/client/GatewayClient;
      85: getstatic     #195                // Field io/fluxcapacitor/common/Guarantee.SENT:Lio/fluxcapacitor/common/Guarantee;
      88: iconst_1
      89: anewarray     #150                // class io/fluxcapacitor/common/api/SerializedMessage
      92: dup
      93: iconst_0
      94: aload         5
      96: aastore
      97: invokeinterface #201,  3          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/client/GatewayClient.send:(Lio/fluxcapacitor/common/Guarantee;[Lio/fluxcapacitor/common/api/SerializedMessage;)Ljava/util/concurrent/CompletableFuture;
     102: pop
     103: return

  protected void handleResultMessages(java.util.List<io.fluxcapacitor.common.api.SerializedMessage>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #207,  0            // InvokeDynamic #3:accept:(Lio/fluxcapacitor/proxy/WebsocketEndpoint;)Ljava/util/function/Consumer;
       7: invokeinterface #211,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      12: return

  private void sendMessage(io.fluxcapacitor.common.api.SerializedMessage, jakarta.websocket.Session);
    Code:
       0: ldc           #58                 // class "[B"
       2: invokevirtual #217                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #222                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
       9: invokevirtual #226                // Method io/fluxcapacitor/common/api/Data.getType:()Ljava/lang/String;
      12: invokevirtual #229                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifeq          83
      18: aload_2
      19: invokeinterface #233,  1          // InterfaceMethod jakarta/websocket/Session.getBasicRemote:()Ljakarta/websocket/RemoteEndpoint$Basic;
      24: invokeinterface #237,  1          // InterfaceMethod jakarta/websocket/RemoteEndpoint$Basic.getSendStream:()Ljava/io/OutputStream;
      29: astore_3
      30: aload_3
      31: aload_1
      32: invokevirtual #222                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
      35: invokevirtual #243                // Method io/fluxcapacitor/common/api/Data.getValue:()Ljava/lang/Object;
      38: checkcast     #58                 // class "[B"
      41: invokevirtual #247                // Method java/io/OutputStream.write:([B)V
      44: aload_3
      45: ifnull        80
      48: aload_3
      49: invokevirtual #253                // Method java/io/OutputStream.close:()V
      52: goto          80
      55: astore        4
      57: aload_3
      58: ifnull        77
      61: aload_3
      62: invokevirtual #253                // Method java/io/OutputStream.close:()V
      65: goto          77
      68: astore        5
      70: aload         4
      72: aload         5
      74: invokevirtual #258                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      77: aload         4
      79: athrow
      80: goto          155
      83: aload_2
      84: invokeinterface #233,  1          // InterfaceMethod jakarta/websocket/Session.getBasicRemote:()Ljakarta/websocket/RemoteEndpoint$Basic;
      89: invokeinterface #262,  1          // InterfaceMethod jakarta/websocket/RemoteEndpoint$Basic.getSendWriter:()Ljava/io/Writer;
      94: astore_3
      95: aload_3
      96: new           #68                 // class java/lang/String
      99: dup
     100: aload_1
     101: invokevirtual #222                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
     104: invokevirtual #243                // Method io/fluxcapacitor/common/api/Data.getValue:()Ljava/lang/Object;
     107: checkcast     #58                 // class "[B"
     110: getstatic     #107                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     113: invokespecial #266                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     116: invokevirtual #269                // Method java/io/Writer.write:(Ljava/lang/String;)V
     119: aload_3
     120: ifnull        155
     123: aload_3
     124: invokevirtual #273                // Method java/io/Writer.close:()V
     127: goto          155
     130: astore        4
     132: aload_3
     133: ifnull        152
     136: aload_3
     137: invokevirtual #273                // Method java/io/Writer.close:()V
     140: goto          152
     143: astore        5
     145: aload         4
     147: aload         5
     149: invokevirtual #258                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     152: aload         4
     154: athrow
     155: goto          161
     158: astore_3
     159: aload_3
     160: athrow
     161: return
    Exception table:
       from    to  target type
          30    44    55   Class java/lang/Throwable
          61    65    68   Class java/lang/Throwable
          95   119   130   Class java/lang/Throwable
         136   140   143   Class java/lang/Throwable
           0   155   158   Class java/lang/Throwable

  private void sendPing(io.fluxcapacitor.common.api.SerializedMessage, jakarta.websocket.Session);
    Code:
       0: aload_2
       1: invokeinterface #233,  1          // InterfaceMethod jakarta/websocket/Session.getBasicRemote:()Ljakarta/websocket/RemoteEndpoint$Basic;
       6: aload_1
       7: invokevirtual #222                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
      10: invokevirtual #243                // Method io/fluxcapacitor/common/api/Data.getValue:()Ljava/lang/Object;
      13: checkcast     #58                 // class "[B"
      16: invokestatic  #280                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      19: invokeinterface #286,  2          // InterfaceMethod jakarta/websocket/RemoteEndpoint$Basic.sendPing:(Ljava/nio/ByteBuffer;)V
      24: goto          30
      27: astore_3
      28: aload_3
      29: athrow
      30: return
    Exception table:
       from    to  target type
           0    24    27   Class java/lang/Throwable

  private void sendClose(io.fluxcapacitor.common.api.SerializedMessage, jakarta.websocket.Session);
    Code:
       0: aload_2
       1: new           #92                 // class jakarta/websocket/CloseReason
       4: dup
       5: new           #68                 // class java/lang/String
       8: dup
       9: aload_1
      10: invokevirtual #222                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
      13: invokevirtual #243                // Method io/fluxcapacitor/common/api/Data.getValue:()Ljava/lang/Object;
      16: checkcast     #58                 // class "[B"
      19: getstatic     #107                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      22: invokespecial #266                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      25: invokestatic  #290                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      28: invokestatic  #296                // Method jakarta/websocket/CloseReason$CloseCodes.getCloseCode:(I)Ljakarta/websocket/CloseReason$CloseCode;
      31: aconst_null
      32: invokespecial #301                // Method jakarta/websocket/CloseReason."<init>":(Ljakarta/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
      35: invokeinterface #304,  2          // InterfaceMethod jakarta/websocket/Session.close:(Ljakarta/websocket/CloseReason;)V
      40: goto          46
      43: astore_3
      44: aload_3
      45: athrow
      46: return
    Exception table:
       from    to  target type
           0    40    43   Class java/lang/Throwable

  protected void handleDisconnects(java.util.List<io.fluxcapacitor.common.api.SerializedMessage>);
    Code:
       0: aload_1
       1: invokeinterface #307,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #311,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      11: invokeinterface #315,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #321,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      21: invokeinterface #315,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #322                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      29: invokeinterface #328,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #332                // class java/util/Set
      37: astore_2
      38: aload_0
      39: getfield      #10                 // Field openSessions:Ljava/util/Map;
      42: invokeinterface #334,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      47: invokeinterface #338,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      52: aload_0
      53: aload_2
      54: invokedynamic #341,  0            // InvokeDynamic #6:test:(Lio/fluxcapacitor/proxy/WebsocketEndpoint;Ljava/util/Set;)Ljava/util/function/Predicate;
      59: invokeinterface #345,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      64: invokedynamic #349,  0            // InvokeDynamic #7:accept:()Ljava/util/function/Consumer;
      69: invokeinterface #352,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      74: return

  protected io.fluxcapacitor.proxy.WebsocketEndpoint$SessionContext getContext(jakarta.websocket.Session);
    Code:
       0: aload_1
       1: invokeinterface #353,  1          // InterfaceMethod jakarta/websocket/Session.getUserProperties:()Ljava/util/Map;
       6: ldc_w         #357                // String context
       9: aload_1
      10: invokedynamic #359,  0            // InvokeDynamic #8:apply:(Ljakarta/websocket/Session;)Ljava/util/function/Function;
      15: invokeinterface #362,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      20: checkcast     #134                // class io/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext
      23: areturn

  protected void ensureStarted();
    Code:
       0: aload_0
       1: getfield      #19                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #366                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          193
      12: aload_0
      13: aload_0
      14: invokedynamic #370,  0            // InvokeDynamic #9:accept:(Lio/fluxcapacitor/proxy/WebsocketEndpoint;)Ljava/util/function/Consumer;
      19: getstatic     #371                // Field io/fluxcapacitor/common/MessageType.WEBRESPONSE:Lio/fluxcapacitor/common/MessageType;
      22: invokestatic  #374                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration.builder:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      25: ldc_w         #380                // String %s_%s
      28: iconst_2
      29: anewarray     #382                // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_0
      35: getfield      #23                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      38: invokeinterface #384,  1          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.name:()Ljava/lang/String;
      43: aastore
      44: dup
      45: iconst_1
      46: ldc_w         #385                // String $websocket-handler
      49: aastore
      50: invokestatic  #387                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      53: invokevirtual #391                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.name:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      56: iconst_1
      57: invokevirtual #396                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.ignoreSegment:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      60: iconst_1
      61: invokevirtual #400                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.clientControlledIndex:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      64: iconst_1
      65: invokevirtual #403                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.filterMessageTarget:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      68: invokestatic  #406                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.currentTime:()Ljava/time/Instant;
      71: ldc2_w        #410                // long 2l
      74: invokevirtual #412                // Method java/time/Instant.minusSeconds:(J)Ljava/time/Instant;
      77: invokestatic  #418                // Method io/fluxcapacitor/javaclient/tracking/IndexUtils.indexFromTimestamp:(Ljava/time/Instant;)J
      80: invokestatic  #174                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      83: invokevirtual #424                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.minIndex:(Ljava/lang/Long;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      86: invokevirtual #428                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.build:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
      89: aload_0
      90: getfield      #23                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      93: invokestatic  #432                // Method io/fluxcapacitor/javaclient/tracking/client/DefaultTracker.start:(Ljava/util/function/Consumer;Lio/fluxcapacitor/common/MessageType;Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;Lio/fluxcapacitor/javaclient/configuration/client/Client;)Lio/fluxcapacitor/common/Registration;
      96: aload_0
      97: invokedynamic #438,  0            // InvokeDynamic #10:accept:(Lio/fluxcapacitor/proxy/WebsocketEndpoint;)Ljava/util/function/Consumer;
     102: getstatic     #439                // Field io/fluxcapacitor/common/MessageType.METRICS:Lio/fluxcapacitor/common/MessageType;
     105: invokestatic  #374                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration.builder:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     108: ldc_w         #380                // String %s_%s
     111: iconst_2
     112: anewarray     #382                // class java/lang/Object
     115: dup
     116: iconst_0
     117: aload_0
     118: getfield      #23                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
     121: invokeinterface #384,  1          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.name:()Ljava/lang/String;
     126: aastore
     127: dup
     128: iconst_1
     129: ldc_w         #385                // String $websocket-handler
     132: aastore
     133: invokestatic  #387                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     136: invokevirtual #391                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.name:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     139: iconst_1
     140: invokevirtual #396                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.ignoreSegment:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     143: iconst_1
     144: invokevirtual #400                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.clientControlledIndex:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     147: ldc_w         #442                // class io/fluxcapacitor/common/api/DisconnectEvent
     150: invokevirtual #217                // Method java/lang/Class.getName:()Ljava/lang/String;
     153: invokestatic  #444                // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
     156: invokevirtual #450                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.typeFilter:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     159: invokestatic  #406                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.currentTime:()Ljava/time/Instant;
     162: lconst_1
     163: invokevirtual #412                // Method java/time/Instant.minusSeconds:(J)Ljava/time/Instant;
     166: invokestatic  #418                // Method io/fluxcapacitor/javaclient/tracking/IndexUtils.indexFromTimestamp:(Ljava/time/Instant;)J
     169: invokestatic  #174                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     172: invokevirtual #424                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.minIndex:(Ljava/lang/Long;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     175: invokevirtual #428                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.build:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
     178: aload_0
     179: getfield      #23                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
     182: invokestatic  #432                // Method io/fluxcapacitor/javaclient/tracking/client/DefaultTracker.start:(Ljava/util/function/Consumer;Lio/fluxcapacitor/common/MessageType;Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;Lio/fluxcapacitor/javaclient/configuration/client/Client;)Lio/fluxcapacitor/common/Registration;
     185: invokeinterface #453,  2          // InterfaceMethod io/fluxcapacitor/common/Registration.merge:(Lio/fluxcapacitor/common/Registration;)Lio/fluxcapacitor/common/Registration;
     190: putfield      #459                // Field registration:Lio/fluxcapacitor/common/Registration;
     193: return

  public void shutDown();
    Code:
       0: aload_0
       1: getfield      #19                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #366                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          48
      12: aload_0
      13: getfield      #459                // Field registration:Lio/fluxcapacitor/common/Registration;
      16: ifnull        48
      19: aload_0
      20: getfield      #459                // Field registration:Lio/fluxcapacitor/common/Registration;
      23: invokeinterface #463,  1          // InterfaceMethod io/fluxcapacitor/common/Registration.cancel:()V
      28: aload_0
      29: getfield      #10                 // Field openSessions:Ljava/util/Map;
      32: invokeinterface #334,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      37: invokedynamic #466,  0            // InvokeDynamic #11:test:()Ljava/util/function/Predicate;
      42: invokeinterface #469,  2          // InterfaceMethod java/util/Collection.removeIf:(Ljava/util/function/Predicate;)Z
      47: pop
      48: return

  public io.fluxcapacitor.proxy.WebsocketEndpoint(io.fluxcapacitor.javaclient.configuration.client.Client, io.fluxcapacitor.javaclient.publishing.client.GatewayClient, io.fluxcapacitor.common.Registration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method jakarta/websocket/Endpoint."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #10                 // Field openSessions:Ljava/util/Map;
      15: aload_0
      16: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #18                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #19                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: aload_1
      28: putfield      #23                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      31: aload_0
      32: aload_2
      33: putfield      #39                 // Field requestGateway:Lio/fluxcapacitor/javaclient/publishing/client/GatewayClient;
      36: aload_0
      37: aload_3
      38: putfield      #459                // Field registration:Lio/fluxcapacitor/common/Registration;
      41: return

  private static boolean lambda$shutDown$9(jakarta.websocket.Session);
    Code:
       0: aload_0
       1: invokeinterface #473,  1          // InterfaceMethod jakarta/websocket/Session.isOpen:()Z
       6: ifeq          28
       9: aload_0
      10: new           #92                 // class jakarta/websocket/CloseReason
      13: dup
      14: getstatic     #477                // Field jakarta/websocket/CloseReason$CloseCodes.GOING_AWAY:Ljakarta/websocket/CloseReason$CloseCodes;
      17: ldc_w         #481                // String Redeployment
      20: invokespecial #301                // Method jakarta/websocket/CloseReason."<init>":(Ljakarta/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
      23: invokeinterface #304,  2          // InterfaceMethod jakarta/websocket/Session.close:(Ljakarta/websocket/CloseReason;)V
      28: goto          50
      31: astore_1
      32: getstatic     #117                // Field log:Lorg/slf4j/Logger;
      35: ldc_w         #483                // String Failed to close session when leaving: {}
      38: aload_0
      39: invokeinterface #46,  1           // InterfaceMethod jakarta/websocket/Session.getId:()Ljava/lang/String;
      44: aload_1
      45: invokeinterface #123,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      50: iconst_1
      51: ireturn
    Exception table:
       from    to  target type
           0    28    31   Class java/lang/Throwable

  private static java.lang.Object lambda$getContext$8(jakarta.websocket.Session, java.lang.String);
    Code:
       0: invokestatic  #485                // Method io/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext.builder:()Lio/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext$SessionContextBuilder;
       3: astore_2
       4: new           #488                // class java/util/LinkedHashMap
       7: dup
       8: invokespecial #490                // Method java/util/LinkedHashMap."<init>":()V
      11: astore_3
      12: aload_0
      13: invokeinterface #491,  1          // InterfaceMethod jakarta/websocket/Session.getRequestParameterMap:()Ljava/util/Map;
      18: aload_3
      19: aload_2
      20: invokedynamic #494,  0            // InvokeDynamic #12:accept:(Ljava/util/Map;Lio/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext$SessionContextBuilder;)Ljava/util/function/BiConsumer;
      25: invokeinterface #497,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      30: aload_2
      31: aload_3
      32: invokestatic  #500                // Method io/fluxcapacitor/common/api/Metadata.of:(Ljava/util/Map;)Lio/fluxcapacitor/common/api/Metadata;
      35: ldc_w         #504                // String sessionId
      38: aload_0
      39: invokeinterface #46,  1           // InterfaceMethod jakarta/websocket/Session.getId:()Ljava/lang/String;
      44: invokevirtual #144                // Method io/fluxcapacitor/common/api/Metadata.with:(Ljava/lang/Object;Ljava/lang/Object;)Lio/fluxcapacitor/common/api/Metadata;
      47: invokevirtual #506                // Method io/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext$SessionContextBuilder.metadata:(Lio/fluxcapacitor/common/api/Metadata;)Lio/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext$SessionContextBuilder;
      50: pop
      51: aload_2
      52: invokevirtual #511                // Method io/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext$SessionContextBuilder.build:()Lio/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext;
      55: areturn

  private static void lambda$getContext$7(java.util.Map, io.fluxcapacitor.proxy.WebsocketEndpoint$SessionContext$SessionContextBuilder, java.lang.String, java.util.List);
    Code:
       0: aload_2
       1: ldc_w         #514                // String _metadata:
       4: invokevirtual #516                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ifeq          44
      10: aload_2
      11: ldc_w         #514                // String _metadata:
      14: invokevirtual #520                // Method java/lang/String.length:()I
      17: invokevirtual #523                // Method java/lang/String.substring:(I)Ljava/lang/String;
      20: astore        4
      22: aload_0
      23: aload         4
      25: aload_3
      26: iconst_0
      27: invokeinterface #526,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      32: checkcast     #68                 // class java/lang/String
      35: invokeinterface #52,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: goto          97
      44: aload_2
      45: ldc_w         #530                // String _trackerId
      48: invokevirtual #229                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          72
      54: aload_1
      55: aload_3
      56: iconst_0
      57: invokeinterface #526,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      62: checkcast     #68                 // class java/lang/String
      65: invokevirtual #532                // Method io/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext$SessionContextBuilder.trackerId:(Ljava/lang/String;)Lio/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext$SessionContextBuilder;
      68: pop
      69: goto          97
      72: aload_2
      73: ldc_w         #535                // String _clientId
      76: invokevirtual #229                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifeq          97
      82: aload_1
      83: aload_3
      84: iconst_0
      85: invokeinterface #526,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      90: checkcast     #68                 // class java/lang/String
      93: invokevirtual #537                // Method io/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext$SessionContextBuilder.clientId:(Ljava/lang/String;)Lio/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext$SessionContextBuilder;
      96: pop
      97: return

  private static void lambda$handleDisconnects$6(jakarta.websocket.Session);
    Code:
       0: aload_0
       1: invokeinterface #473,  1          // InterfaceMethod jakarta/websocket/Session.isOpen:()Z
       6: ifeq          28
       9: aload_0
      10: new           #92                 // class jakarta/websocket/CloseReason
      13: dup
      14: getstatic     #477                // Field jakarta/websocket/CloseReason$CloseCodes.GOING_AWAY:Ljakarta/websocket/CloseReason$CloseCodes;
      17: ldc_w         #540                // String going away
      20: invokespecial #301                // Method jakarta/websocket/CloseReason."<init>":(Ljakarta/websocket/CloseReason$CloseCode;Ljava/lang/String;)V
      23: invokeinterface #304,  2          // InterfaceMethod jakarta/websocket/Session.close:(Ljakarta/websocket/CloseReason;)V
      28: goto          50
      31: astore_1
      32: getstatic     #117                // Field log:Lorg/slf4j/Logger;
      35: ldc_w         #544                // String Failed to close session {}
      38: aload_0
      39: invokeinterface #46,  1           // InterfaceMethod jakarta/websocket/Session.getId:()Ljava/lang/String;
      44: aload_1
      45: invokeinterface #123,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      50: return
    Exception table:
       from    to  target type
           0    28    31   Class java/lang/Exception

  private boolean lambda$handleDisconnects$5(java.util.Set, jakarta.websocket.Session);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #129                // Method getContext:(Ljakarta/websocket/Session;)Lio/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext;
       6: invokevirtual #546                // Method io/fluxcapacitor/proxy/WebsocketEndpoint$SessionContext.clientId:()Ljava/lang/String;
       9: invokeinterface #548,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      14: ireturn

  private static io.fluxcapacitor.common.api.DisconnectEvent lambda$handleDisconnects$4(io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_0
       1: invokevirtual #222                // Method io/fluxcapacitor/common/api/SerializedMessage.getData:()Lio/fluxcapacitor/common/api/Data;
       4: invokevirtual #243                // Method io/fluxcapacitor/common/api/Data.getValue:()Ljava/lang/Object;
       7: checkcast     #58                 // class "[B"
      10: ldc_w         #442                // class io/fluxcapacitor/common/api/DisconnectEvent
      13: invokestatic  #551                // Method io/fluxcapacitor/common/serialization/JsonUtils.fromJson:([BLjava/lang/Class;)Ljava/lang/Object;
      16: checkcast     #442                // class io/fluxcapacitor/common/api/DisconnectEvent
      19: areturn

  private void lambda$handleResultMessages$3(io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_1
       1: invokevirtual #557                // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
       4: ldc_w         #504                // String sessionId
       7: invokevirtual #560                // Method io/fluxcapacitor/common/api/Metadata.get:(Ljava/lang/Object;)Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnull        224
      15: aload_0
      16: getfield      #10                 // Field openSessions:Ljava/util/Map;
      19: aload_2
      20: invokeinterface #563,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #47                 // class jakarta/websocket/Session
      28: astore_3
      29: aload_3
      30: ifnull        224
      33: aload_3
      34: invokeinterface #473,  1          // InterfaceMethod jakarta/websocket/Session.isOpen:()Z
      39: ifeq          224
      42: aload_1
      43: invokevirtual #557                // Method io/fluxcapacitor/common/api/SerializedMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
      46: ldc_w         #565                // String function
      49: ldc_w         #567                // String message
      52: invokevirtual #569                // Method io/fluxcapacitor/common/api/Metadata.getOrDefault:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      55: astore        4
      57: iconst_m1
      58: istore        5
      60: aload         4
      62: invokevirtual #573                // Method java/lang/String.hashCode:()I
      65: lookupswitch  { // 3
               3441010: 117
              94756344: 134
             954925063: 100
               default: 148
          }
     100: aload         4
     102: ldc_w         #567                // String message
     105: invokevirtual #229                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     108: ifeq          148
     111: iconst_0
     112: istore        5
     114: goto          148
     117: aload         4
     119: ldc_w         #576                // String ping
     122: invokevirtual #229                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     125: ifeq          148
     128: iconst_1
     129: istore        5
     131: goto          148
     134: aload         4
     136: ldc_w         #578                // String close
     139: invokevirtual #229                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     142: ifeq          148
     145: iconst_2
     146: istore        5
     148: iload         5
     150: tableswitch   { // 0 to 2
                     0: 176
                     1: 185
                     2: 194
               default: 200
          }
     176: aload_0
     177: aload_1
     178: aload_3
     179: invokevirtual #579                // Method sendMessage:(Lio/fluxcapacitor/common/api/SerializedMessage;Ljakarta/websocket/Session;)V
     182: goto          200
     185: aload_0
     186: aload_1
     187: aload_3
     188: invokevirtual #583                // Method sendPing:(Lio/fluxcapacitor/common/api/SerializedMessage;Ljakarta/websocket/Session;)V
     191: goto          200
     194: aload_0
     195: aload_1
     196: aload_3
     197: invokevirtual #585                // Method sendClose:(Lio/fluxcapacitor/common/api/SerializedMessage;Ljakarta/websocket/Session;)V
     200: goto          224
     203: astore        4
     205: getstatic     #117                // Field log:Lorg/slf4j/Logger;
     208: ldc_w         #588                // String Failed to send websocket result to client (session {})
     211: aload_3
     212: invokeinterface #46,  1           // InterfaceMethod jakarta/websocket/Session.getId:()Ljava/lang/String;
     217: aload         4
     219: invokeinterface #123,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     224: return
    Exception table:
       from    to  target type
          42   200   203   Class java/lang/Exception

  private void lambda$onOpen$2(jakarta.websocket.Session, jakarta.websocket.PongMessage);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #590                // Field io/fluxcapacitor/javaclient/web/HttpRequestMethod.WS_PONG:Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
       5: aload_2
       6: invokeinterface #593,  1          // InterfaceMethod jakarta/websocket/PongMessage.getApplicationData:()Ljava/nio/ByteBuffer;
      11: invokestatic  #597                // Method io/fluxcapacitor/common/ObjectUtils.getBytes:(Ljava/nio/ByteBuffer;)[B
      14: invokevirtual #80                 // Method sendRequest:(Ljakarta/websocket/Session;Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;[B)V
      17: return

  private void lambda$onOpen$1(jakarta.websocket.Session, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #602                // Field io/fluxcapacitor/javaclient/web/HttpRequestMethod.WS_MESSAGE:Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
       5: aload_2
       6: getstatic     #107                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       9: invokevirtual #113                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      12: invokevirtual #80                 // Method sendRequest:(Ljakarta/websocket/Session;Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;[B)V
      15: return

  private void lambda$onOpen$0(jakarta.websocket.Session, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #602                // Field io/fluxcapacitor/javaclient/web/HttpRequestMethod.WS_MESSAGE:Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;
       5: aload_2
       6: invokevirtual #80                 // Method sendRequest:(Ljakarta/websocket/Session;Lio/fluxcapacitor/javaclient/web/HttpRequestMethod;[B)V
       9: return

  static {};
    Code:
       0: ldc           #11                 // class io/fluxcapacitor/proxy/WebsocketEndpoint
       2: invokestatic  #605                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #117                // Field log:Lorg/slf4j/Logger;
       8: return
}
