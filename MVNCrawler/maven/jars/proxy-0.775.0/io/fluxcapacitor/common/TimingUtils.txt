Compiled from "TimingUtils.java"
public class io.fluxcapacitor.common.TimingUtils {
  private static final org.slf4j.Logger log;

  public io.fluxcapacitor.common.TimingUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void time(java.lang.Runnable, java.util.function.Consumer<java.lang.Long>);
    Code:
       0: aload_0
       1: invokedynamic #7,  0              // InvokeDynamic #0:call:(Ljava/lang/Runnable;)Ljava/util/concurrent/Callable;
       6: aload_1
       7: invokestatic  #11                 // Method time:(Ljava/util/concurrent/Callable;Ljava/util/function/Consumer;)Ljava/lang/Object;
      10: pop
      11: return

  public static void time(java.lang.Runnable, java.util.function.Consumer<java.lang.Long>, java.time.temporal.TemporalUnit);
    Code:
       0: aload_0
       1: invokedynamic #17,  0             // InvokeDynamic #1:call:(Ljava/lang/Runnable;)Ljava/util/concurrent/Callable;
       6: aload_1
       7: aload_2
       8: invokestatic  #18                 // Method time:(Ljava/util/concurrent/Callable;Ljava/util/function/Consumer;Ljava/time/temporal/TemporalUnit;)Ljava/lang/Object;
      11: pop
      12: return

  public static <T> T time(java.util.concurrent.Callable<T>, java.util.function.Consumer<java.lang.Long>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #21                 // Field java/time/temporal/ChronoUnit.MILLIS:Ljava/time/temporal/ChronoUnit;
       5: invokestatic  #18                 // Method time:(Ljava/util/concurrent/Callable;Ljava/util/function/Consumer;Ljava/time/temporal/TemporalUnit;)Ljava/lang/Object;
       8: areturn

  public static <T> T time(java.util.concurrent.Callable<T>, java.util.function.Consumer<java.lang.Long>, java.time.temporal.TemporalUnit);
    Code:
       0: invokestatic  #27                 // Method java/lang/System.nanoTime:()J
       3: lstore_3
       4: aload_0
       5: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      10: astore        5
      12: invokestatic  #27                 // Method java/lang/System.nanoTime:()J
      15: lload_3
      16: lsub
      17: lstore        6
      19: aload_1
      20: lload         6
      22: aload_2
      23: invokeinterface #38,  1           // InterfaceMethod java/time/temporal/TemporalUnit.getDuration:()Ljava/time/Duration;
      28: invokevirtual #44                 // Method java/time/Duration.toNanos:()J
      31: ldiv
      32: invokestatic  #49                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      35: invokeinterface #55,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      40: aload         5
      42: areturn
      43: astore        5
      45: new           #63                 // class java/lang/IllegalStateException
      48: dup
      49: ldc           #65                 // String Task failed to execute
      51: aload         5
      53: invokespecial #67                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      56: athrow
      57: astore        8
      59: invokestatic  #27                 // Method java/lang/System.nanoTime:()J
      62: lload_3
      63: lsub
      64: lstore        9
      66: aload_1
      67: lload         9
      69: aload_2
      70: invokeinterface #38,  1           // InterfaceMethod java/time/temporal/TemporalUnit.getDuration:()Ljava/time/Duration;
      75: invokevirtual #44                 // Method java/time/Duration.toNanos:()J
      78: ldiv
      79: invokestatic  #49                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      82: invokeinterface #55,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      87: aload         8
      89: athrow
    Exception table:
       from    to  target type
           4    12    43   Class java/lang/Exception
           4    12    57   any
          43    59    57   any

  public static void retryOnFailure(java.lang.Runnable, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #70,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
       7: invokestatic  #74                 // Method retryOnFailure:(Ljava/lang/Runnable;Ljava/time/Duration;Ljava/util/function/Predicate;)V
      10: return

  public static void retryOnFailure(java.lang.Runnable, java.time.Duration, java.util.function.Predicate<java.lang.Exception>);
    Code:
       0: aload_0
       1: invokedynamic #78,  0             // InvokeDynamic #3:call:(Ljava/lang/Runnable;)Ljava/util/concurrent/Callable;
       6: aload_1
       7: aload_2
       8: invokestatic  #79                 // Method retryOnFailure:(Ljava/util/concurrent/Callable;Ljava/time/Duration;Ljava/util/function/Predicate;)Ljava/lang/Object;
      11: pop
      12: return

  public static <T> T retryOnFailure(java.util.concurrent.Callable<T>, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #82,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
       7: invokestatic  #79                 // Method retryOnFailure:(Ljava/util/concurrent/Callable;Ljava/time/Duration;Ljava/util/function/Predicate;)Ljava/lang/Object;
      10: areturn

  public static <T> T retryOnFailure(java.util.concurrent.Callable<T>, java.time.Duration, java.util.function.Predicate<java.lang.Exception>);
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method io/fluxcapacitor/common/RetryConfiguration.builder:()Lio/fluxcapacitor/common/RetryConfiguration$Builder;
       4: aload_1
       5: invokevirtual #89                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder.delay:(Ljava/time/Duration;)Lio/fluxcapacitor/common/RetryConfiguration$Builder;
       8: aload_2
       9: invokevirtual #95                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder.errorTest:(Ljava/util/function/Predicate;)Lio/fluxcapacitor/common/RetryConfiguration$Builder;
      12: invokevirtual #99                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder.build:()Lio/fluxcapacitor/common/RetryConfiguration;
      15: invokestatic  #103                // Method retryOnFailure:(Ljava/util/concurrent/Callable;Lio/fluxcapacitor/common/RetryConfiguration;)Ljava/lang/Object;
      18: areturn

  public static <T> T retryOnFailure(java.util.concurrent.Callable<T>, io.fluxcapacitor.common.RetryConfiguration);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: instanceof    #106                // class java/util/concurrent/CompletableFuture
      13: ifeq          24
      16: aload_3
      17: checkcast     #106                // class java/util/concurrent/CompletableFuture
      20: invokevirtual #108                // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
      23: pop
      24: aload_2
      25: ifnull        38
      28: aload_1
      29: invokevirtual #111                // Method io/fluxcapacitor/common/RetryConfiguration.getSuccessLogger:()Ljava/util/function/Consumer;
      32: aload_2
      33: invokeinterface #55,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      38: aload_3
      39: areturn
      40: astore_3
      41: aload_2
      42: ifnonnull     66
      45: invokestatic  #115                // Method io/fluxcapacitor/common/RetryStatus.builder:()Lio/fluxcapacitor/common/RetryStatus$RetryStatusBuilder;
      48: aload_1
      49: invokevirtual #120                // Method io/fluxcapacitor/common/RetryStatus$RetryStatusBuilder.retryConfiguration:(Lio/fluxcapacitor/common/RetryConfiguration;)Lio/fluxcapacitor/common/RetryStatus$RetryStatusBuilder;
      52: aload_3
      53: invokevirtual #126                // Method io/fluxcapacitor/common/RetryStatus$RetryStatusBuilder.exception:(Ljava/lang/Exception;)Lio/fluxcapacitor/common/RetryStatus$RetryStatusBuilder;
      56: aload_0
      57: invokevirtual #130                // Method io/fluxcapacitor/common/RetryStatus$RetryStatusBuilder.task:(Ljava/lang/Object;)Lio/fluxcapacitor/common/RetryStatus$RetryStatusBuilder;
      60: invokevirtual #134                // Method io/fluxcapacitor/common/RetryStatus$RetryStatusBuilder.build:()Lio/fluxcapacitor/common/RetryStatus;
      63: goto          71
      66: aload_2
      67: aload_3
      68: invokevirtual #137                // Method io/fluxcapacitor/common/RetryStatus.afterRetry:(Ljava/lang/Exception;)Lio/fluxcapacitor/common/RetryStatus;
      71: astore_2
      72: aload_1
      73: invokevirtual #141                // Method io/fluxcapacitor/common/RetryConfiguration.getErrorTest:()Ljava/util/function/Predicate;
      76: aload_3
      77: invokeinterface #144,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      82: ifne          99
      85: aload_1
      86: invokevirtual #149                // Method io/fluxcapacitor/common/RetryConfiguration.isThrowOnFailingErrorTest:()Z
      89: ifeq          97
      92: aload_2
      93: invokevirtual #153                // Method io/fluxcapacitor/common/RetryStatus.getException:()Ljava/lang/Exception;
      96: athrow
      97: aconst_null
      98: areturn
      99: aload_1
     100: invokevirtual #157                // Method io/fluxcapacitor/common/RetryConfiguration.getExceptionLogger:()Ljava/util/function/Consumer;
     103: aload_2
     104: invokeinterface #55,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     109: aload_1
     110: invokevirtual #160                // Method io/fluxcapacitor/common/RetryConfiguration.getMaxRetries:()I
     113: iflt          130
     116: aload_2
     117: invokevirtual #164                // Method io/fluxcapacitor/common/RetryStatus.getNumberOfTimesRetried:()I
     120: aload_1
     121: invokevirtual #160                // Method io/fluxcapacitor/common/RetryConfiguration.getMaxRetries:()I
     124: if_icmplt     130
     127: goto          185
     130: aload_1
     131: invokevirtual #167                // Method io/fluxcapacitor/common/RetryConfiguration.getDelay:()Ljava/time/Duration;
     134: invokevirtual #170                // Method java/time/Duration.toMillis:()J
     137: invokestatic  #173                // Method java/lang/Thread.sleep:(J)V
     140: goto          167
     143: astore        4
     145: invokestatic  #181                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     148: invokevirtual #185                // Method java/lang/Thread.interrupt:()V
     151: getstatic     #188                // Field log:Lorg/slf4j/Logger;
     154: ldc           #192                // String Thread interrupted while retrying task {}
     156: aload_0
     157: aload         4
     159: invokeinterface #194,  4          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     164: goto          185
     167: goto          2
     170: astore_3
     171: getstatic     #188                // Field log:Lorg/slf4j/Logger;
     174: ldc           #202                // String Task {} failed with error. Will not retry.
     176: aload_0
     177: aload_3
     178: invokeinterface #204,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     183: aload_3
     184: athrow
     185: aload_2
     186: invokevirtual #153                // Method io/fluxcapacitor/common/RetryStatus.getException:()Ljava/lang/Exception;
     189: athrow
     190: astore_2
     191: aload_2
     192: athrow
    Exception table:
       from    to  target type
           2    39    40   Class java/lang/Exception
         130   140   143   Class java/lang/InterruptedException
           2    39   170   Class java/lang/Error
           0    39   190   Class java/lang/Throwable
          40    98   190   Class java/lang/Throwable
          99   190   190   Class java/lang/Throwable

  public static boolean isMissedDeadline(long);
    Code:
       0: invokestatic  #215                // Method java/lang/System.currentTimeMillis:()J
       3: lload_0
       4: lcmp
       5: ifle          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private static boolean lambda$retryOnFailure$4(java.lang.Exception);
    Code:
       0: iconst_1
       1: ireturn

  private static java.lang.Object lambda$retryOnFailure$3(java.lang.Runnable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #218,  1          // InterfaceMethod java/lang/Runnable.run:()V
       6: new           #2                  // class java/lang/Object
       9: dup
      10: invokespecial #1                  // Method java/lang/Object."<init>":()V
      13: areturn

  private static boolean lambda$retryOnFailure$2(java.lang.Exception);
    Code:
       0: iconst_1
       1: ireturn

  private static java.lang.Object lambda$time$1(java.lang.Runnable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #218,  1          // InterfaceMethod java/lang/Runnable.run:()V
       6: aconst_null
       7: areturn

  private static java.lang.Object lambda$time$0(java.lang.Runnable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #218,  1          // InterfaceMethod java/lang/Runnable.run:()V
       6: aconst_null
       7: areturn

  static {};
    Code:
       0: ldc           #12                 // class io/fluxcapacitor/common/TimingUtils
       2: invokestatic  #223                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #188                // Field log:Lorg/slf4j/Logger;
       8: return
}
