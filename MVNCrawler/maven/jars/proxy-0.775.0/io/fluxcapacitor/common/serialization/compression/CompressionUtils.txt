Compiled from "CompressionUtils.java"
public class io.fluxcapacitor.common.serialization.compression.CompressionUtils {
  private static final net.jpountz.lz4.LZ4Compressor lz4Compressor;

  private static final net.jpountz.lz4.LZ4FastDecompressor lz4Decompressor;

  public io.fluxcapacitor.common.serialization.compression.CompressionUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] compress(byte[]);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field io/fluxcapacitor/common/serialization/compression/CompressionAlgorithm.LZ4:Lio/fluxcapacitor/common/serialization/compression/CompressionAlgorithm;
       4: invokestatic  #13                 // Method compress:([BLio/fluxcapacitor/common/serialization/compression/CompressionAlgorithm;)[B
       7: areturn

  public static byte[] compress(byte[], io.fluxcapacitor.common.serialization.compression.CompressionAlgorithm);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #19                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #21                 // String algorithm is marked non-null but is null
      10: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #26                 // Field io/fluxcapacitor/common/serialization/compression/CompressionUtils$1.$SwitchMap$io$fluxcapacitor$common$serialization$compression$CompressionAlgorithm:[I
      17: aload_1
      18: invokevirtual #32                 // Method io/fluxcapacitor/common/serialization/compression/CompressionAlgorithm.ordinal:()I
      21: iaload
      22: tableswitch   { // 1 to 3
                     1: 56
                     2: 62
                     3: 94
               default: 48
          }
      48: new           #36                 // class java/lang/IncompatibleClassChangeError
      51: dup
      52: invokespecial #38                 // Method java/lang/IncompatibleClassChangeError."<init>":()V
      55: athrow
      56: aload_0
      57: astore_2
      58: aload_2
      59: goto          157
      62: getstatic     #39                 // Field lz4Compressor:Lnet/jpountz/lz4/LZ4Compressor;
      65: aload_0
      66: invokevirtual #43                 // Method net/jpountz/lz4/LZ4Compressor.compress:([B)[B
      69: astore_3
      70: aload_3
      71: arraylength
      72: iconst_4
      73: iadd
      74: invokestatic  #48                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      77: aload_0
      78: arraylength
      79: invokevirtual #54                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      82: aload_3
      83: invokevirtual #57                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      86: invokevirtual #61                 // Method java/nio/ByteBuffer.array:()[B
      89: astore_2
      90: aload_2
      91: goto          157
      94: new           #65                 // class java/io/ByteArrayOutputStream
      97: dup
      98: invokespecial #67                 // Method java/io/ByteArrayOutputStream."<init>":()V
     101: astore_3
     102: new           #68                 // class java/util/zip/GZIPOutputStream
     105: dup
     106: aload_3
     107: invokespecial #70                 // Method java/util/zip/GZIPOutputStream."<init>":(Ljava/io/OutputStream;)V
     110: astore        4
     112: aload         4
     114: aload_0
     115: invokevirtual #73                 // Method java/util/zip/GZIPOutputStream.write:([B)V
     118: aload         4
     120: invokevirtual #77                 // Method java/util/zip/GZIPOutputStream.close:()V
     123: goto          148
     126: astore        5
     128: aload         4
     130: invokevirtual #77                 // Method java/util/zip/GZIPOutputStream.close:()V
     133: goto          145
     136: astore        6
     138: aload         5
     140: aload         6
     142: invokevirtual #82                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     145: aload         5
     147: athrow
     148: aload_3
     149: invokevirtual #86                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     152: astore_2
     153: aload_2
     154: goto          157
     157: areturn
     158: astore_2
     159: aload_2
     160: athrow
    Exception table:
       from    to  target type
         112   118   126   Class java/lang/Throwable
         128   133   136   Class java/lang/Throwable
           0   157   158   Class java/lang/Throwable

  public static byte[] decompress(byte[]);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field io/fluxcapacitor/common/serialization/compression/CompressionAlgorithm.LZ4:Lio/fluxcapacitor/common/serialization/compression/CompressionAlgorithm;
       4: invokestatic  #95                 // Method decompress:([BLio/fluxcapacitor/common/serialization/compression/CompressionAlgorithm;)[B
       7: areturn

  public static byte[] decompress(byte[], io.fluxcapacitor.common.serialization.compression.CompressionAlgorithm);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #19                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #21                 // String algorithm is marked non-null but is null
      10: invokespecial #23                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #26                 // Field io/fluxcapacitor/common/serialization/compression/CompressionUtils$1.$SwitchMap$io$fluxcapacitor$common$serialization$compression$CompressionAlgorithm:[I
      17: aload_1
      18: invokevirtual #32                 // Method io/fluxcapacitor/common/serialization/compression/CompressionAlgorithm.ordinal:()I
      21: iaload
      22: tableswitch   { // 1 to 3
                     1: 56
                     2: 62
                     3: 95
               default: 48
          }
      48: new           #36                 // class java/lang/IncompatibleClassChangeError
      51: dup
      52: invokespecial #38                 // Method java/lang/IncompatibleClassChangeError."<init>":()V
      55: athrow
      56: aload_0
      57: astore_2
      58: aload_2
      59: goto          152
      62: aload_0
      63: invokestatic  #98                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      66: astore_3
      67: aload_3
      68: invokevirtual #101                // Method java/nio/ByteBuffer.getInt:()I
      71: invokestatic  #48                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      74: astore        4
      76: getstatic     #104                // Field lz4Decompressor:Lnet/jpountz/lz4/LZ4FastDecompressor;
      79: aload_3
      80: aload         4
      82: invokevirtual #108                // Method net/jpountz/lz4/LZ4FastDecompressor.decompress:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
      85: aload         4
      87: invokevirtual #61                 // Method java/nio/ByteBuffer.array:()[B
      90: astore_2
      91: aload_2
      92: goto          152
      95: new           #113                // class java/util/zip/GZIPInputStream
      98: dup
      99: new           #115                // class java/io/ByteArrayInputStream
     102: dup
     103: aload_0
     104: invokespecial #117                // Method java/io/ByteArrayInputStream."<init>":([B)V
     107: invokespecial #119                // Method java/util/zip/GZIPInputStream."<init>":(Ljava/io/InputStream;)V
     110: astore_3
     111: aload_3
     112: invokevirtual #122                // Method java/util/zip/GZIPInputStream.readAllBytes:()[B
     115: astore_2
     116: aload_3
     117: invokevirtual #125                // Method java/util/zip/GZIPInputStream.close:()V
     120: aload_2
     121: goto          152
     124: astore        4
     126: aload_3
     127: invokevirtual #125                // Method java/util/zip/GZIPInputStream.close:()V
     130: goto          142
     133: astore        5
     135: aload         4
     137: aload         5
     139: invokevirtual #82                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     142: aload         4
     144: athrow
     145: astore_3
     146: aload_0
     147: astore_2
     148: aload_2
     149: goto          152
     152: areturn
     153: astore_2
     154: aload_2
     155: athrow
    Exception table:
       from    to  target type
         111   116   124   Class java/lang/Throwable
         126   130   133   Class java/lang/Throwable
          95   120   145   Class java/util/zip/ZipException
         124   145   145   Class java/util/zip/ZipException
           0   152   153   Class java/lang/Throwable

  static {};
    Code:
       0: invokestatic  #128                // Method net/jpountz/lz4/LZ4Factory.fastestInstance:()Lnet/jpountz/lz4/LZ4Factory;
       3: invokevirtual #134                // Method net/jpountz/lz4/LZ4Factory.fastCompressor:()Lnet/jpountz/lz4/LZ4Compressor;
       6: putstatic     #39                 // Field lz4Compressor:Lnet/jpountz/lz4/LZ4Compressor;
       9: invokestatic  #128                // Method net/jpountz/lz4/LZ4Factory.fastestInstance:()Lnet/jpountz/lz4/LZ4Factory;
      12: invokevirtual #138                // Method net/jpountz/lz4/LZ4Factory.fastDecompressor:()Lnet/jpountz/lz4/LZ4FastDecompressor;
      15: putstatic     #104                // Field lz4Decompressor:Lnet/jpountz/lz4/LZ4FastDecompressor;
      18: return
}
