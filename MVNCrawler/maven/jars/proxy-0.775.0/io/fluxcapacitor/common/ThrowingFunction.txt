Compiled from "ThrowingFunction.java"
public interface io.fluxcapacitor.common.ThrowingFunction<T, R> {
  public abstract R apply(T) throws java.lang.Exception;

  public default <V> io.fluxcapacitor.common.ThrowingFunction<V, R> compose(io.fluxcapacitor.common.ThrowingFunction<? super V, ? extends T>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #1                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #3                  // String before is marked non-null but is null
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokedynamic #9,  0              // InvokeDynamic #0:apply:(Lio/fluxcapacitor/common/ThrowingFunction;Lio/fluxcapacitor/common/ThrowingFunction;)Lio/fluxcapacitor/common/ThrowingFunction;
      21: areturn

  public default <V> io.fluxcapacitor.common.ThrowingFunction<T, V> andThen(io.fluxcapacitor.common.ThrowingFunction<? super R, ? extends V>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #1                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #13                 // String after is marked non-null but is null
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokedynamic #15,  0             // InvokeDynamic #1:apply:(Lio/fluxcapacitor/common/ThrowingFunction;Lio/fluxcapacitor/common/ThrowingFunction;)Lio/fluxcapacitor/common/ThrowingFunction;
      21: areturn

  private java.lang.Object lambda$andThen$1(io.fluxcapacitor.common.ThrowingFunction, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #16,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #16,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  private java.lang.Object lambda$compose$0(io.fluxcapacitor.common.ThrowingFunction, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #16,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #16,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn
}
