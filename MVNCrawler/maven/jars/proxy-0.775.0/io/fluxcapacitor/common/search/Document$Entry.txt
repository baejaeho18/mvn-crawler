Compiled from "Document.java"
public final class io.fluxcapacitor.common.search.Document$Entry implements java.lang.Comparable<io.fluxcapacitor.common.search.Document$Entry> {
  private final io.fluxcapacitor.common.search.Document$EntryType type;

  private final java.lang.String value;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Object> asPhrase;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Object> asNumber;

  public int compareTo(io.fluxcapacitor.common.search.Document$Entry);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #1                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #3                  // String o is marked non-null but is null
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #9                  // Field type:Lio/fluxcapacitor/common/search/Document$EntryType;
      18: getstatic     #15                 // Field io/fluxcapacitor/common/search/Document$EntryType.NUMERIC:Lio/fluxcapacitor/common/search/Document$EntryType;
      21: if_acmpne     47
      24: aload_0
      25: getfield      #9                  // Field type:Lio/fluxcapacitor/common/search/Document$EntryType;
      28: aload_1
      29: invokevirtual #20                 // Method getType:()Lio/fluxcapacitor/common/search/Document$EntryType;
      32: if_acmpne     47
      35: aload_0
      36: invokevirtual #24                 // Method asNumber:()Ljava/math/BigDecimal;
      39: aload_1
      40: invokevirtual #24                 // Method asNumber:()Ljava/math/BigDecimal;
      43: invokevirtual #28                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      46: ireturn
      47: aload_0
      48: invokevirtual #34                 // Method getValue:()Ljava/lang/String;
      51: aload_1
      52: invokevirtual #34                 // Method getValue:()Ljava/lang/String;
      55: invokevirtual #38                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
      58: ireturn

  public io.fluxcapacitor.common.search.Document$EntryType getType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:Lio/fluxcapacitor/common/search/Document$EntryType;
       4: areturn

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #44                 // Field value:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #10                 // class io/fluxcapacitor/common/search/Document$Entry
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #10                 // class io/fluxcapacitor/common/search/Document$Entry
      20: astore_2
      21: aload_0
      22: invokevirtual #20                 // Method getType:()Lio/fluxcapacitor/common/search/Document$EntryType;
      25: astore_3
      26: aload_2
      27: invokevirtual #20                 // Method getType:()Lio/fluxcapacitor/common/search/Document$EntryType;
      30: astore        4
      32: aload_3
      33: ifnonnull     44
      36: aload         4
      38: ifnull        55
      41: goto          53
      44: aload_3
      45: aload         4
      47: invokevirtual #48                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: invokevirtual #34                 // Method getValue:()Ljava/lang/String;
      59: astore        5
      61: aload_2
      62: invokevirtual #34                 // Method getValue:()Ljava/lang/String;
      65: astore        6
      67: aload         5
      69: ifnonnull     80
      72: aload         6
      74: ifnull        92
      77: goto          90
      80: aload         5
      82: aload         6
      84: invokevirtual #48                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifne          92
      90: iconst_0
      91: ireturn
      92: iconst_1
      93: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #20                 // Method getType:()Lio/fluxcapacitor/common/search/Document$EntryType;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #54                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #34                 // Method getValue:()Ljava/lang/String;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #54                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getType:()Lio/fluxcapacitor/common/search/Document$EntryType;
       4: aload_0
       5: invokevirtual #34                 // Method getValue:()Ljava/lang/String;
       8: invokedynamic #58,  0             // InvokeDynamic #0:makeConcatWithConstants:(Lio/fluxcapacitor/common/search/Document$EntryType;Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  public io.fluxcapacitor.common.search.Document$Entry(io.fluxcapacitor.common.search.Document$EntryType, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #62                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #65                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #67                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #68                 // Field asPhrase:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #65                 // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #67                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #72                 // Field asNumber:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_0
      27: aload_1
      28: putfield      #9                  // Field type:Lio/fluxcapacitor/common/search/Document$EntryType;
      31: aload_0
      32: aload_2
      33: putfield      #44                 // Field value:Ljava/lang/String;
      36: return

  public java.lang.String asPhrase();
    Code:
       0: aload_0
       1: getfield      #68                 // Field asPhrase:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     89
      12: aload_0
      13: getfield      #68                 // Field asPhrase:Ljava/util/concurrent/atomic/AtomicReference;
      16: dup
      17: astore_2
      18: monitorenter
      19: aload_0
      20: getfield      #68                 // Field asPhrase:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: astore_1
      27: aload_1
      28: ifnonnull     77
      31: aload_0
      32: invokevirtual #20                 // Method getType:()Lio/fluxcapacitor/common/search/Document$EntryType;
      35: getstatic     #78                 // Field io/fluxcapacitor/common/search/Document$EntryType.TEXT:Lio/fluxcapacitor/common/search/Document$EntryType;
      38: if_acmpne     51
      41: aload_0
      42: invokevirtual #34                 // Method getValue:()Ljava/lang/String;
      45: invokestatic  #81                 // Method io/fluxcapacitor/common/SearchUtils.normalize:(Ljava/lang/String;)Ljava/lang/String;
      48: goto          55
      51: aload_0
      52: invokevirtual #34                 // Method getValue:()Ljava/lang/String;
      55: astore_3
      56: aload_3
      57: ifnonnull     67
      60: aload_0
      61: getfield      #68                 // Field asPhrase:Ljava/util/concurrent/atomic/AtomicReference;
      64: goto          68
      67: aload_3
      68: astore_1
      69: aload_0
      70: getfield      #68                 // Field asPhrase:Ljava/util/concurrent/atomic/AtomicReference;
      73: aload_1
      74: invokevirtual #87                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      77: aload_2
      78: monitorexit
      79: goto          89
      82: astore        4
      84: aload_2
      85: monitorexit
      86: aload         4
      88: athrow
      89: aload_1
      90: aload_0
      91: getfield      #68                 // Field asPhrase:Ljava/util/concurrent/atomic/AtomicReference;
      94: if_acmpne     101
      97: aconst_null
      98: goto          102
     101: aload_1
     102: checkcast     #39                 // class java/lang/String
     105: areturn
    Exception table:
       from    to  target type
          19    79    82   any
          82    86    82   any

  public java.math.BigDecimal asNumber();
    Code:
       0: aload_0
       1: getfield      #72                 // Field asNumber:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     90
      12: aload_0
      13: getfield      #72                 // Field asNumber:Ljava/util/concurrent/atomic/AtomicReference;
      16: dup
      17: astore_2
      18: monitorenter
      19: aload_0
      20: getfield      #72                 // Field asNumber:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: astore_1
      27: aload_1
      28: ifnonnull     78
      31: aload_0
      32: invokevirtual #20                 // Method getType:()Lio/fluxcapacitor/common/search/Document$EntryType;
      35: getstatic     #15                 // Field io/fluxcapacitor/common/search/Document$EntryType.NUMERIC:Lio/fluxcapacitor/common/search/Document$EntryType;
      38: if_acmpne     55
      41: new           #29                 // class java/math/BigDecimal
      44: dup
      45: aload_0
      46: invokevirtual #34                 // Method getValue:()Ljava/lang/String;
      49: invokespecial #91                 // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      52: goto          56
      55: aconst_null
      56: astore_3
      57: aload_3
      58: ifnonnull     68
      61: aload_0
      62: getfield      #72                 // Field asNumber:Ljava/util/concurrent/atomic/AtomicReference;
      65: goto          69
      68: aload_3
      69: astore_1
      70: aload_0
      71: getfield      #72                 // Field asNumber:Ljava/util/concurrent/atomic/AtomicReference;
      74: aload_1
      75: invokevirtual #87                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      78: aload_2
      79: monitorexit
      80: goto          90
      83: astore        4
      85: aload_2
      86: monitorexit
      87: aload         4
      89: athrow
      90: aload_1
      91: aload_0
      92: getfield      #72                 // Field asNumber:Ljava/util/concurrent/atomic/AtomicReference;
      95: if_acmpne     102
      98: aconst_null
      99: goto          103
     102: aload_1
     103: checkcast     #29                 // class java/math/BigDecimal
     106: areturn
    Exception table:
       from    to  target type
          19    80    83   any
          83    87    83   any

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class io/fluxcapacitor/common/search/Document$Entry
       5: invokevirtual #92                 // Method compareTo:(Lio/fluxcapacitor/common/search/Document$Entry;)I
       8: ireturn
}
