Compiled from "ParameterResolver.java"
public interface io.fluxcapacitor.common.handling.ParameterResolver<M> {
  public abstract java.util.function.Function<M, java.lang.Object> resolve(java.lang.reflect.Parameter, java.lang.annotation.Annotation);

  public default boolean matches(java.lang.reflect.Parameter, java.lang.annotation.Annotation, M, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #1,  3            // InterfaceMethod resolve:(Ljava/lang/reflect/Parameter;Ljava/lang/annotation/Annotation;)Ljava/util/function/Function;
       8: astore        5
      10: aload         5
      12: ifnonnull     17
      15: iconst_0
      16: ireturn
      17: aload         5
      19: aload_3
      20: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore        6
      27: aload         6
      29: ifnull        47
      32: aload_1
      33: invokevirtual #13                 // Method java/lang/reflect/Parameter.getType:()Ljava/lang/Class;
      36: aload         6
      38: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn

  public default boolean determinesSpecificity();
    Code:
       0: iconst_0
       1: ireturn

  public default boolean filterMessage(M, java.lang.reflect.Parameter);
    Code:
       0: iconst_1
       1: ireturn
}
