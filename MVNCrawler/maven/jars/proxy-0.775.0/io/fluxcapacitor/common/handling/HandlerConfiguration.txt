Compiled from "HandlerConfiguration.java"
public final class io.fluxcapacitor.common.handling.HandlerConfiguration<M> {
  private final java.lang.Class<? extends java.lang.annotation.Annotation> methodAnnotation;

  private final boolean invokeMultipleMethods;

  private final io.fluxcapacitor.common.handling.HandlerFilter handlerFilter;

  private final io.fluxcapacitor.common.handling.MessageFilter<? super M> messageFilter;

  public boolean methodMatches(java.lang.Class<?>, java.lang.reflect.Executable);
    Code:
       0: aload_0
       1: getfield      #1                  // Field methodAnnotation:Ljava/lang/Class;
       4: invokestatic  #7                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: aload_0
       8: aload_2
       9: invokedynamic #13,  0             // InvokeDynamic #0:apply:(Lio/fluxcapacitor/common/handling/HandlerConfiguration;Ljava/lang/reflect/Executable;)Ljava/util/function/Function;
      14: invokevirtual #17                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      17: iconst_1
      18: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      21: invokevirtual #27                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #22                 // class java/lang/Boolean
      27: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
      30: ifeq          51
      33: aload_0
      34: getfield      #35                 // Field handlerFilter:Lio/fluxcapacitor/common/handling/HandlerFilter;
      37: aload_1
      38: aload_2
      39: invokeinterface #39,  3           // InterfaceMethod io/fluxcapacitor/common/handling/HandlerFilter.test:(Ljava/lang/Class;Ljava/lang/reflect/Executable;)Z
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn

  public java.util.Optional<? extends java.lang.annotation.Annotation> getAnnotation(java.lang.reflect.Executable);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field methodAnnotation:Ljava/lang/Class;
       5: invokestatic  #45                 // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getMethodAnnotation:(Ljava/lang/reflect/Executable;Ljava/lang/Class;)Ljava/util/Optional;
       8: areturn

  private static <M> boolean $default$invokeMultipleMethods();
    Code:
       0: iconst_0
       1: ireturn

  private static <M> io.fluxcapacitor.common.handling.HandlerFilter $default$handlerFilter();
    Code:
       0: invokedynamic #51,  0             // InvokeDynamic #1:test:()Lio/fluxcapacitor/common/handling/HandlerFilter;
       5: areturn

  private static <M> io.fluxcapacitor.common.handling.MessageFilter<? super M> $default$messageFilter();
    Code:
       0: invokedynamic #54,  0             // InvokeDynamic #2:test:()Lio/fluxcapacitor/common/handling/MessageFilter;
       5: areturn

  io.fluxcapacitor.common.handling.HandlerConfiguration(java.lang.Class<? extends java.lang.annotation.Annotation>, boolean, io.fluxcapacitor.common.handling.HandlerFilter, io.fluxcapacitor.common.handling.MessageFilter<? super M>);
    Code:
       0: aload_0
       1: invokespecial #57                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field methodAnnotation:Ljava/lang/Class;
       9: aload_0
      10: iload_2
      11: putfield      #63                 // Field invokeMultipleMethods:Z
      14: aload_0
      15: aload_3
      16: putfield      #35                 // Field handlerFilter:Lio/fluxcapacitor/common/handling/HandlerFilter;
      19: aload_0
      20: aload         4
      22: putfield      #67                 // Field messageFilter:Lio/fluxcapacitor/common/handling/MessageFilter;
      25: return

  public static <M> io.fluxcapacitor.common.handling.HandlerConfiguration$HandlerConfigurationBuilder<M> builder();
    Code:
       0: new           #71                 // class io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder
       3: dup
       4: invokespecial #73                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder."<init>":()V
       7: areturn

  public io.fluxcapacitor.common.handling.HandlerConfiguration$HandlerConfigurationBuilder<M> toBuilder();
    Code:
       0: new           #71                 // class io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder
       3: dup
       4: invokespecial #73                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder."<init>":()V
       7: aload_0
       8: getfield      #1                  // Field methodAnnotation:Ljava/lang/Class;
      11: invokevirtual #74                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.methodAnnotation:(Ljava/lang/Class;)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
      14: aload_0
      15: getfield      #63                 // Field invokeMultipleMethods:Z
      18: invokevirtual #77                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.invokeMultipleMethods:(Z)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
      21: aload_0
      22: getfield      #35                 // Field handlerFilter:Lio/fluxcapacitor/common/handling/HandlerFilter;
      25: invokevirtual #80                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.handlerFilter:(Lio/fluxcapacitor/common/handling/HandlerFilter;)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
      28: aload_0
      29: getfield      #67                 // Field messageFilter:Lio/fluxcapacitor/common/handling/MessageFilter;
      32: invokevirtual #83                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.messageFilter:(Lio/fluxcapacitor/common/handling/MessageFilter;)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
      35: areturn

  public java.lang.Class<? extends java.lang.annotation.Annotation> methodAnnotation();
    Code:
       0: aload_0
       1: getfield      #1                  // Field methodAnnotation:Ljava/lang/Class;
       4: areturn

  public boolean invokeMultipleMethods();
    Code:
       0: aload_0
       1: getfield      #63                 // Field invokeMultipleMethods:Z
       4: ireturn

  public io.fluxcapacitor.common.handling.HandlerFilter handlerFilter();
    Code:
       0: aload_0
       1: getfield      #35                 // Field handlerFilter:Lio/fluxcapacitor/common/handling/HandlerFilter;
       4: areturn

  public io.fluxcapacitor.common.handling.MessageFilter<? super M> messageFilter();
    Code:
       0: aload_0
       1: getfield      #67                 // Field messageFilter:Lio/fluxcapacitor/common/handling/MessageFilter;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class io/fluxcapacitor/common/handling/HandlerConfiguration
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class io/fluxcapacitor/common/handling/HandlerConfiguration
      20: astore_2
      21: aload_0
      22: invokevirtual #86                 // Method invokeMultipleMethods:()Z
      25: aload_2
      26: invokevirtual #86                 // Method invokeMultipleMethods:()Z
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: invokevirtual #88                 // Method methodAnnotation:()Ljava/lang/Class;
      38: astore_3
      39: aload_2
      40: invokevirtual #88                 // Method methodAnnotation:()Ljava/lang/Class;
      43: astore        4
      45: aload_3
      46: ifnonnull     57
      49: aload         4
      51: ifnull        68
      54: goto          66
      57: aload_3
      58: aload         4
      60: invokevirtual #91                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifne          68
      66: iconst_0
      67: ireturn
      68: aload_0
      69: invokevirtual #95                 // Method handlerFilter:()Lio/fluxcapacitor/common/handling/HandlerFilter;
      72: astore        5
      74: aload_2
      75: invokevirtual #95                 // Method handlerFilter:()Lio/fluxcapacitor/common/handling/HandlerFilter;
      78: astore        6
      80: aload         5
      82: ifnonnull     93
      85: aload         6
      87: ifnull        105
      90: goto          103
      93: aload         5
      95: aload         6
      97: invokevirtual #91                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     100: ifne          105
     103: iconst_0
     104: ireturn
     105: aload_0
     106: invokevirtual #97                 // Method messageFilter:()Lio/fluxcapacitor/common/handling/MessageFilter;
     109: astore        7
     111: aload_2
     112: invokevirtual #97                 // Method messageFilter:()Lio/fluxcapacitor/common/handling/MessageFilter;
     115: astore        8
     117: aload         7
     119: ifnonnull     130
     122: aload         8
     124: ifnull        142
     127: goto          140
     130: aload         7
     132: aload         8
     134: invokevirtual #91                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     137: ifne          142
     140: iconst_0
     141: ireturn
     142: iconst_1
     143: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: iload_2
       6: bipush        59
       8: imul
       9: aload_0
      10: invokevirtual #86                 // Method invokeMultipleMethods:()Z
      13: ifeq          21
      16: bipush        79
      18: goto          23
      21: bipush        97
      23: iadd
      24: istore_2
      25: aload_0
      26: invokevirtual #88                 // Method methodAnnotation:()Ljava/lang/Class;
      29: astore_3
      30: iload_2
      31: bipush        59
      33: imul
      34: aload_3
      35: ifnonnull     43
      38: bipush        43
      40: goto          47
      43: aload_3
      44: invokevirtual #99                 // Method java/lang/Object.hashCode:()I
      47: iadd
      48: istore_2
      49: aload_0
      50: invokevirtual #95                 // Method handlerFilter:()Lio/fluxcapacitor/common/handling/HandlerFilter;
      53: astore        4
      55: iload_2
      56: bipush        59
      58: imul
      59: aload         4
      61: ifnonnull     69
      64: bipush        43
      66: goto          74
      69: aload         4
      71: invokevirtual #99                 // Method java/lang/Object.hashCode:()I
      74: iadd
      75: istore_2
      76: aload_0
      77: invokevirtual #97                 // Method messageFilter:()Lio/fluxcapacitor/common/handling/MessageFilter;
      80: astore        5
      82: iload_2
      83: bipush        59
      85: imul
      86: aload         5
      88: ifnonnull     96
      91: bipush        43
      93: goto          101
      96: aload         5
      98: invokevirtual #99                 // Method java/lang/Object.hashCode:()I
     101: iadd
     102: istore_2
     103: iload_2
     104: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method methodAnnotation:()Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #86                 // Method invokeMultipleMethods:()Z
       8: aload_0
       9: invokevirtual #95                 // Method handlerFilter:()Lio/fluxcapacitor/common/handling/HandlerFilter;
      12: aload_0
      13: invokevirtual #97                 // Method messageFilter:()Lio/fluxcapacitor/common/handling/MessageFilter;
      16: invokedynamic #103,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/Class;ZLio/fluxcapacitor/common/handling/HandlerFilter;Lio/fluxcapacitor/common/handling/MessageFilter;)Ljava/lang/String;
      21: areturn

  private static boolean lambda$$default$messageFilter$2(java.lang.Object, java.lang.reflect.Executable);
    Code:
       0: iconst_1
       1: ireturn

  private static boolean lambda$$default$handlerFilter$1(java.lang.Class, java.lang.reflect.Executable);
    Code:
       0: iconst_1
       1: ireturn

  private java.lang.Boolean lambda$methodMatches$0(java.lang.reflect.Executable, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #107                // Method getAnnotation:(Ljava/lang/reflect/Executable;)Ljava/util/Optional;
       5: invokevirtual #111                // Method java/util/Optional.isPresent:()Z
       8: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      11: areturn
}
