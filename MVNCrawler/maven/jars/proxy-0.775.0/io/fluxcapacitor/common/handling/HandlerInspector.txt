Compiled from "HandlerInspector.java"
public class io.fluxcapacitor.common.handling.HandlerInspector {
  public io.fluxcapacitor.common.handling.HandlerInspector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean hasHandlerMethods(java.lang.Class<?>, io.fluxcapacitor.common.handling.HandlerConfiguration<?>);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAllMethods:(Ljava/lang/Class;)Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_0
      10: invokevirtual #19                 // Method java/lang/Class.getConstructors:()[Ljava/lang/reflect/Constructor;
      13: invokestatic  #25                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      16: invokestatic  #30                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      19: aload_1
      20: aload_0
      21: invokedynamic #36,  0             // InvokeDynamic #0:test:(Lio/fluxcapacitor/common/handling/HandlerConfiguration;Ljava/lang/Class;)Ljava/util/function/Predicate;
      26: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      31: ireturn

  public static <M> io.fluxcapacitor.common.handling.Handler<M> createHandler(java.lang.Object, java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #44,  0             // InvokeDynamic #1:resolve:()Lio/fluxcapacitor/common/handling/ParameterResolver;
       7: invokestatic  #48                 // InterfaceMethod java/util/List.of:(Ljava/lang/Object;)Ljava/util/List;
      10: invokestatic  #52                 // Method createHandler:(Ljava/lang/Object;Ljava/lang/Class;Ljava/util/List;)Lio/fluxcapacitor/common/handling/Handler;
      13: areturn

  public static <M> io.fluxcapacitor.common.handling.Handler<M> createHandler(java.lang.Object, java.lang.Class<? extends java.lang.annotation.Annotation>, java.util.List<io.fluxcapacitor.common.handling.ParameterResolver<? super M>>);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #58                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration.builder:()Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
       5: aload_1
       6: invokevirtual #64                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.methodAnnotation:(Ljava/lang/Class;)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
       9: invokevirtual #70                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.build:()Lio/fluxcapacitor/common/handling/HandlerConfiguration;
      12: invokestatic  #74                 // Method createHandler:(Ljava/lang/Object;Ljava/util/List;Lio/fluxcapacitor/common/handling/HandlerConfiguration;)Lio/fluxcapacitor/common/handling/Handler;
      15: areturn

  public static <M> io.fluxcapacitor.common.handling.Handler<M> createHandler(java.util.function.Supplier<?>, java.lang.Class<?>, java.util.List<io.fluxcapacitor.common.handling.ParameterResolver<? super M>>, io.fluxcapacitor.common.handling.HandlerConfiguration<? super M>);
    Code:
       0: new           #77                 // class io/fluxcapacitor/common/handling/HandlerInspector$DefaultHandler
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokestatic  #79                 // Method inspect:(Ljava/lang/Class;Ljava/util/List;Lio/fluxcapacitor/common/handling/HandlerConfiguration;)Lio/fluxcapacitor/common/handling/HandlerMatcher;
      11: invokespecial #83                 // Method io/fluxcapacitor/common/handling/HandlerInspector$DefaultHandler."<init>":(Ljava/util/function/Supplier;Lio/fluxcapacitor/common/handling/HandlerMatcher;)V
      14: areturn

  public static <M> io.fluxcapacitor.common.handling.Handler<M> createHandler(java.lang.Object, java.util.List<io.fluxcapacitor.common.handling.ParameterResolver<? super M>>, io.fluxcapacitor.common.handling.HandlerConfiguration<? super M>);
    Code:
       0: new           #77                 // class io/fluxcapacitor/common/handling/HandlerInspector$DefaultHandler
       3: dup
       4: aload_0
       5: invokedynamic #86,  0             // InvokeDynamic #2:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: aload_0
      11: invokevirtual #90                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: aload_1
      15: aload_2
      16: invokestatic  #79                 // Method inspect:(Ljava/lang/Class;Ljava/util/List;Lio/fluxcapacitor/common/handling/HandlerConfiguration;)Lio/fluxcapacitor/common/handling/HandlerMatcher;
      19: invokespecial #83                 // Method io/fluxcapacitor/common/handling/HandlerInspector$DefaultHandler."<init>":(Ljava/util/function/Supplier;Lio/fluxcapacitor/common/handling/HandlerMatcher;)V
      22: areturn

  public static <M> io.fluxcapacitor.common.handling.HandlerMatcher<java.lang.Object, M> inspect(java.lang.Class<?>, java.util.List<io.fluxcapacitor.common.handling.ParameterResolver<? super M>>, java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration.builder:()Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
       5: aload_2
       6: invokevirtual #64                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.methodAnnotation:(Ljava/lang/Class;)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
       9: invokevirtual #70                 // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.build:()Lio/fluxcapacitor/common/handling/HandlerConfiguration;
      12: invokestatic  #79                 // Method inspect:(Ljava/lang/Class;Ljava/util/List;Lio/fluxcapacitor/common/handling/HandlerConfiguration;)Lio/fluxcapacitor/common/handling/HandlerMatcher;
      15: areturn

  public static <M> io.fluxcapacitor.common.handling.HandlerMatcher<java.lang.Object, M> inspect(java.lang.Class<?>, java.util.List<io.fluxcapacitor.common.handling.ParameterResolver<? super M>>, io.fluxcapacitor.common.handling.HandlerConfiguration<? super M>);
    Code:
       0: new           #94                 // class io/fluxcapacitor/common/handling/HandlerInspector$ObjectHandlerMatcher
       3: dup
       4: aload_0
       5: invokestatic  #7                  // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAllMethods:(Ljava/lang/Class;)Ljava/util/List;
       8: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      13: aload_0
      14: invokevirtual #96                 // Method java/lang/Class.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;
      17: invokestatic  #25                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      20: invokestatic  #30                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      23: aload_2
      24: aload_0
      25: invokedynamic #99,  0             // InvokeDynamic #3:test:(Lio/fluxcapacitor/common/handling/HandlerConfiguration;Ljava/lang/Class;)Ljava/util/function/Predicate;
      30: invokeinterface #100,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokedynamic #104,  0            // InvokeDynamic #4:apply:(Ljava/lang/Class;Ljava/util/List;Lio/fluxcapacitor/common/handling/HandlerConfiguration;)Ljava/util/function/Function;
      43: invokeinterface #108,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      48: getstatic     #112                // Field io/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher.comparator:Ljava/util/Comparator;
      51: invokeinterface #118,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      56: invokestatic  #122                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      59: invokeinterface #128,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      64: checkcast     #14                 // class java/util/List
      67: aload_2
      68: invokevirtual #132                // Method io/fluxcapacitor/common/handling/HandlerConfiguration.invokeMultipleMethods:()Z
      71: invokespecial #136                // Method io/fluxcapacitor/common/handling/HandlerInspector$ObjectHandlerMatcher."<init>":(Ljava/util/List;Z)V
      74: areturn

  private static java.util.stream.Stream lambda$inspect$5(java.lang.Class, java.util.List, io.fluxcapacitor.common.handling.HandlerConfiguration, java.lang.reflect.Executable);
    Code:
       0: new           #113                // class io/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher
       3: dup
       4: aload_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #139                // Method io/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher."<init>":(Ljava/lang/reflect/Executable;Ljava/lang/Class;Ljava/util/List;Lio/fluxcapacitor/common/handling/HandlerConfiguration;)V
      11: invokestatic  #142                // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      14: areturn

  private static boolean lambda$inspect$4(io.fluxcapacitor.common.handling.HandlerConfiguration, java.lang.Class, java.lang.reflect.Executable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #145                // Method io/fluxcapacitor/common/handling/HandlerConfiguration.methodMatches:(Ljava/lang/Class;Ljava/lang/reflect/Executable;)Z
       6: ireturn

  private static java.lang.Object lambda$createHandler$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static java.util.function.Function lambda$createHandler$2(java.lang.reflect.Parameter, java.lang.annotation.Annotation);
    Code:
       0: invokedynamic #149,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
       5: areturn

  private static java.lang.Object lambda$createHandler$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static boolean lambda$hasHandlerMethods$0(io.fluxcapacitor.common.handling.HandlerConfiguration, java.lang.Class, java.lang.reflect.Executable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #145                // Method io/fluxcapacitor/common/handling/HandlerConfiguration.methodMatches:(Ljava/lang/Class;Ljava/lang/reflect/Executable;)Z
       6: ireturn
}
