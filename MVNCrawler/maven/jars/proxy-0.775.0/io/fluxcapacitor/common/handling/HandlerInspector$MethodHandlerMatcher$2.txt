Compiled from "HandlerInspector.java"
class io.fluxcapacitor.common.handling.HandlerInspector$MethodHandlerMatcher$2 extends io.fluxcapacitor.common.handling.HandlerInspector$MethodHandlerMatcher<M>.MethodHandlerInvoker {
  final java.lang.Object val$target;

  final java.util.function.Function[] val$matchingResolvers;

  final java.lang.Object val$m;

  final io.fluxcapacitor.common.handling.HandlerInspector$MethodHandlerMatcher this$0;

  io.fluxcapacitor.common.handling.HandlerInspector$MethodHandlerMatcher$2(io.fluxcapacitor.common.handling.HandlerInspector$MethodHandlerMatcher, java.lang.Object, java.lang.Object, java.util.function.Function[], java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher;
       5: aload_0
       6: aload_3
       7: putfield      #7                  // Field val$target:Ljava/lang/Object;
      10: aload_0
      11: aload         4
      13: putfield      #11                 // Field val$matchingResolvers:[Ljava/util/function/Function;
      16: aload_0
      17: aload         5
      19: putfield      #15                 // Field val$m:Ljava/lang/Object;
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokespecial #18                 // Method io/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher$MethodHandlerInvoker."<init>":(Lio/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher;Ljava/lang/Object;)V
      28: return

  public java.lang.Object invoke(java.util.function.BiFunction<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher;
       4: getfield      #24                 // Field io/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher.invoker:Lio/fluxcapacitor/common/reflection/MemberInvoker;
       7: aload_0
       8: getfield      #7                  // Field val$target:Ljava/lang/Object;
      11: aload_0
      12: getfield      #1                  // Field this$0:Lio/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher;
      15: getfield      #30                 // Field io/fluxcapacitor/common/handling/HandlerInspector$MethodHandlerMatcher.parameterCount:I
      18: aload_0
      19: getfield      #11                 // Field val$matchingResolvers:[Ljava/util/function/Function;
      22: aload_0
      23: getfield      #15                 // Field val$m:Ljava/lang/Object;
      26: invokedynamic #34,  0             // InvokeDynamic #0:apply:([Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/function/IntFunction;
      31: invokeinterface #38,  4           // InterfaceMethod io/fluxcapacitor/common/reflection/MemberInvoker.invoke:(Ljava/lang/Object;ILjava/util/function/IntFunction;)Ljava/lang/Object;
      36: areturn

  private static java.lang.Object lambda$invoke$0(java.util.function.Function[], java.lang.Object, int);
    Code:
       0: aload_0
       1: iload_2
       2: aaload
       3: aload_1
       4: invokeinterface #44,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
}
