Compiled from "Invocation.java"
public final class io.fluxcapacitor.common.handling.Invocation {
  private static final java.lang.ThreadLocal<io.fluxcapacitor.common.handling.Invocation> current;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Object> id;

  private final transient java.util.List<java.util.function.BiConsumer<java.lang.Object, java.lang.Throwable>> callbacks;

  public static <V> V performInvocation(java.util.concurrent.Callable<V>);
    Code:
       0: getstatic     #1                  // Field current:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: ifnull        16
       9: aload_0
      10: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      15: areturn
      16: new           #2                  // class io/fluxcapacitor/common/handling/Invocation
      19: dup
      20: invokespecial #18                 // Method "<init>":()V
      23: astore_1
      24: getstatic     #1                  // Field current:Ljava/lang/ThreadLocal;
      27: aload_1
      28: invokevirtual #22                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      31: aload_0
      32: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      37: astore_2
      38: aload_1
      39: invokevirtual #26                 // Method getCallbacks:()Ljava/util/List;
      42: aload_2
      43: invokedynamic #30,  0             // InvokeDynamic #0:accept:(Ljava/lang/Object;)Ljava/util/function/Consumer;
      48: invokeinterface #34,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      53: aload_2
      54: astore_3
      55: getstatic     #1                  // Field current:Ljava/lang/ThreadLocal;
      58: aconst_null
      59: invokevirtual #22                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      62: aload_3
      63: areturn
      64: astore_2
      65: aload_1
      66: invokevirtual #26                 // Method getCallbacks:()Ljava/util/List;
      69: aload_2
      70: invokedynamic #42,  0             // InvokeDynamic #1:accept:(Ljava/lang/Throwable;)Ljava/util/function/Consumer;
      75: invokeinterface #34,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      80: aload_2
      81: athrow
      82: astore        4
      84: getstatic     #1                  // Field current:Ljava/lang/ThreadLocal;
      87: aconst_null
      88: invokevirtual #22                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      91: aload         4
      93: athrow
      94: astore_1
      95: aload_1
      96: athrow
    Exception table:
       from    to  target type
          31    55    64   Class java/lang/Throwable
          31    55    82   any
          64    84    82   any
           0    15    94   Class java/lang/Throwable
          16    62    94   Class java/lang/Throwable
          64    94    94   Class java/lang/Throwable

  public static io.fluxcapacitor.common.handling.Invocation getCurrent();
    Code:
       0: getstatic     #1                  // Field current:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #2                  // class io/fluxcapacitor/common/handling/Invocation
       9: areturn

  public static io.fluxcapacitor.common.Registration whenHandlerCompletes(java.util.function.BiConsumer<java.lang.Object, java.lang.Throwable>);
    Code:
       0: getstatic     #1                  // Field current:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #2                  // class io/fluxcapacitor/common/handling/Invocation
       9: astore_1
      10: aload_1
      11: ifnonnull     26
      14: aload_0
      15: aconst_null
      16: aconst_null
      17: invokeinterface #51,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      22: invokestatic  #56                 // InterfaceMethod io/fluxcapacitor/common/Registration.noOp:()Lio/fluxcapacitor/common/Registration;
      25: areturn
      26: aload_1
      27: aload_0
      28: invokevirtual #62                 // Method registerCallback:(Ljava/util/function/BiConsumer;)Lio/fluxcapacitor/common/Registration;
      31: areturn

  private io.fluxcapacitor.common.Registration registerCallback(java.util.function.BiConsumer<java.lang.Object, java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #66                 // Field callbacks:Ljava/util/List;
       4: aload_1
       5: invokeinterface #70,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_1
      13: invokedynamic #74,  0             // InvokeDynamic #2:cancel:(Lio/fluxcapacitor/common/handling/Invocation;Ljava/util/function/BiConsumer;)Lio/fluxcapacitor/common/Registration;
      18: areturn

  public io.fluxcapacitor.common.handling.Invocation();
    Code:
       0: aload_0
       1: invokespecial #78                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #81                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #83                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #84                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #88                 // class java/util/ArrayList
      19: dup
      20: invokespecial #90                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #66                 // Field callbacks:Ljava/util/List;
      26: return

  public java.util.List<java.util.function.BiConsumer<java.lang.Object, java.lang.Throwable>> getCallbacks();
    Code:
       0: aload_0
       1: getfield      #66                 // Field callbacks:Ljava/util/List;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class io/fluxcapacitor/common/handling/Invocation
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class io/fluxcapacitor/common/handling/Invocation
      20: astore_2
      21: aload_0
      22: invokevirtual #91                 // Method getId:()Ljava/lang/String;
      25: astore_3
      26: aload_2
      27: invokevirtual #91                 // Method getId:()Ljava/lang/String;
      30: astore        4
      32: aload_3
      33: ifnonnull     44
      36: aload         4
      38: ifnull        55
      41: goto          53
      44: aload_3
      45: aload         4
      47: invokevirtual #95                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: iconst_1
      56: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #91                 // Method getId:()Ljava/lang/String;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #98                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: iload_2
      30: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method getId:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #26                 // Method getCallbacks:()Ljava/util/List;
       8: invokedynamic #102,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
      13: areturn

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #84                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     71
      12: aload_0
      13: getfield      #84                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      16: dup
      17: astore_2
      18: monitorenter
      19: aload_0
      20: getfield      #84                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: astore_1
      27: aload_1
      28: ifnonnull     59
      31: invokestatic  #107                // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      34: invokevirtual #113                // Method java/util/UUID.toString:()Ljava/lang/String;
      37: astore_3
      38: aload_3
      39: ifnonnull     49
      42: aload_0
      43: getfield      #84                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      46: goto          50
      49: aload_3
      50: astore_1
      51: aload_0
      52: getfield      #84                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      55: aload_1
      56: invokevirtual #116                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      59: aload_2
      60: monitorexit
      61: goto          71
      64: astore        4
      66: aload_2
      67: monitorexit
      68: aload         4
      70: athrow
      71: aload_1
      72: aload_0
      73: getfield      #84                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      76: if_acmpne     83
      79: aconst_null
      80: goto          84
      83: aload_1
      84: checkcast     #117                // class java/lang/String
      87: areturn
    Exception table:
       from    to  target type
          19    61    64   any
          64    68    64   any

  private void lambda$registerCallback$2(java.util.function.BiConsumer);
    Code:
       0: aload_0
       1: getfield      #66                 // Field callbacks:Ljava/util/List;
       4: aload_1
       5: invokeinterface #119,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private static void lambda$performInvocation$1(java.lang.Throwable, java.util.function.BiConsumer);
    Code:
       0: aload_1
       1: aconst_null
       2: aload_0
       3: invokeinterface #51,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  private static void lambda$performInvocation$0(java.lang.Object, java.util.function.BiConsumer);
    Code:
       0: aload_1
       1: aload_0
       2: aconst_null
       3: invokeinterface #51,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  static {};
    Code:
       0: new           #8                  // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #122                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #1                  // Field current:Ljava/lang/ThreadLocal;
      10: return
}
