Compiled from "ApplicationEnvironmentPropertiesSource.java"
public class io.fluxcapacitor.common.application.ApplicationEnvironmentPropertiesSource extends io.fluxcapacitor.common.application.DecryptingPropertySource {
  public io.fluxcapacitor.common.application.ApplicationEnvironmentPropertiesSource(io.fluxcapacitor.common.encryption.Encryption);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method getEnvironment:()Ljava/lang/String;
       4: aload_1
       5: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lio/fluxcapacitor/common/encryption/Encryption;)V
       8: return

  public io.fluxcapacitor.common.application.ApplicationEnvironmentPropertiesSource(java.lang.String, io.fluxcapacitor.common.encryption.Encryption);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method loadProperties:(Ljava/lang/String;)Ljava/util/Properties;
       5: aload_2
       6: invokespecial #15                 // Method io/fluxcapacitor/common/application/DecryptingPropertySource."<init>":(Ljava/util/Properties;Lio/fluxcapacitor/common/encryption/Encryption;)V
       9: return

  protected static java.util.Properties loadProperties(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #20                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       4: invokedynamic #26,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       9: invokevirtual #30                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      12: invokedynamic #34,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      17: invokevirtual #35                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      20: invokedynamic #38,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      25: invokevirtual #30                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      28: invokedynamic #39,  0             // InvokeDynamic #3:get:()Ljava/util/function/Supplier;
      33: invokevirtual #43                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      36: checkcast     #47                 // class java/util/Properties
      39: areturn

  protected static java.lang.String getEnvironment();
    Code:
       0: ldc           #49                 // String ENVIRONMENT
       2: invokestatic  #51                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #20                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       8: invokedynamic #57,  0             // InvokeDynamic #4:get:()Ljava/util/function/Supplier;
      13: invokevirtual #58                 // Method java/util/Optional.or:(Ljava/util/function/Supplier;)Ljava/util/Optional;
      16: invokedynamic #62,  0             // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
      21: invokevirtual #58                 // Method java/util/Optional.or:(Ljava/util/function/Supplier;)Ljava/util/Optional;
      24: invokedynamic #63,  0             // InvokeDynamic #6:get:()Ljava/util/function/Supplier;
      29: invokevirtual #58                 // Method java/util/Optional.or:(Ljava/util/function/Supplier;)Ljava/util/Optional;
      32: aconst_null
      33: invokevirtual #64                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #68                 // class java/lang/String
      39: areturn

  private static java.util.Optional lambda$getEnvironment$3();
    Code:
       0: ldc           #70                 // String environment
       2: invokestatic  #72                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #20                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       8: areturn

  private static java.util.Optional lambda$getEnvironment$2();
    Code:
       0: ldc           #49                 // String ENVIRONMENT
       2: invokestatic  #72                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #20                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       8: areturn

  private static java.util.Optional lambda$getEnvironment$1();
    Code:
       0: ldc           #70                 // String environment
       2: invokestatic  #51                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #20                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       8: areturn

  private static java.lang.String lambda$loadProperties$0(java.lang.String);
    Code:
       0: ldc           #75                 // String /application-%s.properties
       2: iconst_1
       3: anewarray     #77                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: invokestatic  #79                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: areturn
}
