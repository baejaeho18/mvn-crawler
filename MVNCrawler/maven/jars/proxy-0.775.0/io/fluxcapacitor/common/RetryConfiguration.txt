Compiled from "RetryConfiguration.java"
public final class io.fluxcapacitor.common.RetryConfiguration {
  private static final org.slf4j.Logger log;

  private final java.time.Duration delay;

  private final int maxRetries;

  private final java.util.function.Predicate<java.lang.Exception> errorTest;

  private final boolean throwOnFailingErrorTest;

  private final java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus> successLogger;

  private final java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus> exceptionLogger;

  private final java.util.function.Function<java.lang.Throwable, ?> errorMapper;

  private static java.time.Duration $default$delay();
    Code:
       0: lconst_1
       1: invokestatic  #1                  // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
       4: areturn

  private static int $default$maxRetries();
    Code:
       0: iconst_m1
       1: ireturn

  private static java.util.function.Predicate<java.lang.Exception> $default$errorTest();
    Code:
       0: invokedynamic #7,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
       5: areturn

  private static boolean $default$throwOnFailingErrorTest();
    Code:
       0: iconst_0
       1: ireturn

  private static java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus> $default$successLogger();
    Code:
       0: invokedynamic #11,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
       5: areturn

  private static java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus> $default$exceptionLogger();
    Code:
       0: invokedynamic #15,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
       5: areturn

  private static java.util.function.Function<java.lang.Throwable, ?> $default$errorMapper();
    Code:
       0: invokedynamic #16,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       5: areturn

  io.fluxcapacitor.common.RetryConfiguration(java.time.Duration, int, java.util.function.Predicate<java.lang.Exception>, boolean, java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus>, java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus>, java.util.function.Function<java.lang.Throwable, ?>);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #26                 // Field delay:Ljava/time/Duration;
       9: aload_0
      10: iload_2
      11: putfield      #32                 // Field maxRetries:I
      14: aload_0
      15: aload_3
      16: putfield      #36                 // Field errorTest:Ljava/util/function/Predicate;
      19: aload_0
      20: iload         4
      22: putfield      #40                 // Field throwOnFailingErrorTest:Z
      25: aload_0
      26: aload         5
      28: putfield      #44                 // Field successLogger:Ljava/util/function/Consumer;
      31: aload_0
      32: aload         6
      34: putfield      #48                 // Field exceptionLogger:Ljava/util/function/Consumer;
      37: aload_0
      38: aload         7
      40: putfield      #51                 // Field errorMapper:Ljava/util/function/Function;
      43: return

  public static io.fluxcapacitor.common.RetryConfiguration$Builder builder();
    Code:
       0: new           #55                 // class io/fluxcapacitor/common/RetryConfiguration$Builder
       3: dup
       4: invokespecial #57                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder."<init>":()V
       7: areturn

  public java.time.Duration getDelay();
    Code:
       0: aload_0
       1: getfield      #26                 // Field delay:Ljava/time/Duration;
       4: areturn

  public int getMaxRetries();
    Code:
       0: aload_0
       1: getfield      #32                 // Field maxRetries:I
       4: ireturn

  public java.util.function.Predicate<java.lang.Exception> getErrorTest();
    Code:
       0: aload_0
       1: getfield      #36                 // Field errorTest:Ljava/util/function/Predicate;
       4: areturn

  public boolean isThrowOnFailingErrorTest();
    Code:
       0: aload_0
       1: getfield      #40                 // Field throwOnFailingErrorTest:Z
       4: ireturn

  public java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus> getSuccessLogger();
    Code:
       0: aload_0
       1: getfield      #44                 // Field successLogger:Ljava/util/function/Consumer;
       4: areturn

  public java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus> getExceptionLogger();
    Code:
       0: aload_0
       1: getfield      #48                 // Field exceptionLogger:Ljava/util/function/Consumer;
       4: areturn

  public java.util.function.Function<java.lang.Throwable, ?> getErrorMapper();
    Code:
       0: aload_0
       1: getfield      #51                 // Field errorMapper:Ljava/util/function/Function;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #27                 // class io/fluxcapacitor/common/RetryConfiguration
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #27                 // class io/fluxcapacitor/common/RetryConfiguration
      20: astore_2
      21: aload_0
      22: invokevirtual #58                 // Method getMaxRetries:()I
      25: aload_2
      26: invokevirtual #58                 // Method getMaxRetries:()I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: invokevirtual #62                 // Method isThrowOnFailingErrorTest:()Z
      38: aload_2
      39: invokevirtual #62                 // Method isThrowOnFailingErrorTest:()Z
      42: if_icmpeq     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: invokevirtual #66                 // Method getDelay:()Ljava/time/Duration;
      51: astore_3
      52: aload_2
      53: invokevirtual #66                 // Method getDelay:()Ljava/time/Duration;
      56: astore        4
      58: aload_3
      59: ifnonnull     70
      62: aload         4
      64: ifnull        81
      67: goto          79
      70: aload_3
      71: aload         4
      73: invokevirtual #70                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      76: ifne          81
      79: iconst_0
      80: ireturn
      81: aload_0
      82: invokevirtual #74                 // Method getErrorTest:()Ljava/util/function/Predicate;
      85: astore        5
      87: aload_2
      88: invokevirtual #74                 // Method getErrorTest:()Ljava/util/function/Predicate;
      91: astore        6
      93: aload         5
      95: ifnonnull     106
      98: aload         6
     100: ifnull        118
     103: goto          116
     106: aload         5
     108: aload         6
     110: invokevirtual #70                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     113: ifne          118
     116: iconst_0
     117: ireturn
     118: aload_0
     119: invokevirtual #77                 // Method getSuccessLogger:()Ljava/util/function/Consumer;
     122: astore        7
     124: aload_2
     125: invokevirtual #77                 // Method getSuccessLogger:()Ljava/util/function/Consumer;
     128: astore        8
     130: aload         7
     132: ifnonnull     143
     135: aload         8
     137: ifnull        155
     140: goto          153
     143: aload         7
     145: aload         8
     147: invokevirtual #70                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     150: ifne          155
     153: iconst_0
     154: ireturn
     155: aload_0
     156: invokevirtual #80                 // Method getExceptionLogger:()Ljava/util/function/Consumer;
     159: astore        9
     161: aload_2
     162: invokevirtual #80                 // Method getExceptionLogger:()Ljava/util/function/Consumer;
     165: astore        10
     167: aload         9
     169: ifnonnull     180
     172: aload         10
     174: ifnull        192
     177: goto          190
     180: aload         9
     182: aload         10
     184: invokevirtual #70                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     187: ifne          192
     190: iconst_0
     191: ireturn
     192: aload_0
     193: invokevirtual #83                 // Method getErrorMapper:()Ljava/util/function/Function;
     196: astore        11
     198: aload_2
     199: invokevirtual #83                 // Method getErrorMapper:()Ljava/util/function/Function;
     202: astore        12
     204: aload         11
     206: ifnonnull     217
     209: aload         12
     211: ifnull        229
     214: goto          227
     217: aload         11
     219: aload         12
     221: invokevirtual #70                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     224: ifne          229
     227: iconst_0
     228: ireturn
     229: iconst_1
     230: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: iload_2
       6: bipush        59
       8: imul
       9: aload_0
      10: invokevirtual #58                 // Method getMaxRetries:()I
      13: iadd
      14: istore_2
      15: iload_2
      16: bipush        59
      18: imul
      19: aload_0
      20: invokevirtual #62                 // Method isThrowOnFailingErrorTest:()Z
      23: ifeq          31
      26: bipush        79
      28: goto          33
      31: bipush        97
      33: iadd
      34: istore_2
      35: aload_0
      36: invokevirtual #66                 // Method getDelay:()Ljava/time/Duration;
      39: astore_3
      40: iload_2
      41: bipush        59
      43: imul
      44: aload_3
      45: ifnonnull     53
      48: bipush        43
      50: goto          57
      53: aload_3
      54: invokevirtual #86                 // Method java/lang/Object.hashCode:()I
      57: iadd
      58: istore_2
      59: aload_0
      60: invokevirtual #74                 // Method getErrorTest:()Ljava/util/function/Predicate;
      63: astore        4
      65: iload_2
      66: bipush        59
      68: imul
      69: aload         4
      71: ifnonnull     79
      74: bipush        43
      76: goto          84
      79: aload         4
      81: invokevirtual #86                 // Method java/lang/Object.hashCode:()I
      84: iadd
      85: istore_2
      86: aload_0
      87: invokevirtual #77                 // Method getSuccessLogger:()Ljava/util/function/Consumer;
      90: astore        5
      92: iload_2
      93: bipush        59
      95: imul
      96: aload         5
      98: ifnonnull     106
     101: bipush        43
     103: goto          111
     106: aload         5
     108: invokevirtual #86                 // Method java/lang/Object.hashCode:()I
     111: iadd
     112: istore_2
     113: aload_0
     114: invokevirtual #80                 // Method getExceptionLogger:()Ljava/util/function/Consumer;
     117: astore        6
     119: iload_2
     120: bipush        59
     122: imul
     123: aload         6
     125: ifnonnull     133
     128: bipush        43
     130: goto          138
     133: aload         6
     135: invokevirtual #86                 // Method java/lang/Object.hashCode:()I
     138: iadd
     139: istore_2
     140: aload_0
     141: invokevirtual #83                 // Method getErrorMapper:()Ljava/util/function/Function;
     144: astore        7
     146: iload_2
     147: bipush        59
     149: imul
     150: aload         7
     152: ifnonnull     160
     155: bipush        43
     157: goto          165
     160: aload         7
     162: invokevirtual #86                 // Method java/lang/Object.hashCode:()I
     165: iadd
     166: istore_2
     167: iload_2
     168: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getDelay:()Ljava/time/Duration;
       4: aload_0
       5: invokevirtual #58                 // Method getMaxRetries:()I
       8: aload_0
       9: invokevirtual #74                 // Method getErrorTest:()Ljava/util/function/Predicate;
      12: aload_0
      13: invokevirtual #62                 // Method isThrowOnFailingErrorTest:()Z
      16: aload_0
      17: invokevirtual #77                 // Method getSuccessLogger:()Ljava/util/function/Consumer;
      20: aload_0
      21: invokevirtual #80                 // Method getExceptionLogger:()Ljava/util/function/Consumer;
      24: aload_0
      25: invokevirtual #83                 // Method getErrorMapper:()Ljava/util/function/Function;
      28: invokedynamic #89,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/time/Duration;ILjava/util/function/Predicate;ZLjava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Function;)Ljava/lang/String;
      33: areturn

  private static java.lang.Object lambda$$default$errorMapper$3(java.lang.Throwable);
    Code:
       0: aload_0
       1: areturn

  private static void lambda$$default$exceptionLogger$2(io.fluxcapacitor.common.RetryStatus);
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method io/fluxcapacitor/common/RetryStatus.getNumberOfTimesRetried:()I
       4: ifne          54
       7: getstatic     #98                 // Field log:Lorg/slf4j/Logger;
      10: ldc           #102                // String Task {} failed. Retrying every {} ms...
      12: iconst_3
      13: anewarray     #21                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_0
      19: invokevirtual #104                // Method io/fluxcapacitor/common/RetryStatus.getTask:()Ljava/lang/Object;
      22: aastore
      23: dup
      24: iconst_1
      25: aload_0
      26: invokevirtual #108                // Method io/fluxcapacitor/common/RetryStatus.getRetryConfiguration:()Lio/fluxcapacitor/common/RetryConfiguration;
      29: invokevirtual #66                 // Method getDelay:()Ljava/time/Duration;
      32: invokevirtual #112                // Method java/time/Duration.toMillis:()J
      35: invokestatic  #116                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: aastore
      39: dup
      40: iconst_2
      41: aload_0
      42: invokevirtual #122                // Method io/fluxcapacitor/common/RetryStatus.getException:()Ljava/lang/Exception;
      45: aastore
      46: invokeinterface #126,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      51: goto          86
      54: aload_0
      55: invokevirtual #93                 // Method io/fluxcapacitor/common/RetryStatus.getNumberOfTimesRetried:()I
      58: aload_0
      59: invokevirtual #108                // Method io/fluxcapacitor/common/RetryStatus.getRetryConfiguration:()Lio/fluxcapacitor/common/RetryConfiguration;
      62: invokevirtual #58                 // Method getMaxRetries:()I
      65: if_icmplt     86
      68: getstatic     #98                 // Field log:Lorg/slf4j/Logger;
      71: ldc           #132                // String Task {} failed permanently. Not retrying.
      73: aload_0
      74: invokevirtual #104                // Method io/fluxcapacitor/common/RetryStatus.getTask:()Ljava/lang/Object;
      77: aload_0
      78: invokevirtual #122                // Method io/fluxcapacitor/common/RetryStatus.getException:()Ljava/lang/Exception;
      81: invokeinterface #134,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      86: return

  private static void lambda$$default$successLogger$1(io.fluxcapacitor.common.RetryStatus);
    Code:
       0: getstatic     #98                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #137                // String Task {} completed successfully on retry
       5: aload_0
       6: invokevirtual #104                // Method io/fluxcapacitor/common/RetryStatus.getTask:()Ljava/lang/Object;
       9: invokeinterface #139,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: return

  private static boolean lambda$$default$errorTest$0(java.lang.Exception);
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: ldc           #27                 // class io/fluxcapacitor/common/RetryConfiguration
       2: invokestatic  #143                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #98                 // Field log:Lorg/slf4j/Logger;
       8: return
}
