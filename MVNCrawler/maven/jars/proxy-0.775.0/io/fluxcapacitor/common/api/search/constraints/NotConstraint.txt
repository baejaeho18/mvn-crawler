Compiled from "NotConstraint.java"
public final class io.fluxcapacitor.common.api.search.constraints.NotConstraint implements io.fluxcapacitor.common.api.search.Constraint {
  private final io.fluxcapacitor.common.api.search.Constraint not;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Object> decompose;

  public static io.fluxcapacitor.common.api.search.constraints.NotConstraint not(io.fluxcapacitor.common.api.search.Constraint);
    Code:
       0: new           #1                  // class io/fluxcapacitor/common/api/search/constraints/NotConstraint
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method "<init>":(Lio/fluxcapacitor/common/api/search/Constraint;)V
       8: areturn

  public boolean matches(io.fluxcapacitor.common.search.Document);
    Code:
       0: aload_0
       1: getfield      #7                  // Field not:Lio/fluxcapacitor/common/api/search/Constraint;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod io/fluxcapacitor/common/api/search/Constraint.matches:(Lio/fluxcapacitor/common/search/Document;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean hasPathConstraint();
    Code:
       0: aload_0
       1: getfield      #7                  // Field not:Lio/fluxcapacitor/common/api/search/Constraint;
       4: invokeinterface #17,  1           // InterfaceMethod io/fluxcapacitor/common/api/search/Constraint.hasPathConstraint:()Z
       9: ireturn

  public io.fluxcapacitor.common.api.search.Constraint getNot();
    Code:
       0: aload_0
       1: getfield      #7                  // Field not:Lio/fluxcapacitor/common/api/search/Constraint;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class io/fluxcapacitor/common/api/search/constraints/NotConstraint
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #1                  // class io/fluxcapacitor/common/api/search/constraints/NotConstraint
      20: astore_2
      21: aload_0
      22: invokevirtual #21                 // Method getNot:()Lio/fluxcapacitor/common/api/search/Constraint;
      25: astore_3
      26: aload_2
      27: invokevirtual #21                 // Method getNot:()Lio/fluxcapacitor/common/api/search/Constraint;
      30: astore        4
      32: aload_3
      33: ifnonnull     44
      36: aload         4
      38: ifnull        55
      41: goto          53
      44: aload_3
      45: aload         4
      47: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: iconst_1
      56: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #21                 // Method getNot:()Lio/fluxcapacitor/common/api/search/Constraint;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #31                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: iload_2
      30: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getNot:()Lio/fluxcapacitor/common/api/search/Constraint;
       4: invokedynamic #35,  0             // InvokeDynamic #0:makeConcatWithConstants:(Lio/fluxcapacitor/common/api/search/Constraint;)Ljava/lang/String;
       9: areturn

  private io.fluxcapacitor.common.api.search.constraints.NotConstraint(io.fluxcapacitor.common.api.search.Constraint);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #42                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #44                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #45                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_1
      16: ifnonnull     29
      19: new           #49                 // class java/lang/NullPointerException
      22: dup
      23: ldc           #51                 // String not is marked non-null but is null
      25: invokespecial #53                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #7                  // Field not:Lio/fluxcapacitor/common/api/search/Constraint;
      34: return

  public io.fluxcapacitor.common.api.search.Constraint decompose();
    Code:
       0: aload_0
       1: getfield      #45                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     81
      12: aload_0
      13: getfield      #45                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      16: dup
      17: astore_2
      18: monitorenter
      19: aload_0
      20: getfield      #45                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: astore_1
      27: aload_1
      28: ifnonnull     69
      31: new           #1                  // class io/fluxcapacitor/common/api/search/constraints/NotConstraint
      34: dup
      35: aload_0
      36: invokevirtual #21                 // Method getNot:()Lio/fluxcapacitor/common/api/search/Constraint;
      39: invokeinterface #60,  1           // InterfaceMethod io/fluxcapacitor/common/api/search/Constraint.decompose:()Lio/fluxcapacitor/common/api/search/Constraint;
      44: invokespecial #3                  // Method "<init>":(Lio/fluxcapacitor/common/api/search/Constraint;)V
      47: astore_3
      48: aload_3
      49: ifnonnull     59
      52: aload_0
      53: getfield      #45                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      56: goto          60
      59: aload_3
      60: astore_1
      61: aload_0
      62: getfield      #45                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      65: aload_1
      66: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      69: aload_2
      70: monitorexit
      71: goto          81
      74: astore        4
      76: aload_2
      77: monitorexit
      78: aload         4
      80: athrow
      81: aload_1
      82: aload_0
      83: getfield      #45                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      86: if_acmpne     93
      89: aconst_null
      90: goto          94
      93: aload_1
      94: checkcast     #12                 // class io/fluxcapacitor/common/api/search/Constraint
      97: areturn
    Exception table:
       from    to  target type
          19    71    74   any
          74    78    74   any
}
