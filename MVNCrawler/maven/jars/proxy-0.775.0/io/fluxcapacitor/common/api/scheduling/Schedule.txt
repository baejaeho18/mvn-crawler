Compiled from "Schedule.java"
public final class io.fluxcapacitor.common.api.scheduling.Schedule extends io.fluxcapacitor.common.api.Command {
  private final java.util.List<io.fluxcapacitor.common.api.scheduling.SerializedSchedule> messages;

  private final io.fluxcapacitor.common.Guarantee guarantee;

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #1                  // Field messages:Ljava/util/List;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
       9: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      14: areturn

  public java.lang.Object toMetric();
    Code:
       0: new           #17                 // class io/fluxcapacitor/common/api/scheduling/Schedule$Metric
       3: dup
       4: aload_0
       5: getfield      #1                  // Field messages:Ljava/util/List;
       8: invokeinterface #19,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      13: invokedynamic #23,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      18: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      23: invokestatic  #33                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      26: invokeinterface #39,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      31: checkcast     #8                  // class java/util/List
      34: aload_0
      35: getfield      #1                  // Field messages:Ljava/util/List;
      38: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      43: invokespecial #43                 // Method io/fluxcapacitor/common/api/scheduling/Schedule$Metric."<init>":(Ljava/util/List;I)V
      46: areturn

  public io.fluxcapacitor.common.api.scheduling.Schedule(java.util.List<io.fluxcapacitor.common.api.scheduling.SerializedSchedule>, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method io/fluxcapacitor/common/api/Command."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field messages:Ljava/util/List;
       9: aload_0
      10: aload_2
      11: putfield      #52                 // Field guarantee:Lio/fluxcapacitor/common/Guarantee;
      14: return

  public java.util.List<io.fluxcapacitor.common.api.scheduling.SerializedSchedule> getMessages();
    Code:
       0: aload_0
       1: getfield      #1                  // Field messages:Ljava/util/List;
       4: areturn

  public io.fluxcapacitor.common.Guarantee getGuarantee();
    Code:
       0: aload_0
       1: getfield      #52                 // Field guarantee:Lio/fluxcapacitor/common/Guarantee;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class io/fluxcapacitor/common/api/scheduling/Schedule
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class io/fluxcapacitor/common/api/scheduling/Schedule
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #56                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #60                 // Method getMessages:()Ljava/util/List;
      35: astore_3
      36: aload_2
      37: invokevirtual #60                 // Method getMessages:()Ljava/util/List;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #69                 // Method getGuarantee:()Lio/fluxcapacitor/common/Guarantee;
      69: astore        5
      71: aload_2
      72: invokevirtual #69                 // Method getGuarantee:()Lio/fluxcapacitor/common/Guarantee;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: iconst_1
     103: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class io/fluxcapacitor/common/api/scheduling/Schedule
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #60                 // Method getMessages:()Ljava/util/List;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #73                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #69                 // Method getGuarantee:()Lio/fluxcapacitor/common/Guarantee;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #73                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: ireturn
}
