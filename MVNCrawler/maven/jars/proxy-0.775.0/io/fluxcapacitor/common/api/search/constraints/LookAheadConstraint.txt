Compiled from "LookAheadConstraint.java"
public final class io.fluxcapacitor.common.api.search.constraints.LookAheadConstraint extends io.fluxcapacitor.common.api.search.constraints.PathConstraint {
  private final java.lang.String lookAhead;

  private final java.util.List<java.lang.String> paths;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Object> decompose;

  public static io.fluxcapacitor.common.api.search.Constraint lookAhead(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
       4: ifeq          13
       7: getstatic     #7                  // Field io/fluxcapacitor/common/api/search/NoOpConstraint.instance:Lio/fluxcapacitor/common/api/search/NoOpConstraint;
      10: goto          25
      13: new           #13                 // class io/fluxcapacitor/common/api/search/constraints/LookAheadConstraint
      16: dup
      17: aload_0
      18: aload_1
      19: invokestatic  #15                 // InterfaceMethod java/util/List.of:([Ljava/lang/Object;)Ljava/util/List;
      22: invokespecial #21                 // Method "<init>":(Ljava/lang/String;Ljava/util/List;)V
      25: areturn

  public boolean matches(io.fluxcapacitor.common.search.Document);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method decompose:()Lio/fluxcapacitor/common/api/search/Constraint;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod io/fluxcapacitor/common/api/search/Constraint.matches:(Lio/fluxcapacitor/common/search/Document;)Z
      10: ireturn

  protected boolean matches(io.fluxcapacitor.common.search.Document$Entry);
    Code:
       0: new           #35                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #37                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String getLookAhead();
    Code:
       0: aload_0
       1: getfield      #40                 // Field lookAhead:Ljava/lang/String;
       4: areturn

  public java.util.List<java.lang.String> getPaths();
    Code:
       0: aload_0
       1: getfield      #44                 // Field paths:Ljava/util/List;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class io/fluxcapacitor/common/api/search/constraints/LookAheadConstraint
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #13                 // class io/fluxcapacitor/common/api/search/constraints/LookAheadConstraint
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #48                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #52                 // Method getLookAhead:()Ljava/lang/String;
      35: astore_3
      36: aload_2
      37: invokevirtual #52                 // Method getLookAhead:()Ljava/lang/String;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #56                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #61                 // Method getPaths:()Ljava/util/List;
      69: astore        5
      71: aload_2
      72: invokevirtual #61                 // Method getPaths:()Ljava/util/List;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #56                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: iconst_1
     103: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #13                 // class io/fluxcapacitor/common/api/search/constraints/LookAheadConstraint
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #52                 // Method getLookAhead:()Ljava/lang/String;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #65                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #61                 // Method getPaths:()Ljava/util/List;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #65                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getLookAhead:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #61                 // Method getPaths:()Ljava/util/List;
       8: invokedynamic #69,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
      13: areturn

  private io.fluxcapacitor.common.api.search.constraints.LookAheadConstraint(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method io/fluxcapacitor/common/api/search/constraints/PathConstraint."<init>":()V
       4: aload_0
       5: new           #76                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #78                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #79                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_1
      16: ifnonnull     29
      19: new           #82                 // class java/lang/NullPointerException
      22: dup
      23: ldc           #84                 // String lookAhead is marked non-null but is null
      25: invokespecial #86                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #40                 // Field lookAhead:Ljava/lang/String;
      34: aload_0
      35: aload_2
      36: putfield      #44                 // Field paths:Ljava/util/List;
      39: return

  public io.fluxcapacitor.common.api.search.constraints.LookAheadConstraint withPaths(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field paths:Ljava/util/List;
       4: aload_1
       5: if_acmpne     12
       8: aload_0
       9: goto          24
      12: new           #13                 // class io/fluxcapacitor/common/api/search/constraints/LookAheadConstraint
      15: dup
      16: aload_0
      17: getfield      #40                 // Field lookAhead:Ljava/lang/String;
      20: aload_1
      21: invokespecial #21                 // Method "<init>":(Ljava/lang/String;Ljava/util/List;)V
      24: areturn

  public io.fluxcapacitor.common.api.search.Constraint decompose();
    Code:
       0: aload_0
       1: getfield      #79                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     92
      12: aload_0
      13: getfield      #79                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      16: dup
      17: astore_2
      18: monitorenter
      19: aload_0
      20: getfield      #79                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: astore_1
      27: aload_1
      28: ifnonnull     80
      31: aload_0
      32: invokevirtual #52                 // Method getLookAhead:()Ljava/lang/String;
      35: iconst_0
      36: iconst_1
      37: iconst_1
      38: aload_0
      39: invokevirtual #61                 // Method getPaths:()Ljava/util/List;
      42: invokedynamic #93,  0             // InvokeDynamic #1:apply:()Ljava/util/function/IntFunction;
      47: invokeinterface #97,  2           // InterfaceMethod java/util/List.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      52: checkcast     #101                // class "[Ljava/lang/String;"
      55: invokestatic  #103                // Method io/fluxcapacitor/common/api/search/constraints/ContainsConstraint.contains:(Ljava/lang/String;ZZZ[Ljava/lang/String;)Lio/fluxcapacitor/common/api/search/Constraint;
      58: astore_3
      59: aload_3
      60: ifnonnull     70
      63: aload_0
      64: getfield      #79                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      67: goto          71
      70: aload_3
      71: astore_1
      72: aload_0
      73: getfield      #79                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      76: aload_1
      77: invokevirtual #109                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      80: aload_2
      81: monitorexit
      82: goto          92
      85: astore        4
      87: aload_2
      88: monitorexit
      89: aload         4
      91: athrow
      92: aload_1
      93: aload_0
      94: getfield      #79                 // Field decompose:Ljava/util/concurrent/atomic/AtomicReference;
      97: if_acmpne     104
     100: aconst_null
     101: goto          105
     104: aload_1
     105: checkcast     #30                 // class io/fluxcapacitor/common/api/search/Constraint
     108: areturn
    Exception table:
       from    to  target type
          19    82    85   any
          85    89    85   any

  public io.fluxcapacitor.common.api.search.Constraint withPaths(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #113                // Method withPaths:(Ljava/util/List;)Lio/fluxcapacitor/common/api/search/constraints/LookAheadConstraint;
       5: areturn

  private static java.lang.String[] lambda$decompose$0(int);
    Code:
       0: iload_0
       1: anewarray     #117                // class java/lang/String
       4: areturn
}
