Compiled from "RetryConfiguration.java"
public class io.fluxcapacitor.common.RetryConfiguration$Builder {
  private boolean delay$set;

  private java.time.Duration delay$value;

  private boolean maxRetries$set;

  private int maxRetries$value;

  private boolean errorTest$set;

  private java.util.function.Predicate<java.lang.Exception> errorTest$value;

  private boolean throwOnFailingErrorTest$set;

  private boolean throwOnFailingErrorTest$value;

  private boolean successLogger$set;

  private java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus> successLogger$value;

  private boolean exceptionLogger$set;

  private java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus> exceptionLogger$value;

  private boolean errorMapper$set;

  private java.util.function.Function<java.lang.Throwable, ?> errorMapper$value;

  io.fluxcapacitor.common.RetryConfiguration$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public io.fluxcapacitor.common.RetryConfiguration$Builder delay(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field delay$value:Ljava/time/Duration;
       5: aload_0
       6: iconst_1
       7: putfield      #13                 // Field delay$set:Z
      10: aload_0
      11: areturn

  public io.fluxcapacitor.common.RetryConfiguration$Builder maxRetries(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field maxRetries$value:I
       5: aload_0
       6: iconst_1
       7: putfield      #21                 // Field maxRetries$set:Z
      10: aload_0
      11: areturn

  public io.fluxcapacitor.common.RetryConfiguration$Builder errorTest(java.util.function.Predicate<java.lang.Exception>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field errorTest$value:Ljava/util/function/Predicate;
       5: aload_0
       6: iconst_1
       7: putfield      #28                 // Field errorTest$set:Z
      10: aload_0
      11: areturn

  public io.fluxcapacitor.common.RetryConfiguration$Builder throwOnFailingErrorTest(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field throwOnFailingErrorTest$value:Z
       5: aload_0
       6: iconst_1
       7: putfield      #34                 // Field throwOnFailingErrorTest$set:Z
      10: aload_0
      11: areturn

  public io.fluxcapacitor.common.RetryConfiguration$Builder successLogger(java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field successLogger$value:Ljava/util/function/Consumer;
       5: aload_0
       6: iconst_1
       7: putfield      #41                 // Field successLogger$set:Z
      10: aload_0
      11: areturn

  public io.fluxcapacitor.common.RetryConfiguration$Builder exceptionLogger(java.util.function.Consumer<io.fluxcapacitor.common.RetryStatus>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field exceptionLogger$value:Ljava/util/function/Consumer;
       5: aload_0
       6: iconst_1
       7: putfield      #47                 // Field exceptionLogger$set:Z
      10: aload_0
      11: areturn

  public io.fluxcapacitor.common.RetryConfiguration$Builder errorMapper(java.util.function.Function<java.lang.Throwable, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field errorMapper$value:Ljava/util/function/Function;
       5: aload_0
       6: iconst_1
       7: putfield      #54                 // Field errorMapper$set:Z
      10: aload_0
      11: areturn

  public io.fluxcapacitor.common.RetryConfiguration build();
    Code:
       0: aload_0
       1: getfield      #7                  // Field delay$value:Ljava/time/Duration;
       4: astore_1
       5: aload_0
       6: getfield      #13                 // Field delay$set:Z
       9: ifne          16
      12: invokestatic  #57                 // Method io/fluxcapacitor/common/RetryConfiguration.$default$delay:()Ljava/time/Duration;
      15: astore_1
      16: aload_0
      17: getfield      #17                 // Field maxRetries$value:I
      20: istore_2
      21: aload_0
      22: getfield      #21                 // Field maxRetries$set:Z
      25: ifne          32
      28: invokestatic  #63                 // Method io/fluxcapacitor/common/RetryConfiguration.$default$maxRetries:()I
      31: istore_2
      32: aload_0
      33: getfield      #24                 // Field errorTest$value:Ljava/util/function/Predicate;
      36: astore_3
      37: aload_0
      38: getfield      #28                 // Field errorTest$set:Z
      41: ifne          48
      44: invokestatic  #67                 // Method io/fluxcapacitor/common/RetryConfiguration.$default$errorTest:()Ljava/util/function/Predicate;
      47: astore_3
      48: aload_0
      49: getfield      #31                 // Field throwOnFailingErrorTest$value:Z
      52: istore        4
      54: aload_0
      55: getfield      #34                 // Field throwOnFailingErrorTest$set:Z
      58: ifne          66
      61: invokestatic  #71                 // Method io/fluxcapacitor/common/RetryConfiguration.$default$throwOnFailingErrorTest:()Z
      64: istore        4
      66: aload_0
      67: getfield      #37                 // Field successLogger$value:Ljava/util/function/Consumer;
      70: astore        5
      72: aload_0
      73: getfield      #41                 // Field successLogger$set:Z
      76: ifne          84
      79: invokestatic  #75                 // Method io/fluxcapacitor/common/RetryConfiguration.$default$successLogger:()Ljava/util/function/Consumer;
      82: astore        5
      84: aload_0
      85: getfield      #44                 // Field exceptionLogger$value:Ljava/util/function/Consumer;
      88: astore        6
      90: aload_0
      91: getfield      #47                 // Field exceptionLogger$set:Z
      94: ifne          102
      97: invokestatic  #79                 // Method io/fluxcapacitor/common/RetryConfiguration.$default$exceptionLogger:()Ljava/util/function/Consumer;
     100: astore        6
     102: aload_0
     103: getfield      #50                 // Field errorMapper$value:Ljava/util/function/Function;
     106: astore        7
     108: aload_0
     109: getfield      #54                 // Field errorMapper$set:Z
     112: ifne          120
     115: invokestatic  #82                 // Method io/fluxcapacitor/common/RetryConfiguration.$default$errorMapper:()Ljava/util/function/Function;
     118: astore        7
     120: new           #58                 // class io/fluxcapacitor/common/RetryConfiguration
     123: dup
     124: aload_1
     125: iload_2
     126: aload_3
     127: iload         4
     129: aload         5
     131: aload         6
     133: aload         7
     135: invokespecial #86                 // Method io/fluxcapacitor/common/RetryConfiguration."<init>":(Ljava/time/Duration;ILjava/util/function/Predicate;ZLjava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Function;)V
     138: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field delay$value:Ljava/time/Duration;
       4: aload_0
       5: getfield      #17                 // Field maxRetries$value:I
       8: aload_0
       9: getfield      #24                 // Field errorTest$value:Ljava/util/function/Predicate;
      12: aload_0
      13: getfield      #31                 // Field throwOnFailingErrorTest$value:Z
      16: aload_0
      17: getfield      #37                 // Field successLogger$value:Ljava/util/function/Consumer;
      20: aload_0
      21: getfield      #44                 // Field exceptionLogger$value:Ljava/util/function/Consumer;
      24: aload_0
      25: getfield      #50                 // Field errorMapper$value:Ljava/util/function/Function;
      28: invokedynamic #89,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/time/Duration;ILjava/util/function/Predicate;ZLjava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Function;)Ljava/lang/String;
      33: areturn
}
