Compiled from "MemoizingBiFunction.java"
public class io.fluxcapacitor.common.MemoizingBiFunction<T, U, R> implements java.util.function.BiFunction<T, U, R> {
  private final io.fluxcapacitor.common.MemoizingFunction<io.fluxcapacitor.common.Pair<T, U>, R> function;

  public io.fluxcapacitor.common.MemoizingBiFunction(java.util.function.BiFunction<T, U, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Ljava/util/function/BiFunction;Ljava/time/Duration;Ljava/util/function/Supplier;)V
       7: return

  public io.fluxcapacitor.common.MemoizingBiFunction(java.util.function.BiFunction<T, U, R>, java.time.Duration, java.util.function.Supplier<java.time.Clock>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #12                 // class io/fluxcapacitor/common/MemoizingFunction
       8: dup
       9: aload_1
      10: invokedynamic #14,  0             // InvokeDynamic #0:apply:(Ljava/util/function/BiFunction;)Ljava/util/function/Function;
      15: aload_2
      16: aload_3
      17: invokespecial #18                 // Method io/fluxcapacitor/common/MemoizingFunction."<init>":(Ljava/util/function/Function;Ljava/time/Duration;Ljava/util/function/Supplier;)V
      20: putfield      #21                 // Field function:Lio/fluxcapacitor/common/MemoizingFunction;
      23: return

  public R apply(T, U);
    Code:
       0: aload_0
       1: getfield      #21                 // Field function:Lio/fluxcapacitor/common/MemoizingFunction;
       4: new           #25                 // class io/fluxcapacitor/common/Pair
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #27                 // Method io/fluxcapacitor/common/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      13: invokevirtual #30                 // Method io/fluxcapacitor/common/MemoizingFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public boolean isCached(T, U);
    Code:
       0: aload_0
       1: getfield      #21                 // Field function:Lio/fluxcapacitor/common/MemoizingFunction;
       4: new           #25                 // class io/fluxcapacitor/common/Pair
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #27                 // Method io/fluxcapacitor/common/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      13: invokevirtual #33                 // Method io/fluxcapacitor/common/MemoizingFunction.isCached:(Ljava/lang/Object;)Z
      16: ireturn

  public io.fluxcapacitor.common.MemoizingBiFunction(io.fluxcapacitor.common.MemoizingFunction<io.fluxcapacitor.common.Pair<T, U>, R>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field function:Lio/fluxcapacitor/common/MemoizingFunction;
       9: return

  private static java.lang.Object lambda$new$0(java.util.function.BiFunction, io.fluxcapacitor.common.Pair);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method io/fluxcapacitor/common/Pair.getFirst:()Ljava/lang/Object;
       5: aload_1
       6: invokevirtual #41                 // Method io/fluxcapacitor/common/Pair.getSecond:()Ljava/lang/Object;
       9: invokeinterface #44,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn
}
