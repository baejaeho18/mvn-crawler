Compiled from "DefaultRequestHandler.java"
public class io.fluxcapacitor.javaclient.publishing.DefaultRequestHandler implements io.fluxcapacitor.javaclient.publishing.RequestHandler {
  private static final org.slf4j.Logger log;

  private final io.fluxcapacitor.javaclient.configuration.client.Client client;

  private final io.fluxcapacitor.common.MessageType resultType;

  private final java.time.Duration timeout;

  private final java.lang.String responseConsumerName;

  private final java.util.Map<java.lang.Integer, java.util.concurrent.CompletableFuture<io.fluxcapacitor.common.api.SerializedMessage>> callbacks;

  private final java.util.concurrent.atomic.AtomicInteger nextId;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private volatile io.fluxcapacitor.common.Registration registration;

  public io.fluxcapacitor.javaclient.publishing.DefaultRequestHandler(io.fluxcapacitor.javaclient.configuration.client.Client, io.fluxcapacitor.common.MessageType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc2_w        #1                  // long 200l
       6: invokestatic  #3                  // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
       9: ldc           #9                  // String %s_%s
      11: iconst_2
      12: anewarray     #11                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_1
      18: invokeinterface #13,  1           // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.name:()Ljava/lang/String;
      23: aastore
      24: dup
      25: iconst_1
      26: ldc           #19                 // String $request-handler
      28: aastore
      29: invokestatic  #21                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokespecial #27                 // Method "<init>":(Lio/fluxcapacitor/javaclient/configuration/client/Client;Lio/fluxcapacitor/common/MessageType;Ljava/time/Duration;Ljava/lang/String;)V
      35: return

  public java.util.concurrent.CompletableFuture<io.fluxcapacitor.common.api.SerializedMessage> sendRequest(io.fluxcapacitor.common.api.SerializedMessage, java.util.function.Consumer<io.fluxcapacitor.common.api.SerializedMessage>);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method ensureStarted:()V
       4: aload_0
       5: getfield      #37                 // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      11: istore_3
      12: new           #47                 // class java/util/concurrent/CompletableFuture
      15: dup
      16: invokespecial #49                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      19: aload_0
      20: getfield      #51                 // Field timeout:Ljava/time/Duration;
      23: invokevirtual #55                 // Method java/time/Duration.getSeconds:()J
      26: getstatic     #59                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      29: invokevirtual #65                 // Method java/util/concurrent/CompletableFuture.orTimeout:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;
      32: aload_0
      33: iload_3
      34: invokedynamic #69,  0             // InvokeDynamic #0:accept:(Lio/fluxcapacitor/javaclient/publishing/DefaultRequestHandler;I)Ljava/util/function/BiConsumer;
      39: invokevirtual #73                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      42: astore        4
      44: aload_0
      45: getfield      #77                 // Field callbacks:Ljava/util/Map;
      48: iload_3
      49: invokestatic  #81                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aload         4
      54: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_1
      61: iload_3
      62: invokestatic  #81                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: invokevirtual #93                 // Method io/fluxcapacitor/common/api/SerializedMessage.setRequestId:(Ljava/lang/Integer;)V
      68: aload_1
      69: aload_0
      70: getfield      #99                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      73: invokeinterface #103,  1          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.id:()Ljava/lang/String;
      78: invokevirtual #106                // Method io/fluxcapacitor/common/api/SerializedMessage.setSource:(Ljava/lang/String;)V
      81: aload_2
      82: aload_1
      83: invokeinterface #110,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      88: aload         4
      90: areturn

  public java.util.List<java.util.concurrent.CompletableFuture<io.fluxcapacitor.common.api.SerializedMessage>> sendRequests(java.util.List<io.fluxcapacitor.common.api.SerializedMessage>, java.util.function.Consumer<java.util.List<io.fluxcapacitor.common.api.SerializedMessage>>);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method ensureStarted:()V
       4: new           #115                // class java/util/ArrayList
       7: dup
       8: invokespecial #117                // Method java/util/ArrayList."<init>":()V
      11: astore_3
      12: aload_2
      13: aload_1
      14: invokeinterface #118,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      19: aload_0
      20: aload_3
      21: invokedynamic #124,  0            // InvokeDynamic #1:accept:(Lio/fluxcapacitor/javaclient/publishing/DefaultRequestHandler;Ljava/util/List;)Ljava/util/function/Consumer;
      26: invokeinterface #127,  2          // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      31: invokestatic  #133                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      34: invokeinterface #139,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      39: checkcast     #119                // class java/util/List
      42: invokeinterface #110,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      47: aload_3
      48: areturn

  protected void handleMessages(java.util.List<io.fluxcapacitor.common.api.SerializedMessage>);
    Code:
       0: aload_1
       1: invokeinterface #118,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #143,  0            // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      11: invokeinterface #147,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      16: aload_0
      17: invokedynamic #151,  0            // InvokeDynamic #3:accept:(Lio/fluxcapacitor/javaclient/publishing/DefaultRequestHandler;)Ljava/util/function/Consumer;
      22: invokeinterface #154,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      27: return

  protected void ensureStarted();
    Code:
       0: aload_0
       1: getfield      #158                // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #162                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          76
      12: aload_0
      13: aload_0
      14: invokedynamic #168,  0            // InvokeDynamic #4:accept:(Lio/fluxcapacitor/javaclient/publishing/DefaultRequestHandler;)Ljava/util/function/Consumer;
      19: aload_0
      20: getfield      #169                // Field resultType:Lio/fluxcapacitor/common/MessageType;
      23: invokestatic  #173                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration.builder:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      26: aload_0
      27: getfield      #179                // Field responseConsumerName:Ljava/lang/String;
      30: invokevirtual #183                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.name:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      33: iconst_1
      34: invokevirtual #188                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.ignoreSegment:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      37: iconst_1
      38: invokevirtual #192                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.clientControlledIndex:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      41: iconst_1
      42: invokevirtual #195                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.filterMessageTarget:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      45: invokestatic  #198                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.currentTime:()Ljava/time/Instant;
      48: ldc2_w        #204                // long 2l
      51: invokevirtual #206                // Method java/time/Instant.minusSeconds:(J)Ljava/time/Instant;
      54: invokestatic  #212                // Method io/fluxcapacitor/javaclient/tracking/IndexUtils.indexFromTimestamp:(Ljava/time/Instant;)J
      57: invokestatic  #218                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      60: invokevirtual #223                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.minIndex:(Ljava/lang/Long;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      63: invokevirtual #227                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.build:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
      66: aload_0
      67: getfield      #99                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      70: invokestatic  #231                // Method io/fluxcapacitor/javaclient/tracking/client/DefaultTracker.start:(Ljava/util/function/Consumer;Lio/fluxcapacitor/common/MessageType;Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;Lio/fluxcapacitor/javaclient/configuration/client/Client;)Lio/fluxcapacitor/common/Registration;
      73: putfield      #237                // Field registration:Lio/fluxcapacitor/common/Registration;
      76: return

  public void close();
    Code:
       0: ldc2_w        #204                // long 2l
       3: invokestatic  #3                  // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
       6: aload_0
       7: getfield      #77                 // Field callbacks:Ljava/util/Map;
      10: invokeinterface #241,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: invokestatic  #245                // Method io/fluxcapacitor/javaclient/common/ClientUtils.waitForResults:(Ljava/time/Duration;Ljava/util/Collection;)V
      18: aload_0
      19: getfield      #237                // Field registration:Lio/fluxcapacitor/common/Registration;
      22: ifnull        34
      25: aload_0
      26: getfield      #237                // Field registration:Lio/fluxcapacitor/common/Registration;
      29: invokeinterface #251,  1          // InterfaceMethod io/fluxcapacitor/common/Registration.cancel:()V
      34: return

  public io.fluxcapacitor.javaclient.publishing.DefaultRequestHandler(io.fluxcapacitor.javaclient.configuration.client.Client, io.fluxcapacitor.common.MessageType, java.time.Duration, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #256                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #257                // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #259                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #77                 // Field callbacks:Ljava/util/Map;
      15: aload_0
      16: new           #42                 // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #260                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #37                 // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: new           #163                // class java/util/concurrent/atomic/AtomicBoolean
      30: dup
      31: invokespecial #261                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      34: putfield      #158                // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      37: aload_0
      38: aload_1
      39: putfield      #99                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      42: aload_0
      43: aload_2
      44: putfield      #169                // Field resultType:Lio/fluxcapacitor/common/MessageType;
      47: aload_0
      48: aload_3
      49: putfield      #51                 // Field timeout:Ljava/time/Duration;
      52: aload_0
      53: aload         4
      55: putfield      #179                // Field responseConsumerName:Ljava/lang/String;
      58: return

  private void lambda$handleMessages$4(io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_0
       1: getfield      #77                 // Field callbacks:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #262                // Method io/fluxcapacitor/common/api/SerializedMessage.getRequestId:()Ljava/lang/Integer;
       8: invokeinterface #266,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #47                 // class java/util/concurrent/CompletableFuture
      16: astore_2
      17: aload_2
      18: ifnonnull     41
      21: getstatic     #270                // Field log:Lorg/slf4j/Logger;
      24: ldc_w         #274                // String Received response with index {} for unknown request {}
      27: aload_1
      28: invokevirtual #276                // Method io/fluxcapacitor/common/api/SerializedMessage.getIndex:()Ljava/lang/Long;
      31: aload_1
      32: invokevirtual #262                // Method io/fluxcapacitor/common/api/SerializedMessage.getRequestId:()Ljava/lang/Integer;
      35: invokeinterface #280,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      40: return
      41: aload_2
      42: aload_1
      43: invokevirtual #286                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      46: pop
      47: return

  private static boolean lambda$handleMessages$3(io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_0
       1: invokevirtual #262                // Method io/fluxcapacitor/common/api/SerializedMessage.getRequestId:()Ljava/lang/Integer;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private void lambda$sendRequests$2(java.util.List, io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_0
       1: getfield      #37                 // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: istore_3
       8: new           #47                 // class java/util/concurrent/CompletableFuture
      11: dup
      12: invokespecial #49                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      15: aload_0
      16: getfield      #51                 // Field timeout:Ljava/time/Duration;
      19: invokevirtual #55                 // Method java/time/Duration.getSeconds:()J
      22: getstatic     #59                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      25: invokevirtual #65                 // Method java/util/concurrent/CompletableFuture.orTimeout:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;
      28: aload_0
      29: iload_3
      30: invokedynamic #290,  0            // InvokeDynamic #5:accept:(Lio/fluxcapacitor/javaclient/publishing/DefaultRequestHandler;I)Ljava/util/function/BiConsumer;
      35: invokevirtual #73                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      38: astore        4
      40: aload_0
      41: getfield      #77                 // Field callbacks:Ljava/util/Map;
      44: iload_3
      45: invokestatic  #81                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: aload         4
      50: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_2
      57: iload_3
      58: invokestatic  #81                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: invokevirtual #93                 // Method io/fluxcapacitor/common/api/SerializedMessage.setRequestId:(Ljava/lang/Integer;)V
      64: aload_2
      65: aload_0
      66: getfield      #99                 // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
      69: invokeinterface #103,  1          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.id:()Ljava/lang/String;
      74: invokevirtual #106                // Method io/fluxcapacitor/common/api/SerializedMessage.setSource:(Ljava/lang/String;)V
      77: aload_1
      78: aload         4
      80: invokeinterface #291,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: return

  private void lambda$sendRequests$1(int, io.fluxcapacitor.common.api.SerializedMessage, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #77                 // Field callbacks:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #81                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #266,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  private void lambda$sendRequest$0(int, io.fluxcapacitor.common.api.SerializedMessage, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #77                 // Field callbacks:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #81                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #266,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  static {};
    Code:
       0: ldc           #28                 // class io/fluxcapacitor/javaclient/publishing/DefaultRequestHandler
       2: invokestatic  #294                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #270                // Field log:Lorg/slf4j/Logger;
       8: return
}
