Compiled from "WebsocketGatewayClient.java"
public class io.fluxcapacitor.javaclient.publishing.client.WebsocketGatewayClient extends io.fluxcapacitor.javaclient.common.websocket.AbstractWebsocketClient implements io.fluxcapacitor.javaclient.publishing.client.GatewayClient {
  private final java.util.Set<java.util.function.Consumer<io.fluxcapacitor.javaclient.publishing.client.MessageDispatch>> monitors;

  private final io.fluxcapacitor.common.api.Metadata metricsMetadata;

  private final io.fluxcapacitor.common.MessageType messageType;

  public io.fluxcapacitor.javaclient.publishing.client.WebsocketGatewayClient(java.lang.String, io.fluxcapacitor.javaclient.configuration.client.WebSocketClient$ClientConfig, io.fluxcapacitor.common.MessageType);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
       5: aload_2
       6: aload_3
       7: invokespecial #7                  // Method "<init>":(Ljava/net/URI;Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig;Lio/fluxcapacitor/common/MessageType;)V
      10: return

  public io.fluxcapacitor.javaclient.publishing.client.WebsocketGatewayClient(java.net.URI, io.fluxcapacitor.javaclient.configuration.client.WebSocketClient$ClientConfig, io.fluxcapacitor.common.MessageType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_3
       5: getstatic     #13                 // Field io/fluxcapacitor/common/MessageType.METRICS:Lio/fluxcapacitor/common/MessageType;
       8: if_acmpeq     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: invokespecial #19                 // Method "<init>":(Ljava/net/URI;Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig;Lio/fluxcapacitor/common/MessageType;Z)V
      19: return

  public io.fluxcapacitor.javaclient.publishing.client.WebsocketGatewayClient(java.net.URI, io.fluxcapacitor.javaclient.configuration.client.WebSocketClient$ClientConfig, io.fluxcapacitor.common.MessageType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload         4
       5: aload_2
       6: invokevirtual #22                 // Method io/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig.getGatewaySessions:()Ljava/util/Map;
       9: aload_3
      10: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #34                 // class java/lang/Integer
      18: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
      21: invokespecial #40                 // Method io/fluxcapacitor/javaclient/common/websocket/AbstractWebsocketClient."<init>":(Ljava/net/URI;Lio/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig;ZI)V
      24: aload_0
      25: new           #45                 // class java/util/concurrent/CopyOnWriteArraySet
      28: dup
      29: invokespecial #47                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      32: putfield      #50                 // Field monitors:Ljava/util/Set;
      35: aload_0
      36: ldc           #54                 // String messageType
      38: aload_3
      39: invokestatic  #56                 // Method io/fluxcapacitor/common/api/Metadata.of:(Ljava/lang/Object;Ljava/lang/Object;)Lio/fluxcapacitor/common/api/Metadata;
      42: putfield      #62                 // Field metricsMetadata:Lio/fluxcapacitor/common/api/Metadata;
      45: aload_0
      46: aload_3
      47: putfield      #66                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      50: return

  public java.util.concurrent.CompletableFuture<java.lang.Void> send(io.fluxcapacitor.common.Guarantee, io.fluxcapacitor.common.api.SerializedMessage...);
    Code:
       0: aload_0
       1: new           #68                 // class io/fluxcapacitor/common/api/publishing/Append
       4: dup
       5: aload_2
       6: invokestatic  #70                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       9: aload_1
      10: invokespecial #76                 // Method io/fluxcapacitor/common/api/publishing/Append."<init>":(Ljava/util/List;Lio/fluxcapacitor/common/Guarantee;)V
      13: invokevirtual #79                 // Method sendCommand:(Lio/fluxcapacitor/common/api/Command;)Ljava/util/concurrent/CompletableFuture;
      16: astore_3
      17: aload_0
      18: getfield      #50                 // Field monitors:Ljava/util/Set;
      21: invokeinterface #83,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      26: ifne          62
      29: new           #89                 // class io/fluxcapacitor/javaclient/publishing/client/MessageDispatch
      32: dup
      33: aload_2
      34: invokestatic  #70                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      37: aload_0
      38: getfield      #66                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      41: invokespecial #91                 // Method io/fluxcapacitor/javaclient/publishing/client/MessageDispatch."<init>":(Ljava/util/List;Lio/fluxcapacitor/common/MessageType;)V
      44: astore        4
      46: aload_0
      47: getfield      #50                 // Field monitors:Ljava/util/Set;
      50: aload         4
      52: invokedynamic #94,  0             // InvokeDynamic #0:accept:(Lio/fluxcapacitor/javaclient/publishing/client/MessageDispatch;)Ljava/util/function/Consumer;
      57: invokeinterface #98,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      62: aload_3
      63: areturn
      64: astore        5
      66: aload_0
      67: getfield      #50                 // Field monitors:Ljava/util/Set;
      70: invokeinterface #83,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      75: ifne          111
      78: new           #89                 // class io/fluxcapacitor/javaclient/publishing/client/MessageDispatch
      81: dup
      82: aload_2
      83: invokestatic  #70                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      86: aload_0
      87: getfield      #66                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      90: invokespecial #91                 // Method io/fluxcapacitor/javaclient/publishing/client/MessageDispatch."<init>":(Ljava/util/List;Lio/fluxcapacitor/common/MessageType;)V
      93: astore        6
      95: aload_0
      96: getfield      #50                 // Field monitors:Ljava/util/Set;
      99: aload         6
     101: invokedynamic #94,  0             // InvokeDynamic #0:accept:(Lio/fluxcapacitor/javaclient/publishing/client/MessageDispatch;)Ljava/util/function/Consumer;
     106: invokeinterface #98,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
     111: aload         5
     113: athrow
    Exception table:
       from    to  target type
           0    17    64   any
          64    66    64   any

  protected io.fluxcapacitor.common.api.Metadata metricsMetadata();
    Code:
       0: aload_0
       1: getfield      #62                 // Field metricsMetadata:Lio/fluxcapacitor/common/api/Metadata;
       4: areturn

  public io.fluxcapacitor.common.Registration registerMonitor(java.util.function.Consumer<io.fluxcapacitor.javaclient.publishing.client.MessageDispatch>);
    Code:
       0: aload_0
       1: getfield      #50                 // Field monitors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #102,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_1
      13: invokedynamic #106,  0            // InvokeDynamic #1:cancel:(Lio/fluxcapacitor/javaclient/publishing/client/WebsocketGatewayClient;Ljava/util/function/Consumer;)Lio/fluxcapacitor/common/Registration;
      18: areturn

  private void lambda$registerMonitor$1(java.util.function.Consumer);
    Code:
       0: aload_0
       1: getfield      #50                 // Field monitors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #110,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private static void lambda$send$0(io.fluxcapacitor.javaclient.publishing.client.MessageDispatch, java.util.function.Consumer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #113,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
       7: return
}
