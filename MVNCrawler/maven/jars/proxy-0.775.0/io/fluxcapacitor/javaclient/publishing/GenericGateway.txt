Compiled from "GenericGateway.java"
public interface io.fluxcapacitor.javaclient.publishing.GenericGateway extends io.fluxcapacitor.javaclient.tracking.handling.HasLocalHandlers {
  public default void sendAndForget(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method io/fluxcapacitor/javaclient/common/Message.asMessage:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
       5: getstatic     #7                  // Field io/fluxcapacitor/common/Guarantee.NONE:Lio/fluxcapacitor/common/Guarantee;
       8: invokeinterface #13,  3           // InterfaceMethod sendAndForget:(Lio/fluxcapacitor/javaclient/common/Message;Lio/fluxcapacitor/common/Guarantee;)Ljava/util/concurrent/CompletableFuture;
      13: invokevirtual #19                 // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
      16: pop
      17: goto          23
      20: astore_2
      21: aload_2
      22: athrow
      23: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Throwable

  public default void sendAndForget(java.lang.Object, io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: new           #2                  // class io/fluxcapacitor/javaclient/common/Message
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #33                 // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)V
      10: getstatic     #7                  // Field io/fluxcapacitor/common/Guarantee.NONE:Lio/fluxcapacitor/common/Guarantee;
      13: invokeinterface #13,  3           // InterfaceMethod sendAndForget:(Lio/fluxcapacitor/javaclient/common/Message;Lio/fluxcapacitor/common/Guarantee;)Ljava/util/concurrent/CompletableFuture;
      18: invokevirtual #19                 // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
      21: pop
      22: goto          28
      25: astore_3
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           0    22    25   Class java/lang/Throwable

  public default void sendAndForget(java.lang.Object, io.fluxcapacitor.common.api.Metadata, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: new           #2                  // class io/fluxcapacitor/javaclient/common/Message
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #33                 // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)V
      10: aload_3
      11: invokeinterface #13,  3           // InterfaceMethod sendAndForget:(Lio/fluxcapacitor/javaclient/common/Message;Lio/fluxcapacitor/common/Guarantee;)Ljava/util/concurrent/CompletableFuture;
      16: invokevirtual #19                 // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
      19: pop
      20: goto          28
      23: astore        4
      25: aload         4
      27: athrow
      28: return
    Exception table:
       from    to  target type
           0    20    23   Class java/lang/Throwable

  public default java.util.concurrent.CompletableFuture<java.lang.Void> sendAndForget(io.fluxcapacitor.javaclient.common.Message, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: aload_2
       2: iconst_1
       3: anewarray     #2                  // class io/fluxcapacitor/javaclient/common/Message
       6: dup
       7: iconst_0
       8: aload_1
       9: aastore
      10: invokeinterface #37,  3           // InterfaceMethod sendAndForget:(Lio/fluxcapacitor/common/Guarantee;[Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public default void sendAndForget(java.lang.Object...);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field io/fluxcapacitor/common/Guarantee.NONE:Lio/fluxcapacitor/common/Guarantee;
       4: aload_1
       5: invokeinterface #40,  3           // InterfaceMethod sendAndForget:(Lio/fluxcapacitor/common/Guarantee;[Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      10: pop
      11: return

  public default java.util.concurrent.CompletableFuture<java.lang.Void> sendAndForget(io.fluxcapacitor.common.Guarantee, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       6: invokedynamic #49,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #53,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #59,  0             // InvokeDynamic #1:apply:()Ljava/util/function/IntFunction;
      21: invokeinterface #62,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      26: checkcast     #66                 // class "[Lio/fluxcapacitor/javaclient/common/Message;"
      29: invokeinterface #37,  3           // InterfaceMethod sendAndForget:(Lio/fluxcapacitor/common/Guarantee;[Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/concurrent/CompletableFuture;
      34: areturn

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> sendAndForget(io.fluxcapacitor.common.Guarantee, io.fluxcapacitor.javaclient.common.Message...);

  public default <R> java.util.concurrent.CompletableFuture<R> send(io.fluxcapacitor.javaclient.common.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #68,  2           // InterfaceMethod sendForMessage:(Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/concurrent/CompletableFuture;
       7: invokedynamic #72,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      12: invokevirtual #73                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public default <R> java.util.concurrent.CompletableFuture<R> send(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method io/fluxcapacitor/javaclient/common/Message.asMessage:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
       5: invokeinterface #77,  2           // InterfaceMethod send:(Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/concurrent/CompletableFuture;
      10: areturn

  public default <R> java.util.concurrent.CompletableFuture<R> send(io.fluxcapacitor.javaclient.tracking.handling.Request<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #80,  2           // InterfaceMethod send:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
       7: areturn

  public default <R> java.util.concurrent.CompletableFuture<R> send(java.lang.Object, io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: new           #2                  // class io/fluxcapacitor/javaclient/common/Message
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #33                 // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)V
      10: invokeinterface #77,  2           // InterfaceMethod send:(Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public default <R> java.util.concurrent.CompletableFuture<R> send(io.fluxcapacitor.javaclient.tracking.handling.Request<R>, io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #83,  3           // InterfaceMethod send:(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)Ljava/util/concurrent/CompletableFuture;
       8: areturn

  public default java.util.concurrent.CompletableFuture<io.fluxcapacitor.javaclient.common.Message> sendForMessage(io.fluxcapacitor.javaclient.common.Message);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #2                  // class io/fluxcapacitor/javaclient/common/Message
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokeinterface #86,  2           // InterfaceMethod sendForMessages:([Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/List;
      14: iconst_0
      15: invokeinterface #90,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #20                 // class java/util/concurrent/CompletableFuture
      23: areturn

  public default <R> java.util.List<java.util.concurrent.CompletableFuture<R>> send(java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       5: invokedynamic #49,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokeinterface #53,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      15: invokedynamic #95,  0             // InvokeDynamic #3:apply:()Ljava/util/function/IntFunction;
      20: invokeinterface #62,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      25: checkcast     #66                 // class "[Lio/fluxcapacitor/javaclient/common/Message;"
      28: invokeinterface #86,  2           // InterfaceMethod sendForMessages:([Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/List;
      33: invokeinterface #96,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      38: invokedynamic #99,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      43: invokeinterface #53,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      48: invokestatic  #100                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      51: invokeinterface #106,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      56: checkcast     #91                 // class java/util/List
      59: areturn

  public abstract java.util.List<java.util.concurrent.CompletableFuture<io.fluxcapacitor.javaclient.common.Message>> sendForMessages(io.fluxcapacitor.javaclient.common.Message...);

  public default <R> R sendAndWait(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method io/fluxcapacitor/javaclient/common/Message.asMessage:(Ljava/lang/Object;)Lio/fluxcapacitor/javaclient/common/Message;
       5: invokeinterface #110,  2          // InterfaceMethod sendAndWait:(Lio/fluxcapacitor/javaclient/common/Message;)Ljava/lang/Object;
      10: areturn

  public default <R> R sendAndWait(io.fluxcapacitor.javaclient.tracking.handling.Request<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #114,  2          // InterfaceMethod sendAndWait:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public default <R> R sendAndWait(java.lang.Object, io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: new           #2                  // class io/fluxcapacitor/javaclient/common/Message
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #33                 // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)V
      10: invokeinterface #110,  2          // InterfaceMethod sendAndWait:(Lio/fluxcapacitor/javaclient/common/Message;)Ljava/lang/Object;
      15: areturn
      16: astore_3
      17: aload_3
      18: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/Throwable

  public default <R> R sendAndWait(io.fluxcapacitor.javaclient.tracking.handling.Request<R>, io.fluxcapacitor.common.api.Metadata);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #117,  3          // InterfaceMethod sendAndWait:(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)Ljava/lang/Object;
       8: areturn

  public default <R> R sendAndWait(io.fluxcapacitor.javaclient.common.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #77,  2           // InterfaceMethod send:(Lio/fluxcapacitor/javaclient/common/Message;)Ljava/util/concurrent/CompletableFuture;
       7: astore_2
       8: aload_1
       9: invokevirtual #120                // Method io/fluxcapacitor/javaclient/common/Message.getPayload:()Ljava/lang/Object;
      12: invokevirtual #123                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: ldc           #129                // class io/fluxcapacitor/javaclient/publishing/Timeout
      17: invokevirtual #131                // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      20: checkcast     #129                // class io/fluxcapacitor/javaclient/publishing/Timeout
      23: astore_3
      24: aload_3
      25: ifnull        43
      28: aload_2
      29: aload_3
      30: invokeinterface #137,  1          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/Timeout.millis:()I
      35: i2l
      36: getstatic     #141                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      39: invokevirtual #147                // Method java/util/concurrent/CompletableFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      42: areturn
      43: aload_2
      44: lconst_1
      45: getstatic     #150                // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      48: invokevirtual #147                // Method java/util/concurrent/CompletableFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      51: areturn
      52: astore_3
      53: new           #155                // class io/fluxcapacitor/javaclient/publishing/TimeoutException
      56: dup
      57: ldc           #157                // String Request %s (type %s) has timed out
      59: iconst_2
      60: anewarray     #124                // class java/lang/Object
      63: dup
      64: iconst_0
      65: aload_1
      66: invokevirtual #159                // Method io/fluxcapacitor/javaclient/common/Message.getMessageId:()Ljava/lang/String;
      69: aastore
      70: dup
      71: iconst_1
      72: aload_1
      73: invokevirtual #163                // Method io/fluxcapacitor/javaclient/common/Message.getPayloadClass:()Ljava/lang/Class;
      76: aastore
      77: invokestatic  #166                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      80: invokespecial #172                // Method io/fluxcapacitor/javaclient/publishing/TimeoutException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: astore_3
      85: invokestatic  #177                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      88: invokevirtual #183                // Method java/lang/Thread.interrupt:()V
      91: new           #187                // class io/fluxcapacitor/javaclient/publishing/GatewayException
      94: dup
      95: ldc           #189                // String Thread interrupted while waiting for result of %s (type %s)
      97: iconst_2
      98: anewarray     #124                // class java/lang/Object
     101: dup
     102: iconst_0
     103: aload_1
     104: invokevirtual #159                // Method io/fluxcapacitor/javaclient/common/Message.getMessageId:()Ljava/lang/String;
     107: aastore
     108: dup
     109: iconst_1
     110: aload_1
     111: invokevirtual #163                // Method io/fluxcapacitor/javaclient/common/Message.getPayloadClass:()Ljava/lang/Class;
     114: aastore
     115: invokestatic  #166                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     118: aload_3
     119: invokespecial #191                // Method io/fluxcapacitor/javaclient/publishing/GatewayException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     122: athrow
     123: astore_3
     124: aload_3
     125: invokevirtual #196                // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
     128: athrow
     129: astore_2
     130: aload_2
     131: athrow
    Exception table:
       from    to  target type
           8    42    52   Class java/util/concurrent/TimeoutException
          43    51    52   Class java/util/concurrent/TimeoutException
           8    42    84   Class java/lang/InterruptedException
          43    51    84   Class java/lang/InterruptedException
           8    42   123   Class java/util/concurrent/ExecutionException
          43    51   123   Class java/util/concurrent/ExecutionException
           0    42   129   Class java/lang/Throwable
          43    51   129   Class java/lang/Throwable
          52   129   129   Class java/lang/Throwable

  public abstract void close();

  private static java.util.concurrent.CompletableFuture lambda$send$2(java.util.concurrent.CompletableFuture);
    Code:
       0: aload_0
       1: invokedynamic #72,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       6: invokevirtual #73                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
       9: areturn

  private static io.fluxcapacitor.javaclient.common.Message[] lambda$send$1(int);
    Code:
       0: iload_0
       1: anewarray     #2                  // class io/fluxcapacitor/javaclient/common/Message
       4: areturn

  private static io.fluxcapacitor.javaclient.common.Message[] lambda$sendAndForget$0(int);
    Code:
       0: iload_0
       1: anewarray     #2                  // class io/fluxcapacitor/javaclient/common/Message
       4: areturn
}
