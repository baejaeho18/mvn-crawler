Compiled from "DispatchInterceptor.java"
public interface io.fluxcapacitor.javaclient.publishing.DispatchInterceptor {
  public static io.fluxcapacitor.javaclient.publishing.DispatchInterceptor noOp();
    Code:
       0: invokedynamic #1,  0              // InvokeDynamic #0:interceptDispatch:()Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;
       5: areturn

  public abstract io.fluxcapacitor.javaclient.common.Message interceptDispatch(io.fluxcapacitor.javaclient.common.Message, io.fluxcapacitor.common.MessageType);

  public default io.fluxcapacitor.common.api.SerializedMessage modifySerializedMessage(io.fluxcapacitor.common.api.SerializedMessage, io.fluxcapacitor.javaclient.common.Message, io.fluxcapacitor.common.MessageType);
    Code:
       0: aload_1
       1: areturn

  public default io.fluxcapacitor.javaclient.publishing.DispatchInterceptor andThen(io.fluxcapacitor.javaclient.publishing.DispatchInterceptor);
    Code:
       0: new           #5                  // class io/fluxcapacitor/javaclient/publishing/DispatchInterceptor$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method io/fluxcapacitor/javaclient/publishing/DispatchInterceptor$1."<init>":(Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;)V
       9: areturn

  private static io.fluxcapacitor.javaclient.common.Message lambda$noOp$0(io.fluxcapacitor.javaclient.common.Message, io.fluxcapacitor.common.MessageType);
    Code:
       0: aload_0
       1: areturn
}
