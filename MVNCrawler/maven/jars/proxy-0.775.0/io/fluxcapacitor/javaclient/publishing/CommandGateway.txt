Compiled from "CommandGateway.java"
public interface io.fluxcapacitor.javaclient.publishing.CommandGateway extends io.fluxcapacitor.javaclient.tracking.handling.HasLocalHandlers {
  public abstract void sendAndForget(java.lang.Object);

  public abstract void sendAndForget(java.lang.Object, io.fluxcapacitor.common.api.Metadata);

  public abstract void sendAndForget(java.lang.Object, io.fluxcapacitor.common.api.Metadata, io.fluxcapacitor.common.Guarantee);

  public abstract void sendAndForget(java.lang.Object...);

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> sendAndForget(io.fluxcapacitor.common.Guarantee, java.lang.Object...);

  public abstract <R> java.util.concurrent.CompletableFuture<R> send(java.lang.Object);

  public abstract <R> java.util.concurrent.CompletableFuture<R> send(java.lang.Object, io.fluxcapacitor.common.api.Metadata);

  public abstract java.util.concurrent.CompletableFuture<io.fluxcapacitor.javaclient.common.Message> sendForMessage(io.fluxcapacitor.javaclient.common.Message);

  public abstract <R> java.util.List<java.util.concurrent.CompletableFuture<R>> send(java.lang.Object...);

  public abstract java.util.List<java.util.concurrent.CompletableFuture<io.fluxcapacitor.javaclient.common.Message>> sendForMessages(io.fluxcapacitor.javaclient.common.Message...);

  public abstract <R> R sendAndWait(java.lang.Object);

  public abstract <R> R sendAndWait(java.lang.Object, io.fluxcapacitor.common.api.Metadata);

  public abstract <R> java.util.concurrent.CompletableFuture<R> send(io.fluxcapacitor.javaclient.tracking.handling.Request<R>);

  public abstract <R> java.util.concurrent.CompletableFuture<R> send(io.fluxcapacitor.javaclient.tracking.handling.Request<R>, io.fluxcapacitor.common.api.Metadata);

  public abstract <R> R sendAndWait(io.fluxcapacitor.javaclient.tracking.handling.Request<R>);

  public abstract <R> R sendAndWait(io.fluxcapacitor.javaclient.tracking.handling.Request<R>, io.fluxcapacitor.common.api.Metadata);

  public abstract void close();
}
