Compiled from "WebRequestGateway.java"
public interface io.fluxcapacitor.javaclient.publishing.WebRequestGateway extends io.fluxcapacitor.javaclient.tracking.handling.HasLocalHandlers {
  public static final io.fluxcapacitor.javaclient.web.WebRequestSettings defaultSettings;

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> sendAndForget(io.fluxcapacitor.common.Guarantee, io.fluxcapacitor.javaclient.web.WebRequest...);

  public abstract java.util.concurrent.CompletableFuture<io.fluxcapacitor.javaclient.web.WebResponse> send(io.fluxcapacitor.javaclient.web.WebRequest);

  public default io.fluxcapacitor.javaclient.web.WebResponse sendAndWait(io.fluxcapacitor.javaclient.web.WebRequest);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field defaultSettings:Lio/fluxcapacitor/javaclient/web/WebRequestSettings;
       5: invokeinterface #7,  3            // InterfaceMethod sendAndWait:(Lio/fluxcapacitor/javaclient/web/WebRequest;Lio/fluxcapacitor/javaclient/web/WebRequestSettings;)Lio/fluxcapacitor/javaclient/web/WebResponse;
      10: areturn

  public abstract io.fluxcapacitor.javaclient.web.WebResponse sendAndWait(io.fluxcapacitor.javaclient.web.WebRequest, io.fluxcapacitor.javaclient.web.WebRequestSettings);

  public abstract void close();

  static {};
    Code:
       0: invokestatic  #11                 // Method io/fluxcapacitor/javaclient/web/WebRequestSettings.builder:()Lio/fluxcapacitor/javaclient/web/WebRequestSettings$WebRequestSettingsBuilder;
       3: invokevirtual #17                 // Method io/fluxcapacitor/javaclient/web/WebRequestSettings$WebRequestSettingsBuilder.build:()Lio/fluxcapacitor/javaclient/web/WebRequestSettings;
       6: putstatic     #1                  // Field defaultSettings:Lio/fluxcapacitor/javaclient/web/WebRequestSettings;
       9: return
}
