Compiled from "LocalHandlerRegistry.java"
public class io.fluxcapacitor.javaclient.tracking.handling.LocalHandlerRegistry implements io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry {
  private static final org.slf4j.Logger log;

  private final io.fluxcapacitor.common.MessageType messageType;

  private final io.fluxcapacitor.javaclient.tracking.handling.HandlerFactory handlerFactory;

  private final java.util.List<io.fluxcapacitor.common.handling.Handler<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>> localHandlers;

  private final io.fluxcapacitor.common.handling.HandlerFilter handleSelfFilter;

  private final java.util.function.Function<java.lang.Class<?>, java.util.Optional<io.fluxcapacitor.common.handling.Handler<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>>> selfHandlers;

  public io.fluxcapacitor.common.Registration registerHandler(java.lang.Object, io.fluxcapacitor.common.handling.HandlerFilter);
    Code:
       0: aload_1
       1: instanceof    #1                  // class io/fluxcapacitor/common/handling/Handler
       4: ifeq          29
       7: aload_0
       8: getfield      #3                  // Field localHandlers:Ljava/util/List;
      11: aload_1
      12: checkcast     #1                  // class io/fluxcapacitor/common/handling/Handler
      15: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      20: pop
      21: aload_0
      22: aload_1
      23: invokedynamic #15,  0             // InvokeDynamic #0:cancel:(Lio/fluxcapacitor/javaclient/tracking/handling/LocalHandlerRegistry;Ljava/lang/Object;)Lio/fluxcapacitor/common/Registration;
      28: areturn
      29: aload_0
      30: getfield      #19                 // Field handlerFactory:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerFactory;
      33: aload_1
      34: invokestatic  #23                 // Method io/fluxcapacitor/common/reflection/ReflectionUtils.asInstance:(Ljava/lang/Object;)Ljava/lang/Object;
      37: aload_0
      38: getfield      #29                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      41: invokedynamic #33,  0             // InvokeDynamic #1:makeConcatWithConstants:(Lio/fluxcapacitor/common/MessageType;)Ljava/lang/String;
      46: aload_2
      47: invokestatic  #37                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      50: invokeinterface #43,  5           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerFactory.createHandler:(Ljava/lang/Object;Ljava/lang/String;Lio/fluxcapacitor/common/handling/HandlerFilter;Ljava/util/List;)Ljava/util/Optional;
      55: astore_3
      56: aload_3
      57: aload_0
      58: getfield      #3                  // Field localHandlers:Ljava/util/List;
      61: dup
      62: invokestatic  #49                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: invokedynamic #54,  0             // InvokeDynamic #2:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      71: invokevirtual #58                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      74: aload_0
      75: aload_3
      76: invokedynamic #64,  0             // InvokeDynamic #3:cancel:(Lio/fluxcapacitor/javaclient/tracking/handling/LocalHandlerRegistry;Ljava/util/Optional;)Lio/fluxcapacitor/common/Registration;
      81: areturn

  public java.util.Optional<java.util.concurrent.CompletableFuture<io.fluxcapacitor.javaclient.common.Message>> handle(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_0
       1: getfield      #3                  // Field localHandlers:Ljava/util/List;
       4: invokeinterface #67,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          20
      12: aload_0
      13: aload_1
      14: invokevirtual #71                 // Method handleSelf:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Z
      17: ifeq          42
      20: aload_0
      21: aload_1
      22: invokevirtual #75                 // Method getLocalHandlers:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/List;
      25: astore_2
      26: aload_1
      27: aload_0
      28: aload_2
      29: aload_1
      30: invokedynamic #79,  0             // InvokeDynamic #4:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/LocalHandlerRegistry;Ljava/util/List;Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/function/Function;
      35: invokevirtual #83                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.apply:(Ljava/util/function/Function;)Ljava/lang/Object;
      38: checkcast     #59                 // class java/util/Optional
      41: areturn
      42: invokestatic  #88                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      45: areturn

  protected boolean handleSelf(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_0
       1: getfield      #29                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
       4: invokevirtual #92                 // Method io/fluxcapacitor/common/MessageType.isRequest:()Z
       7: ifeq          27
      10: aload_1
      11: invokevirtual #97                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getPayloadClass:()Ljava/lang/Class;
      14: invokestatic  #101                // Method io/fluxcapacitor/javaclient/common/ClientUtils.getHandleSelfAnnotation:(Ljava/lang/Class;)Ljava/util/Optional;
      17: invokevirtual #107                // Method java/util/Optional.isPresent:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected java.util.List<io.fluxcapacitor.common.handling.Handler<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>> getLocalHandlers(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_1
       1: invokevirtual #110                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMessageType:()Lio/fluxcapacitor/common/MessageType;
       4: invokevirtual #92                 // Method io/fluxcapacitor/common/MessageType.isRequest:()Z
       7: ifne          15
      10: aload_0
      11: getfield      #3                  // Field localHandlers:Ljava/util/List;
      14: areturn
      15: aload_1
      16: aload_0
      17: invokedynamic #114,  0            // InvokeDynamic #5:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/LocalHandlerRegistry;)Ljava/util/function/Function;
      22: invokevirtual #83                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.apply:(Ljava/util/function/Function;)Ljava/lang/Object;
      25: checkcast     #10                 // class java/util/List
      28: areturn

  protected boolean logMessage(io.fluxcapacitor.common.handling.HandlerInvoker);
    Code:
       0: aload_1
       1: invokeinterface #117,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getMethodAnnotation:()Ljava/lang/annotation/Annotation;
       6: astore_3
       7: aload_3
       8: instanceof    #123                // class io/fluxcapacitor/javaclient/tracking/handling/HandleSelf
      11: ifeq          26
      14: aload_3
      15: checkcast     #123                // class io/fluxcapacitor/javaclient/tracking/handling/HandleSelf
      18: astore_2
      19: aload_2
      20: invokeinterface #125,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandleSelf.logMessage:()Z
      25: ireturn
      26: aload_1
      27: invokeinterface #128,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getTarget:()Ljava/lang/Object;
      32: invokevirtual #132                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: aload_1
      36: invokeinterface #137,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getMethod:()Ljava/lang/reflect/Executable;
      41: invokestatic  #141                // Method io/fluxcapacitor/javaclient/common/ClientUtils.getLocalHandlerAnnotation:(Ljava/lang/Class;Ljava/lang/reflect/Executable;)Ljava/util/Optional;
      44: invokedynamic #145,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      49: invokevirtual #148                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      52: iconst_0
      53: invokestatic  #152                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      56: invokevirtual #158                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #153                // class java/lang/Boolean
      62: invokevirtual #161                // Method java/lang/Boolean.booleanValue:()Z
      65: ireturn

  protected java.util.Optional<io.fluxcapacitor.common.handling.Handler<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>> computeSelfHandler(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field handlerFactory:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerFactory;
       4: invokedynamic #164,  0            // InvokeDynamic #7:get:()Ljava/util/function/Supplier;
       9: aload_1
      10: ldc           #123                // class io/fluxcapacitor/javaclient/tracking/handling/HandleSelf
      12: aload_0
      13: getfield      #29                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      16: invokedynamic #168,  0            // InvokeDynamic #8:makeConcatWithConstants:(Lio/fluxcapacitor/common/MessageType;)Ljava/lang/String;
      21: aload_0
      22: getfield      #169                // Field handleSelfFilter:Lio/fluxcapacitor/common/handling/HandlerFilter;
      25: invokestatic  #37                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      28: invokeinterface #173,  7          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerFactory.createHandler:(Ljava/util/function/Supplier;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Lio/fluxcapacitor/common/handling/HandlerFilter;Ljava/util/List;)Ljava/util/Optional;
      33: areturn

  public io.fluxcapacitor.javaclient.tracking.handling.LocalHandlerRegistry(io.fluxcapacitor.common.MessageType, io.fluxcapacitor.javaclient.tracking.handling.HandlerFactory);
    Code:
       0: aload_0
       1: invokespecial #176                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #180                // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #182                // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #3                  // Field localHandlers:Ljava/util/List;
      15: aload_0
      16: invokedynamic #183,  0            // InvokeDynamic #9:test:()Lio/fluxcapacitor/common/handling/HandlerFilter;
      21: putfield      #169                // Field handleSelfFilter:Lio/fluxcapacitor/common/handling/HandlerFilter;
      24: aload_0
      25: aload_0
      26: invokedynamic #187,  0            // InvokeDynamic #10:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/LocalHandlerRegistry;)Ljava/util/function/Function;
      31: invokestatic  #188                // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
      34: putfield      #194                // Field selfHandlers:Ljava/util/function/Function;
      37: aload_0
      38: aload_1
      39: putfield      #29                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      42: aload_0
      43: aload_2
      44: putfield      #19                 // Field handlerFactory:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerFactory;
      47: return

  private static java.lang.Object lambda$computeSelfHandler$8();
    Code:
       0: invokestatic  #198                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getCurrent:()Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;
       3: invokevirtual #202                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getPayload:()Ljava/lang/Object;
       6: areturn

  private java.util.List lambda$getLocalHandlers$7(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_0
       1: getfield      #194                // Field selfHandlers:Ljava/util/function/Function;
       4: aload_1
       5: invokevirtual #97                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getPayloadClass:()Ljava/lang/Class;
       8: invokeinterface #205,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #59                 // class java/util/Optional
      16: aload_0
      17: invokedynamic #209,  0            // InvokeDynamic #11:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/LocalHandlerRegistry;)Ljava/util/function/Function;
      22: invokevirtual #148                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      25: aload_0
      26: getfield      #3                  // Field localHandlers:Ljava/util/List;
      29: invokevirtual #158                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #10                 // class java/util/List
      35: areturn

  private java.util.List lambda$getLocalHandlers$6(io.fluxcapacitor.common.handling.Handler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field localHandlers:Ljava/util/List;
       4: invokeinterface #210,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokestatic  #214                // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      13: invokestatic  #220                // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      16: invokeinterface #224,  1          // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      21: areturn

  private java.util.Optional lambda$handle$5(java.util.List, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: iconst_0
       1: istore        4
       3: iconst_0
       4: istore        5
       6: aload_3
       7: invokevirtual #110                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMessageType:()Lio/fluxcapacitor/common/MessageType;
      10: invokevirtual #92                 // Method io/fluxcapacitor/common/MessageType.isRequest:()Z
      13: istore        6
      15: new           #227                // class java/util/concurrent/CompletableFuture
      18: dup
      19: invokespecial #229                // Method java/util/concurrent/CompletableFuture."<init>":()V
      22: astore        7
      24: aload_1
      25: invokeinterface #230,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore        8
      32: aload         8
      34: invokeinterface #234,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          328
      42: aload         8
      44: invokeinterface #239,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #1                  // class io/fluxcapacitor/common/handling/Handler
      52: astore        9
      54: aload         9
      56: aload_3
      57: invokeinterface #242,  2          // InterfaceMethod io/fluxcapacitor/common/handling/Handler.findInvoker:(Ljava/lang/Object;)Ljava/util/Optional;
      62: astore        10
      64: aload         10
      66: invokevirtual #107                // Method java/util/Optional.isPresent:()Z
      69: ifeq          325
      72: aload         10
      74: invokevirtual #246                // Method java/util/Optional.get:()Ljava/lang/Object;
      77: checkcast     #118                // class io/fluxcapacitor/common/handling/HandlerInvoker
      80: astore        11
      82: aload         11
      84: invokeinterface #248,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.isPassive:()Z
      89: istore        12
      91: iload         4
      93: ifeq          106
      96: iload         6
      98: ifeq          106
     101: iload         12
     103: ifeq          325
     106: aload         11
     108: dup
     109: invokestatic  #49                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: invokedynamic #251,  0            // InvokeDynamic #12:call:(Lio/fluxcapacitor/common/handling/HandlerInvoker;)Ljava/util/concurrent/Callable;
     118: invokestatic  #255                // Method io/fluxcapacitor/common/handling/Invocation.performInvocation:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
     121: astore        13
     123: iload         12
     125: ifne          177
     128: aload         7
     130: invokevirtual #261                // Method java/util/concurrent/CompletableFuture.isDone:()Z
     133: ifne          177
     136: aload         13
     138: instanceof    #227                // class java/util/concurrent/CompletableFuture
     141: ifeq          162
     144: aload         13
     146: checkcast     #227                // class java/util/concurrent/CompletableFuture
     149: invokedynamic #264,  0            // InvokeDynamic #13:apply:()Ljava/util/function/Function;
     154: invokevirtual #265                // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
     157: astore        7
     159: goto          177
     162: aload         7
     164: new           #269                // class io/fluxcapacitor/javaclient/common/Message
     167: dup
     168: aload         13
     170: invokespecial #271                // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;)V
     173: invokevirtual #274                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
     176: pop
     177: iload         12
     179: ifne          185
     182: iconst_1
     183: istore        4
     185: iload         5
     187: ifne          199
     190: aload_0
     191: aload         11
     193: invokevirtual #277                // Method logMessage:(Lio/fluxcapacitor/common/handling/HandlerInvoker;)Z
     196: ifeq          203
     199: iconst_1
     200: goto          204
     203: iconst_0
     204: istore        5
     206: goto          325
     209: astore        13
     211: iload         12
     213: ifeq          251
     216: getstatic     #282                // Field log:Lorg/slf4j/Logger;
     219: ldc_w         #286                // String Passive handler {} failed to handle a {}
     222: iconst_3
     223: anewarray     #133                // class java/lang/Object
     226: dup
     227: iconst_0
     228: aload         11
     230: aastore
     231: dup
     232: iconst_1
     233: aload_3
     234: invokevirtual #97                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getPayloadClass:()Ljava/lang/Class;
     237: aastore
     238: dup
     239: iconst_2
     240: aload         13
     242: aastore
     243: invokeinterface #288,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     248: goto          259
     251: aload         7
     253: aload         13
     255: invokevirtual #294                // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
     258: pop
     259: iload         12
     261: ifne          267
     264: iconst_1
     265: istore        4
     267: iload         5
     269: ifne          281
     272: aload_0
     273: aload         11
     275: invokevirtual #277                // Method logMessage:(Lio/fluxcapacitor/common/handling/HandlerInvoker;)Z
     278: ifeq          285
     281: iconst_1
     282: goto          286
     285: iconst_0
     286: istore        5
     288: goto          325
     291: astore        14
     293: iload         12
     295: ifne          301
     298: iconst_1
     299: istore        4
     301: iload         5
     303: ifne          315
     306: aload_0
     307: aload         11
     309: invokevirtual #277                // Method logMessage:(Lio/fluxcapacitor/common/handling/HandlerInvoker;)Z
     312: ifeq          319
     315: iconst_1
     316: goto          320
     319: iconst_0
     320: istore        5
     322: aload         14
     324: athrow
     325: goto          32
     328: iload         4
     330: ifeq          341
     333: aload         7
     335: invokestatic  #298                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     338: goto          344
     341: invokestatic  #88                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     344: astore        8
     346: iload         5
     348: ifeq          364
     351: invokestatic  #300                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.getOptionally:()Ljava/util/Optional;
     354: aload_3
     355: aload_2
     356: invokedynamic #305,  0            // InvokeDynamic #14:accept:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/function/Consumer;
     361: invokevirtual #58                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     364: aload         8
     366: areturn
     367: astore        15
     369: iload         5
     371: ifeq          387
     374: invokestatic  #300                // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.getOptionally:()Ljava/util/Optional;
     377: aload_3
     378: aload_2
     379: invokedynamic #305,  0            // InvokeDynamic #14:accept:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/function/Consumer;
     384: invokevirtual #58                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     387: aload         15
     389: athrow
    Exception table:
       from    to  target type
         106   177   209   Class java/lang/Throwable
         106   177   291   any
         209   259   291   any
         291   293   291   any
         328   346   367   any
         367   369   367   any

  private static void lambda$handle$4(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_2
       1: invokeinterface #308,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.client:()Lio/fluxcapacitor/javaclient/configuration/client/Client;
       6: aload_0
       7: invokevirtual #110                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMessageType:()Lio/fluxcapacitor/common/MessageType;
      10: invokeinterface #312,  2          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.getGatewayClient:(Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/publishing/client/GatewayClient;
      15: getstatic     #318                // Field io/fluxcapacitor/common/Guarantee.NONE:Lio/fluxcapacitor/common/Guarantee;
      18: iconst_1
      19: anewarray     #324                // class io/fluxcapacitor/common/api/SerializedMessage
      22: dup
      23: iconst_0
      24: aload_1
      25: invokevirtual #326                // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getSerializedObject:()Lio/fluxcapacitor/common/api/SerializedMessage;
      28: aastore
      29: invokeinterface #330,  3          // InterfaceMethod io/fluxcapacitor/javaclient/publishing/client/GatewayClient.send:(Lio/fluxcapacitor/common/Guarantee;[Lio/fluxcapacitor/common/api/SerializedMessage;)Ljava/util/concurrent/CompletableFuture;
      34: pop
      35: return

  private void lambda$registerHandler$3(java.util.Optional);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field localHandlers:Ljava/util/List;
       5: dup
       6: invokestatic  #49                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #336,  0            // InvokeDynamic #15:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      15: invokevirtual #58                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      18: return

  private void lambda$registerHandler$2(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field localHandlers:Ljava/util/List;
       4: aload_1
       5: invokeinterface #337,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private static boolean lambda$new$1(java.lang.Class, java.lang.reflect.Executable);
    Code:
       0: aload_1
       1: ldc           #123                // class io/fluxcapacitor/javaclient/tracking/handling/HandleSelf
       3: invokestatic  #340                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAnnotation:(Ljava/lang/reflect/Executable;Ljava/lang/Class;)Ljava/util/Optional;
       6: invokedynamic #344,  0            // InvokeDynamic #16:apply:()Ljava/util/function/Function;
      11: invokevirtual #148                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      14: iconst_0
      15: invokestatic  #152                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #158                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #153                // class java/lang/Boolean
      24: invokevirtual #161                // Method java/lang/Boolean.booleanValue:()Z
      27: ireturn

  private static java.lang.Boolean lambda$new$0(io.fluxcapacitor.javaclient.tracking.handling.HandleSelf);
    Code:
       0: aload_0
       1: invokeinterface #345,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandleSelf.disabled:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #152                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: areturn

  static {};
    Code:
       0: ldc           #4                  // class io/fluxcapacitor/javaclient/tracking/handling/LocalHandlerRegistry
       2: invokestatic  #348                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #282                // Field log:Lorg/slf4j/Logger;
       8: return
}
