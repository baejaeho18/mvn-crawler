Compiled from "RetryingErrorHandler.java"
public class io.fluxcapacitor.javaclient.tracking.RetryingErrorHandler implements io.fluxcapacitor.javaclient.tracking.ErrorHandler {
  private static final org.slf4j.Logger log;

  private final java.util.function.Predicate<java.lang.Throwable> errorFilter;

  private final boolean stopConsumerOnFailure;

  private final boolean logFunctionalErrors;

  private final io.fluxcapacitor.common.RetryConfiguration retryConfiguration;

  public io.fluxcapacitor.javaclient.tracking.RetryingErrorHandler();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public io.fluxcapacitor.javaclient.tracking.RetryingErrorHandler(boolean);
    Code:
       0: aload_0
       1: invokedynamic #7,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
       6: iload_1
       7: invokespecial #11                 // Method "<init>":(Ljava/util/function/Predicate;Z)V
      10: return

  public io.fluxcapacitor.javaclient.tracking.RetryingErrorHandler(java.util.function.Predicate<java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #11                 // Method "<init>":(Ljava/util/function/Predicate;Z)V
       6: return

  public io.fluxcapacitor.javaclient.tracking.RetryingErrorHandler(java.util.function.Predicate<java.lang.Throwable>, boolean);
    Code:
       0: aload_0
       1: iconst_5
       2: ldc2_w        #14                 // long 2l
       5: invokestatic  #16                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
       8: aload_1
       9: iload_2
      10: iconst_1
      11: invokespecial #22                 // Method "<init>":(ILjava/time/Duration;Ljava/util/function/Predicate;ZZ)V
      14: return

  public io.fluxcapacitor.javaclient.tracking.RetryingErrorHandler(int, java.time.Duration, java.util.function.Predicate<java.lang.Throwable>, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: invokedynamic #25,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      13: invokespecial #29                 // Method "<init>":(ILjava/time/Duration;Ljava/util/function/Predicate;ZZLjava/util/function/Function;)V
      16: return

  public io.fluxcapacitor.javaclient.tracking.RetryingErrorHandler(int, java.time.Duration, java.util.function.Predicate<java.lang.Throwable>, boolean, boolean, java.util.function.Function<java.lang.Throwable, ?>);
    Code:
       0: aload_0
       1: aload_3
       2: iload         4
       4: iload         5
       6: invokestatic  #32                 // Method io/fluxcapacitor/common/RetryConfiguration.builder:()Lio/fluxcapacitor/common/RetryConfiguration$Builder;
       9: aload_2
      10: invokevirtual #38                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder.delay:(Ljava/time/Duration;)Lio/fluxcapacitor/common/RetryConfiguration$Builder;
      13: iload_1
      14: invokevirtual #44                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder.maxRetries:(I)Lio/fluxcapacitor/common/RetryConfiguration$Builder;
      17: aload         6
      19: invokevirtual #48                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder.errorMapper:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/RetryConfiguration$Builder;
      22: invokedynamic #52,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      27: invokevirtual #56                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder.successLogger:(Ljava/util/function/Consumer;)Lio/fluxcapacitor/common/RetryConfiguration$Builder;
      30: invokedynamic #60,  0             // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
      35: invokevirtual #61                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder.exceptionLogger:(Ljava/util/function/Consumer;)Lio/fluxcapacitor/common/RetryConfiguration$Builder;
      38: invokevirtual #64                 // Method io/fluxcapacitor/common/RetryConfiguration$Builder.build:()Lio/fluxcapacitor/common/RetryConfiguration;
      41: invokespecial #68                 // Method "<init>":(Ljava/util/function/Predicate;ZZLio/fluxcapacitor/common/RetryConfiguration;)V
      44: return

  public java.lang.Object handleError(java.lang.Throwable, java.lang.String, java.util.concurrent.Callable<?>);
    Code:
       0: aload_0
       1: getfield      #71                 // Field errorFilter:Ljava/util/function/Predicate;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      10: ifne          71
      13: aload_0
      14: ldc           #80                 // String %s. Not retrying. %s
      16: iconst_2
      17: anewarray     #82                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_2
      23: aastore
      24: dup
      25: iconst_1
      26: aload_0
      27: getfield      #84                 // Field stopConsumerOnFailure:Z
      30: ifeq          38
      33: ldc           #88                 // String Propagating error.
      35: goto          40
      38: ldc           #90                 // String Continuing with next handler.
      40: aastore
      41: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: aload_1
      45: invokevirtual #98                 // Method logError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      48: aload_0
      49: getfield      #84                 // Field stopConsumerOnFailure:Z
      52: ifeq          57
      55: aload_1
      56: athrow
      57: aload_0
      58: getfield      #102                // Field retryConfiguration:Lio/fluxcapacitor/common/RetryConfiguration;
      61: invokevirtual #106                // Method io/fluxcapacitor/common/RetryConfiguration.getErrorMapper:()Ljava/util/function/Function;
      64: aload_1
      65: invokeinterface #109,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: areturn
      71: aload_0
      72: getfield      #102                // Field retryConfiguration:Lio/fluxcapacitor/common/RetryConfiguration;
      75: invokevirtual #114                // Method io/fluxcapacitor/common/RetryConfiguration.getMaxRetries:()I
      78: ifne          83
      81: aload_1
      82: athrow
      83: aload_0
      84: getfield      #102                // Field retryConfiguration:Lio/fluxcapacitor/common/RetryConfiguration;
      87: invokevirtual #114                // Method io/fluxcapacitor/common/RetryConfiguration.getMaxRetries:()I
      90: ifle          131
      93: getstatic     #118                // Field log:Lorg/slf4j/Logger;
      96: ldc           #122                // String {}. Retrying up to {} times.
      98: iconst_3
      99: anewarray     #82                 // class java/lang/Object
     102: dup
     103: iconst_0
     104: aload_2
     105: aastore
     106: dup
     107: iconst_1
     108: aload_0
     109: getfield      #102                // Field retryConfiguration:Lio/fluxcapacitor/common/RetryConfiguration;
     112: invokevirtual #114                // Method io/fluxcapacitor/common/RetryConfiguration.getMaxRetries:()I
     115: invokestatic  #124                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     118: aastore
     119: dup
     120: iconst_2
     121: aload_1
     122: aastore
     123: invokeinterface #130,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     128: goto          143
     131: getstatic     #118                // Field log:Lorg/slf4j/Logger;
     134: ldc           #136                // String {}. Retrying until the errors stop.
     136: aload_2
     137: aload_1
     138: invokeinterface #138,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     143: aload_3
     144: aload_0
     145: getfield      #102                // Field retryConfiguration:Lio/fluxcapacitor/common/RetryConfiguration;
     148: invokestatic  #141                // Method io/fluxcapacitor/common/TimingUtils.retryOnFailure:(Ljava/util/concurrent/Callable;Lio/fluxcapacitor/common/RetryConfiguration;)Ljava/lang/Object;
     151: areturn
     152: astore        4
     154: aload_0
     155: getfield      #84                 // Field stopConsumerOnFailure:Z
     158: ifeq          175
     161: getstatic     #118                // Field log:Lorg/slf4j/Logger;
     164: ldc           #149                // String {}. Not retrying any further. Propagating error.
     166: aload_2
     167: aload_1
     168: invokeinterface #151,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     173: aload_1
     174: athrow
     175: aload_0
     176: aload_2
     177: invokedynamic #154,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     182: aload_1
     183: invokevirtual #98                 // Method logError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     186: aload_0
     187: getfield      #102                // Field retryConfiguration:Lio/fluxcapacitor/common/RetryConfiguration;
     190: invokevirtual #106                // Method io/fluxcapacitor/common/RetryConfiguration.getErrorMapper:()Ljava/util/function/Function;
     193: aload_1
     194: invokeinterface #109,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     199: areturn
     200: astore        4
     202: aload         4
     204: athrow
    Exception table:
       from    to  target type
          71   151   152   Class java/lang/Throwable
           0    70   200   Class java/lang/Throwable
          71   151   200   Class java/lang/Throwable
         152   199   200   Class java/lang/Throwable

  protected void logError(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_2
       1: invokestatic  #164                // Method isTechnicalError:(Ljava/lang/Throwable;)Z
       4: ifeq          20
       7: getstatic     #118                // Field log:Lorg/slf4j/Logger;
      10: aload_1
      11: aload_2
      12: invokeinterface #168,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      17: goto          37
      20: aload_0
      21: getfield      #170                // Field logFunctionalErrors:Z
      24: ifeq          37
      27: getstatic     #118                // Field log:Lorg/slf4j/Logger;
      30: aload_1
      31: aload_2
      32: invokeinterface #173,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  protected static boolean isTechnicalError(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #175                // class io/fluxcapacitor/javaclient/common/exception/FunctionalException
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected io.fluxcapacitor.javaclient.tracking.RetryingErrorHandler(java.util.function.Predicate<java.lang.Throwable>, boolean, boolean, io.fluxcapacitor.common.RetryConfiguration);
    Code:
       0: aload_0
       1: invokespecial #177                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #71                 // Field errorFilter:Ljava/util/function/Predicate;
       9: aload_0
      10: iload_2
      11: putfield      #84                 // Field stopConsumerOnFailure:Z
      14: aload_0
      15: iload_3
      16: putfield      #170                // Field logFunctionalErrors:Z
      19: aload_0
      20: aload         4
      22: putfield      #102                // Field retryConfiguration:Lio/fluxcapacitor/common/RetryConfiguration;
      25: return

  private static void lambda$new$3(io.fluxcapacitor.common.RetryStatus);
    Code:
       0: return

  private static void lambda$new$2(io.fluxcapacitor.common.RetryStatus);
    Code:
       0: getstatic     #118                // Field log:Lorg/slf4j/Logger;
       3: ldc           #180                // String Message handling was successful on retry
       5: invokeinterface #182,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: return

  private static java.lang.Object lambda$new$1(java.lang.Throwable);
    Code:
       0: aload_0
       1: areturn

  private static boolean lambda$new$0(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #175                // class io/fluxcapacitor/javaclient/common/exception/FunctionalException
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  static {};
    Code:
       0: ldc           #2                  // class io/fluxcapacitor/javaclient/tracking/RetryingErrorHandler
       2: invokestatic  #186                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #118                // Field log:Lorg/slf4j/Logger;
       8: return
}
