Compiled from "HandlerRegistry.java"
public class io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry$MergedHandlerRegistry implements io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry {
  private final io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry first;

  private final io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry second;

  public java.util.Optional<java.util.concurrent.CompletableFuture<io.fluxcapacitor.javaclient.common.Message>> handle(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_0
       1: getfield      #1                  // Field first:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.handle:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/Optional;
      10: astore_2
      11: aload_0
      12: getfield      #13                 // Field second:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
      15: aload_1
      16: invokeinterface #7,  2            // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.handle:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/Optional;
      21: astore_3
      22: aload_2
      23: invokevirtual #16                 // Method java/util/Optional.isPresent:()Z
      26: ifeq          51
      29: aload_3
      30: aload_2
      31: invokedynamic #22,  0             // InvokeDynamic #0:apply:(Ljava/util/Optional;)Ljava/util/function/Function;
      36: invokevirtual #26                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      39: aload_2
      40: invokedynamic #30,  0             // InvokeDynamic #1:get:(Ljava/util/Optional;)Ljava/util/function/Supplier;
      45: invokevirtual #34                 // Method java/util/Optional.or:(Ljava/util/function/Supplier;)Ljava/util/Optional;
      48: goto          52
      51: aload_3
      52: areturn

  public io.fluxcapacitor.common.Registration registerHandler(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field first:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.registerHandler:(Ljava/lang/Object;)Lio/fluxcapacitor/common/Registration;
      10: aload_0
      11: getfield      #13                 // Field second:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
      14: aload_1
      15: invokeinterface #38,  2           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.registerHandler:(Ljava/lang/Object;)Lio/fluxcapacitor/common/Registration;
      20: invokeinterface #42,  2           // InterfaceMethod io/fluxcapacitor/common/Registration.merge:(Lio/fluxcapacitor/common/Registration;)Lio/fluxcapacitor/common/Registration;
      25: areturn

  public io.fluxcapacitor.common.Registration registerHandler(java.lang.Object, io.fluxcapacitor.common.handling.HandlerFilter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field first:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
       4: aload_1
       5: aload_2
       6: invokeinterface #48,  3           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.registerHandler:(Ljava/lang/Object;Lio/fluxcapacitor/common/handling/HandlerFilter;)Lio/fluxcapacitor/common/Registration;
      11: aload_0
      12: getfield      #13                 // Field second:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
      15: aload_1
      16: aload_2
      17: invokeinterface #48,  3           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry.registerHandler:(Ljava/lang/Object;Lio/fluxcapacitor/common/handling/HandlerFilter;)Lio/fluxcapacitor/common/Registration;
      22: invokeinterface #42,  2           // InterfaceMethod io/fluxcapacitor/common/Registration.merge:(Lio/fluxcapacitor/common/Registration;)Lio/fluxcapacitor/common/Registration;
      27: areturn

  public io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry$MergedHandlerRegistry(io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry, io.fluxcapacitor.javaclient.tracking.handling.HandlerRegistry);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field first:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field second:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerRegistry;
      14: return

  private static java.util.Optional lambda$handle$2(java.util.Optional);
    Code:
       0: aload_0
       1: areturn

  private static java.util.concurrent.CompletableFuture lambda$handle$1(java.util.Optional, java.util.concurrent.CompletableFuture);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method java/util/Optional.get:()Ljava/lang/Object;
       4: checkcast     #60                 // class java/util/concurrent/CompletableFuture
       7: aload_1
       8: invokedynamic #62,  0             // InvokeDynamic #2:apply:()Ljava/util/function/BiFunction;
      13: invokevirtual #65                 // Method java/util/concurrent/CompletableFuture.thenCombine:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
      16: areturn

  private static io.fluxcapacitor.javaclient.common.Message lambda$handle$0(io.fluxcapacitor.javaclient.common.Message, io.fluxcapacitor.javaclient.common.Message);
    Code:
       0: aload_0
       1: areturn
}
