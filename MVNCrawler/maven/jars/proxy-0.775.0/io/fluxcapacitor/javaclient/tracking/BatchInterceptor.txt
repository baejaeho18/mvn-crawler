Compiled from "BatchInterceptor.java"
public interface io.fluxcapacitor.javaclient.tracking.BatchInterceptor {
  public static io.fluxcapacitor.javaclient.tracking.BatchInterceptor noOp();
    Code:
       0: invokedynamic #1,  0              // InvokeDynamic #0:intercept:()Lio/fluxcapacitor/javaclient/tracking/BatchInterceptor;
       5: areturn

  public abstract java.util.function.Consumer<io.fluxcapacitor.common.api.tracking.MessageBatch> intercept(java.util.function.Consumer<io.fluxcapacitor.common.api.tracking.MessageBatch>, io.fluxcapacitor.javaclient.tracking.Tracker);

  public default void shutdown(io.fluxcapacitor.javaclient.tracking.Tracker);
    Code:
       0: return

  public default io.fluxcapacitor.javaclient.tracking.BatchInterceptor andThen(io.fluxcapacitor.javaclient.tracking.BatchInterceptor);
    Code:
       0: new           #5                  // class io/fluxcapacitor/javaclient/tracking/BatchInterceptor$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method io/fluxcapacitor/javaclient/tracking/BatchInterceptor$1."<init>":(Lio/fluxcapacitor/javaclient/tracking/BatchInterceptor;Lio/fluxcapacitor/javaclient/tracking/BatchInterceptor;)V
       9: areturn

  public static io.fluxcapacitor.javaclient.tracking.BatchInterceptor join(java.util.List<io.fluxcapacitor.javaclient.tracking.BatchInterceptor>);
    Code:
       0: aload_0
       1: invokeinterface #11,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #17,  0             // InvokeDynamic #1:apply:()Ljava/util/function/BinaryOperator;
      11: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      16: invokedynamic #27,  0             // InvokeDynamic #2:intercept:()Lio/fluxcapacitor/javaclient/tracking/BatchInterceptor;
      21: invokevirtual #28                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #34                 // class io/fluxcapacitor/javaclient/tracking/BatchInterceptor
      27: areturn

  private static java.util.function.Consumer lambda$join$1(java.util.function.Consumer, io.fluxcapacitor.javaclient.tracking.Tracker);
    Code:
       0: aload_0
       1: areturn

  private static java.util.function.Consumer lambda$noOp$0(java.util.function.Consumer, io.fluxcapacitor.javaclient.tracking.Tracker);
    Code:
       0: aload_0
       1: areturn
}
