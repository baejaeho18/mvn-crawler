Compiled from "Jsr380Validator.java"
class io.fluxcapacitor.javaclient.tracking.handling.validation.Jsr380Validator$FieldResolver implements jakarta.validation.TraversableResolver {
  public boolean isReachable(java.lang.Object, jakarta.validation.Path$Node, java.lang.Class<?>, jakarta.validation.Path, java.lang.annotation.ElementType);
    Code:
       0: aload         5
       2: getstatic     #1                  // Field java/lang/annotation/ElementType.TYPE_USE:Ljava/lang/annotation/ElementType;
       5: if_acmpne     22
       8: aload_1
       9: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: aload_2
      13: invokeinterface #13,  1           // InterfaceMethod jakarta/validation/Path$Node.getName:()Ljava/lang/String;
      18: invokestatic  #19                 // Method io/fluxcapacitor/common/reflection/ReflectionUtils.declaresField:(Ljava/lang/Class;Ljava/lang/String;)Z
      21: ireturn
      22: aload         5
      24: getstatic     #25                 // Field java/lang/annotation/ElementType.FIELD:Ljava/lang/annotation/ElementType;
      27: if_acmpne     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public boolean isCascadable(java.lang.Object, jakarta.validation.Path$Node, java.lang.Class<?>, jakarta.validation.Path, java.lang.annotation.ElementType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokevirtual #28                 // Method isReachable:(Ljava/lang/Object;Ljakarta/validation/Path$Node;Ljava/lang/Class;Ljakarta/validation/Path;Ljava/lang/annotation/ElementType;)Z
      11: ireturn

  public io.fluxcapacitor.javaclient.tracking.handling.validation.Jsr380Validator$FieldResolver();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: return
}
