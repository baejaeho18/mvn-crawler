Compiled from "ErrorReportingInterceptor.java"
public class io.fluxcapacitor.javaclient.tracking.handling.errorreporting.ErrorReportingInterceptor implements io.fluxcapacitor.javaclient.tracking.handling.HandlerInterceptor {
  private static final org.slf4j.Logger log;

  private final io.fluxcapacitor.javaclient.publishing.ErrorGateway errorGateway;

  public java.util.function.Function<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, java.lang.Object> interceptHandling(java.util.function.Function<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, java.lang.Object>, io.fluxcapacitor.common.handling.HandlerInvoker);
    Code:
       0: aload_2
       1: invokestatic  #1                  // Method io/fluxcapacitor/javaclient/common/ClientUtils.isLocalHandler:(Lio/fluxcapacitor/common/handling/HandlerInvoker;)Z
       4: ifeq          9
       7: aload_1
       8: areturn
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/errorreporting/ErrorReportingInterceptor;Ljava/util/function/Function;Lio/fluxcapacitor/common/handling/HandlerInvoker;)Ljava/util/function/Function;
      17: areturn

  protected void reportError(java.lang.Throwable, io.fluxcapacitor.common.handling.HandlerInvoker, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_3
       1: invokevirtual #11                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getMetadata:()Lio/fluxcapacitor/common/api/Metadata;
       4: astore        4
       6: aload_1
       7: instanceof    #17                 // class io/fluxcapacitor/javaclient/common/exception/FunctionalException
      10: ifne          63
      13: aload_1
      14: instanceof    #19                 // class io/fluxcapacitor/javaclient/common/exception/TechnicalException
      17: ifne          63
      20: aload         4
      22: ldc           #21                 // String stackTrace
      24: aload_1
      25: invokestatic  #23                 // Method org/apache/commons/lang3/exception/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;
      28: invokevirtual #29                 // Method io/fluxcapacitor/common/api/Metadata.with:(Ljava/lang/Object;Ljava/lang/Object;)Lio/fluxcapacitor/common/api/Metadata;
      31: astore        4
      33: new           #19                 // class io/fluxcapacitor/javaclient/common/exception/TechnicalException
      36: dup
      37: ldc           #35                 // String Handler %s failed to handle a %s
      39: iconst_2
      40: anewarray     #37                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_2
      46: invokeinterface #39,  1           // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getTarget:()Ljava/lang/Object;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_3
      55: aastore
      56: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      59: invokespecial #51                 // Method io/fluxcapacitor/javaclient/common/exception/TechnicalException."<init>":(Ljava/lang/String;)V
      62: astore_1
      63: aload_0
      64: getfield      #55                 // Field errorGateway:Lio/fluxcapacitor/javaclient/publishing/ErrorGateway;
      67: new           #61                 // class io/fluxcapacitor/javaclient/common/Message
      70: dup
      71: aload_1
      72: aload         4
      74: invokespecial #63                 // Method io/fluxcapacitor/javaclient/common/Message."<init>":(Ljava/lang/Object;Lio/fluxcapacitor/common/api/Metadata;)V
      77: invokeinterface #66,  2           // InterfaceMethod io/fluxcapacitor/javaclient/publishing/ErrorGateway.report:(Ljava/lang/Object;)V
      82: return

  public io.fluxcapacitor.javaclient.tracking.handling.errorreporting.ErrorReportingInterceptor(io.fluxcapacitor.javaclient.publishing.ErrorGateway);
    Code:
       0: aload_0
       1: invokespecial #72                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #55                 // Field errorGateway:Lio/fluxcapacitor/javaclient/publishing/ErrorGateway;
       9: return

  private java.lang.Object lambda$interceptHandling$2(java.util.function.Function, io.fluxcapacitor.common.handling.HandlerInvoker, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #75,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore        4
       9: aload         4
      11: instanceof    #80                 // class java/util/concurrent/CompletionStage
      14: ifeq          36
      17: aload         4
      19: checkcast     #80                 // class java/util/concurrent/CompletionStage
      22: aload_0
      23: aload_3
      24: aload_2
      25: invokedynamic #82,  0             // InvokeDynamic #1:accept:(Lio/fluxcapacitor/javaclient/tracking/handling/errorreporting/ErrorReportingInterceptor;Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;Lio/fluxcapacitor/common/handling/HandlerInvoker;)Ljava/util/function/BiConsumer;
      30: invokeinterface #86,  2           // InterfaceMethod java/util/concurrent/CompletionStage.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;
      35: pop
      36: aload         4
      38: areturn
      39: astore        4
      41: aload_0
      42: aload         4
      44: aload_2
      45: aload_3
      46: invokevirtual #92                 // Method reportError:(Ljava/lang/Throwable;Lio/fluxcapacitor/common/handling/HandlerInvoker;Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)V
      49: aload         4
      51: athrow
    Exception table:
       from    to  target type
           0    38    39   Class java/lang/Exception

  private void lambda$interceptHandling$1(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, io.fluxcapacitor.common.handling.HandlerInvoker, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload         4
       2: ifnull        18
       5: aload_1
       6: aload_0
       7: aload         4
       9: aload_2
      10: invokedynamic #96,  0             // InvokeDynamic #2:accept:(Lio/fluxcapacitor/javaclient/tracking/handling/errorreporting/ErrorReportingInterceptor;Ljava/lang/Throwable;Lio/fluxcapacitor/common/handling/HandlerInvoker;)Ljava/util/function/Consumer;
      15: invokevirtual #99                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.run:(Ljava/util/function/Consumer;)V
      18: return

  private void lambda$interceptHandling$0(java.lang.Throwable, io.fluxcapacitor.common.handling.HandlerInvoker, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #92                 // Method reportError:(Ljava/lang/Throwable;Lio/fluxcapacitor/common/handling/HandlerInvoker;Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)V
       7: return

  static {};
    Code:
       0: ldc           #56                 // class io/fluxcapacitor/javaclient/tracking/handling/errorreporting/ErrorReportingInterceptor
       2: invokestatic  #103                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #109                // Field log:Lorg/slf4j/Logger;
       8: return
}
