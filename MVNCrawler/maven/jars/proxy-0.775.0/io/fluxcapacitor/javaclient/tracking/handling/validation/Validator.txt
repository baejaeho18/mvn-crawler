Compiled from "Validator.java"
public interface io.fluxcapacitor.javaclient.tracking.handling.validation.Validator {
  public abstract <T> java.util.Optional<io.fluxcapacitor.javaclient.tracking.handling.validation.ValidationException> checkValidity(T, java.lang.Class<?>...);

  public default <T> T assertValid(T, java.lang.Class<?>...) throws io.fluxcapacitor.javaclient.tracking.handling.validation.ValidationException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #1,  3            // InterfaceMethod checkValidity:(Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Optional;
       8: invokedynamic #7,  0              // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      13: invokevirtual #11                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      16: aload_1
      17: areturn

  public default boolean isValid(java.lang.Object, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #1,  3            // InterfaceMethod checkValidity:(Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Optional;
       8: invokevirtual #17                 // Method java/util/Optional.isEmpty:()Z
      11: ireturn

  private static void lambda$assertValid$0(io.fluxcapacitor.javaclient.tracking.handling.validation.ValidationException);
    Code:
       0: aload_0
       1: athrow
}
