Compiled from "ConsumerConfiguration.java"
public final class io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration {
  private final java.lang.String name;

  private final java.util.function.Predicate<java.lang.Object> handlerFilter;

  private final io.fluxcapacitor.javaclient.tracking.ErrorHandler errorHandler;

  private final int threads;

  private final java.lang.String typeFilter;

  private final int maxFetchSize;

  private final java.time.Duration maxWaitDuration;

  private final java.util.List<io.fluxcapacitor.javaclient.tracking.BatchInterceptor> batchInterceptors;

  private final java.util.List<io.fluxcapacitor.javaclient.tracking.handling.HandlerInterceptor> handlerInterceptors;

  private final boolean filterMessageTarget;

  private final boolean ignoreSegment;

  private final boolean singleTracker;

  private final boolean clientControlledIndex;

  private final java.lang.Long minIndex;

  private final java.lang.Long maxIndexExclusive;

  private final boolean exclusive;

  private final boolean passive;

  private final java.util.function.Function<io.fluxcapacitor.javaclient.configuration.client.Client, java.lang.String> trackerIdFactory;

  private final java.time.Duration purgeDelay;

  public static java.util.stream.Stream<io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration> configurations(java.util.Collection<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #7,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #11,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: aload_0
      17: invokeinterface #1,  1            // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      22: invokedynamic #17,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      27: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      32: invokeinterface #21,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      37: invokedynamic #24,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      42: invokeinterface #11,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      47: invokeinterface #21,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      52: invokedynamic #25,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      57: invokestatic  #26                 // InterfaceMethod java/util/Comparator.comparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
      60: invokeinterface #32,  1           // InterfaceMethod java/util/Comparator.reversed:()Ljava/util/Comparator;
      65: invokeinterface #36,  2           // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      70: invokedynamic #40,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      75: invokeinterface #11,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      80: invokestatic  #41                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      83: areturn

  private static java.util.stream.Stream<io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration> classConfigurations(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #45                 // class io/fluxcapacitor/javaclient/tracking/Consumer
       3: invokestatic  #47                 // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getTypeAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #45                 // class io/fluxcapacitor/javaclient/tracking/Consumer
       9: invokestatic  #53                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: aload_0
      13: invokedynamic #59,  0             // InvokeDynamic #5:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      18: invokevirtual #62                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      21: invokevirtual #65                 // Method java/util/Optional.stream:()Ljava/util/stream/Stream;
      24: areturn

  private static java.util.stream.Stream<io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration> packageConfigurations(java.lang.Package);
    Code:
       0: aload_0
       1: ldc           #45                 // class io/fluxcapacitor/javaclient/tracking/Consumer
       3: invokestatic  #66                 // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getPackageAnnotation:(Ljava/lang/Package;Ljava/lang/Class;)Ljava/util/Optional;
       6: aload_0
       7: invokedynamic #70,  0             // InvokeDynamic #6:apply:(Ljava/lang/Package;)Ljava/util/function/Function;
      12: invokevirtual #62                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      15: invokevirtual #65                 // Method java/util/Optional.stream:()Ljava/util/stream/Stream;
      18: areturn

  private static io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration getConfiguration(io.fluxcapacitor.javaclient.tracking.Consumer, java.util.function.Predicate<java.lang.Object>);
    Code:
       0: invokestatic  #73                 // Method builder:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
       3: aload_0
       4: invokeinterface #79,  1           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.name:()Ljava/lang/String;
       9: invokevirtual #83                 // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.name:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      12: aload_1
      13: invokevirtual #88                 // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.handlerFilter:(Ljava/util/function/Predicate;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      16: aload_0
      17: invokeinterface #92,  1           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.errorHandler:()Ljava/lang/Class;
      22: invokestatic  #96                 // Method io/fluxcapacitor/common/reflection/ReflectionUtils.asInstance:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #100                // class io/fluxcapacitor/javaclient/tracking/ErrorHandler
      28: invokevirtual #102                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.errorHandler:(Lio/fluxcapacitor/javaclient/tracking/ErrorHandler;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      31: aload_0
      32: invokeinterface #105,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.threads:()I
      37: invokevirtual #109                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.threads:(I)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      40: aload_0
      41: invokeinterface #112,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.maxFetchSize:()I
      46: invokevirtual #115                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.maxFetchSize:(I)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      49: aload_0
      50: invokeinterface #117,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.maxWaitDuration:()J
      55: aload_0
      56: invokeinterface #121,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.durationUnit:()Ljava/time/temporal/ChronoUnit;
      61: invokestatic  #125                // Method java/time/Duration.of:(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;
      64: invokevirtual #131                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.maxWaitDuration:(Ljava/time/Duration;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      67: aload_0
      68: invokeinterface #134,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.batchInterceptors:()[Ljava/lang/Class;
      73: invokestatic  #138                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      76: invokedynamic #143,  0            // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      81: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      86: invokestatic  #144                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      89: invokeinterface #150,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      94: checkcast     #2                  // class java/util/Collection
      97: invokevirtual #154                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.batchInterceptors:(Ljava/util/Collection;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     100: aload_0
     101: invokeinterface #157,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.filterMessageTarget:()Z
     106: invokevirtual #161                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.filterMessageTarget:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     109: aload_0
     110: invokeinterface #164,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.ignoreSegment:()Z
     115: invokevirtual #167                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.ignoreSegment:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     118: aload_0
     119: invokeinterface #169,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.clientControlledIndex:()Z
     124: invokevirtual #172                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.clientControlledIndex:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     127: aload_0
     128: invokeinterface #174,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.singleTracker:()Z
     133: invokevirtual #177                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.singleTracker:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     136: aload_0
     137: invokeinterface #179,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.minIndex:()J
     142: lconst_0
     143: lcmp
     144: ifge          151
     147: aconst_null
     148: goto          160
     151: aload_0
     152: invokeinterface #179,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.minIndex:()J
     157: invokestatic  #182                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     160: invokevirtual #188                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.minIndex:(Ljava/lang/Long;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     163: aload_0
     164: invokeinterface #191,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.maxIndexExclusive:()J
     169: lconst_0
     170: lcmp
     171: ifge          178
     174: aconst_null
     175: goto          187
     178: aload_0
     179: invokeinterface #191,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.maxIndexExclusive:()J
     184: invokestatic  #182                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     187: invokevirtual #194                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.maxIndexExclusive:(Ljava/lang/Long;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     190: aload_0
     191: invokeinterface #196,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.exclusive:()Z
     196: invokevirtual #199                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.exclusive:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     199: aload_0
     200: invokeinterface #201,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.passive:()Z
     205: invokevirtual #204                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.passive:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     208: aload_0
     209: invokeinterface #206,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.typeFilter:()Ljava/lang/String;
     214: invokevirtual #209                // Method java/lang/String.isBlank:()Z
     217: ifeq          224
     220: aconst_null
     221: goto          230
     224: aload_0
     225: invokeinterface #206,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/Consumer.typeFilter:()Ljava/lang/String;
     230: invokevirtual #214                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.typeFilter:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     233: invokevirtual #216                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.build:()Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
     236: areturn

  private static java.util.function.Predicate<java.lang.Object> $default$handlerFilter();
    Code:
       0: invokedynamic #220,  0            // InvokeDynamic #8:test:()Ljava/util/function/Predicate;
       5: areturn

  private static io.fluxcapacitor.javaclient.tracking.ErrorHandler $default$errorHandler();
    Code:
       0: new           #224                // class io/fluxcapacitor/javaclient/tracking/LoggingErrorHandler
       3: dup
       4: invokespecial #226                // Method io/fluxcapacitor/javaclient/tracking/LoggingErrorHandler."<init>":()V
       7: areturn

  private static int $default$threads();
    Code:
       0: iconst_1
       1: ireturn

  private static java.lang.String $default$typeFilter();
    Code:
       0: aconst_null
       1: areturn

  private static int $default$maxFetchSize();
    Code:
       0: sipush        1024
       3: ireturn

  private static java.time.Duration $default$maxWaitDuration();
    Code:
       0: ldc2_w        #230                // long 60l
       3: invokestatic  #232                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
       6: areturn

  private static boolean $default$filterMessageTarget();
    Code:
       0: iconst_0
       1: ireturn

  private static boolean $default$ignoreSegment();
    Code:
       0: iconst_0
       1: ireturn

  private static boolean $default$singleTracker();
    Code:
       0: iconst_0
       1: ireturn

  private static boolean $default$clientControlledIndex();
    Code:
       0: iconst_0
       1: ireturn

  private static java.lang.Long $default$minIndex();
    Code:
       0: aconst_null
       1: areturn

  private static java.lang.Long $default$maxIndexExclusive();
    Code:
       0: aconst_null
       1: areturn

  private static boolean $default$exclusive();
    Code:
       0: iconst_1
       1: ireturn

  private static boolean $default$passive();
    Code:
       0: iconst_0
       1: ireturn

  private static java.util.function.Function<io.fluxcapacitor.javaclient.configuration.client.Client, java.lang.String> $default$trackerIdFactory();
    Code:
       0: invokedynamic #236,  0            // InvokeDynamic #9:apply:()Ljava/util/function/Function;
       5: areturn

  private static java.time.Duration $default$purgeDelay();
    Code:
       0: aconst_null
       1: areturn

  io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration(java.lang.String, java.util.function.Predicate<java.lang.Object>, io.fluxcapacitor.javaclient.tracking.ErrorHandler, int, java.lang.String, int, java.time.Duration, java.util.List<io.fluxcapacitor.javaclient.tracking.BatchInterceptor>, java.util.List<io.fluxcapacitor.javaclient.tracking.handling.HandlerInterceptor>, boolean, boolean, boolean, boolean, java.lang.Long, java.lang.Long, boolean, boolean, java.util.function.Function<io.fluxcapacitor.javaclient.configuration.client.Client, java.lang.String>, java.time.Duration);
    Code:
       0: aload_0
       1: invokespecial #237                // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #240                // class java/lang/NullPointerException
      11: dup
      12: ldc           #242                // String name is marked non-null but is null
      14: invokespecial #244                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #240                // class java/lang/NullPointerException
      25: dup
      26: ldc           #247                // String handlerFilter is marked non-null but is null
      28: invokespecial #244                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_3
      33: ifnonnull     46
      36: new           #240                // class java/lang/NullPointerException
      39: dup
      40: ldc           #249                // String errorHandler is marked non-null but is null
      42: invokespecial #244                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload         7
      48: ifnonnull     61
      51: new           #240                // class java/lang/NullPointerException
      54: dup
      55: ldc           #251                // String maxWaitDuration is marked non-null but is null
      57: invokespecial #244                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: aload_1
      63: putfield      #253                // Field name:Ljava/lang/String;
      66: aload_0
      67: aload_2
      68: putfield      #256                // Field handlerFilter:Ljava/util/function/Predicate;
      71: aload_0
      72: aload_3
      73: putfield      #259                // Field errorHandler:Lio/fluxcapacitor/javaclient/tracking/ErrorHandler;
      76: aload_0
      77: iload         4
      79: putfield      #262                // Field threads:I
      82: aload_0
      83: aload         5
      85: putfield      #265                // Field typeFilter:Ljava/lang/String;
      88: aload_0
      89: iload         6
      91: putfield      #267                // Field maxFetchSize:I
      94: aload_0
      95: aload         7
      97: putfield      #269                // Field maxWaitDuration:Ljava/time/Duration;
     100: aload_0
     101: aload         8
     103: putfield      #272                // Field batchInterceptors:Ljava/util/List;
     106: aload_0
     107: aload         9
     109: putfield      #275                // Field handlerInterceptors:Ljava/util/List;
     112: aload_0
     113: iload         10
     115: putfield      #278                // Field filterMessageTarget:Z
     118: aload_0
     119: iload         11
     121: putfield      #281                // Field ignoreSegment:Z
     124: aload_0
     125: iload         12
     127: putfield      #283                // Field singleTracker:Z
     130: aload_0
     131: iload         13
     133: putfield      #285                // Field clientControlledIndex:Z
     136: aload_0
     137: aload         14
     139: putfield      #287                // Field minIndex:Ljava/lang/Long;
     142: aload_0
     143: aload         15
     145: putfield      #290                // Field maxIndexExclusive:Ljava/lang/Long;
     148: aload_0
     149: iload         16
     151: putfield      #292                // Field exclusive:Z
     154: aload_0
     155: iload         17
     157: putfield      #294                // Field passive:Z
     160: aload_0
     161: aload         18
     163: putfield      #296                // Field trackerIdFactory:Ljava/util/function/Function;
     166: aload_0
     167: aload         19
     169: putfield      #300                // Field purgeDelay:Ljava/time/Duration;
     172: return

  public static io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration$Builder builder();
    Code:
       0: new           #84                 // class io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder
       3: dup
       4: invokespecial #303                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder."<init>":()V
       7: areturn

  public io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration$Builder toBuilder();
    Code:
       0: new           #84                 // class io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder
       3: dup
       4: invokespecial #303                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder."<init>":()V
       7: aload_0
       8: getfield      #253                // Field name:Ljava/lang/String;
      11: invokevirtual #83                 // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.name:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      14: aload_0
      15: getfield      #256                // Field handlerFilter:Ljava/util/function/Predicate;
      18: invokevirtual #88                 // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.handlerFilter:(Ljava/util/function/Predicate;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      21: aload_0
      22: getfield      #259                // Field errorHandler:Lio/fluxcapacitor/javaclient/tracking/ErrorHandler;
      25: invokevirtual #102                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.errorHandler:(Lio/fluxcapacitor/javaclient/tracking/ErrorHandler;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      28: aload_0
      29: getfield      #262                // Field threads:I
      32: invokevirtual #109                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.threads:(I)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      35: aload_0
      36: getfield      #265                // Field typeFilter:Ljava/lang/String;
      39: invokevirtual #214                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.typeFilter:(Ljava/lang/String;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      42: aload_0
      43: getfield      #267                // Field maxFetchSize:I
      46: invokevirtual #115                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.maxFetchSize:(I)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      49: aload_0
      50: getfield      #269                // Field maxWaitDuration:Ljava/time/Duration;
      53: invokevirtual #131                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.maxWaitDuration:(Ljava/time/Duration;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      56: aload_0
      57: getfield      #278                // Field filterMessageTarget:Z
      60: invokevirtual #161                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.filterMessageTarget:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      63: aload_0
      64: getfield      #281                // Field ignoreSegment:Z
      67: invokevirtual #167                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.ignoreSegment:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      70: aload_0
      71: getfield      #283                // Field singleTracker:Z
      74: invokevirtual #177                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.singleTracker:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      77: aload_0
      78: getfield      #285                // Field clientControlledIndex:Z
      81: invokevirtual #172                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.clientControlledIndex:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      84: aload_0
      85: getfield      #287                // Field minIndex:Ljava/lang/Long;
      88: invokevirtual #188                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.minIndex:(Ljava/lang/Long;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      91: aload_0
      92: getfield      #290                // Field maxIndexExclusive:Ljava/lang/Long;
      95: invokevirtual #194                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.maxIndexExclusive:(Ljava/lang/Long;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
      98: aload_0
      99: getfield      #292                // Field exclusive:Z
     102: invokevirtual #199                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.exclusive:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     105: aload_0
     106: getfield      #294                // Field passive:Z
     109: invokevirtual #204                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.passive:(Z)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     112: aload_0
     113: getfield      #296                // Field trackerIdFactory:Ljava/util/function/Function;
     116: invokevirtual #304                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.trackerIdFactory:(Ljava/util/function/Function;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     119: aload_0
     120: getfield      #300                // Field purgeDelay:Ljava/time/Duration;
     123: invokevirtual #307                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.purgeDelay:(Ljava/time/Duration;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     126: astore_1
     127: aload_0
     128: getfield      #272                // Field batchInterceptors:Ljava/util/List;
     131: ifnull        143
     134: aload_1
     135: aload_0
     136: getfield      #272                // Field batchInterceptors:Ljava/util/List;
     139: invokevirtual #154                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.batchInterceptors:(Ljava/util/Collection;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     142: pop
     143: aload_0
     144: getfield      #275                // Field handlerInterceptors:Ljava/util/List;
     147: ifnull        159
     150: aload_1
     151: aload_0
     152: getfield      #275                // Field handlerInterceptors:Ljava/util/List;
     155: invokevirtual #309                // Method io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder.handlerInterceptors:(Ljava/util/Collection;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration$Builder;
     158: pop
     159: aload_1
     160: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #253                // Field name:Ljava/lang/String;
       4: areturn

  public java.util.function.Predicate<java.lang.Object> getHandlerFilter();
    Code:
       0: aload_0
       1: getfield      #256                // Field handlerFilter:Ljava/util/function/Predicate;
       4: areturn

  public io.fluxcapacitor.javaclient.tracking.ErrorHandler getErrorHandler();
    Code:
       0: aload_0
       1: getfield      #259                // Field errorHandler:Lio/fluxcapacitor/javaclient/tracking/ErrorHandler;
       4: areturn

  public int getThreads();
    Code:
       0: aload_0
       1: getfield      #262                // Field threads:I
       4: ireturn

  public java.lang.String getTypeFilter();
    Code:
       0: aload_0
       1: getfield      #265                // Field typeFilter:Ljava/lang/String;
       4: areturn

  public int getMaxFetchSize();
    Code:
       0: aload_0
       1: getfield      #267                // Field maxFetchSize:I
       4: ireturn

  public java.time.Duration getMaxWaitDuration();
    Code:
       0: aload_0
       1: getfield      #269                // Field maxWaitDuration:Ljava/time/Duration;
       4: areturn

  public java.util.List<io.fluxcapacitor.javaclient.tracking.BatchInterceptor> getBatchInterceptors();
    Code:
       0: aload_0
       1: getfield      #272                // Field batchInterceptors:Ljava/util/List;
       4: areturn

  public java.util.List<io.fluxcapacitor.javaclient.tracking.handling.HandlerInterceptor> getHandlerInterceptors();
    Code:
       0: aload_0
       1: getfield      #275                // Field handlerInterceptors:Ljava/util/List;
       4: areturn

  public boolean filterMessageTarget();
    Code:
       0: aload_0
       1: getfield      #278                // Field filterMessageTarget:Z
       4: ireturn

  public boolean ignoreSegment();
    Code:
       0: aload_0
       1: getfield      #281                // Field ignoreSegment:Z
       4: ireturn

  public boolean singleTracker();
    Code:
       0: aload_0
       1: getfield      #283                // Field singleTracker:Z
       4: ireturn

  public boolean clientControlledIndex();
    Code:
       0: aload_0
       1: getfield      #285                // Field clientControlledIndex:Z
       4: ireturn

  public java.lang.Long getMinIndex();
    Code:
       0: aload_0
       1: getfield      #287                // Field minIndex:Ljava/lang/Long;
       4: areturn

  public java.lang.Long getMaxIndexExclusive();
    Code:
       0: aload_0
       1: getfield      #290                // Field maxIndexExclusive:Ljava/lang/Long;
       4: areturn

  public boolean exclusive();
    Code:
       0: aload_0
       1: getfield      #292                // Field exclusive:Z
       4: ireturn

  public boolean passive();
    Code:
       0: aload_0
       1: getfield      #294                // Field passive:Z
       4: ireturn

  public java.util.function.Function<io.fluxcapacitor.javaclient.configuration.client.Client, java.lang.String> getTrackerIdFactory();
    Code:
       0: aload_0
       1: getfield      #296                // Field trackerIdFactory:Ljava/util/function/Function;
       4: areturn

  public java.time.Duration getPurgeDelay();
    Code:
       0: aload_0
       1: getfield      #300                // Field purgeDelay:Ljava/time/Duration;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #74                 // class io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #74                 // class io/fluxcapacitor/javaclient/tracking/ConsumerConfiguration
      20: astore_2
      21: aload_0
      22: invokevirtual #311                // Method getThreads:()I
      25: aload_2
      26: invokevirtual #311                // Method getThreads:()I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: invokevirtual #314                // Method getMaxFetchSize:()I
      38: aload_2
      39: invokevirtual #314                // Method getMaxFetchSize:()I
      42: if_icmpeq     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: invokevirtual #317                // Method filterMessageTarget:()Z
      51: aload_2
      52: invokevirtual #317                // Method filterMessageTarget:()Z
      55: if_icmpeq     60
      58: iconst_0
      59: ireturn
      60: aload_0
      61: invokevirtual #318                // Method ignoreSegment:()Z
      64: aload_2
      65: invokevirtual #318                // Method ignoreSegment:()Z
      68: if_icmpeq     73
      71: iconst_0
      72: ireturn
      73: aload_0
      74: invokevirtual #319                // Method singleTracker:()Z
      77: aload_2
      78: invokevirtual #319                // Method singleTracker:()Z
      81: if_icmpeq     86
      84: iconst_0
      85: ireturn
      86: aload_0
      87: invokevirtual #320                // Method clientControlledIndex:()Z
      90: aload_2
      91: invokevirtual #320                // Method clientControlledIndex:()Z
      94: if_icmpeq     99
      97: iconst_0
      98: ireturn
      99: aload_0
     100: invokevirtual #321                // Method exclusive:()Z
     103: aload_2
     104: invokevirtual #321                // Method exclusive:()Z
     107: if_icmpeq     112
     110: iconst_0
     111: ireturn
     112: aload_0
     113: invokevirtual #322                // Method passive:()Z
     116: aload_2
     117: invokevirtual #322                // Method passive:()Z
     120: if_icmpeq     125
     123: iconst_0
     124: ireturn
     125: aload_0
     126: invokevirtual #323                // Method getMinIndex:()Ljava/lang/Long;
     129: astore_3
     130: aload_2
     131: invokevirtual #323                // Method getMinIndex:()Ljava/lang/Long;
     134: astore        4
     136: aload_3
     137: ifnonnull     148
     140: aload         4
     142: ifnull        159
     145: goto          157
     148: aload_3
     149: aload         4
     151: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     154: ifne          159
     157: iconst_0
     158: ireturn
     159: aload_0
     160: invokevirtual #331                // Method getMaxIndexExclusive:()Ljava/lang/Long;
     163: astore        5
     165: aload_2
     166: invokevirtual #331                // Method getMaxIndexExclusive:()Ljava/lang/Long;
     169: astore        6
     171: aload         5
     173: ifnonnull     184
     176: aload         6
     178: ifnull        196
     181: goto          194
     184: aload         5
     186: aload         6
     188: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     191: ifne          196
     194: iconst_0
     195: ireturn
     196: aload_0
     197: invokevirtual #334                // Method getName:()Ljava/lang/String;
     200: astore        7
     202: aload_2
     203: invokevirtual #334                // Method getName:()Ljava/lang/String;
     206: astore        8
     208: aload         7
     210: ifnonnull     221
     213: aload         8
     215: ifnull        233
     218: goto          231
     221: aload         7
     223: aload         8
     225: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     228: ifne          233
     231: iconst_0
     232: ireturn
     233: aload_0
     234: invokevirtual #337                // Method getTypeFilter:()Ljava/lang/String;
     237: astore        9
     239: aload_2
     240: invokevirtual #337                // Method getTypeFilter:()Ljava/lang/String;
     243: astore        10
     245: aload         9
     247: ifnonnull     258
     250: aload         10
     252: ifnull        270
     255: goto          268
     258: aload         9
     260: aload         10
     262: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     265: ifne          270
     268: iconst_0
     269: ireturn
     270: aload_0
     271: invokevirtual #340                // Method getMaxWaitDuration:()Ljava/time/Duration;
     274: astore        11
     276: aload_2
     277: invokevirtual #340                // Method getMaxWaitDuration:()Ljava/time/Duration;
     280: astore        12
     282: aload         11
     284: ifnonnull     295
     287: aload         12
     289: ifnull        307
     292: goto          305
     295: aload         11
     297: aload         12
     299: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     302: ifne          307
     305: iconst_0
     306: ireturn
     307: aload_0
     308: invokevirtual #344                // Method getBatchInterceptors:()Ljava/util/List;
     311: astore        13
     313: aload_2
     314: invokevirtual #344                // Method getBatchInterceptors:()Ljava/util/List;
     317: astore        14
     319: aload         13
     321: ifnonnull     332
     324: aload         14
     326: ifnull        344
     329: goto          342
     332: aload         13
     334: aload         14
     336: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     339: ifne          344
     342: iconst_0
     343: ireturn
     344: aload_0
     345: invokevirtual #348                // Method getHandlerInterceptors:()Ljava/util/List;
     348: astore        15
     350: aload_2
     351: invokevirtual #348                // Method getHandlerInterceptors:()Ljava/util/List;
     354: astore        16
     356: aload         15
     358: ifnonnull     369
     361: aload         16
     363: ifnull        381
     366: goto          379
     369: aload         15
     371: aload         16
     373: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     376: ifne          381
     379: iconst_0
     380: ireturn
     381: aload_0
     382: invokevirtual #351                // Method getPurgeDelay:()Ljava/time/Duration;
     385: astore        17
     387: aload_2
     388: invokevirtual #351                // Method getPurgeDelay:()Ljava/time/Duration;
     391: astore        18
     393: aload         17
     395: ifnonnull     406
     398: aload         18
     400: ifnull        418
     403: goto          416
     406: aload         17
     408: aload         18
     410: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     413: ifne          418
     416: iconst_0
     417: ireturn
     418: iconst_1
     419: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: iload_2
       6: bipush        59
       8: imul
       9: aload_0
      10: invokevirtual #311                // Method getThreads:()I
      13: iadd
      14: istore_2
      15: iload_2
      16: bipush        59
      18: imul
      19: aload_0
      20: invokevirtual #314                // Method getMaxFetchSize:()I
      23: iadd
      24: istore_2
      25: iload_2
      26: bipush        59
      28: imul
      29: aload_0
      30: invokevirtual #317                // Method filterMessageTarget:()Z
      33: ifeq          41
      36: bipush        79
      38: goto          43
      41: bipush        97
      43: iadd
      44: istore_2
      45: iload_2
      46: bipush        59
      48: imul
      49: aload_0
      50: invokevirtual #318                // Method ignoreSegment:()Z
      53: ifeq          61
      56: bipush        79
      58: goto          63
      61: bipush        97
      63: iadd
      64: istore_2
      65: iload_2
      66: bipush        59
      68: imul
      69: aload_0
      70: invokevirtual #319                // Method singleTracker:()Z
      73: ifeq          81
      76: bipush        79
      78: goto          83
      81: bipush        97
      83: iadd
      84: istore_2
      85: iload_2
      86: bipush        59
      88: imul
      89: aload_0
      90: invokevirtual #320                // Method clientControlledIndex:()Z
      93: ifeq          101
      96: bipush        79
      98: goto          103
     101: bipush        97
     103: iadd
     104: istore_2
     105: iload_2
     106: bipush        59
     108: imul
     109: aload_0
     110: invokevirtual #321                // Method exclusive:()Z
     113: ifeq          121
     116: bipush        79
     118: goto          123
     121: bipush        97
     123: iadd
     124: istore_2
     125: iload_2
     126: bipush        59
     128: imul
     129: aload_0
     130: invokevirtual #322                // Method passive:()Z
     133: ifeq          141
     136: bipush        79
     138: goto          143
     141: bipush        97
     143: iadd
     144: istore_2
     145: aload_0
     146: invokevirtual #323                // Method getMinIndex:()Ljava/lang/Long;
     149: astore_3
     150: iload_2
     151: bipush        59
     153: imul
     154: aload_3
     155: ifnonnull     163
     158: bipush        43
     160: goto          167
     163: aload_3
     164: invokevirtual #354                // Method java/lang/Object.hashCode:()I
     167: iadd
     168: istore_2
     169: aload_0
     170: invokevirtual #331                // Method getMaxIndexExclusive:()Ljava/lang/Long;
     173: astore        4
     175: iload_2
     176: bipush        59
     178: imul
     179: aload         4
     181: ifnonnull     189
     184: bipush        43
     186: goto          194
     189: aload         4
     191: invokevirtual #354                // Method java/lang/Object.hashCode:()I
     194: iadd
     195: istore_2
     196: aload_0
     197: invokevirtual #334                // Method getName:()Ljava/lang/String;
     200: astore        5
     202: iload_2
     203: bipush        59
     205: imul
     206: aload         5
     208: ifnonnull     216
     211: bipush        43
     213: goto          221
     216: aload         5
     218: invokevirtual #354                // Method java/lang/Object.hashCode:()I
     221: iadd
     222: istore_2
     223: aload_0
     224: invokevirtual #337                // Method getTypeFilter:()Ljava/lang/String;
     227: astore        6
     229: iload_2
     230: bipush        59
     232: imul
     233: aload         6
     235: ifnonnull     243
     238: bipush        43
     240: goto          248
     243: aload         6
     245: invokevirtual #354                // Method java/lang/Object.hashCode:()I
     248: iadd
     249: istore_2
     250: aload_0
     251: invokevirtual #340                // Method getMaxWaitDuration:()Ljava/time/Duration;
     254: astore        7
     256: iload_2
     257: bipush        59
     259: imul
     260: aload         7
     262: ifnonnull     270
     265: bipush        43
     267: goto          275
     270: aload         7
     272: invokevirtual #354                // Method java/lang/Object.hashCode:()I
     275: iadd
     276: istore_2
     277: aload_0
     278: invokevirtual #344                // Method getBatchInterceptors:()Ljava/util/List;
     281: astore        8
     283: iload_2
     284: bipush        59
     286: imul
     287: aload         8
     289: ifnonnull     297
     292: bipush        43
     294: goto          302
     297: aload         8
     299: invokevirtual #354                // Method java/lang/Object.hashCode:()I
     302: iadd
     303: istore_2
     304: aload_0
     305: invokevirtual #348                // Method getHandlerInterceptors:()Ljava/util/List;
     308: astore        9
     310: iload_2
     311: bipush        59
     313: imul
     314: aload         9
     316: ifnonnull     324
     319: bipush        43
     321: goto          329
     324: aload         9
     326: invokevirtual #354                // Method java/lang/Object.hashCode:()I
     329: iadd
     330: istore_2
     331: aload_0
     332: invokevirtual #351                // Method getPurgeDelay:()Ljava/time/Duration;
     335: astore        10
     337: iload_2
     338: bipush        59
     340: imul
     341: aload         10
     343: ifnonnull     351
     346: bipush        43
     348: goto          356
     351: aload         10
     353: invokevirtual #354                // Method java/lang/Object.hashCode:()I
     356: iadd
     357: istore_2
     358: iload_2
     359: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #334                // Method getName:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #357                // Method getHandlerFilter:()Ljava/util/function/Predicate;
       8: aload_0
       9: invokevirtual #360                // Method getErrorHandler:()Lio/fluxcapacitor/javaclient/tracking/ErrorHandler;
      12: aload_0
      13: invokevirtual #311                // Method getThreads:()I
      16: aload_0
      17: invokevirtual #337                // Method getTypeFilter:()Ljava/lang/String;
      20: aload_0
      21: invokevirtual #314                // Method getMaxFetchSize:()I
      24: aload_0
      25: invokevirtual #340                // Method getMaxWaitDuration:()Ljava/time/Duration;
      28: aload_0
      29: invokevirtual #344                // Method getBatchInterceptors:()Ljava/util/List;
      32: aload_0
      33: invokevirtual #348                // Method getHandlerInterceptors:()Ljava/util/List;
      36: aload_0
      37: invokevirtual #317                // Method filterMessageTarget:()Z
      40: aload_0
      41: invokevirtual #318                // Method ignoreSegment:()Z
      44: aload_0
      45: invokevirtual #319                // Method singleTracker:()Z
      48: aload_0
      49: invokevirtual #320                // Method clientControlledIndex:()Z
      52: aload_0
      53: invokevirtual #323                // Method getMinIndex:()Ljava/lang/Long;
      56: aload_0
      57: invokevirtual #331                // Method getMaxIndexExclusive:()Ljava/lang/Long;
      60: aload_0
      61: invokevirtual #321                // Method exclusive:()Z
      64: aload_0
      65: invokevirtual #322                // Method passive:()Z
      68: aload_0
      69: invokevirtual #364                // Method getTrackerIdFactory:()Ljava/util/function/Function;
      72: aload_0
      73: invokevirtual #351                // Method getPurgeDelay:()Ljava/time/Duration;
      76: invokedynamic #367,  0            // InvokeDynamic #10:makeConcatWithConstants:(Ljava/lang/String;Ljava/util/function/Predicate;Lio/fluxcapacitor/javaclient/tracking/ErrorHandler;ILjava/lang/String;ILjava/time/Duration;Ljava/util/List;Ljava/util/List;ZZZZLjava/lang/Long;Ljava/lang/Long;ZZLjava/util/function/Function;Ljava/time/Duration;)Ljava/lang/String;
      81: areturn

  private static java.lang.String lambda$$default$trackerIdFactory$6(io.fluxcapacitor.javaclient.configuration.client.Client);
    Code:
       0: ldc_w         #371                // String %s_%s
       3: iconst_2
       4: anewarray     #238                // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: invokeinterface #373,  1          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/client/Client.id:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: invokestatic  #378                // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      21: aastore
      22: invokestatic  #384                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: areturn

  private static boolean lambda$$default$handlerFilter$5(java.lang.Object);
    Code:
       0: iconst_1
       1: ireturn

  private static io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration lambda$packageConfigurations$4(java.lang.Package, io.fluxcapacitor.javaclient.tracking.Consumer);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #388,  0            // InvokeDynamic #11:test:(Ljava/lang/Package;)Ljava/util/function/Predicate;
       7: invokestatic  #391                // Method getConfiguration:(Lio/fluxcapacitor/javaclient/tracking/Consumer;Ljava/util/function/Predicate;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
      10: areturn

  private static boolean lambda$packageConfigurations$3(java.lang.Package, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #395                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #398                // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       7: aload_0
       8: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifne          39
      14: aload_1
      15: invokevirtual #395                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #398                // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      21: invokevirtual #404                // Method java/lang/Package.getName:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #404                // Method java/lang/Package.getName:()Ljava/lang/String;
      28: invokedynamic #407,  0            // InvokeDynamic #12:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      33: invokevirtual #410                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  private static io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration lambda$classConfigurations$2(java.lang.Class, io.fluxcapacitor.javaclient.tracking.Consumer);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #414,  0            // InvokeDynamic #13:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
       7: invokestatic  #391                // Method getConfiguration:(Lio/fluxcapacitor/javaclient/tracking/Consumer;Ljava/util/function/Predicate;)Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;
      10: areturn

  private static boolean lambda$classConfigurations$1(java.lang.Class, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #395                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #327                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static java.util.stream.Stream lambda$configurations$0(java.lang.Package);
    Code:
       0: aload_0
       1: invokestatic  #417                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getPackageAndParentPackages:(Ljava/lang/Package;)Ljava/util/List;
       4: invokeinterface #421,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: areturn
}
