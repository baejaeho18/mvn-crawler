Compiled from "DefaultHandlerFactory.java"
public class io.fluxcapacitor.javaclient.tracking.handling.DefaultHandlerFactory implements io.fluxcapacitor.javaclient.tracking.handling.HandlerFactory {
  private final io.fluxcapacitor.common.MessageType messageType;

  private final io.fluxcapacitor.javaclient.tracking.handling.HandlerDecorator defaultDecorator;

  private final java.util.List<io.fluxcapacitor.common.handling.ParameterResolver<? super io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>> parameterResolvers;

  private final io.fluxcapacitor.common.handling.MessageFilter<? super io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> messageFilter;

  public static java.lang.Class<? extends java.lang.annotation.Annotation> getHandlerAnnotation(io.fluxcapacitor.common.MessageType);
    Code:
       0: getstatic     #1                  // Field io/fluxcapacitor/javaclient/tracking/handling/DefaultHandlerFactory$1.$SwitchMap$io$fluxcapacitor$common$MessageType:[I
       3: aload_0
       4: invokevirtual #7                  // Method io/fluxcapacitor/common/MessageType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 10
                     1: 72
                     2: 77
                     3: 82
                     4: 87
                     5: 92
                     6: 97
                     7: 102
                     8: 107
                     9: 112
                    10: 117
               default: 64
          }
      64: new           #13                 // class java/lang/IncompatibleClassChangeError
      67: dup
      68: invokespecial #15                 // Method java/lang/IncompatibleClassChangeError."<init>":()V
      71: athrow
      72: ldc           #19                 // class io/fluxcapacitor/javaclient/tracking/handling/HandleCommand
      74: goto          119
      77: ldc           #21                 // class io/fluxcapacitor/javaclient/tracking/handling/HandleEvent
      79: goto          119
      82: ldc           #23                 // class io/fluxcapacitor/javaclient/tracking/handling/HandleNotification
      84: goto          119
      87: ldc           #25                 // class io/fluxcapacitor/javaclient/tracking/handling/HandleQuery
      89: goto          119
      92: ldc           #27                 // class io/fluxcapacitor/javaclient/tracking/handling/HandleResult
      94: goto          119
      97: ldc           #29                 // class io/fluxcapacitor/javaclient/tracking/handling/HandleError
      99: goto          119
     102: ldc           #31                 // class io/fluxcapacitor/javaclient/tracking/handling/HandleSchedule
     104: goto          119
     107: ldc           #33                 // class io/fluxcapacitor/javaclient/tracking/handling/HandleMetrics
     109: goto          119
     112: ldc           #35                 // class io/fluxcapacitor/javaclient/web/HandleWeb
     114: goto          119
     117: ldc           #37                 // class io/fluxcapacitor/javaclient/web/HandleWebResponse
     119: areturn

  public io.fluxcapacitor.javaclient.tracking.handling.DefaultHandlerFactory(io.fluxcapacitor.common.MessageType, io.fluxcapacitor.javaclient.tracking.handling.HandlerDecorator, java.util.List<io.fluxcapacitor.common.handling.ParameterResolver<? super io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>>);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #42                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
       9: aload_0
      10: aload_2
      11: putfield      #48                 // Field defaultDecorator:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerDecorator;
      14: aload_0
      15: aload_3
      16: putfield      #52                 // Field parameterResolvers:Ljava/util/List;
      19: aload_0
      20: aload_0
      21: invokevirtual #56                 // Method computeMessageFilter:()Lio/fluxcapacitor/common/handling/MessageFilter;
      24: putfield      #60                 // Field messageFilter:Lio/fluxcapacitor/common/handling/MessageFilter;
      27: return

  public java.util.Optional<io.fluxcapacitor.common.handling.Handler<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>> createHandler(java.lang.Object, java.lang.String, io.fluxcapacitor.common.handling.HandlerFilter, java.util.List<io.fluxcapacitor.javaclient.tracking.handling.HandlerInterceptor>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #64,  0             // InvokeDynamic #0:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
       7: aload_1
       8: invokevirtual #68                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: aload_0
      12: getfield      #42                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      15: invokestatic  #72                 // Method getHandlerAnnotation:(Lio/fluxcapacitor/common/MessageType;)Ljava/lang/Class;
      18: aload_2
      19: aload_3
      20: aload         4
      22: invokevirtual #76                 // Method createHandler:(Ljava/util/function/Supplier;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Lio/fluxcapacitor/common/handling/HandlerFilter;Ljava/util/List;)Ljava/util/Optional;
      25: areturn

  public java.util.Optional<io.fluxcapacitor.common.handling.Handler<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>> createHandler(java.util.function.Supplier<?>, java.lang.Class<?>, java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.String, io.fluxcapacitor.common.handling.HandlerFilter, java.util.List<io.fluxcapacitor.javaclient.tracking.handling.HandlerInterceptor>);
    Code:
       0: aload_0
       1: getfield      #48                 // Field defaultDecorator:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerDecorator;
       4: invokestatic  #80                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: aload         6
       9: invokeinterface #86,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      14: invokestatic  #92                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      17: invokedynamic #96,  0             // InvokeDynamic #1:apply:()Ljava/util/function/BinaryOperator;
      22: invokeinterface #100,  2          // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      27: invokevirtual #104                // Method java/util/Optional.orElseThrow:()Ljava/lang/Object;
      30: checkcast     #110                // class io/fluxcapacitor/javaclient/tracking/handling/HandlerDecorator
      33: astore        7
      35: aload_3
      36: invokestatic  #112                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      39: aload_0
      40: aload         5
      42: invokedynamic #116,  0            // InvokeDynamic #2:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/DefaultHandlerFactory;Lio/fluxcapacitor/common/handling/HandlerFilter;)Ljava/util/function/Function;
      47: invokevirtual #119                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      50: aload_2
      51: invokedynamic #123,  0            // InvokeDynamic #3:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      56: invokevirtual #127                // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      59: aload_0
      60: aload_1
      61: aload_2
      62: invokedynamic #131,  0            // InvokeDynamic #4:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/DefaultHandlerFactory;Ljava/util/function/Supplier;Ljava/lang/Class;)Ljava/util/function/Function;
      67: invokevirtual #119                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      70: aload         7
      72: invokedynamic #134,  0            // InvokeDynamic #5:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/HandlerDecorator;)Ljava/util/function/Function;
      77: invokevirtual #119                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      80: areturn

  protected io.fluxcapacitor.common.handling.MessageFilter<? super io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> computeMessageFilter();
    Code:
       0: aload_0
       1: getfield      #52                 // Field parameterResolvers:Ljava/util/List;
       4: invokeinterface #86,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #137,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      14: invokeinterface #140,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokedynamic #144,  0            // InvokeDynamic #7:apply:()Ljava/util/function/BinaryOperator;
      24: invokeinterface #100,  2          // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      29: invokedynamic #145,  0            // InvokeDynamic #8:get:()Ljava/util/function/Supplier;
      34: invokevirtual #148                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      37: checkcast     #152                // class io/fluxcapacitor/common/handling/MessageFilter
      40: astore_1
      41: aload_0
      42: getfield      #42                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      45: getstatic     #154                // Field io/fluxcapacitor/common/MessageType.WEBREQUEST:Lio/fluxcapacitor/common/MessageType;
      48: if_acmpne     63
      51: invokestatic  #157                // Method io/fluxcapacitor/javaclient/web/WebRequest.getWebRequestFilter:()Lio/fluxcapacitor/common/handling/MessageFilter;
      54: aload_1
      55: invokeinterface #162,  2          // InterfaceMethod io/fluxcapacitor/common/handling/MessageFilter.and:(Lio/fluxcapacitor/common/handling/MessageFilter;)Lio/fluxcapacitor/common/handling/MessageFilter;
      60: goto          64
      63: aload_1
      64: areturn

  public io.fluxcapacitor.javaclient.tracking.handling.DefaultHandlerFactory(io.fluxcapacitor.common.MessageType, io.fluxcapacitor.javaclient.tracking.handling.HandlerDecorator, java.util.List<io.fluxcapacitor.common.handling.ParameterResolver<? super io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>>, io.fluxcapacitor.common.handling.MessageFilter<? super io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #42                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
       9: aload_0
      10: aload_2
      11: putfield      #48                 // Field defaultDecorator:Lio/fluxcapacitor/javaclient/tracking/handling/HandlerDecorator;
      14: aload_0
      15: aload_3
      16: putfield      #52                 // Field parameterResolvers:Ljava/util/List;
      19: aload_0
      20: aload         4
      22: putfield      #60                 // Field messageFilter:Lio/fluxcapacitor/common/handling/MessageFilter;
      25: return

  private static io.fluxcapacitor.common.handling.MessageFilter lambda$computeMessageFilter$7();
    Code:
       0: invokedynamic #166,  0            // InvokeDynamic #9:test:()Lio/fluxcapacitor/common/handling/MessageFilter;
       5: areturn

  private static boolean lambda$computeMessageFilter$6(io.fluxcapacitor.javaclient.common.HasMessage, java.lang.reflect.Executable);
    Code:
       0: iconst_1
       1: ireturn

  private static java.util.stream.Stream lambda$computeMessageFilter$5(io.fluxcapacitor.common.handling.ParameterResolver);
    Code:
       0: aload_0
       1: instanceof    #152                // class io/fluxcapacitor/common/handling/MessageFilter
       4: ifeq          17
       7: aload_0
       8: checkcast     #152                // class io/fluxcapacitor/common/handling/MessageFilter
      11: invokestatic  #80                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      14: goto          20
      17: invokestatic  #168                // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      20: areturn

  private static io.fluxcapacitor.common.handling.Handler lambda$createHandler$4(io.fluxcapacitor.javaclient.tracking.handling.HandlerDecorator, io.fluxcapacitor.common.handling.Handler);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #171,  2          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/HandlerDecorator.wrap:(Lio/fluxcapacitor/common/handling/Handler;)Lio/fluxcapacitor/common/handling/Handler;
       7: areturn

  private io.fluxcapacitor.common.handling.Handler lambda$createHandler$3(java.util.function.Supplier, java.lang.Class, io.fluxcapacitor.common.handling.HandlerConfiguration);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #52                 // Field parameterResolvers:Ljava/util/List;
       6: aload_3
       7: invokestatic  #175                // Method io/fluxcapacitor/common/handling/HandlerInspector.createHandler:(Ljava/util/function/Supplier;Ljava/lang/Class;Ljava/util/List;Lio/fluxcapacitor/common/handling/HandlerConfiguration;)Lio/fluxcapacitor/common/handling/Handler;
      10: areturn

  private static boolean lambda$createHandler$2(java.lang.Class, io.fluxcapacitor.common.handling.HandlerConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #180                // Method io/fluxcapacitor/common/handling/HandlerInspector.hasHandlerMethods:(Ljava/lang/Class;Lio/fluxcapacitor/common/handling/HandlerConfiguration;)Z
       5: ireturn

  private io.fluxcapacitor.common.handling.HandlerConfiguration lambda$createHandler$1(io.fluxcapacitor.common.handling.HandlerFilter, java.lang.Class);
    Code:
       0: invokestatic  #184                // Method io/fluxcapacitor/common/handling/HandlerConfiguration.builder:()Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
       3: aload_2
       4: invokevirtual #190                // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.methodAnnotation:(Ljava/lang/Class;)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
       7: aload_1
       8: invokevirtual #196                // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.handlerFilter:(Lio/fluxcapacitor/common/handling/HandlerFilter;)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
      11: aload_0
      12: getfield      #60                 // Field messageFilter:Lio/fluxcapacitor/common/handling/MessageFilter;
      15: invokevirtual #200                // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.messageFilter:(Lio/fluxcapacitor/common/handling/MessageFilter;)Lio/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder;
      18: invokevirtual #203                // Method io/fluxcapacitor/common/handling/HandlerConfiguration$HandlerConfigurationBuilder.build:()Lio/fluxcapacitor/common/handling/HandlerConfiguration;
      21: areturn

  private static java.lang.Object lambda$createHandler$0(java.lang.Object);
    Code:
       0: aload_0
       1: areturn
}
