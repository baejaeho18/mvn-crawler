Compiled from "TrackingClient.java"
public interface io.fluxcapacitor.javaclient.tracking.client.TrackingClient extends java.lang.AutoCloseable {
  public default io.fluxcapacitor.common.api.tracking.MessageBatch readAndWait(java.lang.String, java.lang.String, java.lang.Long, io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokeinterface #1,  5            // InterfaceMethod read:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;)Ljava/util/concurrent/CompletableFuture;
      11: invokevirtual #7                  // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
      14: checkcast     #13                 // class io/fluxcapacitor/common/api/tracking/MessageBatch
      17: areturn
      18: astore        5
      20: aload         5
      22: athrow
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/Throwable

  public abstract java.util.concurrent.CompletableFuture<io.fluxcapacitor.common.api.tracking.MessageBatch> read(java.lang.String, java.lang.String, java.lang.Long, io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration);

  public abstract java.util.List<io.fluxcapacitor.common.api.SerializedMessage> readFromIndex(long, int);

  public default java.util.concurrent.CompletableFuture<java.lang.Void> storePosition(java.lang.String, int[], long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: getstatic     #23                 // Field io/fluxcapacitor/common/Guarantee.STORED:Lio/fluxcapacitor/common/Guarantee;
       7: invokeinterface #29,  6           // InterfaceMethod storePosition:(Ljava/lang/String;[IJLio/fluxcapacitor/common/Guarantee;)Ljava/util/concurrent/CompletableFuture;
      12: areturn

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> storePosition(java.lang.String, int[], long, io.fluxcapacitor.common.Guarantee);

  public default java.util.concurrent.CompletableFuture<java.lang.Void> resetPosition(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: getstatic     #23                 // Field io/fluxcapacitor/common/Guarantee.STORED:Lio/fluxcapacitor/common/Guarantee;
       6: invokeinterface #33,  5           // InterfaceMethod resetPosition:(Ljava/lang/String;JLio/fluxcapacitor/common/Guarantee;)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> resetPosition(java.lang.String, long, io.fluxcapacitor.common.Guarantee);

  public abstract io.fluxcapacitor.common.api.tracking.Position getPosition(java.lang.String);

  public default java.util.concurrent.CompletableFuture<java.lang.Void> disconnectTracker(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: getstatic     #37                 // Field io/fluxcapacitor/common/Guarantee.SENT:Lio/fluxcapacitor/common/Guarantee;
       7: invokeinterface #40,  5           // InterfaceMethod disconnectTracker:(Ljava/lang/String;Ljava/lang/String;ZLio/fluxcapacitor/common/Guarantee;)Ljava/util/concurrent/CompletableFuture;
      12: areturn

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> disconnectTracker(java.lang.String, java.lang.String, boolean, io.fluxcapacitor.common.Guarantee);

  public abstract io.fluxcapacitor.common.MessageType getMessageType();

  public abstract void close();
}
