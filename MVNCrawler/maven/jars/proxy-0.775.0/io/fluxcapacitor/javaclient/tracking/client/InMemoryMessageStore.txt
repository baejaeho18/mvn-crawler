Compiled from "InMemoryMessageStore.java"
public class io.fluxcapacitor.javaclient.tracking.client.InMemoryMessageStore implements io.fluxcapacitor.javaclient.publishing.client.GatewayClient,io.fluxcapacitor.javaclient.tracking.client.TrackingClient {
  private static final org.slf4j.Logger log;

  private final java.util.Set<java.util.function.Consumer<io.fluxcapacitor.javaclient.publishing.client.MessageDispatch>> monitors;

  private final java.util.concurrent.ExecutorService executor;

  private final java.util.concurrent.atomic.AtomicLong nextIndex;

  private final java.util.Map<java.lang.String, io.fluxcapacitor.javaclient.tracking.client.TrackerRead> trackers;

  private final java.util.concurrent.ConcurrentSkipListMap<java.lang.Long, io.fluxcapacitor.common.api.SerializedMessage> messageLog;

  private final java.util.Map<java.lang.String, java.lang.Long> consumerTokens;

  private final io.fluxcapacitor.common.MessageType messageType;

  private final java.time.Duration messageExpiration;

  public io.fluxcapacitor.javaclient.tracking.client.InMemoryMessageStore(io.fluxcapacitor.common.MessageType);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #1                  // long 2l
       5: invokestatic  #3                  // Method java/time/Duration.ofMinutes:(J)Ljava/time/Duration;
       8: invokespecial #9                  // Method "<init>":(Lio/fluxcapacitor/common/MessageType;Ljava/time/Duration;)V
      11: return

  public java.util.concurrent.CompletableFuture<java.lang.Void> send(io.fluxcapacitor.common.Guarantee, io.fluxcapacitor.common.api.SerializedMessage...);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_2
       5: invokestatic  #15                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       8: aload_0
       9: invokedynamic #21,  0             // InvokeDynamic #0:accept:(Lio/fluxcapacitor/javaclient/tracking/client/InMemoryMessageStore;)Ljava/util/function/Consumer;
      14: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      19: aload_0
      20: getfield      #31                 // Field messageExpiration:Ljava/time/Duration;
      23: ifnull        34
      26: aload_0
      27: aload_0
      28: getfield      #31                 // Field messageExpiration:Ljava/time/Duration;
      31: invokevirtual #35                 // Method purgeExpiredMessages:(Ljava/time/Duration;)V
      34: aload_0
      35: invokevirtual #39                 // Method java/lang/Object.notifyAll:()V
      38: aload_3
      39: monitorexit
      40: goto          50
      43: astore        4
      45: aload_3
      46: monitorexit
      47: aload         4
      49: athrow
      50: aconst_null
      51: invokestatic  #45                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      54: astore_3
      55: aload_0
      56: getfield      #51                 // Field monitors:Ljava/util/Set;
      59: invokeinterface #55,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      64: ifne          100
      67: new           #61                 // class io/fluxcapacitor/javaclient/publishing/client/MessageDispatch
      70: dup
      71: aload_2
      72: invokestatic  #63                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      75: aload_0
      76: getfield      #67                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      79: invokespecial #71                 // Method io/fluxcapacitor/javaclient/publishing/client/MessageDispatch."<init>":(Ljava/util/List;Lio/fluxcapacitor/common/MessageType;)V
      82: astore        4
      84: aload_0
      85: getfield      #51                 // Field monitors:Ljava/util/Set;
      88: aload         4
      90: invokedynamic #74,  0             // InvokeDynamic #1:accept:(Lio/fluxcapacitor/javaclient/publishing/client/MessageDispatch;)Ljava/util/function/Consumer;
      95: invokeinterface #77,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
     100: aload_3
     101: areturn
     102: astore        5
     104: aload_0
     105: getfield      #51                 // Field monitors:Ljava/util/Set;
     108: invokeinterface #55,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     113: ifne          149
     116: new           #61                 // class io/fluxcapacitor/javaclient/publishing/client/MessageDispatch
     119: dup
     120: aload_2
     121: invokestatic  #63                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     124: aload_0
     125: getfield      #67                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
     128: invokespecial #71                 // Method io/fluxcapacitor/javaclient/publishing/client/MessageDispatch."<init>":(Ljava/util/List;Lio/fluxcapacitor/common/MessageType;)V
     131: astore        6
     133: aload_0
     134: getfield      #51                 // Field monitors:Ljava/util/Set;
     137: aload         6
     139: invokedynamic #74,  0             // InvokeDynamic #1:accept:(Lio/fluxcapacitor/javaclient/publishing/client/MessageDispatch;)Ljava/util/function/Consumer;
     144: invokeinterface #77,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
     149: aload         5
     151: athrow
    Exception table:
       from    to  target type
           4    40    43   any
          43    47    43   any
           0    55   102   any
         102   104   102   any

  protected void purgeExpiredMessages(java.time.Duration);
    Code:
       0: invokestatic  #78                 // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.currentTime:()Ljava/time/Instant;
       3: aload_1
       4: invokevirtual #84                 // Method java/time/Instant.minus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;
       7: invokevirtual #90                 // Method java/time/Instant.toEpochMilli:()J
      10: lstore_2
      11: aload_0
      12: getfield      #94                 // Field messageLog:Ljava/util/concurrent/ConcurrentSkipListMap;
      15: lload_2
      16: invokestatic  #98                 // Method io/fluxcapacitor/javaclient/tracking/IndexUtils.indexFromMillis:(J)J
      19: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      22: invokevirtual #110                // Method java/util/concurrent/ConcurrentSkipListMap.headMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
      25: invokeinterface #116,  1          // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.clear:()V
      30: return

  public java.util.concurrent.CompletableFuture<io.fluxcapacitor.common.api.tracking.MessageBatch> read(java.lang.String, java.lang.String, java.lang.Long, io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration);
    Code:
       0: aload_0
       1: new           #121                // class io/fluxcapacitor/javaclient/tracking/client/SimpleTrackerRead
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload_0
      11: getfield      #67                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      14: invokespecial #123                // Method io/fluxcapacitor/javaclient/tracking/client/SimpleTrackerRead."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Lio/fluxcapacitor/javaclient/tracking/ConsumerConfiguration;Lio/fluxcapacitor/common/MessageType;)V
      17: invokevirtual #126                // Method read:(Lio/fluxcapacitor/javaclient/tracking/client/TrackerRead;)Ljava/util/concurrent/CompletableFuture;
      20: areturn

  public java.util.concurrent.CompletableFuture<int[]> claimSegment(io.fluxcapacitor.javaclient.tracking.client.TrackerRead);
    Code:
       0: aload_1
       1: invokeinterface #130,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getMessageType:()Lio/fluxcapacitor/common/MessageType;
       6: getstatic     #136                // Field io/fluxcapacitor/common/MessageType.RESULT:Lio/fluxcapacitor/common/MessageType;
       9: if_acmpeq     78
      12: aload_1
      13: invokeinterface #141,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getTrackerId:()Ljava/lang/String;
      18: aload_0
      19: getfield      #145                // Field trackers:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #149,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getConsumer:()Ljava/lang/String;
      28: aload_1
      29: invokedynamic #152,  0            // InvokeDynamic #2:apply:(Lio/fluxcapacitor/javaclient/tracking/client/TrackerRead;)Ljava/util/function/Function;
      34: invokeinterface #156,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      39: checkcast     #131                // class io/fluxcapacitor/javaclient/tracking/client/TrackerRead
      42: invokeinterface #141,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getTrackerId:()Ljava/lang/String;
      47: invokestatic  #162                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      50: ifne          78
      53: invokedynamic #168,  0            // InvokeDynamic #3:get:()Ljava/util/function/Supplier;
      58: aload_1
      59: invokeinterface #172,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getDeadline:()J
      64: invokestatic  #175                // Method java/lang/System.currentTimeMillis:()J
      67: lsub
      68: getstatic     #180                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      71: invokestatic  #186                // Method java/util/concurrent/CompletableFuture.delayedExecutor:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Executor;
      74: invokestatic  #190                // Method java/util/concurrent/CompletableFuture.supplyAsync:(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      77: areturn
      78: iconst_2
      79: newarray       int
      81: dup
      82: iconst_0
      83: iconst_0
      84: iastore
      85: dup
      86: iconst_1
      87: getstatic     #194                // Field io/fluxcapacitor/common/api/tracking/Position.MAX_SEGMENT:I
      90: iastore
      91: invokestatic  #45                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      94: areturn

  public java.util.concurrent.CompletableFuture<io.fluxcapacitor.common.api.tracking.MessageBatch> read(io.fluxcapacitor.javaclient.tracking.client.TrackerRead);
    Code:
       0: aload_1
       1: invokeinterface #130,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getMessageType:()Lio/fluxcapacitor/common/MessageType;
       6: getstatic     #136                // Field io/fluxcapacitor/common/MessageType.RESULT:Lio/fluxcapacitor/common/MessageType;
       9: if_acmpeq     98
      12: aload_1
      13: invokeinterface #141,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getTrackerId:()Ljava/lang/String;
      18: aload_0
      19: getfield      #145                // Field trackers:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #149,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getConsumer:()Ljava/lang/String;
      28: aload_1
      29: invokedynamic #200,  0            // InvokeDynamic #4:apply:(Lio/fluxcapacitor/javaclient/tracking/client/TrackerRead;)Ljava/util/function/Function;
      34: invokeinterface #156,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      39: checkcast     #131                // class io/fluxcapacitor/javaclient/tracking/client/TrackerRead
      42: invokeinterface #141,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getTrackerId:()Ljava/lang/String;
      47: invokestatic  #162                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      50: ifne          98
      53: getstatic     #201                // Field log:Lorg/slf4j/Logger;
      56: ldc           #205                // String Delaying read by secondary tracker {} (message type {})
      58: aload_1
      59: invokeinterface #149,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getConsumer:()Ljava/lang/String;
      64: aload_0
      65: getfield      #67                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      68: invokeinterface #207,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      73: invokedynamic #213,  0            // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
      78: aload_1
      79: invokeinterface #172,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getDeadline:()J
      84: invokestatic  #175                // Method java/lang/System.currentTimeMillis:()J
      87: lsub
      88: getstatic     #180                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      91: invokestatic  #186                // Method java/util/concurrent/CompletableFuture.delayedExecutor:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Executor;
      94: invokestatic  #190                // Method java/util/concurrent/CompletableFuture.supplyAsync:(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      97: areturn
      98: new           #46                 // class java/util/concurrent/CompletableFuture
     101: dup
     102: invokespecial #214                // Method java/util/concurrent/CompletableFuture."<init>":()V
     105: astore_2
     106: aload_0
     107: getfield      #216                // Field executor:Ljava/util/concurrent/ExecutorService;
     110: aload_0
     111: aload_1
     112: aload_2
     113: invokedynamic #220,  0            // InvokeDynamic #6:run:(Lio/fluxcapacitor/javaclient/tracking/client/InMemoryMessageStore;Lio/fluxcapacitor/javaclient/tracking/client/TrackerRead;Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Runnable;
     118: invokeinterface #224,  2          // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
     123: aload_2
     124: areturn

  protected boolean shouldWait(java.util.Map<java.lang.Long, io.fluxcapacitor.common.api.SerializedMessage>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #230,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       7: invokevirtual #234                // Method filterMessages:(Ljava/util/Collection;)Ljava/util/Collection;
      10: invokeinterface #238,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
      15: ireturn

  protected java.util.Collection<io.fluxcapacitor.common.api.SerializedMessage> filterMessages(java.util.Collection<io.fluxcapacitor.common.api.SerializedMessage>);
    Code:
       0: aload_1
       1: areturn

  public java.util.List<io.fluxcapacitor.common.api.SerializedMessage> readFromIndex(long, int);
    Code:
       0: new           #241                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #94                 // Field messageLog:Ljava/util/concurrent/ConcurrentSkipListMap;
       8: lload_1
       9: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokevirtual #243                // Method java/util/concurrent/ConcurrentSkipListMap.tailMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
      15: invokeinterface #246,  1          // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.values:()Ljava/util/Collection;
      20: invokespecial #247                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      23: astore        4
      25: aload         4
      27: iconst_0
      28: iload_3
      29: aload         4
      31: invokevirtual #250                // Method java/util/ArrayList.size:()I
      34: invokestatic  #254                // Method java/lang/Math.min:(II)I
      37: invokevirtual #260                // Method java/util/ArrayList.subList:(II)Ljava/util/List;
      40: areturn

  private long getLastIndex(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #264                // Field consumerTokens:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #267,  0            // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      10: invokeinterface #156,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #105                // class java/lang/Long
      18: invokevirtual #270                // Method java/lang/Long.longValue:()J
      21: lreturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> storePosition(java.lang.String, int[], long, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: aload_1
       2: lload_3
       3: aload         5
       5: invokevirtual #273                // Method resetPosition:(Ljava/lang/String;JLio/fluxcapacitor/common/Guarantee;)Ljava/util/concurrent/CompletableFuture;
       8: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> resetPosition(java.lang.String, long, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: getfield      #264                // Field consumerTokens:Ljava/util/Map;
       4: aload_1
       5: lload_2
       6: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokeinterface #277,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aconst_null
      16: invokestatic  #45                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      19: areturn

  public io.fluxcapacitor.common.api.tracking.Position getPosition(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #264                // Field consumerTokens:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #281,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #105                // class java/lang/Long
      13: invokestatic  #284                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      16: invokedynamic #290,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      21: invokevirtual #291                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      24: aconst_null
      25: invokevirtual #295                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #195                // class io/fluxcapacitor/common/api/tracking/Position
      31: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> disconnectTracker(java.lang.String, java.lang.String, boolean, io.fluxcapacitor.common.Guarantee);
    Code:
       0: aload_0
       1: aload_2
       2: invokedynamic #298,  0            // InvokeDynamic #9:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
       7: invokevirtual #302                // Method disconnectTrackersMatching:(Ljava/util/function/Predicate;)V
      10: aconst_null
      11: invokestatic  #45                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      14: areturn

  public <T extends io.fluxcapacitor.javaclient.tracking.client.TrackerRead> void disconnectTrackersMatching(java.util.function.Predicate<T>);
    Code:
       0: aload_0
       1: getfield      #145                // Field trackers:Ljava/util/Map;
       4: invokeinterface #230,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_1
      10: invokedynamic #306,  0            // InvokeDynamic #10:test:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      15: invokeinterface #309,  2          // InterfaceMethod java/util/Collection.removeIf:(Ljava/util/function/Predicate;)Z
      20: pop
      21: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #216                // Field executor:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #313,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
       9: pop
      10: return

  protected io.fluxcapacitor.common.api.SerializedMessage getMessage(long);
    Code:
       0: aload_0
       1: getfield      #94                 // Field messageLog:Ljava/util/concurrent/ConcurrentSkipListMap;
       4: lload_1
       5: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #317                // Method java/util/concurrent/ConcurrentSkipListMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #318                // class io/fluxcapacitor/common/api/SerializedMessage
      14: areturn

  public io.fluxcapacitor.common.Registration registerMonitor(java.util.function.Consumer<io.fluxcapacitor.javaclient.publishing.client.MessageDispatch>);
    Code:
       0: aload_0
       1: getfield      #51                 // Field monitors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #320,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_1
      13: invokedynamic #324,  0            // InvokeDynamic #11:cancel:(Lio/fluxcapacitor/javaclient/tracking/client/InMemoryMessageStore;Ljava/util/function/Consumer;)Lio/fluxcapacitor/common/Registration;
      18: areturn

  public io.fluxcapacitor.javaclient.tracking.client.InMemoryMessageStore(io.fluxcapacitor.common.MessageType, java.time.Duration);
    Code:
       0: aload_0
       1: invokespecial #328                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #329                // class java/util/concurrent/CopyOnWriteArraySet
       8: dup
       9: invokespecial #331                // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      12: putfield      #51                 // Field monitors:Ljava/util/Set;
      15: aload_0
      16: ldc_w         #332                // String InMemoryMessageStore
      19: invokestatic  #334                // Method io/fluxcapacitor/common/ObjectUtils.newThreadFactory:(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
      22: invokestatic  #340                // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      25: putfield      #216                // Field executor:Ljava/util/concurrent/ExecutorService;
      28: aload_0
      29: new           #346                // class java/util/concurrent/atomic/AtomicLong
      32: dup
      33: invokespecial #348                // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      36: putfield      #349                // Field nextIndex:Ljava/util/concurrent/atomic/AtomicLong;
      39: aload_0
      40: new           #353                // class java/util/concurrent/ConcurrentHashMap
      43: dup
      44: invokespecial #355                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      47: putfield      #145                // Field trackers:Ljava/util/Map;
      50: aload_0
      51: new           #111                // class java/util/concurrent/ConcurrentSkipListMap
      54: dup
      55: invokespecial #356                // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
      58: putfield      #94                 // Field messageLog:Ljava/util/concurrent/ConcurrentSkipListMap;
      61: aload_0
      62: new           #353                // class java/util/concurrent/ConcurrentHashMap
      65: dup
      66: invokespecial #355                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      69: putfield      #264                // Field consumerTokens:Ljava/util/Map;
      72: aload_0
      73: aload_1
      74: putfield      #67                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
      77: aload_0
      78: aload_2
      79: putfield      #31                 // Field messageExpiration:Ljava/time/Duration;
      82: return

  public io.fluxcapacitor.common.MessageType getMessageType();
    Code:
       0: aload_0
       1: getfield      #67                 // Field messageType:Lio/fluxcapacitor/common/MessageType;
       4: areturn

  private void lambda$registerMonitor$11(java.util.function.Consumer);
    Code:
       0: aload_0
       1: getfield      #51                 // Field monitors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #357,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private static boolean lambda$disconnectTrackersMatching$10(java.util.function.Predicate, io.fluxcapacitor.javaclient.tracking.client.TrackerRead);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #360,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
       7: ireturn

  private static boolean lambda$disconnectTracker$9(java.lang.String, io.fluxcapacitor.javaclient.tracking.client.TrackerRead);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #141,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getTrackerId:()Ljava/lang/String;
       7: invokestatic  #162                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn

  private static java.lang.Long lambda$getLastIndex$8(java.lang.String);
    Code:
       0: ldc2_w        #364                // long -1l
       3: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       6: areturn

  private void lambda$read$7(io.fluxcapacitor.javaclient.tracking.client.TrackerRead, java.util.concurrent.CompletableFuture);
    Code:
       0: invokestatic  #366                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: astore_3
       4: aload_0
       5: dup
       6: astore        4
       8: monitorenter
       9: invokestatic  #175                // Method java/lang/System.currentTimeMillis:()J
      12: aload_1
      13: invokeinterface #172,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getDeadline:()J
      18: lcmp
      19: ifge          104
      22: aload_0
      23: aload_0
      24: getfield      #94                 // Field messageLog:Ljava/util/concurrent/ConcurrentSkipListMap;
      27: aload_1
      28: invokeinterface #372,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getLastIndex:()Ljava/lang/Long;
      33: invokestatic  #284                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      36: aload_0
      37: aload_1
      38: invokedynamic #376,  0            // InvokeDynamic #12:get:(Lio/fluxcapacitor/javaclient/tracking/client/InMemoryMessageStore;Lio/fluxcapacitor/javaclient/tracking/client/TrackerRead;)Ljava/util/function/Supplier;
      43: invokevirtual #379                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      46: checkcast     #105                // class java/lang/Long
      49: iconst_0
      50: invokevirtual #383                // Method java/util/concurrent/ConcurrentSkipListMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      53: dup
      54: astore_3
      55: invokevirtual #386                // Method shouldWait:(Ljava/util/Map;)Z
      58: ifeq          104
      61: aload_1
      62: invokeinterface #172,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getDeadline:()J
      67: invokestatic  #175                // Method java/lang/System.currentTimeMillis:()J
      70: lsub
      71: lstore        5
      73: lload         5
      75: lconst_0
      76: lcmp
      77: ifle          101
      80: aload_0
      81: lload         5
      83: invokevirtual #390                // Method java/lang/Object.wait:(J)V
      86: goto          101
      89: astore        7
      91: invokestatic  #396                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      94: invokevirtual #402                // Method java/lang/Thread.interrupt:()V
      97: aload         4
      99: monitorexit
     100: return
     101: goto          9
     104: aload         4
     106: monitorexit
     107: goto          118
     110: astore        8
     112: aload         4
     114: monitorexit
     115: aload         8
     117: athrow
     118: new           #241                // class java/util/ArrayList
     121: dup
     122: aload_0
     123: aload_3
     124: invokeinterface #230,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     129: invokevirtual #234                // Method filterMessages:(Ljava/util/Collection;)Ljava/util/Collection;
     132: invokespecial #247                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     135: astore        4
     137: aload         4
     139: iconst_0
     140: aload         4
     142: invokeinterface #405,  1          // InterfaceMethod java/util/List.size:()I
     147: aload_1
     148: invokeinterface #408,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getMaxSize:()I
     153: invokestatic  #254                // Method java/lang/Math.min:(II)I
     156: invokeinterface #411,  3          // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
     161: astore        4
     163: aload         4
     165: invokeinterface #412,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     170: ifeq          177
     173: aconst_null
     174: goto          199
     177: aload         4
     179: aload         4
     181: invokeinterface #405,  1          // InterfaceMethod java/util/List.size:()I
     186: iconst_1
     187: isub
     188: invokeinterface #413,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     193: checkcast     #318                // class io/fluxcapacitor/common/api/SerializedMessage
     196: invokevirtual #416                // Method io/fluxcapacitor/common/api/SerializedMessage.getIndex:()Ljava/lang/Long;
     199: astore        5
     201: aload         4
     203: invokeinterface #419,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     208: aload_1
     209: dup
     210: invokestatic  #422                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     213: pop
     214: invokedynamic #425,  0            // InvokeDynamic #13:test:(Lio/fluxcapacitor/javaclient/tracking/client/TrackerRead;)Ljava/util/function/Predicate;
     219: invokeinterface #428,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     224: invokestatic  #432                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     227: invokeinterface #438,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     232: checkcast     #406                // class java/util/List
     235: astore        4
     237: aload_2
     238: new           #442                // class io/fluxcapacitor/common/api/tracking/MessageBatch
     241: dup
     242: iconst_2
     243: newarray       int
     245: dup
     246: iconst_0
     247: iconst_0
     248: iastore
     249: dup
     250: iconst_1
     251: sipush        128
     254: iastore
     255: aload         4
     257: aload         5
     259: invokespecial #444                // Method io/fluxcapacitor/common/api/tracking/MessageBatch."<init>":([ILjava/util/List;Ljava/lang/Long;)V
     262: invokevirtual #447                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
     265: pop
     266: return
    Exception table:
       from    to  target type
          80    86    89   Class java/lang/InterruptedException
           9   100   110   any
         101   107   110   any
         110   115   110   any

  private java.lang.Long lambda$read$6(io.fluxcapacitor.javaclient.tracking.client.TrackerRead);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #149,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/client/TrackerRead.getConsumer:()Ljava/lang/String;
       7: invokevirtual #450                // Method getLastIndex:(Ljava/lang/String;)J
      10: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: areturn

  private static io.fluxcapacitor.common.api.tracking.MessageBatch lambda$read$5();
    Code:
       0: new           #442                // class io/fluxcapacitor/common/api/tracking/MessageBatch
       3: dup
       4: iconst_2
       5: newarray       int
       7: dup
       8: iconst_0
       9: iconst_0
      10: iastore
      11: dup
      12: iconst_1
      13: iconst_0
      14: iastore
      15: invokestatic  #453                // Method java/util/Collections.emptyList:()Ljava/util/List;
      18: aconst_null
      19: invokespecial #444                // Method io/fluxcapacitor/common/api/tracking/MessageBatch."<init>":([ILjava/util/List;Ljava/lang/Long;)V
      22: areturn

  private static io.fluxcapacitor.javaclient.tracking.client.TrackerRead lambda$read$4(io.fluxcapacitor.javaclient.tracking.client.TrackerRead, java.lang.String);
    Code:
       0: aload_0
       1: areturn

  private static int[] lambda$claimSegment$3();
    Code:
       0: iconst_2
       1: newarray       int
       3: dup
       4: iconst_0
       5: iconst_0
       6: iastore
       7: dup
       8: iconst_1
       9: iconst_0
      10: iastore
      11: areturn

  private static io.fluxcapacitor.javaclient.tracking.client.TrackerRead lambda$claimSegment$2(io.fluxcapacitor.javaclient.tracking.client.TrackerRead, java.lang.String);
    Code:
       0: aload_0
       1: areturn

  private static void lambda$send$1(io.fluxcapacitor.javaclient.publishing.client.MessageDispatch, java.util.function.Consumer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #456,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
       7: return

  private void lambda$send$0(io.fluxcapacitor.common.api.SerializedMessage);
    Code:
       0: aload_1
       1: invokevirtual #416                // Method io/fluxcapacitor/common/api/SerializedMessage.getIndex:()Ljava/lang/Long;
       4: ifnonnull     26
       7: aload_1
       8: aload_0
       9: getfield      #349                // Field nextIndex:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokedynamic #461,  0            // InvokeDynamic #14:applyAsLong:()Ljava/util/function/LongUnaryOperator;
      17: invokevirtual #465                // Method java/util/concurrent/atomic/AtomicLong.updateAndGet:(Ljava/util/function/LongUnaryOperator;)J
      20: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      23: invokevirtual #469                // Method io/fluxcapacitor/common/api/SerializedMessage.setIndex:(Ljava/lang/Long;)V
      26: aload_0
      27: getfield      #94                 // Field messageLog:Ljava/util/concurrent/ConcurrentSkipListMap;
      30: aload_1
      31: invokevirtual #416                // Method io/fluxcapacitor/common/api/SerializedMessage.getIndex:()Ljava/lang/Long;
      34: aload_1
      35: invokevirtual #473                // Method java/util/concurrent/ConcurrentSkipListMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: return

  static {};
    Code:
       0: ldc           #10                 // class io/fluxcapacitor/javaclient/tracking/client/InMemoryMessageStore
       2: invokestatic  #474                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #201                // Field log:Lorg/slf4j/Logger;
       8: return
}
