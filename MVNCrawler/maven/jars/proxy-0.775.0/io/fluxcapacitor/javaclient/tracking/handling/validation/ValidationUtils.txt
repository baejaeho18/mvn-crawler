Compiled from "ValidationUtils.java"
public class io.fluxcapacitor.javaclient.tracking.handling.validation.ValidationUtils {
  private static final org.slf4j.Logger log;

  public static final io.fluxcapacitor.javaclient.tracking.handling.validation.Validator defaultValidator;

  private static final java.util.function.Function<java.lang.Class<?>, java.lang.Class<?>[]> validateWithGroups;

  private static final java.util.function.Function<java.lang.Class<?>, java.lang.String[]> requiredRolesCache;

  private static final java.util.function.BiFunction<java.lang.Class<?>, java.lang.reflect.Executable, java.lang.String[]> requiredRolesForMethodCache;

  public io.fluxcapacitor.javaclient.tracking.handling.validation.ValidationUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Optional<io.fluxcapacitor.javaclient.tracking.handling.validation.ValidationException> checkValidity(java.lang.Object, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field defaultValidator:Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;
       4: aload_1
       5: invokestatic  #13                 // Method checkValidity:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;[Ljava/lang/Class;)Ljava/util/Optional;
       8: areturn

  public static boolean isValid(java.lang.Object, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field defaultValidator:Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;
       4: aload_1
       5: invokestatic  #17                 // Method isValid:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;[Ljava/lang/Class;)Z
       8: ireturn

  public static void assertValid(java.lang.Object, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field defaultValidator:Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;
       4: aload_1
       5: invokestatic  #21                 // Method assertValid:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;[Ljava/lang/Class;)V
       8: return

  public static java.util.Optional<io.fluxcapacitor.javaclient.tracking.handling.validation.ValidationException> checkValidity(java.lang.Object, io.fluxcapacitor.javaclient.tracking.handling.validation.Validator, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: instanceof    #25                 // class java/util/Collection
       4: ifeq          48
       7: aload_0
       8: checkcast     #25                 // class java/util/Collection
      11: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      16: aload_1
      17: aload_2
      18: invokedynamic #31,  0             // InvokeDynamic #0:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;[Ljava/lang/Class;)Ljava/util/function/Function;
      23: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      28: invokedynamic #41,  0             // InvokeDynamic #1:apply:()Ljava/util/function/BinaryOperator;
      33: invokeinterface #44,  2           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      38: invokestatic  #48                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      41: invokevirtual #54                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #49                 // class java/util/Optional
      47: areturn
      48: aload_1
      49: aload_0
      50: aload_0
      51: aload_2
      52: invokestatic  #58                 // Method getValidationGroups:(Ljava/lang/Object;[Ljava/lang/Class;)[Ljava/lang/Class;
      55: invokeinterface #62,  3           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/validation/Validator.checkValidity:(Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Optional;
      60: areturn

  public static boolean isValid(java.lang.Object, io.fluxcapacitor.javaclient.tracking.handling.validation.Validator, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: instanceof    #25                 // class java/util/Collection
       4: ifeq          52
       7: aload_0
       8: checkcast     #25                 // class java/util/Collection
      11: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      16: aload_1
      17: aload_2
      18: invokedynamic #67,  0             // InvokeDynamic #2:apply:(Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;[Ljava/lang/Class;)Ljava/util/function/Function;
      23: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      28: invokedynamic #68,  0             // InvokeDynamic #3:apply:()Ljava/util/function/BinaryOperator;
      33: invokeinterface #44,  2           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      38: iconst_1
      39: invokestatic  #69                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      42: invokevirtual #54                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #70                 // class java/lang/Boolean
      48: invokevirtual #75                 // Method java/lang/Boolean.booleanValue:()Z
      51: ireturn
      52: aload_1
      53: aload_0
      54: aload_0
      55: aload_2
      56: invokestatic  #58                 // Method getValidationGroups:(Ljava/lang/Object;[Ljava/lang/Class;)[Ljava/lang/Class;
      59: invokeinterface #79,  3           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/validation/Validator.isValid:(Ljava/lang/Object;[Ljava/lang/Class;)Z
      64: ireturn

  public static void assertValid(java.lang.Object, io.fluxcapacitor.javaclient.tracking.handling.validation.Validator, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: instanceof    #82                 // class java/lang/Iterable
       4: ifeq          26
       7: aload_0
       8: checkcast     #82                 // class java/lang/Iterable
      11: aload_1
      12: aload_2
      13: invokedynamic #84,  0             // InvokeDynamic #4:accept:(Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;[Ljava/lang/Class;)Ljava/util/function/Consumer;
      18: invokeinterface #88,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      23: goto          39
      26: aload_1
      27: aload_0
      28: aload_0
      29: aload_2
      30: invokestatic  #58                 // Method getValidationGroups:(Ljava/lang/Object;[Ljava/lang/Class;)[Ljava/lang/Class;
      33: invokeinterface #92,  3           // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/validation/Validator.assertValid:(Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
      38: pop
      39: return

  private static java.lang.Class<?>[] getValidationGroups(java.lang.Object, java.lang.Class<?>[]);
    Code:
       0: aload_1
       1: arraylength
       2: ifgt          9
       5: aload_0
       6: ifnonnull     11
       9: aload_1
      10: areturn
      11: getstatic     #95                 // Field validateWithGroups:Ljava/util/function/Function;
      14: aload_0
      15: invokevirtual #99                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokeinterface #103,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #107                // class "[Ljava/lang/Class;"
      26: areturn

  public static void assertAuthorized(java.lang.Class<?>, io.fluxcapacitor.javaclient.tracking.handling.authentication.User) throws io.fluxcapacitor.javaclient.tracking.handling.authentication.UnauthenticatedException, io.fluxcapacitor.javaclient.tracking.handling.authentication.UnauthorizedException;
    Code:
       0: getstatic     #109                // Field requiredRolesCache:Ljava/util/function/Function;
       3: aload_0
       4: invokeinterface #103,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #112                // class "[Ljava/lang/String;"
      12: astore_2
      13: aload_0
      14: invokevirtual #114                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      17: aload_1
      18: aload_2
      19: invokestatic  #120                // Method assertAuthorized:(Ljava/lang/String;Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;[Ljava/lang/String;)V
      22: return

  public static java.util.Optional<java.lang.Exception> checkAuthorization(java.lang.Class<?>, io.fluxcapacitor.javaclient.tracking.handling.authentication.User);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #124                // Method assertAuthorized:(Ljava/lang/Class;Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;)V
       5: goto          14
       8: astore_2
       9: aload_2
      10: invokestatic  #129                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      13: areturn
      14: invokestatic  #48                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      17: areturn
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Exception

  public static boolean isAuthorized(java.lang.Class<?>, io.fluxcapacitor.javaclient.tracking.handling.authentication.User);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method checkAuthorization:(Ljava/lang/Class;Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;)Ljava/util/Optional;
       5: invokevirtual #137                // Method java/util/Optional.isEmpty:()Z
       8: ireturn

  public static boolean isAuthorized(java.lang.Class<?>, java.lang.reflect.Executable, io.fluxcapacitor.javaclient.tracking.handling.authentication.User);
    Code:
       0: aload_1
       1: invokevirtual #140                // Method java/lang/reflect/Executable.getName:()Ljava/lang/String;
       4: aload_2
       5: getstatic     #145                // Field requiredRolesForMethodCache:Ljava/util/function/BiFunction;
       8: aload_0
       9: aload_1
      10: invokeinterface #149,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #112                // class "[Ljava/lang/String;"
      18: invokestatic  #120                // Method assertAuthorized:(Ljava/lang/String;Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;[Ljava/lang/String;)V
      21: goto          27
      24: astore_3
      25: iconst_0
      26: ireturn
      27: iconst_1
      28: ireturn
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/Exception

  protected static void assertAuthorized(java.lang.String, io.fluxcapacitor.javaclient.tracking.handling.authentication.User, java.lang.String[]);
    Code:
       0: aload_2
       1: ifnull        160
       4: aload_1
       5: ifnonnull     29
       8: new           #154                // class io/fluxcapacitor/javaclient/tracking/handling/authentication/UnauthenticatedException
      11: dup
      12: ldc           #156                // String %s requires authentication
      14: iconst_1
      15: anewarray     #2                  // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: aastore
      22: invokestatic  #158                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: invokespecial #164                // Method io/fluxcapacitor/javaclient/tracking/handling/authentication/UnauthenticatedException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: new           #167                // class java/util/ArrayList
      32: dup
      33: invokespecial #169                // Method java/util/ArrayList."<init>":()V
      36: astore_3
      37: aload_2
      38: invokestatic  #170                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      41: aload_3
      42: invokedynamic #175,  0            // InvokeDynamic #5:test:(Ljava/util/List;)Ljava/util/function/Predicate;
      47: invokeinterface #179,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      52: aload_1
      53: invokedynamic #183,  0            // InvokeDynamic #6:test:(Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;)Ljava/util/function/Predicate;
      58: invokeinterface #186,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      63: ifeq          96
      66: new           #190                // class io/fluxcapacitor/javaclient/tracking/handling/authentication/UnauthorizedException
      69: dup
      70: ldc           #192                // String User %s is unauthorized to execute %s
      72: iconst_2
      73: anewarray     #2                  // class java/lang/Object
      76: dup
      77: iconst_0
      78: aload_1
      79: invokeinterface #194,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/authentication/User.getName:()Ljava/lang/String;
      84: aastore
      85: dup
      86: iconst_1
      87: aload_0
      88: aastore
      89: invokestatic  #158                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      92: invokespecial #197                // Method io/fluxcapacitor/javaclient/tracking/handling/authentication/UnauthorizedException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_3
      97: invokeinterface #198,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     102: ifne          160
     105: aload_3
     106: invokeinterface #201,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     111: aload_1
     112: dup
     113: invokestatic  #202                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: invokedynamic #207,  0            // InvokeDynamic #7:test:(Lio/fluxcapacitor/javaclient/tracking/handling/authentication/User;)Ljava/util/function/Predicate;
     122: invokeinterface #208,  2          // InterfaceMethod java/util/stream/Stream.noneMatch:(Ljava/util/function/Predicate;)Z
     127: ifeq          160
     130: new           #190                // class io/fluxcapacitor/javaclient/tracking/handling/authentication/UnauthorizedException
     133: dup
     134: ldc           #192                // String User %s is unauthorized to execute %s
     136: iconst_2
     137: anewarray     #2                  // class java/lang/Object
     140: dup
     141: iconst_0
     142: aload_1
     143: invokeinterface #194,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/authentication/User.getName:()Ljava/lang/String;
     148: aastore
     149: dup
     150: iconst_1
     151: aload_0
     152: aastore
     153: invokestatic  #158                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     156: invokespecial #197                // Method io/fluxcapacitor/javaclient/tracking/handling/authentication/UnauthorizedException."<init>":(Ljava/lang/String;)V
     159: athrow
     160: return

  protected static java.lang.String[] getRequiredRoles(java.util.Collection<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #211,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      11: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #214,  0            // InvokeDynamic #9:test:()Ljava/util/function/Predicate;
      21: invokeinterface #179,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      26: invokedynamic #217,  0            // InvokeDynamic #10:apply:()Ljava/util/function/BinaryOperator;
      31: invokeinterface #44,  2           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      36: aconst_null
      37: invokevirtual #54                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #112                // class "[Ljava/lang/String;"
      43: areturn

  protected static java.lang.String[] getRequiredRoles(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: instanceof    #218                // class io/fluxcapacitor/javaclient/tracking/handling/authentication/RequiresAnyRole
       4: ifeq          17
       7: aload_0
       8: checkcast     #218                // class io/fluxcapacitor/javaclient/tracking/handling/authentication/RequiresAnyRole
      11: invokeinterface #220,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/authentication/RequiresAnyRole.value:()[Ljava/lang/String;
      16: areturn
      17: aload_0
      18: invokeinterface #224,  1          // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      23: ldc           #218                // class io/fluxcapacitor/javaclient/tracking/handling/authentication/RequiresAnyRole
      25: invokevirtual #229                // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      28: ifeq          126
      31: aload_0
      32: invokeinterface #224,  1          // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      37: invokestatic  #233                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAllMethods:(Ljava/lang/Class;)Ljava/util/List;
      40: invokeinterface #239,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore_1
      46: aload_1
      47: invokeinterface #243,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          121
      55: aload_1
      56: invokeinterface #248,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #252                // class java/lang/reflect/Method
      64: astore_2
      65: aload_2
      66: invokevirtual #254                // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      69: ldc           #255                // String value
      71: invokevirtual #256                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      74: ifeq          118
      77: aload_2
      78: aload_0
      79: iconst_0
      80: anewarray     #2                  // class java/lang/Object
      83: invokevirtual #260                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      86: checkcast     #264                // class "[Ljava/lang/Object;"
      89: astore_3
      90: aload_3
      91: invokestatic  #170                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      94: invokedynamic #266,  0            // InvokeDynamic #11:apply:()Ljava/util/function/Function;
      99: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     104: invokedynamic #267,  0            // InvokeDynamic #12:apply:()Ljava/util/function/IntFunction;
     109: invokeinterface #270,  2          // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     114: checkcast     #112                // class "[Ljava/lang/String;"
     117: areturn
     118: goto          46
     121: iconst_0
     122: anewarray     #159                // class java/lang/String
     125: areturn
     126: aload_0
     127: instanceof    #274                // class io/fluxcapacitor/javaclient/tracking/handling/authentication/ForbidsAnyRole
     130: ifeq          169
     133: aload_0
     134: checkcast     #274                // class io/fluxcapacitor/javaclient/tracking/handling/authentication/ForbidsAnyRole
     137: invokeinterface #276,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/authentication/ForbidsAnyRole.value:()[Ljava/lang/String;
     142: invokestatic  #170                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
     145: invokedynamic #277,  0            // InvokeDynamic #13:apply:()Ljava/util/function/Function;
     150: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     155: invokedynamic #278,  0            // InvokeDynamic #14:apply:()Ljava/util/function/IntFunction;
     160: invokeinterface #270,  2          // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     165: checkcast     #112                // class "[Ljava/lang/String;"
     168: areturn
     169: aload_0
     170: invokeinterface #224,  1          // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
     175: ldc_w         #274                // class io/fluxcapacitor/javaclient/tracking/handling/authentication/ForbidsAnyRole
     178: invokevirtual #229                // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
     181: ifeq          289
     184: aload_0
     185: invokeinterface #224,  1          // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
     190: invokestatic  #233                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAllMethods:(Ljava/lang/Class;)Ljava/util/List;
     193: invokeinterface #239,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     198: astore_1
     199: aload_1
     200: invokeinterface #243,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     205: ifeq          284
     208: aload_1
     209: invokeinterface #248,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     214: checkcast     #252                // class java/lang/reflect/Method
     217: astore_2
     218: aload_2
     219: invokevirtual #254                // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     222: ldc           #255                // String value
     224: invokevirtual #256                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     227: ifeq          281
     230: aload_2
     231: aload_0
     232: iconst_0
     233: anewarray     #2                  // class java/lang/Object
     236: invokevirtual #260                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     239: checkcast     #264                // class "[Ljava/lang/Object;"
     242: astore_3
     243: aload_3
     244: invokestatic  #170                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
     247: invokedynamic #266,  0            // InvokeDynamic #11:apply:()Ljava/util/function/Function;
     252: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     257: invokedynamic #279,  0            // InvokeDynamic #15:apply:()Ljava/util/function/Function;
     262: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     267: invokedynamic #280,  0            // InvokeDynamic #16:apply:()Ljava/util/function/IntFunction;
     272: invokeinterface #270,  2          // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     277: checkcast     #112                // class "[Ljava/lang/String;"
     280: areturn
     281: goto          199
     284: iconst_0
     285: anewarray     #159                // class java/lang/String
     288: areturn
     289: aconst_null
     290: areturn
     291: astore_1
     292: aload_1
     293: athrow
    Exception table:
       from    to  target type
           0    16   291   Class java/lang/Throwable
          17   117   291   Class java/lang/Throwable
         118   125   291   Class java/lang/Throwable
         126   168   291   Class java/lang/Throwable
         169   280   291   Class java/lang/Throwable
         281   288   291   Class java/lang/Throwable
         289   290   291   Class java/lang/Throwable

  private static java.lang.String[] lambda$getRequiredRoles$19(int);
    Code:
       0: iload_0
       1: anewarray     #159                // class java/lang/String
       4: areturn

  private static java.lang.String lambda$getRequiredRoles$18(java.lang.String);
    Code:
       0: aload_0
       1: invokedynamic #289,  0            // InvokeDynamic #17:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  private static java.lang.String[] lambda$getRequiredRoles$17(int);
    Code:
       0: iload_0
       1: anewarray     #159                // class java/lang/String
       4: areturn

  private static java.lang.String lambda$getRequiredRoles$16(java.lang.String);
    Code:
       0: aload_0
       1: invokedynamic #289,  0            // InvokeDynamic #17:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  private static java.lang.String[] lambda$getRequiredRoles$15(int);
    Code:
       0: iload_0
       1: anewarray     #159                // class java/lang/String
       4: areturn

  private static java.lang.String[] lambda$getRequiredRoles$14(java.lang.String[], java.lang.String[]);
    Code:
       0: aload_0
       1: invokestatic  #170                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       4: aload_1
       5: invokestatic  #170                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       8: invokestatic  #293                // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      11: invokedynamic #297,  0            // InvokeDynamic #18:apply:()Ljava/util/function/IntFunction;
      16: invokeinterface #270,  2          // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      21: checkcast     #112                // class "[Ljava/lang/String;"
      24: areturn

  private static java.lang.String[] lambda$getRequiredRoles$13(int);
    Code:
       0: iload_0
       1: anewarray     #159                // class java/lang/String
       4: areturn

  private static boolean lambda$assertAuthorized$12(io.fluxcapacitor.javaclient.tracking.handling.authentication.User, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #298                // Method java/lang/String.substring:(I)Ljava/lang/String;
       6: invokeinterface #302,  2          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/authentication/User.hasRole:(Ljava/lang/String;)Z
      11: ireturn

  private static boolean lambda$assertAuthorized$11(java.util.List, java.lang.String);
    Code:
       0: aload_1
       1: ldc_w         #305                // String !
       4: invokevirtual #307                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: aload_1
      14: invokeinterface #310,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: iconst_0
      21: ireturn

  private static java.lang.String[] lambda$static$10(java.lang.Class, java.lang.reflect.Executable);
    Code:
       0: aload_1
       1: invokevirtual #314                // Method java/lang/reflect/Executable.getAnnotations:()[Ljava/lang/annotation/Annotation;
       4: invokestatic  #318                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: invokestatic  #322                // Method getRequiredRoles:(Ljava/util/Collection;)[Ljava/lang/String;
      10: invokestatic  #326                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      13: aload_0
      14: invokedynamic #329,  0            // InvokeDynamic #19:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      19: invokevirtual #333                // Method java/util/Optional.or:(Ljava/util/function/Supplier;)Ljava/util/Optional;
      22: aload_0
      23: invokedynamic #337,  0            // InvokeDynamic #20:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      28: invokevirtual #338                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      31: checkcast     #112                // class "[Ljava/lang/String;"
      34: areturn

  private static java.lang.String[] lambda$static$9(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #342                // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       4: invokestatic  #346                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getPackageAnnotations:(Ljava/lang/Package;)Ljava/util/Collection;
       7: invokestatic  #322                // Method getRequiredRoles:(Ljava/util/Collection;)[Ljava/lang/String;
      10: areturn

  private static java.util.Optional lambda$static$8(java.lang.Class);
    Code:
       0: aload_0
       1: invokestatic  #350                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getTypeAnnotations:(Ljava/lang/Class;)Ljava/util/Collection;
       4: invokestatic  #322                // Method getRequiredRoles:(Ljava/util/Collection;)[Ljava/lang/String;
       7: invokestatic  #326                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      10: areturn

  private static java.lang.String[] lambda$static$7(java.lang.Class);
    Code:
       0: aload_0
       1: invokestatic  #350                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getTypeAnnotations:(Ljava/lang/Class;)Ljava/util/Collection;
       4: invokestatic  #322                // Method getRequiredRoles:(Ljava/util/Collection;)[Ljava/lang/String;
       7: invokestatic  #326                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      10: aload_0
      11: invokedynamic #354,  0            // InvokeDynamic #21:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      16: invokevirtual #338                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      19: checkcast     #112                // class "[Ljava/lang/String;"
      22: areturn

  private static java.lang.String[] lambda$static$6(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #342                // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       4: invokestatic  #346                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getPackageAnnotations:(Ljava/lang/Package;)Ljava/util/Collection;
       7: invokestatic  #322                // Method getRequiredRoles:(Ljava/util/Collection;)[Ljava/lang/String;
      10: areturn

  private static void lambda$assertValid$5(io.fluxcapacitor.javaclient.tracking.handling.validation.Validator, java.lang.Class[], java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokestatic  #21                 // Method assertValid:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;[Ljava/lang/Class;)V
       6: return

  private static java.lang.Boolean lambda$isValid$4(java.lang.Boolean, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method java/lang/Boolean.booleanValue:()Z
       4: ifeq          18
       7: aload_1
       8: invokevirtual #75                 // Method java/lang/Boolean.booleanValue:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #69                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: areturn

  private static java.lang.Boolean lambda$isValid$3(io.fluxcapacitor.javaclient.tracking.handling.validation.Validator, java.lang.Class[], java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokestatic  #17                 // Method isValid:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;[Ljava/lang/Class;)Z
       6: invokestatic  #69                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  private static java.util.Optional lambda$checkValidity$2(java.util.Optional, java.util.Optional);
    Code:
       0: aload_0
       1: invokevirtual #137                // Method java/util/Optional.isEmpty:()Z
       4: ifeq          11
       7: aload_1
       8: goto          12
      11: aload_0
      12: areturn

  private static java.util.Optional lambda$checkValidity$1(io.fluxcapacitor.javaclient.tracking.handling.validation.Validator, java.lang.Class[], java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokestatic  #13                 // Method checkValidity:(Ljava/lang/Object;Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;[Ljava/lang/Class;)Ljava/util/Optional;
       6: areturn

  private static java.lang.Class[] lambda$static$0(java.lang.Class);
    Code:
       0: aload_0
       1: ldc_w         #355                // class io/fluxcapacitor/javaclient/tracking/handling/validation/ValidateWith
       4: invokevirtual #357                // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       7: checkcast     #355                // class io/fluxcapacitor/javaclient/tracking/handling/validation/ValidateWith
      10: astore_1
      11: aload_1
      12: ifnonnull     20
      15: iconst_0
      16: anewarray     #115                // class java/lang/Class
      19: areturn
      20: aload_1
      21: invokeinterface #361,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/validation/ValidateWith.value:()[Ljava/lang/Class;
      26: areturn

  static {};
    Code:
       0: ldc           #8                  // class io/fluxcapacitor/javaclient/tracking/handling/validation/ValidationUtils
       2: invokestatic  #364                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #370                // Field log:Lorg/slf4j/Logger;
       8: ldc           #63                 // class io/fluxcapacitor/javaclient/tracking/handling/validation/Validator
      10: invokestatic  #374                // Method java/util/ServiceLoader.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;
      13: invokestatic  #129                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      16: invokedynamic #380,  0            // InvokeDynamic #22:apply:()Ljava/util/function/Function;
      21: invokevirtual #381                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      24: invokedynamic #384,  0            // InvokeDynamic #23:test:()Ljava/util/function/Predicate;
      29: invokevirtual #385                // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      32: invokedynamic #388,  0            // InvokeDynamic #24:apply:()Ljava/util/function/Function;
      37: invokevirtual #381                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      40: invokedynamic #389,  0            // InvokeDynamic #25:get:()Ljava/util/function/Supplier;
      45: invokevirtual #338                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      48: checkcast     #63                 // class io/fluxcapacitor/javaclient/tracking/handling/validation/Validator
      51: putstatic     #7                  // Field defaultValidator:Lio/fluxcapacitor/javaclient/tracking/handling/validation/Validator;
      54: invokedynamic #392,  0            // InvokeDynamic #26:apply:()Ljava/util/function/Function;
      59: invokestatic  #393                // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
      62: putstatic     #95                 // Field validateWithGroups:Ljava/util/function/Function;
      65: invokedynamic #399,  0            // InvokeDynamic #27:apply:()Ljava/util/function/Function;
      70: invokestatic  #393                // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
      73: putstatic     #109                // Field requiredRolesCache:Ljava/util/function/Function;
      76: invokedynamic #400,  0            // InvokeDynamic #28:apply:()Ljava/util/function/BiFunction;
      81: invokestatic  #403                // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/BiFunction;)Lio/fluxcapacitor/common/MemoizingBiFunction;
      84: putstatic     #145                // Field requiredRolesForMethodCache:Ljava/util/function/BiFunction;
      87: return
}
