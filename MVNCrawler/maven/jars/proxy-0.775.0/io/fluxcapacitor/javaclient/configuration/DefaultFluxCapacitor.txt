Compiled from "DefaultFluxCapacitor.java"
public class io.fluxcapacitor.javaclient.configuration.DefaultFluxCapacitor implements io.fluxcapacitor.javaclient.FluxCapacitor {
  private static final org.slf4j.Logger log;

  private final java.util.Map<io.fluxcapacitor.common.MessageType, ? extends io.fluxcapacitor.javaclient.tracking.Tracking> trackingSupplier;

  private final io.fluxcapacitor.javaclient.publishing.CommandGateway commandGateway;

  private final io.fluxcapacitor.javaclient.publishing.QueryGateway queryGateway;

  private final io.fluxcapacitor.javaclient.publishing.EventGateway eventGateway;

  private final io.fluxcapacitor.javaclient.publishing.ResultGateway resultGateway;

  private final io.fluxcapacitor.javaclient.publishing.ErrorGateway errorGateway;

  private final io.fluxcapacitor.javaclient.publishing.MetricsGateway metricsGateway;

  private final io.fluxcapacitor.javaclient.publishing.WebRequestGateway webRequestGateway;

  private final io.fluxcapacitor.javaclient.persisting.repository.AggregateRepository aggregateRepository;

  private final io.fluxcapacitor.javaclient.persisting.eventsourcing.SnapshotStore snapshotStore;

  private final io.fluxcapacitor.javaclient.persisting.eventsourcing.EventStore eventStore;

  private final io.fluxcapacitor.javaclient.persisting.keyvalue.KeyValueStore keyValueStore;

  private final io.fluxcapacitor.javaclient.persisting.search.DocumentStore documentStore;

  private final io.fluxcapacitor.javaclient.scheduling.Scheduler scheduler;

  private final io.fluxcapacitor.javaclient.tracking.handling.authentication.UserProvider userProvider;

  private final io.fluxcapacitor.javaclient.persisting.caching.Cache cache;

  private final io.fluxcapacitor.javaclient.common.serialization.Serializer serializer;

  private final io.fluxcapacitor.javaclient.publishing.correlation.CorrelationDataProvider correlationDataProvider;

  private final io.fluxcapacitor.javaclient.common.IdentityProvider identityProvider;

  private final io.fluxcapacitor.common.application.PropertySource propertySource;

  private final java.util.concurrent.atomic.AtomicReference<java.time.Clock> clock;

  private final io.fluxcapacitor.javaclient.configuration.client.Client client;

  private final java.lang.Runnable shutdownHandler;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private final java.util.Collection<java.lang.Runnable> cleanupTasks;

  public static io.fluxcapacitor.javaclient.configuration.DefaultFluxCapacitor$Builder builder();
    Code:
       0: new           #1                  // class io/fluxcapacitor/javaclient/configuration/DefaultFluxCapacitor$Builder
       3: dup
       4: invokespecial #3                  // Method io/fluxcapacitor/javaclient/configuration/DefaultFluxCapacitor$Builder."<init>":()V
       7: areturn

  public io.fluxcapacitor.javaclient.tracking.Tracking tracking(io.fluxcapacitor.common.MessageType);
    Code:
       0: aload_0
       1: getfield      #7                  // Field trackingSupplier:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class io/fluxcapacitor/javaclient/tracking/Tracking
      13: invokestatic  #21                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      16: aload_1
      17: invokedynamic #27,  0             // InvokeDynamic #0:get:(Lio/fluxcapacitor/common/MessageType;)Ljava/util/function/Supplier;
      22: invokevirtual #30                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      25: checkcast     #19                 // class io/fluxcapacitor/javaclient/tracking/Tracking
      28: areturn

  public void withClock(java.time.Clock);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #34                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #36                 // String clock is marked non-null but is null
      10: invokespecial #38                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #41                 // Field clock:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_1
      19: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      22: return

  public java.time.Clock clock();
    Code:
       0: aload_0
       1: getfield      #41                 // Field clock:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #54                 // class java/time/Clock
      10: areturn

  public io.fluxcapacitor.common.Registration beforeShutdown(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #56                 // Field cleanupTasks:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #60,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_1
      13: invokedynamic #66,  0             // InvokeDynamic #1:cancel:(Lio/fluxcapacitor/javaclient/configuration/DefaultFluxCapacitor;Ljava/lang/Runnable;)Lio/fluxcapacitor/common/Registration;
      18: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #70                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          127
      12: getstatic     #80                 // Field log:Lorg/slf4j/Logger;
      15: ldc           #84                 // String Initiating controlled shutdown
      17: invokeinterface #86,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      22: aload_0
      23: getfield      #56                 // Field cleanupTasks:Ljava/util/Collection;
      26: invokedynamic #91,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      31: invokeinterface #95,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      36: aload_0
      37: getfield      #99                 // Field shutdownHandler:Ljava/lang/Runnable;
      40: invokeinterface #103,  1          // InterfaceMethod java/lang/Runnable.run:()V
      45: getstatic     #108                // Field io/fluxcapacitor/javaclient/FluxCapacitor.applicationInstance:Ljava/util/concurrent/atomic/AtomicReference;
      48: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      51: aload_0
      52: if_acmpne     117
      55: getstatic     #108                // Field io/fluxcapacitor/javaclient/FluxCapacitor.applicationInstance:Ljava/util/concurrent/atomic/AtomicReference;
      58: aconst_null
      59: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      62: goto          117
      65: astore_1
      66: getstatic     #80                 // Field log:Lorg/slf4j/Logger;
      69: ldc           #115                // String Encountered an error during shutdown
      71: aload_1
      72: invokeinterface #117,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      77: getstatic     #108                // Field io/fluxcapacitor/javaclient/FluxCapacitor.applicationInstance:Ljava/util/concurrent/atomic/AtomicReference;
      80: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      83: aload_0
      84: if_acmpne     117
      87: getstatic     #108                // Field io/fluxcapacitor/javaclient/FluxCapacitor.applicationInstance:Ljava/util/concurrent/atomic/AtomicReference;
      90: aconst_null
      91: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      94: goto          117
      97: astore_2
      98: getstatic     #108                // Field io/fluxcapacitor/javaclient/FluxCapacitor.applicationInstance:Ljava/util/concurrent/atomic/AtomicReference;
     101: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     104: aload_0
     105: if_acmpne     115
     108: getstatic     #108                // Field io/fluxcapacitor/javaclient/FluxCapacitor.applicationInstance:Ljava/util/concurrent/atomic/AtomicReference;
     111: aconst_null
     112: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     115: aload_2
     116: athrow
     117: getstatic     #80                 // Field log:Lorg/slf4j/Logger;
     120: ldc           #121                // String Completed shutdown
     122: invokeinterface #86,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     127: return
    Exception table:
       from    to  target type
          22    45    65   Class java/lang/Exception
          22    45    97   any
          65    77    97   any

  protected io.fluxcapacitor.javaclient.configuration.DefaultFluxCapacitor(java.util.Map<io.fluxcapacitor.common.MessageType, ? extends io.fluxcapacitor.javaclient.tracking.Tracking>, io.fluxcapacitor.javaclient.publishing.CommandGateway, io.fluxcapacitor.javaclient.publishing.QueryGateway, io.fluxcapacitor.javaclient.publishing.EventGateway, io.fluxcapacitor.javaclient.publishing.ResultGateway, io.fluxcapacitor.javaclient.publishing.ErrorGateway, io.fluxcapacitor.javaclient.publishing.MetricsGateway, io.fluxcapacitor.javaclient.publishing.WebRequestGateway, io.fluxcapacitor.javaclient.persisting.repository.AggregateRepository, io.fluxcapacitor.javaclient.persisting.eventsourcing.SnapshotStore, io.fluxcapacitor.javaclient.persisting.eventsourcing.EventStore, io.fluxcapacitor.javaclient.persisting.keyvalue.KeyValueStore, io.fluxcapacitor.javaclient.persisting.search.DocumentStore, io.fluxcapacitor.javaclient.scheduling.Scheduler, io.fluxcapacitor.javaclient.tracking.handling.authentication.UserProvider, io.fluxcapacitor.javaclient.persisting.caching.Cache, io.fluxcapacitor.javaclient.common.serialization.Serializer, io.fluxcapacitor.javaclient.publishing.correlation.CorrelationDataProvider, io.fluxcapacitor.javaclient.common.IdentityProvider, io.fluxcapacitor.common.application.PropertySource, io.fluxcapacitor.javaclient.configuration.client.Client, java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #123                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #46                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokestatic  #126                // Method java/time/Clock.systemUTC:()Ljava/time/Clock;
      12: invokespecial #130                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #41                 // Field clock:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_0
      19: new           #75                 // class java/util/concurrent/atomic/AtomicBoolean
      22: dup
      23: invokespecial #132                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      26: putfield      #70                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      29: aload_0
      30: new           #133                // class java/util/concurrent/CopyOnWriteArrayList
      33: dup
      34: invokespecial #135                // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      37: putfield      #56                 // Field cleanupTasks:Ljava/util/Collection;
      40: aload_0
      41: aload_1
      42: putfield      #7                  // Field trackingSupplier:Ljava/util/Map;
      45: aload_0
      46: aload_2
      47: putfield      #136                // Field commandGateway:Lio/fluxcapacitor/javaclient/publishing/CommandGateway;
      50: aload_0
      51: aload_3
      52: putfield      #140                // Field queryGateway:Lio/fluxcapacitor/javaclient/publishing/QueryGateway;
      55: aload_0
      56: aload         4
      58: putfield      #144                // Field eventGateway:Lio/fluxcapacitor/javaclient/publishing/EventGateway;
      61: aload_0
      62: aload         5
      64: putfield      #148                // Field resultGateway:Lio/fluxcapacitor/javaclient/publishing/ResultGateway;
      67: aload_0
      68: aload         6
      70: putfield      #152                // Field errorGateway:Lio/fluxcapacitor/javaclient/publishing/ErrorGateway;
      73: aload_0
      74: aload         7
      76: putfield      #156                // Field metricsGateway:Lio/fluxcapacitor/javaclient/publishing/MetricsGateway;
      79: aload_0
      80: aload         8
      82: putfield      #160                // Field webRequestGateway:Lio/fluxcapacitor/javaclient/publishing/WebRequestGateway;
      85: aload_0
      86: aload         9
      88: putfield      #164                // Field aggregateRepository:Lio/fluxcapacitor/javaclient/persisting/repository/AggregateRepository;
      91: aload_0
      92: aload         10
      94: putfield      #168                // Field snapshotStore:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/SnapshotStore;
      97: aload_0
      98: aload         11
     100: putfield      #172                // Field eventStore:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/EventStore;
     103: aload_0
     104: aload         12
     106: putfield      #176                // Field keyValueStore:Lio/fluxcapacitor/javaclient/persisting/keyvalue/KeyValueStore;
     109: aload_0
     110: aload         13
     112: putfield      #180                // Field documentStore:Lio/fluxcapacitor/javaclient/persisting/search/DocumentStore;
     115: aload_0
     116: aload         14
     118: putfield      #184                // Field scheduler:Lio/fluxcapacitor/javaclient/scheduling/Scheduler;
     121: aload_0
     122: aload         15
     124: putfield      #188                // Field userProvider:Lio/fluxcapacitor/javaclient/tracking/handling/authentication/UserProvider;
     127: aload_0
     128: aload         16
     130: putfield      #192                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
     133: aload_0
     134: aload         17
     136: putfield      #196                // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
     139: aload_0
     140: aload         18
     142: putfield      #200                // Field correlationDataProvider:Lio/fluxcapacitor/javaclient/publishing/correlation/CorrelationDataProvider;
     145: aload_0
     146: aload         19
     148: putfield      #204                // Field identityProvider:Lio/fluxcapacitor/javaclient/common/IdentityProvider;
     151: aload_0
     152: aload         20
     154: putfield      #208                // Field propertySource:Lio/fluxcapacitor/common/application/PropertySource;
     157: aload_0
     158: aload         21
     160: putfield      #212                // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
     163: aload_0
     164: aload         22
     166: putfield      #99                 // Field shutdownHandler:Ljava/lang/Runnable;
     169: return

  public java.util.Map<io.fluxcapacitor.common.MessageType, ? extends io.fluxcapacitor.javaclient.tracking.Tracking> trackingSupplier();
    Code:
       0: aload_0
       1: getfield      #7                  // Field trackingSupplier:Ljava/util/Map;
       4: areturn

  public io.fluxcapacitor.javaclient.publishing.CommandGateway commandGateway();
    Code:
       0: aload_0
       1: getfield      #136                // Field commandGateway:Lio/fluxcapacitor/javaclient/publishing/CommandGateway;
       4: areturn

  public io.fluxcapacitor.javaclient.publishing.QueryGateway queryGateway();
    Code:
       0: aload_0
       1: getfield      #140                // Field queryGateway:Lio/fluxcapacitor/javaclient/publishing/QueryGateway;
       4: areturn

  public io.fluxcapacitor.javaclient.publishing.EventGateway eventGateway();
    Code:
       0: aload_0
       1: getfield      #144                // Field eventGateway:Lio/fluxcapacitor/javaclient/publishing/EventGateway;
       4: areturn

  public io.fluxcapacitor.javaclient.publishing.ResultGateway resultGateway();
    Code:
       0: aload_0
       1: getfield      #148                // Field resultGateway:Lio/fluxcapacitor/javaclient/publishing/ResultGateway;
       4: areturn

  public io.fluxcapacitor.javaclient.publishing.ErrorGateway errorGateway();
    Code:
       0: aload_0
       1: getfield      #152                // Field errorGateway:Lio/fluxcapacitor/javaclient/publishing/ErrorGateway;
       4: areturn

  public io.fluxcapacitor.javaclient.publishing.MetricsGateway metricsGateway();
    Code:
       0: aload_0
       1: getfield      #156                // Field metricsGateway:Lio/fluxcapacitor/javaclient/publishing/MetricsGateway;
       4: areturn

  public io.fluxcapacitor.javaclient.publishing.WebRequestGateway webRequestGateway();
    Code:
       0: aload_0
       1: getfield      #160                // Field webRequestGateway:Lio/fluxcapacitor/javaclient/publishing/WebRequestGateway;
       4: areturn

  public io.fluxcapacitor.javaclient.persisting.repository.AggregateRepository aggregateRepository();
    Code:
       0: aload_0
       1: getfield      #164                // Field aggregateRepository:Lio/fluxcapacitor/javaclient/persisting/repository/AggregateRepository;
       4: areturn

  public io.fluxcapacitor.javaclient.persisting.eventsourcing.SnapshotStore snapshotStore();
    Code:
       0: aload_0
       1: getfield      #168                // Field snapshotStore:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/SnapshotStore;
       4: areturn

  public io.fluxcapacitor.javaclient.persisting.eventsourcing.EventStore eventStore();
    Code:
       0: aload_0
       1: getfield      #172                // Field eventStore:Lio/fluxcapacitor/javaclient/persisting/eventsourcing/EventStore;
       4: areturn

  public io.fluxcapacitor.javaclient.persisting.keyvalue.KeyValueStore keyValueStore();
    Code:
       0: aload_0
       1: getfield      #176                // Field keyValueStore:Lio/fluxcapacitor/javaclient/persisting/keyvalue/KeyValueStore;
       4: areturn

  public io.fluxcapacitor.javaclient.persisting.search.DocumentStore documentStore();
    Code:
       0: aload_0
       1: getfield      #180                // Field documentStore:Lio/fluxcapacitor/javaclient/persisting/search/DocumentStore;
       4: areturn

  public io.fluxcapacitor.javaclient.scheduling.Scheduler scheduler();
    Code:
       0: aload_0
       1: getfield      #184                // Field scheduler:Lio/fluxcapacitor/javaclient/scheduling/Scheduler;
       4: areturn

  public io.fluxcapacitor.javaclient.tracking.handling.authentication.UserProvider userProvider();
    Code:
       0: aload_0
       1: getfield      #188                // Field userProvider:Lio/fluxcapacitor/javaclient/tracking/handling/authentication/UserProvider;
       4: areturn

  public io.fluxcapacitor.javaclient.persisting.caching.Cache cache();
    Code:
       0: aload_0
       1: getfield      #192                // Field cache:Lio/fluxcapacitor/javaclient/persisting/caching/Cache;
       4: areturn

  public io.fluxcapacitor.javaclient.common.serialization.Serializer serializer();
    Code:
       0: aload_0
       1: getfield      #196                // Field serializer:Lio/fluxcapacitor/javaclient/common/serialization/Serializer;
       4: areturn

  public io.fluxcapacitor.javaclient.publishing.correlation.CorrelationDataProvider correlationDataProvider();
    Code:
       0: aload_0
       1: getfield      #200                // Field correlationDataProvider:Lio/fluxcapacitor/javaclient/publishing/correlation/CorrelationDataProvider;
       4: areturn

  public io.fluxcapacitor.javaclient.common.IdentityProvider identityProvider();
    Code:
       0: aload_0
       1: getfield      #204                // Field identityProvider:Lio/fluxcapacitor/javaclient/common/IdentityProvider;
       4: areturn

  public io.fluxcapacitor.common.application.PropertySource propertySource();
    Code:
       0: aload_0
       1: getfield      #208                // Field propertySource:Lio/fluxcapacitor/common/application/PropertySource;
       4: areturn

  public io.fluxcapacitor.javaclient.configuration.client.Client client();
    Code:
       0: aload_0
       1: getfield      #212                // Field client:Lio/fluxcapacitor/javaclient/configuration/client/Client;
       4: areturn

  public java.lang.Runnable shutdownHandler();
    Code:
       0: aload_0
       1: getfield      #99                 // Field shutdownHandler:Ljava/lang/Runnable;
       4: areturn

  public java.util.concurrent.atomic.AtomicBoolean closed();
    Code:
       0: aload_0
       1: getfield      #70                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  public java.util.Collection<java.lang.Runnable> cleanupTasks();
    Code:
       0: aload_0
       1: getfield      #56                 // Field cleanupTasks:Ljava/util/Collection;
       4: areturn

  private void lambda$beforeShutdown$1(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #56                 // Field cleanupTasks:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #216,  2          // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private static io.fluxcapacitor.javaclient.tracking.TrackingException lambda$tracking$0(io.fluxcapacitor.common.MessageType);
    Code:
       0: new           #219                // class io/fluxcapacitor/javaclient/tracking/TrackingException
       3: dup
       4: ldc           #221                // String Tracking is not supported for type %s
       6: iconst_1
       7: anewarray     #124                // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: invokestatic  #223                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: invokespecial #229                // Method io/fluxcapacitor/javaclient/tracking/TrackingException."<init>":(Ljava/lang/String;)V
      20: areturn

  static {};
    Code:
       0: ldc           #8                  // class io/fluxcapacitor/javaclient/configuration/DefaultFluxCapacitor
       2: invokestatic  #230                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #80                 // Field log:Lorg/slf4j/Logger;
       8: return
}
