Compiled from "ApplicationProperties.java"
public class io.fluxcapacitor.javaclient.configuration.ApplicationProperties {
  public io.fluxcapacitor.javaclient.configuration.ApplicationProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String getProperty(java.lang.String);
    Code:
       0: invokestatic  #7                  // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.getOptionally:()Ljava/util/Optional;
       3: invokedynamic #13,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       8: invokevirtual #17                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      11: invokedynamic #23,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      16: invokevirtual #27                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      19: checkcast     #31                 // class io/fluxcapacitor/common/application/PropertySource
      22: aload_0
      23: invokeinterface #33,  2           // InterfaceMethod io/fluxcapacitor/common/application/PropertySource.get:(Ljava/lang/String;)Ljava/lang/String;
      28: areturn

  public static boolean getBooleanProperty(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #36                 // Method getBooleanProperty:(Ljava/lang/String;Z)Z
       5: ireturn

  public static boolean getBooleanProperty(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
       4: invokestatic  #45                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: ldc           #49                 // String true
       9: invokedynamic #51,  0             // InvokeDynamic #2:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      14: invokevirtual #17                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      17: iload_1
      18: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      21: invokevirtual #60                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #55                 // class java/lang/Boolean
      27: invokevirtual #64                 // Method java/lang/Boolean.booleanValue:()Z
      30: ireturn

  public static java.lang.Integer getIntegerProperty(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #68                 // Method getIntegerProperty:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
       5: areturn

  public static java.lang.Integer getIntegerProperty(java.lang.String, java.lang.Integer);
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
       4: invokestatic  #45                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: invokedynamic #72,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      12: invokevirtual #17                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      15: aload_1
      16: invokevirtual #60                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #73                 // class java/lang/Integer
      22: areturn

  public static java.lang.String getProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
       4: invokestatic  #45                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: aload_1
       8: invokevirtual #60                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #75                 // class java/lang/String
      14: areturn

  public static java.lang.String requireProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
       4: invokestatic  #45                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: aload_0
       8: invokedynamic #77,  0             // InvokeDynamic #4:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      13: invokevirtual #80                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      16: checkcast     #75                 // class java/lang/String
      19: areturn

  public static boolean containsProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static java.lang.String substituteProperties(java.lang.String);
    Code:
       0: invokestatic  #7                  // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.getOptionally:()Ljava/util/Optional;
       3: invokedynamic #13,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       8: invokevirtual #17                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      11: invokedynamic #23,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      16: invokevirtual #27                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      19: checkcast     #31                 // class io/fluxcapacitor/common/application/PropertySource
      22: aload_0
      23: invokeinterface #83,  2           // InterfaceMethod io/fluxcapacitor/common/application/PropertySource.substituteProperties:(Ljava/lang/String;)Ljava/lang/String;
      28: areturn

  public static java.lang.String encryptValue(java.lang.String);
    Code:
       0: invokestatic  #86                 // Method io/fluxcapacitor/common/application/DefaultPropertySource.getInstance:()Lio/fluxcapacitor/common/application/DefaultPropertySource;
       3: invokevirtual #92                 // Method io/fluxcapacitor/common/application/DefaultPropertySource.getEncryption:()Lio/fluxcapacitor/common/encryption/Encryption;
       6: aload_0
       7: invokeinterface #96,  2           // InterfaceMethod io/fluxcapacitor/common/encryption/Encryption.encrypt:(Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  private static java.lang.IllegalStateException lambda$requireProperty$0(java.lang.String);
    Code:
       0: new           #101                // class java/lang/IllegalStateException
       3: dup
       4: ldc           #103                // String Property for %s is missing
       6: iconst_1
       7: anewarray     #2                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: invokestatic  #105                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: invokespecial #109                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: areturn
}
