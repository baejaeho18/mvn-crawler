Compiled from "FluxCapacitorBuilder.java"
public interface io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder {
  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder configureDefaultConsumer(io.fluxcapacitor.common.MessageType, java.util.function.UnaryOperator<io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration>);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addConsumerConfiguration(io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration, io.fluxcapacitor.common.MessageType...);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addBatchInterceptor(io.fluxcapacitor.javaclient.tracking.BatchInterceptor, io.fluxcapacitor.common.MessageType...);

  public default io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addDispatchInterceptor(io.fluxcapacitor.javaclient.publishing.DispatchInterceptor, io.fluxcapacitor.common.MessageType...);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokeinterface #1,  4            // InterfaceMethod addDispatchInterceptor:(Lio/fluxcapacitor/javaclient/publishing/DispatchInterceptor;Z[Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
       9: areturn

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addDispatchInterceptor(io.fluxcapacitor.javaclient.publishing.DispatchInterceptor, boolean, io.fluxcapacitor.common.MessageType...);

  public default io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addHandlerInterceptor(io.fluxcapacitor.javaclient.tracking.handling.HandlerInterceptor, io.fluxcapacitor.common.MessageType...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #7,  3            // InterfaceMethod addHandlerDecorator:(Lio/fluxcapacitor/javaclient/tracking/handling/HandlerDecorator;[Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
       8: areturn

  public default io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addHandlerInterceptor(io.fluxcapacitor.javaclient.tracking.handling.HandlerInterceptor, boolean, io.fluxcapacitor.common.MessageType...);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokeinterface #11,  4           // InterfaceMethod addHandlerDecorator:(Lio/fluxcapacitor/javaclient/tracking/handling/HandlerDecorator;Z[Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
       9: areturn

  public default io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addHandlerDecorator(io.fluxcapacitor.javaclient.tracking.handling.HandlerDecorator, io.fluxcapacitor.common.MessageType...);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokeinterface #11,  4           // InterfaceMethod addHandlerDecorator:(Lio/fluxcapacitor/javaclient/tracking/handling/HandlerDecorator;Z[Lio/fluxcapacitor/common/MessageType;)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
       9: areturn

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addHandlerDecorator(io.fluxcapacitor.javaclient.tracking.handling.HandlerDecorator, boolean, io.fluxcapacitor.common.MessageType...);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replaceMessageRoutingInterceptor(io.fluxcapacitor.javaclient.publishing.DispatchInterceptor);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replaceCache(io.fluxcapacitor.javaclient.persisting.caching.Cache);

  public default io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder forwardWebRequestsToLocalServer(int);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method io/fluxcapacitor/javaclient/web/LocalServerConfig.builder:()Lio/fluxcapacitor/javaclient/web/LocalServerConfig$LocalServerConfigBuilder;
       4: iload_1
       5: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #26                 // Method io/fluxcapacitor/javaclient/web/LocalServerConfig$LocalServerConfigBuilder.port:(Ljava/lang/Integer;)Lio/fluxcapacitor/javaclient/web/LocalServerConfig$LocalServerConfigBuilder;
      11: invokevirtual #32                 // Method io/fluxcapacitor/javaclient/web/LocalServerConfig$LocalServerConfigBuilder.build:()Lio/fluxcapacitor/javaclient/web/LocalServerConfig;
      14: invokestatic  #36                 // InterfaceMethod java/util/function/UnaryOperator.identity:()Ljava/util/function/UnaryOperator;
      17: invokeinterface #42,  3           // InterfaceMethod forwardWebRequestsToLocalServer:(Lio/fluxcapacitor/javaclient/web/LocalServerConfig;Ljava/util/function/UnaryOperator;)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
      22: areturn

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder forwardWebRequestsToLocalServer(io.fluxcapacitor.javaclient.web.LocalServerConfig, java.util.function.UnaryOperator<io.fluxcapacitor.javaclient.tracking.ConsumerConfiguration>);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replaceWebResponseMapper(io.fluxcapacitor.javaclient.web.WebResponseMapper);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder withAggregateCache(java.lang.Class<?>, io.fluxcapacitor.javaclient.persisting.caching.Cache);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replaceRelationshipsCache(java.util.function.UnaryOperator<io.fluxcapacitor.javaclient.persisting.caching.Cache>);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replaceIdentityProvider(java.util.function.UnaryOperator<io.fluxcapacitor.javaclient.common.IdentityProvider>);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addParameterResolver(io.fluxcapacitor.common.handling.ParameterResolver<? super io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replaceSerializer(io.fluxcapacitor.javaclient.common.serialization.Serializer);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replaceCorrelationDataProvider(java.util.function.UnaryOperator<io.fluxcapacitor.javaclient.publishing.correlation.CorrelationDataProvider>);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replaceSnapshotSerializer(io.fluxcapacitor.javaclient.common.serialization.Serializer);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replaceDocumentSerializer(io.fluxcapacitor.javaclient.persisting.search.DocumentSerializer);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder registerUserProvider(io.fluxcapacitor.javaclient.tracking.handling.authentication.UserProvider);

  public default io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder addPropertySource(io.fluxcapacitor.common.application.PropertySource);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #46,  0             // InvokeDynamic #0:apply:(Lio/fluxcapacitor/common/application/PropertySource;)Ljava/util/function/UnaryOperator;
       7: invokeinterface #50,  2           // InterfaceMethod replacePropertySource:(Ljava/util/function/UnaryOperator;)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
      12: areturn

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder replacePropertySource(java.util.function.UnaryOperator<io.fluxcapacitor.common.application.PropertySource>);

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disableErrorReporting();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disableShutdownHook();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disableMessageCorrelation();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disablePayloadValidation();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disableDataProtection();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disableAutomaticAggregateCaching();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disableScheduledCommandHandler();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disableTrackingMetrics();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disableCacheEvictionMetrics();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder disableWebResponseCompression();

  public abstract io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder makeApplicationInstance(boolean);

  public abstract io.fluxcapacitor.javaclient.FluxCapacitor build(io.fluxcapacitor.javaclient.configuration.client.Client);

  private static io.fluxcapacitor.common.application.PropertySource lambda$addPropertySource$0(io.fluxcapacitor.common.application.PropertySource, io.fluxcapacitor.common.application.PropertySource);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #54,  2           // InterfaceMethod io/fluxcapacitor/common/application/PropertySource.merge:(Lio/fluxcapacitor/common/application/PropertySource;)Lio/fluxcapacitor/common/application/PropertySource;
       7: areturn
}
