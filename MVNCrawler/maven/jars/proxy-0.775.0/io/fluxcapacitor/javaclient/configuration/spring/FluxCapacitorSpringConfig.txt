Compiled from "FluxCapacitorSpringConfig.java"
public class io.fluxcapacitor.javaclient.configuration.spring.FluxCapacitorSpringConfig implements org.springframework.beans.factory.config.BeanPostProcessor {
  private static final org.slf4j.Logger log;

  private final org.springframework.context.ApplicationContext context;

  private final java.util.List<java.lang.Object> springBeans;

  private final java.util.concurrent.atomic.AtomicReference<io.fluxcapacitor.common.Registration> handlerRegistration;

  protected io.fluxcapacitor.javaclient.configuration.spring.FluxCapacitorSpringConfig(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #10                 // Field springBeans:Ljava/util/List;
      15: aload_0
      16: new           #16                 // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #18                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #19                 // Field handlerRegistration:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_0
      27: aload_1
      28: putfield      #23                 // Field context:Lorg/springframework/context/ApplicationContext;
      31: return

  public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field springBeans:Ljava/util/List;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: areturn

  public void handle(org.springframework.context.event.ContextRefreshedEvent);
    Code:
       0: aload_0
       1: getfield      #23                 // Field context:Lorg/springframework/context/ApplicationContext;
       4: ldc           #33                 // class io/fluxcapacitor/javaclient/FluxCapacitor
       6: invokeinterface #35,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      11: checkcast     #33                 // class io/fluxcapacitor/javaclient/FluxCapacitor
      14: astore_2
      15: aload_0
      16: getfield      #10                 // Field springBeans:Ljava/util/List;
      19: invokeinterface #41,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      24: invokedynamic #45,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      29: invokeinterface #49,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      34: invokestatic  #55                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      37: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      42: checkcast     #28                 // class java/util/List
      45: astore_3
      46: aload_0
      47: getfield      #19                 // Field handlerRegistration:Ljava/util/concurrent/atomic/AtomicReference;
      50: aload_2
      51: aload_3
      52: invokedynamic #65,  0             // InvokeDynamic #1:apply:(Lio/fluxcapacitor/javaclient/FluxCapacitor;Ljava/util/List;)Ljava/util/function/UnaryOperator;
      57: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.updateAndGet:(Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
      60: pop
      61: invokestatic  #73                 // Method java/lang/Thread.getDefaultUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
      64: ifnonnull     75
      67: invokedynamic #79,  0             // InvokeDynamic #2:uncaughtException:()Ljava/lang/Thread$UncaughtExceptionHandler;
      72: invokestatic  #82                 // Method java/lang/Thread.setDefaultUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
      75: aload_1
      76: invokevirtual #86                 // Method org/springframework/context/event/ContextRefreshedEvent.getApplicationContext:()Lorg/springframework/context/ApplicationContext;
      79: instanceof    #92                 // class org/springframework/context/support/GenericApplicationContext
      82: ifeq          95
      85: aload_1
      86: invokevirtual #86                 // Method org/springframework/context/event/ContextRefreshedEvent.getApplicationContext:()Lorg/springframework/context/ApplicationContext;
      89: checkcast     #92                 // class org/springframework/context/support/GenericApplicationContext
      92: invokevirtual #94                 // Method org/springframework/context/support/GenericApplicationContext.start:()V
      95: return

  public io.fluxcapacitor.javaclient.common.serialization.Serializer serializer();
    Code:
       0: new           #97                 // class java/util/ArrayList
       3: dup
       4: invokespecial #99                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #23                 // Field context:Lorg/springframework/context/ApplicationContext;
      12: invokeinterface #100,  1          // InterfaceMethod org/springframework/context/ApplicationContext.getBeanDefinitionNames:()[Ljava/lang/String;
      17: astore_2
      18: aload_2
      19: arraylength
      20: istore_3
      21: iconst_0
      22: istore        4
      24: iload         4
      26: iload_3
      27: if_icmpge     76
      30: aload_2
      31: iload         4
      33: aaload
      34: astore        5
      36: aload_0
      37: getfield      #23                 // Field context:Lorg/springframework/context/ApplicationContext;
      40: aload         5
      42: invokeinterface #104,  2          // InterfaceMethod org/springframework/context/ApplicationContext.getType:(Ljava/lang/String;)Ljava/lang/Class;
      47: invokestatic  #108                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      50: invokedynamic #114,  0            // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      55: invokevirtual #115                // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      58: aload_0
      59: aload_1
      60: aload         5
      62: invokedynamic #118,  0            // InvokeDynamic #4:accept:(Lio/fluxcapacitor/javaclient/configuration/spring/FluxCapacitorSpringConfig;Ljava/util/List;Ljava/lang/String;)Ljava/util/function/Consumer;
      67: invokevirtual #122                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      70: iinc          4, 1
      73: goto          24
      76: new           #126                // class io/fluxcapacitor/javaclient/common/serialization/jackson/JacksonSerializer
      79: dup
      80: aload_1
      81: invokespecial #128                // Method io/fluxcapacitor/javaclient/common/serialization/jackson/JacksonSerializer."<init>":(Ljava/util/Collection;)V
      84: areturn

  public io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder fluxCapacitorBuilder(io.fluxcapacitor.javaclient.common.serialization.Serializer, java.util.Optional<io.fluxcapacitor.javaclient.tracking.handling.authentication.UserProvider>, java.util.Optional<io.fluxcapacitor.javaclient.persisting.caching.Cache>, org.springframework.core.env.Environment);
    Code:
       0: invokestatic  #131                // Method io/fluxcapacitor/javaclient/configuration/DefaultFluxCapacitor.builder:()Lio/fluxcapacitor/javaclient/configuration/DefaultFluxCapacitor$Builder;
       3: invokevirtual #137                // Method io/fluxcapacitor/javaclient/configuration/DefaultFluxCapacitor$Builder.disableShutdownHook:()Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
       6: aload_1
       7: invokeinterface #143,  2          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder.replaceSerializer:(Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
      12: aload_1
      13: invokeinterface #149,  2          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder.replaceSnapshotSerializer:(Lio/fluxcapacitor/javaclient/common/serialization/Serializer;)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
      18: iconst_1
      19: invokeinterface #152,  2          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder.makeApplicationInstance:(Z)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
      24: astore        5
      26: aload_2
      27: aload         5
      29: dup
      30: invokestatic  #156                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: invokedynamic #162,  0            // InvokeDynamic #5:accept:(Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;)Ljava/util/function/Consumer;
      39: invokevirtual #122                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      42: aload_3
      43: aload         5
      45: dup
      46: invokestatic  #156                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: invokedynamic #165,  0            // InvokeDynamic #6:accept:(Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;)Ljava/util/function/Consumer;
      55: invokevirtual #122                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      58: aload         5
      60: new           #166                // class io/fluxcapacitor/javaclient/configuration/spring/SpringPropertySource
      63: dup
      64: aload         4
      66: invokespecial #168                // Method io/fluxcapacitor/javaclient/configuration/spring/SpringPropertySource."<init>":(Lorg/springframework/core/env/Environment;)V
      69: invokeinterface #171,  2          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder.addPropertySource:(Lio/fluxcapacitor/common/application/PropertySource;)Lio/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder;
      74: pop
      75: aload         5
      77: areturn

  public io.fluxcapacitor.javaclient.FluxCapacitor fluxCapacitor(io.fluxcapacitor.javaclient.configuration.FluxCapacitorBuilder);
    Code:
       0: aload_0
       1: ldc           #175                // class io/fluxcapacitor/javaclient/configuration/client/Client
       3: invokevirtual #177                // Method getBean:(Ljava/lang/Class;)Ljava/util/Optional;
       6: aload_0
       7: invokedynamic #180,  0            // InvokeDynamic #7:get:(Lio/fluxcapacitor/javaclient/configuration/spring/FluxCapacitorSpringConfig;)Ljava/util/function/Supplier;
      12: invokevirtual #184                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #175                // class io/fluxcapacitor/javaclient/configuration/client/Client
      18: astore_2
      19: aload_1
      20: aload_2
      21: invokeinterface #188,  2          // InterfaceMethod io/fluxcapacitor/javaclient/configuration/FluxCapacitorBuilder.build:(Lio/fluxcapacitor/javaclient/configuration/client/Client;)Lio/fluxcapacitor/javaclient/FluxCapacitor;
      26: areturn

  public io.fluxcapacitor.javaclient.persisting.repository.AggregateRepository aggregateRepository(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #192,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.aggregateRepository:()Lio/fluxcapacitor/javaclient/persisting/repository/AggregateRepository;
       6: areturn

  public io.fluxcapacitor.javaclient.scheduling.Scheduler scheduler(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #196,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.scheduler:()Lio/fluxcapacitor/javaclient/scheduling/Scheduler;
       6: areturn

  public io.fluxcapacitor.javaclient.publishing.CommandGateway commandGateway(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #200,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.commandGateway:()Lio/fluxcapacitor/javaclient/publishing/CommandGateway;
       6: areturn

  public io.fluxcapacitor.javaclient.publishing.EventGateway eventGateway(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #204,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.eventGateway:()Lio/fluxcapacitor/javaclient/publishing/EventGateway;
       6: areturn

  public io.fluxcapacitor.javaclient.publishing.QueryGateway queryGateway(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #208,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.queryGateway:()Lio/fluxcapacitor/javaclient/publishing/QueryGateway;
       6: areturn

  public io.fluxcapacitor.javaclient.publishing.ErrorGateway errorGateway(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #212,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.errorGateway:()Lio/fluxcapacitor/javaclient/publishing/ErrorGateway;
       6: areturn

  public io.fluxcapacitor.javaclient.publishing.MetricsGateway metricsGateway(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #216,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.metricsGateway:()Lio/fluxcapacitor/javaclient/publishing/MetricsGateway;
       6: areturn

  public io.fluxcapacitor.javaclient.publishing.ResultGateway resultGateway(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #220,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.resultGateway:()Lio/fluxcapacitor/javaclient/publishing/ResultGateway;
       6: areturn

  public io.fluxcapacitor.javaclient.persisting.keyvalue.KeyValueStore keyValueStore(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #224,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.keyValueStore:()Lio/fluxcapacitor/javaclient/persisting/keyvalue/KeyValueStore;
       6: areturn

  public io.fluxcapacitor.javaclient.persisting.search.DocumentStore documentStore(io.fluxcapacitor.javaclient.FluxCapacitor);
    Code:
       0: aload_1
       1: invokeinterface #228,  1          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.documentStore:()Lio/fluxcapacitor/javaclient/persisting/search/DocumentStore;
       6: areturn

  protected <T> java.util.Optional<T> getBean(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field context:Lorg/springframework/context/ApplicationContext;
       4: aload_1
       5: invokeinterface #232,  2          // InterfaceMethod org/springframework/context/ApplicationContext.getBeansOfType:(Ljava/lang/Class;)Ljava/util/Map;
      10: invokeinterface #236,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: invokeinterface #242,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      20: invokeinterface #245,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      25: areturn

  private io.fluxcapacitor.javaclient.configuration.client.Client lambda$fluxCapacitor$5();
    Code:
       0: aload_0
       1: ldc           #249                // class io/fluxcapacitor/javaclient/configuration/client/WebSocketClient$ClientConfig
       3: invokevirtual #177                // Method getBean:(Ljava/lang/Class;)Ljava/util/Optional;
       6: invokedynamic #251,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      11: invokevirtual #254                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      14: invokedynamic #258,  0            // InvokeDynamic #9:get:()Ljava/util/function/Supplier;
      19: invokevirtual #184                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      22: checkcast     #175                // class io/fluxcapacitor/javaclient/configuration/client/Client
      25: areturn

  private static io.fluxcapacitor.javaclient.configuration.client.Client lambda$fluxCapacitor$4();
    Code:
       0: getstatic     #261                // Field log:Lorg/slf4j/Logger;
       3: ldc_w         #265                // String Using in-memory Flux Capacitor client
       6: invokeinterface #267,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      11: invokestatic  #273                // Method io/fluxcapacitor/javaclient/configuration/client/InMemoryClient.newInstance:()Lio/fluxcapacitor/javaclient/configuration/client/InMemoryClient;
      14: areturn

  private void lambda$serializer$3(java.util.List, java.lang.String, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #23                 // Field context:Lorg/springframework/context/ApplicationContext;
       5: invokeinterface #279,  1          // InterfaceMethod org/springframework/context/ApplicationContext.getAutowireCapableBeanFactory:()Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;
      10: aload_2
      11: invokeinterface #283,  2          // InterfaceMethod org/springframework/beans/factory/config/AutowireCapableBeanFactory.getBean:(Ljava/lang/String;)Ljava/lang/Object;
      16: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: return

  private static void lambda$handle$2(java.lang.Thread, java.lang.Throwable);
    Code:
       0: getstatic     #261                // Field log:Lorg/slf4j/Logger;
       3: ldc_w         #288                // String Uncaught exception
       6: aload_1
       7: invokeinterface #290,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      12: return

  private static io.fluxcapacitor.common.Registration lambda$handle$1(io.fluxcapacitor.javaclient.FluxCapacitor, java.util.List, io.fluxcapacitor.common.Registration);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: aload_0
       5: aload_1
       6: invokeinterface #294,  2          // InterfaceMethod io/fluxcapacitor/javaclient/FluxCapacitor.registerHandlers:(Ljava/util/List;)Lio/fluxcapacitor/common/Registration;
      11: goto          15
      14: aload_2
      15: areturn

  private static boolean lambda$handle$0(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #298                // class java/lang/Class
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  static {};
    Code:
       0: ldc           #11                 // class io/fluxcapacitor/javaclient/configuration/spring/FluxCapacitorSpringConfig
       2: invokestatic  #300                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #261                // Field log:Lorg/slf4j/Logger;
       8: return
}
