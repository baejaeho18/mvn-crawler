Compiled from "FunctionalException.java"
public abstract class io.fluxcapacitor.javaclient.common.exception.FunctionalException extends java.lang.RuntimeException {
  public io.fluxcapacitor.javaclient.common.exception.FunctionalException();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/RuntimeException."<init>":()V
       4: return

  public io.fluxcapacitor.javaclient.common.exception.FunctionalException(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       5: return

  public io.fluxcapacitor.javaclient.common.exception.FunctionalException(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       6: return

  public io.fluxcapacitor.javaclient.common.exception.FunctionalException(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
       5: return

  public io.fluxcapacitor.javaclient.common.exception.FunctionalException(java.lang.String, java.lang.Throwable, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V
       9: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #19                 // class io/fluxcapacitor/javaclient/common/exception/FunctionalException
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #19                 // class io/fluxcapacitor/javaclient/common/exception/FunctionalException
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #21                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class io/fluxcapacitor/javaclient/common/exception/FunctionalException
       4: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_1
       2: iconst_1
       3: ireturn
}
