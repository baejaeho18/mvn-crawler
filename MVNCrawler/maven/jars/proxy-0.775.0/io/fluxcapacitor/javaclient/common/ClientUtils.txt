Compiled from "ClientUtils.java"
public class io.fluxcapacitor.javaclient.common.ClientUtils {
  private static final org.slf4j.Logger log;

  private static final java.util.function.BiFunction<java.lang.Class<?>, java.lang.reflect.Executable, java.util.Optional<io.fluxcapacitor.javaclient.tracking.handling.LocalHandler>> localHandlerCache;

  private static final java.util.function.Function<java.lang.Class<?>, java.util.Optional<io.fluxcapacitor.javaclient.tracking.handling.HandleSelf>> handleSelfCache;

  public io.fluxcapacitor.javaclient.common.ClientUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void waitForResults(java.time.Duration, java.util.Collection<? extends java.util.concurrent.Future<?>>);
    Code:
       0: invokestatic  #7                  // Method java/time/Instant.now:()Ljava/time/Instant;
       3: aload_0
       4: invokevirtual #13                 // Method java/time/Instant.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;
       7: astore_2
       8: aload_1
       9: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          104
      24: aload_3
      25: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #33                 // class java/util/concurrent/Future
      33: astore        4
      35: aload         4
      37: lconst_0
      38: invokestatic  #7                  // Method java/time/Instant.now:()Ljava/time/Instant;
      41: aload_2
      42: invokestatic  #35                 // Method java/time/Duration.between:(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Ljava/time/Duration;
      45: invokevirtual #41                 // Method java/time/Duration.toMillis:()J
      48: invokestatic  #45                 // Method java/lang/Math.max:(JJ)J
      51: getstatic     #51                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      54: invokeinterface #57,  4           // InterfaceMethod java/util/concurrent/Future.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      59: pop
      60: goto          101
      63: astore        5
      65: invokestatic  #63                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      68: invokevirtual #69                 // Method java/lang/Thread.interrupt:()V
      71: getstatic     #72                 // Field log:Lorg/slf4j/Logger;
      74: ldc           #78                 // String Thread was interrupted before receiving all expected results
      76: aload         5
      78: invokeinterface #80,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      83: return
      84: astore        5
      86: getstatic     #72                 // Field log:Lorg/slf4j/Logger;
      89: ldc           #88                 // String Timed out before having received all expected results
      91: aload         5
      93: invokeinterface #80,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: return
      99: astore        5
     101: goto          15
     104: return
    Exception table:
       from    to  target type
          35    60    63   Class java/lang/InterruptedException
          35    60    84   Class java/util/concurrent/TimeoutException
          35    60    99   Class java/util/concurrent/ExecutionException

  public static void tryRun(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokeinterface #92,  1           // InterfaceMethod java/lang/Runnable.run:()V
       6: goto          22
       9: astore_1
      10: getstatic     #72                 // Field log:Lorg/slf4j/Logger;
      13: ldc           #99                 // String Task {} failed
      15: aload_0
      16: aload_1
      17: invokeinterface #101,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      22: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  public static void runSilently(io.fluxcapacitor.common.ThrowingRunnable);
    Code:
       0: aload_0
       1: invokeinterface #104,  1          // InterfaceMethod io/fluxcapacitor/common/ThrowingRunnable.run:()V
       6: goto          12
       9: astore_1
      10: aload_1
      11: athrow
      12: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Throwable

  public static boolean isLocalHandler(java.lang.Class<?>, java.lang.reflect.Executable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #115                // Method getLocalHandlerAnnotation:(Ljava/lang/Class;Ljava/lang/reflect/Executable;)Ljava/util/Optional;
       5: invokedynamic #119,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokevirtual #123                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      13: iconst_0
      14: invokestatic  #129                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: invokevirtual #135                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #130                // class java/lang/Boolean
      23: invokevirtual #139                // Method java/lang/Boolean.booleanValue:()Z
      26: ireturn

  public static boolean isLocalHandler(io.fluxcapacitor.common.handling.HandlerInvoker);
    Code:
       0: aload_0
       1: invokeinterface #142,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getTarget:()Ljava/lang/Object;
       6: ifnull        43
       9: aload_0
      10: invokeinterface #147,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getMethod:()Ljava/lang/reflect/Executable;
      15: ifnull        43
      18: aload_0
      19: invokeinterface #142,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getTarget:()Ljava/lang/Object;
      24: invokevirtual #151                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: aload_0
      28: invokeinterface #147,  1          // InterfaceMethod io/fluxcapacitor/common/handling/HandlerInvoker.getMethod:()Ljava/lang/reflect/Executable;
      33: invokestatic  #155                // Method isLocalHandler:(Ljava/lang/Class;Ljava/lang/reflect/Executable;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public static boolean isTrackingHandler(java.lang.Class<?>, java.lang.reflect.Executable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #115                // Method getLocalHandlerAnnotation:(Ljava/lang/Class;Ljava/lang/reflect/Executable;)Ljava/util/Optional;
       5: invokedynamic #159,  0            // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      10: invokevirtual #123                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      13: iconst_1
      14: invokestatic  #129                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: invokevirtual #135                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #130                // class java/lang/Boolean
      23: invokevirtual #139                // Method java/lang/Boolean.booleanValue:()Z
      26: ireturn

  public static java.util.Optional<io.fluxcapacitor.javaclient.tracking.handling.LocalHandler> getLocalHandlerAnnotation(java.lang.Class<?>, java.lang.reflect.Executable);
    Code:
       0: getstatic     #160                // Field localHandlerCache:Ljava/util/function/BiFunction;
       3: aload_0
       4: aload_1
       5: invokeinterface #164,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #124                // class java/util/Optional
      13: areturn

  public static java.util.Optional<io.fluxcapacitor.javaclient.tracking.handling.HandleSelf> getHandleSelfAnnotation(java.lang.Class<?>);
    Code:
       0: getstatic     #169                // Field handleSelfCache:Ljava/util/function/Function;
       3: aload_0
       4: invokeinterface #173,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #124                // class java/util/Optional
      12: areturn

  public static <T> io.fluxcapacitor.common.MemoizingSupplier<T> memoize(java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: invokestatic  #177                // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Supplier;)Lio/fluxcapacitor/common/MemoizingSupplier;
       4: areturn

  public static <K, V> io.fluxcapacitor.common.MemoizingFunction<K, V> memoize(java.util.function.Function<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #183                // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
       4: areturn

  public static <T, U, R> io.fluxcapacitor.common.MemoizingBiFunction<T, U, R> memoize(java.util.function.BiFunction<T, U, R>);
    Code:
       0: aload_0
       1: invokestatic  #186                // Method io/fluxcapacitor/common/ObjectUtils.memoize:(Ljava/util/function/BiFunction;)Lio/fluxcapacitor/common/MemoizingBiFunction;
       4: areturn

  public static <T> io.fluxcapacitor.common.MemoizingSupplier<T> memoize(java.util.function.Supplier<T>, java.time.Duration);
    Code:
       0: new           #189                // class io/fluxcapacitor/common/MemoizingSupplier
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #191,  0            // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      11: invokespecial #194                // Method io/fluxcapacitor/common/MemoizingSupplier."<init>":(Ljava/util/function/Supplier;Ljava/time/Duration;Ljava/util/function/Supplier;)V
      14: areturn

  public static <K, V> io.fluxcapacitor.common.MemoizingFunction<K, V> memoize(java.util.function.Function<K, V>, java.time.Duration);
    Code:
       0: new           #197                // class io/fluxcapacitor/common/MemoizingFunction
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #191,  0            // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      11: invokespecial #199                // Method io/fluxcapacitor/common/MemoizingFunction."<init>":(Ljava/util/function/Function;Ljava/time/Duration;Ljava/util/function/Supplier;)V
      14: areturn

  public static <T, U, R> io.fluxcapacitor.common.MemoizingBiFunction<T, U, R> memoize(java.util.function.BiFunction<T, U, R>, java.time.Duration);
    Code:
       0: new           #202                // class io/fluxcapacitor/common/MemoizingBiFunction
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #191,  0            // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      11: invokespecial #204                // Method io/fluxcapacitor/common/MemoizingBiFunction."<init>":(Ljava/util/function/BiFunction;Ljava/time/Duration;Ljava/util/function/Supplier;)V
      14: areturn

  private static java.lang.Boolean lambda$isTrackingHandler$4(io.fluxcapacitor.javaclient.tracking.handling.LocalHandler);
    Code:
       0: aload_0
       1: invokeinterface #207,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/LocalHandler.value:()Z
       6: ifeq          18
       9: aload_0
      10: invokeinterface #212,  1          // InterfaceMethod io/fluxcapacitor/javaclient/tracking/handling/LocalHandler.allowExternalMessages:()Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: invokestatic  #129                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn

  private static java.util.Optional lambda$static$3(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #215                // class io/fluxcapacitor/javaclient/tracking/handling/HandleSelf
       3: invokestatic  #217                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAnnotatedMethods:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
       6: invokeinterface #223,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      11: invokeinterface #229,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      16: invokedynamic #235,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      21: invokevirtual #123                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      24: areturn

  private static io.fluxcapacitor.javaclient.tracking.handling.HandleSelf lambda$static$2(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: ldc           #215                // class io/fluxcapacitor/javaclient/tracking/handling/HandleSelf
       3: invokevirtual #236                // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #215                // class io/fluxcapacitor/javaclient/tracking/handling/HandleSelf
       9: areturn

  private static java.util.Optional lambda$static$1(java.lang.Class, java.lang.reflect.Executable);
    Code:
       0: aload_1
       1: ldc           #208                // class io/fluxcapacitor/javaclient/tracking/handling/LocalHandler
       3: invokestatic  #242                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAnnotation:(Ljava/lang/reflect/Executable;Ljava/lang/Class;)Ljava/util/Optional;
       6: aload_0
       7: invokedynamic #245,  0            // InvokeDynamic #4:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      12: invokevirtual #248                // Method java/util/Optional.or:(Ljava/util/function/Supplier;)Ljava/util/Optional;
      15: areturn

  private static java.util.Optional lambda$static$0(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #208                // class io/fluxcapacitor/javaclient/tracking/handling/LocalHandler
       3: invokestatic  #252                // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getTypeAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #208                // class io/fluxcapacitor/javaclient/tracking/handling/LocalHandler
       9: invokestatic  #256                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: areturn

  static {};
    Code:
       0: ldc           #73                 // class io/fluxcapacitor/javaclient/common/ClientUtils
       2: invokestatic  #260                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #72                 // Field log:Lorg/slf4j/Logger;
       8: invokedynamic #266,  0            // InvokeDynamic #5:apply:()Ljava/util/function/BiFunction;
      13: invokestatic  #269                // Method memoize:(Ljava/util/function/BiFunction;)Lio/fluxcapacitor/common/MemoizingBiFunction;
      16: putstatic     #160                // Field localHandlerCache:Ljava/util/function/BiFunction;
      19: invokedynamic #270,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      24: invokestatic  #271                // Method memoize:(Ljava/util/function/Function;)Lio/fluxcapacitor/common/MemoizingFunction;
      27: putstatic     #169                // Field handleSelfCache:Ljava/util/function/Function;
      30: return
}
