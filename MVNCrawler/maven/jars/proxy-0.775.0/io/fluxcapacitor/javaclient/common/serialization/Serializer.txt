Compiled from "Serializer.java"
public interface io.fluxcapacitor.javaclient.common.serialization.Serializer extends io.fluxcapacitor.javaclient.common.serialization.ContentFilter {
  public default io.fluxcapacitor.common.api.Data<byte[]> serialize(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokeinterface #1,  3            // InterfaceMethod serialize:(Ljava/lang/Object;Ljava/lang/String;)Lio/fluxcapacitor/common/api/Data;
       8: areturn

  public abstract io.fluxcapacitor.common.api.Data<byte[]> serialize(java.lang.Object, java.lang.String);

  public default <T> T deserialize(io.fluxcapacitor.common.api.Data<byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #7                  // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
       5: iconst_1
       6: invokeinterface #13,  3           // InterfaceMethod deserialize:(Ljava/util/stream/Stream;Z)Ljava/util/stream/Stream;
      11: invokedynamic #17,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      16: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      21: invokeinterface #25,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      26: astore_2
      27: aload_2
      28: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      33: iconst_1
      34: if_icmpeq     62
      37: new           #35                 // class io/fluxcapacitor/javaclient/common/serialization/DeserializationException
      40: dup
      41: ldc           #37                 // String Invalid deserialization result for a \'%s\'. Expected a single object but got %s
      43: iconst_2
      44: anewarray     #39                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_1
      50: aastore
      51: dup
      52: iconst_1
      53: aload_2
      54: aastore
      55: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      58: invokespecial #47                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializationException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_2
      63: iconst_0
      64: invokeinterface #51,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      69: areturn

  public abstract <I extends io.fluxcapacitor.common.api.SerializedObject<byte[], I>> java.util.stream.Stream<io.fluxcapacitor.javaclient.common.serialization.DeserializingObject<byte[], I>> deserialize(java.util.stream.Stream<I>, boolean);

  public default java.util.stream.Stream<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> deserializeMessages(java.util.stream.Stream<io.fluxcapacitor.common.api.SerializedMessage>, io.fluxcapacitor.common.MessageType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokeinterface #55,  4           // InterfaceMethod deserializeMessages:(Ljava/util/stream/Stream;Lio/fluxcapacitor/common/MessageType;Z)Ljava/util/stream/Stream;
       9: areturn

  public default java.util.stream.Stream<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> deserializeMessages(java.util.stream.Stream<io.fluxcapacitor.common.api.SerializedMessage>, io.fluxcapacitor.common.MessageType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_3
       3: invokeinterface #13,  3           // InterfaceMethod deserialize:(Ljava/util/stream/Stream;Z)Ljava/util/stream/Stream;
       8: aload_2
       9: invokedynamic #59,  0             // InvokeDynamic #1:apply:(Lio/fluxcapacitor/common/MessageType;)Ljava/util/function/Function;
      14: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: areturn

  public abstract <V> V convert(java.lang.Object, java.lang.Class<V>);

  public abstract <V> V clone(java.lang.Object);

  public abstract io.fluxcapacitor.javaclient.common.serialization.Serializer registerTypeCaster(java.lang.String, java.lang.String);

  public abstract java.lang.String upcastType(java.lang.String);

  public abstract java.lang.Object downcast(java.lang.Object, int);

  public abstract java.lang.Object downcast(io.fluxcapacitor.common.api.Data<?>, int);

  private static io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage lambda$deserializeMessages$1(io.fluxcapacitor.common.MessageType, io.fluxcapacitor.javaclient.common.serialization.DeserializingObject);
    Code:
       0: new           #62                 // class io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #64                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage."<init>":(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingObject;Lio/fluxcapacitor/common/MessageType;)V
       9: areturn

  private static java.lang.Object lambda$deserialize$0(io.fluxcapacitor.javaclient.common.serialization.DeserializingObject);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingObject.getPayload:()Ljava/lang/Object;
       4: areturn
}
