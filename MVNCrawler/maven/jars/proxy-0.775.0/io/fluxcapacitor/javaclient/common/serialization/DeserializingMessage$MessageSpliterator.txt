Compiled from "DeserializingMessage.java"
public class io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage$MessageSpliterator extends java.util.Spliterators$AbstractSpliterator<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> {
  private final java.util.Spliterator<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage> upStream;

  public io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage$MessageSpliterator(java.util.Spliterator<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  1            // InterfaceMethod java/util/Spliterator.estimateSize:()J
       7: aload_1
       8: invokeinterface #7,  1            // InterfaceMethod java/util/Spliterator.characteristics:()I
      13: invokespecial #11                 // Method java/util/Spliterators$AbstractSpliterator."<init>":(JI)V
      16: aload_0
      17: aload_1
      18: putfield      #17                 // Field upStream:Ljava/util/Spliterator;
      21: return

  public boolean tryAdvance(java.util.function.Consumer<? super io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage>);
    Code:
       0: aload_0
       1: getfield      #17                 // Field upStream:Ljava/util/Spliterator;
       4: aload_1
       5: invokedynamic #23,  0             // InvokeDynamic #0:accept:(Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
      10: invokeinterface #27,  2           // InterfaceMethod java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z
      15: istore_2
      16: goto          27
      19: astore_3
      20: aload_0
      21: aload_3
      22: invokevirtual #33                 // Method onBatchCompletion:(Ljava/lang/Throwable;)V
      25: aload_3
      26: athrow
      27: iload_2
      28: ifne          42
      31: invokestatic  #37                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getCurrent:()Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;
      34: ifnonnull     42
      37: aload_0
      38: aconst_null
      39: invokevirtual #33                 // Method onBatchCompletion:(Ljava/lang/Throwable;)V
      42: iload_2
      43: ireturn
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/Throwable

  protected void onBatchCompletion(java.lang.Throwable);
    Code:
       0: getstatic     #43                 // Field io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.batchCompletionHandlers:Ljava/lang/ThreadLocal;
       3: invokevirtual #47                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #53                 // class java/util/Set
       9: invokestatic  #55                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: aload_1
      13: invokedynamic #61,  0             // InvokeDynamic #1:accept:(Ljava/lang/Throwable;)Ljava/util/function/Consumer;
      18: invokevirtual #64                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      21: getstatic     #68                 // Field io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.batchResources:Ljava/lang/ThreadLocal;
      24: invokevirtual #71                 // Method java/lang/ThreadLocal.remove:()V
      27: getstatic     #43                 // Field io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.batchCompletionHandlers:Ljava/lang/ThreadLocal;
      30: invokevirtual #71                 // Method java/lang/ThreadLocal.remove:()V
      33: goto          51
      36: astore_2
      37: getstatic     #68                 // Field io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.batchResources:Ljava/lang/ThreadLocal;
      40: invokevirtual #71                 // Method java/lang/ThreadLocal.remove:()V
      43: getstatic     #43                 // Field io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.batchCompletionHandlers:Ljava/lang/ThreadLocal;
      46: invokevirtual #71                 // Method java/lang/ThreadLocal.remove:()V
      49: aload_2
      50: athrow
      51: return
    Exception table:
       from    to  target type
           0    21    36   any

  private static void lambda$onBatchCompletion$2(java.lang.Throwable, java.util.Set);
    Code:
       0: getstatic     #43                 // Field io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.batchCompletionHandlers:Ljava/lang/ThreadLocal;
       3: invokevirtual #71                 // Method java/lang/ThreadLocal.remove:()V
       6: aload_1
       7: aload_0
       8: invokedynamic #75,  0             // InvokeDynamic #2:accept:(Ljava/lang/Throwable;)Ljava/util/function/Consumer;
      13: invokeinterface #76,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      18: return

  private static void lambda$onBatchCompletion$1(java.lang.Throwable, java.util.function.Consumer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #79,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
       7: return

  private static void lambda$tryAdvance$0(java.util.function.Consumer, io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: invokestatic  #37                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getCurrent:()Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;
       3: astore_2
       4: getstatic     #84                 // Field io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.current:Ljava/lang/ThreadLocal;
       7: aload_1
       8: invokevirtual #87                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      11: aload_0
      12: aload_1
      13: invokeinterface #79,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      18: getstatic     #84                 // Field io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.current:Ljava/lang/ThreadLocal;
      21: aload_2
      22: invokevirtual #87                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      25: goto          38
      28: astore_3
      29: getstatic     #84                 // Field io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.current:Ljava/lang/ThreadLocal;
      32: aload_2
      33: invokevirtual #87                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      36: aload_3
      37: athrow
      38: return
    Exception table:
       from    to  target type
           4    18    28   any
}
