Compiled from "MessageFormatter.java"
public interface io.fluxcapacitor.javaclient.common.serialization.MessageFormatter extends java.util.function.Function<io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, java.lang.String> {
  public static final io.fluxcapacitor.javaclient.common.serialization.MessageFormatter DEFAULT;

  private static java.lang.String lambda$static$2(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.isDeserialized:()Z
       4: ifeq          40
       7: aload_0
       8: invokevirtual #7                  // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getPayload:()Ljava/lang/Object;
      11: ldc           #11                 // class io/fluxcapacitor/javaclient/publishing/routing/RoutingKey
      13: invokestatic  #13                 // Method io/fluxcapacitor/common/reflection/ReflectionUtils.getAnnotatedPropertyValue:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/Optional;
      16: aload_0
      17: invokedynamic #19,  0             // InvokeDynamic #0:apply:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/function/Function;
      22: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      25: aload_0
      26: invokedynamic #29,  0             // InvokeDynamic #1:get:(Lio/fluxcapacitor/javaclient/common/serialization/DeserializingMessage;)Ljava/util/function/Supplier;
      31: invokevirtual #33                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      34: checkcast     #37                 // class java/lang/String
      37: goto          44
      40: aload_0
      41: invokevirtual #39                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getType:()Ljava/lang/String;
      44: areturn

  private static java.lang.String lambda$static$1(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getPayloadClass:()Ljava/lang/Class;
       4: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn
       8: astore_1
       9: aload_0
      10: invokevirtual #39                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getType:()Ljava/lang/String;
      13: areturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  private static java.lang.String lambda$static$0(io.fluxcapacitor.javaclient.common.serialization.DeserializingMessage, java.lang.Object);
    Code:
       0: ldc           #54                 // String %s (routing key: %s)
       2: iconst_2
       3: anewarray     #56                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #43                 // Method io/fluxcapacitor/javaclient/common/serialization/DeserializingMessage.getPayloadClass:()Ljava/lang/Class;
      12: invokevirtual #47                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_1
      19: aastore
      20: invokestatic  #58                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: areturn

  static {};
    Code:
       0: invokedynamic #62,  0             // InvokeDynamic #2:apply:()Lio/fluxcapacitor/javaclient/common/serialization/MessageFormatter;
       5: putstatic     #65                 // Field DEFAULT:Lio/fluxcapacitor/javaclient/common/serialization/MessageFormatter;
       8: return
}
